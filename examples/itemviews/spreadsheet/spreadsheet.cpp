begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QPrinter>
end_include
begin_include
include|#
directive|include
file|<QPrintDialog>
end_include
begin_include
include|#
directive|include
file|<QPrintPreviewDialog>
end_include
begin_include
include|#
directive|include
file|"spreadsheet.h"
end_include
begin_include
include|#
directive|include
file|"spreadsheetdelegate.h"
end_include
begin_include
include|#
directive|include
file|"spreadsheetitem.h"
end_include
begin_include
include|#
directive|include
file|"printview.h"
end_include
begin_constructor
DECL|function|SpreadSheet
name|SpreadSheet
operator|::
name|SpreadSheet
parameter_list|(
name|int
name|rows
parameter_list|,
name|int
name|cols
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
block|{
name|addToolBar
argument_list|(
name|toolBar
operator|=
operator|new
name|QToolBar
argument_list|()
argument_list|)
expr_stmt|;
name|formulaInput
operator|=
operator|new
name|QLineEdit
argument_list|()
expr_stmt|;
name|cellLabel
operator|=
operator|new
name|QLabel
argument_list|(
name|toolBar
argument_list|)
expr_stmt|;
name|cellLabel
operator|->
name|setMinimumSize
argument_list|(
literal|80
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|toolBar
operator|->
name|addWidget
argument_list|(
name|cellLabel
argument_list|)
expr_stmt|;
name|toolBar
operator|->
name|addWidget
argument_list|(
name|formulaInput
argument_list|)
expr_stmt|;
name|table
operator|=
operator|new
name|QTableWidget
argument_list|(
name|rows
argument_list|,
name|cols
argument_list|,
name|this
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|cols
condition|;
operator|++
name|c
control|)
block|{
name|QString
name|character
argument_list|(
name|QChar
argument_list|(
literal|'A'
operator|+
name|c
argument_list|)
argument_list|)
decl_stmt|;
name|table
operator|->
name|setHorizontalHeaderItem
argument_list|(
name|c
argument_list|,
operator|new
name|QTableWidgetItem
argument_list|(
name|character
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|table
operator|->
name|setItemPrototype
argument_list|(
name|table
operator|->
name|item
argument_list|(
name|rows
operator|-
literal|1
argument_list|,
name|cols
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItemDelegate
argument_list|(
operator|new
name|SpreadSheetDelegate
argument_list|()
argument_list|)
expr_stmt|;
name|createActions
argument_list|()
expr_stmt|;
name|updateColor
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|setupMenuBar
argument_list|()
expr_stmt|;
name|setupContents
argument_list|()
expr_stmt|;
name|setupContextMenu
argument_list|()
expr_stmt|;
name|setCentralWidget
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|statusBar
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|table
argument_list|,
name|SIGNAL
argument_list|(
name|currentItemChanged
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|,
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateStatus
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|table
argument_list|,
name|SIGNAL
argument_list|(
name|currentItemChanged
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|,
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateColor
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|table
argument_list|,
name|SIGNAL
argument_list|(
name|currentItemChanged
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|,
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateLineEdit
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|table
argument_list|,
name|SIGNAL
argument_list|(
name|itemChanged
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateStatus
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|formulaInput
argument_list|,
name|SIGNAL
argument_list|(
name|returnPressed
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|returnPressed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|table
argument_list|,
name|SIGNAL
argument_list|(
name|itemChanged
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateLineEdit
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Spreadsheet"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|createActions
name|void
name|SpreadSheet
operator|::
name|createActions
parameter_list|()
block|{
name|cell_sumAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Sum"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|cell_sumAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|actionSum
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cell_addAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Add"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|cell_addAction
operator|->
name|setShortcut
argument_list|(
name|Qt
operator|::
name|CTRL
operator||
name|Qt
operator|::
name|Key_Plus
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|cell_addAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|actionAdd
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cell_subAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Subtract"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|cell_subAction
operator|->
name|setShortcut
argument_list|(
name|Qt
operator|::
name|CTRL
operator||
name|Qt
operator|::
name|Key_Minus
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|cell_subAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|actionSubtract
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cell_mulAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Multiply"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|cell_mulAction
operator|->
name|setShortcut
argument_list|(
name|Qt
operator|::
name|CTRL
operator||
name|Qt
operator|::
name|Key_multiply
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|cell_mulAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|actionMultiply
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cell_divAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Divide"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|cell_divAction
operator|->
name|setShortcut
argument_list|(
name|Qt
operator|::
name|CTRL
operator||
name|Qt
operator|::
name|Key_division
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|cell_divAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|actionDivide
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fontAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Font..."
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|fontAction
operator|->
name|setShortcut
argument_list|(
name|Qt
operator|::
name|CTRL
operator||
name|Qt
operator|::
name|Key_F
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|fontAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|selectFont
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|colorAction
operator|=
operator|new
name|QAction
argument_list|(
name|QPixmap
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Background&Color..."
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|colorAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|selectColor
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|clearAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Clear"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|clearAction
operator|->
name|setShortcut
argument_list|(
name|Qt
operator|::
name|Key_Delete
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|clearAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|clear
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|aboutSpreadSheet
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"About Spreadsheet"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|aboutSpreadSheet
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|showAbout
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|exitAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"E&xit"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|exitAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|qApp
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|printAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Print"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|printAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|print
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|firstSeparator
operator|=
operator|new
name|QAction
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|firstSeparator
operator|->
name|setSeparator
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|secondSeparator
operator|=
operator|new
name|QAction
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|secondSeparator
operator|->
name|setSeparator
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupMenuBar
name|void
name|SpreadSheet
operator|::
name|setupMenuBar
parameter_list|()
block|{
name|QMenu
modifier|*
name|fileMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
decl_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|printAction
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|exitAction
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|cellMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Cell"
argument_list|)
argument_list|)
decl_stmt|;
name|cellMenu
operator|->
name|addAction
argument_list|(
name|cell_addAction
argument_list|)
expr_stmt|;
name|cellMenu
operator|->
name|addAction
argument_list|(
name|cell_subAction
argument_list|)
expr_stmt|;
name|cellMenu
operator|->
name|addAction
argument_list|(
name|cell_mulAction
argument_list|)
expr_stmt|;
name|cellMenu
operator|->
name|addAction
argument_list|(
name|cell_divAction
argument_list|)
expr_stmt|;
name|cellMenu
operator|->
name|addAction
argument_list|(
name|cell_sumAction
argument_list|)
expr_stmt|;
name|cellMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|cellMenu
operator|->
name|addAction
argument_list|(
name|colorAction
argument_list|)
expr_stmt|;
name|cellMenu
operator|->
name|addAction
argument_list|(
name|fontAction
argument_list|)
expr_stmt|;
name|menuBar
argument_list|()
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|QMenu
modifier|*
name|aboutMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Help"
argument_list|)
argument_list|)
decl_stmt|;
name|aboutMenu
operator|->
name|addAction
argument_list|(
name|aboutSpreadSheet
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateStatus
name|void
name|SpreadSheet
operator|::
name|updateStatus
parameter_list|(
name|QTableWidgetItem
modifier|*
name|item
parameter_list|)
block|{
if|if
condition|(
name|item
operator|&&
name|item
operator|==
name|table
operator|->
name|currentItem
argument_list|()
condition|)
block|{
name|statusBar
argument_list|()
operator|->
name|showMessage
argument_list|(
name|item
operator|->
name|data
argument_list|(
name|Qt
operator|::
name|StatusTipRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|cellLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Cell: (%1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|encode_pos
argument_list|(
name|table
operator|->
name|row
argument_list|(
name|item
argument_list|)
argument_list|,
name|table
operator|->
name|column
argument_list|(
name|item
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|updateColor
name|void
name|SpreadSheet
operator|::
name|updateColor
parameter_list|(
name|QTableWidgetItem
modifier|*
name|item
parameter_list|)
block|{
name|QPixmap
name|pix
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|)
decl_stmt|;
name|QColor
name|col
decl_stmt|;
if|if
condition|(
name|item
condition|)
name|col
operator|=
name|item
operator|->
name|backgroundColor
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|col
operator|.
name|isValid
argument_list|()
condition|)
name|col
operator|=
name|palette
argument_list|()
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
expr_stmt|;
name|QPainter
name|pt
argument_list|(
operator|&
name|pix
argument_list|)
decl_stmt|;
name|pt
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
name|col
argument_list|)
expr_stmt|;
name|QColor
name|lighter
init|=
name|col
operator|.
name|light
argument_list|()
decl_stmt|;
name|pt
operator|.
name|setPen
argument_list|(
name|lighter
argument_list|)
expr_stmt|;
name|QPoint
name|lightFrame
index|[]
init|=
block|{
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|15
argument_list|)
block|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
block|,
name|QPoint
argument_list|(
literal|15
argument_list|,
literal|0
argument_list|)
block|}
decl_stmt|;
name|pt
operator|.
name|drawPolyline
argument_list|(
name|lightFrame
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|pt
operator|.
name|setPen
argument_list|(
name|col
operator|.
name|dark
argument_list|()
argument_list|)
expr_stmt|;
name|QPoint
name|darkFrame
index|[]
init|=
block|{
name|QPoint
argument_list|(
literal|1
argument_list|,
literal|15
argument_list|)
block|,
name|QPoint
argument_list|(
literal|15
argument_list|,
literal|15
argument_list|)
block|,
name|QPoint
argument_list|(
literal|15
argument_list|,
literal|1
argument_list|)
block|}
decl_stmt|;
name|pt
operator|.
name|drawPolyline
argument_list|(
name|darkFrame
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|pt
operator|.
name|end
argument_list|()
expr_stmt|;
name|colorAction
operator|->
name|setIcon
argument_list|(
name|pix
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateLineEdit
name|void
name|SpreadSheet
operator|::
name|updateLineEdit
parameter_list|(
name|QTableWidgetItem
modifier|*
name|item
parameter_list|)
block|{
if|if
condition|(
name|item
operator|!=
name|table
operator|->
name|currentItem
argument_list|()
condition|)
return|return;
if|if
condition|(
name|item
condition|)
name|formulaInput
operator|->
name|setText
argument_list|(
name|item
operator|->
name|data
argument_list|(
name|Qt
operator|::
name|EditRole
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|formulaInput
operator|->
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|returnPressed
name|void
name|SpreadSheet
operator|::
name|returnPressed
parameter_list|()
block|{
name|QString
name|text
init|=
name|formulaInput
operator|->
name|text
argument_list|()
decl_stmt|;
name|int
name|row
init|=
name|table
operator|->
name|currentRow
argument_list|()
decl_stmt|;
name|int
name|col
init|=
name|table
operator|->
name|currentColumn
argument_list|()
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|item
init|=
name|table
operator|->
name|item
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|item
condition|)
name|table
operator|->
name|setItem
argument_list|(
name|row
argument_list|,
name|col
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
name|text
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|item
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|EditRole
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|table
operator|->
name|viewport
argument_list|()
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectColor
name|void
name|SpreadSheet
operator|::
name|selectColor
parameter_list|()
block|{
name|QTableWidgetItem
modifier|*
name|item
init|=
name|table
operator|->
name|currentItem
argument_list|()
decl_stmt|;
name|QColor
name|col
init|=
name|item
condition|?
name|item
operator|->
name|backgroundColor
argument_list|()
else|:
name|table
operator|->
name|palette
argument_list|()
operator|.
name|base
argument_list|()
operator|.
name|color
argument_list|()
decl_stmt|;
name|col
operator|=
name|QColorDialog
operator|::
name|getColor
argument_list|(
name|col
argument_list|,
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|col
operator|.
name|isValid
argument_list|()
condition|)
return|return;
name|QList
argument_list|<
name|QTableWidgetItem
modifier|*
argument_list|>
name|selected
init|=
name|table
operator|->
name|selectedItems
argument_list|()
decl_stmt|;
if|if
condition|(
name|selected
operator|.
name|count
argument_list|()
operator|==
literal|0
condition|)
return|return;
foreach|foreach
control|(
name|QTableWidgetItem
modifier|*
name|i
decl|,
name|selected
control|)
if|if
condition|(
name|i
condition|)
name|i
operator|->
name|setBackgroundColor
argument_list|(
name|col
argument_list|)
expr_stmt|;
name|updateColor
argument_list|(
name|table
operator|->
name|currentItem
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectFont
name|void
name|SpreadSheet
operator|::
name|selectFont
parameter_list|()
block|{
name|QList
argument_list|<
name|QTableWidgetItem
modifier|*
argument_list|>
name|selected
init|=
name|table
operator|->
name|selectedItems
argument_list|()
decl_stmt|;
if|if
condition|(
name|selected
operator|.
name|count
argument_list|()
operator|==
literal|0
condition|)
return|return;
name|bool
name|ok
init|=
literal|false
decl_stmt|;
name|QFont
name|fnt
init|=
name|QFontDialog
operator|::
name|getFont
argument_list|(
operator|&
name|ok
argument_list|,
name|font
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ok
condition|)
return|return;
foreach|foreach
control|(
name|QTableWidgetItem
modifier|*
name|i
decl|,
name|selected
control|)
if|if
condition|(
name|i
condition|)
name|i
operator|->
name|setFont
argument_list|(
name|fnt
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|runInputDialog
name|bool
name|SpreadSheet
operator|::
name|runInputDialog
parameter_list|(
specifier|const
name|QString
modifier|&
name|title
parameter_list|,
specifier|const
name|QString
modifier|&
name|c1Text
parameter_list|,
specifier|const
name|QString
modifier|&
name|c2Text
parameter_list|,
specifier|const
name|QString
modifier|&
name|opText
parameter_list|,
specifier|const
name|QString
modifier|&
name|outText
parameter_list|,
name|QString
modifier|*
name|cell1
parameter_list|,
name|QString
modifier|*
name|cell2
parameter_list|,
name|QString
modifier|*
name|outCell
parameter_list|)
block|{
name|QStringList
name|rows
decl_stmt|,
name|cols
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|table
operator|->
name|columnCount
argument_list|()
condition|;
operator|++
name|c
control|)
name|cols
operator|<<
name|QChar
argument_list|(
literal|'A'
operator|+
name|c
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|table
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|r
control|)
name|rows
operator|<<
name|QString
operator|::
name|number
argument_list|(
literal|1
operator|+
name|r
argument_list|)
expr_stmt|;
name|QDialog
name|addDialog
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|addDialog
operator|.
name|setWindowTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|QGroupBox
name|group
argument_list|(
name|title
argument_list|,
operator|&
name|addDialog
argument_list|)
decl_stmt|;
name|group
operator|.
name|setMinimumSize
argument_list|(
literal|250
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QLabel
name|cell1Label
argument_list|(
name|c1Text
argument_list|,
operator|&
name|group
argument_list|)
decl_stmt|;
name|QComboBox
name|cell1RowInput
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|int
name|c1Row
decl_stmt|,
name|c1Col
decl_stmt|;
name|decode_pos
argument_list|(
operator|*
name|cell1
argument_list|,
operator|&
name|c1Row
argument_list|,
operator|&
name|c1Col
argument_list|)
expr_stmt|;
name|cell1RowInput
operator|.
name|addItems
argument_list|(
name|rows
argument_list|)
expr_stmt|;
name|cell1RowInput
operator|.
name|setCurrentIndex
argument_list|(
name|c1Row
argument_list|)
expr_stmt|;
name|QComboBox
name|cell1ColInput
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|cell1ColInput
operator|.
name|addItems
argument_list|(
name|cols
argument_list|)
expr_stmt|;
name|cell1ColInput
operator|.
name|setCurrentIndex
argument_list|(
name|c1Col
argument_list|)
expr_stmt|;
name|QLabel
name|operatorLabel
argument_list|(
name|opText
argument_list|,
operator|&
name|group
argument_list|)
decl_stmt|;
name|operatorLabel
operator|.
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignHCenter
argument_list|)
expr_stmt|;
name|QLabel
name|cell2Label
argument_list|(
name|c2Text
argument_list|,
operator|&
name|group
argument_list|)
decl_stmt|;
name|QComboBox
name|cell2RowInput
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|int
name|c2Row
decl_stmt|,
name|c2Col
decl_stmt|;
name|decode_pos
argument_list|(
operator|*
name|cell2
argument_list|,
operator|&
name|c2Row
argument_list|,
operator|&
name|c2Col
argument_list|)
expr_stmt|;
name|cell2RowInput
operator|.
name|addItems
argument_list|(
name|rows
argument_list|)
expr_stmt|;
name|cell2RowInput
operator|.
name|setCurrentIndex
argument_list|(
name|c2Row
argument_list|)
expr_stmt|;
name|QComboBox
name|cell2ColInput
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|cell2ColInput
operator|.
name|addItems
argument_list|(
name|cols
argument_list|)
expr_stmt|;
name|cell2ColInput
operator|.
name|setCurrentIndex
argument_list|(
name|c2Col
argument_list|)
expr_stmt|;
name|QLabel
name|equalsLabel
argument_list|(
literal|"="
argument_list|,
operator|&
name|group
argument_list|)
decl_stmt|;
name|equalsLabel
operator|.
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignHCenter
argument_list|)
expr_stmt|;
name|QLabel
name|outLabel
argument_list|(
name|outText
argument_list|,
operator|&
name|group
argument_list|)
decl_stmt|;
name|QComboBox
name|outRowInput
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|int
name|outRow
decl_stmt|,
name|outCol
decl_stmt|;
name|decode_pos
argument_list|(
operator|*
name|outCell
argument_list|,
operator|&
name|outRow
argument_list|,
operator|&
name|outCol
argument_list|)
expr_stmt|;
name|outRowInput
operator|.
name|addItems
argument_list|(
name|rows
argument_list|)
expr_stmt|;
name|outRowInput
operator|.
name|setCurrentIndex
argument_list|(
name|outRow
argument_list|)
expr_stmt|;
name|QComboBox
name|outColInput
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|outColInput
operator|.
name|addItems
argument_list|(
name|cols
argument_list|)
expr_stmt|;
name|outColInput
operator|.
name|setCurrentIndex
argument_list|(
name|outCol
argument_list|)
expr_stmt|;
name|QPushButton
name|cancelButton
argument_list|(
name|tr
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|,
operator|&
name|addDialog
argument_list|)
decl_stmt|;
name|connect
argument_list|(
operator|&
name|cancelButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
operator|&
name|addDialog
argument_list|,
name|SLOT
argument_list|(
name|reject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QPushButton
name|okButton
argument_list|(
name|tr
argument_list|(
literal|"OK"
argument_list|)
argument_list|,
operator|&
name|addDialog
argument_list|)
decl_stmt|;
name|okButton
operator|.
name|setDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|okButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
operator|&
name|addDialog
argument_list|,
name|SLOT
argument_list|(
name|accept
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|buttonsLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|buttonsLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|buttonsLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|okButton
argument_list|)
expr_stmt|;
name|buttonsLayout
operator|->
name|addSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|buttonsLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|cancelButton
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|dialogLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|addDialog
argument_list|)
decl_stmt|;
name|dialogLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|group
argument_list|)
expr_stmt|;
name|dialogLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|dialogLayout
operator|->
name|addItem
argument_list|(
name|buttonsLayout
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|cell1Layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|cell1Layout
operator|->
name|addWidget
argument_list|(
operator|&
name|cell1Label
argument_list|)
expr_stmt|;
name|cell1Layout
operator|->
name|addSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|cell1Layout
operator|->
name|addWidget
argument_list|(
operator|&
name|cell1ColInput
argument_list|)
expr_stmt|;
name|cell1Layout
operator|->
name|addSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|cell1Layout
operator|->
name|addWidget
argument_list|(
operator|&
name|cell1RowInput
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|cell2Layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|cell2Layout
operator|->
name|addWidget
argument_list|(
operator|&
name|cell2Label
argument_list|)
expr_stmt|;
name|cell2Layout
operator|->
name|addSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|cell2Layout
operator|->
name|addWidget
argument_list|(
operator|&
name|cell2ColInput
argument_list|)
expr_stmt|;
name|cell2Layout
operator|->
name|addSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|cell2Layout
operator|->
name|addWidget
argument_list|(
operator|&
name|cell2RowInput
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|outLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|outLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|outLabel
argument_list|)
expr_stmt|;
name|outLayout
operator|->
name|addSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|outLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|outColInput
argument_list|)
expr_stmt|;
name|outLayout
operator|->
name|addSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|outLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|outRowInput
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|vLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
operator|&
name|group
argument_list|)
decl_stmt|;
name|vLayout
operator|->
name|addItem
argument_list|(
name|cell1Layout
argument_list|)
expr_stmt|;
name|vLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|operatorLabel
argument_list|)
expr_stmt|;
name|vLayout
operator|->
name|addItem
argument_list|(
name|cell2Layout
argument_list|)
expr_stmt|;
name|vLayout
operator|->
name|addWidget
argument_list|(
operator|&
name|equalsLabel
argument_list|)
expr_stmt|;
name|vLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|vLayout
operator|->
name|addItem
argument_list|(
name|outLayout
argument_list|)
expr_stmt|;
if|if
condition|(
name|addDialog
operator|.
name|exec
argument_list|()
condition|)
block|{
operator|*
name|cell1
operator|=
name|cell1ColInput
operator|.
name|currentText
argument_list|()
operator|+
name|cell1RowInput
operator|.
name|currentText
argument_list|()
expr_stmt|;
operator|*
name|cell2
operator|=
name|cell2ColInput
operator|.
name|currentText
argument_list|()
operator|+
name|cell2RowInput
operator|.
name|currentText
argument_list|()
expr_stmt|;
operator|*
name|outCell
operator|=
name|outColInput
operator|.
name|currentText
argument_list|()
operator|+
name|outRowInput
operator|.
name|currentText
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|actionSum
name|void
name|SpreadSheet
operator|::
name|actionSum
parameter_list|()
block|{
name|int
name|row_first
init|=
literal|0
decl_stmt|;
name|int
name|row_last
init|=
literal|0
decl_stmt|;
name|int
name|row_cur
init|=
literal|0
decl_stmt|;
name|int
name|col_first
init|=
literal|0
decl_stmt|;
name|int
name|col_last
init|=
literal|0
decl_stmt|;
name|int
name|col_cur
init|=
literal|0
decl_stmt|;
name|QList
argument_list|<
name|QTableWidgetItem
modifier|*
argument_list|>
name|selected
init|=
name|table
operator|->
name|selectedItems
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|selected
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QTableWidgetItem
modifier|*
name|first
init|=
name|selected
operator|.
name|first
argument_list|()
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|last
init|=
name|selected
operator|.
name|last
argument_list|()
decl_stmt|;
name|row_first
operator|=
name|table
operator|->
name|row
argument_list|(
name|first
argument_list|)
expr_stmt|;
name|row_last
operator|=
name|table
operator|->
name|row
argument_list|(
name|last
argument_list|)
expr_stmt|;
name|col_first
operator|=
name|table
operator|->
name|column
argument_list|(
name|first
argument_list|)
expr_stmt|;
name|col_last
operator|=
name|table
operator|->
name|column
argument_list|(
name|last
argument_list|)
expr_stmt|;
block|}
name|QTableWidgetItem
modifier|*
name|current
init|=
name|table
operator|->
name|currentItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|current
condition|)
block|{
name|row_cur
operator|=
name|table
operator|->
name|row
argument_list|(
name|current
argument_list|)
expr_stmt|;
name|col_cur
operator|=
name|table
operator|->
name|column
argument_list|(
name|current
argument_list|)
expr_stmt|;
block|}
name|QString
name|cell1
init|=
name|encode_pos
argument_list|(
name|row_first
argument_list|,
name|col_first
argument_list|)
decl_stmt|;
name|QString
name|cell2
init|=
name|encode_pos
argument_list|(
name|row_last
argument_list|,
name|col_last
argument_list|)
decl_stmt|;
name|QString
name|out
init|=
name|encode_pos
argument_list|(
name|row_cur
argument_list|,
name|col_cur
argument_list|)
decl_stmt|;
if|if
condition|(
name|runInputDialog
argument_list|(
name|tr
argument_list|(
literal|"Sum cells"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"First cell:"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Last cell:"
argument_list|)
argument_list|,
name|QString
argument_list|(
literal|"%1"
argument_list|)
operator|.
name|arg
argument_list|(
name|QChar
argument_list|(
literal|0x03a3
argument_list|)
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Output to:"
argument_list|)
argument_list|,
operator|&
name|cell1
argument_list|,
operator|&
name|cell2
argument_list|,
operator|&
name|out
argument_list|)
condition|)
block|{
name|int
name|row
decl_stmt|,
name|col
decl_stmt|;
name|decode_pos
argument_list|(
name|out
argument_list|,
operator|&
name|row
argument_list|,
operator|&
name|col
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"sum %1 %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|cell1
argument_list|,
name|cell2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|actionMath_helper
name|void
name|SpreadSheet
operator|::
name|actionMath_helper
parameter_list|(
specifier|const
name|QString
modifier|&
name|title
parameter_list|,
specifier|const
name|QString
modifier|&
name|op
parameter_list|)
block|{
name|QString
name|cell1
init|=
literal|"C1"
decl_stmt|;
name|QString
name|cell2
init|=
literal|"C2"
decl_stmt|;
name|QString
name|out
init|=
literal|"C3"
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|current
init|=
name|table
operator|->
name|currentItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|current
condition|)
name|out
operator|=
name|encode_pos
argument_list|(
name|table
operator|->
name|currentRow
argument_list|()
argument_list|,
name|table
operator|->
name|currentColumn
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|runInputDialog
argument_list|(
name|title
argument_list|,
name|tr
argument_list|(
literal|"Cell 1"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Cell 2"
argument_list|)
argument_list|,
name|op
argument_list|,
name|tr
argument_list|(
literal|"Output to:"
argument_list|)
argument_list|,
operator|&
name|cell1
argument_list|,
operator|&
name|cell2
argument_list|,
operator|&
name|out
argument_list|)
condition|)
block|{
name|int
name|row
decl_stmt|,
name|col
decl_stmt|;
name|decode_pos
argument_list|(
name|out
argument_list|,
operator|&
name|row
argument_list|,
operator|&
name|col
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"%1 %2 %3"
argument_list|)
operator|.
name|arg
argument_list|(
name|op
argument_list|,
name|cell1
argument_list|,
name|cell2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|actionAdd
name|void
name|SpreadSheet
operator|::
name|actionAdd
parameter_list|()
block|{
name|actionMath_helper
argument_list|(
name|tr
argument_list|(
literal|"Addition"
argument_list|)
argument_list|,
literal|"+"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|actionSubtract
name|void
name|SpreadSheet
operator|::
name|actionSubtract
parameter_list|()
block|{
name|actionMath_helper
argument_list|(
name|tr
argument_list|(
literal|"Subtraction"
argument_list|)
argument_list|,
literal|"-"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|actionMultiply
name|void
name|SpreadSheet
operator|::
name|actionMultiply
parameter_list|()
block|{
name|actionMath_helper
argument_list|(
name|tr
argument_list|(
literal|"Multiplication"
argument_list|)
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|actionDivide
name|void
name|SpreadSheet
operator|::
name|actionDivide
parameter_list|()
block|{
name|actionMath_helper
argument_list|(
name|tr
argument_list|(
literal|"Division"
argument_list|)
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|clear
name|void
name|SpreadSheet
operator|::
name|clear
parameter_list|()
block|{
foreach|foreach
control|(
name|QTableWidgetItem
modifier|*
name|i
decl|,
name|table
operator|->
name|selectedItems
argument_list|()
control|)
name|i
operator|->
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupContextMenu
name|void
name|SpreadSheet
operator|::
name|setupContextMenu
parameter_list|()
block|{
name|addAction
argument_list|(
name|cell_addAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|cell_subAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|cell_mulAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|cell_divAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|cell_sumAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|firstSeparator
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|colorAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|fontAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|secondSeparator
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|clearAction
argument_list|)
expr_stmt|;
name|setContextMenuPolicy
argument_list|(
name|Qt
operator|::
name|ActionsContextMenu
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupContents
name|void
name|SpreadSheet
operator|::
name|setupContents
parameter_list|()
block|{
name|QColor
name|titleBackground
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
decl_stmt|;
name|QFont
name|titleFont
init|=
name|table
operator|->
name|font
argument_list|()
decl_stmt|;
name|titleFont
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// column 0
name|table
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Item"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|titleBackground
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|->
name|setToolTip
argument_list|(
literal|"This column shows the purchased item/service"
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
operator|->
name|setFont
argument_list|(
name|titleFont
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"AirportBus"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|2
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Flight (Munich)"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Lunch"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|4
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Flight (LA)"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Taxi"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|6
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Dinner"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|7
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Hotel"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Flight (Oslo)"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Total:"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|)
operator|->
name|setFont
argument_list|(
name|titleFont
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
comment|// column 1
name|table
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Date"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|titleBackground
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|->
name|setToolTip
argument_list|(
literal|"This column shows the purchase date, double click to change"
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
operator|->
name|setFont
argument_list|(
name|titleFont
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"15/6/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"15/6/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"15/6/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"21/5/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"16/6/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|6
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"16/6/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|7
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"16/6/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|8
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"18/6/2006"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|9
argument_list|,
literal|1
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|9
argument_list|,
literal|1
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
comment|// column 2
name|table
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Price"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|titleBackground
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|->
name|setToolTip
argument_list|(
literal|"This column shows the price of the purchase"
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|->
name|setFont
argument_list|(
name|titleFont
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"150"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"2350"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"-14"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|4
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"980"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"5"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"120"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|7
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"300"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|8
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"1240"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|9
argument_list|,
literal|2
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|9
argument_list|,
literal|2
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
comment|// column 3
name|table
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Currency"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|titleBackground
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|->
name|setToolTip
argument_list|(
literal|"This column shows the currency"
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|->
name|setFont
argument_list|(
name|titleFont
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"NOK"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"NOK"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"EUR"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"EUR"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"USD"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|6
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"USD"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|7
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"USD"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|8
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"USD"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|9
argument_list|,
literal|3
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|9
argument_list|,
literal|3
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
comment|// column 4
name|table
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"Ex. Rate"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|titleBackground
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
operator|->
name|setToolTip
argument_list|(
literal|"This column shows the exchange rate to NOK"
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
operator|->
name|setFont
argument_list|(
name|titleFont
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"8"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|5
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|6
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|7
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|8
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"7"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|9
argument_list|,
literal|4
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|9
argument_list|,
literal|4
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
comment|// column 5
name|table
operator|->
name|setItem
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"NOK"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|titleBackground
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
operator|->
name|setToolTip
argument_list|(
literal|"This column shows the expenses in NOK"
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|)
operator|->
name|setFont
argument_list|(
name|titleFont
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C2 E2"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C3 E3"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C4 E4"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C5 E5"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C6 E6"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|6
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C7 E7"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|7
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C8 E8"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|8
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"* C9 E9"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|setItem
argument_list|(
literal|9
argument_list|,
literal|5
argument_list|,
operator|new
name|SpreadSheetItem
argument_list|(
literal|"sum F2 F9"
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|->
name|item
argument_list|(
literal|9
argument_list|,
literal|5
argument_list|)
operator|->
name|setBackgroundColor
argument_list|(
name|Qt
operator|::
name|lightGray
argument_list|)
expr_stmt|;
block|}
end_function
begin_decl_stmt
DECL|variable|htmlText
specifier|const
name|char
modifier|*
name|htmlText
init|=
literal|"<HTML>"
literal|"<p><b>This demo shows use of<c>QTableWidget</c> with custom handling for"
literal|" individual cells.</b></p>"
literal|"<p>Using a customized table item we make it possible to have dynamic"
literal|" output in different cells. The content that is implemented for this"
literal|" particular demo is:"
literal|"<ul>"
literal|"<li>Adding two cells.</li>"
literal|"<li>Subtracting one cell from another.</li>"
literal|"<li>Multiplying two cells.</li>"
literal|"<li>Dividing one cell with another.</li>"
literal|"<li>Summing the contents of an arbitrary number of cells.</li>"
literal|"</HTML>"
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|showAbout
name|void
name|SpreadSheet
operator|::
name|showAbout
parameter_list|()
block|{
name|QMessageBox
operator|::
name|about
argument_list|(
name|this
argument_list|,
literal|"About Spreadsheet"
argument_list|,
name|htmlText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|decode_pos
name|void
name|decode_pos
parameter_list|(
specifier|const
name|QString
modifier|&
name|pos
parameter_list|,
name|int
modifier|*
name|row
parameter_list|,
name|int
modifier|*
name|col
parameter_list|)
block|{
if|if
condition|(
name|pos
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
operator|*
name|col
operator|=
operator|-
literal|1
expr_stmt|;
operator|*
name|row
operator|=
operator|-
literal|1
expr_stmt|;
block|}
else|else
block|{
operator|*
name|col
operator|=
name|pos
operator|.
name|at
argument_list|(
literal|0
argument_list|)
operator|.
name|toLatin1
argument_list|()
operator|-
literal|'A'
expr_stmt|;
operator|*
name|row
operator|=
name|pos
operator|.
name|right
argument_list|(
name|pos
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
operator|.
name|toInt
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|encode_pos
name|QString
name|encode_pos
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|)
block|{
return|return
name|QString
argument_list|(
name|col
operator|+
literal|'A'
argument_list|)
operator|+
name|QString
operator|::
name|number
argument_list|(
name|row
operator|+
literal|1
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|print
name|void
name|SpreadSheet
operator|::
name|print
parameter_list|()
block|{
ifndef|#
directive|ifndef
name|QT_NO_PRINTER
name|QPrinter
name|printer
argument_list|(
name|QPrinter
operator|::
name|ScreenResolution
argument_list|)
decl_stmt|;
name|QPrintPreviewDialog
name|dlg
argument_list|(
operator|&
name|printer
argument_list|)
decl_stmt|;
name|PrintView
name|view
decl_stmt|;
name|view
operator|.
name|setModel
argument_list|(
name|table
operator|->
name|model
argument_list|()
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|dlg
argument_list|,
name|SIGNAL
argument_list|(
name|paintRequested
argument_list|(
name|QPrinter
operator|*
argument_list|)
argument_list|)
argument_list|,
operator|&
name|view
argument_list|,
name|SLOT
argument_list|(
name|print
argument_list|(
name|QPrinter
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|dlg
operator|.
name|exec
argument_list|()
expr_stmt|;
endif|#
directive|endif
block|}
end_function
end_unit
