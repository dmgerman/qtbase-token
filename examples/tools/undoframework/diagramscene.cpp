begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"diagramscene.h"
end_include
begin_include
include|#
directive|include
file|"diagramitem.h"
end_include
begin_constructor
DECL|function|DiagramScene
name|DiagramScene
operator|::
name|DiagramScene
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QGraphicsScene
argument_list|(
name|parent
argument_list|)
block|{
name|movingItem
operator|=
literal|0
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|mousePressEvent
name|void
name|DiagramScene
operator|::
name|mousePressEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|QPointF
name|mousePos
argument_list|(
name|event
operator|->
name|buttonDownScenePos
argument_list|(
name|Qt
operator|::
name|LeftButton
argument_list|)
operator|.
name|x
argument_list|()
argument_list|,
name|event
operator|->
name|buttonDownScenePos
argument_list|(
name|Qt
operator|::
name|LeftButton
argument_list|)
operator|.
name|y
argument_list|()
argument_list|)
decl_stmt|;
name|movingItem
operator|=
name|itemAt
argument_list|(
name|mousePos
operator|.
name|x
argument_list|()
argument_list|,
name|mousePos
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|movingItem
operator|!=
literal|0
operator|&&
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
condition|)
block|{
name|oldPos
operator|=
name|movingItem
operator|->
name|pos
argument_list|()
expr_stmt|;
block|}
name|clearSelection
argument_list|()
expr_stmt|;
name|QGraphicsScene
operator|::
name|mousePressEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mouseReleaseEvent
name|void
name|DiagramScene
operator|::
name|mouseReleaseEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|movingItem
operator|!=
literal|0
operator|&&
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
condition|)
block|{
if|if
condition|(
name|oldPos
operator|!=
name|movingItem
operator|->
name|pos
argument_list|()
condition|)
emit|emit
name|itemMoved
argument_list|(
name|qgraphicsitem_cast
argument_list|<
name|DiagramItem
operator|*
argument_list|>
argument_list|(
name|movingItem
argument_list|)
argument_list|,
name|oldPos
argument_list|)
emit|;
name|movingItem
operator|=
literal|0
expr_stmt|;
block|}
name|QGraphicsScene
operator|::
name|mouseReleaseEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
