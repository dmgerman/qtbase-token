begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_include
include|#
directive|include
file|"diagramscene.h"
end_include
begin_include
include|#
directive|include
file|"diagramitem.h"
end_include
begin_include
include|#
directive|include
file|"commands.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|MainWindow
name|MainWindow
operator|::
name|MainWindow
parameter_list|()
block|{
name|undoStack
operator|=
operator|new
name|QUndoStack
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|createActions
argument_list|()
expr_stmt|;
name|createMenus
argument_list|()
expr_stmt|;
name|createUndoView
argument_list|()
expr_stmt|;
name|diagramScene
operator|=
operator|new
name|DiagramScene
argument_list|()
expr_stmt|;
name|QBrush
name|pixmapBrush
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/cross.png"
argument_list|)
operator|.
name|scaled
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|)
argument_list|)
decl_stmt|;
name|diagramScene
operator|->
name|setBackgroundBrush
argument_list|(
name|pixmapBrush
argument_list|)
expr_stmt|;
name|diagramScene
operator|->
name|setSceneRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|500
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|diagramScene
argument_list|,
name|SIGNAL
argument_list|(
name|itemMoved
argument_list|(
name|DiagramItem
operator|*
argument_list|,
name|QPointF
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|itemMoved
argument_list|(
name|DiagramItem
operator|*
argument_list|,
name|QPointF
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
literal|"Undo Framework"
argument_list|)
expr_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
name|diagramScene
argument_list|)
decl_stmt|;
name|setCentralWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|resize
argument_list|(
literal|700
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|createUndoView
name|void
name|MainWindow
operator|::
name|createUndoView
parameter_list|()
block|{
name|undoView
operator|=
operator|new
name|QUndoView
argument_list|(
name|undoStack
argument_list|)
expr_stmt|;
name|undoView
operator|->
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Command List"
argument_list|)
argument_list|)
expr_stmt|;
name|undoView
operator|->
name|show
argument_list|()
expr_stmt|;
name|undoView
operator|->
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_QuitOnClose
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|createActions
name|void
name|MainWindow
operator|::
name|createActions
parameter_list|()
block|{
name|deleteAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Delete Item"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|deleteAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Del"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|deleteAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|deleteItem
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [2] //! [3]
comment|//! [3] //! [4]
name|addBoxAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Add&Box"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
comment|//! [4]
name|addBoxAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+O"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|addBoxAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|addBox
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addTriangleAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Add&Triangle"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addTriangleAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+T"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|addTriangleAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|addTriangle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [5]
name|undoAction
operator|=
name|undoStack
operator|->
name|createUndoAction
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"&Undo"
argument_list|)
argument_list|)
expr_stmt|;
name|undoAction
operator|->
name|setShortcuts
argument_list|(
name|QKeySequence
operator|::
name|Undo
argument_list|)
expr_stmt|;
name|redoAction
operator|=
name|undoStack
operator|->
name|createRedoAction
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"&Redo"
argument_list|)
argument_list|)
expr_stmt|;
name|redoAction
operator|->
name|setShortcuts
argument_list|(
name|QKeySequence
operator|::
name|Redo
argument_list|)
expr_stmt|;
comment|//! [5]
name|exitAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"E&xit"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|exitAction
operator|->
name|setShortcuts
argument_list|(
name|QKeySequence
operator|::
name|Quit
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|exitAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|aboutAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&About"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QKeySequence
argument_list|>
name|aboutShortcuts
decl_stmt|;
name|aboutShortcuts
operator|<<
name|tr
argument_list|(
literal|"Ctrl+A"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Ctrl+B"
argument_list|)
expr_stmt|;
name|aboutAction
operator|->
name|setShortcuts
argument_list|(
name|aboutShortcuts
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|aboutAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|about
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [6]
end_comment
begin_function
DECL|function|createMenus
name|void
name|MainWindow
operator|::
name|createMenus
parameter_list|()
block|{
comment|//! [6]
name|fileMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|exitAction
argument_list|)
expr_stmt|;
comment|//! [7]
name|editMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Edit"
argument_list|)
argument_list|)
expr_stmt|;
name|editMenu
operator|->
name|addAction
argument_list|(
name|undoAction
argument_list|)
expr_stmt|;
name|editMenu
operator|->
name|addAction
argument_list|(
name|redoAction
argument_list|)
expr_stmt|;
name|editMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|editMenu
operator|->
name|addAction
argument_list|(
name|deleteAction
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|editMenu
argument_list|,
name|SIGNAL
argument_list|(
name|aboutToShow
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|itemMenuAboutToShow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|editMenu
argument_list|,
name|SIGNAL
argument_list|(
name|aboutToHide
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|itemMenuAboutToHide
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [7]
name|itemMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Item"
argument_list|)
argument_list|)
expr_stmt|;
name|itemMenu
operator|->
name|addAction
argument_list|(
name|addBoxAction
argument_list|)
expr_stmt|;
name|itemMenu
operator|->
name|addAction
argument_list|(
name|addTriangleAction
argument_list|)
expr_stmt|;
name|helpMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&About"
argument_list|)
argument_list|)
expr_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|aboutAction
argument_list|)
expr_stmt|;
comment|//! [8]
block|}
end_function
begin_comment
comment|//! [8]
end_comment
begin_comment
comment|//! [9]
end_comment
begin_function
DECL|function|itemMoved
name|void
name|MainWindow
operator|::
name|itemMoved
parameter_list|(
name|DiagramItem
modifier|*
name|movedItem
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|oldPosition
parameter_list|)
block|{
name|undoStack
operator|->
name|push
argument_list|(
operator|new
name|MoveCommand
argument_list|(
name|movedItem
argument_list|,
name|oldPosition
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [9]
end_comment
begin_comment
comment|//! [10]
end_comment
begin_function
DECL|function|deleteItem
name|void
name|MainWindow
operator|::
name|deleteItem
parameter_list|()
block|{
if|if
condition|(
name|diagramScene
operator|->
name|selectedItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QUndoCommand
modifier|*
name|deleteCommand
init|=
operator|new
name|DeleteCommand
argument_list|(
name|diagramScene
argument_list|)
decl_stmt|;
name|undoStack
operator|->
name|push
argument_list|(
name|deleteCommand
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [10]
end_comment
begin_comment
comment|//! [11]
end_comment
begin_function
DECL|function|itemMenuAboutToHide
name|void
name|MainWindow
operator|::
name|itemMenuAboutToHide
parameter_list|()
block|{
name|deleteAction
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [11]
end_comment
begin_comment
comment|//! [12]
end_comment
begin_function
DECL|function|itemMenuAboutToShow
name|void
name|MainWindow
operator|::
name|itemMenuAboutToShow
parameter_list|()
block|{
name|deleteAction
operator|->
name|setEnabled
argument_list|(
operator|!
name|diagramScene
operator|->
name|selectedItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [12]
end_comment
begin_comment
comment|//! [13]
end_comment
begin_function
DECL|function|addBox
name|void
name|MainWindow
operator|::
name|addBox
parameter_list|()
block|{
name|QUndoCommand
modifier|*
name|addCommand
init|=
operator|new
name|AddCommand
argument_list|(
name|DiagramItem
operator|::
name|Box
argument_list|,
name|diagramScene
argument_list|)
decl_stmt|;
name|undoStack
operator|->
name|push
argument_list|(
name|addCommand
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [13]
end_comment
begin_comment
comment|//! [14]
end_comment
begin_function
DECL|function|addTriangle
name|void
name|MainWindow
operator|::
name|addTriangle
parameter_list|()
block|{
name|QUndoCommand
modifier|*
name|addCommand
init|=
operator|new
name|AddCommand
argument_list|(
name|DiagramItem
operator|::
name|Triangle
argument_list|,
name|diagramScene
argument_list|)
decl_stmt|;
name|undoStack
operator|->
name|push
argument_list|(
name|addCommand
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [14]
end_comment
begin_comment
comment|//! [15]
end_comment
begin_function
DECL|function|about
name|void
name|MainWindow
operator|::
name|about
parameter_list|()
block|{
name|QMessageBox
operator|::
name|about
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"About Undo"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"The<b>Undo</b> example demonstrates how to "
literal|"use Qt's undo framework."
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [15]
end_comment
end_unit
