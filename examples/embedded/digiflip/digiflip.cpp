begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_class
DECL|class|Digits
class|class
name|Digits
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
enum|enum
block|{
DECL|enumerator|Slide
name|Slide
block|,
DECL|enumerator|Flip
name|Flip
block|,
DECL|enumerator|Rotate
name|Rotate
block|}
enum|;
DECL|function|Digits
name|Digits
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_number
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_transition
argument_list|(
name|Slide
argument_list|)
block|{
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_OpaquePaintEvent
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoSystemBackground
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|connect
argument_list|(
operator|&
name|m_animator
argument_list|,
name|SIGNAL
argument_list|(
name|frameChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|update
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_animator
operator|.
name|setFrameRange
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|m_animator
operator|.
name|setDuration
argument_list|(
literal|600
argument_list|)
expr_stmt|;
name|m_animator
operator|.
name|setCurveShape
argument_list|(
name|QTimeLine
operator|::
name|EaseInOutCurve
argument_list|)
expr_stmt|;
block|}
DECL|function|setTransition
name|void
name|setTransition
parameter_list|(
name|int
name|tr
parameter_list|)
block|{
name|m_transition
operator|=
name|tr
expr_stmt|;
block|}
DECL|function|transition
name|int
name|transition
parameter_list|()
specifier|const
block|{
return|return
name|m_transition
return|;
block|}
DECL|function|setNumber
name|void
name|setNumber
parameter_list|(
name|int
name|n
parameter_list|)
block|{
if|if
condition|(
name|m_number
operator|!=
name|n
condition|)
block|{
name|m_number
operator|=
name|qBound
argument_list|(
literal|0
argument_list|,
name|n
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|preparePixmap
argument_list|()
expr_stmt|;
name|update
argument_list|()
expr_stmt|;
block|}
block|}
DECL|function|flipTo
name|void
name|flipTo
parameter_list|(
name|int
name|n
parameter_list|)
block|{
if|if
condition|(
name|m_number
operator|!=
name|n
condition|)
block|{
name|m_number
operator|=
name|qBound
argument_list|(
literal|0
argument_list|,
name|n
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|m_lastPixmap
operator|=
name|m_pixmap
expr_stmt|;
name|preparePixmap
argument_list|()
expr_stmt|;
name|m_animator
operator|.
name|stop
argument_list|()
expr_stmt|;
name|m_animator
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
protected|protected:
DECL|function|drawFrame
name|void
name|drawFrame
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
block|{
name|p
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.00
argument_list|,
name|QColor
argument_list|(
literal|245
argument_list|,
literal|245
argument_list|,
literal|245
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.49
argument_list|,
name|QColor
argument_list|(
literal|192
argument_list|,
literal|192
argument_list|,
literal|192
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.51
argument_list|,
name|QColor
argument_list|(
literal|245
argument_list|,
literal|245
argument_list|,
literal|245
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.00
argument_list|,
name|QColor
argument_list|(
literal|192
argument_list|,
literal|192
argument_list|,
literal|192
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|gradient
argument_list|)
expr_stmt|;
name|QRect
name|r
init|=
name|rect
decl_stmt|;
name|p
operator|->
name|drawRoundedRect
argument_list|(
name|r
argument_list|,
literal|15
argument_list|,
literal|15
argument_list|,
name|Qt
operator|::
name|RelativeSize
argument_list|)
expr_stmt|;
name|r
operator|.
name|adjust
argument_list|(
literal|1
argument_list|,
literal|4
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|4
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|181
argument_list|,
literal|181
argument_list|,
literal|181
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|p
operator|->
name|drawRoundedRect
argument_list|(
name|r
argument_list|,
literal|15
argument_list|,
literal|15
argument_list|,
name|Qt
operator|::
name|RelativeSize
argument_list|)
expr_stmt|;
name|p
operator|->
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|159
argument_list|,
literal|159
argument_list|,
literal|159
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|y
init|=
name|rect
operator|.
name|top
argument_list|()
operator|+
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|-
literal|1
decl_stmt|;
name|p
operator|->
name|drawLine
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|,
name|y
argument_list|,
name|rect
operator|.
name|right
argument_list|()
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|drawDigits
name|QPixmap
name|drawDigits
parameter_list|(
name|int
name|n
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
block|{
name|int
name|scaleFactor
init|=
literal|2
decl_stmt|;
name|QString
name|str
init|=
name|QString
operator|::
name|number
argument_list|(
name|n
argument_list|)
decl_stmt|;
if|if
condition|(
name|str
operator|.
name|length
argument_list|()
operator|==
literal|1
condition|)
name|str
operator|.
name|prepend
argument_list|(
literal|"0"
argument_list|)
expr_stmt|;
name|QFont
name|font
decl_stmt|;
name|font
operator|.
name|setFamily
argument_list|(
literal|"Helvetica"
argument_list|)
expr_stmt|;
name|int
name|fontHeight
init|=
name|scaleFactor
operator|*
literal|0.55
operator|*
name|rect
operator|.
name|height
argument_list|()
decl_stmt|;
name|font
operator|.
name|setPixelSize
argument_list|(
name|fontHeight
argument_list|)
expr_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
name|rect
operator|.
name|size
argument_list|()
operator|*
name|scaleFactor
argument_list|)
decl_stmt|;
name|pixmap
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
name|pixmap
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.00
argument_list|,
name|QColor
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.49
argument_list|,
name|QColor
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.51
argument_list|,
name|QColor
argument_list|(
literal|128
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.00
argument_list|,
name|QColor
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|QPainter
name|p
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|pixmap
argument_list|)
expr_stmt|;
name|p
operator|.
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|QPen
name|pen
decl_stmt|;
name|pen
operator|.
name|setBrush
argument_list|(
name|QBrush
argument_list|(
name|gradient
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawText
argument_list|(
name|pixmap
operator|.
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|str
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
return|return
name|pixmap
operator|.
name|scaledToWidth
argument_list|(
name|width
argument_list|()
argument_list|,
name|Qt
operator|::
name|SmoothTransformation
argument_list|)
return|;
block|}
DECL|function|preparePixmap
name|void
name|preparePixmap
parameter_list|()
block|{
name|m_pixmap
operator|=
name|QPixmap
argument_list|(
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|m_pixmap
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|p
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
operator|&
name|m_pixmap
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|drawDigits
argument_list|(
name|m_number
argument_list|,
name|rect
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
DECL|function|resizeEvent
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
parameter_list|)
block|{
name|preparePixmap
argument_list|()
expr_stmt|;
name|update
argument_list|()
expr_stmt|;
block|}
DECL|function|paintStatic
name|void
name|paintStatic
parameter_list|()
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|int
name|pad
init|=
name|width
argument_list|()
operator|/
literal|10
decl_stmt|;
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
name|pad
argument_list|,
name|pad
argument_list|,
operator|-
name|pad
argument_list|,
operator|-
name|pad
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|m_pixmap
argument_list|)
expr_stmt|;
block|}
DECL|function|paintSlide
name|void
name|paintSlide
parameter_list|()
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|int
name|pad
init|=
name|width
argument_list|()
operator|/
literal|10
decl_stmt|;
name|QRect
name|fr
init|=
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
name|pad
argument_list|,
name|pad
argument_list|,
operator|-
name|pad
argument_list|,
operator|-
name|pad
argument_list|)
decl_stmt|;
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|fr
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|fr
argument_list|)
expr_stmt|;
name|int
name|y
init|=
name|height
argument_list|()
operator|*
name|m_animator
operator|.
name|currentFrame
argument_list|()
operator|/
literal|100
decl_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
name|y
argument_list|,
name|m_lastPixmap
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
name|y
operator|-
name|height
argument_list|()
argument_list|,
name|m_pixmap
argument_list|)
expr_stmt|;
block|}
DECL|function|paintFlip
name|void
name|paintFlip
parameter_list|()
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|int
name|hw
init|=
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|hh
init|=
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
comment|// behind is the new pixmap
name|int
name|pad
init|=
name|width
argument_list|()
operator|/
literal|10
decl_stmt|;
name|QRect
name|fr
init|=
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
name|pad
argument_list|,
name|pad
argument_list|,
operator|-
name|pad
argument_list|,
operator|-
name|pad
argument_list|)
decl_stmt|;
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|fr
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|m_pixmap
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|m_animator
operator|.
name|currentFrame
argument_list|()
decl_stmt|;
if|if
condition|(
name|index
operator|<=
literal|50
condition|)
block|{
comment|// the top part of the old pixmap is flipping
name|int
name|angle
init|=
operator|-
literal|180
operator|*
name|index
operator|/
literal|100
decl_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
name|hw
argument_list|,
name|hh
argument_list|)
expr_stmt|;
name|transform
operator|.
name|rotate
argument_list|(
name|angle
argument_list|,
name|Qt
operator|::
name|XAxis
argument_list|)
expr_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|fr
operator|.
name|adjusted
argument_list|(
operator|-
name|hw
argument_list|,
operator|-
name|hh
argument_list|,
operator|-
name|hw
argument_list|,
operator|-
name|hh
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
operator|-
name|hw
argument_list|,
operator|-
name|hh
argument_list|,
name|m_lastPixmap
argument_list|)
expr_stmt|;
comment|// the bottom part is still the old pixmap
name|p
operator|.
name|resetTransform
argument_list|()
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
literal|0
argument_list|,
name|hh
argument_list|,
name|width
argument_list|()
argument_list|,
name|hh
argument_list|)
expr_stmt|;
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|fr
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|m_lastPixmap
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|p
operator|.
name|setClipRect
argument_list|(
literal|0
argument_list|,
name|hh
argument_list|,
name|width
argument_list|()
argument_list|,
name|hh
argument_list|)
expr_stmt|;
comment|// the bottom part is still the old pixmap
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|fr
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|m_lastPixmap
argument_list|)
expr_stmt|;
comment|// the bottom part of the new pixmap is flipping
name|int
name|angle
init|=
literal|180
operator|-
literal|180
operator|*
name|m_animator
operator|.
name|currentFrame
argument_list|()
operator|/
literal|100
decl_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
name|hw
argument_list|,
name|hh
argument_list|)
expr_stmt|;
name|transform
operator|.
name|rotate
argument_list|(
name|angle
argument_list|,
name|Qt
operator|::
name|XAxis
argument_list|)
expr_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|fr
operator|.
name|adjusted
argument_list|(
operator|-
name|hw
argument_list|,
operator|-
name|hh
argument_list|,
operator|-
name|hw
argument_list|,
operator|-
name|hh
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
operator|-
name|hw
argument_list|,
operator|-
name|hh
argument_list|,
name|m_pixmap
argument_list|)
expr_stmt|;
block|}
block|}
DECL|function|paintRotate
name|void
name|paintRotate
parameter_list|()
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|pad
init|=
name|width
argument_list|()
operator|/
literal|10
decl_stmt|;
name|QRect
name|fr
init|=
name|rect
argument_list|()
operator|.
name|adjusted
argument_list|(
name|pad
argument_list|,
name|pad
argument_list|,
operator|-
name|pad
argument_list|,
operator|-
name|pad
argument_list|)
decl_stmt|;
name|drawFrame
argument_list|(
operator|&
name|p
argument_list|,
name|fr
argument_list|)
expr_stmt|;
name|p
operator|.
name|setClipRect
argument_list|(
name|fr
argument_list|)
expr_stmt|;
name|int
name|angle1
init|=
operator|-
literal|180
operator|*
name|m_animator
operator|.
name|currentFrame
argument_list|()
operator|/
literal|100
decl_stmt|;
name|int
name|angle2
init|=
literal|180
operator|-
literal|180
operator|*
name|m_animator
operator|.
name|currentFrame
argument_list|()
operator|/
literal|100
decl_stmt|;
name|int
name|angle
init|=
operator|(
name|m_animator
operator|.
name|currentFrame
argument_list|()
operator|<=
literal|50
operator|)
condition|?
name|angle1
else|:
name|angle2
decl_stmt|;
name|QPixmap
name|pix
init|=
operator|(
name|m_animator
operator|.
name|currentFrame
argument_list|()
operator|<=
literal|50
operator|)
condition|?
name|m_lastPixmap
else|:
name|m_pixmap
decl_stmt|;
name|QTransform
name|transform
decl_stmt|;
name|transform
operator|.
name|translate
argument_list|(
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|transform
operator|.
name|rotate
argument_list|(
name|angle
argument_list|,
name|Qt
operator|::
name|XAxis
argument_list|)
expr_stmt|;
name|p
operator|.
name|setTransform
argument_list|(
name|transform
argument_list|)
expr_stmt|;
name|p
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|SmoothPixmapTransform
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
operator|-
name|width
argument_list|()
operator|/
literal|2
argument_list|,
operator|-
name|height
argument_list|()
operator|/
literal|2
argument_list|,
name|pix
argument_list|)
expr_stmt|;
block|}
DECL|function|paintEvent
name|void
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
name|event
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_animator
operator|.
name|state
argument_list|()
operator|==
name|QTimeLine
operator|::
name|Running
condition|)
block|{
if|if
condition|(
name|m_transition
operator|==
name|Slide
condition|)
name|paintSlide
argument_list|()
expr_stmt|;
if|if
condition|(
name|m_transition
operator|==
name|Flip
condition|)
name|paintFlip
argument_list|()
expr_stmt|;
if|if
condition|(
name|m_transition
operator|==
name|Rotate
condition|)
name|paintRotate
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|paintStatic
argument_list|()
expr_stmt|;
block|}
block|}
private|private:
DECL|member|m_number
name|int
name|m_number
decl_stmt|;
DECL|member|m_transition
name|int
name|m_transition
decl_stmt|;
DECL|member|m_pixmap
name|QPixmap
name|m_pixmap
decl_stmt|;
DECL|member|m_lastPixmap
name|QPixmap
name|m_lastPixmap
decl_stmt|;
DECL|member|m_animator
name|QTimeLine
name|m_animator
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|DigiFlip
class|class
name|DigiFlip
super|:
specifier|public
name|QMainWindow
block|{
name|Q_OBJECT
public|public:
DECL|function|DigiFlip
name|DigiFlip
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
block|{
name|m_hour
operator|=
operator|new
name|Digits
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|m_hour
operator|->
name|show
argument_list|()
expr_stmt|;
name|m_minute
operator|=
operator|new
name|Digits
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|show
argument_list|()
expr_stmt|;
name|QPalette
name|pal
init|=
name|palette
argument_list|()
decl_stmt|;
name|pal
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|setPalette
argument_list|(
name|pal
argument_list|)
expr_stmt|;
name|m_ticker
operator|.
name|start
argument_list|(
literal|1000
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|QTime
name|t
init|=
name|QTime
operator|::
name|currentTime
argument_list|()
decl_stmt|;
name|m_hour
operator|->
name|setNumber
argument_list|(
name|t
operator|.
name|hour
argument_list|()
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|setNumber
argument_list|(
name|t
operator|.
name|minute
argument_list|()
argument_list|)
expr_stmt|;
name|updateTime
argument_list|()
expr_stmt|;
name|QAction
modifier|*
name|slideAction
init|=
operator|new
name|QAction
argument_list|(
literal|"&Slide"
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|flipAction
init|=
operator|new
name|QAction
argument_list|(
literal|"&Flip"
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|rotateAction
init|=
operator|new
name|QAction
argument_list|(
literal|"&Rotate"
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|slideAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|chooseSlide
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|flipAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|chooseFlip
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|rotateAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|chooseRotate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|slideAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|flipAction
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|rotateAction
argument_list|)
expr_stmt|;
name|setContextMenuPolicy
argument_list|(
name|Qt
operator|::
name|ActionsContextMenu
argument_list|)
expr_stmt|;
block|}
DECL|function|updateTime
name|void
name|updateTime
parameter_list|()
block|{
name|QTime
name|t
init|=
name|QTime
operator|::
name|currentTime
argument_list|()
decl_stmt|;
name|m_hour
operator|->
name|flipTo
argument_list|(
name|t
operator|.
name|hour
argument_list|()
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|flipTo
argument_list|(
name|t
operator|.
name|minute
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|str
init|=
name|t
operator|.
name|toString
argument_list|(
literal|"hh:mm:ss"
argument_list|)
decl_stmt|;
name|str
operator|.
name|prepend
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_hour
operator|->
name|transition
argument_list|()
operator|==
name|Digits
operator|::
name|Slide
condition|)
name|str
operator|.
name|prepend
argument_list|(
literal|"Slide"
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_hour
operator|->
name|transition
argument_list|()
operator|==
name|Digits
operator|::
name|Flip
condition|)
name|str
operator|.
name|prepend
argument_list|(
literal|"Flip"
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_hour
operator|->
name|transition
argument_list|()
operator|==
name|Digits
operator|::
name|Rotate
condition|)
name|str
operator|.
name|prepend
argument_list|(
literal|"Rotate"
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|str
argument_list|)
expr_stmt|;
block|}
DECL|function|switchTransition
name|void
name|switchTransition
parameter_list|(
name|int
name|delta
parameter_list|)
block|{
name|int
name|i
init|=
operator|(
name|m_hour
operator|->
name|transition
argument_list|()
operator|+
name|delta
operator|+
literal|3
operator|)
operator|%
literal|3
decl_stmt|;
name|m_hour
operator|->
name|setTransition
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|setTransition
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|updateTime
argument_list|()
expr_stmt|;
block|}
protected|protected:
DECL|function|resizeEvent
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
parameter_list|)
block|{
name|int
name|digitsWidth
init|=
name|width
argument_list|()
operator|/
literal|2
decl_stmt|;
name|int
name|digitsHeight
init|=
name|digitsWidth
operator|*
literal|1.2
decl_stmt|;
name|int
name|y
init|=
operator|(
name|height
argument_list|()
operator|-
name|digitsHeight
operator|)
operator|/
literal|3
decl_stmt|;
name|m_hour
operator|->
name|resize
argument_list|(
name|digitsWidth
argument_list|,
name|digitsHeight
argument_list|)
expr_stmt|;
name|m_hour
operator|->
name|move
argument_list|(
literal|0
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|resize
argument_list|(
name|digitsWidth
argument_list|,
name|digitsHeight
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|move
argument_list|(
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|function|timerEvent
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
parameter_list|)
block|{
name|updateTime
argument_list|()
expr_stmt|;
block|}
DECL|function|keyPressEvent
name|void
name|keyPressEvent
parameter_list|(
name|QKeyEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|key
argument_list|()
operator|==
name|Qt
operator|::
name|Key_Right
condition|)
block|{
name|switchTransition
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|->
name|key
argument_list|()
operator|==
name|Qt
operator|::
name|Key_Left
condition|)
block|{
name|switchTransition
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
block|}
private|private
name|slots
private|:
DECL|function|chooseSlide
name|void
name|chooseSlide
parameter_list|()
block|{
name|m_hour
operator|->
name|setTransition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|setTransition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|updateTime
argument_list|()
expr_stmt|;
block|}
DECL|function|chooseFlip
name|void
name|chooseFlip
parameter_list|()
block|{
name|m_hour
operator|->
name|setTransition
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|setTransition
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|updateTime
argument_list|()
expr_stmt|;
block|}
DECL|function|chooseRotate
name|void
name|chooseRotate
parameter_list|()
block|{
name|m_hour
operator|->
name|setTransition
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|m_minute
operator|->
name|setTransition
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|updateTime
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|m_ticker
name|QBasicTimer
name|m_ticker
decl_stmt|;
DECL|member|m_hour
name|Digits
modifier|*
name|m_hour
decl_stmt|;
DECL|member|m_minute
name|Digits
modifier|*
name|m_minute
decl_stmt|;
block|}
class|;
end_class
begin_include
include|#
directive|include
file|"digiflip.moc"
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|DigiFlip
name|time
decl_stmt|;
name|time
operator|.
name|resize
argument_list|(
literal|320
argument_list|,
literal|240
argument_list|)
expr_stmt|;
name|time
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
