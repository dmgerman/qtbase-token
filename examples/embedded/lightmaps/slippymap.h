begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|SLIPPYMAP_H
end_ifndef
begin_define
DECL|macro|SLIPPYMAP_H
define|#
directive|define
name|SLIPPYMAP_H
end_define
begin_include
include|#
directive|include
file|<QNetworkAccessManager>
end_include
begin_include
include|#
directive|include
file|<QPixmap>
end_include
begin_include
include|#
directive|include
file|<QUrl>
end_include
begin_decl_stmt
DECL|variable|QNetworkReply
name|class
name|QNetworkReply
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPainter
name|class
name|QPainter
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|SlippyMap
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|SlippyMap
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|void
name|invalidate
argument_list|()
block|;
name|void
name|render
argument_list|(
name|QPainter
operator|*
name|p
argument_list|,
specifier|const
name|QRect
operator|&
name|rect
argument_list|)
block|;
name|void
name|pan
argument_list|(
specifier|const
name|QPoint
operator|&
name|delta
argument_list|)
block|;
name|int
name|width
block|;
name|int
name|height
block|;
name|int
name|zoom
block|;
name|qreal
name|latitude
block|;
name|qreal
name|longitude
block|;
name|signals
operator|:
name|void
name|updated
argument_list|(
specifier|const
name|QRect
operator|&
name|rect
argument_list|)
block|;
name|private
name|slots
operator|:
name|void
name|handleNetworkData
argument_list|(
name|QNetworkReply
operator|*
name|reply
argument_list|)
block|;
name|void
name|download
argument_list|()
block|;
name|protected
operator|:
name|QRect
name|tileRect
argument_list|(
specifier|const
name|QPoint
operator|&
name|tp
argument_list|)
block|;
name|private
operator|:
name|QPoint
name|m_offset
block|;
name|QRect
name|m_tilesRect
block|;
name|QPixmap
name|m_emptyTile
block|;
name|QHash
operator|<
name|QPoint
block|,
name|QPixmap
operator|>
name|m_tilePixmaps
block|;
name|QNetworkAccessManager
name|m_manager
block|;
name|QUrl
name|m_url
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
