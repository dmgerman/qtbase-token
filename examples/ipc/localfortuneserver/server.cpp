begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QtNetwork>
end_include
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_include
include|#
directive|include
file|"server.h"
end_include
begin_include
include|#
directive|include
file|<qlocalserver.h>
end_include
begin_include
include|#
directive|include
file|<qlocalsocket.h>
end_include
begin_constructor
DECL|function|Server
name|Server
operator|::
name|Server
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
name|statusLabel
operator|=
operator|new
name|QLabel
expr_stmt|;
name|statusLabel
operator|->
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|quitButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Quit"
argument_list|)
argument_list|)
expr_stmt|;
name|quitButton
operator|->
name|setAutoDefault
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|server
operator|=
operator|new
name|QLocalServer
argument_list|(
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|server
operator|->
name|listen
argument_list|(
literal|"fortune"
argument_list|)
condition|)
block|{
name|QMessageBox
operator|::
name|critical
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Fortune Server"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Unable to start the server: %1."
argument_list|)
operator|.
name|arg
argument_list|(
name|server
operator|->
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|close
argument_list|()
expr_stmt|;
return|return;
block|}
name|statusLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"The server is running.\n"
literal|"Run the Fortune Client example now."
argument_list|)
argument_list|)
expr_stmt|;
name|fortunes
operator|<<
name|tr
argument_list|(
literal|"You've been leading a dog's life. Stay off the furniture."
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"You've got to think about tomorrow."
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"You will be surprised by a loud noise."
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"You will feel hungry again in another hour."
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"You might have mail."
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"You cannot kill time without injuring eternity."
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Computers are not intelligent. They only think they are."
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|quitButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|server
argument_list|,
name|SIGNAL
argument_list|(
name|newConnection
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|sendFortune
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|buttonLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|buttonLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|buttonLayout
operator|->
name|addWidget
argument_list|(
name|quitButton
argument_list|)
expr_stmt|;
name|buttonLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|statusLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addLayout
argument_list|(
name|buttonLayout
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|mainLayout
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Fortune Server"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|sendFortune
name|void
name|Server
operator|::
name|sendFortune
parameter_list|()
block|{
name|QByteArray
name|block
decl_stmt|;
name|QDataStream
name|out
argument_list|(
operator|&
name|block
argument_list|,
name|QIODevice
operator|::
name|WriteOnly
argument_list|)
decl_stmt|;
name|out
operator|.
name|setVersion
argument_list|(
name|QDataStream
operator|::
name|Qt_4_0
argument_list|)
expr_stmt|;
name|out
operator|<<
operator|(
name|quint16
operator|)
literal|0
expr_stmt|;
name|out
operator|<<
name|fortunes
operator|.
name|at
argument_list|(
name|qrand
argument_list|()
operator|%
name|fortunes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|device
argument_list|()
operator|->
name|seek
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|out
operator|<<
call|(
name|quint16
call|)
argument_list|(
name|block
operator|.
name|size
argument_list|()
operator|-
sizeof|sizeof
argument_list|(
name|quint16
argument_list|)
argument_list|)
expr_stmt|;
name|QLocalSocket
modifier|*
name|clientConnection
init|=
name|server
operator|->
name|nextPendingConnection
argument_list|()
decl_stmt|;
name|connect
argument_list|(
name|clientConnection
argument_list|,
name|SIGNAL
argument_list|(
name|disconnected
argument_list|()
argument_list|)
argument_list|,
name|clientConnection
argument_list|,
name|SLOT
argument_list|(
name|deleteLater
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|clientConnection
operator|->
name|write
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|clientConnection
operator|->
name|flush
argument_list|()
expr_stmt|;
name|clientConnection
operator|->
name|disconnectFromServer
argument_list|()
expr_stmt|;
block|}
end_function
end_unit
