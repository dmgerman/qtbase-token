begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QGraphicsWidget>
end_include
begin_include
include|#
directive|include
file|<QGraphicsProxyWidget>
end_include
begin_include
include|#
directive|include
file|<QGraphicsAnchorLayout>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_function
DECL|function|createItem
specifier|static
name|QGraphicsProxyWidget
modifier|*
name|createItem
parameter_list|(
specifier|const
name|QSizeF
modifier|&
name|minimum
init|=
name|QSizeF
argument_list|(
literal|100.0
argument_list|,
literal|100.0
argument_list|)
parameter_list|,
specifier|const
name|QSizeF
modifier|&
name|preferred
init|=
name|QSize
argument_list|(
literal|150.0
argument_list|,
literal|100.0
argument_list|)
parameter_list|,
specifier|const
name|QSizeF
modifier|&
name|maximum
init|=
name|QSizeF
argument_list|(
literal|200.0
argument_list|,
literal|100.0
argument_list|)
parameter_list|,
specifier|const
name|QString
modifier|&
name|name
init|=
literal|"0"
parameter_list|)
block|{
name|QGraphicsProxyWidget
modifier|*
name|w
init|=
operator|new
name|QGraphicsProxyWidget
decl_stmt|;
name|w
operator|->
name|setWidget
argument_list|(
operator|new
name|QPushButton
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|->
name|setData
argument_list|(
literal|0
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|w
operator|->
name|setMinimumSize
argument_list|(
name|minimum
argument_list|)
expr_stmt|;
name|w
operator|->
name|setPreferredSize
argument_list|(
name|preferred
argument_list|)
expr_stmt|;
name|w
operator|->
name|setMaximumSize
argument_list|(
name|maximum
argument_list|)
expr_stmt|;
name|w
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Preferred
argument_list|,
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
expr_stmt|;
return|return
name|w
return|;
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|setSceneRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|800
argument_list|,
literal|480
argument_list|)
expr_stmt|;
name|QSizeF
name|minSize
argument_list|(
literal|30
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QSizeF
name|prefSize
argument_list|(
literal|210
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QSizeF
name|maxSize
argument_list|(
literal|300
argument_list|,
literal|100
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|a
init|=
name|createItem
argument_list|(
name|minSize
argument_list|,
name|prefSize
argument_list|,
name|maxSize
argument_list|,
literal|"A"
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|b
init|=
name|createItem
argument_list|(
name|minSize
argument_list|,
name|prefSize
argument_list|,
name|maxSize
argument_list|,
literal|"B"
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|c
init|=
name|createItem
argument_list|(
name|minSize
argument_list|,
name|prefSize
argument_list|,
name|maxSize
argument_list|,
literal|"C"
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|d
init|=
name|createItem
argument_list|(
name|minSize
argument_list|,
name|prefSize
argument_list|,
name|maxSize
argument_list|,
literal|"D"
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|e
init|=
name|createItem
argument_list|(
name|minSize
argument_list|,
name|prefSize
argument_list|,
name|maxSize
argument_list|,
literal|"E"
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|f
init|=
name|createItem
argument_list|(
name|QSizeF
argument_list|(
literal|30
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QSizeF
argument_list|(
literal|150
argument_list|,
literal|50
argument_list|)
argument_list|,
name|maxSize
argument_list|,
literal|"F (overflow)"
argument_list|)
decl_stmt|;
name|QGraphicsProxyWidget
modifier|*
name|g
init|=
name|createItem
argument_list|(
name|QSizeF
argument_list|(
literal|30
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QSizeF
argument_list|(
literal|30
argument_list|,
literal|100
argument_list|)
argument_list|,
name|maxSize
argument_list|,
literal|"G (overflow)"
argument_list|)
decl_stmt|;
name|QGraphicsAnchorLayout
modifier|*
name|l
init|=
operator|new
name|QGraphicsAnchorLayout
decl_stmt|;
name|l
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QGraphicsWidget
modifier|*
name|w
init|=
operator|new
name|QGraphicsWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Window
argument_list|)
decl_stmt|;
name|w
operator|->
name|setPos
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|w
operator|->
name|setLayout
argument_list|(
name|l
argument_list|)
expr_stmt|;
comment|// vertical
name|QGraphicsAnchor
modifier|*
name|anchor
init|=
name|l
operator|->
name|addAnchor
argument_list|(
name|a
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
decl_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|b
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|a
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|b
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|d
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|e
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|d
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|e
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|f
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorVerticalCenter
argument_list|,
name|f
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|f
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|g
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|g
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
comment|// horizontal
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|l
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|,
name|a
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|l
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|,
name|d
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|a
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|b
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|a
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|c
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|c
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|e
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|b
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|e
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|d
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|e
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|l
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|,
name|f
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|l
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|,
name|g
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|f
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|g
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setBackgroundBrush
argument_list|(
name|Qt
operator|::
name|darkGreen
argument_list|)
expr_stmt|;
name|QGraphicsView
name|view
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
