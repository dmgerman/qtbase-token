begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QPushButton>
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QGraphicsView>
end_include
begin_include
include|#
directive|include
file|<QGraphicsScene>
end_include
begin_include
include|#
directive|include
file|<QGraphicsWidget>
end_include
begin_include
include|#
directive|include
file|<QGraphicsProxyWidget>
end_include
begin_include
include|#
directive|include
file|<QGraphicsAnchorLayout>
end_include
begin_include
include|#
directive|include
file|<QGraphicsSceneResizeEvent>
end_include
begin_class
DECL|class|GraphicsView
class|class
name|GraphicsView
super|:
specifier|public
name|QGraphicsView
block|{
public|public:
DECL|function|GraphicsView
name|GraphicsView
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|,
name|QGraphicsWidget
modifier|*
name|widget
parameter_list|)
member_init_list|:
name|QGraphicsView
argument_list|(
name|scene
argument_list|)
member_init_list|,
name|w
argument_list|(
name|widget
argument_list|)
block|{     }
DECL|function|resizeEvent
specifier|virtual
name|void
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
name|event
parameter_list|)
block|{
name|w
operator|->
name|setGeometry
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|event
operator|->
name|size
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
name|event
operator|->
name|size
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|member|w
name|QGraphicsWidget
modifier|*
name|w
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|PixmapWidget
class|class
name|PixmapWidget
super|:
specifier|public
name|QGraphicsLayoutItem
block|{
public|public:
DECL|function|PixmapWidget
name|PixmapWidget
parameter_list|(
specifier|const
name|QPixmap
modifier|&
name|pix
parameter_list|)
member_init_list|:
name|QGraphicsLayoutItem
argument_list|()
block|{
name|original
operator|=
operator|new
name|QGraphicsPixmapItem
argument_list|(
name|pix
argument_list|)
expr_stmt|;
name|setGraphicsItem
argument_list|(
name|original
argument_list|)
expr_stmt|;
name|original
operator|->
name|show
argument_list|()
expr_stmt|;
name|r
operator|=
name|QRectF
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pix
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|function|~PixmapWidget
name|~
name|PixmapWidget
parameter_list|()
block|{
name|setGraphicsItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
operator|delete
name|original
expr_stmt|;
block|}
DECL|function|setZValue
name|void
name|setZValue
parameter_list|(
name|qreal
name|z
parameter_list|)
block|{
name|original
operator|->
name|setZValue
argument_list|(
name|z
argument_list|)
expr_stmt|;
block|}
DECL|function|setGeometry
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
name|original
operator|->
name|setTransform
argument_list|(
name|QTransform
operator|::
name|fromScale
argument_list|(
name|rect
operator|.
name|width
argument_list|()
operator|/
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
operator|/
name|r
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|original
operator|->
name|setPos
argument_list|(
name|rect
operator|.
name|x
argument_list|()
argument_list|,
name|rect
operator|.
name|y
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
name|rect
expr_stmt|;
block|}
protected|protected:
DECL|function|sizeHint
name|QSizeF
name|sizeHint
parameter_list|(
name|Qt
operator|::
name|SizeHint
name|which
parameter_list|,
specifier|const
name|QSizeF
modifier|&
name|constraint
init|=
name|QSizeF
argument_list|()
parameter_list|)
specifier|const
block|{
name|Q_UNUSED
argument_list|(
name|constraint
argument_list|)
expr_stmt|;
name|QSizeF
name|sh
decl_stmt|;
switch|switch
condition|(
name|which
condition|)
block|{
case|case
name|Qt
operator|::
name|MinimumSize
case|:
name|sh
operator|=
name|QSizeF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|PreferredSize
case|:
name|sh
operator|=
name|QSizeF
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|MaximumSize
case|:
name|sh
operator|=
name|QSizeF
argument_list|(
name|QWIDGETSIZE_MAX
argument_list|,
name|QWIDGETSIZE_MAX
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
return|return
name|sh
return|;
block|}
private|private:
DECL|member|original
name|QGraphicsPixmapItem
modifier|*
name|original
decl_stmt|;
DECL|member|r
name|QRectF
name|r
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|PlaceWidget
class|class
name|PlaceWidget
super|:
specifier|public
name|QGraphicsWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|PlaceWidget
name|PlaceWidget
parameter_list|(
specifier|const
name|QPixmap
modifier|&
name|pix
parameter_list|)
member_init_list|:
name|QGraphicsWidget
argument_list|()
member_init_list|,
name|original
argument_list|(
name|pix
argument_list|)
member_init_list|,
name|scaled
argument_list|(
name|pix
argument_list|)
block|{     }
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
parameter_list|,
name|QWidget
modifier|*
parameter_list|)
block|{
name|QPointF
name|reflection
init|=
name|QPointF
argument_list|()
decl_stmt|;
name|reflection
operator|.
name|setY
argument_list|(
name|scaled
operator|.
name|height
argument_list|()
operator|+
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|QPointF
argument_list|()
argument_list|,
name|scaled
argument_list|)
expr_stmt|;
name|QPixmap
name|tmp
argument_list|(
name|scaled
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|tmp
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|p
argument_list|(
operator|&
name|tmp
argument_list|)
decl_stmt|;
comment|// create gradient
name|QPoint
name|p1
argument_list|(
name|scaled
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QPoint
name|p2
argument_list|(
name|scaled
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|scaled
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QLinearGradient
name|linearGrad
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
decl_stmt|;
name|linearGrad
operator|.
name|setColorAt
argument_list|(
literal|0
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|linearGrad
operator|.
name|setColorAt
argument_list|(
literal|0.65
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|127
argument_list|)
argument_list|)
expr_stmt|;
name|linearGrad
operator|.
name|setColorAt
argument_list|(
literal|1
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|)
argument_list|)
expr_stmt|;
comment|// apply 'mask'
name|p
operator|.
name|setBrush
argument_list|(
name|linearGrad
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|tmp
operator|.
name|width
argument_list|()
argument_list|,
name|tmp
operator|.
name|height
argument_list|()
argument_list|,
name|QBrush
argument_list|(
name|linearGrad
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|tmp
operator|.
name|width
argument_list|()
argument_list|,
name|tmp
operator|.
name|height
argument_list|()
argument_list|,
name|QBrush
argument_list|(
name|linearGrad
argument_list|)
argument_list|)
expr_stmt|;
comment|// paint the image flipped
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_DestinationOver
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawPixmap
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|scaled
operator|.
name|toImage
argument_list|()
operator|.
name|mirrored
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|reflection
argument_list|,
name|tmp
argument_list|)
expr_stmt|;
block|}
DECL|function|resizeEvent
name|void
name|resizeEvent
parameter_list|(
name|QGraphicsSceneResizeEvent
modifier|*
name|event
parameter_list|)
block|{
name|QSize
name|newSize
init|=
name|event
operator|->
name|newSize
argument_list|()
operator|.
name|toSize
argument_list|()
decl_stmt|;
name|newSize
operator|.
name|setHeight
argument_list|(
name|newSize
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
expr_stmt|;
name|scaled
operator|=
name|original
operator|.
name|scaled
argument_list|(
name|newSize
argument_list|)
expr_stmt|;
block|}
DECL|function|boundingRect
name|QRectF
name|boundingRect
parameter_list|()
specifier|const
block|{
name|QSize
name|size
argument_list|(
name|scaled
operator|.
name|width
argument_list|()
argument_list|,
name|scaled
operator|.
name|height
argument_list|()
operator|*
literal|2
operator|+
literal|2
argument_list|)
decl_stmt|;
return|return
name|QRectF
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|size
argument_list|)
return|;
block|}
private|private:
DECL|member|original
name|QPixmap
name|original
decl_stmt|;
DECL|member|scaled
name|QPixmap
name|scaled
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
name|Q_INIT_RESOURCE
argument_list|(
name|weatheranchorlayout
argument_list|)
expr_stmt|;
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QGraphicsScene
name|scene
decl_stmt|;
name|scene
operator|.
name|setSceneRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|800
argument_list|,
literal|480
argument_list|)
expr_stmt|;
comment|// pixmaps widgets
name|PixmapWidget
modifier|*
name|title
init|=
operator|new
name|PixmapWidget
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/title.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|PlaceWidget
modifier|*
name|place
init|=
operator|new
name|PlaceWidget
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/place.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|PixmapWidget
modifier|*
name|details
init|=
operator|new
name|PixmapWidget
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/5days.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|PixmapWidget
modifier|*
name|sunnyWeather
init|=
operator|new
name|PixmapWidget
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/weather-few-clouds.png"
argument_list|)
argument_list|)
decl_stmt|;
name|PixmapWidget
modifier|*
name|tabbar
init|=
operator|new
name|PixmapWidget
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/tabbar.jpg"
argument_list|)
argument_list|)
decl_stmt|;
comment|// setup sizes
name|title
operator|->
name|setPreferredSize
argument_list|(
name|QSizeF
argument_list|(
literal|348
argument_list|,
literal|45
argument_list|)
argument_list|)
expr_stmt|;
name|title
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|,
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
expr_stmt|;
name|place
operator|->
name|setPreferredSize
argument_list|(
name|QSizeF
argument_list|(
literal|96
argument_list|,
literal|72
argument_list|)
argument_list|)
expr_stmt|;
name|place
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|,
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
expr_stmt|;
name|details
operator|->
name|setMinimumSize
argument_list|(
name|QSizeF
argument_list|(
literal|200
argument_list|,
literal|112
argument_list|)
argument_list|)
expr_stmt|;
name|details
operator|->
name|setPreferredSize
argument_list|(
name|QSizeF
argument_list|(
literal|200
argument_list|,
literal|112
argument_list|)
argument_list|)
expr_stmt|;
name|details
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|,
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
expr_stmt|;
name|tabbar
operator|->
name|setPreferredSize
argument_list|(
name|QSizeF
argument_list|(
literal|70
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|tabbar
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|,
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
expr_stmt|;
name|sunnyWeather
operator|->
name|setPreferredSize
argument_list|(
name|QSizeF
argument_list|(
literal|128
argument_list|,
literal|97
argument_list|)
argument_list|)
expr_stmt|;
name|sunnyWeather
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Minimum
argument_list|,
name|QSizePolicy
operator|::
name|Minimum
argument_list|)
expr_stmt|;
name|sunnyWeather
operator|->
name|setZValue
argument_list|(
literal|9999
argument_list|)
expr_stmt|;
comment|// start anchor layout
name|QGraphicsAnchorLayout
modifier|*
name|l
init|=
operator|new
name|QGraphicsAnchorLayout
decl_stmt|;
name|l
operator|->
name|setSpacing
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|// setup the main widget
name|QGraphicsWidget
modifier|*
name|w
init|=
operator|new
name|QGraphicsWidget
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|Window
argument_list|)
decl_stmt|;
name|QPalette
name|p
decl_stmt|;
name|p
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|w
operator|->
name|setPalette
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|w
operator|->
name|setPos
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|w
operator|->
name|setLayout
argument_list|(
name|l
argument_list|)
expr_stmt|;
comment|// vertical anchors
name|QGraphicsAnchor
modifier|*
name|anchor
init|=
name|l
operator|->
name|addAnchor
argument_list|(
name|title
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
decl_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|place
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|title
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|->
name|setSpacing
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|place
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|->
name|setSpacing
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|sunnyWeather
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|title
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|sunnyWeather
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorVerticalCenter
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|tabbar
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|title
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|->
name|setSpacing
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|details
argument_list|,
name|Qt
operator|::
name|AnchorTop
argument_list|,
name|tabbar
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|->
name|setSpacing
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|details
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorBottom
argument_list|)
expr_stmt|;
name|anchor
operator|->
name|setSpacing
argument_list|(
literal|12
argument_list|)
expr_stmt|;
comment|// horizontal anchors
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|l
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|,
name|title
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|title
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|place
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|->
name|setSpacing
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|place
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|details
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|)
expr_stmt|;
name|anchor
operator|->
name|setSpacing
argument_list|(
literal|35
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|sunnyWeather
argument_list|,
name|Qt
operator|::
name|AnchorLeft
argument_list|,
name|place
argument_list|,
name|Qt
operator|::
name|AnchorHorizontalCenter
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|sunnyWeather
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorHorizontalCenter
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|tabbar
argument_list|,
name|Qt
operator|::
name|AnchorHorizontalCenter
argument_list|,
name|details
argument_list|,
name|Qt
operator|::
name|AnchorHorizontalCenter
argument_list|)
expr_stmt|;
name|anchor
operator|=
name|l
operator|->
name|addAnchor
argument_list|(
name|details
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|,
name|l
argument_list|,
name|Qt
operator|::
name|AnchorRight
argument_list|)
expr_stmt|;
comment|// QGV setup
name|scene
operator|.
name|addItem
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|scene
operator|.
name|setBackgroundBrush
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|QGraphicsView
modifier|*
name|view
init|=
operator|new
name|QGraphicsView
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|view
operator|->
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
