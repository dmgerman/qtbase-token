begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"window.h"
end_include
begin_include
include|#
directive|include
file|"layoutitem.h"
end_include
begin_constructor
DECL|function|Window
name|Window
operator|::
name|Window
parameter_list|(
name|QGraphicsWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QGraphicsWidget
argument_list|(
name|parent
argument_list|,
name|Qt
operator|::
name|Window
argument_list|)
block|{
comment|//! [0]
name|QGraphicsLinearLayout
modifier|*
name|windowLayout
init|=
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
decl_stmt|;
name|QGraphicsLinearLayout
modifier|*
name|linear
init|=
operator|new
name|QGraphicsLinearLayout
argument_list|(
name|windowLayout
argument_list|)
decl_stmt|;
name|LayoutItem
modifier|*
name|item
init|=
operator|new
name|LayoutItem
decl_stmt|;
name|linear
operator|->
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|linear
operator|->
name|setStretchFactor
argument_list|(
name|item
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|//! [0]
comment|//! [1]
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|linear
operator|->
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|linear
operator|->
name|setStretchFactor
argument_list|(
name|item
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|windowLayout
operator|->
name|addItem
argument_list|(
name|linear
argument_list|)
expr_stmt|;
comment|//! [1]
comment|//! [2]
name|QGraphicsGridLayout
modifier|*
name|grid
init|=
operator|new
name|QGraphicsGridLayout
argument_list|(
name|windowLayout
argument_list|)
decl_stmt|;
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|grid
operator|->
name|addItem
argument_list|(
name|item
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|item
operator|->
name|setMaximumHeight
argument_list|(
name|item
operator|->
name|minimumHeight
argument_list|()
argument_list|)
expr_stmt|;
name|grid
operator|->
name|addItem
argument_list|(
name|item
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|AlignVCenter
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|item
operator|->
name|setMaximumHeight
argument_list|(
name|item
operator|->
name|minimumHeight
argument_list|()
argument_list|)
expr_stmt|;
name|grid
operator|->
name|addItem
argument_list|(
name|item
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|AlignVCenter
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|grid
operator|->
name|addItem
argument_list|(
name|item
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|grid
operator|->
name|addItem
argument_list|(
name|item
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|grid
operator|->
name|addItem
argument_list|(
name|item
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|LayoutItem
expr_stmt|;
name|grid
operator|->
name|addItem
argument_list|(
name|item
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|windowLayout
operator|->
name|addItem
argument_list|(
name|grid
argument_list|)
expr_stmt|;
comment|//! [2]
comment|//! [3]
name|setLayout
argument_list|(
name|windowLayout
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Basic Graphics Layouts Example"
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [3]
block|}
end_constructor
end_unit
