begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QLabel>
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_include
include|#
directive|include
file|"diagramitem.h"
end_include
begin_include
include|#
directive|include
file|"diagramscene.h"
end_include
begin_include
include|#
directive|include
file|"diagramtextitem.h"
end_include
begin_include
include|#
directive|include
file|"arrow.h"
end_include
begin_decl_stmt
DECL|variable|InsertTextButton
specifier|const
name|int
name|InsertTextButton
init|=
literal|10
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|MainWindow
name|MainWindow
operator|::
name|MainWindow
parameter_list|()
block|{
name|createActions
argument_list|()
expr_stmt|;
name|createToolBox
argument_list|()
expr_stmt|;
name|createMenus
argument_list|()
expr_stmt|;
name|scene
operator|=
operator|new
name|DiagramScene
argument_list|(
name|itemMenu
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|scene
operator|->
name|setSceneRect
argument_list|(
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|5000
argument_list|,
literal|5000
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|scene
argument_list|,
name|SIGNAL
argument_list|(
name|itemInserted
argument_list|(
name|DiagramItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|itemInserted
argument_list|(
name|DiagramItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|scene
argument_list|,
name|SIGNAL
argument_list|(
name|textInserted
argument_list|(
name|QGraphicsTextItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|textInserted
argument_list|(
name|QGraphicsTextItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|scene
argument_list|,
name|SIGNAL
argument_list|(
name|itemSelected
argument_list|(
name|QGraphicsItem
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|itemSelected
argument_list|(
name|QGraphicsItem
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|createToolbars
argument_list|()
expr_stmt|;
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|toolBox
argument_list|)
expr_stmt|;
name|view
operator|=
operator|new
name|QGraphicsView
argument_list|(
name|scene
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|setCentralWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Diagramscene"
argument_list|)
argument_list|)
expr_stmt|;
name|setUnifiedTitleAndToolBarOnMac
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|backgroundButtonGroupClicked
name|void
name|MainWindow
operator|::
name|backgroundButtonGroupClicked
parameter_list|(
name|QAbstractButton
modifier|*
name|button
parameter_list|)
block|{
name|QList
argument_list|<
name|QAbstractButton
modifier|*
argument_list|>
name|buttons
init|=
name|backgroundButtonGroup
operator|->
name|buttons
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|QAbstractButton
modifier|*
name|myButton
decl|,
name|buttons
control|)
block|{
if|if
condition|(
name|myButton
operator|!=
name|button
condition|)
name|button
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|QString
name|text
init|=
name|button
operator|->
name|text
argument_list|()
decl_stmt|;
if|if
condition|(
name|text
operator|==
name|tr
argument_list|(
literal|"Blue Grid"
argument_list|)
condition|)
name|scene
operator|->
name|setBackgroundBrush
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/background1.png"
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|text
operator|==
name|tr
argument_list|(
literal|"White Grid"
argument_list|)
condition|)
name|scene
operator|->
name|setBackgroundBrush
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/background2.png"
argument_list|)
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|text
operator|==
name|tr
argument_list|(
literal|"Gray Grid"
argument_list|)
condition|)
name|scene
operator|->
name|setBackgroundBrush
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/background3.png"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|scene
operator|->
name|setBackgroundBrush
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/background4.png"
argument_list|)
argument_list|)
expr_stmt|;
name|scene
operator|->
name|update
argument_list|()
expr_stmt|;
name|view
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|buttonGroupClicked
name|void
name|MainWindow
operator|::
name|buttonGroupClicked
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|QList
argument_list|<
name|QAbstractButton
modifier|*
argument_list|>
name|buttons
init|=
name|buttonGroup
operator|->
name|buttons
argument_list|()
decl_stmt|;
foreach|foreach
control|(
name|QAbstractButton
modifier|*
name|button
decl|,
name|buttons
control|)
block|{
if|if
condition|(
name|buttonGroup
operator|->
name|button
argument_list|(
name|id
argument_list|)
operator|!=
name|button
condition|)
name|button
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|id
operator|==
name|InsertTextButton
condition|)
block|{
name|scene
operator|->
name|setMode
argument_list|(
name|DiagramScene
operator|::
name|InsertText
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|scene
operator|->
name|setItemType
argument_list|(
name|DiagramItem
operator|::
name|DiagramType
argument_list|(
name|id
argument_list|)
argument_list|)
expr_stmt|;
name|scene
operator|->
name|setMode
argument_list|(
name|DiagramScene
operator|::
name|InsertItem
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_function
DECL|function|deleteItem
name|void
name|MainWindow
operator|::
name|deleteItem
parameter_list|()
block|{
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|scene
operator|->
name|selectedItems
argument_list|()
control|)
block|{
if|if
condition|(
name|item
operator|->
name|type
argument_list|()
operator|==
name|Arrow
operator|::
name|Type
condition|)
block|{
name|scene
operator|->
name|removeItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|Arrow
modifier|*
name|arrow
init|=
name|qgraphicsitem_cast
argument_list|<
name|Arrow
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|arrow
operator|->
name|startItem
argument_list|()
operator|->
name|removeArrow
argument_list|(
name|arrow
argument_list|)
expr_stmt|;
name|arrow
operator|->
name|endItem
argument_list|()
operator|->
name|removeArrow
argument_list|(
name|arrow
argument_list|)
expr_stmt|;
operator|delete
name|item
expr_stmt|;
block|}
block|}
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|scene
operator|->
name|selectedItems
argument_list|()
control|)
block|{
if|if
condition|(
name|item
operator|->
name|type
argument_list|()
operator|==
name|DiagramItem
operator|::
name|Type
condition|)
block|{
name|qgraphicsitem_cast
argument_list|<
name|DiagramItem
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
operator|->
name|removeArrows
argument_list|()
expr_stmt|;
block|}
name|scene
operator|->
name|removeItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
operator|delete
name|item
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_function
DECL|function|pointerGroupClicked
name|void
name|MainWindow
operator|::
name|pointerGroupClicked
parameter_list|(
name|int
parameter_list|)
block|{
name|scene
operator|->
name|setMode
argument_list|(
name|DiagramScene
operator|::
name|Mode
argument_list|(
name|pointerTypeGroup
operator|->
name|checkedId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_function
DECL|function|bringToFront
name|void
name|MainWindow
operator|::
name|bringToFront
parameter_list|()
block|{
if|if
condition|(
name|scene
operator|->
name|selectedItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QGraphicsItem
modifier|*
name|selectedItem
init|=
name|scene
operator|->
name|selectedItems
argument_list|()
operator|.
name|first
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|overlapItems
init|=
name|selectedItem
operator|->
name|collidingItems
argument_list|()
decl_stmt|;
name|qreal
name|zValue
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|overlapItems
control|)
block|{
if|if
condition|(
name|item
operator|->
name|zValue
argument_list|()
operator|>=
name|zValue
operator|&&
name|item
operator|->
name|type
argument_list|()
operator|==
name|DiagramItem
operator|::
name|Type
condition|)
name|zValue
operator|=
name|item
operator|->
name|zValue
argument_list|()
operator|+
literal|0.1
expr_stmt|;
block|}
name|selectedItem
operator|->
name|setZValue
argument_list|(
name|zValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_function
DECL|function|sendToBack
name|void
name|MainWindow
operator|::
name|sendToBack
parameter_list|()
block|{
if|if
condition|(
name|scene
operator|->
name|selectedItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
name|QGraphicsItem
modifier|*
name|selectedItem
init|=
name|scene
operator|->
name|selectedItems
argument_list|()
operator|.
name|first
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|overlapItems
init|=
name|selectedItem
operator|->
name|collidingItems
argument_list|()
decl_stmt|;
name|qreal
name|zValue
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|overlapItems
control|)
block|{
if|if
condition|(
name|item
operator|->
name|zValue
argument_list|()
operator|<=
name|zValue
operator|&&
name|item
operator|->
name|type
argument_list|()
operator|==
name|DiagramItem
operator|::
name|Type
condition|)
name|zValue
operator|=
name|item
operator|->
name|zValue
argument_list|()
operator|-
literal|0.1
expr_stmt|;
block|}
name|selectedItem
operator|->
name|setZValue
argument_list|(
name|zValue
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_function
DECL|function|itemInserted
name|void
name|MainWindow
operator|::
name|itemInserted
parameter_list|(
name|DiagramItem
modifier|*
name|item
parameter_list|)
block|{
name|pointerTypeGroup
operator|->
name|button
argument_list|(
name|int
argument_list|(
name|DiagramScene
operator|::
name|MoveItem
argument_list|)
argument_list|)
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|scene
operator|->
name|setMode
argument_list|(
name|DiagramScene
operator|::
name|Mode
argument_list|(
name|pointerTypeGroup
operator|->
name|checkedId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|button
argument_list|(
name|int
argument_list|(
name|item
operator|->
name|diagramType
argument_list|()
argument_list|)
argument_list|)
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_function
DECL|function|textInserted
name|void
name|MainWindow
operator|::
name|textInserted
parameter_list|(
name|QGraphicsTextItem
modifier|*
parameter_list|)
block|{
name|buttonGroup
operator|->
name|button
argument_list|(
name|InsertTextButton
argument_list|)
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|scene
operator|->
name|setMode
argument_list|(
name|DiagramScene
operator|::
name|Mode
argument_list|(
name|pointerTypeGroup
operator|->
name|checkedId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [8]
end_comment
begin_comment
comment|//! [9]
end_comment
begin_function
DECL|function|currentFontChanged
name|void
name|MainWindow
operator|::
name|currentFontChanged
parameter_list|(
specifier|const
name|QFont
modifier|&
parameter_list|)
block|{
name|handleFontChange
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [9]
end_comment
begin_comment
comment|//! [10]
end_comment
begin_function
DECL|function|fontSizeChanged
name|void
name|MainWindow
operator|::
name|fontSizeChanged
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|)
block|{
name|handleFontChange
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [10]
end_comment
begin_comment
comment|//! [11]
end_comment
begin_function
DECL|function|sceneScaleChanged
name|void
name|MainWindow
operator|::
name|sceneScaleChanged
parameter_list|(
specifier|const
name|QString
modifier|&
name|scale
parameter_list|)
block|{
name|double
name|newScale
init|=
name|scale
operator|.
name|left
argument_list|(
name|scale
operator|.
name|indexOf
argument_list|(
name|tr
argument_list|(
literal|"%"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|toDouble
argument_list|()
operator|/
literal|100.0
decl_stmt|;
name|QMatrix
name|oldMatrix
init|=
name|view
operator|->
name|matrix
argument_list|()
decl_stmt|;
name|view
operator|->
name|resetMatrix
argument_list|()
expr_stmt|;
name|view
operator|->
name|translate
argument_list|(
name|oldMatrix
operator|.
name|dx
argument_list|()
argument_list|,
name|oldMatrix
operator|.
name|dy
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|->
name|scale
argument_list|(
name|newScale
argument_list|,
name|newScale
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [11]
end_comment
begin_comment
comment|//! [12]
end_comment
begin_function
DECL|function|textColorChanged
name|void
name|MainWindow
operator|::
name|textColorChanged
parameter_list|()
block|{
name|textAction
operator|=
name|qobject_cast
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
expr_stmt|;
name|fontColorToolButton
operator|->
name|setIcon
argument_list|(
name|createColorToolButtonIcon
argument_list|(
literal|":/images/textpointer.png"
argument_list|,
name|qvariant_cast
argument_list|<
name|QColor
argument_list|>
argument_list|(
name|textAction
operator|->
name|data
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|textButtonTriggered
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [12]
end_comment
begin_comment
comment|//! [13]
end_comment
begin_function
DECL|function|itemColorChanged
name|void
name|MainWindow
operator|::
name|itemColorChanged
parameter_list|()
block|{
name|fillAction
operator|=
name|qobject_cast
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
expr_stmt|;
name|fillColorToolButton
operator|->
name|setIcon
argument_list|(
name|createColorToolButtonIcon
argument_list|(
literal|":/images/floodfill.png"
argument_list|,
name|qvariant_cast
argument_list|<
name|QColor
argument_list|>
argument_list|(
name|fillAction
operator|->
name|data
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fillButtonTriggered
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [13]
end_comment
begin_comment
comment|//! [14]
end_comment
begin_function
DECL|function|lineColorChanged
name|void
name|MainWindow
operator|::
name|lineColorChanged
parameter_list|()
block|{
name|lineAction
operator|=
name|qobject_cast
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
expr_stmt|;
name|lineColorToolButton
operator|->
name|setIcon
argument_list|(
name|createColorToolButtonIcon
argument_list|(
literal|":/images/linecolor.png"
argument_list|,
name|qvariant_cast
argument_list|<
name|QColor
argument_list|>
argument_list|(
name|lineAction
operator|->
name|data
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|lineButtonTriggered
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [14]
end_comment
begin_comment
comment|//! [15]
end_comment
begin_function
DECL|function|textButtonTriggered
name|void
name|MainWindow
operator|::
name|textButtonTriggered
parameter_list|()
block|{
name|scene
operator|->
name|setTextColor
argument_list|(
name|qvariant_cast
argument_list|<
name|QColor
argument_list|>
argument_list|(
name|textAction
operator|->
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [15]
end_comment
begin_comment
comment|//! [16]
end_comment
begin_function
DECL|function|fillButtonTriggered
name|void
name|MainWindow
operator|::
name|fillButtonTriggered
parameter_list|()
block|{
name|scene
operator|->
name|setItemColor
argument_list|(
name|qvariant_cast
argument_list|<
name|QColor
argument_list|>
argument_list|(
name|fillAction
operator|->
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [16]
end_comment
begin_comment
comment|//! [17]
end_comment
begin_function
DECL|function|lineButtonTriggered
name|void
name|MainWindow
operator|::
name|lineButtonTriggered
parameter_list|()
block|{
name|scene
operator|->
name|setLineColor
argument_list|(
name|qvariant_cast
argument_list|<
name|QColor
argument_list|>
argument_list|(
name|lineAction
operator|->
name|data
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [17]
end_comment
begin_comment
comment|//! [18]
end_comment
begin_function
DECL|function|handleFontChange
name|void
name|MainWindow
operator|::
name|handleFontChange
parameter_list|()
block|{
name|QFont
name|font
init|=
name|fontCombo
operator|->
name|currentFont
argument_list|()
decl_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|fontSizeCombo
operator|->
name|currentText
argument_list|()
operator|.
name|toInt
argument_list|()
argument_list|)
expr_stmt|;
name|font
operator|.
name|setWeight
argument_list|(
name|boldAction
operator|->
name|isChecked
argument_list|()
condition|?
name|QFont
operator|::
name|Bold
else|:
name|QFont
operator|::
name|Normal
argument_list|)
expr_stmt|;
name|font
operator|.
name|setItalic
argument_list|(
name|italicAction
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|font
operator|.
name|setUnderline
argument_list|(
name|underlineAction
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|scene
operator|->
name|setFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [18]
end_comment
begin_comment
comment|//! [19]
end_comment
begin_function
DECL|function|itemSelected
name|void
name|MainWindow
operator|::
name|itemSelected
parameter_list|(
name|QGraphicsItem
modifier|*
name|item
parameter_list|)
block|{
name|DiagramTextItem
modifier|*
name|textItem
init|=
name|qgraphicsitem_cast
argument_list|<
name|DiagramTextItem
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|QFont
name|font
init|=
name|textItem
operator|->
name|font
argument_list|()
decl_stmt|;
name|QColor
name|color
init|=
name|textItem
operator|->
name|defaultTextColor
argument_list|()
decl_stmt|;
name|fontCombo
operator|->
name|setCurrentFont
argument_list|(
name|font
argument_list|)
expr_stmt|;
name|fontSizeCombo
operator|->
name|setEditText
argument_list|(
name|QString
argument_list|()
operator|.
name|setNum
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|boldAction
operator|->
name|setChecked
argument_list|(
name|font
operator|.
name|weight
argument_list|()
operator|==
name|QFont
operator|::
name|Bold
argument_list|)
expr_stmt|;
name|italicAction
operator|->
name|setChecked
argument_list|(
name|font
operator|.
name|italic
argument_list|()
argument_list|)
expr_stmt|;
name|underlineAction
operator|->
name|setChecked
argument_list|(
name|font
operator|.
name|underline
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [19]
end_comment
begin_comment
comment|//! [20]
end_comment
begin_function
DECL|function|about
name|void
name|MainWindow
operator|::
name|about
parameter_list|()
block|{
name|QMessageBox
operator|::
name|about
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"About Diagram Scene"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"The<b>Diagram Scene</b> example shows "
literal|"use of the graphics framework."
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [20]
end_comment
begin_comment
comment|//! [21]
end_comment
begin_function
DECL|function|createToolBox
name|void
name|MainWindow
operator|::
name|createToolBox
parameter_list|()
block|{
name|buttonGroup
operator|=
operator|new
name|QButtonGroup
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|setExclusive
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|buttonGroup
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|buttonGroupClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|createCellWidget
argument_list|(
name|tr
argument_list|(
literal|"Conditional"
argument_list|)
argument_list|,
name|DiagramItem
operator|::
name|Conditional
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|createCellWidget
argument_list|(
name|tr
argument_list|(
literal|"Process"
argument_list|)
argument_list|,
name|DiagramItem
operator|::
name|Step
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|createCellWidget
argument_list|(
name|tr
argument_list|(
literal|"Input/Output"
argument_list|)
argument_list|,
name|DiagramItem
operator|::
name|Io
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//! [21]
name|QToolButton
modifier|*
name|textButton
init|=
operator|new
name|QToolButton
decl_stmt|;
name|textButton
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|textButton
argument_list|,
name|InsertTextButton
argument_list|)
expr_stmt|;
name|textButton
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
name|QPixmap
argument_list|(
literal|":/images/textpointer.png"
argument_list|)
operator|.
name|scaled
argument_list|(
literal|30
argument_list|,
literal|30
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|textButton
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|textLayout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|textLayout
operator|->
name|addWidget
argument_list|(
name|textButton
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|AlignHCenter
argument_list|)
expr_stmt|;
name|textLayout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Text"
argument_list|)
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|textWidget
init|=
operator|new
name|QWidget
decl_stmt|;
name|textWidget
operator|->
name|setLayout
argument_list|(
name|textLayout
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|textWidget
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|setRowStretch
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|layout
operator|->
name|setColumnStretch
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|itemWidget
init|=
operator|new
name|QWidget
decl_stmt|;
name|itemWidget
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|backgroundButtonGroup
operator|=
operator|new
name|QButtonGroup
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|backgroundButtonGroup
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|backgroundButtonGroupClicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|backgroundLayout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|backgroundLayout
operator|->
name|addWidget
argument_list|(
name|createBackgroundCellWidget
argument_list|(
name|tr
argument_list|(
literal|"Blue Grid"
argument_list|)
argument_list|,
literal|":/images/background1.png"
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|backgroundLayout
operator|->
name|addWidget
argument_list|(
name|createBackgroundCellWidget
argument_list|(
name|tr
argument_list|(
literal|"White Grid"
argument_list|)
argument_list|,
literal|":/images/background2.png"
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|backgroundLayout
operator|->
name|addWidget
argument_list|(
name|createBackgroundCellWidget
argument_list|(
name|tr
argument_list|(
literal|"Gray Grid"
argument_list|)
argument_list|,
literal|":/images/background3.png"
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|backgroundLayout
operator|->
name|addWidget
argument_list|(
name|createBackgroundCellWidget
argument_list|(
name|tr
argument_list|(
literal|"No Grid"
argument_list|)
argument_list|,
literal|":/images/background4.png"
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|backgroundLayout
operator|->
name|setRowStretch
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|backgroundLayout
operator|->
name|setColumnStretch
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|backgroundWidget
init|=
operator|new
name|QWidget
decl_stmt|;
name|backgroundWidget
operator|->
name|setLayout
argument_list|(
name|backgroundLayout
argument_list|)
expr_stmt|;
comment|//! [22]
name|toolBox
operator|=
operator|new
name|QToolBox
expr_stmt|;
name|toolBox
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Maximum
argument_list|,
name|QSizePolicy
operator|::
name|Ignored
argument_list|)
argument_list|)
expr_stmt|;
name|toolBox
operator|->
name|setMinimumWidth
argument_list|(
name|itemWidget
operator|->
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
argument_list|)
expr_stmt|;
name|toolBox
operator|->
name|addItem
argument_list|(
name|itemWidget
argument_list|,
name|tr
argument_list|(
literal|"Basic Flowchart Shapes"
argument_list|)
argument_list|)
expr_stmt|;
name|toolBox
operator|->
name|addItem
argument_list|(
name|backgroundWidget
argument_list|,
name|tr
argument_list|(
literal|"Backgrounds"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [22]
end_comment
begin_comment
comment|//! [23]
end_comment
begin_function
DECL|function|createActions
name|void
name|MainWindow
operator|::
name|createActions
parameter_list|()
block|{
name|toFrontAction
operator|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/images/bringtofront.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Bring to&Front"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|toFrontAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+F"
argument_list|)
argument_list|)
expr_stmt|;
name|toFrontAction
operator|->
name|setStatusTip
argument_list|(
name|tr
argument_list|(
literal|"Bring item to front"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|toFrontAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|bringToFront
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [23]
name|sendBackAction
operator|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/images/sendtoback.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Send to&Back"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|sendBackAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+B"
argument_list|)
argument_list|)
expr_stmt|;
name|sendBackAction
operator|->
name|setStatusTip
argument_list|(
name|tr
argument_list|(
literal|"Send item to back"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sendBackAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|sendToBack
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|deleteAction
operator|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/images/delete.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"&Delete"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|deleteAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Delete"
argument_list|)
argument_list|)
expr_stmt|;
name|deleteAction
operator|->
name|setStatusTip
argument_list|(
name|tr
argument_list|(
literal|"Delete item from diagram"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|deleteAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|deleteItem
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|exitAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"E&xit"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|exitAction
operator|->
name|setShortcuts
argument_list|(
name|QKeySequence
operator|::
name|Quit
argument_list|)
expr_stmt|;
name|exitAction
operator|->
name|setStatusTip
argument_list|(
name|tr
argument_list|(
literal|"Quit Scenediagram example"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|exitAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|boldAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Bold"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|boldAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QPixmap
name|pixmap
argument_list|(
literal|":/images/bold.png"
argument_list|)
decl_stmt|;
name|boldAction
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
name|pixmap
argument_list|)
argument_list|)
expr_stmt|;
name|boldAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+B"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|boldAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|handleFontChange
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|italicAction
operator|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/images/italic.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Italic"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|italicAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|italicAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+I"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|italicAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|handleFontChange
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|underlineAction
operator|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/images/underline.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Underline"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|underlineAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|underlineAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+U"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|underlineAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|handleFontChange
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|aboutAction
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"A&bout"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|aboutAction
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+B"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|aboutAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|about
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [24]
end_comment
begin_function
DECL|function|createMenus
name|void
name|MainWindow
operator|::
name|createMenus
parameter_list|()
block|{
name|fileMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|exitAction
argument_list|)
expr_stmt|;
name|itemMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Item"
argument_list|)
argument_list|)
expr_stmt|;
name|itemMenu
operator|->
name|addAction
argument_list|(
name|deleteAction
argument_list|)
expr_stmt|;
name|itemMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|itemMenu
operator|->
name|addAction
argument_list|(
name|toFrontAction
argument_list|)
expr_stmt|;
name|itemMenu
operator|->
name|addAction
argument_list|(
name|sendBackAction
argument_list|)
expr_stmt|;
name|aboutMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Help"
argument_list|)
argument_list|)
expr_stmt|;
name|aboutMenu
operator|->
name|addAction
argument_list|(
name|aboutAction
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [24]
end_comment
begin_comment
comment|//! [25]
end_comment
begin_function
DECL|function|createToolbars
name|void
name|MainWindow
operator|::
name|createToolbars
parameter_list|()
block|{
comment|//! [25]
name|editToolBar
operator|=
name|addToolBar
argument_list|(
name|tr
argument_list|(
literal|"Edit"
argument_list|)
argument_list|)
expr_stmt|;
name|editToolBar
operator|->
name|addAction
argument_list|(
name|deleteAction
argument_list|)
expr_stmt|;
name|editToolBar
operator|->
name|addAction
argument_list|(
name|toFrontAction
argument_list|)
expr_stmt|;
name|editToolBar
operator|->
name|addAction
argument_list|(
name|sendBackAction
argument_list|)
expr_stmt|;
name|fontCombo
operator|=
operator|new
name|QFontComboBox
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|fontCombo
argument_list|,
name|SIGNAL
argument_list|(
name|currentFontChanged
argument_list|(
name|QFont
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|currentFontChanged
argument_list|(
name|QFont
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fontSizeCombo
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|fontSizeCombo
operator|->
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|8
init|;
name|i
operator|<
literal|30
condition|;
name|i
operator|=
name|i
operator|+
literal|2
control|)
name|fontSizeCombo
operator|->
name|addItem
argument_list|(
name|QString
argument_list|()
operator|.
name|setNum
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|QIntValidator
modifier|*
name|validator
init|=
operator|new
name|QIntValidator
argument_list|(
literal|2
argument_list|,
literal|64
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|fontSizeCombo
operator|->
name|setValidator
argument_list|(
name|validator
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|fontSizeCombo
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|fontSizeChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fontColorToolButton
operator|=
operator|new
name|QToolButton
expr_stmt|;
name|fontColorToolButton
operator|->
name|setPopupMode
argument_list|(
name|QToolButton
operator|::
name|MenuButtonPopup
argument_list|)
expr_stmt|;
name|fontColorToolButton
operator|->
name|setMenu
argument_list|(
name|createColorMenu
argument_list|(
name|SLOT
argument_list|(
name|textColorChanged
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|textAction
operator|=
name|fontColorToolButton
operator|->
name|menu
argument_list|()
operator|->
name|defaultAction
argument_list|()
expr_stmt|;
name|fontColorToolButton
operator|->
name|setIcon
argument_list|(
name|createColorToolButtonIcon
argument_list|(
literal|":/images/textpointer.png"
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|fontColorToolButton
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|fontColorToolButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|textButtonTriggered
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [26]
name|fillColorToolButton
operator|=
operator|new
name|QToolButton
expr_stmt|;
name|fillColorToolButton
operator|->
name|setPopupMode
argument_list|(
name|QToolButton
operator|::
name|MenuButtonPopup
argument_list|)
expr_stmt|;
name|fillColorToolButton
operator|->
name|setMenu
argument_list|(
name|createColorMenu
argument_list|(
name|SLOT
argument_list|(
name|itemColorChanged
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|fillAction
operator|=
name|fillColorToolButton
operator|->
name|menu
argument_list|()
operator|->
name|defaultAction
argument_list|()
expr_stmt|;
name|fillColorToolButton
operator|->
name|setIcon
argument_list|(
name|createColorToolButtonIcon
argument_list|(
literal|":/images/floodfill.png"
argument_list|,
name|Qt
operator|::
name|white
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|fillColorToolButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|fillButtonTriggered
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [26]
name|lineColorToolButton
operator|=
operator|new
name|QToolButton
expr_stmt|;
name|lineColorToolButton
operator|->
name|setPopupMode
argument_list|(
name|QToolButton
operator|::
name|MenuButtonPopup
argument_list|)
expr_stmt|;
name|lineColorToolButton
operator|->
name|setMenu
argument_list|(
name|createColorMenu
argument_list|(
name|SLOT
argument_list|(
name|lineColorChanged
argument_list|()
argument_list|)
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|lineAction
operator|=
name|lineColorToolButton
operator|->
name|menu
argument_list|()
operator|->
name|defaultAction
argument_list|()
expr_stmt|;
name|lineColorToolButton
operator|->
name|setIcon
argument_list|(
name|createColorToolButtonIcon
argument_list|(
literal|":/images/linecolor.png"
argument_list|,
name|Qt
operator|::
name|black
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|lineColorToolButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|lineButtonTriggered
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|textToolBar
operator|=
name|addToolBar
argument_list|(
name|tr
argument_list|(
literal|"Font"
argument_list|)
argument_list|)
expr_stmt|;
name|textToolBar
operator|->
name|addWidget
argument_list|(
name|fontCombo
argument_list|)
expr_stmt|;
name|textToolBar
operator|->
name|addWidget
argument_list|(
name|fontSizeCombo
argument_list|)
expr_stmt|;
name|textToolBar
operator|->
name|addAction
argument_list|(
name|boldAction
argument_list|)
expr_stmt|;
name|textToolBar
operator|->
name|addAction
argument_list|(
name|italicAction
argument_list|)
expr_stmt|;
name|textToolBar
operator|->
name|addAction
argument_list|(
name|underlineAction
argument_list|)
expr_stmt|;
name|colorToolBar
operator|=
name|addToolBar
argument_list|(
name|tr
argument_list|(
literal|"Color"
argument_list|)
argument_list|)
expr_stmt|;
name|colorToolBar
operator|->
name|addWidget
argument_list|(
name|fontColorToolButton
argument_list|)
expr_stmt|;
name|colorToolBar
operator|->
name|addWidget
argument_list|(
name|fillColorToolButton
argument_list|)
expr_stmt|;
name|colorToolBar
operator|->
name|addWidget
argument_list|(
name|lineColorToolButton
argument_list|)
expr_stmt|;
name|QToolButton
modifier|*
name|pointerButton
init|=
operator|new
name|QToolButton
decl_stmt|;
name|pointerButton
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pointerButton
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pointerButton
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
literal|":/images/pointer.png"
argument_list|)
argument_list|)
expr_stmt|;
name|QToolButton
modifier|*
name|linePointerButton
init|=
operator|new
name|QToolButton
decl_stmt|;
name|linePointerButton
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|linePointerButton
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
literal|":/images/linepointer.png"
argument_list|)
argument_list|)
expr_stmt|;
name|pointerTypeGroup
operator|=
operator|new
name|QButtonGroup
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|pointerTypeGroup
operator|->
name|addButton
argument_list|(
name|pointerButton
argument_list|,
name|int
argument_list|(
name|DiagramScene
operator|::
name|MoveItem
argument_list|)
argument_list|)
expr_stmt|;
name|pointerTypeGroup
operator|->
name|addButton
argument_list|(
name|linePointerButton
argument_list|,
name|int
argument_list|(
name|DiagramScene
operator|::
name|InsertLine
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|pointerTypeGroup
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|pointerGroupClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|sceneScaleCombo
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|QStringList
name|scales
decl_stmt|;
name|scales
operator|<<
name|tr
argument_list|(
literal|"50%"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"75%"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"100%"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"125%"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"150%"
argument_list|)
expr_stmt|;
name|sceneScaleCombo
operator|->
name|addItems
argument_list|(
name|scales
argument_list|)
expr_stmt|;
name|sceneScaleCombo
operator|->
name|setCurrentIndex
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|sceneScaleCombo
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|sceneScaleChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|pointerToolbar
operator|=
name|addToolBar
argument_list|(
name|tr
argument_list|(
literal|"Pointer type"
argument_list|)
argument_list|)
expr_stmt|;
name|pointerToolbar
operator|->
name|addWidget
argument_list|(
name|pointerButton
argument_list|)
expr_stmt|;
name|pointerToolbar
operator|->
name|addWidget
argument_list|(
name|linePointerButton
argument_list|)
expr_stmt|;
name|pointerToolbar
operator|->
name|addWidget
argument_list|(
name|sceneScaleCombo
argument_list|)
expr_stmt|;
comment|//! [27]
block|}
end_function
begin_comment
comment|//! [27]
end_comment
begin_comment
comment|//! [28]
end_comment
begin_function
DECL|function|createBackgroundCellWidget
name|QWidget
modifier|*
name|MainWindow
operator|::
name|createBackgroundCellWidget
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
specifier|const
name|QString
modifier|&
name|image
parameter_list|)
block|{
name|QToolButton
modifier|*
name|button
init|=
operator|new
name|QToolButton
decl_stmt|;
name|button
operator|->
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|button
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
name|image
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|backgroundButtonGroup
operator|->
name|addButton
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|AlignHCenter
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|text
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
return|return
name|widget
return|;
block|}
end_function
begin_comment
comment|//! [28]
end_comment
begin_comment
comment|//! [29]
end_comment
begin_function
DECL|function|createCellWidget
name|QWidget
modifier|*
name|MainWindow
operator|::
name|createCellWidget
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|DiagramItem
operator|::
name|DiagramType
name|type
parameter_list|)
block|{
name|DiagramItem
name|item
argument_list|(
name|type
argument_list|,
name|itemMenu
argument_list|)
decl_stmt|;
name|QIcon
name|icon
argument_list|(
name|item
operator|.
name|image
argument_list|()
argument_list|)
decl_stmt|;
name|QToolButton
modifier|*
name|button
init|=
operator|new
name|QToolButton
decl_stmt|;
name|button
operator|->
name|setIcon
argument_list|(
name|icon
argument_list|)
expr_stmt|;
name|button
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|addButton
argument_list|(
name|button
argument_list|,
name|int
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|AlignHCenter
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|text
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widget
init|=
operator|new
name|QWidget
decl_stmt|;
name|widget
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
return|return
name|widget
return|;
block|}
end_function
begin_comment
comment|//! [29]
end_comment
begin_comment
comment|//! [30]
end_comment
begin_function
DECL|function|createColorMenu
name|QMenu
modifier|*
name|MainWindow
operator|::
name|createColorMenu
parameter_list|(
specifier|const
name|char
modifier|*
name|slot
parameter_list|,
name|QColor
name|defaultColor
parameter_list|)
block|{
name|QList
argument_list|<
name|QColor
argument_list|>
name|colors
decl_stmt|;
name|colors
operator|<<
name|Qt
operator|::
name|black
operator|<<
name|Qt
operator|::
name|white
operator|<<
name|Qt
operator|::
name|red
operator|<<
name|Qt
operator|::
name|blue
operator|<<
name|Qt
operator|::
name|yellow
expr_stmt|;
name|QStringList
name|names
decl_stmt|;
name|names
operator|<<
name|tr
argument_list|(
literal|"black"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"white"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"red"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"blue"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"yellow"
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|colorMenu
init|=
operator|new
name|QMenu
argument_list|(
name|this
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|colors
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QAction
modifier|*
name|action
init|=
operator|new
name|QAction
argument_list|(
name|names
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|action
operator|->
name|setData
argument_list|(
name|colors
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|->
name|setIcon
argument_list|(
name|createColorIcon
argument_list|(
name|colors
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|action
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|slot
argument_list|)
expr_stmt|;
name|colorMenu
operator|->
name|addAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
if|if
condition|(
name|colors
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|==
name|defaultColor
condition|)
block|{
name|colorMenu
operator|->
name|setDefaultAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|colorMenu
return|;
block|}
end_function
begin_comment
comment|//! [30]
end_comment
begin_comment
comment|//! [31]
end_comment
begin_function
DECL|function|createColorToolButtonIcon
name|QIcon
name|MainWindow
operator|::
name|createColorToolButtonIcon
parameter_list|(
specifier|const
name|QString
modifier|&
name|imageFile
parameter_list|,
name|QColor
name|color
parameter_list|)
block|{
name|QPixmap
name|pixmap
argument_list|(
literal|50
argument_list|,
literal|80
argument_list|)
decl_stmt|;
name|pixmap
operator|.
name|fill
argument_list|(
name|Qt
operator|::
name|transparent
argument_list|)
expr_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|QPixmap
name|image
argument_list|(
name|imageFile
argument_list|)
decl_stmt|;
name|QRect
name|target
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|QRect
name|source
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|42
argument_list|,
literal|42
argument_list|)
decl_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|60
argument_list|,
literal|50
argument_list|,
literal|80
argument_list|)
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawPixmap
argument_list|(
name|target
argument_list|,
name|image
argument_list|,
name|source
argument_list|)
expr_stmt|;
return|return
name|QIcon
argument_list|(
name|pixmap
argument_list|)
return|;
block|}
end_function
begin_comment
comment|//! [31]
end_comment
begin_comment
comment|//! [32]
end_comment
begin_function
DECL|function|createColorIcon
name|QIcon
name|MainWindow
operator|::
name|createColorIcon
parameter_list|(
name|QColor
name|color
parameter_list|)
block|{
name|QPixmap
name|pixmap
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|pixmap
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|,
name|color
argument_list|)
expr_stmt|;
return|return
name|QIcon
argument_list|(
name|pixmap
argument_list|)
return|;
block|}
end_function
begin_comment
comment|//! [32]
end_comment
end_unit
