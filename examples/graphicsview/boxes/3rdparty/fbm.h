begin_unit
begin_comment
comment|/*****************************************************************    Prototypes for the fractional Brownian motion algorithm. These   functions were originally the work of F. Kenton Musgrave.  For   documentation of the different functions please refer to the book:   "Texturing and modeling: a procedural approach"   by David S. Ebert et. al.    ******************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|_fbm_h
end_ifndef
begin_define
DECL|macro|_fbm_h
define|#
directive|define
name|_fbm_h
end_define
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|//#define TRUE    1
comment|//#define FALSE   0
typedef|typedef
struct|struct
block|{
DECL|member|x
name|double
name|x
decl_stmt|;
DECL|member|y
name|double
name|y
decl_stmt|;
DECL|member|z
name|double
name|z
decl_stmt|;
block|}
DECL|typedef|Vector
name|Vector
typedef|;
name|float
name|noise3
parameter_list|(
name|float
name|vec
index|[]
parameter_list|)
function_decl|;
name|double
name|fBm
parameter_list|(
name|Vector
name|point
parameter_list|,
name|double
name|H
parameter_list|,
name|double
name|lacunarity
parameter_list|,
name|double
name|octaves
parameter_list|,
name|int
name|init
parameter_list|)
function_decl|;
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
end_unit
