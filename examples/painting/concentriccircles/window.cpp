begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"circlewidget.h"
end_include
begin_include
include|#
directive|include
file|"window.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|Window
name|Window
operator|::
name|Window
parameter_list|()
block|{
name|aliasedLabel
operator|=
name|createLabel
argument_list|(
name|tr
argument_list|(
literal|"Aliased"
argument_list|)
argument_list|)
expr_stmt|;
name|antialiasedLabel
operator|=
name|createLabel
argument_list|(
name|tr
argument_list|(
literal|"Antialiased"
argument_list|)
argument_list|)
expr_stmt|;
name|intLabel
operator|=
name|createLabel
argument_list|(
name|tr
argument_list|(
literal|"Int"
argument_list|)
argument_list|)
expr_stmt|;
name|floatLabel
operator|=
name|createLabel
argument_list|(
name|tr
argument_list|(
literal|"Float"
argument_list|)
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|aliasedLabel
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|antialiasedLabel
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|intLabel
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|floatLabel
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|//! [0]
comment|//! [1]
name|QTimer
modifier|*
name|timer
init|=
operator|new
name|QTimer
argument_list|(
name|this
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|circleWidgets
index|[
name|i
index|]
index|[
name|j
index|]
operator|=
operator|new
name|CircleWidget
expr_stmt|;
name|circleWidgets
index|[
name|i
index|]
index|[
name|j
index|]
operator|->
name|setAntialiased
argument_list|(
name|j
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|circleWidgets
index|[
name|i
index|]
index|[
name|j
index|]
operator|->
name|setFloatBased
argument_list|(
name|i
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|timer
argument_list|,
name|SIGNAL
argument_list|(
name|timeout
argument_list|()
argument_list|)
argument_list|,
name|circleWidgets
index|[
name|i
index|]
index|[
name|j
index|]
argument_list|,
name|SLOT
argument_list|(
name|nextAnimationFrame
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|circleWidgets
index|[
name|i
index|]
index|[
name|j
index|]
argument_list|,
name|i
operator|+
literal|1
argument_list|,
name|j
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
comment|//! [1] //! [2]
name|timer
operator|->
name|start
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Concentric Circles"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_function
DECL|function|createLabel
name|QLabel
modifier|*
name|Window
operator|::
name|createLabel
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
block|{
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|label
operator|->
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignCenter
argument_list|)
expr_stmt|;
name|label
operator|->
name|setMargin
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|label
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Box
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
return|return
name|label
return|;
block|}
end_function
begin_comment
comment|//! [3]
end_comment
end_unit
