begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_class
DECL|class|Pixmap
class|class
name|Pixmap
super|:
specifier|public
name|QGraphicsWidget
block|{
name|Q_OBJECT
public|public:
DECL|function|Pixmap
name|Pixmap
parameter_list|(
specifier|const
name|QPixmap
modifier|&
name|pix
parameter_list|,
name|QGraphicsItem
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QGraphicsWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|orig
argument_list|(
name|pix
argument_list|)
member_init_list|,
name|p
argument_list|(
name|pix
argument_list|)
block|{     }
DECL|function|paint
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
parameter_list|,
name|QWidget
modifier|*
parameter_list|)
block|{
name|painter
operator|->
name|drawPixmap
argument_list|(
name|QPointF
argument_list|()
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
DECL|function|mousePressEvent
specifier|virtual
name|void
name|mousePressEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
parameter_list|)
block|{
emit|emit
name|clicked
argument_list|()
emit|;
block|}
DECL|function|setGeometry
specifier|virtual
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
block|{
name|QGraphicsWidget
operator|::
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
if|if
condition|(
name|rect
operator|.
name|size
argument_list|()
operator|.
name|width
argument_list|()
operator|>
name|orig
operator|.
name|size
argument_list|()
operator|.
name|width
argument_list|()
condition|)
name|p
operator|=
name|orig
operator|.
name|scaled
argument_list|(
name|rect
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|p
operator|=
name|orig
expr_stmt|;
block|}
name|Q_SIGNALS
label|:
name|void
name|clicked
parameter_list|()
function_decl|;
private|private:
DECL|member|orig
name|QPixmap
name|orig
decl_stmt|;
DECL|member|p
name|QPixmap
name|p
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|createStates
name|void
name|createStates
parameter_list|(
specifier|const
name|QObjectList
modifier|&
name|objects
parameter_list|,
specifier|const
name|QRect
modifier|&
name|selectedRect
parameter_list|,
name|QState
modifier|*
name|parent
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|objects
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QState
modifier|*
name|state
init|=
operator|new
name|QState
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|state
operator|->
name|assignProperty
argument_list|(
name|objects
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"geometry"
argument_list|,
name|selectedRect
argument_list|)
expr_stmt|;
name|parent
operator|->
name|addTransition
argument_list|(
name|objects
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|state
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|createAnimations
name|void
name|createAnimations
parameter_list|(
specifier|const
name|QObjectList
modifier|&
name|objects
parameter_list|,
name|QStateMachine
modifier|*
name|machine
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|objects
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
name|machine
operator|->
name|addDefaultAnimation
argument_list|(
operator|new
name|QPropertyAnimation
argument_list|(
name|objects
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
literal|"geometry"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
name|Q_INIT_RESOURCE
argument_list|(
name|appchooser
argument_list|)
expr_stmt|;
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|Pixmap
modifier|*
name|p1
init|=
operator|new
name|Pixmap
argument_list|(
name|QPixmap
argument_list|(
literal|":/digikam.png"
argument_list|)
argument_list|)
decl_stmt|;
name|Pixmap
modifier|*
name|p2
init|=
operator|new
name|Pixmap
argument_list|(
name|QPixmap
argument_list|(
literal|":/akregator.png"
argument_list|)
argument_list|)
decl_stmt|;
name|Pixmap
modifier|*
name|p3
init|=
operator|new
name|Pixmap
argument_list|(
name|QPixmap
argument_list|(
literal|":/accessories-dictionary.png"
argument_list|)
argument_list|)
decl_stmt|;
name|Pixmap
modifier|*
name|p4
init|=
operator|new
name|Pixmap
argument_list|(
name|QPixmap
argument_list|(
literal|":/k3b.png"
argument_list|)
argument_list|)
decl_stmt|;
name|p1
operator|->
name|setObjectName
argument_list|(
literal|"p1"
argument_list|)
expr_stmt|;
name|p2
operator|->
name|setObjectName
argument_list|(
literal|"p2"
argument_list|)
expr_stmt|;
name|p3
operator|->
name|setObjectName
argument_list|(
literal|"p3"
argument_list|)
expr_stmt|;
name|p4
operator|->
name|setObjectName
argument_list|(
literal|"p4"
argument_list|)
expr_stmt|;
name|p1
operator|->
name|setGeometry
argument_list|(
name|QRectF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|64.0
argument_list|,
literal|64.0
argument_list|)
argument_list|)
expr_stmt|;
name|p2
operator|->
name|setGeometry
argument_list|(
name|QRectF
argument_list|(
literal|236.0
argument_list|,
literal|0.0
argument_list|,
literal|64.0
argument_list|,
literal|64.0
argument_list|)
argument_list|)
expr_stmt|;
name|p3
operator|->
name|setGeometry
argument_list|(
name|QRectF
argument_list|(
literal|236.0
argument_list|,
literal|236.0
argument_list|,
literal|64.0
argument_list|,
literal|64.0
argument_list|)
argument_list|)
expr_stmt|;
name|p4
operator|->
name|setGeometry
argument_list|(
name|QRectF
argument_list|(
literal|0.0
argument_list|,
literal|236.0
argument_list|,
literal|64.0
argument_list|,
literal|64.0
argument_list|)
argument_list|)
expr_stmt|;
name|QGraphicsScene
name|scene
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|)
decl_stmt|;
name|scene
operator|.
name|setBackgroundBrush
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|p3
argument_list|)
expr_stmt|;
name|scene
operator|.
name|addItem
argument_list|(
name|p4
argument_list|)
expr_stmt|;
name|QGraphicsView
name|window
argument_list|(
operator|&
name|scene
argument_list|)
decl_stmt|;
name|window
operator|.
name|setFrameStyle
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|window
operator|.
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignLeft
operator||
name|Qt
operator|::
name|AlignTop
argument_list|)
expr_stmt|;
name|window
operator|.
name|setHorizontalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|window
operator|.
name|setVerticalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|QStateMachine
name|machine
decl_stmt|;
name|machine
operator|.
name|setGlobalRestorePolicy
argument_list|(
name|QStateMachine
operator|::
name|RestoreProperties
argument_list|)
expr_stmt|;
name|QState
modifier|*
name|group
init|=
operator|new
name|QState
argument_list|(
operator|&
name|machine
argument_list|)
decl_stmt|;
name|group
operator|->
name|setObjectName
argument_list|(
literal|"group"
argument_list|)
expr_stmt|;
name|QRect
name|selectedRect
argument_list|(
literal|86
argument_list|,
literal|86
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
decl_stmt|;
name|QState
modifier|*
name|idleState
init|=
operator|new
name|QState
argument_list|(
name|group
argument_list|)
decl_stmt|;
name|group
operator|->
name|setInitialState
argument_list|(
name|idleState
argument_list|)
expr_stmt|;
name|QObjectList
name|objects
decl_stmt|;
name|objects
operator|<<
name|p1
operator|<<
name|p2
operator|<<
name|p3
operator|<<
name|p4
expr_stmt|;
name|createStates
argument_list|(
name|objects
argument_list|,
name|selectedRect
argument_list|,
name|group
argument_list|)
expr_stmt|;
name|createAnimations
argument_list|(
name|objects
argument_list|,
operator|&
name|machine
argument_list|)
expr_stmt|;
name|machine
operator|.
name|setInitialState
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|machine
operator|.
name|start
argument_list|()
expr_stmt|;
name|window
operator|.
name|resize
argument_list|(
literal|300
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|window
operator|.
name|show
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
begin_include
include|#
directive|include
file|"main.moc"
end_include
end_unit
