begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//Own
end_comment
begin_include
include|#
directive|include
file|"animationmanager.h"
end_include
begin_comment
comment|//Qt
end_comment
begin_include
include|#
directive|include
file|<QtCore/QAbstractAnimation>
end_include
begin_include
include|#
directive|include
file|<QtCore/QDebug>
end_include
begin_comment
comment|// the universe's only animation manager
end_comment
begin_decl_stmt
DECL|member|instance
name|AnimationManager
modifier|*
name|AnimationManager
operator|::
name|instance
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|AnimationManager
name|AnimationManager
operator|::
name|AnimationManager
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|self
name|AnimationManager
modifier|*
name|AnimationManager
operator|::
name|self
parameter_list|()
block|{
if|if
condition|(
operator|!
name|instance
condition|)
name|instance
operator|=
operator|new
name|AnimationManager
expr_stmt|;
return|return
name|instance
return|;
block|}
end_function
begin_function
DECL|function|registerAnimation
name|void
name|AnimationManager
operator|::
name|registerAnimation
parameter_list|(
name|QAbstractAnimation
modifier|*
name|anim
parameter_list|)
block|{
name|QObject
operator|::
name|connect
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|unregisterAnimation_helper
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|animations
operator|.
name|append
argument_list|(
name|anim
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unregisterAnimation_helper
name|void
name|AnimationManager
operator|::
name|unregisterAnimation_helper
parameter_list|(
name|QObject
modifier|*
name|obj
parameter_list|)
block|{
name|unregisterAnimation
argument_list|(
cast|static_cast
argument_list|<
name|QAbstractAnimation
operator|*
argument_list|>
argument_list|(
name|obj
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unregisterAnimation
name|void
name|AnimationManager
operator|::
name|unregisterAnimation
parameter_list|(
name|QAbstractAnimation
modifier|*
name|anim
parameter_list|)
block|{
name|QObject
operator|::
name|disconnect
argument_list|(
name|anim
argument_list|,
name|SIGNAL
argument_list|(
name|destroyed
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|unregisterAnimation_helper
argument_list|(
name|QObject
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|animations
operator|.
name|removeAll
argument_list|(
name|anim
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|unregisterAllAnimations
name|void
name|AnimationManager
operator|::
name|unregisterAllAnimations
parameter_list|()
block|{
name|animations
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pauseAll
name|void
name|AnimationManager
operator|::
name|pauseAll
parameter_list|()
block|{
foreach|foreach
control|(
name|QAbstractAnimation
modifier|*
name|animation
decl|,
name|animations
control|)
block|{
if|if
condition|(
name|animation
operator|->
name|state
argument_list|()
operator|==
name|QAbstractAnimation
operator|::
name|Running
condition|)
name|animation
operator|->
name|pause
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|resumeAll
name|void
name|AnimationManager
operator|::
name|resumeAll
parameter_list|()
block|{
foreach|foreach
control|(
name|QAbstractAnimation
modifier|*
name|animation
decl|,
name|animations
control|)
block|{
if|if
condition|(
name|animation
operator|->
name|state
argument_list|()
operator|==
name|QAbstractAnimation
operator|::
name|Paused
condition|)
name|animation
operator|->
name|resume
argument_list|()
expr_stmt|;
block|}
block|}
end_function
end_unit
