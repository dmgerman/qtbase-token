begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|MACMAINWINDOW_H
end_ifndef
begin_define
DECL|macro|MACMAINWINDOW_H
define|#
directive|define
name|MACMAINWINDOW_H
end_define
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_MAC
end_ifdef
begin_empty
empty|#import<qmaccocoaviewcontainer_mac.h>
end_empty
begin_ifdef
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
end_ifdef
begin_decl_stmt
name|class
name|SearchWidget
range|:
name|public
name|QMacCocoaViewContainer
block|{
name|Q_OBJECT
name|public
operator|:
name|SearchWidget
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
operator|~
name|SearchWidget
argument_list|()
block|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
block|;
name|private
operator|:
block|}
decl_stmt|;
end_decl_stmt
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<Carbon/Carbon.h>
end_include
begin_comment
comment|// The SearchWidget class wraps a native HISearchField.
end_comment
begin_decl_stmt
name|class
name|SearchWidget
range|:
name|public
name|QWidget
block|{
name|Q_OBJECT
name|private
operator|:
name|HIViewRef
name|searchField
block|;
name|CFStringRef
name|searchFieldText
block|;
name|public
operator|:
name|QSize
name|sizeHint
argument_list|()
specifier|const
block|;
name|SearchWidget
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
operator|~
name|SearchWidget
argument_list|()
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_function_decl
name|QMenu
modifier|*
name|createMenu
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|class
name|SearchWrapper
range|:
name|public
name|QWidget
block|{
name|Q_OBJECT
name|public
operator|:
name|SearchWrapper
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
block|;
name|QWidget
operator|*
name|s
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Spacer
range|:
name|public
name|QWidget
block|{
name|Q_OBJECT
name|public
operator|:
name|Spacer
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|MacSplitterHandle
range|:
name|public
name|QSplitterHandle
block|{
name|Q_OBJECT
name|public
operator|:
name|MacSplitterHandle
argument_list|(
argument|Qt::Orientation orientation
argument_list|,
argument|QSplitter *parent
argument_list|)
block|;
name|void
name|paintEvent
argument_list|(
name|QPaintEvent
operator|*
argument_list|)
block|;
name|QSize
name|sizeHint
argument_list|()
specifier|const
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|MacSplitter
range|:
name|public
name|QSplitter
block|{
name|public
operator|:
name|QSplitterHandle
operator|*
name|createHandle
argument_list|()
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|MacMainWindow
range|:
name|public
name|QMainWindow
block|{
name|Q_OBJECT
name|public
operator|:
name|MacMainWindow
argument_list|()
block|;
operator|~
name|MacMainWindow
argument_list|()
block|;
name|QAbstractItemModel
operator|*
name|createItemModel
argument_list|()
block|;
name|void
name|resizeEvent
argument_list|(
name|QResizeEvent
operator|*
name|e
argument_list|)
block|;
name|QAbstractItemModel
operator|*
name|createDocumentModel
argument_list|()
block|;
name|public
operator|:
name|QSplitter
operator|*
name|splitter
block|;
name|QSplitter
operator|*
name|horizontalSplitter
block|;
name|QTreeView
operator|*
name|sidebar
block|;
name|QListView
operator|*
name|documents
block|;
name|QTextEdit
operator|*
name|textedit
block|;
name|QVBoxLayout
operator|*
name|layout
block|;
name|SearchWidget
operator|*
name|searchWidget
block|;
name|QToolBar
operator|*
name|toolBar
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_WS_MAC
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//MACMAINWINDOW_H
end_comment
end_unit
