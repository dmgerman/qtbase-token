begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QGuiApplication>
end_include
begin_include
include|#
directive|include
file|<QScreen>
end_include
begin_include
include|#
directive|include
file|<QRect>
end_include
begin_include
include|#
directive|include
file|<QSharedPointer>
end_include
begin_include
include|#
directive|include
file|"window.h"
end_include
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
typedef|typedef
name|QSharedPointer
argument_list|<
name|QWindow
argument_list|>
name|WindowPtr
typedef|;
name|QGuiApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|Window
name|a
decl_stmt|;
name|a
operator|.
name|setFramePos
argument_list|(
name|QPoint
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setWindowTitle
argument_list|(
name|QStringLiteral
argument_list|(
literal|"Window A"
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setObjectName
argument_list|(
name|a
operator|.
name|windowTitle
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Window
name|b
decl_stmt|;
name|b
operator|.
name|setFramePos
argument_list|(
name|QPoint
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|.
name|setWindowTitle
argument_list|(
name|QStringLiteral
argument_list|(
literal|"Window B"
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|.
name|setObjectName
argument_list|(
name|b
operator|.
name|windowTitle
argument_list|()
argument_list|)
expr_stmt|;
name|b
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Window
name|child
argument_list|(
operator|&
name|b
argument_list|)
decl_stmt|;
name|child
operator|.
name|setObjectName
argument_list|(
name|QStringLiteral
argument_list|(
literal|"ChildOfB"
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// create one window on each additional screen as well
name|QList
argument_list|<
name|QScreen
modifier|*
argument_list|>
name|screens
init|=
name|app
operator|.
name|screens
argument_list|()
decl_stmt|;
name|QList
argument_list|<
name|WindowPtr
argument_list|>
name|windows
decl_stmt|;
foreach|foreach
control|(
name|QScreen
modifier|*
name|screen
decl|,
name|screens
control|)
block|{
if|if
condition|(
name|screen
operator|==
name|app
operator|.
name|primaryScreen
argument_list|()
condition|)
continue|continue;
name|WindowPtr
name|window
argument_list|(
operator|new
name|Window
argument_list|(
name|screen
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|geometry
init|=
name|window
operator|->
name|geometry
argument_list|()
decl_stmt|;
name|geometry
operator|.
name|moveCenter
argument_list|(
name|screen
operator|->
name|availableGeometry
argument_list|()
operator|.
name|center
argument_list|()
argument_list|)
expr_stmt|;
name|window
operator|->
name|setGeometry
argument_list|(
name|geometry
argument_list|)
expr_stmt|;
name|window
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|window
operator|->
name|setWindowTitle
argument_list|(
name|screen
operator|->
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|window
operator|->
name|setObjectName
argument_list|(
name|window
operator|->
name|windowTitle
argument_list|()
argument_list|)
expr_stmt|;
name|windows
operator|.
name|push_back
argument_list|(
name|window
argument_list|)
expr_stmt|;
block|}
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
