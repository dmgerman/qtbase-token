begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"window.h"
end_include
begin_comment
comment|//! [Window constructor]
end_comment
begin_constructor
DECL|function|Window
name|Window
operator|::
name|Window
parameter_list|()
block|{
name|editor
operator|=
operator|new
name|QTextEdit
argument_list|()
expr_stmt|;
name|QPushButton
modifier|*
name|sendButton
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"&Send message"
argument_list|)
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|sendButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|sendMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|buttonLayout
init|=
operator|new
name|QHBoxLayout
argument_list|()
decl_stmt|;
name|buttonLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|buttonLayout
operator|->
name|addWidget
argument_list|(
name|sendButton
argument_list|)
expr_stmt|;
name|buttonLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addLayout
argument_list|(
name|buttonLayout
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Custom Type Sending"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [Window constructor]
end_comment
begin_comment
comment|//! [sending a message]
end_comment
begin_function
DECL|function|sendMessage
name|void
name|Window
operator|::
name|sendMessage
parameter_list|()
block|{
name|thisMessage
operator|=
name|Message
argument_list|(
name|editor
operator|->
name|toPlainText
argument_list|()
argument_list|,
name|thisMessage
operator|.
name|headers
argument_list|()
argument_list|)
expr_stmt|;
emit|emit
name|messageSent
argument_list|(
name|thisMessage
argument_list|)
emit|;
block|}
end_function
begin_comment
comment|//! [sending a message]
end_comment
begin_comment
comment|//! [receiving a message]
end_comment
begin_function
DECL|function|setMessage
name|void
name|Window
operator|::
name|setMessage
parameter_list|(
specifier|const
name|Message
modifier|&
name|message
parameter_list|)
block|{
name|thisMessage
operator|=
name|message
expr_stmt|;
name|editor
operator|->
name|setPlainText
argument_list|(
name|thisMessage
operator|.
name|body
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [receiving a message]
end_comment
end_unit
