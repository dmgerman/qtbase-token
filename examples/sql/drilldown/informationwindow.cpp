begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"informationwindow.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|InformationWindow
name|InformationWindow
operator|::
name|InformationWindow
parameter_list|(
name|int
name|id
parameter_list|,
name|QSqlRelationalTableModel
modifier|*
name|offices
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
comment|//! [0] //! [1]
name|QLabel
modifier|*
name|locationLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Location: "
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|countryLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Country: "
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|descriptionLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Description: "
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|imageFileLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Image file: "
argument_list|)
argument_list|)
decl_stmt|;
name|createButtons
argument_list|()
expr_stmt|;
name|locationText
operator|=
operator|new
name|QLabel
expr_stmt|;
name|countryText
operator|=
operator|new
name|QLabel
expr_stmt|;
name|descriptionEditor
operator|=
operator|new
name|QTextEdit
expr_stmt|;
comment|//! [1]
comment|//! [2]
name|imageFileEditor
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|imageFileEditor
operator|->
name|setModel
argument_list|(
name|offices
operator|->
name|relationModel
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|imageFileEditor
operator|->
name|setModelColumn
argument_list|(
name|offices
operator|->
name|relationModel
argument_list|(
literal|1
argument_list|)
operator|->
name|fieldIndex
argument_list|(
literal|"file"
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [2]
comment|//! [3]
name|mapper
operator|=
operator|new
name|QDataWidgetMapper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|setModel
argument_list|(
name|offices
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|setSubmitPolicy
argument_list|(
name|QDataWidgetMapper
operator|::
name|ManualSubmit
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|setItemDelegate
argument_list|(
operator|new
name|QSqlRelationalDelegate
argument_list|(
name|mapper
argument_list|)
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|addMapping
argument_list|(
name|imageFileEditor
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|addMapping
argument_list|(
name|locationText
argument_list|,
literal|2
argument_list|,
literal|"text"
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|addMapping
argument_list|(
name|countryText
argument_list|,
literal|3
argument_list|,
literal|"text"
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|addMapping
argument_list|(
name|descriptionEditor
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|mapper
operator|->
name|setCurrentIndex
argument_list|(
name|id
argument_list|)
expr_stmt|;
comment|//! [3]
comment|//! [4]
name|connect
argument_list|(
name|descriptionEditor
argument_list|,
name|SIGNAL
argument_list|(
name|textChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|enableButtons
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|imageFileEditor
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|enableButtons
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QFormLayout
modifier|*
name|formLayout
init|=
operator|new
name|QFormLayout
decl_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
name|locationLabel
argument_list|,
name|locationText
argument_list|)
expr_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
name|countryLabel
argument_list|,
name|countryText
argument_list|)
expr_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
name|imageFileLabel
argument_list|,
name|imageFileEditor
argument_list|)
expr_stmt|;
name|formLayout
operator|->
name|addRow
argument_list|(
name|descriptionLabel
argument_list|,
name|descriptionEditor
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addLayout
argument_list|(
name|formLayout
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|buttonBox
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|locationId
operator|=
name|id
expr_stmt|;
name|displayedImage
operator|=
name|imageFileEditor
operator|->
name|currentText
argument_list|()
expr_stmt|;
comment|// Commented the following line. Now the window will look like dialog and the Qt will place the QDialogBox buttons to menu area in Symbian.
comment|// Too bad that the revert button is missing, Should the Qt place the buttons under Option menu in the menu area?!
comment|// If the Qt::Window flag was used, the background of window is white in symbian and the QLabels can't be regognized from the background.
comment|//setWindowFlags(Qt::Window);
name|enableButtons
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Office: %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|locationText
operator|->
name|text
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_function
DECL|function|id
name|int
name|InformationWindow
operator|::
name|id
parameter_list|()
block|{
return|return
name|locationId
return|;
block|}
end_function
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_function
DECL|function|revert
name|void
name|InformationWindow
operator|::
name|revert
parameter_list|()
block|{
name|mapper
operator|->
name|revert
argument_list|()
expr_stmt|;
name|enableButtons
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_function
DECL|function|submit
name|void
name|InformationWindow
operator|::
name|submit
parameter_list|()
block|{
name|QString
name|newImage
argument_list|(
name|imageFileEditor
operator|->
name|currentText
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|displayedImage
operator|!=
name|newImage
condition|)
block|{
name|displayedImage
operator|=
name|newImage
expr_stmt|;
emit|emit
name|imageChanged
argument_list|(
name|locationId
argument_list|,
name|newImage
argument_list|)
emit|;
block|}
name|mapper
operator|->
name|submit
argument_list|()
expr_stmt|;
name|mapper
operator|->
name|setCurrentIndex
argument_list|(
name|locationId
argument_list|)
expr_stmt|;
name|enableButtons
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_function
DECL|function|createButtons
name|void
name|InformationWindow
operator|::
name|createButtons
parameter_list|()
block|{
name|closeButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"&Close"
argument_list|)
argument_list|)
expr_stmt|;
name|revertButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"&Revert"
argument_list|)
argument_list|)
expr_stmt|;
name|submitButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"&Submit"
argument_list|)
argument_list|)
expr_stmt|;
name|closeButton
operator|->
name|setDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|closeButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|revertButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|revert
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|submitButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|submit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [8]
comment|//! [9]
name|buttonBox
operator|=
operator|new
name|QDialogButtonBox
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|buttonBox
operator|->
name|addButton
argument_list|(
name|submitButton
argument_list|,
name|QDialogButtonBox
operator|::
name|AcceptRole
argument_list|)
expr_stmt|;
name|buttonBox
operator|->
name|addButton
argument_list|(
name|revertButton
argument_list|,
name|QDialogButtonBox
operator|::
name|ResetRole
argument_list|)
expr_stmt|;
name|buttonBox
operator|->
name|addButton
argument_list|(
name|closeButton
argument_list|,
name|QDialogButtonBox
operator|::
name|RejectRole
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [9]
end_comment
begin_comment
comment|//! [10]
end_comment
begin_function
DECL|function|enableButtons
name|void
name|InformationWindow
operator|::
name|enableButtons
parameter_list|(
name|bool
name|enable
parameter_list|)
block|{
name|revertButton
operator|->
name|setEnabled
argument_list|(
name|enable
argument_list|)
expr_stmt|;
name|submitButton
operator|->
name|setEnabled
argument_list|(
name|enable
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [10]
end_comment
end_unit
