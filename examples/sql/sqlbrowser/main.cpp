begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"browser.h"
end_include
begin_include
include|#
directive|include
file|<QtCore>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QtSql>
end_include
begin_function
DECL|function|addConnectionsFromCommandline
name|void
name|addConnectionsFromCommandline
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|args
parameter_list|,
name|Browser
modifier|*
name|browser
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
name|args
operator|.
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QUrl
name|url
argument_list|(
name|args
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|QUrl
operator|::
name|TolerantMode
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|qWarning
argument_list|(
literal|"Invalid URL: %s"
argument_list|,
name|qPrintable
argument_list|(
name|args
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
continue|continue;
block|}
name|QSqlError
name|err
init|=
name|browser
operator|->
name|addConnection
argument_list|(
name|url
operator|.
name|scheme
argument_list|()
argument_list|,
name|url
operator|.
name|path
argument_list|()
operator|.
name|mid
argument_list|(
literal|1
argument_list|)
argument_list|,
name|url
operator|.
name|host
argument_list|()
argument_list|,
name|url
operator|.
name|userName
argument_list|()
argument_list|,
name|url
operator|.
name|password
argument_list|()
argument_list|,
name|url
operator|.
name|port
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|err
operator|.
name|type
argument_list|()
operator|!=
name|QSqlError
operator|::
name|NoError
condition|)
name|qDebug
argument_list|()
operator|<<
literal|"Unable to open connection:"
operator|<<
name|err
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|QMainWindow
name|mainWin
decl_stmt|;
name|mainWin
operator|.
name|setWindowTitle
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"Qt SQL Browser"
argument_list|)
argument_list|)
expr_stmt|;
name|Browser
name|browser
argument_list|(
operator|&
name|mainWin
argument_list|)
decl_stmt|;
name|mainWin
operator|.
name|setCentralWidget
argument_list|(
operator|&
name|browser
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|fileMenu
init|=
name|mainWin
operator|.
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
decl_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"Add&Connection..."
argument_list|)
argument_list|,
operator|&
name|browser
argument_list|,
name|SLOT
argument_list|(
name|addConnection
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"&Quit"
argument_list|)
argument_list|,
operator|&
name|app
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|helpMenu
init|=
name|mainWin
operator|.
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"&Help"
argument_list|)
argument_list|)
decl_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"About"
argument_list|)
argument_list|,
operator|&
name|browser
argument_list|,
name|SLOT
argument_list|(
name|about
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|QObject
operator|::
name|tr
argument_list|(
literal|"About Qt"
argument_list|)
argument_list|,
name|qApp
argument_list|,
name|SLOT
argument_list|(
name|aboutQt
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
operator|&
name|browser
argument_list|,
name|SIGNAL
argument_list|(
name|statusMessage
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|mainWin
operator|.
name|statusBar
argument_list|()
argument_list|,
name|SLOT
argument_list|(
name|showMessage
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|addConnectionsFromCommandline
argument_list|(
name|app
operator|.
name|arguments
argument_list|()
argument_list|,
operator|&
name|browser
argument_list|)
expr_stmt|;
name|mainWin
operator|.
name|show
argument_list|()
expr_stmt|;
if|if
condition|(
name|QSqlDatabase
operator|::
name|connectionNames
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
operator|&
name|browser
argument_list|,
literal|"addConnection"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
