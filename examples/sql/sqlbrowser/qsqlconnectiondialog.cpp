begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qsqlconnectiondialog.h"
end_include
begin_include
include|#
directive|include
file|"ui_qsqlconnectiondialog.h"
end_include
begin_include
include|#
directive|include
file|<QSqlDatabase>
end_include
begin_constructor
DECL|function|QSqlConnectionDialog
name|QSqlConnectionDialog
operator|::
name|QSqlConnectionDialog
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
name|ui
operator|.
name|setupUi
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QStringList
name|drivers
init|=
name|QSqlDatabase
operator|::
name|drivers
argument_list|()
decl_stmt|;
comment|// remove compat names
name|drivers
operator|.
name|removeAll
argument_list|(
literal|"QMYSQL3"
argument_list|)
expr_stmt|;
name|drivers
operator|.
name|removeAll
argument_list|(
literal|"QOCI8"
argument_list|)
expr_stmt|;
name|drivers
operator|.
name|removeAll
argument_list|(
literal|"QODBC3"
argument_list|)
expr_stmt|;
name|drivers
operator|.
name|removeAll
argument_list|(
literal|"QPSQL7"
argument_list|)
expr_stmt|;
name|drivers
operator|.
name|removeAll
argument_list|(
literal|"QTDS7"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|drivers
operator|.
name|contains
argument_list|(
literal|"QSQLITE"
argument_list|)
condition|)
name|ui
operator|.
name|dbCheckBox
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ui
operator|.
name|comboDriver
operator|->
name|addItems
argument_list|(
name|drivers
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QSqlConnectionDialog
name|QSqlConnectionDialog
operator|::
name|~
name|QSqlConnectionDialog
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|driverName
name|QString
name|QSqlConnectionDialog
operator|::
name|driverName
parameter_list|()
specifier|const
block|{
return|return
name|ui
operator|.
name|comboDriver
operator|->
name|currentText
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|databaseName
name|QString
name|QSqlConnectionDialog
operator|::
name|databaseName
parameter_list|()
specifier|const
block|{
return|return
name|ui
operator|.
name|editDatabase
operator|->
name|text
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|userName
name|QString
name|QSqlConnectionDialog
operator|::
name|userName
parameter_list|()
specifier|const
block|{
return|return
name|ui
operator|.
name|editUsername
operator|->
name|text
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|password
name|QString
name|QSqlConnectionDialog
operator|::
name|password
parameter_list|()
specifier|const
block|{
return|return
name|ui
operator|.
name|editPassword
operator|->
name|text
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|hostName
name|QString
name|QSqlConnectionDialog
operator|::
name|hostName
parameter_list|()
specifier|const
block|{
return|return
name|ui
operator|.
name|editHostname
operator|->
name|text
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|port
name|int
name|QSqlConnectionDialog
operator|::
name|port
parameter_list|()
specifier|const
block|{
return|return
name|ui
operator|.
name|portSpinBox
operator|->
name|value
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|useInMemoryDatabase
name|bool
name|QSqlConnectionDialog
operator|::
name|useInMemoryDatabase
parameter_list|()
specifier|const
block|{
return|return
name|ui
operator|.
name|dbCheckBox
operator|->
name|isChecked
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|on_okButton_clicked
name|void
name|QSqlConnectionDialog
operator|::
name|on_okButton_clicked
parameter_list|()
block|{
if|if
condition|(
name|ui
operator|.
name|comboDriver
operator|->
name|currentText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QMessageBox
operator|::
name|information
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"No database driver selected"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Please select a database driver"
argument_list|)
argument_list|)
expr_stmt|;
name|ui
operator|.
name|comboDriver
operator|->
name|setFocus
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|accept
argument_list|()
expr_stmt|;
block|}
block|}
end_function
end_unit
