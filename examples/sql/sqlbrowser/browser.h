begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|BROWSER_H
end_ifndef
begin_define
DECL|macro|BROWSER_H
define|#
directive|define
name|BROWSER_H
end_define
begin_include
include|#
directive|include
file|<QWidget>
end_include
begin_include
include|#
directive|include
file|"ui_browserwidget.h"
end_include
begin_decl_stmt
DECL|variable|ConnectionWidget
name|class
name|ConnectionWidget
decl_stmt|;
end_decl_stmt
begin_macro
DECL|function|QT_FORWARD_DECLARE_CLASS
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QTableView
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QPushButton
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QTextEdit
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QSqlError
argument_list|)
end_macro
begin_decl_stmt
name|class
name|Browser
range|:
name|public
name|QWidget
decl_stmt|,
name|private
name|Ui
decl|::
name|Browser
block|{
name|Q_OBJECT
name|public
range|:
name|Browser
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
decl_stmt|;
name|virtual
operator|~
name|Browser
argument_list|()
expr_stmt|;
name|QSqlError
name|addConnection
parameter_list|(
specifier|const
name|QString
modifier|&
name|driver
parameter_list|,
specifier|const
name|QString
modifier|&
name|dbName
parameter_list|,
specifier|const
name|QString
modifier|&
name|host
parameter_list|,
specifier|const
name|QString
modifier|&
name|user
parameter_list|,
specifier|const
name|QString
modifier|&
name|passwd
parameter_list|,
name|int
name|port
init|=
operator|-
literal|1
parameter_list|)
function_decl|;
name|void
name|insertRow
parameter_list|()
function_decl|;
name|void
name|deleteRow
parameter_list|()
function_decl|;
name|void
name|updateActions
parameter_list|()
function_decl|;
name|public
name|slots
range|:
name|void
name|exec
argument_list|()
decl_stmt|;
name|void
name|showTable
parameter_list|(
specifier|const
name|QString
modifier|&
name|table
parameter_list|)
function_decl|;
name|void
name|showMetaData
parameter_list|(
specifier|const
name|QString
modifier|&
name|table
parameter_list|)
function_decl|;
name|void
name|addConnection
parameter_list|()
function_decl|;
name|void
name|currentChanged
parameter_list|()
block|{
name|updateActions
argument_list|()
expr_stmt|;
block|}
name|void
name|about
parameter_list|()
function_decl|;
name|void
name|on_insertRowAction_triggered
parameter_list|()
block|{
name|insertRow
argument_list|()
expr_stmt|;
block|}
name|void
name|on_deleteRowAction_triggered
parameter_list|()
block|{
name|deleteRow
argument_list|()
expr_stmt|;
block|}
name|void
name|on_connectionWidget_tableActivated
parameter_list|(
specifier|const
name|QString
modifier|&
name|table
parameter_list|)
block|{
name|showTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
name|void
name|on_connectionWidget_metaDataRequested
parameter_list|(
specifier|const
name|QString
modifier|&
name|table
parameter_list|)
block|{
name|showMetaData
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
name|void
name|on_submitButton_clicked
parameter_list|()
block|{
name|exec
argument_list|()
expr_stmt|;
name|sqlEdit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
block|}
name|void
name|on_clearButton_clicked
parameter_list|()
block|{
name|sqlEdit
operator|->
name|clear
argument_list|()
expr_stmt|;
name|sqlEdit
operator|->
name|setFocus
argument_list|()
expr_stmt|;
block|}
name|signals
label|:
name|void
name|statusMessage
parameter_list|(
specifier|const
name|QString
modifier|&
name|message
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
