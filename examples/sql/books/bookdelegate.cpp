begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"bookdelegate.h"
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_constructor
DECL|function|BookDelegate
name|BookDelegate
operator|::
name|BookDelegate
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QSqlRelationalDelegate
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|star
argument_list|(
name|QPixmap
argument_list|(
literal|":images/star.png"
argument_list|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|paint
name|void
name|BookDelegate
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|index
operator|.
name|column
argument_list|()
operator|!=
literal|5
condition|)
block|{
name|QStyleOptionViewItemV3
name|opt
init|=
name|option
decl_stmt|;
name|opt
operator|.
name|rect
operator|.
name|adjust
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// since we draw the grid ourselves
name|QSqlRelationalDelegate
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|opt
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
else|else
block|{
specifier|const
name|QAbstractItemModel
modifier|*
name|model
init|=
name|index
operator|.
name|model
argument_list|()
decl_stmt|;
name|QPalette
operator|::
name|ColorGroup
name|cg
init|=
operator|(
name|option
operator|.
name|state
operator|&
name|QStyle
operator|::
name|State_Enabled
operator|)
condition|?
operator|(
name|option
operator|.
name|state
operator|&
name|QStyle
operator|::
name|State_Active
operator|)
condition|?
name|QPalette
operator|::
name|Normal
else|:
name|QPalette
operator|::
name|Inactive
else|:
name|QPalette
operator|::
name|Disabled
decl_stmt|;
if|if
condition|(
name|option
operator|.
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
condition|)
name|painter
operator|->
name|fillRect
argument_list|(
name|option
operator|.
name|rect
argument_list|,
name|option
operator|.
name|palette
operator|.
name|color
argument_list|(
name|cg
argument_list|,
name|QPalette
operator|::
name|Highlight
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|rating
init|=
name|model
operator|->
name|data
argument_list|(
name|index
argument_list|,
name|Qt
operator|::
name|DisplayRole
argument_list|)
operator|.
name|toInt
argument_list|()
decl_stmt|;
name|int
name|width
init|=
name|star
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|height
init|=
name|star
operator|.
name|height
argument_list|()
decl_stmt|;
name|int
name|x
init|=
name|option
operator|.
name|rect
operator|.
name|x
argument_list|()
decl_stmt|;
name|int
name|y
init|=
name|option
operator|.
name|rect
operator|.
name|y
argument_list|()
operator|+
operator|(
name|option
operator|.
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
operator|)
operator|-
operator|(
name|height
operator|/
literal|2
operator|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rating
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|->
name|drawPixmap
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|star
argument_list|)
expr_stmt|;
name|x
operator|+=
name|width
expr_stmt|;
block|}
name|drawFocus
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|option
operator|.
name|rect
operator|.
name|adjusted
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// since we draw the grid ourselves
block|}
name|QPen
name|pen
init|=
name|painter
operator|->
name|pen
argument_list|()
decl_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|option
operator|.
name|palette
operator|.
name|color
argument_list|(
name|QPalette
operator|::
name|Mid
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|.
name|rect
operator|.
name|bottomLeft
argument_list|()
argument_list|,
name|option
operator|.
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|option
operator|.
name|rect
operator|.
name|topRight
argument_list|()
argument_list|,
name|option
operator|.
name|rect
operator|.
name|bottomRight
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|pen
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sizeHint
name|QSize
name|BookDelegate
operator|::
name|sizeHint
parameter_list|(
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|index
operator|.
name|column
argument_list|()
operator|==
literal|5
condition|)
return|return
name|QSize
argument_list|(
literal|5
operator|*
name|star
operator|.
name|width
argument_list|()
argument_list|,
name|star
operator|.
name|height
argument_list|()
argument_list|)
operator|+
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|QSqlRelationalDelegate
operator|::
name|sizeHint
argument_list|(
name|option
argument_list|,
name|index
argument_list|)
operator|+
name|QSize
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
return|;
comment|// since we draw the grid ourselves
block|}
end_function
begin_function
DECL|function|editorEvent
name|bool
name|BookDelegate
operator|::
name|editorEvent
parameter_list|(
name|QEvent
modifier|*
name|event
parameter_list|,
name|QAbstractItemModel
modifier|*
name|model
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
block|{
if|if
condition|(
name|index
operator|.
name|column
argument_list|()
operator|!=
literal|5
condition|)
return|return
name|QSqlRelationalDelegate
operator|::
name|editorEvent
argument_list|(
name|event
argument_list|,
name|model
argument_list|,
name|option
argument_list|,
name|index
argument_list|)
return|;
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|MouseButtonPress
condition|)
block|{
name|QMouseEvent
modifier|*
name|mouseEvent
init|=
cast|static_cast
argument_list|<
name|QMouseEvent
operator|*
argument_list|>
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|int
name|stars
init|=
name|qBound
argument_list|(
literal|0
argument_list|,
name|int
argument_list|(
literal|0.7
operator|+
name|qreal
argument_list|(
name|mouseEvent
operator|->
name|pos
argument_list|()
operator|.
name|x
argument_list|()
operator|-
name|option
operator|.
name|rect
operator|.
name|x
argument_list|()
argument_list|)
operator|/
name|star
operator|.
name|width
argument_list|()
argument_list|)
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|model
operator|->
name|setData
argument_list|(
name|index
argument_list|,
name|QVariant
argument_list|(
name|stars
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
comment|//so that the selection can change
block|}
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|createEditor
name|QWidget
modifier|*
name|BookDelegate
operator|::
name|createEditor
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|index
operator|.
name|column
argument_list|()
operator|!=
literal|4
condition|)
return|return
name|QSqlRelationalDelegate
operator|::
name|createEditor
argument_list|(
name|parent
argument_list|,
name|option
argument_list|,
name|index
argument_list|)
return|;
comment|// for editing the year, return a spinbox with a range from -1000 to 2100.
name|QSpinBox
modifier|*
name|sb
init|=
operator|new
name|QSpinBox
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|sb
operator|->
name|setFrame
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|sb
operator|->
name|setMaximum
argument_list|(
literal|2100
argument_list|)
expr_stmt|;
name|sb
operator|->
name|setMinimum
argument_list|(
operator|-
literal|1000
argument_list|)
expr_stmt|;
return|return
name|sb
return|;
block|}
end_function
end_unit
