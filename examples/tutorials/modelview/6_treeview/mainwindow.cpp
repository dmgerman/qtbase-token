begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [Quoting ModelView Tutorial]
end_comment
begin_comment
comment|// modelview.cpp
end_comment
begin_include
include|#
directive|include
file|<QTreeView>
end_include
begin_include
include|#
directive|include
file|<QStandardItemModel>
end_include
begin_include
include|#
directive|include
file|<QStandardItem>
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_decl_stmt
DECL|variable|ROWS
specifier|const
name|int
name|ROWS
init|=
literal|2
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|COLUMNS
specifier|const
name|int
name|COLUMNS
init|=
literal|3
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|MainWindow
name|MainWindow
operator|::
name|MainWindow
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
block|{
name|treeView
operator|=
operator|new
name|QTreeView
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|setCentralWidget
argument_list|(
name|treeView
argument_list|)
expr_stmt|;
name|standardModel
operator|=
operator|new
name|QStandardItemModel
expr_stmt|;
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|preparedRow
init|=
name|prepareRow
argument_list|(
literal|"first"
argument_list|,
literal|"second"
argument_list|,
literal|"third"
argument_list|)
decl_stmt|;
name|QStandardItem
modifier|*
name|item
init|=
name|standardModel
operator|->
name|invisibleRootItem
argument_list|()
decl_stmt|;
comment|// adding a row to the invisible root item produces a root element
name|item
operator|->
name|appendRow
argument_list|(
name|preparedRow
argument_list|)
expr_stmt|;
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|secondRow
init|=
name|prepareRow
argument_list|(
literal|"111"
argument_list|,
literal|"222"
argument_list|,
literal|"333"
argument_list|)
decl_stmt|;
comment|// adding a row to an item starts a subtree
name|preparedRow
operator|.
name|first
argument_list|()
operator|->
name|appendRow
argument_list|(
name|secondRow
argument_list|)
expr_stmt|;
name|treeView
operator|->
name|setModel
argument_list|(
name|standardModel
argument_list|)
expr_stmt|;
name|treeView
operator|->
name|expandAll
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|prepareRow
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|MainWindow
operator|::
name|prepareRow
parameter_list|(
specifier|const
name|QString
modifier|&
name|first
parameter_list|,
specifier|const
name|QString
modifier|&
name|second
parameter_list|,
specifier|const
name|QString
modifier|&
name|third
parameter_list|)
block|{
name|QList
argument_list|<
name|QStandardItem
modifier|*
argument_list|>
name|rowItems
decl_stmt|;
name|rowItems
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|first
argument_list|)
expr_stmt|;
name|rowItems
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|second
argument_list|)
expr_stmt|;
name|rowItems
operator|<<
operator|new
name|QStandardItem
argument_list|(
name|third
argument_list|)
expr_stmt|;
return|return
name|rowItems
return|;
block|}
end_function
begin_comment
comment|//! [Quoting ModelView Tutorial]
end_comment
end_unit
