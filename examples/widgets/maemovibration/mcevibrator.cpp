begin_unit
begin_include
include|#
directive|include
file|"mcevibrator.h"
end_include
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|<QDBusConnection>
end_include
begin_include
include|#
directive|include
file|<QDBusMessage>
end_include
begin_include
include|#
directive|include
file|<mce/dbus-names.h>
end_include
begin_decl_stmt
DECL|member|defaultMceFilePath
specifier|const
name|char
name|MceVibrator
operator|::
name|defaultMceFilePath
index|[]
init|=
literal|"/etc/mce/mce.ini"
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [5]
end_comment
begin_function
DECL|function|checkError
specifier|static
name|void
name|checkError
parameter_list|(
name|QDBusMessage
modifier|&
name|msg
parameter_list|)
block|{
if|if
condition|(
name|msg
operator|.
name|type
argument_list|()
operator|==
name|QDBusMessage
operator|::
name|ErrorMessage
condition|)
name|qDebug
argument_list|()
operator|<<
name|msg
operator|.
name|errorName
argument_list|()
operator|<<
name|msg
operator|.
name|errorMessage
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|MceVibrator
name|MceVibrator
operator|::
name|MceVibrator
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|mceInterface
argument_list|(
name|MCE_SERVICE
argument_list|,
name|MCE_REQUEST_PATH
argument_list|,
name|MCE_REQUEST_IF
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|)
block|{
name|QDBusMessage
name|reply
init|=
name|mceInterface
operator|.
name|call
argument_list|(
name|MCE_ENABLE_VIBRATOR
argument_list|)
decl_stmt|;
name|checkError
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_destructor
DECL|function|~MceVibrator
name|MceVibrator
operator|::
name|~
name|MceVibrator
parameter_list|()
block|{
name|deactivate
argument_list|(
name|lastPatternName
argument_list|)
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|mceInterface
operator|.
name|call
argument_list|(
name|MCE_DISABLE_VIBRATOR
argument_list|)
decl_stmt|;
name|checkError
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
end_destructor
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|vibrate
name|void
name|MceVibrator
operator|::
name|vibrate
parameter_list|(
specifier|const
name|QString
modifier|&
name|patternName
parameter_list|)
block|{
name|deactivate
argument_list|(
name|lastPatternName
argument_list|)
expr_stmt|;
name|lastPatternName
operator|=
name|patternName
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|mceInterface
operator|.
name|call
argument_list|(
name|MCE_ACTIVATE_VIBRATOR_PATTERN
argument_list|,
name|patternName
argument_list|)
decl_stmt|;
name|checkError
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|deactivate
name|void
name|MceVibrator
operator|::
name|deactivate
parameter_list|(
specifier|const
name|QString
modifier|&
name|patternName
parameter_list|)
block|{
if|if
condition|(
operator|!
name|patternName
operator|.
name|isNull
argument_list|()
condition|)
block|{
name|QDBusMessage
name|reply
init|=
name|mceInterface
operator|.
name|call
argument_list|(
name|MCE_DEACTIVATE_VIBRATOR_PATTERN
argument_list|,
name|patternName
argument_list|)
decl_stmt|;
name|checkError
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_function
DECL|function|parsePatternNames
name|QStringList
name|MceVibrator
operator|::
name|parsePatternNames
parameter_list|(
name|QTextStream
modifier|&
name|stream
parameter_list|)
block|{
name|QStringList
name|result
decl_stmt|;
name|QString
name|line
decl_stmt|;
do|do
block|{
name|line
operator|=
name|stream
operator|.
name|readLine
argument_list|()
expr_stmt|;
if|if
condition|(
name|line
operator|.
name|startsWith
argument_list|(
name|QLatin1String
argument_list|(
literal|"VibratorPatterns="
argument_list|)
argument_list|)
condition|)
block|{
name|QString
name|values
init|=
name|line
operator|.
name|section
argument_list|(
literal|'='
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|result
operator|=
name|values
operator|.
name|split
argument_list|(
literal|';'
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
do|while
condition|(
operator|!
name|line
operator|.
name|isNull
argument_list|()
condition|)
do|;
return|return
name|result
return|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
end_unit
