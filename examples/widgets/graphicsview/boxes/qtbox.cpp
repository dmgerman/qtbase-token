begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qtbox.h"
end_include
begin_decl_stmt
DECL|variable|ROTATE_SPEED_X
specifier|const
name|qreal
name|ROTATE_SPEED_X
init|=
literal|30.0
operator|/
literal|1000.0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|ROTATE_SPEED_Y
specifier|const
name|qreal
name|ROTATE_SPEED_Y
init|=
literal|20.0
operator|/
literal|1000.0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|ROTATE_SPEED_Z
specifier|const
name|qreal
name|ROTATE_SPEED_Z
init|=
literal|40.0
operator|/
literal|1000.0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|MAX_ITEM_SIZE
specifier|const
name|int
name|MAX_ITEM_SIZE
init|=
literal|512
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|MIN_ITEM_SIZE
specifier|const
name|int
name|MIN_ITEM_SIZE
init|=
literal|16
decl_stmt|;
end_decl_stmt
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                  ItemBase                                  //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|ItemBase
name|ItemBase
operator|::
name|ItemBase
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
member_init_list|:
name|m_size
argument_list|(
name|size
argument_list|)
member_init_list|,
name|m_isResizing
argument_list|(
literal|false
argument_list|)
block|{
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsMovable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsSelectable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setFlag
argument_list|(
name|QGraphicsItem
operator|::
name|ItemIsFocusable
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setAcceptHoverEvents
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setPos
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|m_startTime
operator|=
name|QTime
operator|::
name|currentTime
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~ItemBase
name|ItemBase
operator|::
name|~
name|ItemBase
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|boundingRect
name|QRectF
name|ItemBase
operator|::
name|boundingRect
parameter_list|()
specifier|const
block|{
return|return
name|QRectF
argument_list|(
operator|-
name|m_size
operator|/
literal|2
argument_list|,
operator|-
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
argument_list|,
name|m_size
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|paint
name|void
name|ItemBase
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
condition|)
block|{
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_HasFocus
condition|)
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|yellow
argument_list|)
expr_stmt|;
else|else
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawRect
argument_list|(
name|boundingRect
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|m_size
operator|/
literal|2
operator|-
literal|9
argument_list|,
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
operator|/
literal|2
operator|-
literal|9
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|m_size
operator|/
literal|2
operator|-
literal|6
argument_list|,
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
operator|/
literal|2
operator|-
literal|6
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|m_size
operator|/
literal|2
operator|-
literal|3
argument_list|,
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
operator|/
literal|2
operator|-
literal|3
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|contextMenuEvent
name|void
name|ItemBase
operator|::
name|contextMenuEvent
parameter_list|(
name|QGraphicsSceneContextMenuEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
operator|!
name|isSelected
argument_list|()
operator|&&
name|scene
argument_list|()
condition|)
block|{
name|scene
argument_list|()
operator|->
name|clearSelection
argument_list|()
expr_stmt|;
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|QMenu
name|menu
decl_stmt|;
name|QAction
modifier|*
name|delAction
init|=
name|menu
operator|.
name|addAction
argument_list|(
literal|"Delete"
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|newAction
init|=
name|menu
operator|.
name|addAction
argument_list|(
literal|"New"
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|growAction
init|=
name|menu
operator|.
name|addAction
argument_list|(
literal|"Grow"
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|shrinkAction
init|=
name|menu
operator|.
name|addAction
argument_list|(
literal|"Shrink"
argument_list|)
decl_stmt|;
name|QAction
modifier|*
name|selectedAction
init|=
name|menu
operator|.
name|exec
argument_list|(
name|event
operator|->
name|screenPos
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|selectedAction
operator|==
name|delAction
condition|)
name|deleteSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|selectedAction
operator|==
name|newAction
condition|)
name|duplicateSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|selectedAction
operator|==
name|growAction
condition|)
name|growSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|selectedAction
operator|==
name|shrinkAction
condition|)
name|shrinkSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|duplicateSelectedItems
name|void
name|ItemBase
operator|::
name|duplicateSelectedItems
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|)
block|{
if|if
condition|(
operator|!
name|scene
condition|)
return|return;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|selected
decl_stmt|;
name|selected
operator|=
name|scene
operator|->
name|selectedItems
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|selected
control|)
block|{
name|ItemBase
modifier|*
name|itemBase
init|=
name|qgraphicsitem_cast
argument_list|<
name|ItemBase
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|itemBase
condition|)
name|scene
operator|->
name|addItem
argument_list|(
name|itemBase
operator|->
name|createNew
argument_list|(
name|itemBase
operator|->
name|m_size
argument_list|,
name|itemBase
operator|->
name|pos
argument_list|()
operator|.
name|x
argument_list|()
operator|+
name|itemBase
operator|->
name|m_size
argument_list|,
name|itemBase
operator|->
name|pos
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|deleteSelectedItems
name|void
name|ItemBase
operator|::
name|deleteSelectedItems
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|)
block|{
if|if
condition|(
operator|!
name|scene
condition|)
return|return;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|selected
decl_stmt|;
name|selected
operator|=
name|scene
operator|->
name|selectedItems
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|selected
control|)
block|{
name|ItemBase
modifier|*
name|itemBase
init|=
name|qgraphicsitem_cast
argument_list|<
name|ItemBase
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|itemBase
condition|)
operator|delete
name|itemBase
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|growSelectedItems
name|void
name|ItemBase
operator|::
name|growSelectedItems
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|)
block|{
if|if
condition|(
operator|!
name|scene
condition|)
return|return;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|selected
decl_stmt|;
name|selected
operator|=
name|scene
operator|->
name|selectedItems
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|selected
control|)
block|{
name|ItemBase
modifier|*
name|itemBase
init|=
name|qgraphicsitem_cast
argument_list|<
name|ItemBase
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|itemBase
condition|)
block|{
name|itemBase
operator|->
name|prepareGeometryChange
argument_list|()
expr_stmt|;
name|itemBase
operator|->
name|m_size
operator|*=
literal|2
expr_stmt|;
if|if
condition|(
name|itemBase
operator|->
name|m_size
operator|>
name|MAX_ITEM_SIZE
condition|)
name|itemBase
operator|->
name|m_size
operator|=
name|MAX_ITEM_SIZE
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|shrinkSelectedItems
name|void
name|ItemBase
operator|::
name|shrinkSelectedItems
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|)
block|{
if|if
condition|(
operator|!
name|scene
condition|)
return|return;
name|QList
argument_list|<
name|QGraphicsItem
modifier|*
argument_list|>
name|selected
decl_stmt|;
name|selected
operator|=
name|scene
operator|->
name|selectedItems
argument_list|()
expr_stmt|;
foreach|foreach
control|(
name|QGraphicsItem
modifier|*
name|item
decl|,
name|selected
control|)
block|{
name|ItemBase
modifier|*
name|itemBase
init|=
name|qgraphicsitem_cast
argument_list|<
name|ItemBase
operator|*
argument_list|>
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|itemBase
condition|)
block|{
name|itemBase
operator|->
name|prepareGeometryChange
argument_list|()
expr_stmt|;
name|itemBase
operator|->
name|m_size
operator|/=
literal|2
expr_stmt|;
if|if
condition|(
name|itemBase
operator|->
name|m_size
operator|<
name|MIN_ITEM_SIZE
condition|)
name|itemBase
operator|->
name|m_size
operator|=
name|MIN_ITEM_SIZE
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|mouseMoveEvent
name|void
name|ItemBase
operator|::
name|mouseMoveEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|m_isResizing
condition|)
block|{
name|int
name|dx
init|=
name|int
argument_list|(
literal|2.0
operator|*
name|event
operator|->
name|pos
argument_list|()
operator|.
name|x
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|dy
init|=
name|int
argument_list|(
literal|2.0
operator|*
name|event
operator|->
name|pos
argument_list|()
operator|.
name|y
argument_list|()
argument_list|)
decl_stmt|;
name|prepareGeometryChange
argument_list|()
expr_stmt|;
name|m_size
operator|=
operator|(
name|dx
operator|>
name|dy
condition|?
name|dx
else|:
name|dy
operator|)
expr_stmt|;
if|if
condition|(
name|m_size
operator|<
name|MIN_ITEM_SIZE
condition|)
name|m_size
operator|=
name|MIN_ITEM_SIZE
expr_stmt|;
elseif|else
if|if
condition|(
name|m_size
operator|>
name|MAX_ITEM_SIZE
condition|)
name|m_size
operator|=
name|MAX_ITEM_SIZE
expr_stmt|;
block|}
else|else
block|{
name|QGraphicsItem
operator|::
name|mouseMoveEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|hoverMoveEvent
name|void
name|ItemBase
operator|::
name|hoverMoveEvent
parameter_list|(
name|QGraphicsSceneHoverEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|m_isResizing
operator|||
operator|(
name|isInResizeArea
argument_list|(
name|event
operator|->
name|pos
argument_list|()
argument_list|)
operator|&&
name|isSelected
argument_list|()
operator|)
condition|)
name|setCursor
argument_list|(
name|Qt
operator|::
name|SizeFDiagCursor
argument_list|)
expr_stmt|;
else|else
name|setCursor
argument_list|(
name|Qt
operator|::
name|ArrowCursor
argument_list|)
expr_stmt|;
name|QGraphicsItem
operator|::
name|hoverMoveEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mousePressEvent
name|void
name|ItemBase
operator|::
name|mousePressEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
specifier|static
name|qreal
name|z
init|=
literal|0.0
decl_stmt|;
name|setZValue
argument_list|(
name|z
operator|+=
literal|1.0
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
operator|&&
name|isInResizeArea
argument_list|(
name|event
operator|->
name|pos
argument_list|()
argument_list|)
condition|)
block|{
name|m_isResizing
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|QGraphicsItem
operator|::
name|mousePressEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mouseReleaseEvent
name|void
name|ItemBase
operator|::
name|mouseReleaseEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
operator|&&
name|m_isResizing
condition|)
block|{
name|m_isResizing
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|QGraphicsItem
operator|::
name|mouseReleaseEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|keyPressEvent
name|void
name|ItemBase
operator|::
name|keyPressEvent
parameter_list|(
name|QKeyEvent
modifier|*
name|event
parameter_list|)
block|{
switch|switch
condition|(
name|event
operator|->
name|key
argument_list|()
condition|)
block|{
case|case
name|Qt
operator|::
name|Key_Delete
case|:
name|deleteSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Insert
case|:
name|duplicateSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Plus
case|:
name|growSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|Qt
operator|::
name|Key_Minus
case|:
name|shrinkSelectedItems
argument_list|(
name|scene
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
name|QGraphicsItem
operator|::
name|keyPressEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_function
DECL|function|wheelEvent
name|void
name|ItemBase
operator|::
name|wheelEvent
parameter_list|(
name|QGraphicsSceneWheelEvent
modifier|*
name|event
parameter_list|)
block|{
name|prepareGeometryChange
argument_list|()
expr_stmt|;
name|m_size
operator|=
name|int
argument_list|(
name|m_size
operator|*
name|exp
argument_list|(
operator|-
name|event
operator|->
name|delta
argument_list|()
operator|/
literal|600.0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_size
operator|>
name|MAX_ITEM_SIZE
condition|)
name|m_size
operator|=
name|MAX_ITEM_SIZE
expr_stmt|;
elseif|else
if|if
condition|(
name|m_size
operator|<
name|MIN_ITEM_SIZE
condition|)
name|m_size
operator|=
name|MIN_ITEM_SIZE
expr_stmt|;
block|}
end_function
begin_function
DECL|function|type
name|int
name|ItemBase
operator|::
name|type
parameter_list|()
specifier|const
block|{
return|return
name|Type
return|;
block|}
end_function
begin_function
DECL|function|isInResizeArea
name|bool
name|ItemBase
operator|::
name|isInResizeArea
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pos
parameter_list|)
block|{
return|return
operator|(
operator|-
name|pos
operator|.
name|y
argument_list|()
operator|<
name|pos
operator|.
name|x
argument_list|()
operator|-
name|m_size
operator|+
literal|9
operator|)
return|;
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                    QtBox                                   //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|QtBox
name|QtBox
operator|::
name|QtBox
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
member_init_list|:
name|ItemBase
argument_list|(
name|size
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
member_init_list|,
name|m_texture
argument_list|(
literal|0
argument_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|8
condition|;
operator|++
name|i
control|)
block|{
name|m_vertices
index|[
name|i
index|]
operator|.
name|setX
argument_list|(
name|i
operator|&
literal|1
condition|?
literal|0.5f
else|:
operator|-
literal|0.5f
argument_list|)
expr_stmt|;
name|m_vertices
index|[
name|i
index|]
operator|.
name|setY
argument_list|(
name|i
operator|&
literal|2
condition|?
literal|0.5f
else|:
operator|-
literal|0.5f
argument_list|)
expr_stmt|;
name|m_vertices
index|[
name|i
index|]
operator|.
name|setZ
argument_list|(
name|i
operator|&
literal|4
condition|?
literal|0.5f
else|:
operator|-
literal|0.5f
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|m_texCoords
index|[
name|i
index|]
operator|.
name|setX
argument_list|(
name|i
operator|&
literal|1
condition|?
literal|1.0f
else|:
literal|0.0f
argument_list|)
expr_stmt|;
name|m_texCoords
index|[
name|i
index|]
operator|.
name|setY
argument_list|(
name|i
operator|&
literal|2
condition|?
literal|1.0f
else|:
literal|0.0f
argument_list|)
expr_stmt|;
block|}
name|m_normals
index|[
literal|0
index|]
operator|=
name|QVector3D
argument_list|(
operator|-
literal|1.0f
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|m_normals
index|[
literal|1
index|]
operator|=
name|QVector3D
argument_list|(
literal|1.0f
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|m_normals
index|[
literal|2
index|]
operator|=
name|QVector3D
argument_list|(
literal|0.0f
argument_list|,
operator|-
literal|1.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|m_normals
index|[
literal|3
index|]
operator|=
name|QVector3D
argument_list|(
literal|0.0f
argument_list|,
literal|1.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|m_normals
index|[
literal|4
index|]
operator|=
name|QVector3D
argument_list|(
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
operator|-
literal|1.0f
argument_list|)
expr_stmt|;
name|m_normals
index|[
literal|5
index|]
operator|=
name|QVector3D
argument_list|(
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QtBox
name|QtBox
operator|::
name|~
name|QtBox
parameter_list|()
block|{
if|if
condition|(
name|m_texture
condition|)
operator|delete
name|m_texture
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|createNew
name|ItemBase
modifier|*
name|QtBox
operator|::
name|createNew
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
return|return
operator|new
name|QtBox
argument_list|(
name|size
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|paint
name|void
name|QtBox
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QRectF
name|rect
init|=
name|boundingRect
argument_list|()
operator|.
name|translated
argument_list|(
name|pos
argument_list|()
argument_list|)
decl_stmt|;
name|float
name|width
init|=
name|float
argument_list|(
name|painter
operator|->
name|device
argument_list|()
operator|->
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|float
name|height
init|=
name|float
argument_list|(
name|painter
operator|->
name|device
argument_list|()
operator|->
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|float
name|left
init|=
literal|2.0f
operator|*
name|float
argument_list|(
name|rect
operator|.
name|left
argument_list|()
argument_list|)
operator|/
name|width
operator|-
literal|1.0f
decl_stmt|;
name|float
name|right
init|=
literal|2.0f
operator|*
name|float
argument_list|(
name|rect
operator|.
name|right
argument_list|()
argument_list|)
operator|/
name|width
operator|-
literal|1.0f
decl_stmt|;
name|float
name|top
init|=
literal|1.0f
operator|-
literal|2.0f
operator|*
name|float
argument_list|(
name|rect
operator|.
name|top
argument_list|()
argument_list|)
operator|/
name|height
decl_stmt|;
name|float
name|bottom
init|=
literal|1.0f
operator|-
literal|2.0f
operator|*
name|float
argument_list|(
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
operator|/
name|height
decl_stmt|;
name|float
name|moveToRectMatrix
index|[]
init|=
block|{
literal|0.5f
operator|*
operator|(
name|right
operator|-
name|left
operator|)
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.5f
operator|*
operator|(
name|bottom
operator|-
name|top
operator|)
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.5f
operator|*
operator|(
name|right
operator|+
name|left
operator|)
block|,
literal|0.5f
operator|*
operator|(
name|bottom
operator|+
name|top
operator|)
block|,
literal|0.0f
block|,
literal|1.0f
block|}
decl_stmt|;
name|painter
operator|->
name|beginNativePainting
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadMatrixf
argument_list|(
name|moveToRectMatrix
argument_list|)
expr_stmt|;
name|qgluPerspective
argument_list|(
literal|60.0
argument_list|,
literal|1.0
argument_list|,
literal|0.01
argument_list|,
literal|10.0
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
comment|//glEnable(GL_DEPTH_TEST);
name|glEnable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_COLOR_MATERIAL
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_NORMALIZE
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_texture
operator|==
literal|0
condition|)
name|m_texture
operator|=
operator|new
name|GLTexture2D
argument_list|(
literal|":/res/boxes/qt-logo.jpg"
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
name|m_texture
operator|->
name|bind
argument_list|()
expr_stmt|;
name|glEnable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glColorMaterial
argument_list|(
name|GL_FRONT_AND_BACK
argument_list|,
name|GL_AMBIENT_AND_DIFFUSE
argument_list|)
expr_stmt|;
name|float
name|lightColour
index|[]
init|=
block|{
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|}
decl_stmt|;
name|float
name|lightDir
index|[]
init|=
block|{
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|}
decl_stmt|;
name|glLightfv
argument_list|(
name|GL_LIGHT0
argument_list|,
name|GL_DIFFUSE
argument_list|,
name|lightColour
argument_list|)
expr_stmt|;
name|glLightfv
argument_list|(
name|GL_LIGHT0
argument_list|,
name|GL_POSITION
argument_list|,
name|lightDir
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHT0
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
operator|-
literal|1.5f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|ROTATE_SPEED_X
operator|*
name|m_startTime
operator|.
name|msecsTo
argument_list|(
name|QTime
operator|::
name|currentTime
argument_list|()
argument_list|)
argument_list|,
literal|1.0f
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|ROTATE_SPEED_Y
operator|*
name|m_startTime
operator|.
name|msecsTo
argument_list|(
name|QTime
operator|::
name|currentTime
argument_list|()
argument_list|)
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|ROTATE_SPEED_Z
operator|*
name|m_startTime
operator|.
name|msecsTo
argument_list|(
name|QTime
operator|::
name|currentTime
argument_list|()
argument_list|)
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|int
name|dt
init|=
name|m_startTime
operator|.
name|msecsTo
argument_list|(
name|QTime
operator|::
name|currentTime
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|dt
operator|<
literal|500
condition|)
name|glScalef
argument_list|(
name|dt
operator|/
literal|500.0f
argument_list|,
name|dt
operator|/
literal|500.0f
argument_list|,
name|dt
operator|/
literal|500.0f
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|dir
init|=
literal|0
init|;
name|dir
operator|<
literal|3
condition|;
operator|++
name|dir
control|)
block|{
name|glColor4f
argument_list|(
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0
argument_list|)
expr_stmt|;
name|glBegin
argument_list|(
name|GL_TRIANGLE_STRIP
argument_list|)
expr_stmt|;
name|glNormal3fv
argument_list|(
cast|reinterpret_cast
argument_list|<
name|float
operator|*
argument_list|>
argument_list|(
operator|&
name|m_normals
index|[
literal|2
operator|*
name|dir
operator|+
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|glTexCoord2fv
argument_list|(
cast|reinterpret_cast
argument_list|<
name|float
operator|*
argument_list|>
argument_list|(
operator|&
name|m_texCoords
index|[
operator|(
name|j
operator|<<
literal|1
operator|)
operator||
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|glVertex3fv
argument_list|(
cast|reinterpret_cast
argument_list|<
name|float
operator|*
argument_list|>
argument_list|(
operator|&
name|m_vertices
index|[
operator|(
name|i
operator|<<
operator|(
operator|(
name|dir
operator|+
literal|2
operator|)
operator|%
literal|3
operator|)
operator|)
operator||
operator|(
name|j
operator|<<
operator|(
operator|(
name|dir
operator|+
literal|1
operator|)
operator|%
literal|3
operator|)
operator|)
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|glEnd
argument_list|()
expr_stmt|;
name|glBegin
argument_list|(
name|GL_TRIANGLE_STRIP
argument_list|)
expr_stmt|;
name|glNormal3fv
argument_list|(
cast|reinterpret_cast
argument_list|<
name|float
operator|*
argument_list|>
argument_list|(
operator|&
name|m_normals
index|[
literal|2
operator|*
name|dir
operator|+
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|glTexCoord2fv
argument_list|(
cast|reinterpret_cast
argument_list|<
name|float
operator|*
argument_list|>
argument_list|(
operator|&
name|m_texCoords
index|[
operator|(
name|j
operator|<<
literal|1
operator|)
operator||
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|glVertex3fv
argument_list|(
cast|reinterpret_cast
argument_list|<
name|float
operator|*
argument_list|>
argument_list|(
operator|&
name|m_vertices
index|[
operator|(
literal|1
operator|<<
name|dir
operator|)
operator||
operator|(
name|i
operator|<<
operator|(
operator|(
name|dir
operator|+
literal|1
operator|)
operator|%
literal|3
operator|)
operator|)
operator||
operator|(
name|j
operator|<<
operator|(
operator|(
name|dir
operator|+
literal|2
operator|)
operator|%
literal|3
operator|)
operator|)
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|glEnd
argument_list|()
expr_stmt|;
block|}
name|m_texture
operator|->
name|unbind
argument_list|()
expr_stmt|;
comment|//glDisable(GL_DEPTH_TEST);
name|glDisable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_COLOR_MATERIAL
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_LIGHT0
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_NORMALIZE
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|painter
operator|->
name|endNativePainting
argument_list|()
expr_stmt|;
name|ItemBase
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                 CircleItem                                 //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|CircleItem
name|CircleItem
operator|::
name|CircleItem
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
member_init_list|:
name|ItemBase
argument_list|(
name|size
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|{
name|m_color
operator|=
name|QColor
operator|::
name|fromHsv
argument_list|(
name|rand
argument_list|()
operator|%
literal|360
argument_list|,
literal|255
argument_list|,
literal|255
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|paint
name|void
name|CircleItem
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|int
name|dt
init|=
name|m_startTime
operator|.
name|msecsTo
argument_list|(
name|QTime
operator|::
name|currentTime
argument_list|()
argument_list|)
decl_stmt|;
name|qreal
name|r0
init|=
literal|0.5
operator|*
name|m_size
operator|*
operator|(
literal|1.0
operator|-
name|exp
argument_list|(
operator|-
literal|0.001
operator|*
operator|(
operator|(
name|dt
operator|+
literal|3800
operator|)
operator|%
literal|4000
operator|)
argument_list|)
operator|)
decl_stmt|;
name|qreal
name|r1
init|=
literal|0.5
operator|*
name|m_size
operator|*
operator|(
literal|1.0
operator|-
name|exp
argument_list|(
operator|-
literal|0.001
operator|*
operator|(
operator|(
name|dt
operator|+
literal|0
operator|)
operator|%
literal|4000
operator|)
argument_list|)
operator|)
decl_stmt|;
name|qreal
name|r2
init|=
literal|0.5
operator|*
name|m_size
operator|*
operator|(
literal|1.0
operator|-
name|exp
argument_list|(
operator|-
literal|0.001
operator|*
operator|(
operator|(
name|dt
operator|+
literal|1800
operator|)
operator|%
literal|4000
operator|)
argument_list|)
operator|)
decl_stmt|;
name|qreal
name|r3
init|=
literal|0.5
operator|*
name|m_size
operator|*
operator|(
literal|1.0
operator|-
name|exp
argument_list|(
operator|-
literal|0.001
operator|*
operator|(
operator|(
name|dt
operator|+
literal|2000
operator|)
operator|%
literal|4000
operator|)
argument_list|)
operator|)
decl_stmt|;
if|if
condition|(
name|r0
operator|>
name|r1
condition|)
name|r0
operator|=
literal|0.0
expr_stmt|;
if|if
condition|(
name|r2
operator|>
name|r3
condition|)
name|r2
operator|=
literal|0.0
expr_stmt|;
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|r1
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|arcTo
argument_list|(
operator|-
name|r1
argument_list|,
operator|-
name|r1
argument_list|,
literal|2
operator|*
name|r1
argument_list|,
literal|2
operator|*
name|r1
argument_list|,
literal|0.0
argument_list|,
literal|360.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|r0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|arcTo
argument_list|(
operator|-
name|r0
argument_list|,
operator|-
name|r0
argument_list|,
literal|2
operator|*
name|r0
argument_list|,
literal|2
operator|*
name|r0
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|360.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|r3
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|arcTo
argument_list|(
operator|-
name|r3
argument_list|,
operator|-
name|r3
argument_list|,
literal|2
operator|*
name|r3
argument_list|,
literal|2
operator|*
name|r3
argument_list|,
literal|0.0
argument_list|,
literal|360.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|r0
argument_list|,
literal|0.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|arcTo
argument_list|(
operator|-
name|r2
argument_list|,
operator|-
name|r2
argument_list|,
literal|2
operator|*
name|r2
argument_list|,
literal|2
operator|*
name|r2
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|360.0
argument_list|)
expr_stmt|;
name|path
operator|.
name|closeSubpath
argument_list|()
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|QBrush
argument_list|(
name|m_color
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|Qt
operator|::
name|NoBrush
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|SolidLine
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ItemBase
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createNew
name|ItemBase
modifier|*
name|CircleItem
operator|::
name|createNew
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
return|return
operator|new
name|CircleItem
argument_list|(
name|size
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
return|;
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                 SquareItem                                 //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|SquareItem
name|SquareItem
operator|::
name|SquareItem
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
member_init_list|:
name|ItemBase
argument_list|(
name|size
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|{
name|m_image
operator|=
name|QPixmap
argument_list|(
literal|":/res/boxes/square.jpg"
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|paint
name|void
name|SquareItem
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|int
name|dt
init|=
name|m_startTime
operator|.
name|msecsTo
argument_list|(
name|QTime
operator|::
name|currentTime
argument_list|()
argument_list|)
decl_stmt|;
name|QTransform
name|oldTransform
init|=
name|painter
operator|->
name|worldTransform
argument_list|()
decl_stmt|;
name|int
name|dtMod
init|=
name|dt
operator|%
literal|2000
decl_stmt|;
name|qreal
name|amp
init|=
literal|0.002
operator|*
operator|(
name|dtMod
operator|<
literal|1000
condition|?
name|dtMod
else|:
literal|2000
operator|-
name|dtMod
operator|)
operator|-
literal|1.0
decl_stmt|;
name|qreal
name|scale
init|=
literal|0.6
operator|+
literal|0.2
operator|*
name|amp
operator|*
name|amp
decl_stmt|;
name|painter
operator|->
name|setWorldTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|rotate
argument_list|(
literal|15.0
operator|*
name|amp
argument_list|)
operator|.
name|scale
argument_list|(
name|scale
argument_list|,
name|scale
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
operator|-
name|m_size
operator|/
literal|2
argument_list|,
operator|-
name|m_size
operator|/
literal|2
argument_list|,
name|m_size
argument_list|,
name|m_size
argument_list|,
name|m_image
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setWorldTransform
argument_list|(
name|oldTransform
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ItemBase
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createNew
name|ItemBase
modifier|*
name|SquareItem
operator|::
name|createNew
parameter_list|(
name|int
name|size
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
return|return
operator|new
name|SquareItem
argument_list|(
name|size
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
return|;
block|}
end_function
end_unit
