begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_include
include|#
directive|include
file|"scene.h"
end_include
begin_include
include|#
directive|include
file|<QtGui/qmatrix4x4.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qvector3d.h>
end_include
begin_include
include|#
directive|include
file|"3rdparty/fbm.h"
end_include
begin_function
DECL|function|checkGLErrors
name|void
name|checkGLErrors
parameter_list|(
specifier|const
name|QString
modifier|&
name|prefix
parameter_list|)
block|{
switch|switch
condition|(
name|glGetError
argument_list|()
condition|)
block|{
case|case
name|GL_NO_ERROR
case|:
comment|//qDebug()<< prefix<< tr("No error.");
break|break;
case|case
name|GL_INVALID_ENUM
case|:
name|qDebug
argument_list|()
operator|<<
name|prefix
operator|<<
name|QObject
operator|::
name|tr
argument_list|(
literal|"Invalid enum."
argument_list|)
expr_stmt|;
break|break;
case|case
name|GL_INVALID_VALUE
case|:
name|qDebug
argument_list|()
operator|<<
name|prefix
operator|<<
name|QObject
operator|::
name|tr
argument_list|(
literal|"Invalid value."
argument_list|)
expr_stmt|;
break|break;
case|case
name|GL_INVALID_OPERATION
case|:
name|qDebug
argument_list|()
operator|<<
name|prefix
operator|<<
name|QObject
operator|::
name|tr
argument_list|(
literal|"Invalid operation."
argument_list|)
expr_stmt|;
break|break;
case|case
name|GL_STACK_OVERFLOW
case|:
name|qDebug
argument_list|()
operator|<<
name|prefix
operator|<<
name|QObject
operator|::
name|tr
argument_list|(
literal|"Stack overflow."
argument_list|)
expr_stmt|;
break|break;
case|case
name|GL_STACK_UNDERFLOW
case|:
name|qDebug
argument_list|()
operator|<<
name|prefix
operator|<<
name|QObject
operator|::
name|tr
argument_list|(
literal|"Stack underflow."
argument_list|)
expr_stmt|;
break|break;
case|case
name|GL_OUT_OF_MEMORY
case|:
name|qDebug
argument_list|()
operator|<<
name|prefix
operator|<<
name|QObject
operator|::
name|tr
argument_list|(
literal|"Out of memory."
argument_list|)
expr_stmt|;
break|break;
default|default:
name|qDebug
argument_list|()
operator|<<
name|prefix
operator|<<
name|QObject
operator|::
name|tr
argument_list|(
literal|"Unknown error."
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                  ColorEdit                                 //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|ColorEdit
name|ColorEdit
operator|::
name|ColorEdit
parameter_list|(
name|QRgb
name|initialColor
parameter_list|,
name|int
name|id
parameter_list|)
member_init_list|:
name|m_color
argument_list|(
name|initialColor
argument_list|)
member_init_list|,
name|m_id
argument_list|(
name|id
argument_list|)
block|{
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|layout
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_lineEdit
operator|=
operator|new
name|QLineEdit
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|m_color
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|m_lineEdit
argument_list|)
expr_stmt|;
name|m_button
operator|=
operator|new
name|QFrame
expr_stmt|;
name|QPalette
name|palette
init|=
name|m_button
operator|->
name|palette
argument_list|()
decl_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
name|m_color
argument_list|)
argument_list|)
expr_stmt|;
name|m_button
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
name|m_button
operator|->
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|m_button
operator|->
name|setMinimumSize
argument_list|(
literal|32
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_button
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Fixed
argument_list|,
name|QSizePolicy
operator|::
name|Preferred
argument_list|)
expr_stmt|;
name|m_button
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|StyledPanel
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|m_button
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_lineEdit
argument_list|,
name|SIGNAL
argument_list|(
name|editingFinished
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|editDone
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|editDone
name|void
name|ColorEdit
operator|::
name|editDone
parameter_list|()
block|{
name|bool
name|ok
decl_stmt|;
name|QRgb
name|newColor
init|=
name|m_lineEdit
operator|->
name|text
argument_list|()
operator|.
name|toUInt
argument_list|(
operator|&
name|ok
argument_list|,
literal|16
argument_list|)
decl_stmt|;
if|if
condition|(
name|ok
condition|)
name|setColor
argument_list|(
name|newColor
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|mousePressEvent
name|void
name|ColorEdit
operator|::
name|mousePressEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
condition|)
block|{
name|QColor
name|color
argument_list|(
name|m_color
argument_list|)
decl_stmt|;
name|QColorDialog
name|dialog
argument_list|(
name|color
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setOption
argument_list|(
name|QColorDialog
operator|::
name|ShowAlphaChannel
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// The ifdef block is a workaround for the beta, TODO: remove when bug 238525 is fixed
ifdef|#
directive|ifdef
name|Q_WS_MAC
name|dialog
operator|.
name|setOption
argument_list|(
name|QColorDialog
operator|::
name|DontUseNativeDialog
argument_list|,
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|dialog
operator|.
name|move
argument_list|(
literal|280
argument_list|,
literal|120
argument_list|)
expr_stmt|;
if|if
condition|(
name|dialog
operator|.
name|exec
argument_list|()
operator|==
name|QDialog
operator|::
name|Rejected
condition|)
return|return;
name|QRgb
name|newColor
init|=
name|dialog
operator|.
name|selectedColor
argument_list|()
operator|.
name|rgba
argument_list|()
decl_stmt|;
if|if
condition|(
name|newColor
operator|==
name|m_color
condition|)
return|return;
name|setColor
argument_list|(
name|newColor
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setColor
name|void
name|ColorEdit
operator|::
name|setColor
parameter_list|(
name|QRgb
name|color
parameter_list|)
block|{
name|m_color
operator|=
name|color
expr_stmt|;
name|m_lineEdit
operator|->
name|setText
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|m_color
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
comment|// "Clean up" text
name|QPalette
name|palette
init|=
name|m_button
operator|->
name|palette
argument_list|()
decl_stmt|;
name|palette
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
name|m_color
argument_list|)
argument_list|)
expr_stmt|;
name|m_button
operator|->
name|setPalette
argument_list|(
name|palette
argument_list|)
expr_stmt|;
emit|emit
name|colorChanged
argument_list|(
name|m_color
argument_list|,
name|m_id
argument_list|)
emit|;
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                  FloatEdit                                 //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|FloatEdit
name|FloatEdit
operator|::
name|FloatEdit
parameter_list|(
name|float
name|initialValue
parameter_list|,
name|int
name|id
parameter_list|)
member_init_list|:
name|m_value
argument_list|(
name|initialValue
argument_list|)
member_init_list|,
name|m_id
argument_list|(
name|id
argument_list|)
block|{
name|QHBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|layout
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|m_lineEdit
operator|=
operator|new
name|QLineEdit
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|m_value
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|m_lineEdit
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_lineEdit
argument_list|,
name|SIGNAL
argument_list|(
name|editingFinished
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|editDone
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|editDone
name|void
name|FloatEdit
operator|::
name|editDone
parameter_list|()
block|{
name|bool
name|ok
decl_stmt|;
name|float
name|newValue
init|=
name|m_lineEdit
operator|->
name|text
argument_list|()
operator|.
name|toFloat
argument_list|(
operator|&
name|ok
argument_list|)
decl_stmt|;
if|if
condition|(
name|ok
condition|)
block|{
name|m_value
operator|=
name|newValue
expr_stmt|;
name|m_lineEdit
operator|->
name|setText
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|m_value
argument_list|)
argument_list|)
expr_stmt|;
comment|// "Clean up" text
emit|emit
name|valueChanged
argument_list|(
name|m_value
argument_list|,
name|m_id
argument_list|)
emit|;
block|}
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                           TwoSidedGraphicsWidget                           //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|TwoSidedGraphicsWidget
name|TwoSidedGraphicsWidget
operator|::
name|TwoSidedGraphicsWidget
parameter_list|(
name|QGraphicsScene
modifier|*
name|scene
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|scene
argument_list|)
member_init_list|,
name|m_current
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_angle
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_delta
argument_list|(
literal|0
argument_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
name|m_proxyWidgets
index|[
name|i
index|]
operator|=
literal|0
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setWidget
name|void
name|TwoSidedGraphicsWidget
operator|::
name|setWidget
parameter_list|(
name|int
name|index
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|index
operator|<
literal|0
operator|||
name|index
operator|>=
literal|2
condition|)
block|{
name|qWarning
argument_list|(
literal|"TwoSidedGraphicsWidget::setWidget: Index out of bounds, index == %d"
argument_list|,
name|index
argument_list|)
expr_stmt|;
return|return;
block|}
name|GraphicsWidget
modifier|*
name|proxy
init|=
operator|new
name|GraphicsWidget
decl_stmt|;
name|proxy
operator|->
name|setWidget
argument_list|(
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_proxyWidgets
index|[
name|index
index|]
condition|)
operator|delete
name|m_proxyWidgets
index|[
name|index
index|]
expr_stmt|;
name|m_proxyWidgets
index|[
name|index
index|]
operator|=
name|proxy
expr_stmt|;
name|proxy
operator|->
name|setCacheMode
argument_list|(
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
argument_list|)
expr_stmt|;
name|proxy
operator|->
name|setZValue
argument_list|(
literal|1e30
argument_list|)
expr_stmt|;
comment|// Make sure the dialog is drawn on top of all other (OpenGL) items
if|if
condition|(
name|index
operator|!=
name|m_current
condition|)
name|proxy
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|qobject_cast
argument_list|<
name|QGraphicsScene
operator|*
argument_list|>
argument_list|(
name|parent
argument_list|()
argument_list|)
operator|->
name|addItem
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|widget
name|QWidget
modifier|*
name|TwoSidedGraphicsWidget
operator|::
name|widget
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|index
operator|<
literal|0
operator|||
name|index
operator|>=
literal|2
condition|)
block|{
name|qWarning
argument_list|(
literal|"TwoSidedGraphicsWidget::widget: Index out of bounds, index == %d"
argument_list|,
name|index
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
return|return
name|m_proxyWidgets
index|[
name|index
index|]
operator|->
name|widget
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|flip
name|void
name|TwoSidedGraphicsWidget
operator|::
name|flip
parameter_list|()
block|{
name|m_delta
operator|=
operator|(
name|m_current
operator|==
literal|0
condition|?
literal|9
else|:
operator|-
literal|9
operator|)
expr_stmt|;
name|animateFlip
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|animateFlip
name|void
name|TwoSidedGraphicsWidget
operator|::
name|animateFlip
parameter_list|()
block|{
name|m_angle
operator|+=
name|m_delta
expr_stmt|;
if|if
condition|(
name|m_angle
operator|==
literal|90
condition|)
block|{
name|int
name|old
init|=
name|m_current
decl_stmt|;
name|m_current
operator|^=
literal|1
expr_stmt|;
name|m_proxyWidgets
index|[
name|old
index|]
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|m_proxyWidgets
index|[
name|m_current
index|]
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|m_proxyWidgets
index|[
name|m_current
index|]
operator|->
name|setGeometry
argument_list|(
name|m_proxyWidgets
index|[
name|old
index|]
operator|->
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QRectF
name|r
init|=
name|m_proxyWidgets
index|[
name|m_current
index|]
operator|->
name|boundingRect
argument_list|()
decl_stmt|;
name|m_proxyWidgets
index|[
name|m_current
index|]
operator|->
name|setTransform
argument_list|(
name|QTransform
argument_list|()
operator|.
name|translate
argument_list|(
name|r
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|r
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
operator|.
name|rotate
argument_list|(
name|m_angle
operator|-
literal|180
operator|*
name|m_current
argument_list|,
name|Qt
operator|::
name|YAxis
argument_list|)
operator|.
name|translate
argument_list|(
operator|-
name|r
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
operator|-
name|r
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|m_current
operator|==
literal|0
operator|&&
name|m_angle
operator|>
literal|0
operator|)
operator|||
operator|(
name|m_current
operator|==
literal|1
operator|&&
name|m_angle
operator|<
literal|180
operator|)
condition|)
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|25
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|animateFlip
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|itemChange
name|QVariant
name|GraphicsWidget
operator|::
name|itemChange
parameter_list|(
name|GraphicsItemChange
name|change
parameter_list|,
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|)
block|{
if|if
condition|(
name|change
operator|==
name|ItemPositionChange
operator|&&
name|scene
argument_list|()
condition|)
block|{
name|QRectF
name|rect
init|=
name|boundingRect
argument_list|()
decl_stmt|;
name|QPointF
name|pos
init|=
name|value
operator|.
name|toPointF
argument_list|()
decl_stmt|;
name|QRectF
name|sceneRect
init|=
name|scene
argument_list|()
operator|->
name|sceneRect
argument_list|()
decl_stmt|;
if|if
condition|(
name|pos
operator|.
name|x
argument_list|()
operator|+
name|rect
operator|.
name|left
argument_list|()
operator|<
name|sceneRect
operator|.
name|left
argument_list|()
condition|)
name|pos
operator|.
name|setX
argument_list|(
name|sceneRect
operator|.
name|left
argument_list|()
operator|-
name|rect
operator|.
name|left
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|pos
operator|.
name|x
argument_list|()
operator|+
name|rect
operator|.
name|right
argument_list|()
operator|>=
name|sceneRect
operator|.
name|right
argument_list|()
condition|)
name|pos
operator|.
name|setX
argument_list|(
name|sceneRect
operator|.
name|right
argument_list|()
operator|-
name|rect
operator|.
name|right
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|pos
operator|.
name|y
argument_list|()
operator|+
name|rect
operator|.
name|top
argument_list|()
operator|<
name|sceneRect
operator|.
name|top
argument_list|()
condition|)
name|pos
operator|.
name|setY
argument_list|(
name|sceneRect
operator|.
name|top
argument_list|()
operator|-
name|rect
operator|.
name|top
argument_list|()
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|pos
operator|.
name|y
argument_list|()
operator|+
name|rect
operator|.
name|bottom
argument_list|()
operator|>=
name|sceneRect
operator|.
name|bottom
argument_list|()
condition|)
name|pos
operator|.
name|setY
argument_list|(
name|sceneRect
operator|.
name|bottom
argument_list|()
operator|-
name|rect
operator|.
name|bottom
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|pos
return|;
block|}
return|return
name|QGraphicsProxyWidget
operator|::
name|itemChange
argument_list|(
name|change
argument_list|,
name|value
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|resizeEvent
name|void
name|GraphicsWidget
operator|::
name|resizeEvent
parameter_list|(
name|QGraphicsSceneResizeEvent
modifier|*
name|event
parameter_list|)
block|{
name|setCacheMode
argument_list|(
name|QGraphicsItem
operator|::
name|NoCache
argument_list|)
expr_stmt|;
name|setCacheMode
argument_list|(
name|QGraphicsItem
operator|::
name|ItemCoordinateCache
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
operator|::
name|resizeEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paint
name|void
name|GraphicsWidget
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
name|option
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|painter
operator|->
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QGraphicsProxyWidget
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|widget
argument_list|)
expr_stmt|;
comment|//painter->setRenderHint(QPainter::Antialiasing, true);
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                             RenderOptionsDialog                            //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|RenderOptionsDialog
name|RenderOptionsDialog
operator|::
name|RenderOptionsDialog
parameter_list|()
member_init_list|:
name|QDialog
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|CustomizeWindowHint
operator||
name|Qt
operator|::
name|WindowTitleHint
argument_list|)
block|{
name|setWindowOpacity
argument_list|(
literal|0.75
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Options (double click to flip)"
argument_list|)
argument_list|)
expr_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|layout
operator|->
name|setColumnStretch
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|int
name|row
init|=
literal|0
decl_stmt|;
name|QCheckBox
modifier|*
name|check
init|=
operator|new
name|QCheckBox
argument_list|(
name|tr
argument_list|(
literal|"Dynamic cube map"
argument_list|)
argument_list|)
decl_stmt|;
name|check
operator|->
name|setCheckState
argument_list|(
name|Qt
operator|::
name|Unchecked
argument_list|)
expr_stmt|;
comment|// Dynamic cube maps are only enabled when multi-texturing and render to texture are available.
name|check
operator|->
name|setEnabled
argument_list|(
name|glActiveTexture
operator|&&
name|glGenFramebuffersEXT
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|check
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|dynamicCubemapToggled
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|check
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
operator|++
name|row
expr_stmt|;
name|QPalette
name|palette
decl_stmt|;
comment|// Load all .par files
comment|// .par files have a simple syntax for specifying user adjustable uniform variables.
name|QSet
argument_list|<
name|QByteArray
argument_list|>
name|uniforms
decl_stmt|;
name|QList
argument_list|<
name|QString
argument_list|>
name|filter
init|=
name|QStringList
argument_list|(
literal|"*.par"
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QFileInfo
argument_list|>
name|files
init|=
name|QDir
argument_list|(
literal|":/res/boxes/"
argument_list|)
operator|.
name|entryInfoList
argument_list|(
name|filter
argument_list|,
name|QDir
operator|::
name|Files
operator||
name|QDir
operator|::
name|Readable
argument_list|)
decl_stmt|;
foreach|foreach
control|(
name|QFileInfo
name|fileInfo
decl|,
name|files
control|)
block|{
name|QFile
name|file
argument_list|(
name|fileInfo
operator|.
name|absoluteFilePath
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|file
operator|.
name|open
argument_list|(
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
condition|)
block|{
while|while
condition|(
operator|!
name|file
operator|.
name|atEnd
argument_list|()
condition|)
block|{
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|tokens
init|=
name|file
operator|.
name|readLine
argument_list|()
operator|.
name|simplified
argument_list|()
operator|.
name|split
argument_list|(
literal|' '
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QByteArray
argument_list|>
operator|::
name|const_iterator
name|it
init|=
name|tokens
operator|.
name|begin
argument_list|()
decl_stmt|;
if|if
condition|(
name|it
operator|==
name|tokens
operator|.
name|end
argument_list|()
condition|)
continue|continue;
name|QByteArray
name|type
init|=
operator|*
name|it
decl_stmt|;
if|if
condition|(
operator|++
name|it
operator|==
name|tokens
operator|.
name|end
argument_list|()
condition|)
continue|continue;
name|QByteArray
name|name
init|=
operator|*
name|it
decl_stmt|;
name|bool
name|singleElement
init|=
operator|(
name|tokens
operator|.
name|size
argument_list|()
operator|==
literal|3
operator|)
decl_stmt|;
comment|// type, name and one value
name|char
name|counter
index|[
literal|10
index|]
init|=
literal|"000000000"
decl_stmt|;
name|int
name|counterPos
init|=
literal|8
decl_stmt|;
comment|// position of last digit
while|while
condition|(
operator|++
name|it
operator|!=
name|tokens
operator|.
name|end
argument_list|()
condition|)
block|{
name|m_parameterNames
operator|<<
name|name
expr_stmt|;
if|if
condition|(
operator|!
name|singleElement
condition|)
block|{
name|m_parameterNames
operator|.
name|back
argument_list|()
operator|+=
literal|"["
expr_stmt|;
name|m_parameterNames
operator|.
name|back
argument_list|()
operator|+=
name|counter
operator|+
name|counterPos
expr_stmt|;
name|m_parameterNames
operator|.
name|back
argument_list|()
operator|+=
literal|"]"
expr_stmt|;
name|int
name|j
init|=
literal|8
decl_stmt|;
comment|// position of last digit
operator|++
name|counter
index|[
name|j
index|]
expr_stmt|;
while|while
condition|(
name|j
operator|>
literal|0
operator|&&
name|counter
index|[
name|j
index|]
operator|>
literal|'9'
condition|)
block|{
name|counter
index|[
name|j
index|]
operator|=
literal|'0'
expr_stmt|;
operator|++
name|counter
index|[
operator|--
name|j
index|]
expr_stmt|;
block|}
if|if
condition|(
name|j
operator|<
name|counterPos
condition|)
name|counterPos
operator|=
name|j
expr_stmt|;
block|}
if|if
condition|(
name|type
operator|==
literal|"color"
condition|)
block|{
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|m_parameterNames
operator|.
name|back
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|ok
decl_stmt|;
name|ColorEdit
modifier|*
name|colorEdit
init|=
operator|new
name|ColorEdit
argument_list|(
name|it
operator|->
name|toUInt
argument_list|(
operator|&
name|ok
argument_list|,
literal|16
argument_list|)
argument_list|,
name|m_parameterNames
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|m_parameterEdits
operator|<<
name|colorEdit
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|colorEdit
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|colorEdit
argument_list|,
name|SIGNAL
argument_list|(
name|colorChanged
argument_list|(
name|QRgb
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setColorParameter
argument_list|(
name|QRgb
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|row
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|type
operator|==
literal|"float"
condition|)
block|{
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|m_parameterNames
operator|.
name|back
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|bool
name|ok
decl_stmt|;
name|FloatEdit
modifier|*
name|floatEdit
init|=
operator|new
name|FloatEdit
argument_list|(
name|it
operator|->
name|toFloat
argument_list|(
operator|&
name|ok
argument_list|)
argument_list|,
name|m_parameterNames
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|m_parameterEdits
operator|<<
name|floatEdit
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|floatEdit
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|floatEdit
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|float
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setFloatParameter
argument_list|(
name|float
argument_list|,
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|row
expr_stmt|;
block|}
block|}
block|}
name|file
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Texture:"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|m_textureCombo
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|connect
argument_list|(
name|m_textureCombo
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|textureChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|m_textureCombo
argument_list|)
expr_stmt|;
operator|++
name|row
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Shader:"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|m_shaderCombo
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|connect
argument_list|(
name|m_shaderCombo
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|shaderChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|m_shaderCombo
argument_list|)
expr_stmt|;
operator|++
name|row
expr_stmt|;
name|layout
operator|->
name|setRowStretch
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|addTexture
name|int
name|RenderOptionsDialog
operator|::
name|addTexture
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
block|{
name|m_textureCombo
operator|->
name|addItem
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|m_textureCombo
operator|->
name|count
argument_list|()
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|addShader
name|int
name|RenderOptionsDialog
operator|::
name|addShader
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
block|{
name|m_shaderCombo
operator|->
name|addItem
argument_list|(
name|name
argument_list|)
expr_stmt|;
return|return
name|m_shaderCombo
operator|->
name|count
argument_list|()
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|emitParameterChanged
name|void
name|RenderOptionsDialog
operator|::
name|emitParameterChanged
parameter_list|()
block|{
foreach|foreach
control|(
name|ParameterEdit
modifier|*
name|edit
decl|,
name|m_parameterEdits
control|)
name|edit
operator|->
name|emitChange
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setColorParameter
name|void
name|RenderOptionsDialog
operator|::
name|setColorParameter
parameter_list|(
name|QRgb
name|color
parameter_list|,
name|int
name|id
parameter_list|)
block|{
emit|emit
name|colorParameterChanged
argument_list|(
name|m_parameterNames
index|[
name|id
index|]
argument_list|,
name|color
argument_list|)
emit|;
block|}
end_function
begin_function
DECL|function|setFloatParameter
name|void
name|RenderOptionsDialog
operator|::
name|setFloatParameter
parameter_list|(
name|float
name|value
parameter_list|,
name|int
name|id
parameter_list|)
block|{
emit|emit
name|floatParameterChanged
argument_list|(
name|m_parameterNames
index|[
name|id
index|]
argument_list|,
name|value
argument_list|)
emit|;
block|}
end_function
begin_function
DECL|function|mouseDoubleClickEvent
name|void
name|RenderOptionsDialog
operator|::
name|mouseDoubleClickEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
condition|)
emit|emit
name|doubleClicked
argument_list|()
emit|;
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                 ItemDialog                                 //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_constructor
DECL|function|ItemDialog
name|ItemDialog
operator|::
name|ItemDialog
parameter_list|()
member_init_list|:
name|QDialog
argument_list|(
literal|0
argument_list|,
name|Qt
operator|::
name|CustomizeWindowHint
operator||
name|Qt
operator|::
name|WindowTitleHint
argument_list|)
block|{
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Items (double click to flip)"
argument_list|)
argument_list|)
expr_stmt|;
name|setWindowOpacity
argument_list|(
literal|0.75
argument_list|)
expr_stmt|;
name|resize
argument_list|(
literal|160
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|button
decl_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Add Qt box"
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|triggerNewQtBox
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Add circle"
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|triggerNewCircleItem
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Add square"
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|button
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|triggerNewSquareItem
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|triggerNewQtBox
name|void
name|ItemDialog
operator|::
name|triggerNewQtBox
parameter_list|()
block|{
emit|emit
name|newItemTriggered
argument_list|(
name|QtBoxItem
argument_list|)
emit|;
block|}
end_function
begin_function
DECL|function|triggerNewCircleItem
name|void
name|ItemDialog
operator|::
name|triggerNewCircleItem
parameter_list|()
block|{
emit|emit
name|newItemTriggered
argument_list|(
name|CircleItem
argument_list|)
emit|;
block|}
end_function
begin_function
DECL|function|triggerNewSquareItem
name|void
name|ItemDialog
operator|::
name|triggerNewSquareItem
parameter_list|()
block|{
emit|emit
name|newItemTriggered
argument_list|(
name|SquareItem
argument_list|)
emit|;
block|}
end_function
begin_function
DECL|function|mouseDoubleClickEvent
name|void
name|ItemDialog
operator|::
name|mouseDoubleClickEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
condition|)
emit|emit
name|doubleClicked
argument_list|()
emit|;
block|}
end_function
begin_comment
comment|//============================================================================//
end_comment
begin_comment
comment|//                                    Scene                                   //
end_comment
begin_comment
comment|//============================================================================//
end_comment
begin_decl_stmt
DECL|variable|environmentShaderText
specifier|const
specifier|static
name|char
name|environmentShaderText
index|[]
init|=
literal|"uniform samplerCube env;"
literal|"void main() {"
literal|"gl_FragColor = textureCube(env, gl_TexCoord[1].xyz);"
literal|"}"
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|Scene
name|Scene
operator|::
name|Scene
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|,
name|int
name|maxTextureSize
parameter_list|)
member_init_list|:
name|m_distExp
argument_list|(
literal|600
argument_list|)
member_init_list|,
name|m_frame
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_maxTextureSize
argument_list|(
name|maxTextureSize
argument_list|)
member_init_list|,
name|m_currentShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_currentTexture
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_dynamicCubemap
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|m_updateAllCubemaps
argument_list|(
literal|true
argument_list|)
member_init_list|,
name|m_box
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_vertexShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_environmentShader
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_environmentProgram
argument_list|(
literal|0
argument_list|)
block|{
name|setSceneRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|m_trackBalls
index|[
literal|0
index|]
operator|=
name|TrackBall
argument_list|(
literal|0.05f
argument_list|,
name|QVector3D
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TrackBall
operator|::
name|Sphere
argument_list|)
expr_stmt|;
name|m_trackBalls
index|[
literal|1
index|]
operator|=
name|TrackBall
argument_list|(
literal|0.005f
argument_list|,
name|QVector3D
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|TrackBall
operator|::
name|Sphere
argument_list|)
expr_stmt|;
name|m_trackBalls
index|[
literal|2
index|]
operator|=
name|TrackBall
argument_list|(
literal|0.0f
argument_list|,
name|QVector3D
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|TrackBall
operator|::
name|Plane
argument_list|)
expr_stmt|;
name|m_renderOptions
operator|=
operator|new
name|RenderOptionsDialog
expr_stmt|;
name|m_renderOptions
operator|->
name|move
argument_list|(
literal|20
argument_list|,
literal|120
argument_list|)
expr_stmt|;
name|m_renderOptions
operator|->
name|resize
argument_list|(
name|m_renderOptions
operator|->
name|sizeHint
argument_list|()
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderOptions
argument_list|,
name|SIGNAL
argument_list|(
name|dynamicCubemapToggled
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|toggleDynamicCubemap
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderOptions
argument_list|,
name|SIGNAL
argument_list|(
name|colorParameterChanged
argument_list|(
name|QString
argument_list|,
name|QRgb
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setColorParameter
argument_list|(
name|QString
argument_list|,
name|QRgb
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderOptions
argument_list|,
name|SIGNAL
argument_list|(
name|floatParameterChanged
argument_list|(
name|QString
argument_list|,
name|float
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setFloatParameter
argument_list|(
name|QString
argument_list|,
name|float
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderOptions
argument_list|,
name|SIGNAL
argument_list|(
name|textureChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setTexture
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderOptions
argument_list|,
name|SIGNAL
argument_list|(
name|shaderChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setShader
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|m_itemDialog
operator|=
operator|new
name|ItemDialog
expr_stmt|;
name|connect
argument_list|(
name|m_itemDialog
argument_list|,
name|SIGNAL
argument_list|(
name|newItemTriggered
argument_list|(
name|ItemDialog
operator|::
name|ItemType
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|newItem
argument_list|(
name|ItemDialog
operator|::
name|ItemType
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|TwoSidedGraphicsWidget
modifier|*
name|twoSided
init|=
operator|new
name|TwoSidedGraphicsWidget
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|twoSided
operator|->
name|setWidget
argument_list|(
literal|0
argument_list|,
name|m_renderOptions
argument_list|)
expr_stmt|;
name|twoSided
operator|->
name|setWidget
argument_list|(
literal|1
argument_list|,
name|m_itemDialog
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_renderOptions
argument_list|,
name|SIGNAL
argument_list|(
name|doubleClicked
argument_list|()
argument_list|)
argument_list|,
name|twoSided
argument_list|,
name|SLOT
argument_list|(
name|flip
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_itemDialog
argument_list|,
name|SIGNAL
argument_list|(
name|doubleClicked
argument_list|()
argument_list|)
argument_list|,
name|twoSided
argument_list|,
name|SLOT
argument_list|(
name|flip
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addItem
argument_list|(
operator|new
name|QtBox
argument_list|(
literal|64
argument_list|,
name|width
operator|-
literal|64
argument_list|,
name|height
operator|-
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|addItem
argument_list|(
operator|new
name|QtBox
argument_list|(
literal|64
argument_list|,
name|width
operator|-
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|addItem
argument_list|(
operator|new
name|QtBox
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
name|height
operator|-
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|addItem
argument_list|(
operator|new
name|QtBox
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|initGL
argument_list|()
expr_stmt|;
name|m_timer
operator|=
operator|new
name|QTimer
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|m_timer
operator|->
name|setInterval
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_timer
argument_list|,
name|SIGNAL
argument_list|(
name|timeout
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|update
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_timer
operator|->
name|start
argument_list|()
expr_stmt|;
name|m_time
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~Scene
name|Scene
operator|::
name|~
name|Scene
parameter_list|()
block|{
if|if
condition|(
name|m_box
condition|)
operator|delete
name|m_box
expr_stmt|;
foreach|foreach
control|(
name|GLTexture
modifier|*
name|texture
decl|,
name|m_textures
control|)
if|if
condition|(
name|texture
condition|)
operator|delete
name|texture
expr_stmt|;
if|if
condition|(
name|m_mainCubemap
condition|)
operator|delete
name|m_mainCubemap
expr_stmt|;
foreach|foreach
control|(
name|QGLShaderProgram
modifier|*
name|program
decl|,
name|m_programs
control|)
if|if
condition|(
name|program
condition|)
operator|delete
name|program
expr_stmt|;
if|if
condition|(
name|m_vertexShader
condition|)
operator|delete
name|m_vertexShader
expr_stmt|;
foreach|foreach
control|(
name|QGLShader
modifier|*
name|shader
decl|,
name|m_fragmentShaders
control|)
if|if
condition|(
name|shader
condition|)
operator|delete
name|shader
expr_stmt|;
foreach|foreach
control|(
name|GLRenderTargetCube
modifier|*
name|rt
decl|,
name|m_cubemaps
control|)
if|if
condition|(
name|rt
condition|)
operator|delete
name|rt
expr_stmt|;
if|if
condition|(
name|m_environmentShader
condition|)
operator|delete
name|m_environmentShader
expr_stmt|;
if|if
condition|(
name|m_environmentProgram
condition|)
operator|delete
name|m_environmentProgram
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|initGL
name|void
name|Scene
operator|::
name|initGL
parameter_list|()
block|{
name|m_box
operator|=
operator|new
name|GLRoundedBox
argument_list|(
literal|0.25f
argument_list|,
literal|1.0f
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|m_vertexShader
operator|=
operator|new
name|QGLShader
argument_list|(
name|QGLShader
operator|::
name|Vertex
argument_list|)
expr_stmt|;
name|m_vertexShader
operator|->
name|compileSourceFile
argument_list|(
name|QLatin1String
argument_list|(
literal|":/res/boxes/basic.vsh"
argument_list|)
argument_list|)
expr_stmt|;
name|QStringList
name|list
decl_stmt|;
name|list
operator|<<
literal|":/res/boxes/cubemap_posx.jpg"
operator|<<
literal|":/res/boxes/cubemap_negx.jpg"
operator|<<
literal|":/res/boxes/cubemap_posy.jpg"
operator|<<
literal|":/res/boxes/cubemap_negy.jpg"
operator|<<
literal|":/res/boxes/cubemap_posz.jpg"
operator|<<
literal|":/res/boxes/cubemap_negz.jpg"
expr_stmt|;
name|m_environment
operator|=
operator|new
name|GLTextureCube
argument_list|(
name|list
argument_list|,
name|qMin
argument_list|(
literal|1024
argument_list|,
name|m_maxTextureSize
argument_list|)
argument_list|)
expr_stmt|;
name|m_environmentShader
operator|=
operator|new
name|QGLShader
argument_list|(
name|QGLShader
operator|::
name|Fragment
argument_list|)
expr_stmt|;
name|m_environmentShader
operator|->
name|compileSourceCode
argument_list|(
name|environmentShaderText
argument_list|)
expr_stmt|;
name|m_environmentProgram
operator|=
operator|new
name|QGLShaderProgram
expr_stmt|;
name|m_environmentProgram
operator|->
name|addShader
argument_list|(
name|m_vertexShader
argument_list|)
expr_stmt|;
name|m_environmentProgram
operator|->
name|addShader
argument_list|(
name|m_environmentShader
argument_list|)
expr_stmt|;
name|m_environmentProgram
operator|->
name|link
argument_list|()
expr_stmt|;
specifier|const
name|int
name|NOISE_SIZE
init|=
literal|128
decl_stmt|;
comment|// for a different size, B and BM in fbm.c must also be changed
name|m_noise
operator|=
operator|new
name|GLTexture3D
argument_list|(
name|NOISE_SIZE
argument_list|,
name|NOISE_SIZE
argument_list|,
name|NOISE_SIZE
argument_list|)
expr_stmt|;
name|QRgb
modifier|*
name|data
init|=
operator|new
name|QRgb
index|[
name|NOISE_SIZE
operator|*
name|NOISE_SIZE
operator|*
name|NOISE_SIZE
index|]
decl_stmt|;
name|memset
argument_list|(
name|data
argument_list|,
literal|0
argument_list|,
name|NOISE_SIZE
operator|*
name|NOISE_SIZE
operator|*
name|NOISE_SIZE
operator|*
sizeof|sizeof
argument_list|(
name|QRgb
argument_list|)
argument_list|)
expr_stmt|;
name|QRgb
modifier|*
name|p
init|=
name|data
decl_stmt|;
name|float
name|pos
index|[
literal|3
index|]
decl_stmt|;
for|for
control|(
name|int
name|k
init|=
literal|0
init|;
name|k
operator|<
name|NOISE_SIZE
condition|;
operator|++
name|k
control|)
block|{
name|pos
index|[
literal|2
index|]
operator|=
name|k
operator|*
operator|(
literal|0x20
operator|/
operator|(
name|float
operator|)
name|NOISE_SIZE
operator|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|NOISE_SIZE
condition|;
operator|++
name|j
control|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NOISE_SIZE
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|byte
init|=
literal|0
init|;
name|byte
operator|<
literal|4
condition|;
operator|++
name|byte
control|)
block|{
name|pos
index|[
literal|0
index|]
operator|=
operator|(
name|i
operator|+
operator|(
name|byte
operator|&
literal|1
operator|)
operator|*
literal|16
operator|)
operator|*
operator|(
literal|0x20
operator|/
operator|(
name|float
operator|)
name|NOISE_SIZE
operator|)
expr_stmt|;
name|pos
index|[
literal|1
index|]
operator|=
operator|(
name|j
operator|+
operator|(
name|byte
operator|&
literal|2
operator|)
operator|*
literal|8
operator|)
operator|*
operator|(
literal|0x20
operator|/
operator|(
name|float
operator|)
name|NOISE_SIZE
operator|)
expr_stmt|;
operator|*
name|p
operator||=
call|(
name|int
call|)
argument_list|(
literal|128.0f
operator|*
operator|(
name|noise3
argument_list|(
name|pos
argument_list|)
operator|+
literal|1.0f
operator|)
argument_list|)
operator|<<
operator|(
name|byte
operator|*
literal|8
operator|)
expr_stmt|;
block|}
operator|++
name|p
expr_stmt|;
block|}
block|}
block|}
name|m_noise
operator|->
name|load
argument_list|(
name|NOISE_SIZE
argument_list|,
name|NOISE_SIZE
argument_list|,
name|NOISE_SIZE
argument_list|,
name|data
argument_list|)
expr_stmt|;
operator|delete
index|[]
name|data
expr_stmt|;
name|m_mainCubemap
operator|=
operator|new
name|GLRenderTargetCube
argument_list|(
literal|512
argument_list|)
expr_stmt|;
name|QStringList
name|filter
decl_stmt|;
name|QList
argument_list|<
name|QFileInfo
argument_list|>
name|files
decl_stmt|;
comment|// Load all .png files as textures
name|m_currentTexture
operator|=
literal|0
expr_stmt|;
name|filter
operator|=
name|QStringList
argument_list|(
literal|"*.png"
argument_list|)
expr_stmt|;
name|files
operator|=
name|QDir
argument_list|(
literal|":/res/boxes/"
argument_list|)
operator|.
name|entryInfoList
argument_list|(
name|filter
argument_list|,
name|QDir
operator|::
name|Files
operator||
name|QDir
operator|::
name|Readable
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QFileInfo
name|file
decl|,
name|files
control|)
block|{
name|GLTexture
modifier|*
name|texture
init|=
operator|new
name|GLTexture2D
argument_list|(
name|file
operator|.
name|absoluteFilePath
argument_list|()
argument_list|,
name|qMin
argument_list|(
literal|256
argument_list|,
name|m_maxTextureSize
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|256
argument_list|,
name|m_maxTextureSize
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|texture
operator|->
name|failed
argument_list|()
condition|)
block|{
operator|delete
name|texture
expr_stmt|;
continue|continue;
block|}
name|m_textures
operator|<<
name|texture
expr_stmt|;
name|m_renderOptions
operator|->
name|addTexture
argument_list|(
name|file
operator|.
name|baseName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|m_textures
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
name|m_textures
operator|<<
operator|new
name|GLTexture2D
argument_list|(
name|qMin
argument_list|(
literal|64
argument_list|,
name|m_maxTextureSize
argument_list|)
argument_list|,
name|qMin
argument_list|(
literal|64
argument_list|,
name|m_maxTextureSize
argument_list|)
argument_list|)
expr_stmt|;
comment|// Load all .fsh files as fragment shaders
name|m_currentShader
operator|=
literal|0
expr_stmt|;
name|filter
operator|=
name|QStringList
argument_list|(
literal|"*.fsh"
argument_list|)
expr_stmt|;
name|files
operator|=
name|QDir
argument_list|(
literal|":/res/boxes/"
argument_list|)
operator|.
name|entryInfoList
argument_list|(
name|filter
argument_list|,
name|QDir
operator|::
name|Files
operator||
name|QDir
operator|::
name|Readable
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QFileInfo
name|file
decl|,
name|files
control|)
block|{
name|QGLShaderProgram
modifier|*
name|program
init|=
operator|new
name|QGLShaderProgram
decl_stmt|;
name|QGLShader
modifier|*
name|shader
init|=
operator|new
name|QGLShader
argument_list|(
name|QGLShader
operator|::
name|Fragment
argument_list|)
decl_stmt|;
name|shader
operator|->
name|compileSourceFile
argument_list|(
name|file
operator|.
name|absoluteFilePath
argument_list|()
argument_list|)
expr_stmt|;
comment|// The program does not take ownership over the shaders, so store them in a vector so they can be deleted afterwards.
name|program
operator|->
name|addShader
argument_list|(
name|m_vertexShader
argument_list|)
expr_stmt|;
name|program
operator|->
name|addShader
argument_list|(
name|shader
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|program
operator|->
name|link
argument_list|()
condition|)
block|{
name|qWarning
argument_list|(
literal|"Failed to compile and link shader program"
argument_list|)
expr_stmt|;
name|qWarning
argument_list|(
literal|"Vertex shader log:"
argument_list|)
expr_stmt|;
name|qWarning
argument_list|()
operator|<<
name|m_vertexShader
operator|->
name|log
argument_list|()
expr_stmt|;
name|qWarning
argument_list|()
operator|<<
literal|"Fragment shader log ( file ="
operator|<<
name|file
operator|.
name|absoluteFilePath
argument_list|()
operator|<<
literal|"):"
expr_stmt|;
name|qWarning
argument_list|()
operator|<<
name|shader
operator|->
name|log
argument_list|()
expr_stmt|;
name|qWarning
argument_list|(
literal|"Shader program log:"
argument_list|)
expr_stmt|;
name|qWarning
argument_list|()
operator|<<
name|program
operator|->
name|log
argument_list|()
expr_stmt|;
operator|delete
name|shader
expr_stmt|;
operator|delete
name|program
expr_stmt|;
continue|continue;
block|}
name|m_fragmentShaders
operator|<<
name|shader
expr_stmt|;
name|m_programs
operator|<<
name|program
expr_stmt|;
name|m_renderOptions
operator|->
name|addShader
argument_list|(
name|file
operator|.
name|baseName
argument_list|()
argument_list|)
expr_stmt|;
name|program
operator|->
name|bind
argument_list|()
expr_stmt|;
name|m_cubemaps
operator|<<
operator|(
operator|(
name|program
operator|->
name|uniformLocation
argument_list|(
literal|"env"
argument_list|)
operator|!=
operator|-
literal|1
operator|)
condition|?
operator|new
name|GLRenderTargetCube
argument_list|(
name|qMin
argument_list|(
literal|256
argument_list|,
name|m_maxTextureSize
argument_list|)
argument_list|)
else|:
literal|0
operator|)
expr_stmt|;
name|program
operator|->
name|release
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|m_programs
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
name|m_programs
operator|<<
operator|new
name|QGLShaderProgram
expr_stmt|;
name|m_renderOptions
operator|->
name|emitParameterChanged
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|loadMatrix
specifier|static
name|void
name|loadMatrix
parameter_list|(
specifier|const
name|QMatrix4x4
modifier|&
name|m
parameter_list|)
block|{
comment|// static to prevent glLoadMatrixf to fail on certain drivers
specifier|static
name|GLfloat
name|mat
index|[
literal|16
index|]
decl_stmt|;
specifier|const
name|float
modifier|*
name|data
init|=
name|m
operator|.
name|constData
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|index
init|=
literal|0
init|;
name|index
operator|<
literal|16
condition|;
operator|++
name|index
control|)
name|mat
index|[
name|index
index|]
operator|=
name|data
index|[
name|index
index|]
expr_stmt|;
name|glLoadMatrixf
argument_list|(
name|mat
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// If one of the boxes should not be rendered, set excludeBox to its index.
end_comment
begin_comment
comment|// If the main box should not be rendered, set excludeBox to -1.
end_comment
begin_function
DECL|function|renderBoxes
name|void
name|Scene
operator|::
name|renderBoxes
parameter_list|(
specifier|const
name|QMatrix4x4
modifier|&
name|view
parameter_list|,
name|int
name|excludeBox
parameter_list|)
block|{
name|QMatrix4x4
name|invView
init|=
name|view
operator|.
name|inverted
argument_list|()
decl_stmt|;
comment|// If multi-texturing is supported, use three saplers.
if|if
condition|(
name|glActiveTexture
condition|)
block|{
name|glActiveTexture
argument_list|(
name|GL_TEXTURE0
argument_list|)
expr_stmt|;
name|m_textures
index|[
name|m_currentTexture
index|]
operator|->
name|bind
argument_list|()
expr_stmt|;
name|glActiveTexture
argument_list|(
name|GL_TEXTURE2
argument_list|)
expr_stmt|;
name|m_noise
operator|->
name|bind
argument_list|()
expr_stmt|;
name|glActiveTexture
argument_list|(
name|GL_TEXTURE1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m_textures
index|[
name|m_currentTexture
index|]
operator|->
name|bind
argument_list|()
expr_stmt|;
block|}
name|glDisable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|QMatrix4x4
name|viewRotation
argument_list|(
name|view
argument_list|)
decl_stmt|;
name|viewRotation
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
operator|=
name|viewRotation
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
operator|=
name|viewRotation
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|)
operator|=
literal|0.0f
expr_stmt|;
name|viewRotation
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
operator|=
name|viewRotation
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
operator|=
name|viewRotation
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|=
literal|0.0f
expr_stmt|;
name|viewRotation
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
operator|=
literal|1.0f
expr_stmt|;
name|loadMatrix
argument_list|(
name|viewRotation
argument_list|)
expr_stmt|;
name|glScalef
argument_list|(
literal|20.0f
argument_list|,
literal|20.0f
argument_list|,
literal|20.0f
argument_list|)
expr_stmt|;
comment|// Don't render the environment if the environment texture can't be set for the correct sampler.
if|if
condition|(
name|glActiveTexture
condition|)
block|{
name|m_environment
operator|->
name|bind
argument_list|()
expr_stmt|;
name|m_environmentProgram
operator|->
name|bind
argument_list|()
expr_stmt|;
name|m_environmentProgram
operator|->
name|setUniformValue
argument_list|(
literal|"tex"
argument_list|,
name|GLint
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_environmentProgram
operator|->
name|setUniformValue
argument_list|(
literal|"env"
argument_list|,
name|GLint
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|m_environmentProgram
operator|->
name|setUniformValue
argument_list|(
literal|"noise"
argument_list|,
name|GLint
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m_box
operator|->
name|draw
argument_list|()
expr_stmt|;
name|m_environmentProgram
operator|->
name|release
argument_list|()
expr_stmt|;
name|m_environment
operator|->
name|unbind
argument_list|()
expr_stmt|;
block|}
name|loadMatrix
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_programs
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|i
operator|==
name|excludeBox
condition|)
continue|continue;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|QMatrix4x4
name|m
decl_stmt|;
name|m
operator|.
name|rotate
argument_list|(
name|m_trackBalls
index|[
literal|1
index|]
operator|.
name|rotation
argument_list|()
argument_list|)
expr_stmt|;
name|glMultMatrixf
argument_list|(
name|m
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
literal|360.0f
operator|*
name|i
operator|/
name|m_programs
operator|.
name|size
argument_list|()
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
literal|2.0f
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glScalef
argument_list|(
literal|0.3f
argument_list|,
literal|0.6f
argument_list|,
literal|0.6f
argument_list|)
expr_stmt|;
if|if
condition|(
name|glActiveTexture
condition|)
block|{
if|if
condition|(
name|m_dynamicCubemap
operator|&&
name|m_cubemaps
index|[
name|i
index|]
condition|)
name|m_cubemaps
index|[
name|i
index|]
operator|->
name|bind
argument_list|()
expr_stmt|;
else|else
name|m_environment
operator|->
name|bind
argument_list|()
expr_stmt|;
block|}
name|m_programs
index|[
name|i
index|]
operator|->
name|bind
argument_list|()
expr_stmt|;
name|m_programs
index|[
name|i
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"tex"
argument_list|,
name|GLint
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|i
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"env"
argument_list|,
name|GLint
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|i
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"noise"
argument_list|,
name|GLint
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|i
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"view"
argument_list|,
name|view
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|i
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"invView"
argument_list|,
name|invView
argument_list|)
expr_stmt|;
name|m_box
operator|->
name|draw
argument_list|()
expr_stmt|;
name|m_programs
index|[
name|i
index|]
operator|->
name|release
argument_list|()
expr_stmt|;
if|if
condition|(
name|glActiveTexture
condition|)
block|{
if|if
condition|(
name|m_dynamicCubemap
operator|&&
name|m_cubemaps
index|[
name|i
index|]
condition|)
name|m_cubemaps
index|[
name|i
index|]
operator|->
name|unbind
argument_list|()
expr_stmt|;
else|else
name|m_environment
operator|->
name|unbind
argument_list|()
expr_stmt|;
block|}
name|glPopMatrix
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|-
literal|1
operator|!=
name|excludeBox
condition|)
block|{
name|QMatrix4x4
name|m
decl_stmt|;
name|m
operator|.
name|rotate
argument_list|(
name|m_trackBalls
index|[
literal|0
index|]
operator|.
name|rotation
argument_list|()
argument_list|)
expr_stmt|;
name|glMultMatrixf
argument_list|(
name|m
operator|.
name|constData
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|glActiveTexture
condition|)
block|{
if|if
condition|(
name|m_dynamicCubemap
condition|)
name|m_mainCubemap
operator|->
name|bind
argument_list|()
expr_stmt|;
else|else
name|m_environment
operator|->
name|bind
argument_list|()
expr_stmt|;
block|}
name|m_programs
index|[
name|m_currentShader
index|]
operator|->
name|bind
argument_list|()
expr_stmt|;
name|m_programs
index|[
name|m_currentShader
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"tex"
argument_list|,
name|GLint
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|m_currentShader
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"env"
argument_list|,
name|GLint
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|m_currentShader
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"noise"
argument_list|,
name|GLint
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|m_currentShader
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"view"
argument_list|,
name|view
argument_list|)
expr_stmt|;
name|m_programs
index|[
name|m_currentShader
index|]
operator|->
name|setUniformValue
argument_list|(
literal|"invView"
argument_list|,
name|invView
argument_list|)
expr_stmt|;
name|m_box
operator|->
name|draw
argument_list|()
expr_stmt|;
name|m_programs
index|[
name|m_currentShader
index|]
operator|->
name|release
argument_list|()
expr_stmt|;
if|if
condition|(
name|glActiveTexture
condition|)
block|{
if|if
condition|(
name|m_dynamicCubemap
condition|)
name|m_mainCubemap
operator|->
name|unbind
argument_list|()
expr_stmt|;
else|else
name|m_environment
operator|->
name|unbind
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|glActiveTexture
condition|)
block|{
name|glActiveTexture
argument_list|(
name|GL_TEXTURE2
argument_list|)
expr_stmt|;
name|m_noise
operator|->
name|unbind
argument_list|()
expr_stmt|;
name|glActiveTexture
argument_list|(
name|GL_TEXTURE0
argument_list|)
expr_stmt|;
block|}
name|m_textures
index|[
name|m_currentTexture
index|]
operator|->
name|unbind
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setStates
name|void
name|Scene
operator|::
name|setStates
parameter_list|()
block|{
comment|//glClearColor(0.25f, 0.25f, 0.5f, 1.0f);
name|glEnable
argument_list|(
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
comment|//glEnable(GL_COLOR_MATERIAL);
name|glEnable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_NORMALIZE
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|setLights
argument_list|()
expr_stmt|;
name|float
name|materialSpecular
index|[]
init|=
block|{
literal|0.5f
block|,
literal|0.5f
block|,
literal|0.5f
block|,
literal|1.0f
block|}
decl_stmt|;
name|glMaterialfv
argument_list|(
name|GL_FRONT_AND_BACK
argument_list|,
name|GL_SPECULAR
argument_list|,
name|materialSpecular
argument_list|)
expr_stmt|;
name|glMaterialf
argument_list|(
name|GL_FRONT_AND_BACK
argument_list|,
name|GL_SHININESS
argument_list|,
literal|32.0f
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setLights
name|void
name|Scene
operator|::
name|setLights
parameter_list|()
block|{
name|glColorMaterial
argument_list|(
name|GL_FRONT_AND_BACK
argument_list|,
name|GL_AMBIENT_AND_DIFFUSE
argument_list|)
expr_stmt|;
comment|//float lightColour[] = {1.0f, 1.0f, 1.0f, 1.0f};
name|float
name|lightDir
index|[]
init|=
block|{
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|}
decl_stmt|;
comment|//glLightfv(GL_LIGHT0, GL_DIFFUSE, lightColour);
comment|//glLightfv(GL_LIGHT0, GL_SPECULAR, lightColour);
name|glLightfv
argument_list|(
name|GL_LIGHT0
argument_list|,
name|GL_POSITION
argument_list|,
name|lightDir
argument_list|)
expr_stmt|;
name|glLightModelf
argument_list|(
name|GL_LIGHT_MODEL_LOCAL_VIEWER
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHT0
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|defaultStates
name|void
name|Scene
operator|::
name|defaultStates
parameter_list|()
block|{
comment|//glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
name|glDisable
argument_list|(
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
comment|//glDisable(GL_COLOR_MATERIAL);
name|glDisable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_LIGHT0
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_NORMALIZE
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glLightModelf
argument_list|(
name|GL_LIGHT_MODEL_LOCAL_VIEWER
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|float
name|defaultMaterialSpecular
index|[]
init|=
block|{
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|}
decl_stmt|;
name|glMaterialfv
argument_list|(
name|GL_FRONT_AND_BACK
argument_list|,
name|GL_SPECULAR
argument_list|,
name|defaultMaterialSpecular
argument_list|)
expr_stmt|;
name|glMaterialf
argument_list|(
name|GL_FRONT_AND_BACK
argument_list|,
name|GL_SHININESS
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|renderCubemaps
name|void
name|Scene
operator|::
name|renderCubemaps
parameter_list|()
block|{
comment|// To speed things up, only update the cubemaps for the small cubes every N frames.
specifier|const
name|int
name|N
init|=
operator|(
name|m_updateAllCubemaps
condition|?
literal|1
else|:
literal|3
operator|)
decl_stmt|;
name|QMatrix4x4
name|mat
decl_stmt|;
name|GLRenderTargetCube
operator|::
name|getProjectionMatrix
argument_list|(
name|mat
argument_list|,
literal|0.1f
argument_list|,
literal|100.0f
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|loadMatrix
argument_list|(
name|mat
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|QVector3D
name|center
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|m_frame
operator|%
name|N
init|;
name|i
operator|<
name|m_cubemaps
operator|.
name|size
argument_list|()
condition|;
name|i
operator|+=
name|N
control|)
block|{
if|if
condition|(
literal|0
operator|==
name|m_cubemaps
index|[
name|i
index|]
condition|)
continue|continue;
name|float
name|angle
init|=
literal|2.0f
operator|*
name|PI
operator|*
name|i
operator|/
name|m_cubemaps
operator|.
name|size
argument_list|()
decl_stmt|;
name|center
operator|=
name|m_trackBalls
index|[
literal|1
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|rotatedVector
argument_list|(
name|QVector3D
argument_list|(
name|cos
argument_list|(
name|angle
argument_list|)
argument_list|,
name|sin
argument_list|(
name|angle
argument_list|)
argument_list|,
literal|0.0f
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|face
init|=
literal|0
init|;
name|face
operator|<
literal|6
condition|;
operator|++
name|face
control|)
block|{
name|m_cubemaps
index|[
name|i
index|]
operator|->
name|begin
argument_list|(
name|face
argument_list|)
expr_stmt|;
name|GLRenderTargetCube
operator|::
name|getViewMatrix
argument_list|(
name|mat
argument_list|,
name|face
argument_list|)
expr_stmt|;
name|QVector4D
name|v
init|=
name|QVector4D
argument_list|(
operator|-
name|center
operator|.
name|x
argument_list|()
argument_list|,
operator|-
name|center
operator|.
name|y
argument_list|()
argument_list|,
operator|-
name|center
operator|.
name|z
argument_list|()
argument_list|,
literal|1.0
argument_list|)
decl_stmt|;
name|mat
operator|.
name|setColumn
argument_list|(
literal|3
argument_list|,
name|mat
operator|*
name|v
argument_list|)
expr_stmt|;
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
operator||
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|renderBoxes
argument_list|(
name|mat
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|m_cubemaps
index|[
name|i
index|]
operator|->
name|end
argument_list|()
expr_stmt|;
block|}
block|}
for|for
control|(
name|int
name|face
init|=
literal|0
init|;
name|face
operator|<
literal|6
condition|;
operator|++
name|face
control|)
block|{
name|m_mainCubemap
operator|->
name|begin
argument_list|(
name|face
argument_list|)
expr_stmt|;
name|GLRenderTargetCube
operator|::
name|getViewMatrix
argument_list|(
name|mat
argument_list|,
name|face
argument_list|)
expr_stmt|;
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
operator||
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|renderBoxes
argument_list|(
name|mat
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|m_mainCubemap
operator|->
name|end
argument_list|()
expr_stmt|;
block|}
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|m_updateAllCubemaps
operator|=
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawBackground
name|void
name|Scene
operator|::
name|drawBackground
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QRectF
modifier|&
parameter_list|)
block|{
name|float
name|width
init|=
name|float
argument_list|(
name|painter
operator|->
name|device
argument_list|()
operator|->
name|width
argument_list|()
argument_list|)
decl_stmt|;
name|float
name|height
init|=
name|float
argument_list|(
name|painter
operator|->
name|device
argument_list|()
operator|->
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|painter
operator|->
name|beginNativePainting
argument_list|()
expr_stmt|;
name|setStates
argument_list|()
expr_stmt|;
if|if
condition|(
name|m_dynamicCubemap
condition|)
name|renderCubemaps
argument_list|()
expr_stmt|;
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
operator||
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|qgluPerspective
argument_list|(
literal|60.0
argument_list|,
name|width
operator|/
name|height
argument_list|,
literal|0.01
argument_list|,
literal|15.0
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|QMatrix4x4
name|view
decl_stmt|;
name|view
operator|.
name|rotate
argument_list|(
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
argument_list|)
expr_stmt|;
name|view
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
operator|-=
literal|2.0f
operator|*
name|exp
argument_list|(
name|m_distExp
operator|/
literal|1200.0f
argument_list|)
expr_stmt|;
name|renderBoxes
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|defaultStates
argument_list|()
expr_stmt|;
operator|++
name|m_frame
expr_stmt|;
name|painter
operator|->
name|endNativePainting
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pixelPosToViewPos
name|QPointF
name|Scene
operator|::
name|pixelPosToViewPos
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|)
block|{
return|return
name|QPointF
argument_list|(
literal|2.0
operator|*
name|float
argument_list|(
name|p
operator|.
name|x
argument_list|()
argument_list|)
operator|/
name|width
argument_list|()
operator|-
literal|1.0
argument_list|,
literal|1.0
operator|-
literal|2.0
operator|*
name|float
argument_list|(
name|p
operator|.
name|y
argument_list|()
argument_list|)
operator|/
name|height
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|mouseMoveEvent
name|void
name|Scene
operator|::
name|mouseMoveEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|QGraphicsScene
operator|::
name|mouseMoveEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|->
name|isAccepted
argument_list|()
condition|)
return|return;
if|if
condition|(
name|event
operator|->
name|buttons
argument_list|()
operator|&
name|Qt
operator|::
name|LeftButton
condition|)
block|{
name|m_trackBalls
index|[
literal|0
index|]
operator|.
name|move
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|m_trackBalls
index|[
literal|0
index|]
operator|.
name|release
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|->
name|buttons
argument_list|()
operator|&
name|Qt
operator|::
name|RightButton
condition|)
block|{
name|m_trackBalls
index|[
literal|1
index|]
operator|.
name|move
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|m_trackBalls
index|[
literal|1
index|]
operator|.
name|release
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|->
name|buttons
argument_list|()
operator|&
name|Qt
operator|::
name|MidButton
condition|)
block|{
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|move
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|QQuaternion
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|release
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|QQuaternion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mousePressEvent
name|void
name|Scene
operator|::
name|mousePressEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|QGraphicsScene
operator|::
name|mousePressEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|->
name|isAccepted
argument_list|()
condition|)
return|return;
if|if
condition|(
name|event
operator|->
name|buttons
argument_list|()
operator|&
name|Qt
operator|::
name|LeftButton
condition|)
block|{
name|m_trackBalls
index|[
literal|0
index|]
operator|.
name|push
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|->
name|buttons
argument_list|()
operator|&
name|Qt
operator|::
name|RightButton
condition|)
block|{
name|m_trackBalls
index|[
literal|1
index|]
operator|.
name|push
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|->
name|buttons
argument_list|()
operator|&
name|Qt
operator|::
name|MidButton
condition|)
block|{
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|push
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|QQuaternion
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|mouseReleaseEvent
name|void
name|Scene
operator|::
name|mouseReleaseEvent
parameter_list|(
name|QGraphicsSceneMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|QGraphicsScene
operator|::
name|mouseReleaseEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|->
name|isAccepted
argument_list|()
condition|)
return|return;
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|LeftButton
condition|)
block|{
name|m_trackBalls
index|[
literal|0
index|]
operator|.
name|release
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|RightButton
condition|)
block|{
name|m_trackBalls
index|[
literal|1
index|]
operator|.
name|release
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|rotation
argument_list|()
operator|.
name|conjugate
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|->
name|button
argument_list|()
operator|==
name|Qt
operator|::
name|MidButton
condition|)
block|{
name|m_trackBalls
index|[
literal|2
index|]
operator|.
name|release
argument_list|(
name|pixelPosToViewPos
argument_list|(
name|event
operator|->
name|scenePos
argument_list|()
argument_list|)
argument_list|,
name|QQuaternion
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|wheelEvent
name|void
name|Scene
operator|::
name|wheelEvent
parameter_list|(
name|QGraphicsSceneWheelEvent
modifier|*
name|event
parameter_list|)
block|{
name|QGraphicsScene
operator|::
name|wheelEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|event
operator|->
name|isAccepted
argument_list|()
condition|)
block|{
name|m_distExp
operator|+=
name|event
operator|->
name|delta
argument_list|()
expr_stmt|;
if|if
condition|(
name|m_distExp
operator|<
operator|-
literal|8
operator|*
literal|120
condition|)
name|m_distExp
operator|=
operator|-
literal|8
operator|*
literal|120
expr_stmt|;
if|if
condition|(
name|m_distExp
operator|>
literal|10
operator|*
literal|120
condition|)
name|m_distExp
operator|=
literal|10
operator|*
literal|120
expr_stmt|;
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setShader
name|void
name|Scene
operator|::
name|setShader
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|m_fragmentShaders
operator|.
name|size
argument_list|()
condition|)
name|m_currentShader
operator|=
name|index
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTexture
name|void
name|Scene
operator|::
name|setTexture
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|m_textures
operator|.
name|size
argument_list|()
condition|)
name|m_currentTexture
operator|=
name|index
expr_stmt|;
block|}
end_function
begin_function
DECL|function|toggleDynamicCubemap
name|void
name|Scene
operator|::
name|toggleDynamicCubemap
parameter_list|(
name|int
name|state
parameter_list|)
block|{
if|if
condition|(
operator|(
name|m_dynamicCubemap
operator|=
operator|(
name|state
operator|==
name|Qt
operator|::
name|Checked
operator|)
operator|)
condition|)
name|m_updateAllCubemaps
operator|=
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setColorParameter
name|void
name|Scene
operator|::
name|setColorParameter
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
name|QRgb
name|color
parameter_list|)
block|{
comment|// set the color in all programs
foreach|foreach
control|(
name|QGLShaderProgram
modifier|*
name|program
decl|,
name|m_programs
control|)
block|{
name|program
operator|->
name|bind
argument_list|()
expr_stmt|;
name|program
operator|->
name|setUniformValue
argument_list|(
name|program
operator|->
name|uniformLocation
argument_list|(
name|name
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|color
argument_list|)
argument_list|)
expr_stmt|;
name|program
operator|->
name|release
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setFloatParameter
name|void
name|Scene
operator|::
name|setFloatParameter
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
name|float
name|value
parameter_list|)
block|{
comment|// set the color in all programs
foreach|foreach
control|(
name|QGLShaderProgram
modifier|*
name|program
decl|,
name|m_programs
control|)
block|{
name|program
operator|->
name|bind
argument_list|()
expr_stmt|;
name|program
operator|->
name|setUniformValue
argument_list|(
name|program
operator|->
name|uniformLocation
argument_list|(
name|name
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|program
operator|->
name|release
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|newItem
name|void
name|Scene
operator|::
name|newItem
parameter_list|(
name|ItemDialog
operator|::
name|ItemType
name|type
parameter_list|)
block|{
name|QSize
name|size
init|=
name|sceneRect
argument_list|()
operator|.
name|size
argument_list|()
operator|.
name|toSize
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|ItemDialog
operator|::
name|QtBoxItem
case|:
name|addItem
argument_list|(
operator|new
name|QtBox
argument_list|(
literal|64
argument_list|,
name|rand
argument_list|()
operator|%
operator|(
name|size
operator|.
name|width
argument_list|()
operator|-
literal|64
operator|)
operator|+
literal|32
argument_list|,
name|rand
argument_list|()
operator|%
operator|(
name|size
operator|.
name|height
argument_list|()
operator|-
literal|64
operator|)
operator|+
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ItemDialog
operator|::
name|CircleItem
case|:
name|addItem
argument_list|(
operator|new
name|CircleItem
argument_list|(
literal|64
argument_list|,
name|rand
argument_list|()
operator|%
operator|(
name|size
operator|.
name|width
argument_list|()
operator|-
literal|64
operator|)
operator|+
literal|32
argument_list|,
name|rand
argument_list|()
operator|%
operator|(
name|size
operator|.
name|height
argument_list|()
operator|-
literal|64
operator|)
operator|+
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|ItemDialog
operator|::
name|SquareItem
case|:
name|addItem
argument_list|(
operator|new
name|SquareItem
argument_list|(
literal|64
argument_list|,
name|rand
argument_list|()
operator|%
operator|(
name|size
operator|.
name|width
argument_list|()
operator|-
literal|64
operator|)
operator|+
literal|32
argument_list|,
name|rand
argument_list|()
operator|%
operator|(
name|size
operator|.
name|height
argument_list|()
operator|-
literal|64
operator|)
operator|+
literal|32
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
end_function
end_unit
