begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|TRACKBALL_H
end_ifndef
begin_define
DECL|macro|TRACKBALL_H
define|#
directive|define
name|TRACKBALL_H
end_define
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QtGui/qvector3d.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qquaternion.h>
end_include
begin_decl_stmt
name|class
name|TrackBall
block|{
name|public
label|:
enum|enum
name|TrackMode
block|{
name|Plane
block|,
name|Sphere
block|,     }
enum|;
name|TrackBall
argument_list|(
argument|TrackMode mode = Sphere
argument_list|)
empty_stmt|;
name|TrackBall
argument_list|(
argument|float angularVelocity
argument_list|,
argument|const QVector3D& axis
argument_list|,
argument|TrackMode mode = Sphere
argument_list|)
empty_stmt|;
comment|// coordinates in [-1,1]x[-1,1]
name|void
name|push
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QQuaternion
modifier|&
name|transformation
parameter_list|)
function_decl|;
name|void
name|move
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QQuaternion
modifier|&
name|transformation
parameter_list|)
function_decl|;
name|void
name|release
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QQuaternion
modifier|&
name|transformation
parameter_list|)
function_decl|;
name|void
name|start
parameter_list|()
function_decl|;
comment|// starts clock
name|void
name|stop
parameter_list|()
function_decl|;
comment|// stops clock
name|QQuaternion
name|rotation
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|QQuaternion
name|m_rotation
decl_stmt|;
name|QVector3D
name|m_axis
decl_stmt|;
name|float
name|m_angularVelocity
decl_stmt|;
name|QPointF
name|m_lastPos
decl_stmt|;
name|QTime
name|m_lastTime
decl_stmt|;
name|bool
name|m_paused
decl_stmt|;
name|bool
name|m_pressed
decl_stmt|;
name|TrackMode
name|m_mode
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
