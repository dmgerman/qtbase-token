begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"glextensions.h"
end_include
begin_define
DECL|macro|RESOLVE_GL_FUNC
define|#
directive|define
name|RESOLVE_GL_FUNC
parameter_list|(
name|f
parameter_list|)
value|ok&= bool((f = (_gl##f) context->getProcAddress(QLatin1String("gl" #f))));
end_define
begin_function
DECL|function|resolve
name|bool
name|GLExtensionFunctions
operator|::
name|resolve
parameter_list|(
specifier|const
name|QGLContext
modifier|*
name|context
parameter_list|)
block|{
name|bool
name|ok
init|=
literal|true
decl_stmt|;
name|RESOLVE_GL_FUNC
argument_list|(
argument|GenFramebuffersEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|GenRenderbuffersEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|BindRenderbufferEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|RenderbufferStorageEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|DeleteFramebuffersEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|DeleteRenderbuffersEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|BindFramebufferEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|FramebufferTexture2DEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|FramebufferRenderbufferEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|CheckFramebufferStatusEXT
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|ActiveTexture
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|TexImage3D
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|GenBuffers
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|BindBuffer
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|BufferData
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|DeleteBuffers
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|MapBuffer
argument_list|)
name|RESOLVE_GL_FUNC
argument_list|(
argument|UnmapBuffer
argument_list|)
return|return
name|ok
return|;
block|}
end_function
begin_function
DECL|function|fboSupported
name|bool
name|GLExtensionFunctions
operator|::
name|fboSupported
parameter_list|()
block|{
return|return
name|GenFramebuffersEXT
operator|&&
name|GenRenderbuffersEXT
operator|&&
name|BindRenderbufferEXT
operator|&&
name|RenderbufferStorageEXT
operator|&&
name|DeleteFramebuffersEXT
operator|&&
name|DeleteRenderbuffersEXT
operator|&&
name|BindFramebufferEXT
operator|&&
name|FramebufferTexture2DEXT
operator|&&
name|FramebufferRenderbufferEXT
operator|&&
name|CheckFramebufferStatusEXT
return|;
block|}
end_function
begin_function
DECL|function|openGL15Supported
name|bool
name|GLExtensionFunctions
operator|::
name|openGL15Supported
parameter_list|()
block|{
return|return
name|ActiveTexture
operator|&&
name|TexImage3D
operator|&&
name|GenBuffers
operator|&&
name|BindBuffer
operator|&&
name|BufferData
operator|&&
name|DeleteBuffers
operator|&&
name|MapBuffer
operator|&&
name|UnmapBuffer
return|;
block|}
end_function
begin_undef
DECL|macro|RESOLVE_GL_FUNC
undef|#
directive|undef
name|RESOLVE_GL_FUNC
end_undef
end_unit
