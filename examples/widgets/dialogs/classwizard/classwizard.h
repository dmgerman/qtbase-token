begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|CLASSWIZARD_H
end_ifndef
begin_define
DECL|macro|CLASSWIZARD_H
define|#
directive|define
name|CLASSWIZARD_H
end_define
begin_include
include|#
directive|include
file|<QWizard>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QCheckBox
name|class
name|QCheckBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGroupBox
name|class
name|QGroupBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLabel
name|class
name|QLabel
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLineEdit
name|class
name|QLineEdit
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QRadioButton
name|class
name|QRadioButton
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
comment|//! [0]
name|class
name|ClassWizard
range|:
name|public
name|QWizard
block|{
name|Q_OBJECT
name|public
operator|:
name|ClassWizard
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|void
name|accept
argument_list|()
name|Q_DECL_OVERRIDE
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_decl_stmt
name|class
name|IntroPage
range|:
name|public
name|QWizardPage
block|{
name|Q_OBJECT
name|public
operator|:
name|IntroPage
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|private
operator|:
name|QLabel
operator|*
name|label
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_decl_stmt
name|class
name|ClassInfoPage
range|:
name|public
name|QWizardPage
block|{
name|Q_OBJECT
name|public
operator|:
name|ClassInfoPage
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|private
operator|:
name|QLabel
operator|*
name|classNameLabel
block|;
name|QLabel
operator|*
name|baseClassLabel
block|;
name|QLineEdit
operator|*
name|classNameLineEdit
block|;
name|QLineEdit
operator|*
name|baseClassLineEdit
block|;
name|QCheckBox
operator|*
name|qobjectMacroCheckBox
block|;
name|QGroupBox
operator|*
name|groupBox
block|;
name|QRadioButton
operator|*
name|qobjectCtorRadioButton
block|;
name|QRadioButton
operator|*
name|qwidgetCtorRadioButton
block|;
name|QRadioButton
operator|*
name|defaultCtorRadioButton
block|;
name|QCheckBox
operator|*
name|copyCtorCheckBox
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_decl_stmt
name|class
name|CodeStylePage
range|:
name|public
name|QWizardPage
block|{
name|Q_OBJECT
name|public
operator|:
name|CodeStylePage
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|protected
operator|:
name|void
name|initializePage
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|private
operator|:
name|QCheckBox
operator|*
name|commentCheckBox
block|;
name|QCheckBox
operator|*
name|protectCheckBox
block|;
name|QCheckBox
operator|*
name|includeBaseCheckBox
block|;
name|QLabel
operator|*
name|macroNameLabel
block|;
name|QLabel
operator|*
name|baseIncludeLabel
block|;
name|QLineEdit
operator|*
name|macroNameLineEdit
block|;
name|QLineEdit
operator|*
name|baseIncludeLineEdit
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [3]
end_comment
begin_decl_stmt
name|class
name|OutputFilesPage
range|:
name|public
name|QWizardPage
block|{
name|Q_OBJECT
name|public
operator|:
name|OutputFilesPage
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|protected
operator|:
name|void
name|initializePage
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|private
operator|:
name|QLabel
operator|*
name|outputDirLabel
block|;
name|QLabel
operator|*
name|headerLabel
block|;
name|QLabel
operator|*
name|implementationLabel
block|;
name|QLineEdit
operator|*
name|outputDirLineEdit
block|;
name|QLineEdit
operator|*
name|headerLineEdit
block|;
name|QLineEdit
operator|*
name|implementationLineEdit
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|ConclusionPage
range|:
name|public
name|QWizardPage
block|{
name|Q_OBJECT
name|public
operator|:
name|ConclusionPage
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|protected
operator|:
name|void
name|initializePage
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|private
operator|:
name|QLabel
operator|*
name|label
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
