begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"tabdialog.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|TabDialog
name|TabDialog
operator|::
name|TabDialog
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
name|QFileInfo
name|fileInfo
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|tabWidget
operator|=
operator|new
name|QTabWidget
expr_stmt|;
name|tabWidget
operator|->
name|addTab
argument_list|(
operator|new
name|GeneralTab
argument_list|(
name|fileInfo
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"General"
argument_list|)
argument_list|)
expr_stmt|;
name|tabWidget
operator|->
name|addTab
argument_list|(
operator|new
name|PermissionsTab
argument_list|(
name|fileInfo
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Permissions"
argument_list|)
argument_list|)
expr_stmt|;
name|tabWidget
operator|->
name|addTab
argument_list|(
operator|new
name|ApplicationsTab
argument_list|(
name|fileInfo
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Applications"
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [0]
comment|//! [1] //! [2]
name|buttonBox
operator|=
operator|new
name|QDialogButtonBox
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
comment|//! [1] //! [3]
operator||
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|buttonBox
argument_list|,
operator|&
name|QDialogButtonBox
operator|::
name|accepted
argument_list|,
name|this
argument_list|,
operator|&
name|QDialog
operator|::
name|accept
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|buttonBox
argument_list|,
operator|&
name|QDialogButtonBox
operator|::
name|rejected
argument_list|,
name|this
argument_list|,
operator|&
name|QDialog
operator|::
name|reject
argument_list|)
expr_stmt|;
comment|//! [2] //! [3]
comment|//! [4]
name|QVBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|tabWidget
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|buttonBox
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|mainLayout
argument_list|)
expr_stmt|;
comment|//! [4]
comment|//! [5]
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Tab Dialog"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_constructor
DECL|function|GeneralTab
name|GeneralTab
operator|::
name|GeneralTab
parameter_list|(
specifier|const
name|QFileInfo
modifier|&
name|fileInfo
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|QLabel
modifier|*
name|fileNameLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"File Name:"
argument_list|)
argument_list|)
decl_stmt|;
name|QLineEdit
modifier|*
name|fileNameEdit
init|=
operator|new
name|QLineEdit
argument_list|(
name|fileInfo
operator|.
name|fileName
argument_list|()
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|pathLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Path:"
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|pathValueLabel
init|=
operator|new
name|QLabel
argument_list|(
name|fileInfo
operator|.
name|absoluteFilePath
argument_list|()
argument_list|)
decl_stmt|;
name|pathValueLabel
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Panel
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|sizeLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Size:"
argument_list|)
argument_list|)
decl_stmt|;
name|qlonglong
name|size
init|=
name|fileInfo
operator|.
name|size
argument_list|()
operator|/
literal|1024
decl_stmt|;
name|QLabel
modifier|*
name|sizeValueLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"%1 K"
argument_list|)
operator|.
name|arg
argument_list|(
name|size
argument_list|)
argument_list|)
decl_stmt|;
name|sizeValueLabel
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Panel
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|lastReadLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Last Read:"
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|lastReadValueLabel
init|=
operator|new
name|QLabel
argument_list|(
name|fileInfo
operator|.
name|lastRead
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|lastReadValueLabel
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Panel
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|lastModLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Last Modified:"
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|lastModValueLabel
init|=
operator|new
name|QLabel
argument_list|(
name|fileInfo
operator|.
name|lastModified
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|lastModValueLabel
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Panel
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|fileNameLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|fileNameEdit
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|pathLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|pathValueLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|sizeLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|sizeValueLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|lastReadLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|lastReadValueLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|lastModLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|lastModValueLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|mainLayout
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_constructor
DECL|function|PermissionsTab
name|PermissionsTab
operator|::
name|PermissionsTab
parameter_list|(
specifier|const
name|QFileInfo
modifier|&
name|fileInfo
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|QGroupBox
modifier|*
name|permissionsGroup
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Permissions"
argument_list|)
argument_list|)
decl_stmt|;
name|QCheckBox
modifier|*
name|readable
init|=
operator|new
name|QCheckBox
argument_list|(
name|tr
argument_list|(
literal|"Readable"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|fileInfo
operator|.
name|isReadable
argument_list|()
condition|)
name|readable
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCheckBox
modifier|*
name|writable
init|=
operator|new
name|QCheckBox
argument_list|(
name|tr
argument_list|(
literal|"Writable"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|fileInfo
operator|.
name|isWritable
argument_list|()
condition|)
name|writable
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QCheckBox
modifier|*
name|executable
init|=
operator|new
name|QCheckBox
argument_list|(
name|tr
argument_list|(
literal|"Executable"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|fileInfo
operator|.
name|isExecutable
argument_list|()
condition|)
name|executable
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QGroupBox
modifier|*
name|ownerGroup
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Ownership"
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|ownerLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Owner"
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|ownerValueLabel
init|=
operator|new
name|QLabel
argument_list|(
name|fileInfo
operator|.
name|owner
argument_list|()
argument_list|)
decl_stmt|;
name|ownerValueLabel
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Panel
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|groupLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Group"
argument_list|)
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|groupValueLabel
init|=
operator|new
name|QLabel
argument_list|(
name|fileInfo
operator|.
name|group
argument_list|()
argument_list|)
decl_stmt|;
name|groupValueLabel
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Panel
operator||
name|QFrame
operator|::
name|Sunken
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|permissionsLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|permissionsLayout
operator|->
name|addWidget
argument_list|(
name|readable
argument_list|)
expr_stmt|;
name|permissionsLayout
operator|->
name|addWidget
argument_list|(
name|writable
argument_list|)
expr_stmt|;
name|permissionsLayout
operator|->
name|addWidget
argument_list|(
name|executable
argument_list|)
expr_stmt|;
name|permissionsGroup
operator|->
name|setLayout
argument_list|(
name|permissionsLayout
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|ownerLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|ownerLayout
operator|->
name|addWidget
argument_list|(
name|ownerLabel
argument_list|)
expr_stmt|;
name|ownerLayout
operator|->
name|addWidget
argument_list|(
name|ownerValueLabel
argument_list|)
expr_stmt|;
name|ownerLayout
operator|->
name|addWidget
argument_list|(
name|groupLabel
argument_list|)
expr_stmt|;
name|ownerLayout
operator|->
name|addWidget
argument_list|(
name|groupValueLabel
argument_list|)
expr_stmt|;
name|ownerGroup
operator|->
name|setLayout
argument_list|(
name|ownerLayout
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|permissionsGroup
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|ownerGroup
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|mainLayout
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_constructor
DECL|function|ApplicationsTab
name|ApplicationsTab
operator|::
name|ApplicationsTab
parameter_list|(
specifier|const
name|QFileInfo
modifier|&
name|fileInfo
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|QLabel
modifier|*
name|topLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Open with:"
argument_list|)
argument_list|)
decl_stmt|;
name|QListWidget
modifier|*
name|applicationsListBox
init|=
operator|new
name|QListWidget
decl_stmt|;
name|QStringList
name|applications
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|30
condition|;
operator|++
name|i
control|)
name|applications
operator|.
name|append
argument_list|(
name|tr
argument_list|(
literal|"Application %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|applicationsListBox
operator|->
name|insertItems
argument_list|(
literal|0
argument_list|,
name|applications
argument_list|)
expr_stmt|;
name|QCheckBox
modifier|*
name|alwaysCheckBox
decl_stmt|;
if|if
condition|(
name|fileInfo
operator|.
name|suffix
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|alwaysCheckBox
operator|=
operator|new
name|QCheckBox
argument_list|(
name|tr
argument_list|(
literal|"Always use this application to "
literal|"open this type of file"
argument_list|)
argument_list|)
expr_stmt|;
else|else
name|alwaysCheckBox
operator|=
operator|new
name|QCheckBox
argument_list|(
name|tr
argument_list|(
literal|"Always use this application to "
literal|"open files with the extension '%1'"
argument_list|)
operator|.
name|arg
argument_list|(
name|fileInfo
operator|.
name|suffix
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|topLabel
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|applicationsListBox
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|alwaysCheckBox
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [8]
end_comment
end_unit
