begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"fademessage.h"
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_constructor
DECL|function|FadeMessage
name|FadeMessage
operator|::
name|FadeMessage
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QGraphicsView
argument_list|(
name|parent
argument_list|)
block|{
name|setScene
argument_list|(
operator|&
name|m_scene
argument_list|)
expr_stmt|;
name|setHorizontalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|setVerticalScrollBarPolicy
argument_list|(
name|Qt
operator|::
name|ScrollBarAlwaysOff
argument_list|)
expr_stmt|;
name|setupScene
argument_list|()
expr_stmt|;
name|m_animation
operator|=
operator|new
name|QPropertyAnimation
argument_list|(
name|m_effect
argument_list|,
literal|"strength"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|m_animation
operator|->
name|setDuration
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|m_animation
operator|->
name|setEasingCurve
argument_list|(
name|QEasingCurve
operator|::
name|InOutSine
argument_list|)
expr_stmt|;
name|m_animation
operator|->
name|setStartValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|m_animation
operator|->
name|setEndValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|NoFrame
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|togglePopup
name|void
name|FadeMessage
operator|::
name|togglePopup
parameter_list|()
block|{
if|if
condition|(
name|m_message
operator|->
name|isVisible
argument_list|()
condition|)
block|{
name|m_message
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|m_animation
operator|->
name|setDirection
argument_list|(
name|QAbstractAnimation
operator|::
name|Backward
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m_message
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|m_animation
operator|->
name|setDirection
argument_list|(
name|QAbstractAnimation
operator|::
name|Forward
argument_list|)
expr_stmt|;
block|}
name|m_animation
operator|->
name|start
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupScene
name|void
name|FadeMessage
operator|::
name|setupScene
parameter_list|()
block|{
name|QGraphicsRectItem
modifier|*
name|parent
init|=
name|m_scene
operator|.
name|addRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|800
argument_list|,
literal|600
argument_list|)
decl_stmt|;
name|parent
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|parent
operator|->
name|setZValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|QGraphicsPixmapItem
modifier|*
name|bg
init|=
name|m_scene
operator|.
name|addPixmap
argument_list|(
name|QPixmap
argument_list|(
literal|":/background.jpg"
argument_list|)
argument_list|)
decl_stmt|;
name|bg
operator|->
name|setParentItem
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|bg
operator|->
name|setZValue
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
for|for
control|(
name|int
name|j
init|=
literal|2
init|;
name|j
operator|<
literal|5
condition|;
operator|++
name|j
control|)
block|{
name|QGraphicsRectItem
modifier|*
name|item
init|=
name|m_scene
operator|.
name|addRect
argument_list|(
name|i
operator|*
literal|50
argument_list|,
operator|(
name|j
operator|-
literal|1
operator|)
operator|*
literal|50
argument_list|,
literal|38
argument_list|,
literal|38
argument_list|)
decl_stmt|;
name|item
operator|->
name|setParentItem
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|item
operator|->
name|setZValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|int
name|hue
init|=
literal|12
operator|*
operator|(
name|i
operator|*
literal|5
operator|+
name|j
operator|)
decl_stmt|;
name|item
operator|->
name|setBrush
argument_list|(
name|QColor
operator|::
name|fromHsv
argument_list|(
name|hue
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|QFont
name|font
decl_stmt|;
name|font
operator|.
name|setPointSize
argument_list|(
name|font
operator|.
name|pointSize
argument_list|()
operator|*
literal|2
argument_list|)
expr_stmt|;
name|font
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QFontMetrics
name|fontMetrics
argument_list|(
name|font
argument_list|)
decl_stmt|;
name|int
name|fh
init|=
name|fontMetrics
operator|.
name|height
argument_list|()
decl_stmt|;
name|QString
name|sceneText
init|=
literal|"Qt Everywhere!"
decl_stmt|;
name|int
name|sceneTextWidth
init|=
name|fontMetrics
operator|.
name|width
argument_list|(
name|sceneText
argument_list|)
decl_stmt|;
name|QGraphicsRectItem
modifier|*
name|block
init|=
name|m_scene
operator|.
name|addRect
argument_list|(
literal|50
argument_list|,
literal|300
argument_list|,
name|sceneTextWidth
argument_list|,
name|fh
operator|+
literal|3
argument_list|)
decl_stmt|;
name|block
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
name|block
operator|->
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|102
argument_list|,
literal|153
argument_list|,
literal|51
argument_list|)
argument_list|)
expr_stmt|;
name|QGraphicsTextItem
modifier|*
name|text
init|=
name|m_scene
operator|.
name|addText
argument_list|(
name|sceneText
argument_list|,
name|font
argument_list|)
decl_stmt|;
name|text
operator|->
name|setDefaultTextColor
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|text
operator|->
name|setPos
argument_list|(
literal|50
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|block
operator|->
name|setZValue
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|block
operator|->
name|hide
argument_list|()
expr_stmt|;
name|text
operator|->
name|setParentItem
argument_list|(
name|block
argument_list|)
expr_stmt|;
name|m_message
operator|=
name|block
expr_stmt|;
name|m_effect
operator|=
operator|new
name|QGraphicsColorizeEffect
expr_stmt|;
name|m_effect
operator|->
name|setColor
argument_list|(
name|QColor
argument_list|(
literal|122
argument_list|,
literal|193
argument_list|,
literal|66
argument_list|)
argument_list|)
expr_stmt|;
name|m_effect
operator|->
name|setStrength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|m_effect
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|parent
operator|->
name|setGraphicsEffect
argument_list|(
name|m_effect
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|press
init|=
operator|new
name|QPushButton
decl_stmt|;
name|press
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Press me"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|press
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|togglePopup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|m_scene
operator|.
name|addWidget
argument_list|(
name|press
argument_list|)
expr_stmt|;
name|press
operator|->
name|move
argument_list|(
literal|300
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
