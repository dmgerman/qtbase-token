begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|ELIDEDLABEL_H
end_ifndef
begin_define
DECL|macro|ELIDEDLABEL_H
define|#
directive|define
name|ELIDEDLABEL_H
end_define
begin_include
include|#
directive|include
file|<QFrame>
end_include
begin_include
include|#
directive|include
file|<QRect>
end_include
begin_include
include|#
directive|include
file|<QResizeEvent>
end_include
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|<QWidget>
end_include
begin_comment
comment|//! [0]
end_comment
begin_decl_stmt
name|class
name|ElidedLabel
range|:
name|public
name|QFrame
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
argument|QString text READ text WRITE setText
argument_list|)
name|Q_PROPERTY
argument_list|(
argument|bool isElided READ isElided
argument_list|)
name|public
operator|:
name|ElidedLabel
argument_list|(
specifier|const
name|QString
operator|&
name|text
argument_list|,
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|void
name|setText
argument_list|(
specifier|const
name|QString
operator|&
name|text
argument_list|)
block|;
specifier|const
name|QString
operator|&
name|text
argument_list|()
specifier|const
block|{
return|return
name|content
return|;
block|}
name|bool
name|isElided
argument_list|()
specifier|const
block|{
return|return
name|elided
return|;
block|}
name|protected
operator|:
name|void
name|paintEvent
argument_list|(
name|QPaintEvent
operator|*
name|event
argument_list|)
block|;
name|signals
operator|:
name|void
name|elisionChanged
argument_list|(
argument|bool elided
argument_list|)
block|;
name|private
operator|:
name|bool
name|elided
block|;
name|QString
name|content
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|//! [0]
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// TEXTWRAPPINGWIDGET_H
end_comment
end_unit
