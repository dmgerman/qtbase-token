begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"window.h"
end_include
begin_constructor
DECL|function|Window
name|Window
operator|::
name|Window
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|m_iconSize
argument_list|(
literal|64
argument_list|,
literal|64
argument_list|)
block|{
name|m_ui
operator|.
name|setupUi
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QButtonGroup
modifier|*
name|buttonGroup
init|=
name|findChild
argument_list|<
name|QButtonGroup
operator|*
argument_list|>
argument_list|()
decl_stmt|;
comment|// ### workaround for uic in 4.4
name|m_ui
operator|.
name|easingCurvePicker
operator|->
name|setIconSize
argument_list|(
name|m_iconSize
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|easingCurvePicker
operator|->
name|setMinimumHeight
argument_list|(
name|m_iconSize
operator|.
name|height
argument_list|()
operator|+
literal|50
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|setId
argument_list|(
name|m_ui
operator|.
name|lineRadio
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|buttonGroup
operator|->
name|setId
argument_list|(
name|m_ui
operator|.
name|circleRadio
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|QEasingCurve
name|dummy
decl_stmt|;
name|m_ui
operator|.
name|periodSpinBox
operator|->
name|setValue
argument_list|(
name|dummy
operator|.
name|period
argument_list|()
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|amplitudeSpinBox
operator|->
name|setValue
argument_list|(
name|dummy
operator|.
name|amplitude
argument_list|()
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|overshootSpinBox
operator|->
name|setValue
argument_list|(
name|dummy
operator|.
name|overshoot
argument_list|()
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_ui
operator|.
name|easingCurvePicker
argument_list|,
name|SIGNAL
argument_list|(
name|currentRowChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|curveChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|buttonGroup
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|pathChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_ui
operator|.
name|periodSpinBox
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|double
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|periodChanged
argument_list|(
name|double
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_ui
operator|.
name|amplitudeSpinBox
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|double
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|amplitudeChanged
argument_list|(
name|double
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_ui
operator|.
name|overshootSpinBox
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|double
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|overshootChanged
argument_list|(
name|double
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|createCurveIcons
argument_list|()
expr_stmt|;
name|QPixmap
name|pix
argument_list|(
name|QLatin1String
argument_list|(
literal|":/images/qt-logo.png"
argument_list|)
argument_list|)
decl_stmt|;
name|m_item
operator|=
operator|new
name|PixmapItem
argument_list|(
name|pix
argument_list|)
expr_stmt|;
name|m_scene
operator|.
name|addItem
argument_list|(
name|m_item
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|graphicsView
operator|->
name|setScene
argument_list|(
operator|&
name|m_scene
argument_list|)
expr_stmt|;
name|m_anim
operator|=
operator|new
name|Animation
argument_list|(
name|m_item
argument_list|,
literal|"pos"
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setEasingCurve
argument_list|(
name|QEasingCurve
operator|::
name|OutBounce
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|easingCurvePicker
operator|->
name|setCurrentRow
argument_list|(
name|int
argument_list|(
name|QEasingCurve
operator|::
name|OutBounce
argument_list|)
argument_list|)
expr_stmt|;
name|startAnimation
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|createEasingCurve
name|QEasingCurve
name|createEasingCurve
parameter_list|(
name|QEasingCurve
operator|::
name|Type
name|curveType
parameter_list|)
block|{
name|QEasingCurve
name|curve
argument_list|(
name|curveType
argument_list|)
decl_stmt|;
if|if
condition|(
name|curveType
operator|==
name|QEasingCurve
operator|::
name|BezierSpline
condition|)
block|{
name|curve
operator|.
name|addCubicBezierSegment
argument_list|(
name|QPointF
argument_list|(
literal|0.4
argument_list|,
literal|0.1
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|0.6
argument_list|,
literal|0.9
argument_list|)
argument_list|,
name|QPointF
argument_list|(
literal|1.0
argument_list|,
literal|1.0
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|curveType
operator|==
name|QEasingCurve
operator|::
name|TCBSpline
condition|)
block|{
name|curve
operator|.
name|addTCBSegment
argument_list|(
name|QPointF
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|curve
operator|.
name|addTCBSegment
argument_list|(
name|QPointF
argument_list|(
literal|0.3
argument_list|,
literal|0.4
argument_list|)
argument_list|,
literal|0.2
argument_list|,
literal|1
argument_list|,
operator|-
literal|0.2
argument_list|)
expr_stmt|;
name|curve
operator|.
name|addTCBSegment
argument_list|(
name|QPointF
argument_list|(
literal|0.7
argument_list|,
literal|0.6
argument_list|)
argument_list|,
operator|-
literal|0.2
argument_list|,
literal|1
argument_list|,
literal|0.2
argument_list|)
expr_stmt|;
name|curve
operator|.
name|addTCBSegment
argument_list|(
name|QPointF
argument_list|(
literal|1.0
argument_list|,
literal|1.0
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
return|return
name|curve
return|;
block|}
end_function
begin_function
DECL|function|createCurveIcons
name|void
name|Window
operator|::
name|createCurveIcons
parameter_list|()
block|{
name|QPixmap
name|pix
argument_list|(
name|m_iconSize
argument_list|)
decl_stmt|;
name|QPainter
name|painter
argument_list|(
operator|&
name|pix
argument_list|)
decl_stmt|;
name|QLinearGradient
name|gradient
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|m_iconSize
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|0.0
argument_list|,
name|QColor
argument_list|(
literal|240
argument_list|,
literal|240
argument_list|,
literal|240
argument_list|)
argument_list|)
expr_stmt|;
name|gradient
operator|.
name|setColorAt
argument_list|(
literal|1.0
argument_list|,
name|QColor
argument_list|(
literal|224
argument_list|,
literal|224
argument_list|,
literal|224
argument_list|)
argument_list|)
expr_stmt|;
name|QBrush
name|brush
argument_list|(
name|gradient
argument_list|)
decl_stmt|;
specifier|const
name|QMetaObject
modifier|&
name|mo
init|=
name|QEasingCurve
operator|::
name|staticMetaObject
decl_stmt|;
name|QMetaEnum
name|metaEnum
init|=
name|mo
operator|.
name|enumerator
argument_list|(
name|mo
operator|.
name|indexOfEnumerator
argument_list|(
literal|"Type"
argument_list|)
argument_list|)
decl_stmt|;
comment|// Skip QEasingCurve::Custom
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|QEasingCurve
operator|::
name|NCurveTypes
operator|-
literal|1
condition|;
operator|++
name|i
control|)
block|{
name|painter
operator|.
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|m_iconSize
argument_list|)
argument_list|,
name|brush
argument_list|)
expr_stmt|;
name|QEasingCurve
name|curve
init|=
name|createEasingCurve
argument_list|(
operator|(
name|QEasingCurve
operator|::
name|Type
operator|)
name|i
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|QColor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|255
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|qreal
name|xAxis
init|=
name|m_iconSize
operator|.
name|height
argument_list|()
operator|/
literal|1.5
decl_stmt|;
name|qreal
name|yAxis
init|=
name|m_iconSize
operator|.
name|width
argument_list|()
operator|/
literal|3
decl_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
literal|0
argument_list|,
name|xAxis
argument_list|,
name|m_iconSize
operator|.
name|width
argument_list|()
argument_list|,
name|xAxis
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawLine
argument_list|(
name|yAxis
argument_list|,
literal|0
argument_list|,
name|yAxis
argument_list|,
name|m_iconSize
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|qreal
name|curveScale
init|=
name|m_iconSize
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|NoPen
argument_list|)
expr_stmt|;
comment|// start point
name|painter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|red
argument_list|)
expr_stmt|;
name|QPoint
name|start
argument_list|(
name|yAxis
argument_list|,
name|xAxis
operator|-
name|curveScale
operator|*
name|curve
operator|.
name|valueForProgress
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawRect
argument_list|(
name|start
operator|.
name|x
argument_list|()
operator|-
literal|1
argument_list|,
name|start
operator|.
name|y
argument_list|()
operator|-
literal|1
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|// end point
name|painter
operator|.
name|setBrush
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|QPoint
name|end
argument_list|(
name|yAxis
operator|+
name|curveScale
argument_list|,
name|xAxis
operator|-
name|curveScale
operator|*
name|curve
operator|.
name|valueForProgress
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|painter
operator|.
name|drawRect
argument_list|(
name|end
operator|.
name|x
argument_list|()
operator|-
literal|1
argument_list|,
name|end
operator|.
name|y
argument_list|()
operator|-
literal|1
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|QPainterPath
name|curvePath
decl_stmt|;
name|curvePath
operator|.
name|moveTo
argument_list|(
name|start
argument_list|)
expr_stmt|;
for|for
control|(
name|qreal
name|t
init|=
literal|0
init|;
name|t
operator|<=
literal|1.0
condition|;
name|t
operator|+=
literal|1.0
operator|/
name|curveScale
control|)
block|{
name|QPoint
name|to
decl_stmt|;
name|to
operator|.
name|setX
argument_list|(
name|yAxis
operator|+
name|curveScale
operator|*
name|t
argument_list|)
expr_stmt|;
name|to
operator|.
name|setY
argument_list|(
name|xAxis
operator|-
name|curveScale
operator|*
name|curve
operator|.
name|valueForProgress
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|curvePath
operator|.
name|lineTo
argument_list|(
name|to
argument_list|)
expr_stmt|;
block|}
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|painter
operator|.
name|strokePath
argument_list|(
name|curvePath
argument_list|,
name|QColor
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setRenderHint
argument_list|(
name|QPainter
operator|::
name|Antialiasing
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|QListWidgetItem
modifier|*
name|item
init|=
operator|new
name|QListWidgetItem
decl_stmt|;
name|item
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
name|pix
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
name|metaEnum
operator|.
name|key
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|easingCurvePicker
operator|->
name|addItem
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|startAnimation
name|void
name|Window
operator|::
name|startAnimation
parameter_list|()
block|{
name|m_anim
operator|->
name|setStartValue
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setEndValue
argument_list|(
name|QPointF
argument_list|(
literal|100
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setDuration
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setLoopCount
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// forever
name|m_anim
operator|->
name|start
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|curveChanged
name|void
name|Window
operator|::
name|curveChanged
parameter_list|(
name|int
name|row
parameter_list|)
block|{
name|QEasingCurve
operator|::
name|Type
name|curveType
init|=
operator|(
name|QEasingCurve
operator|::
name|Type
operator|)
name|row
decl_stmt|;
name|m_anim
operator|->
name|setEasingCurve
argument_list|(
name|createEasingCurve
argument_list|(
name|curveType
argument_list|)
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setCurrentTime
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|bool
name|isElastic
init|=
name|curveType
operator|>=
name|QEasingCurve
operator|::
name|InElastic
operator|&&
name|curveType
operator|<=
name|QEasingCurve
operator|::
name|OutInElastic
decl_stmt|;
name|bool
name|isBounce
init|=
name|curveType
operator|>=
name|QEasingCurve
operator|::
name|InBounce
operator|&&
name|curveType
operator|<=
name|QEasingCurve
operator|::
name|OutInBounce
decl_stmt|;
name|m_ui
operator|.
name|periodSpinBox
operator|->
name|setEnabled
argument_list|(
name|isElastic
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|amplitudeSpinBox
operator|->
name|setEnabled
argument_list|(
name|isElastic
operator|||
name|isBounce
argument_list|)
expr_stmt|;
name|m_ui
operator|.
name|overshootSpinBox
operator|->
name|setEnabled
argument_list|(
name|curveType
operator|>=
name|QEasingCurve
operator|::
name|InBack
operator|&&
name|curveType
operator|<=
name|QEasingCurve
operator|::
name|OutInBack
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|pathChanged
name|void
name|Window
operator|::
name|pathChanged
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|m_anim
operator|->
name|setPathType
argument_list|(
operator|(
name|Animation
operator|::
name|PathType
operator|)
name|index
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|periodChanged
name|void
name|Window
operator|::
name|periodChanged
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|QEasingCurve
name|curve
init|=
name|m_anim
operator|->
name|easingCurve
argument_list|()
decl_stmt|;
name|curve
operator|.
name|setPeriod
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setEasingCurve
argument_list|(
name|curve
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|amplitudeChanged
name|void
name|Window
operator|::
name|amplitudeChanged
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|QEasingCurve
name|curve
init|=
name|m_anim
operator|->
name|easingCurve
argument_list|()
decl_stmt|;
name|curve
operator|.
name|setAmplitude
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setEasingCurve
argument_list|(
name|curve
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|overshootChanged
name|void
name|Window
operator|::
name|overshootChanged
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|QEasingCurve
name|curve
init|=
name|m_anim
operator|->
name|easingCurve
argument_list|()
decl_stmt|;
name|curve
operator|.
name|setOvershoot
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|m_anim
operator|->
name|setEasingCurve
argument_list|(
name|curve
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
