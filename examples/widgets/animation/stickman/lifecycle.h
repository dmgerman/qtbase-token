begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LIFECYCLE_H
end_ifndef
begin_define
DECL|macro|LIFECYCLE_H
define|#
directive|define
name|LIFECYCLE_H
end_define
begin_include
include|#
directive|include
file|<Qt>
end_include
begin_decl_stmt
DECL|variable|StickMan
name|class
name|StickMan
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QStateMachine
name|class
name|QStateMachine
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QAnimationGroup
name|class
name|QAnimationGroup
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QState
name|class
name|QState
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QAbstractState
name|class
name|QAbstractState
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QAbstractTransition
name|class
name|QAbstractTransition
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QObject
name|class
name|QObject
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
DECL|variable|GraphicsView
name|class
name|GraphicsView
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|LifeCycle
block|{
name|public
label|:
name|LifeCycle
argument_list|(
name|StickMan
operator|*
name|stickMan
argument_list|,
name|GraphicsView
operator|*
name|keyEventReceiver
argument_list|)
expr_stmt|;
operator|~
name|LifeCycle
argument_list|()
expr_stmt|;
name|void
name|setDeathAnimation
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|)
function_decl|;
name|void
name|addActivity
argument_list|(
specifier|const
name|QString
operator|&
name|fileName
argument_list|,
name|Qt
operator|::
name|Key
name|key
argument_list|,
name|QObject
operator|*
name|sender
operator|=
name|NULL
argument_list|,
specifier|const
name|char
operator|*
name|signal
operator|=
name|NULL
argument_list|)
decl_stmt|;
name|void
name|start
parameter_list|()
function_decl|;
name|private
label|:
name|QState
modifier|*
name|makeState
parameter_list|(
name|QState
modifier|*
name|parentState
parameter_list|,
specifier|const
name|QString
modifier|&
name|animationFileName
parameter_list|)
function_decl|;
name|StickMan
modifier|*
name|m_stickMan
decl_stmt|;
name|QStateMachine
modifier|*
name|m_machine
decl_stmt|;
name|QAnimationGroup
modifier|*
name|m_animationGroup
decl_stmt|;
name|GraphicsView
modifier|*
name|m_keyReceiver
decl_stmt|;
name|QState
modifier|*
name|m_alive
decl_stmt|;
name|QState
modifier|*
name|m_dead
decl_stmt|;
name|QState
modifier|*
name|m_idle
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
