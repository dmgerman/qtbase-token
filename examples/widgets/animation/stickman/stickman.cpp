begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"stickman.h"
end_include
begin_include
include|#
directive|include
file|"node.h"
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QTimer>
end_include
begin_define
DECL|macro|_USE_MATH_DEFINES
define|#
directive|define
name|_USE_MATH_DEFINES
end_define
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|M_PI
end_ifndef
begin_define
DECL|macro|M_PI
define|#
directive|define
name|M_PI
value|3.14159265358979323846
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
DECL|variable|Coords
specifier|static
specifier|const
name|qreal
name|Coords
index|[
name|NodeCount
operator|*
literal|2
index|]
init|=
block|{
literal|0.0
block|,
operator|-
literal|150.0
block|,
comment|// head, #0
literal|0.0
block|,
operator|-
literal|100.0
block|,
comment|// body pentagon, top->bottom, left->right, #1 - 5
operator|-
literal|50.0
block|,
operator|-
literal|50.0
block|,
literal|50.0
block|,
operator|-
literal|50.0
block|,
operator|-
literal|25.0
block|,
literal|50.0
block|,
literal|25.0
block|,
literal|50.0
block|,
operator|-
literal|100.0
block|,
literal|0.0
block|,
comment|// right arm, #6 - 7
operator|-
literal|125.0
block|,
literal|50.0
block|,
literal|100.0
block|,
literal|0.0
block|,
comment|// left arm, #8 - 9
literal|125.0
block|,
literal|50.0
block|,
operator|-
literal|35.0
block|,
literal|75.0
block|,
comment|// lower body, #10 - 11
literal|35.0
block|,
literal|75.0
block|,
operator|-
literal|25.0
block|,
literal|200.0
block|,
comment|// right leg, #12 - 13
operator|-
literal|30.0
block|,
literal|300.0
block|,
literal|25.0
block|,
literal|200.0
block|,
comment|// left leg, #14 - 15
literal|30.0
block|,
literal|300.0
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|Bones
specifier|static
specifier|const
name|int
name|Bones
index|[
name|BoneCount
operator|*
literal|2
index|]
init|=
block|{
literal|0
block|,
literal|1
block|,
comment|// neck
literal|1
block|,
literal|2
block|,
comment|// body
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|4
block|,
literal|1
block|,
literal|5
block|,
literal|2
block|,
literal|3
block|,
literal|2
block|,
literal|4
block|,
literal|2
block|,
literal|5
block|,
literal|3
block|,
literal|4
block|,
literal|3
block|,
literal|5
block|,
literal|4
block|,
literal|5
block|,
literal|2
block|,
literal|6
block|,
comment|// right arm
literal|6
block|,
literal|7
block|,
literal|3
block|,
literal|8
block|,
comment|// left arm
literal|8
block|,
literal|9
block|,
literal|4
block|,
literal|10
block|,
comment|// lower body
literal|4
block|,
literal|11
block|,
literal|5
block|,
literal|10
block|,
literal|5
block|,
literal|11
block|,
literal|10
block|,
literal|11
block|,
literal|10
block|,
literal|12
block|,
comment|// right leg
literal|12
block|,
literal|13
block|,
literal|11
block|,
literal|14
block|,
comment|// left leg
literal|14
block|,
literal|15
block|}
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|StickMan
name|StickMan
operator|::
name|StickMan
parameter_list|()
block|{
name|m_sticks
operator|=
literal|true
expr_stmt|;
name|m_isDead
operator|=
literal|false
expr_stmt|;
name|m_pixmap
operator|=
name|QPixmap
argument_list|(
literal|"images/head.png"
argument_list|)
expr_stmt|;
name|m_penColor
operator|=
name|Qt
operator|::
name|white
expr_stmt|;
name|m_fillColor
operator|=
name|Qt
operator|::
name|black
expr_stmt|;
comment|// Set up start position of limbs
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NodeCount
condition|;
operator|++
name|i
control|)
block|{
name|m_nodes
index|[
name|i
index|]
operator|=
operator|new
name|Node
argument_list|(
name|QPointF
argument_list|(
name|Coords
index|[
name|i
operator|*
literal|2
index|]
argument_list|,
name|Coords
index|[
name|i
operator|*
literal|2
operator|+
literal|1
index|]
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_nodes
index|[
name|i
index|]
argument_list|,
name|SIGNAL
argument_list|(
name|positionChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|childPositionChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|BoneCount
condition|;
operator|++
name|i
control|)
block|{
name|int
name|n1
init|=
name|Bones
index|[
name|i
operator|*
literal|2
index|]
decl_stmt|;
name|int
name|n2
init|=
name|Bones
index|[
name|i
operator|*
literal|2
operator|+
literal|1
index|]
decl_stmt|;
name|Node
modifier|*
name|node1
init|=
name|m_nodes
index|[
name|n1
index|]
decl_stmt|;
name|Node
modifier|*
name|node2
init|=
name|m_nodes
index|[
name|n2
index|]
decl_stmt|;
name|QPointF
name|dist
init|=
name|node1
operator|->
name|pos
argument_list|()
operator|-
name|node2
operator|->
name|pos
argument_list|()
decl_stmt|;
name|m_perfectBoneLengths
index|[
name|i
index|]
operator|=
name|sqrt
argument_list|(
name|pow
argument_list|(
name|dist
operator|.
name|x
argument_list|()
argument_list|,
literal|2
argument_list|)
operator|+
name|pow
argument_list|(
name|dist
operator|.
name|y
argument_list|()
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|startTimer
argument_list|(
literal|10
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~StickMan
name|StickMan
operator|::
name|~
name|StickMan
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|childPositionChanged
name|void
name|StickMan
operator|::
name|childPositionChanged
parameter_list|()
block|{
name|prepareGeometryChange
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setDrawSticks
name|void
name|StickMan
operator|::
name|setDrawSticks
parameter_list|(
name|bool
name|on
parameter_list|)
block|{
name|m_sticks
operator|=
name|on
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nodeCount
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|Node
modifier|*
name|node
init|=
name|m_nodes
index|[
name|i
index|]
decl_stmt|;
name|node
operator|->
name|setVisible
argument_list|(
name|on
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|boundingRect
name|QRectF
name|StickMan
operator|::
name|boundingRect
parameter_list|()
specifier|const
block|{
comment|// account for head radius=50.0 plus pen which is 5.0
return|return
name|childrenBoundingRect
argument_list|()
operator|.
name|adjusted
argument_list|(
operator|-
literal|55.0
argument_list|,
operator|-
literal|55.0
argument_list|,
literal|55.0
argument_list|,
literal|55.0
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|nodeCount
name|int
name|StickMan
operator|::
name|nodeCount
parameter_list|()
specifier|const
block|{
return|return
name|NodeCount
return|;
block|}
end_function
begin_function
DECL|function|node
name|Node
modifier|*
name|StickMan
operator|::
name|node
parameter_list|(
name|int
name|idx
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|idx
operator|>=
literal|0
operator|&&
name|idx
operator|<
name|NodeCount
condition|)
return|return
name|m_nodes
index|[
name|idx
index|]
return|;
else|else
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|timerEvent
name|void
name|StickMan
operator|::
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
parameter_list|)
block|{
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|stabilize
name|void
name|StickMan
operator|::
name|stabilize
parameter_list|()
block|{
specifier|static
specifier|const
name|qreal
name|threshold
init|=
literal|0.001
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|BoneCount
condition|;
operator|++
name|i
control|)
block|{
name|int
name|n1
init|=
name|Bones
index|[
name|i
operator|*
literal|2
index|]
decl_stmt|;
name|int
name|n2
init|=
name|Bones
index|[
name|i
operator|*
literal|2
operator|+
literal|1
index|]
decl_stmt|;
name|Node
modifier|*
name|node1
init|=
name|m_nodes
index|[
name|n1
index|]
decl_stmt|;
name|Node
modifier|*
name|node2
init|=
name|m_nodes
index|[
name|n2
index|]
decl_stmt|;
name|QPointF
name|pos1
init|=
name|node1
operator|->
name|pos
argument_list|()
decl_stmt|;
name|QPointF
name|pos2
init|=
name|node2
operator|->
name|pos
argument_list|()
decl_stmt|;
name|QPointF
name|dist
init|=
name|pos1
operator|-
name|pos2
decl_stmt|;
name|qreal
name|length
init|=
name|sqrt
argument_list|(
name|pow
argument_list|(
name|dist
operator|.
name|x
argument_list|()
argument_list|,
literal|2
argument_list|)
operator|+
name|pow
argument_list|(
name|dist
operator|.
name|y
argument_list|()
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|qreal
name|diff
init|=
operator|(
name|length
operator|-
name|m_perfectBoneLengths
index|[
name|i
index|]
operator|)
operator|/
name|length
decl_stmt|;
name|QPointF
name|p
init|=
name|dist
operator|*
operator|(
literal|0.5
operator|*
name|diff
operator|)
decl_stmt|;
if|if
condition|(
name|p
operator|.
name|x
argument_list|()
operator|>
name|threshold
operator|&&
name|p
operator|.
name|y
argument_list|()
operator|>
name|threshold
condition|)
block|{
name|pos1
operator|-=
name|p
expr_stmt|;
name|pos2
operator|+=
name|p
expr_stmt|;
name|node1
operator|->
name|setPos
argument_list|(
name|pos1
argument_list|)
expr_stmt|;
name|node2
operator|->
name|setPos
argument_list|(
name|pos2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|posFor
name|QPointF
name|StickMan
operator|::
name|posFor
parameter_list|(
name|int
name|idx
parameter_list|)
specifier|const
block|{
return|return
name|m_nodes
index|[
name|idx
index|]
operator|->
name|pos
argument_list|()
return|;
block|}
end_function
begin_comment
comment|//#include<QTime>
end_comment
begin_function
DECL|function|paint
name|void
name|StickMan
operator|::
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionGraphicsItem
modifier|*
parameter_list|,
name|QWidget
modifier|*
parameter_list|)
block|{
comment|/*  static int frames = 0;     static QTime time;     if (frames++ % 100 == 0) {         frames = 1;         time.restart();     }      if (time.elapsed()> 0) {         painter->setPen(Qt::white);         painter->drawText(0, 0, QString::number(frames / (time.elapsed() / 1000.0)));     }*/
name|stabilize
argument_list|()
expr_stmt|;
if|if
condition|(
name|m_sticks
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|BoneCount
condition|;
operator|++
name|i
control|)
block|{
name|int
name|n1
init|=
name|Bones
index|[
name|i
operator|*
literal|2
index|]
decl_stmt|;
name|int
name|n2
init|=
name|Bones
index|[
name|i
operator|*
literal|2
operator|+
literal|1
index|]
decl_stmt|;
name|Node
modifier|*
name|node1
init|=
name|m_nodes
index|[
name|n1
index|]
decl_stmt|;
name|Node
modifier|*
name|node2
init|=
name|m_nodes
index|[
name|n2
index|]
decl_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
name|node1
operator|->
name|pos
argument_list|()
argument_list|,
name|node2
operator|->
name|pos
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// first bone is neck and will be used for head
name|QPainterPath
name|path
decl_stmt|;
name|path
operator|.
name|moveTo
argument_list|(
name|posFor
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// right arm
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
comment|// left arm
name|path
operator|.
name|moveTo
argument_list|(
name|posFor
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
comment|// body
name|path
operator|.
name|moveTo
argument_list|(
name|posFor
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// right leg
name|path
operator|.
name|moveTo
argument_list|(
name|posFor
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|13
argument_list|)
argument_list|)
expr_stmt|;
comment|// left leg
name|path
operator|.
name|moveTo
argument_list|(
name|posFor
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|14
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|lineTo
argument_list|(
name|posFor
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|m_penColor
argument_list|,
literal|5.0
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|Qt
operator|::
name|RoundCap
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|{
name|int
name|n1
init|=
name|Bones
index|[
literal|0
index|]
decl_stmt|;
name|int
name|n2
init|=
name|Bones
index|[
literal|1
index|]
decl_stmt|;
name|Node
modifier|*
name|node1
init|=
name|m_nodes
index|[
name|n1
index|]
decl_stmt|;
name|Node
modifier|*
name|node2
init|=
name|m_nodes
index|[
name|n2
index|]
decl_stmt|;
name|QPointF
name|dist
init|=
name|node2
operator|->
name|pos
argument_list|()
operator|-
name|node1
operator|->
name|pos
argument_list|()
decl_stmt|;
name|qreal
name|sinAngle
init|=
name|dist
operator|.
name|x
argument_list|()
operator|/
name|sqrt
argument_list|(
name|pow
argument_list|(
name|dist
operator|.
name|x
argument_list|()
argument_list|,
literal|2
argument_list|)
operator|+
name|pow
argument_list|(
name|dist
operator|.
name|y
argument_list|()
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|qreal
name|angle
init|=
name|asin
argument_list|(
name|sinAngle
argument_list|)
operator|*
literal|180.0
operator|/
name|M_PI
decl_stmt|;
name|QPointF
name|headPos
init|=
name|node1
operator|->
name|pos
argument_list|()
decl_stmt|;
name|painter
operator|->
name|translate
argument_list|(
name|headPos
argument_list|)
expr_stmt|;
name|painter
operator|->
name|rotate
argument_list|(
operator|-
name|angle
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|m_fillColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|QPointF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
literal|50.0
argument_list|,
literal|50.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|m_penColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|m_penColor
argument_list|,
literal|2.5
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|Qt
operator|::
name|RoundCap
argument_list|)
argument_list|)
expr_stmt|;
comment|// eyes
if|if
condition|(
name|m_isDead
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
operator|-
literal|30.0
argument_list|,
operator|-
literal|30.0
argument_list|,
operator|-
literal|20.0
argument_list|,
operator|-
literal|20.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
operator|-
literal|20.0
argument_list|,
operator|-
literal|30.0
argument_list|,
operator|-
literal|30.0
argument_list|,
operator|-
literal|20.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
literal|20.0
argument_list|,
operator|-
literal|30.0
argument_list|,
literal|30.0
argument_list|,
operator|-
literal|20.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawLine
argument_list|(
literal|30.0
argument_list|,
operator|-
literal|30.0
argument_list|,
literal|20.0
argument_list|,
operator|-
literal|20.0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|drawChord
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|30.0
argument_list|,
operator|-
literal|30.0
argument_list|,
literal|25.0
argument_list|,
literal|70.0
argument_list|)
argument_list|,
literal|30.0
operator|*
literal|16
argument_list|,
literal|120.0
operator|*
literal|16
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawChord
argument_list|(
name|QRectF
argument_list|(
literal|5.0
argument_list|,
operator|-
literal|30.0
argument_list|,
literal|25.0
argument_list|,
literal|70.0
argument_list|)
argument_list|,
literal|30.0
operator|*
literal|16
argument_list|,
literal|120.0
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
comment|// mouth
if|if
condition|(
name|m_isDead
condition|)
block|{
name|painter
operator|->
name|drawLine
argument_list|(
operator|-
literal|28.0
argument_list|,
literal|2.0
argument_list|,
literal|29.0
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|painter
operator|->
name|setBrush
argument_list|(
name|QColor
argument_list|(
literal|128
argument_list|,
literal|0
argument_list|,
literal|64
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawChord
argument_list|(
name|QRectF
argument_list|(
operator|-
literal|28.0
argument_list|,
literal|2.0
operator|-
literal|55.0
operator|/
literal|2.0
argument_list|,
literal|57.0
argument_list|,
literal|55.0
argument_list|)
argument_list|,
literal|0.0
argument_list|,
operator|-
literal|180.0
operator|*
literal|16
argument_list|)
expr_stmt|;
block|}
comment|// pupils
if|if
condition|(
operator|!
name|m_isDead
condition|)
block|{
name|painter
operator|->
name|setPen
argument_list|(
name|QPen
argument_list|(
name|m_fillColor
argument_list|,
literal|1.0
argument_list|,
name|Qt
operator|::
name|SolidLine
argument_list|,
name|Qt
operator|::
name|RoundCap
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|->
name|setBrush
argument_list|(
name|m_fillColor
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|QPointF
argument_list|(
operator|-
literal|12.0
argument_list|,
operator|-
literal|25.0
argument_list|)
argument_list|,
literal|5.0
argument_list|,
literal|5.0
argument_list|)
expr_stmt|;
name|painter
operator|->
name|drawEllipse
argument_list|(
name|QPointF
argument_list|(
literal|22.0
argument_list|,
operator|-
literal|25.0
argument_list|)
argument_list|,
literal|5.0
argument_list|,
literal|5.0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_function
end_unit
