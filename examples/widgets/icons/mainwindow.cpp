begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"iconpreviewarea.h"
end_include
begin_include
include|#
directive|include
file|"iconsizespinbox.h"
end_include
begin_include
include|#
directive|include
file|"imagedelegate.h"
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|MainWindow
name|MainWindow
operator|::
name|MainWindow
parameter_list|()
block|{
name|centralWidget
operator|=
operator|new
name|QWidget
expr_stmt|;
name|setCentralWidget
argument_list|(
name|centralWidget
argument_list|)
expr_stmt|;
name|createPreviewGroupBox
argument_list|()
expr_stmt|;
name|createImagesGroupBox
argument_list|()
expr_stmt|;
name|createIconSizeGroupBox
argument_list|()
expr_stmt|;
name|createActions
argument_list|()
expr_stmt|;
name|createMenus
argument_list|()
expr_stmt|;
name|createContextMenu
argument_list|()
expr_stmt|;
name|QGridLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|previewGroupBox
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|imagesGroupBox
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|iconSizeGroupBox
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|centralWidget
operator|->
name|setLayout
argument_list|(
name|mainLayout
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Icons"
argument_list|)
argument_list|)
expr_stmt|;
name|checkCurrentStyle
argument_list|()
expr_stmt|;
name|otherRadioButton
operator|->
name|click
argument_list|()
expr_stmt|;
name|resize
argument_list|(
name|minimumSizeHint
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|about
name|void
name|MainWindow
operator|::
name|about
parameter_list|()
block|{
name|QMessageBox
operator|::
name|about
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"About Icons"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"The<b>Icons</b> example illustrates how Qt renders an icon in "
literal|"different modes (active, normal, disabled, and selected) and "
literal|"states (on and off) based on a set of images."
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|changeStyle
name|void
name|MainWindow
operator|::
name|changeStyle
parameter_list|(
name|bool
name|checked
parameter_list|)
block|{
if|if
condition|(
operator|!
name|checked
condition|)
return|return;
name|QAction
modifier|*
name|action
init|=
name|qobject_cast
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
comment|//! [2] //! [3]
name|QStyle
modifier|*
name|style
init|=
name|QStyleFactory
operator|::
name|create
argument_list|(
name|action
operator|->
name|data
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
comment|//! [3] //! [4]
name|Q_ASSERT
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|smallRadioButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Small (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|style
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_SmallIconSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|largeRadioButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Large (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|style
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_LargeIconSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|toolBarRadioButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Toolbars (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|style
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_ToolBarIconSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|listViewRadioButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"List views (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|style
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_ListViewIconSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|iconViewRadioButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Icon views (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|style
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_IconViewIconSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tabBarRadioButton
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Tab bars (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|style
operator|->
name|pixelMetric
argument_list|(
name|QStyle
operator|::
name|PM_TabBarIconSize
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|changeSize
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_function
DECL|function|changeSize
name|void
name|MainWindow
operator|::
name|changeSize
parameter_list|(
name|bool
name|checked
parameter_list|)
block|{
if|if
condition|(
operator|!
name|checked
condition|)
return|return;
name|int
name|extent
decl_stmt|;
if|if
condition|(
name|otherRadioButton
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|extent
operator|=
name|otherSpinBox
operator|->
name|value
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|QStyle
operator|::
name|PixelMetric
name|metric
decl_stmt|;
if|if
condition|(
name|smallRadioButton
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|metric
operator|=
name|QStyle
operator|::
name|PM_SmallIconSize
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|largeRadioButton
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|metric
operator|=
name|QStyle
operator|::
name|PM_LargeIconSize
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|toolBarRadioButton
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|metric
operator|=
name|QStyle
operator|::
name|PM_ToolBarIconSize
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|listViewRadioButton
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|metric
operator|=
name|QStyle
operator|::
name|PM_ListViewIconSize
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|iconViewRadioButton
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|metric
operator|=
name|QStyle
operator|::
name|PM_IconViewIconSize
expr_stmt|;
block|}
else|else
block|{
name|metric
operator|=
name|QStyle
operator|::
name|PM_TabBarIconSize
expr_stmt|;
block|}
name|extent
operator|=
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
name|metric
argument_list|)
expr_stmt|;
block|}
name|previewArea
operator|->
name|setSize
argument_list|(
name|QSize
argument_list|(
name|extent
argument_list|,
name|extent
argument_list|)
argument_list|)
expr_stmt|;
name|otherSpinBox
operator|->
name|setEnabled
argument_list|(
name|otherRadioButton
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_function
DECL|function|changeIcon
name|void
name|MainWindow
operator|::
name|changeIcon
parameter_list|()
block|{
name|QIcon
name|icon
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|imagesTable
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|row
control|)
block|{
name|QTableWidgetItem
modifier|*
name|item0
init|=
name|imagesTable
operator|->
name|item
argument_list|(
name|row
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|item1
init|=
name|imagesTable
operator|->
name|item
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|QTableWidgetItem
modifier|*
name|item2
init|=
name|imagesTable
operator|->
name|item
argument_list|(
name|row
argument_list|,
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|item0
operator|->
name|checkState
argument_list|()
operator|==
name|Qt
operator|::
name|Checked
condition|)
block|{
name|QIcon
operator|::
name|Mode
name|mode
decl_stmt|;
if|if
condition|(
name|item1
operator|->
name|text
argument_list|()
operator|==
name|tr
argument_list|(
literal|"Normal"
argument_list|)
condition|)
block|{
name|mode
operator|=
name|QIcon
operator|::
name|Normal
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|item1
operator|->
name|text
argument_list|()
operator|==
name|tr
argument_list|(
literal|"Active"
argument_list|)
condition|)
block|{
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|item1
operator|->
name|text
argument_list|()
operator|==
name|tr
argument_list|(
literal|"Disabled"
argument_list|)
condition|)
block|{
name|mode
operator|=
name|QIcon
operator|::
name|Disabled
expr_stmt|;
block|}
else|else
block|{
name|mode
operator|=
name|QIcon
operator|::
name|Selected
expr_stmt|;
block|}
name|QIcon
operator|::
name|State
name|state
decl_stmt|;
if|if
condition|(
name|item2
operator|->
name|text
argument_list|()
operator|==
name|tr
argument_list|(
literal|"On"
argument_list|)
condition|)
block|{
name|state
operator|=
name|QIcon
operator|::
name|On
expr_stmt|;
block|}
else|else
block|{
name|state
operator|=
name|QIcon
operator|::
name|Off
expr_stmt|;
comment|//! [6] //! [7]
block|}
comment|//! [7]
comment|//! [8]
name|QString
name|fileName
init|=
name|item0
operator|->
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QImage
name|image
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
condition|)
name|icon
operator|.
name|addPixmap
argument_list|(
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
expr_stmt|;
comment|//! [8] //! [9]
block|}
comment|//! [9] //! [10]
block|}
comment|//! [10]
comment|//! [11]
name|previewArea
operator|->
name|setIcon
argument_list|(
name|icon
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [11]
end_comment
begin_comment
comment|//! [12]
end_comment
begin_function
DECL|function|addImages
name|void
name|MainWindow
operator|::
name|addImages
parameter_list|()
block|{
name|QStringList
name|fileNames
init|=
name|QFileDialog
operator|::
name|getOpenFileNames
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Open Images"
argument_list|)
argument_list|,
literal|""
argument_list|,
name|tr
argument_list|(
literal|"Images (*.png *.xpm *.jpg);;"
literal|"All Files (*)"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|fileNames
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
foreach|foreach
control|(
name|QString
name|fileName
decl|,
name|fileNames
control|)
block|{
name|int
name|row
init|=
name|imagesTable
operator|->
name|rowCount
argument_list|()
decl_stmt|;
name|imagesTable
operator|->
name|setRowCount
argument_list|(
name|row
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|//! [12]
comment|//! [13]
name|QString
name|imageName
init|=
name|QFileInfo
argument_list|(
name|fileName
argument_list|)
operator|.
name|baseName
argument_list|()
decl_stmt|;
comment|//! [13] //! [14]
name|QTableWidgetItem
modifier|*
name|item0
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|imageName
argument_list|)
decl_stmt|;
name|item0
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setFlags
argument_list|(
name|item0
operator|->
name|flags
argument_list|()
operator|&
operator|~
name|Qt
operator|::
name|ItemIsEditable
argument_list|)
expr_stmt|;
comment|//! [14]
comment|//! [15]
name|QTableWidgetItem
modifier|*
name|item1
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|tr
argument_list|(
literal|"Normal"
argument_list|)
argument_list|)
decl_stmt|;
comment|//! [15] //! [16]
name|QTableWidgetItem
modifier|*
name|item2
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|tr
argument_list|(
literal|"Off"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|guessModeStateAct
operator|->
name|isChecked
argument_list|()
condition|)
block|{
if|if
condition|(
name|fileName
operator|.
name|contains
argument_list|(
literal|"_act"
argument_list|)
condition|)
block|{
name|item1
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Active"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|fileName
operator|.
name|contains
argument_list|(
literal|"_dis"
argument_list|)
condition|)
block|{
name|item1
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Disabled"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|fileName
operator|.
name|contains
argument_list|(
literal|"_sel"
argument_list|)
condition|)
block|{
name|item1
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Selected"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|fileName
operator|.
name|contains
argument_list|(
literal|"_on"
argument_list|)
condition|)
name|item2
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"On"
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [16] //! [17]
block|}
comment|//! [17]
comment|//! [18]
name|imagesTable
operator|->
name|setItem
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|item0
argument_list|)
expr_stmt|;
comment|//! [18] //! [19]
name|imagesTable
operator|->
name|setItem
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|item1
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setItem
argument_list|(
name|row
argument_list|,
literal|2
argument_list|,
name|item2
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|openPersistentEditor
argument_list|(
name|item1
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|openPersistentEditor
argument_list|(
name|item2
argument_list|)
expr_stmt|;
name|item0
operator|->
name|setCheckState
argument_list|(
name|Qt
operator|::
name|Checked
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_comment
comment|//! [19]
end_comment
begin_comment
comment|//! [20]
end_comment
begin_function
DECL|function|removeAllImages
name|void
name|MainWindow
operator|::
name|removeAllImages
parameter_list|()
block|{
name|imagesTable
operator|->
name|setRowCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|changeIcon
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [20]
end_comment
begin_function
DECL|function|createPreviewGroupBox
name|void
name|MainWindow
operator|::
name|createPreviewGroupBox
parameter_list|()
block|{
name|previewGroupBox
operator|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Preview"
argument_list|)
argument_list|)
expr_stmt|;
name|previewArea
operator|=
operator|new
name|IconPreviewArea
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|previewArea
argument_list|)
expr_stmt|;
name|previewGroupBox
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [21]
end_comment
begin_function
DECL|function|createImagesGroupBox
name|void
name|MainWindow
operator|::
name|createImagesGroupBox
parameter_list|()
block|{
name|imagesGroupBox
operator|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Images"
argument_list|)
argument_list|)
expr_stmt|;
name|imagesTable
operator|=
operator|new
name|QTableWidget
expr_stmt|;
name|imagesTable
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|NoSelection
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setItemDelegate
argument_list|(
operator|new
name|ImageDelegate
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [21]
comment|//! [22]
name|QStringList
name|labels
decl_stmt|;
comment|//! [22] //! [23]
name|labels
operator|<<
name|tr
argument_list|(
literal|"Image"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Mode"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"State"
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setDefaultSectionSize
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setColumnCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setHorizontalHeaderLabels
argument_list|(
name|labels
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setResizeMode
argument_list|(
literal|0
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setResizeMode
argument_list|(
literal|1
argument_list|,
name|QHeaderView
operator|::
name|Fixed
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setResizeMode
argument_list|(
literal|2
argument_list|,
name|QHeaderView
operator|::
name|Fixed
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|verticalHeader
argument_list|()
operator|->
name|hide
argument_list|()
expr_stmt|;
comment|//! [23]
comment|//! [24]
name|connect
argument_list|(
name|imagesTable
argument_list|,
name|SIGNAL
argument_list|(
name|itemChanged
argument_list|(
name|QTableWidgetItem
operator|*
argument_list|)
argument_list|)
argument_list|,
comment|//! [24] //! [25]
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeIcon
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|imagesTable
argument_list|)
expr_stmt|;
name|imagesGroupBox
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [25]
end_comment
begin_comment
comment|//! [26]
end_comment
begin_function
DECL|function|createIconSizeGroupBox
name|void
name|MainWindow
operator|::
name|createIconSizeGroupBox
parameter_list|()
block|{
name|iconSizeGroupBox
operator|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Icon Size"
argument_list|)
argument_list|)
expr_stmt|;
name|smallRadioButton
operator|=
operator|new
name|QRadioButton
expr_stmt|;
name|largeRadioButton
operator|=
operator|new
name|QRadioButton
expr_stmt|;
name|toolBarRadioButton
operator|=
operator|new
name|QRadioButton
expr_stmt|;
name|listViewRadioButton
operator|=
operator|new
name|QRadioButton
expr_stmt|;
name|iconViewRadioButton
operator|=
operator|new
name|QRadioButton
expr_stmt|;
name|tabBarRadioButton
operator|=
operator|new
name|QRadioButton
expr_stmt|;
name|otherRadioButton
operator|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Other:"
argument_list|)
argument_list|)
expr_stmt|;
name|otherSpinBox
operator|=
operator|new
name|IconSizeSpinBox
expr_stmt|;
name|otherSpinBox
operator|->
name|setRange
argument_list|(
literal|8
argument_list|,
literal|128
argument_list|)
expr_stmt|;
name|otherSpinBox
operator|->
name|setValue
argument_list|(
literal|64
argument_list|)
expr_stmt|;
comment|//! [26]
comment|//! [27]
name|connect
argument_list|(
name|smallRadioButton
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|largeRadioButton
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|toolBarRadioButton
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|listViewRadioButton
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|iconViewRadioButton
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|tabBarRadioButton
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|otherRadioButton
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|otherSpinBox
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|otherSizeLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|otherSizeLayout
operator|->
name|addWidget
argument_list|(
name|otherRadioButton
argument_list|)
expr_stmt|;
name|otherSizeLayout
operator|->
name|addWidget
argument_list|(
name|otherSpinBox
argument_list|)
expr_stmt|;
name|otherSizeLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|smallRadioButton
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|largeRadioButton
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|toolBarRadioButton
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|listViewRadioButton
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|iconViewRadioButton
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|tabBarRadioButton
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addLayout
argument_list|(
name|otherSizeLayout
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|setRowStretch
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|iconSizeGroupBox
operator|->
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [27]
end_comment
begin_comment
comment|//! [28]
end_comment
begin_function
DECL|function|createActions
name|void
name|MainWindow
operator|::
name|createActions
parameter_list|()
block|{
name|addImagesAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Add Images..."
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addImagesAct
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+A"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|addImagesAct
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|addImages
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|removeAllImagesAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Remove All Images"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|removeAllImagesAct
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+R"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|removeAllImagesAct
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|removeAllImages
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|exitAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Quit"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|exitAct
operator|->
name|setShortcuts
argument_list|(
name|QKeySequence
operator|::
name|Quit
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|exitAct
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|styleActionGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|this
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QString
name|styleName
decl|,
name|QStyleFactory
operator|::
name|keys
argument_list|()
control|)
block|{
name|QAction
modifier|*
name|action
init|=
operator|new
name|QAction
argument_list|(
name|styleActionGroup
argument_list|)
decl_stmt|;
name|action
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"%1 Style"
argument_list|)
operator|.
name|arg
argument_list|(
name|styleName
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|->
name|setData
argument_list|(
name|styleName
argument_list|)
expr_stmt|;
name|action
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|action
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|changeStyle
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|guessModeStateAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Guess Image Mode/State"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|guessModeStateAct
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|guessModeStateAct
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|aboutAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&About"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|aboutAct
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|about
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|aboutQtAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"About&Qt"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|aboutQtAct
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|qApp
argument_list|,
name|SLOT
argument_list|(
name|aboutQt
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [28]
end_comment
begin_comment
comment|//! [29]
end_comment
begin_function
DECL|function|createMenus
name|void
name|MainWindow
operator|::
name|createMenus
parameter_list|()
block|{
name|fileMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|addImagesAct
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|removeAllImagesAct
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|exitAct
argument_list|)
expr_stmt|;
name|viewMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&View"
argument_list|)
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QAction
modifier|*
name|action
decl|,
name|styleActionGroup
operator|->
name|actions
argument_list|()
control|)
name|viewMenu
operator|->
name|addAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|viewMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|viewMenu
operator|->
name|addAction
argument_list|(
name|guessModeStateAct
argument_list|)
expr_stmt|;
name|menuBar
argument_list|()
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|helpMenu
operator|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Help"
argument_list|)
argument_list|)
expr_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|aboutAct
argument_list|)
expr_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|aboutQtAct
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [29]
end_comment
begin_comment
comment|//! [30]
end_comment
begin_function
DECL|function|createContextMenu
name|void
name|MainWindow
operator|::
name|createContextMenu
parameter_list|()
block|{
name|imagesTable
operator|->
name|setContextMenuPolicy
argument_list|(
name|Qt
operator|::
name|ActionsContextMenu
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|addAction
argument_list|(
name|addImagesAct
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|addAction
argument_list|(
name|removeAllImagesAct
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [30]
end_comment
begin_comment
comment|//! [31]
end_comment
begin_function
DECL|function|checkCurrentStyle
name|void
name|MainWindow
operator|::
name|checkCurrentStyle
parameter_list|()
block|{
foreach|foreach
control|(
name|QAction
modifier|*
name|action
decl|,
name|styleActionGroup
operator|->
name|actions
argument_list|()
control|)
block|{
name|QString
name|styleName
init|=
name|action
operator|->
name|data
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QStyle
modifier|*
name|candidate
init|=
name|QStyleFactory
operator|::
name|create
argument_list|(
name|styleName
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|candidate
argument_list|)
expr_stmt|;
if|if
condition|(
name|candidate
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
operator|==
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
condition|)
block|{
name|action
operator|->
name|trigger
argument_list|()
expr_stmt|;
return|return;
block|}
operator|delete
name|candidate
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [31]
end_comment
end_unit
