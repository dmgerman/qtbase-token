begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"dialog.h"
end_include
begin_include
include|#
directive|include
file|"wigglywidget.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|Dialog
name|Dialog
operator|::
name|Dialog
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
name|bool
name|smallScreen
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
name|WigglyWidget
modifier|*
name|wigglyWidget
init|=
operator|new
name|WigglyWidget
decl_stmt|;
name|QLineEdit
modifier|*
name|lineEdit
init|=
operator|new
name|QLineEdit
decl_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|wigglyWidget
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|lineEdit
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_SOFTKEYS_ENABLED
name|QAction
modifier|*
name|exitAction
init|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Exit"
argument_list|)
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|exitAction
operator|->
name|setSoftKeyRole
argument_list|(
name|QAction
operator|::
name|NegativeSoftKey
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|exitAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
name|exitAction
argument_list|)
expr_stmt|;
name|Qt
operator|::
name|WindowFlags
name|flags
init|=
name|windowFlags
argument_list|()
decl_stmt|;
name|flags
operator||=
name|Qt
operator|::
name|WindowSoftkeysVisibleHint
expr_stmt|;
name|setWindowFlags
argument_list|(
name|flags
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|connect
argument_list|(
name|lineEdit
argument_list|,
name|SIGNAL
argument_list|(
name|textChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|wigglyWidget
argument_list|,
name|SLOT
argument_list|(
name|setText
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|smallScreen
condition|)
block|{
name|lineEdit
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Hello world!"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|lineEdit
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Hello!"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Wiggly"
argument_list|)
argument_list|)
expr_stmt|;
name|resize
argument_list|(
literal|360
argument_list|,
literal|145
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
end_unit
