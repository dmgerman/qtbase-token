begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"stareditor.h"
end_include
begin_include
include|#
directive|include
file|"starrating.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|StarEditor
name|StarEditor
operator|::
name|StarEditor
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|setMouseTracking
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setAutoFillBackground
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|sizeHint
name|QSize
name|StarEditor
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
return|return
name|myStarRating
operator|.
name|sizeHint
argument_list|()
return|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|paintEvent
name|void
name|StarEditor
operator|::
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|myStarRating
operator|.
name|paint
argument_list|(
operator|&
name|painter
argument_list|,
name|rect
argument_list|()
argument_list|,
name|this
operator|->
name|palette
argument_list|()
argument_list|,
name|StarRating
operator|::
name|Editable
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|mouseMoveEvent
name|void
name|StarEditor
operator|::
name|mouseMoveEvent
parameter_list|(
name|QMouseEvent
modifier|*
name|event
parameter_list|)
block|{
name|int
name|star
init|=
name|starAtPosition
argument_list|(
name|event
operator|->
name|x
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|star
operator|!=
name|myStarRating
operator|.
name|starCount
argument_list|()
operator|&&
name|star
operator|!=
operator|-
literal|1
condition|)
block|{
name|myStarRating
operator|.
name|setStarCount
argument_list|(
name|star
argument_list|)
expr_stmt|;
name|update
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_function
DECL|function|mouseReleaseEvent
name|void
name|StarEditor
operator|::
name|mouseReleaseEvent
parameter_list|(
name|QMouseEvent
modifier|*
comment|/* event */
parameter_list|)
block|{
emit|emit
name|editingFinished
argument_list|()
emit|;
block|}
end_function
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_function
DECL|function|starAtPosition
name|int
name|StarEditor
operator|::
name|starAtPosition
parameter_list|(
name|int
name|x
parameter_list|)
block|{
name|int
name|star
init|=
operator|(
name|x
operator|/
operator|(
name|myStarRating
operator|.
name|sizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|/
name|myStarRating
operator|.
name|maxStarCount
argument_list|()
operator|)
operator|)
operator|+
literal|1
decl_stmt|;
if|if
condition|(
name|star
operator|<=
literal|0
operator|||
name|star
operator|>
name|myStarRating
operator|.
name|maxStarCount
argument_list|()
condition|)
return|return
operator|-
literal|1
return|;
return|return
name|star
return|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
end_unit
