begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the demonstration applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|SPREADSHEET_H
end_ifndef
begin_define
DECL|macro|SPREADSHEET_H
define|#
directive|define
name|SPREADSHEET_H
end_define
begin_include
include|#
directive|include
file|<QMainWindow>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QAction
name|class
name|QAction
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLabel
name|class
name|QLabel
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLineEdit
name|class
name|QLineEdit
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QToolBar
name|class
name|QToolBar
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTableWidgetItem
name|class
name|QTableWidgetItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTableWidget
name|class
name|QTableWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
name|class
name|SpreadSheet
range|:
name|public
name|QMainWindow
block|{
name|Q_OBJECT
name|public
operator|:
name|SpreadSheet
argument_list|(
argument|int rows
argument_list|,
argument|int cols
argument_list|,
argument|QWidget *parent =
literal|0
argument_list|)
block|;
name|public
name|slots
operator|:
name|void
name|updateStatus
argument_list|(
name|QTableWidgetItem
operator|*
name|item
argument_list|)
block|;
name|void
name|updateColor
argument_list|(
name|QTableWidgetItem
operator|*
name|item
argument_list|)
block|;
name|void
name|updateLineEdit
argument_list|(
name|QTableWidgetItem
operator|*
name|item
argument_list|)
block|;
name|void
name|returnPressed
argument_list|()
block|;
name|void
name|selectColor
argument_list|()
block|;
name|void
name|selectFont
argument_list|()
block|;
name|void
name|clear
argument_list|()
block|;
name|void
name|showAbout
argument_list|()
block|;
name|void
name|print
argument_list|()
block|;
name|void
name|actionSum
argument_list|()
block|;
name|void
name|actionSubtract
argument_list|()
block|;
name|void
name|actionAdd
argument_list|()
block|;
name|void
name|actionMultiply
argument_list|()
block|;
name|void
name|actionDivide
argument_list|()
block|;
name|protected
operator|:
name|void
name|setupContextMenu
argument_list|()
block|;
name|void
name|setupContents
argument_list|()
block|;
name|void
name|setupMenuBar
argument_list|()
block|;
name|void
name|createActions
argument_list|()
block|;
name|void
name|actionMath_helper
argument_list|(
specifier|const
name|QString
operator|&
name|title
argument_list|,
specifier|const
name|QString
operator|&
name|op
argument_list|)
block|;
name|bool
name|runInputDialog
argument_list|(
specifier|const
name|QString
operator|&
name|title
argument_list|,
specifier|const
name|QString
operator|&
name|c1Text
argument_list|,
specifier|const
name|QString
operator|&
name|c2Text
argument_list|,
specifier|const
name|QString
operator|&
name|opText
argument_list|,
specifier|const
name|QString
operator|&
name|outText
argument_list|,
name|QString
operator|*
name|cell1
argument_list|,
name|QString
operator|*
name|cell2
argument_list|,
name|QString
operator|*
name|outCell
argument_list|)
block|;
name|private
operator|:
name|QToolBar
operator|*
name|toolBar
block|;
name|QAction
operator|*
name|colorAction
block|;
name|QAction
operator|*
name|fontAction
block|;
name|QAction
operator|*
name|firstSeparator
block|;
name|QAction
operator|*
name|cell_sumAction
block|;
name|QAction
operator|*
name|cell_addAction
block|;
name|QAction
operator|*
name|cell_subAction
block|;
name|QAction
operator|*
name|cell_mulAction
block|;
name|QAction
operator|*
name|cell_divAction
block|;
name|QAction
operator|*
name|secondSeparator
block|;
name|QAction
operator|*
name|clearAction
block|;
name|QAction
operator|*
name|aboutSpreadSheet
block|;
name|QAction
operator|*
name|exitAction
block|;
name|QAction
operator|*
name|printAction
block|;
name|QLabel
operator|*
name|cellLabel
block|;
name|QTableWidget
operator|*
name|table
block|;
name|QLineEdit
operator|*
name|formulaInput
block|;  }
decl_stmt|;
end_decl_stmt
begin_function_decl
name|void
name|decode_pos
parameter_list|(
specifier|const
name|QString
modifier|&
name|pos
parameter_list|,
name|int
modifier|*
name|row
parameter_list|,
name|int
modifier|*
name|col
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|QString
name|encode_pos
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|)
function_decl|;
end_function_decl
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// SPREADSHEET_H
end_comment
end_unit
