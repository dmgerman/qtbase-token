begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Giuseppe D'Angelo<giuseppe.dangelo@kdab.com> ** Copyright (C) 2015 Samuel Gaist<samuel.gaist@edeltech.ch> ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|REGULAREXPRESSIONDIALOG_H
end_ifndef
begin_define
DECL|macro|REGULAREXPRESSIONDIALOG_H
define|#
directive|define
name|REGULAREXPRESSIONDIALOG_H
end_define
begin_include
include|#
directive|include
file|<QDialog>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QCheckBox
name|class
name|QCheckBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QComboBox
name|class
name|QComboBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLabel
name|class
name|QLabel
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QLineEdit
name|class
name|QLineEdit
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QSpinBox
name|class
name|QSpinBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPlainTextEdit
name|class
name|QPlainTextEdit
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTreeWidget
name|class
name|QTreeWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
name|class
name|RegularExpressionDialog
range|:
name|public
name|QDialog
block|{
name|Q_OBJECT
name|public
operator|:
name|RegularExpressionDialog
argument_list|(
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|private
operator|:
name|void
name|refresh
argument_list|()
block|;
name|void
name|copyEscapedPatternToClipboard
argument_list|()
block|;
name|void
name|setupUi
argument_list|()
block|;
name|QWidget
operator|*
name|setupLeftUi
argument_list|()
block|;
name|QWidget
operator|*
name|setupRightUi
argument_list|()
block|;
name|QLineEdit
operator|*
name|patternLineEdit
block|;
name|QLineEdit
operator|*
name|escapedPatternLineEdit
block|;
name|QPlainTextEdit
operator|*
name|subjectTextEdit
block|;
name|QCheckBox
operator|*
name|caseInsensitiveOptionCheckBox
block|;
name|QCheckBox
operator|*
name|dotMatchesEverythingOptionCheckBox
block|;
name|QCheckBox
operator|*
name|multilineOptionCheckBox
block|;
name|QCheckBox
operator|*
name|extendedPatternSyntaxOptionCheckBox
block|;
name|QCheckBox
operator|*
name|invertedGreedinessOptionCheckBox
block|;
name|QCheckBox
operator|*
name|dontCaptureOptionCheckBox
block|;
name|QCheckBox
operator|*
name|useUnicodePropertiesOptionCheckBox
block|;
name|QCheckBox
operator|*
name|optimizeOnFirstUsageOptionCheckBox
block|;
name|QCheckBox
operator|*
name|dontAutomaticallyOptimizeOptionCheckBox
block|;
name|QSpinBox
operator|*
name|offsetSpinBox
block|;
name|QComboBox
operator|*
name|matchTypeComboBox
block|;
name|QCheckBox
operator|*
name|anchoredMatchOptionCheckBox
block|;
name|QCheckBox
operator|*
name|dontCheckSubjectStringMatchOptionCheckBox
block|;
name|QTreeWidget
operator|*
name|matchDetailsTreeWidget
block|;
name|QLabel
operator|*
name|regexpStatusLabel
block|;
name|QTreeWidget
operator|*
name|namedGroupsTreeWidget
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
