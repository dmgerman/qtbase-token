begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|BASICTOOLSPLUGIN_H
end_ifndef
begin_define
DECL|macro|BASICTOOLSPLUGIN_H
define|#
directive|define
name|BASICTOOLSPLUGIN_H
end_define
begin_include
include|#
directive|include
file|<QRect>
end_include
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QtPlugin>
end_include
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_include
include|#
directive|include
file|<QPainterPath>
end_include
begin_include
include|#
directive|include
file|<QImage>
end_include
begin_comment
comment|//! [0]
end_comment
begin_include
include|#
directive|include
file|<plugandpaint/interfaces.h>
end_include
begin_comment
comment|//! [1]
end_comment
begin_decl_stmt
DECL|variable|QObject
name|class
name|BasicToolsPlugin
range|:
name|public
name|QObject
decl_stmt|,
DECL|variable|BrushInterface
name|public
name|BrushInterface
decl_stmt|,
DECL|variable|ShapeInterface
name|public
name|ShapeInterface
decl_stmt|,
name|public
name|FilterInterface
block|{
name|Q_OBJECT
comment|//! [4]
name|Q_PLUGIN_METADATA
argument_list|(
name|IID
literal|"org.qt-project.Qt.Examples.PlugAndPaint.BrushInterface"
name|FILE
literal|"basictools.json"
argument_list|)
comment|//! [4]
name|Q_INTERFACES
argument_list|(
name|BrushInterface
name|ShapeInterface
name|FilterInterface
argument_list|)
comment|//! [0]
comment|//! [2]
name|public
range|:
comment|//! [1]
comment|// BrushInterface
name|QStringList
name|brushes
argument_list|()
specifier|const
decl_stmt|;
name|QRect
name|mousePress
parameter_list|(
specifier|const
name|QString
modifier|&
name|brush
parameter_list|,
name|QPainter
modifier|&
name|painter
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|)
function_decl|;
name|QRect
name|mouseMove
parameter_list|(
specifier|const
name|QString
modifier|&
name|brush
parameter_list|,
name|QPainter
modifier|&
name|painter
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|oldPos
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|newPos
parameter_list|)
function_decl|;
name|QRect
name|mouseRelease
parameter_list|(
specifier|const
name|QString
modifier|&
name|brush
parameter_list|,
name|QPainter
modifier|&
name|painter
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|)
function_decl|;
comment|// ShapeInterface
name|QStringList
name|shapes
argument_list|()
specifier|const
expr_stmt|;
name|QPainterPath
name|generateShape
parameter_list|(
specifier|const
name|QString
modifier|&
name|shape
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
function_decl|;
comment|// FilterInterface
name|QStringList
name|filters
argument_list|()
specifier|const
expr_stmt|;
name|QImage
name|filterImage
parameter_list|(
specifier|const
name|QString
modifier|&
name|filter
parameter_list|,
specifier|const
name|QImage
modifier|&
name|image
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
function_decl|;
comment|//! [3]
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|//! [2] //! [3]
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
