begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|LANGUAGECHOOSER_H
end_ifndef
begin_define
DECL|macro|LANGUAGECHOOSER_H
define|#
directive|define
name|LANGUAGECHOOSER_H
end_define
begin_include
include|#
directive|include
file|<QDialog>
end_include
begin_include
include|#
directive|include
file|<QMap>
end_include
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QAbstractButton
name|class
name|QAbstractButton
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QCheckBox
name|class
name|QCheckBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QDialogButtonBox
name|class
name|QDialogButtonBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGroupBox
name|class
name|QGroupBox
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
DECL|variable|MainWindow
name|class
name|MainWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|LanguageChooser
range|:
name|public
name|QDialog
block|{
name|Q_OBJECT
name|public
operator|:
name|explicit
name|LanguageChooser
argument_list|(
specifier|const
name|QString
operator|&
name|defaultLang
operator|=
name|QString
argument_list|()
argument_list|,
name|QWidget
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|protected
operator|:
name|bool
name|eventFilter
argument_list|(
argument|QObject *object
argument_list|,
argument|QEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|closeEvent
argument_list|(
argument|QCloseEvent *event
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|private
name|slots
operator|:
name|void
name|checkBoxToggled
argument_list|()
block|;
name|void
name|showAll
argument_list|()
block|;
name|void
name|hideAll
argument_list|()
block|;
name|private
operator|:
name|QStringList
name|findQmFiles
argument_list|()
block|;
name|QString
name|languageName
argument_list|(
specifier|const
name|QString
operator|&
name|qmFile
argument_list|)
block|;
name|QColor
name|colorForLanguage
argument_list|(
specifier|const
name|QString
operator|&
name|language
argument_list|)
block|;
specifier|static
name|bool
name|languageMatch
argument_list|(
specifier|const
name|QString
operator|&
name|lang
argument_list|,
specifier|const
name|QString
operator|&
name|qmFile
argument_list|)
block|;
name|QGroupBox
operator|*
name|groupBox
block|;
name|QDialogButtonBox
operator|*
name|buttonBox
block|;
name|QAbstractButton
operator|*
name|showAllButton
block|;
name|QAbstractButton
operator|*
name|hideAllButton
block|;
name|QMap
operator|<
name|QCheckBox
operator|*
block|,
name|QString
operator|>
name|qmFileForCheckBoxMap
block|;
name|QMap
operator|<
name|QCheckBox
operator|*
block|,
name|MainWindow
operator|*
operator|>
name|mainWindowForCheckBoxMap
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
