begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"stylesheeteditor.h"
end_include
begin_constructor
DECL|function|StyleSheetEditor
name|StyleSheetEditor
operator|::
name|StyleSheetEditor
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
name|ui
operator|.
name|setupUi
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QRegExp
name|regExp
argument_list|(
literal|".(.*)\\+?Style"
argument_list|)
decl_stmt|;
name|QString
name|defaultStyle
init|=
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
decl_stmt|;
if|if
condition|(
name|regExp
operator|.
name|exactMatch
argument_list|(
name|defaultStyle
argument_list|)
condition|)
name|defaultStyle
operator|=
name|regExp
operator|.
name|cap
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|ui
operator|.
name|styleCombo
operator|->
name|addItems
argument_list|(
name|QStyleFactory
operator|::
name|keys
argument_list|()
argument_list|)
expr_stmt|;
name|ui
operator|.
name|styleCombo
operator|->
name|setCurrentIndex
argument_list|(
name|ui
operator|.
name|styleCombo
operator|->
name|findText
argument_list|(
name|defaultStyle
argument_list|,
name|Qt
operator|::
name|MatchContains
argument_list|)
argument_list|)
expr_stmt|;
name|ui
operator|.
name|styleSheetCombo
operator|->
name|setCurrentIndex
argument_list|(
name|ui
operator|.
name|styleSheetCombo
operator|->
name|findText
argument_list|(
literal|"Coffee"
argument_list|)
argument_list|)
expr_stmt|;
name|loadStyleSheet
argument_list|(
literal|"Coffee"
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|on_styleCombo_activated
name|void
name|StyleSheetEditor
operator|::
name|on_styleCombo_activated
parameter_list|(
specifier|const
name|QString
modifier|&
name|styleName
parameter_list|)
block|{
name|qApp
operator|->
name|setStyle
argument_list|(
name|styleName
argument_list|)
expr_stmt|;
name|ui
operator|.
name|applyButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_styleSheetCombo_activated
name|void
name|StyleSheetEditor
operator|::
name|on_styleSheetCombo_activated
parameter_list|(
specifier|const
name|QString
modifier|&
name|sheetName
parameter_list|)
block|{
name|loadStyleSheet
argument_list|(
name|sheetName
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_styleTextEdit_textChanged
name|void
name|StyleSheetEditor
operator|::
name|on_styleTextEdit_textChanged
parameter_list|()
block|{
name|ui
operator|.
name|applyButton
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|on_applyButton_clicked
name|void
name|StyleSheetEditor
operator|::
name|on_applyButton_clicked
parameter_list|()
block|{
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|ui
operator|.
name|styleTextEdit
operator|->
name|toPlainText
argument_list|()
argument_list|)
expr_stmt|;
name|ui
operator|.
name|applyButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|loadStyleSheet
name|void
name|StyleSheetEditor
operator|::
name|loadStyleSheet
parameter_list|(
specifier|const
name|QString
modifier|&
name|sheetName
parameter_list|)
block|{
name|QFile
name|file
argument_list|(
literal|":/qss/"
operator|+
name|sheetName
operator|.
name|toLower
argument_list|()
operator|+
literal|".qss"
argument_list|)
decl_stmt|;
name|file
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|ReadOnly
argument_list|)
expr_stmt|;
name|QString
name|styleSheet
init|=
name|QString
operator|::
name|fromLatin1
argument_list|(
name|file
operator|.
name|readAll
argument_list|()
argument_list|)
decl_stmt|;
name|ui
operator|.
name|styleTextEdit
operator|->
name|setPlainText
argument_list|(
name|styleSheet
argument_list|)
expr_stmt|;
name|qApp
operator|->
name|setStyleSheet
argument_list|(
name|styleSheet
argument_list|)
expr_stmt|;
name|ui
operator|.
name|applyButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
