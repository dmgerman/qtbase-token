begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtCore module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"testwidget.h"
end_include
begin_include
include|#
directive|include
file|"elidedlabel.h"
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QLabel>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QPushButton>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QSizePolicy>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/QGridLayout>
end_include
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|TestWidget
name|TestWidget
operator|::
name|TestWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
specifier|const
name|QString
name|romeo
init|=
name|tr
argument_list|(
literal|"But soft, what light through yonder window breaks? / "
literal|"It is the east, and Juliet is the sun. / "
literal|"Arise, fair sun, and kill the envious moon, / "
literal|"Who is already sick and pale with grief / "
literal|"That thou, her maid, art far more fair than she."
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|macbeth
init|=
name|tr
argument_list|(
literal|"To-morrow, and to-morrow, and to-morrow, / "
literal|"Creeps in this petty pace from day to day, / "
literal|"To the last syllable of recorded time; / "
literal|"And all our yesterdays have lighted fools / "
literal|"The way to dusty death. Out, out, brief candle! / "
literal|"Life's but a walking shadow, a poor player, / "
literal|"That struts and frets his hour upon the stage, / "
literal|"And then is heard no more. It is a tale / "
literal|"Told by an idiot, full of sound and fury, / "
literal|"Signifying nothing."
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|harry
init|=
name|tr
argument_list|(
literal|"Feeling lucky, punk?"
argument_list|)
decl_stmt|;
name|textSamples
operator|<<
name|romeo
operator|<<
name|macbeth
operator|<<
name|harry
expr_stmt|;
comment|//! [0]
comment|//! [1]
name|sampleIndex
operator|=
literal|0
expr_stmt|;
name|elidedText
operator|=
operator|new
name|ElidedLabel
argument_list|(
name|textSamples
index|[
name|sampleIndex
index|]
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|elidedText
operator|->
name|setFrameStyle
argument_list|(
name|QFrame
operator|::
name|Box
argument_list|)
expr_stmt|;
comment|//! [1]
comment|//! [2]
name|QPushButton
modifier|*
name|switchButton
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Switch text"
argument_list|)
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|switchButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|switchText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|exitButton
init|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Exit"
argument_list|)
argument_list|)
decl_stmt|;
name|connect
argument_list|(
name|exitButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|label
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Elided"
argument_list|)
argument_list|)
decl_stmt|;
name|label
operator|->
name|setVisible
argument_list|(
name|elidedText
operator|->
name|isElided
argument_list|()
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|elidedText
argument_list|,
name|SIGNAL
argument_list|(
name|elisionChanged
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|label
argument_list|,
name|SLOT
argument_list|(
name|setVisible
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [2]
comment|//! [3]
name|widthSlider
operator|=
operator|new
name|QSlider
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|widthSlider
operator|->
name|setMinimum
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|widthSlider
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|onWidthChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|heightSlider
operator|=
operator|new
name|QSlider
argument_list|(
name|Qt
operator|::
name|Vertical
argument_list|)
expr_stmt|;
name|heightSlider
operator|->
name|setInvertedAppearance
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|heightSlider
operator|->
name|setMinimum
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|heightSlider
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|onHeightChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [3]
comment|//! [4]
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
argument_list|()
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|label
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|switchButton
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|exitButton
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|widthSlider
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|heightSlider
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|elidedText
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
name|Qt
operator|::
name|AlignTop
operator||
name|Qt
operator|::
name|AlignLeft
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
comment|//! [4]
block|}
end_constructor
begin_comment
comment|//! [6]
end_comment
begin_function
DECL|function|resizeEvent
name|void
name|TestWidget
operator|::
name|resizeEvent
parameter_list|(
name|QResizeEvent
modifier|*
name|event
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|event
argument_list|)
name|int
name|maxWidth
init|=
name|widthSlider
operator|->
name|width
argument_list|()
decl_stmt|;
name|widthSlider
operator|->
name|setMaximum
argument_list|(
name|maxWidth
argument_list|)
expr_stmt|;
name|widthSlider
operator|->
name|setValue
argument_list|(
name|maxWidth
operator|/
literal|2
argument_list|)
expr_stmt|;
name|int
name|maxHeight
init|=
name|heightSlider
operator|->
name|height
argument_list|()
decl_stmt|;
name|heightSlider
operator|->
name|setMaximum
argument_list|(
name|maxHeight
argument_list|)
expr_stmt|;
name|heightSlider
operator|->
name|setValue
argument_list|(
name|maxHeight
operator|/
literal|2
argument_list|)
expr_stmt|;
name|elidedText
operator|->
name|setFixedSize
argument_list|(
name|widthSlider
operator|->
name|value
argument_list|()
argument_list|,
name|heightSlider
operator|->
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_function
DECL|function|switchText
name|void
name|TestWidget
operator|::
name|switchText
parameter_list|()
block|{
name|sampleIndex
operator|=
operator|(
name|sampleIndex
operator|+
literal|1
operator|)
operator|%
name|textSamples
operator|.
name|size
argument_list|()
expr_stmt|;
name|elidedText
operator|->
name|setText
argument_list|(
name|textSamples
operator|.
name|at
argument_list|(
name|sampleIndex
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_function
DECL|function|onWidthChanged
name|void
name|TestWidget
operator|::
name|onWidthChanged
parameter_list|(
name|int
name|width
parameter_list|)
block|{
name|elidedText
operator|->
name|setFixedWidth
argument_list|(
name|width
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|onHeightChanged
name|void
name|TestWidget
operator|::
name|onHeightChanged
parameter_list|(
name|int
name|height
parameter_list|)
block|{
name|elidedText
operator|->
name|setFixedHeight
argument_list|(
name|height
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [8]
end_comment
end_unit
