begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"iconpreviewarea.h"
end_include
begin_include
include|#
directive|include
file|"iconsizespinbox.h"
end_include
begin_include
include|#
directive|include
file|"imagedelegate.h"
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_comment
comment|//! [40]
end_comment
begin_enum
DECL|enumerator|OtherSize
enum|enum
block|{
name|OtherSize
init|=
name|QStyle
operator|::
name|PM_CustomBase
block|}
enum|;
end_enum
begin_comment
comment|//! [40]
end_comment
begin_comment
comment|//! [0]
end_comment
begin_constructor
DECL|function|MainWindow
name|MainWindow
operator|::
name|MainWindow
parameter_list|()
block|{
name|QWidget
modifier|*
name|centralWidget
init|=
operator|new
name|QWidget
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|setCentralWidget
argument_list|(
name|centralWidget
argument_list|)
expr_stmt|;
name|createActions
argument_list|()
expr_stmt|;
name|QGridLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QGridLayout
argument_list|(
name|centralWidget
argument_list|)
decl_stmt|;
name|QGroupBox
modifier|*
name|previewGroupBox
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Preview"
argument_list|)
argument_list|)
decl_stmt|;
name|previewArea
operator|=
operator|new
name|IconPreviewArea
argument_list|(
name|previewGroupBox
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|previewLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|previewGroupBox
argument_list|)
decl_stmt|;
name|previewLayout
operator|->
name|addWidget
argument_list|(
name|previewArea
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|previewGroupBox
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|createImagesGroupBox
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|vBox
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|vBox
operator|->
name|addWidget
argument_list|(
name|createIconSizeGroupBox
argument_list|()
argument_list|)
expr_stmt|;
name|vBox
operator|->
name|addWidget
argument_list|(
name|createHighDpiIconSizeGroupBox
argument_list|()
argument_list|)
expr_stmt|;
name|vBox
operator|->
name|addItem
argument_list|(
operator|new
name|QSpacerItem
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QSizePolicy
operator|::
name|Ignored
argument_list|,
name|QSizePolicy
operator|::
name|MinimumExpanding
argument_list|)
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addLayout
argument_list|(
name|vBox
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|createContextMenu
argument_list|()
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Icons"
argument_list|)
argument_list|)
expr_stmt|;
name|checkCurrentStyle
argument_list|()
expr_stmt|;
name|sizeButtonGroup
operator|->
name|button
argument_list|(
name|OtherSize
argument_list|)
operator|->
name|click
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [44]
end_comment
begin_function
DECL|function|show
name|void
name|MainWindow
operator|::
name|show
parameter_list|()
block|{
name|QMainWindow
operator|::
name|show
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|windowHandle
argument_list|()
argument_list|,
operator|&
name|QWindow
operator|::
name|screenChanged
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|screenChanged
argument_list|)
expr_stmt|;
name|screenChanged
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [44]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|about
name|void
name|MainWindow
operator|::
name|about
parameter_list|()
block|{
name|QMessageBox
operator|::
name|about
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"About Icons"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"The<b>Icons</b> example illustrates how Qt renders an icon in "
literal|"different modes (active, normal, disabled, and selected) and "
literal|"states (on and off) based on a set of images."
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|changeStyle
name|void
name|MainWindow
operator|::
name|changeStyle
parameter_list|(
name|bool
name|checked
parameter_list|)
block|{
if|if
condition|(
operator|!
name|checked
condition|)
return|return;
specifier|const
name|QAction
modifier|*
name|action
init|=
name|qobject_cast
argument_list|<
name|QAction
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
comment|//! [2] //! [3]
name|QStyle
modifier|*
name|style
init|=
name|QStyleFactory
operator|::
name|create
argument_list|(
name|action
operator|->
name|data
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
comment|//! [3] //! [4]
name|Q_ASSERT
argument_list|(
name|style
argument_list|)
expr_stmt|;
name|QApplication
operator|::
name|setStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
foreach|foreach
control|(
name|QAbstractButton
modifier|*
name|button
decl|,
name|sizeButtonGroup
operator|->
name|buttons
argument_list|()
control|)
block|{
specifier|const
name|QStyle
operator|::
name|PixelMetric
name|metric
init|=
cast|static_cast
argument_list|<
name|QStyle
operator|::
name|PixelMetric
argument_list|>
argument_list|(
name|sizeButtonGroup
operator|->
name|id
argument_list|(
name|button
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|int
name|value
init|=
name|style
operator|->
name|pixelMetric
argument_list|(
name|metric
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|metric
condition|)
block|{
case|case
name|QStyle
operator|::
name|PM_SmallIconSize
case|:
name|button
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Small (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_LargeIconSize
case|:
name|button
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Large (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ToolBarIconSize
case|:
name|button
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Toolbars (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_ListViewIconSize
case|:
name|button
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"List views (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_IconViewIconSize
case|:
name|button
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Icon views (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QStyle
operator|::
name|PM_TabBarIconSize
case|:
name|button
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Tab bars (%1 x %1)"
argument_list|)
operator|.
name|arg
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
block|}
name|triggerChangeSize
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_function
DECL|function|changeSize
name|void
name|MainWindow
operator|::
name|changeSize
parameter_list|(
name|int
name|id
parameter_list|,
name|bool
name|checked
parameter_list|)
block|{
if|if
condition|(
operator|!
name|checked
condition|)
return|return;
specifier|const
name|bool
name|other
init|=
name|id
operator|==
name|int
argument_list|(
name|OtherSize
argument_list|)
decl_stmt|;
specifier|const
name|int
name|extent
init|=
name|other
condition|?
name|otherSpinBox
operator|->
name|value
argument_list|()
else|:
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|pixelMetric
argument_list|(
cast|static_cast
argument_list|<
name|QStyle
operator|::
name|PixelMetric
argument_list|>
argument_list|(
name|id
argument_list|)
argument_list|)
decl_stmt|;
name|previewArea
operator|->
name|setSize
argument_list|(
name|QSize
argument_list|(
name|extent
argument_list|,
name|extent
argument_list|)
argument_list|)
expr_stmt|;
name|otherSpinBox
operator|->
name|setEnabled
argument_list|(
name|other
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|triggerChangeSize
name|void
name|MainWindow
operator|::
name|triggerChangeSize
parameter_list|()
block|{
name|changeSize
argument_list|(
name|sizeButtonGroup
operator|->
name|checkedId
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_function
DECL|function|changeIcon
name|void
name|MainWindow
operator|::
name|changeIcon
parameter_list|()
block|{
name|QIcon
name|icon
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
name|imagesTable
operator|->
name|rowCount
argument_list|()
condition|;
operator|++
name|row
control|)
block|{
specifier|const
name|QTableWidgetItem
modifier|*
name|fileItem
init|=
name|imagesTable
operator|->
name|item
argument_list|(
name|row
argument_list|,
literal|0
argument_list|)
decl_stmt|;
specifier|const
name|QTableWidgetItem
modifier|*
name|modeItem
init|=
name|imagesTable
operator|->
name|item
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|const
name|QTableWidgetItem
modifier|*
name|stateItem
init|=
name|imagesTable
operator|->
name|item
argument_list|(
name|row
argument_list|,
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|fileItem
operator|->
name|checkState
argument_list|()
operator|==
name|Qt
operator|::
name|Checked
condition|)
block|{
specifier|const
name|int
name|modeIndex
init|=
name|IconPreviewArea
operator|::
name|iconModeNames
argument_list|()
operator|.
name|indexOf
argument_list|(
name|modeItem
operator|->
name|text
argument_list|()
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|modeIndex
operator|>=
literal|0
argument_list|)
expr_stmt|;
specifier|const
name|int
name|stateIndex
init|=
name|IconPreviewArea
operator|::
name|iconStateNames
argument_list|()
operator|.
name|indexOf
argument_list|(
name|stateItem
operator|->
name|text
argument_list|()
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|stateIndex
operator|>=
literal|0
argument_list|)
expr_stmt|;
specifier|const
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|IconPreviewArea
operator|::
name|iconModes
argument_list|()
operator|.
name|at
argument_list|(
name|modeIndex
argument_list|)
decl_stmt|;
specifier|const
name|QIcon
operator|::
name|State
name|state
init|=
name|IconPreviewArea
operator|::
name|iconStates
argument_list|()
operator|.
name|at
argument_list|(
name|stateIndex
argument_list|)
decl_stmt|;
comment|//! [6]
comment|//! [8]
specifier|const
name|QString
name|fileName
init|=
name|fileItem
operator|->
name|data
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QImage
name|image
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|image
operator|.
name|isNull
argument_list|()
condition|)
name|icon
operator|.
name|addPixmap
argument_list|(
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
argument_list|,
name|mode
argument_list|,
name|state
argument_list|)
expr_stmt|;
comment|//! [8] //! [9]
block|}
comment|//! [9] //! [10]
block|}
comment|//! [10]
comment|//! [11]
name|previewArea
operator|->
name|setIcon
argument_list|(
name|icon
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [11]
end_comment
begin_function
DECL|function|addSampleImages
name|void
name|MainWindow
operator|::
name|addSampleImages
parameter_list|()
block|{
name|addImages
argument_list|(
name|QLatin1String
argument_list|(
name|SRCDIR
argument_list|)
operator|+
name|QLatin1String
argument_list|(
literal|"/images"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addOtherImages
name|void
name|MainWindow
operator|::
name|addOtherImages
parameter_list|()
block|{
specifier|static
name|bool
name|firstInvocation
init|=
literal|true
decl_stmt|;
name|QString
name|directory
decl_stmt|;
if|if
condition|(
name|firstInvocation
condition|)
block|{
name|firstInvocation
operator|=
literal|false
expr_stmt|;
name|directory
operator|=
name|QStandardPaths
operator|::
name|standardLocations
argument_list|(
name|QStandardPaths
operator|::
name|PicturesLocation
argument_list|)
operator|.
name|value
argument_list|(
literal|0
argument_list|,
name|QString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|addImages
argument_list|(
name|directory
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [12]
end_comment
begin_function
DECL|function|addImages
name|void
name|MainWindow
operator|::
name|addImages
parameter_list|(
specifier|const
name|QString
modifier|&
name|directory
parameter_list|)
block|{
name|QFileDialog
name|fileDialog
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Open Images"
argument_list|)
argument_list|,
name|directory
argument_list|)
decl_stmt|;
name|QStringList
name|mimeTypeFilters
decl_stmt|;
foreach|foreach
control|(
specifier|const
name|QByteArray
modifier|&
name|mimeTypeName
decl|,
name|QImageReader
operator|::
name|supportedMimeTypes
argument_list|()
control|)
name|mimeTypeFilters
operator|.
name|append
argument_list|(
name|mimeTypeName
argument_list|)
expr_stmt|;
name|mimeTypeFilters
operator|.
name|sort
argument_list|()
expr_stmt|;
name|fileDialog
operator|.
name|setMimeTypeFilters
argument_list|(
name|mimeTypeFilters
argument_list|)
expr_stmt|;
name|fileDialog
operator|.
name|selectMimeTypeFilter
argument_list|(
name|QLatin1String
argument_list|(
literal|"image/png"
argument_list|)
argument_list|)
expr_stmt|;
name|fileDialog
operator|.
name|setAcceptMode
argument_list|(
name|QFileDialog
operator|::
name|AcceptOpen
argument_list|)
expr_stmt|;
name|fileDialog
operator|.
name|setFileMode
argument_list|(
name|QFileDialog
operator|::
name|ExistingFiles
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|nativeFileDialogAct
operator|->
name|isChecked
argument_list|()
condition|)
name|fileDialog
operator|.
name|setOption
argument_list|(
name|QFileDialog
operator|::
name|DontUseNativeDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|fileDialog
operator|.
name|exec
argument_list|()
operator|==
name|QDialog
operator|::
name|Accepted
condition|)
name|loadImages
argument_list|(
name|fileDialog
operator|.
name|selectedFiles
argument_list|()
argument_list|)
expr_stmt|;
comment|//! [12]
block|}
end_function
begin_function
DECL|function|loadImages
name|void
name|MainWindow
operator|::
name|loadImages
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|fileNames
parameter_list|)
block|{
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|fileName
decl|,
name|fileNames
control|)
block|{
specifier|const
name|int
name|row
init|=
name|imagesTable
operator|->
name|rowCount
argument_list|()
decl_stmt|;
name|imagesTable
operator|->
name|setRowCount
argument_list|(
name|row
operator|+
literal|1
argument_list|)
expr_stmt|;
comment|//! [13]
specifier|const
name|QFileInfo
name|fileInfo
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|imageName
init|=
name|fileInfo
operator|.
name|baseName
argument_list|()
decl_stmt|;
specifier|const
name|QString
name|fileName2x
init|=
name|fileInfo
operator|.
name|absolutePath
argument_list|()
operator|+
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
operator|+
name|imageName
operator|+
name|QLatin1String
argument_list|(
literal|"@2x."
argument_list|)
operator|+
name|fileInfo
operator|.
name|suffix
argument_list|()
decl_stmt|;
specifier|const
name|QFileInfo
name|fileInfo2x
argument_list|(
name|fileName2x
argument_list|)
decl_stmt|;
specifier|const
name|QImage
name|image
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
specifier|const
name|QString
name|toolTip
init|=
name|tr
argument_list|(
literal|"Directory: %1\nFile: %2\nFile@2x: %3\nSize: %4x%5"
argument_list|)
operator|.
name|arg
argument_list|(
name|QDir
operator|::
name|toNativeSeparators
argument_list|(
name|fileInfo
operator|.
name|absolutePath
argument_list|()
argument_list|)
argument_list|,
name|fileInfo
operator|.
name|fileName
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|fileInfo2x
operator|.
name|exists
argument_list|()
condition|?
name|fileInfo2x
operator|.
name|fileName
argument_list|()
else|:
name|tr
argument_list|(
literal|"<None>"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|image
operator|.
name|width
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|image
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
comment|//! [13] //! [14]
name|QTableWidgetItem
modifier|*
name|fileItem
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|imageName
argument_list|)
decl_stmt|;
name|fileItem
operator|->
name|setData
argument_list|(
name|Qt
operator|::
name|UserRole
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
name|fileItem
operator|->
name|setIcon
argument_list|(
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|image
argument_list|)
argument_list|)
expr_stmt|;
name|fileItem
operator|->
name|setFlags
argument_list|(
operator|(
name|fileItem
operator|->
name|flags
argument_list|()
operator||
name|Qt
operator|::
name|ItemIsUserCheckable
operator|)
operator|&
operator|~
name|Qt
operator|::
name|ItemIsEditable
argument_list|)
expr_stmt|;
name|fileItem
operator|->
name|setToolTip
argument_list|(
name|toolTip
argument_list|)
expr_stmt|;
comment|//! [14]
comment|//! [15]
name|QIcon
operator|::
name|Mode
name|mode
init|=
name|QIcon
operator|::
name|Normal
decl_stmt|;
comment|//! [15] //! [16]
name|QIcon
operator|::
name|State
name|state
init|=
name|QIcon
operator|::
name|Off
decl_stmt|;
if|if
condition|(
name|guessModeStateAct
operator|->
name|isChecked
argument_list|()
condition|)
block|{
if|if
condition|(
name|imageName
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"_act"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Active
expr_stmt|;
elseif|else
if|if
condition|(
name|imageName
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"_dis"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Disabled
expr_stmt|;
elseif|else
if|if
condition|(
name|imageName
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"_sel"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
name|mode
operator|=
name|QIcon
operator|::
name|Selected
expr_stmt|;
if|if
condition|(
name|imageName
operator|.
name|contains
argument_list|(
name|QLatin1String
argument_list|(
literal|"_on"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
name|state
operator|=
name|QIcon
operator|::
name|On
expr_stmt|;
comment|//! [16] //! [17]
block|}
comment|//! [17]
comment|//! [18]
name|imagesTable
operator|->
name|setItem
argument_list|(
name|row
argument_list|,
literal|0
argument_list|,
name|fileItem
argument_list|)
expr_stmt|;
comment|//! [18] //! [19]
name|QTableWidgetItem
modifier|*
name|modeItem
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|IconPreviewArea
operator|::
name|iconModeNames
argument_list|()
operator|.
name|at
argument_list|(
name|IconPreviewArea
operator|::
name|iconModes
argument_list|()
operator|.
name|indexOf
argument_list|(
name|mode
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|modeItem
operator|->
name|setToolTip
argument_list|(
name|toolTip
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setItem
argument_list|(
name|row
argument_list|,
literal|1
argument_list|,
name|modeItem
argument_list|)
expr_stmt|;
name|QTableWidgetItem
modifier|*
name|stateItem
init|=
operator|new
name|QTableWidgetItem
argument_list|(
name|IconPreviewArea
operator|::
name|iconStateNames
argument_list|()
operator|.
name|at
argument_list|(
name|IconPreviewArea
operator|::
name|iconStates
argument_list|()
operator|.
name|indexOf
argument_list|(
name|state
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|stateItem
operator|->
name|setToolTip
argument_list|(
name|toolTip
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setItem
argument_list|(
name|row
argument_list|,
literal|2
argument_list|,
name|stateItem
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|openPersistentEditor
argument_list|(
name|modeItem
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|openPersistentEditor
argument_list|(
name|stateItem
argument_list|)
expr_stmt|;
name|fileItem
operator|->
name|setCheckState
argument_list|(
name|Qt
operator|::
name|Checked
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [19]
end_comment
begin_function
DECL|function|useHighDpiPixmapsChanged
name|void
name|MainWindow
operator|::
name|useHighDpiPixmapsChanged
parameter_list|(
name|int
name|checkState
parameter_list|)
block|{
name|QCoreApplication
operator|::
name|setAttribute
argument_list|(
name|Qt
operator|::
name|AA_UseHighDpiPixmaps
argument_list|,
name|checkState
operator|==
name|Qt
operator|::
name|Checked
argument_list|)
expr_stmt|;
name|changeIcon
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [20]
end_comment
begin_function
DECL|function|removeAllImages
name|void
name|MainWindow
operator|::
name|removeAllImages
parameter_list|()
block|{
name|imagesTable
operator|->
name|setRowCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|changeIcon
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [20]
end_comment
begin_comment
comment|//! [21]
end_comment
begin_function
DECL|function|createImagesGroupBox
name|QWidget
modifier|*
name|MainWindow
operator|::
name|createImagesGroupBox
parameter_list|()
block|{
name|QGroupBox
modifier|*
name|imagesGroupBox
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Images"
argument_list|)
argument_list|)
decl_stmt|;
name|imagesTable
operator|=
operator|new
name|QTableWidget
expr_stmt|;
name|imagesTable
operator|->
name|setSelectionMode
argument_list|(
name|QAbstractItemView
operator|::
name|NoSelection
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setItemDelegate
argument_list|(
operator|new
name|ImageDelegate
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [21]
comment|//! [22]
name|QStringList
name|labels
decl_stmt|;
comment|//! [22] //! [23]
name|labels
operator|<<
name|tr
argument_list|(
literal|"Image"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Mode"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"State"
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setDefaultSectionSize
argument_list|(
literal|90
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setColumnCount
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|setHorizontalHeaderLabels
argument_list|(
name|labels
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setSectionResizeMode
argument_list|(
literal|0
argument_list|,
name|QHeaderView
operator|::
name|Stretch
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setSectionResizeMode
argument_list|(
literal|1
argument_list|,
name|QHeaderView
operator|::
name|Fixed
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|horizontalHeader
argument_list|()
operator|->
name|setSectionResizeMode
argument_list|(
literal|2
argument_list|,
name|QHeaderView
operator|::
name|Fixed
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|verticalHeader
argument_list|()
operator|->
name|hide
argument_list|()
expr_stmt|;
comment|//! [23]
comment|//! [24]
name|connect
argument_list|(
name|imagesTable
argument_list|,
operator|&
name|QTableWidget
operator|::
name|itemChanged
argument_list|,
comment|//! [24] //! [25]
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|changeIcon
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|layout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|imagesGroupBox
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|imagesTable
argument_list|)
expr_stmt|;
return|return
name|imagesGroupBox
return|;
block|}
end_function
begin_comment
comment|//! [25]
end_comment
begin_comment
comment|//! [26]
end_comment
begin_function
DECL|function|createIconSizeGroupBox
name|QWidget
modifier|*
name|MainWindow
operator|::
name|createIconSizeGroupBox
parameter_list|()
block|{
name|QGroupBox
modifier|*
name|iconSizeGroupBox
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"Icon Size"
argument_list|)
argument_list|)
decl_stmt|;
name|sizeButtonGroup
operator|=
operator|new
name|QButtonGroup
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|sizeButtonGroup
operator|->
name|setExclusive
argument_list|(
literal|true
argument_list|)
expr_stmt|;
typedef|typedef
name|void
function_decl|(
name|QButtonGroup
operator|::
modifier|*
name|QButtonGroupIntBoolSignal
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|connect
argument_list|(
name|sizeButtonGroup
argument_list|,
cast|static_cast
argument_list|<
name|QButtonGroupIntBoolSignal
argument_list|>
argument_list|(
operator|&
name|QButtonGroup
operator|::
name|buttonToggled
argument_list|)
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|changeSize
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|smallRadioButton
init|=
operator|new
name|QRadioButton
decl_stmt|;
name|sizeButtonGroup
operator|->
name|addButton
argument_list|(
name|smallRadioButton
argument_list|,
name|QStyle
operator|::
name|PM_SmallIconSize
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|largeRadioButton
init|=
operator|new
name|QRadioButton
decl_stmt|;
name|sizeButtonGroup
operator|->
name|addButton
argument_list|(
name|largeRadioButton
argument_list|,
name|QStyle
operator|::
name|PM_LargeIconSize
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|toolBarRadioButton
init|=
operator|new
name|QRadioButton
decl_stmt|;
name|sizeButtonGroup
operator|->
name|addButton
argument_list|(
name|toolBarRadioButton
argument_list|,
name|QStyle
operator|::
name|PM_ToolBarIconSize
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|listViewRadioButton
init|=
operator|new
name|QRadioButton
decl_stmt|;
name|sizeButtonGroup
operator|->
name|addButton
argument_list|(
name|listViewRadioButton
argument_list|,
name|QStyle
operator|::
name|PM_ListViewIconSize
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|iconViewRadioButton
init|=
operator|new
name|QRadioButton
decl_stmt|;
name|sizeButtonGroup
operator|->
name|addButton
argument_list|(
name|iconViewRadioButton
argument_list|,
name|QStyle
operator|::
name|PM_IconViewIconSize
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|tabBarRadioButton
init|=
operator|new
name|QRadioButton
decl_stmt|;
name|sizeButtonGroup
operator|->
name|addButton
argument_list|(
name|tabBarRadioButton
argument_list|,
name|QStyle
operator|::
name|PM_TabBarIconSize
argument_list|)
expr_stmt|;
name|QRadioButton
modifier|*
name|otherRadioButton
init|=
operator|new
name|QRadioButton
argument_list|(
name|tr
argument_list|(
literal|"Other:"
argument_list|)
argument_list|)
decl_stmt|;
name|sizeButtonGroup
operator|->
name|addButton
argument_list|(
name|otherRadioButton
argument_list|,
name|OtherSize
argument_list|)
expr_stmt|;
name|otherSpinBox
operator|=
operator|new
name|IconSizeSpinBox
expr_stmt|;
name|otherSpinBox
operator|->
name|setRange
argument_list|(
literal|8
argument_list|,
literal|256
argument_list|)
expr_stmt|;
specifier|const
name|QString
name|spinBoxToolTip
init|=
name|tr
argument_list|(
literal|"Enter a custom size within %1..%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|otherSpinBox
operator|->
name|minimum
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|otherSpinBox
operator|->
name|maximum
argument_list|()
argument_list|)
decl_stmt|;
name|otherSpinBox
operator|->
name|setValue
argument_list|(
literal|64
argument_list|)
expr_stmt|;
name|otherSpinBox
operator|->
name|setToolTip
argument_list|(
name|spinBoxToolTip
argument_list|)
expr_stmt|;
name|otherRadioButton
operator|->
name|setToolTip
argument_list|(
name|spinBoxToolTip
argument_list|)
expr_stmt|;
comment|//! [26]
comment|//! [27]
typedef|typedef
name|void
function_decl|(
name|QSpinBox
operator|::
modifier|*
name|QSpinBoxIntSignal
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|connect
argument_list|(
name|otherSpinBox
argument_list|,
cast|static_cast
argument_list|<
name|QSpinBoxIntSignal
argument_list|>
argument_list|(
operator|&
name|QSpinBox
operator|::
name|valueChanged
argument_list|)
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|triggerChangeSize
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|otherSizeLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|otherSizeLayout
operator|->
name|addWidget
argument_list|(
name|otherRadioButton
argument_list|)
expr_stmt|;
name|otherSizeLayout
operator|->
name|addWidget
argument_list|(
name|otherSpinBox
argument_list|)
expr_stmt|;
name|otherSizeLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|QGridLayout
modifier|*
name|layout
init|=
operator|new
name|QGridLayout
argument_list|(
name|iconSizeGroupBox
argument_list|)
decl_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|smallRadioButton
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|largeRadioButton
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|toolBarRadioButton
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|listViewRadioButton
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|iconViewRadioButton
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addWidget
argument_list|(
name|tabBarRadioButton
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addLayout
argument_list|(
name|otherSizeLayout
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|layout
operator|->
name|setRowStretch
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|)
expr_stmt|;
return|return
name|iconSizeGroupBox
return|;
block|}
end_function
begin_comment
comment|//! [27]
end_comment
begin_function
DECL|function|screenChanged
name|void
name|MainWindow
operator|::
name|screenChanged
parameter_list|()
block|{
name|devicePixelRatioLabel
operator|->
name|setText
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|devicePixelRatioF
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
specifier|const
name|QWindow
modifier|*
name|window
init|=
name|windowHandle
argument_list|()
condition|)
block|{
specifier|const
name|QScreen
modifier|*
name|screen
init|=
name|window
operator|->
name|screen
argument_list|()
decl_stmt|;
specifier|const
name|QString
name|screenDescription
init|=
name|tr
argument_list|(
literal|"\"%1\" (%2x%3)"
argument_list|)
operator|.
name|arg
argument_list|(
name|screen
operator|->
name|name
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|screen
operator|->
name|geometry
argument_list|()
operator|.
name|width
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|screen
operator|->
name|geometry
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|screenNameLabel
operator|->
name|setText
argument_list|(
name|screenDescription
argument_list|)
expr_stmt|;
block|}
name|changeIcon
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createHighDpiIconSizeGroupBox
name|QWidget
modifier|*
name|MainWindow
operator|::
name|createHighDpiIconSizeGroupBox
parameter_list|()
block|{
name|QGroupBox
modifier|*
name|highDpiGroupBox
init|=
operator|new
name|QGroupBox
argument_list|(
name|tr
argument_list|(
literal|"High DPI Scaling"
argument_list|)
argument_list|)
decl_stmt|;
name|QFormLayout
modifier|*
name|layout
init|=
operator|new
name|QFormLayout
argument_list|(
name|highDpiGroupBox
argument_list|)
decl_stmt|;
name|devicePixelRatioLabel
operator|=
operator|new
name|QLabel
argument_list|(
name|highDpiGroupBox
argument_list|)
expr_stmt|;
name|screenNameLabel
operator|=
operator|new
name|QLabel
argument_list|(
name|highDpiGroupBox
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addRow
argument_list|(
name|tr
argument_list|(
literal|"Screen:"
argument_list|)
argument_list|,
name|screenNameLabel
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addRow
argument_list|(
name|tr
argument_list|(
literal|"Device pixel ratio:"
argument_list|)
argument_list|,
name|devicePixelRatioLabel
argument_list|)
expr_stmt|;
name|QCheckBox
modifier|*
name|highDpiPixmapsCheckBox
init|=
operator|new
name|QCheckBox
argument_list|(
name|QLatin1String
argument_list|(
literal|"Qt::AA_UseHighDpiPixmaps"
argument_list|)
argument_list|)
decl_stmt|;
name|highDpiPixmapsCheckBox
operator|->
name|setChecked
argument_list|(
name|QCoreApplication
operator|::
name|testAttribute
argument_list|(
name|Qt
operator|::
name|AA_UseHighDpiPixmaps
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|highDpiPixmapsCheckBox
argument_list|,
operator|&
name|QCheckBox
operator|::
name|stateChanged
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|useHighDpiPixmapsChanged
argument_list|)
expr_stmt|;
name|layout
operator|->
name|addRow
argument_list|(
name|highDpiPixmapsCheckBox
argument_list|)
expr_stmt|;
return|return
name|highDpiGroupBox
return|;
block|}
end_function
begin_comment
comment|//! [28]
end_comment
begin_function
DECL|function|createActions
name|void
name|MainWindow
operator|::
name|createActions
parameter_list|()
block|{
name|QMenu
modifier|*
name|fileMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
decl_stmt|;
name|addSampleImagesAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"Add&Sample Images..."
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addSampleImagesAct
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+A"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|addSampleImagesAct
argument_list|,
operator|&
name|QAction
operator|::
name|triggered
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|addSampleImages
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|addSampleImagesAct
argument_list|)
expr_stmt|;
name|addOtherImagesAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Add Images..."
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addOtherImagesAct
operator|->
name|setShortcut
argument_list|(
name|QKeySequence
operator|::
name|Open
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|addOtherImagesAct
argument_list|,
operator|&
name|QAction
operator|::
name|triggered
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|addOtherImages
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|addOtherImagesAct
argument_list|)
expr_stmt|;
name|removeAllImagesAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Remove All Images"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|removeAllImagesAct
operator|->
name|setShortcut
argument_list|(
name|tr
argument_list|(
literal|"Ctrl+R"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|removeAllImagesAct
argument_list|,
operator|&
name|QAction
operator|::
name|triggered
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|removeAllImages
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|removeAllImagesAct
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|QAction
modifier|*
name|exitAct
init|=
name|fileMenu
operator|->
name|addAction
argument_list|(
name|tr
argument_list|(
literal|"&Quit"
argument_list|)
argument_list|,
name|this
argument_list|,
operator|&
name|QWidget
operator|::
name|close
argument_list|)
decl_stmt|;
name|exitAct
operator|->
name|setShortcuts
argument_list|(
name|QKeySequence
operator|::
name|Quit
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|viewMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&View"
argument_list|)
argument_list|)
decl_stmt|;
name|styleActionGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|this
argument_list|)
expr_stmt|;
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|styleName
decl|,
name|QStyleFactory
operator|::
name|keys
argument_list|()
control|)
block|{
name|QAction
modifier|*
name|action
init|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"%1 Style"
argument_list|)
operator|.
name|arg
argument_list|(
name|styleName
argument_list|)
argument_list|,
name|styleActionGroup
argument_list|)
decl_stmt|;
name|action
operator|->
name|setData
argument_list|(
name|styleName
argument_list|)
expr_stmt|;
name|action
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|action
argument_list|,
operator|&
name|QAction
operator|::
name|triggered
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|changeStyle
argument_list|)
expr_stmt|;
name|viewMenu
operator|->
name|addAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
name|QMenu
modifier|*
name|settingsMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Settings"
argument_list|)
argument_list|)
decl_stmt|;
name|guessModeStateAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Guess Image Mode/State"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|guessModeStateAct
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|guessModeStateAct
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|settingsMenu
operator|->
name|addAction
argument_list|(
name|guessModeStateAct
argument_list|)
expr_stmt|;
name|nativeFileDialogAct
operator|=
operator|new
name|QAction
argument_list|(
name|tr
argument_list|(
literal|"&Use Native File Dialog"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|nativeFileDialogAct
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|nativeFileDialogAct
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|settingsMenu
operator|->
name|addAction
argument_list|(
name|nativeFileDialogAct
argument_list|)
expr_stmt|;
name|QMenu
modifier|*
name|helpMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Help"
argument_list|)
argument_list|)
decl_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|tr
argument_list|(
literal|"&About"
argument_list|)
argument_list|,
name|this
argument_list|,
operator|&
name|MainWindow
operator|::
name|about
argument_list|)
expr_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|tr
argument_list|(
literal|"About&Qt"
argument_list|)
argument_list|,
name|qApp
argument_list|,
operator|&
name|QApplication
operator|::
name|aboutQt
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [28]
end_comment
begin_comment
comment|//! [30]
end_comment
begin_function
DECL|function|createContextMenu
name|void
name|MainWindow
operator|::
name|createContextMenu
parameter_list|()
block|{
name|imagesTable
operator|->
name|setContextMenuPolicy
argument_list|(
name|Qt
operator|::
name|ActionsContextMenu
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|addAction
argument_list|(
name|addSampleImagesAct
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|addAction
argument_list|(
name|addOtherImagesAct
argument_list|)
expr_stmt|;
name|imagesTable
operator|->
name|addAction
argument_list|(
name|removeAllImagesAct
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [30]
end_comment
begin_comment
comment|//! [31]
end_comment
begin_function
DECL|function|checkCurrentStyle
name|void
name|MainWindow
operator|::
name|checkCurrentStyle
parameter_list|()
block|{
foreach|foreach
control|(
name|QAction
modifier|*
name|action
decl|,
name|styleActionGroup
operator|->
name|actions
argument_list|()
control|)
block|{
name|QString
name|styleName
init|=
name|action
operator|->
name|data
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QScopedPointer
argument_list|<
name|QStyle
argument_list|>
name|candidate
argument_list|(
name|QStyleFactory
operator|::
name|create
argument_list|(
name|styleName
argument_list|)
argument_list|)
decl_stmt|;
name|Q_ASSERT
argument_list|(
operator|!
name|candidate
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|candidate
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
operator|==
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|metaObject
argument_list|()
operator|->
name|className
argument_list|()
condition|)
block|{
name|action
operator|->
name|trigger
argument_list|()
expr_stmt|;
return|return;
block|}
block|}
block|}
end_function
begin_comment
comment|//! [31]
end_comment
end_unit
