begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"imagescaling.h"
end_include
begin_include
include|#
directive|include
file|"math.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_CONCURRENT
end_ifndef
begin_decl_stmt
DECL|variable|imageSize
specifier|const
name|int
name|imageSize
init|=
literal|100
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|scale
name|QImage
name|scale
parameter_list|(
specifier|const
name|QString
modifier|&
name|imageFileName
parameter_list|)
block|{
name|QImage
name|image
argument_list|(
name|imageFileName
argument_list|)
decl_stmt|;
return|return
name|image
operator|.
name|scaled
argument_list|(
name|QSize
argument_list|(
name|imageSize
argument_list|,
name|imageSize
argument_list|)
argument_list|,
name|Qt
operator|::
name|IgnoreAspectRatio
argument_list|,
name|Qt
operator|::
name|SmoothTransformation
argument_list|)
return|;
block|}
end_function
begin_constructor
DECL|function|Images
name|Images
operator|::
name|Images
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
block|{
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Image loading and scaling example"
argument_list|)
argument_list|)
expr_stmt|;
name|resize
argument_list|(
literal|800
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|imageScaling
operator|=
operator|new
name|QFutureWatcher
argument_list|<
name|QImage
argument_list|>
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|imageScaling
argument_list|,
name|SIGNAL
argument_list|(
name|resultReadyAt
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|showImage
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|imageScaling
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|finished
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|openButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Open Images"
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|openButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|open
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|cancelButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
name|cancelButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|cancelButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|imageScaling
argument_list|,
name|SLOT
argument_list|(
name|cancel
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|pauseButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|tr
argument_list|(
literal|"Pause/Resume"
argument_list|)
argument_list|)
expr_stmt|;
name|pauseButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|pauseButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|imageScaling
argument_list|,
name|SLOT
argument_list|(
name|togglePaused
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|buttonLayout
init|=
operator|new
name|QHBoxLayout
argument_list|()
decl_stmt|;
name|buttonLayout
operator|->
name|addWidget
argument_list|(
name|openButton
argument_list|)
expr_stmt|;
name|buttonLayout
operator|->
name|addWidget
argument_list|(
name|cancelButton
argument_list|)
expr_stmt|;
name|buttonLayout
operator|->
name|addWidget
argument_list|(
name|pauseButton
argument_list|)
expr_stmt|;
name|buttonLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|imagesLayout
operator|=
operator|new
name|QGridLayout
argument_list|()
expr_stmt|;
name|mainLayout
operator|=
operator|new
name|QVBoxLayout
argument_list|()
expr_stmt|;
name|mainLayout
operator|->
name|addLayout
argument_list|(
name|buttonLayout
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addLayout
argument_list|(
name|imagesLayout
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|setLayout
argument_list|(
name|mainLayout
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~Images
name|Images
operator|::
name|~
name|Images
parameter_list|()
block|{
name|imageScaling
operator|->
name|cancel
argument_list|()
expr_stmt|;
name|imageScaling
operator|->
name|waitForFinished
argument_list|()
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|open
name|void
name|Images
operator|::
name|open
parameter_list|()
block|{
comment|// Cancel and wait if we are already loading images.
if|if
condition|(
name|imageScaling
operator|->
name|isRunning
argument_list|()
condition|)
block|{
name|imageScaling
operator|->
name|cancel
argument_list|()
expr_stmt|;
name|imageScaling
operator|->
name|waitForFinished
argument_list|()
expr_stmt|;
block|}
comment|// Show a file open dialog at QDesktopServices::PicturesLocation.
name|QStringList
name|files
init|=
name|QFileDialog
operator|::
name|getOpenFileNames
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Select Images"
argument_list|)
argument_list|,
name|QDesktopServices
operator|::
name|storageLocation
argument_list|(
name|QDesktopServices
operator|::
name|PicturesLocation
argument_list|)
argument_list|,
literal|"*.jpg *.png"
argument_list|)
decl_stmt|;
if|if
condition|(
name|files
operator|.
name|count
argument_list|()
operator|==
literal|0
condition|)
return|return;
comment|// Do a simple layout.
name|qDeleteAll
argument_list|(
name|labels
argument_list|)
expr_stmt|;
name|labels
operator|.
name|clear
argument_list|()
expr_stmt|;
name|int
name|dim
init|=
name|sqrt
argument_list|(
name|qreal
argument_list|(
name|files
operator|.
name|count
argument_list|()
argument_list|)
argument_list|)
operator|+
literal|1
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dim
condition|;
operator|++
name|i
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|dim
condition|;
operator|++
name|j
control|)
block|{
name|QLabel
modifier|*
name|imageLabel
init|=
operator|new
name|QLabel
decl_stmt|;
name|imageLabel
operator|->
name|setFixedSize
argument_list|(
name|imageSize
argument_list|,
name|imageSize
argument_list|)
expr_stmt|;
name|imagesLayout
operator|->
name|addWidget
argument_list|(
name|imageLabel
argument_list|,
name|i
argument_list|,
name|j
argument_list|)
expr_stmt|;
name|labels
operator|.
name|append
argument_list|(
name|imageLabel
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Use mapped to run the thread safe scale function on the files.
name|imageScaling
operator|->
name|setFuture
argument_list|(
name|QtConcurrent
operator|::
name|mapped
argument_list|(
name|files
argument_list|,
name|scale
argument_list|)
argument_list|)
expr_stmt|;
name|openButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cancelButton
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pauseButton
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showImage
name|void
name|Images
operator|::
name|showImage
parameter_list|(
name|int
name|num
parameter_list|)
block|{
name|labels
index|[
name|num
index|]
operator|->
name|setPixmap
argument_list|(
name|QPixmap
operator|::
name|fromImage
argument_list|(
name|imageScaling
operator|->
name|resultAt
argument_list|(
name|num
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|finished
name|void
name|Images
operator|::
name|finished
parameter_list|()
block|{
name|openButton
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cancelButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pauseButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_CONCURRENT
end_comment
end_unit
