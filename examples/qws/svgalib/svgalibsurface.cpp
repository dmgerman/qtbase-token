begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"svgalibsurface.h"
end_include
begin_include
include|#
directive|include
file|"svgalibpaintdevice.h"
end_include
begin_include
include|#
directive|include
file|<vgagl.h>
end_include
begin_constructor
DECL|function|SvgalibSurface
name|SvgalibSurface
operator|::
name|SvgalibSurface
parameter_list|()
member_init_list|:
name|QWSWindowSurface
argument_list|()
member_init_list|,
name|pdevice
argument_list|(
literal|0
argument_list|)
block|{
name|setSurfaceFlags
argument_list|(
name|Opaque
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_constructor
DECL|function|SvgalibSurface
name|SvgalibSurface
operator|::
name|SvgalibSurface
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
member_init_list|:
name|QWSWindowSurface
argument_list|(
name|w
argument_list|)
block|{
name|setSurfaceFlags
argument_list|(
name|Opaque
argument_list|)
expr_stmt|;
name|pdevice
operator|=
operator|new
name|SvgalibPaintDevice
argument_list|(
name|w
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~SvgalibSurface
name|SvgalibSurface
operator|::
name|~
name|SvgalibSurface
parameter_list|()
block|{
operator|delete
name|pdevice
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|setGeometry
name|void
name|SvgalibSurface
operator|::
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
block|{
name|QWSWindowSurface
operator|::
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|painterOffset
name|QPoint
name|SvgalibSurface
operator|::
name|painterOffset
parameter_list|()
specifier|const
block|{
return|return
name|geometry
argument_list|()
operator|.
name|topLeft
argument_list|()
operator|+
name|QWSWindowSurface
operator|::
name|painterOffset
argument_list|()
return|;
block|}
end_function
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|scroll
name|bool
name|SvgalibSurface
operator|::
name|scroll
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|)
block|{
specifier|const
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
init|=
name|region
operator|.
name|rects
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rects
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|QRect
name|r
init|=
name|rects
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|gl_copybox
argument_list|(
name|r
operator|.
name|left
argument_list|()
argument_list|,
name|r
operator|.
name|top
argument_list|()
argument_list|,
name|r
operator|.
name|width
argument_list|()
argument_list|,
name|r
operator|.
name|height
argument_list|()
argument_list|,
name|r
operator|.
name|left
argument_list|()
operator|+
name|dx
argument_list|,
name|r
operator|.
name|top
argument_list|()
operator|+
name|dy
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
end_function
begin_comment
comment|//! [0]
end_comment
end_unit
