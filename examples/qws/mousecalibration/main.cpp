begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QMessageBox>
end_include
begin_include
include|#
directive|include
file|<QTimer>
end_include
begin_include
include|#
directive|include
file|<QWSServer>
end_include
begin_include
include|#
directive|include
file|"calibration.h"
end_include
begin_include
include|#
directive|include
file|"scribblewidget.h"
end_include
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
modifier|*
name|argv
parameter_list|)
block|{
name|QApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|,
name|QApplication
operator|::
name|GuiServer
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|QWSServer
operator|::
name|mouseHandler
argument_list|()
condition|)
name|qFatal
argument_list|(
literal|"No mouse handler installed"
argument_list|)
expr_stmt|;
block|{
name|QMessageBox
name|message
decl_stmt|;
name|message
operator|.
name|setText
argument_list|(
literal|"<p>Please press once at each of the marks "
literal|"shown in the next screen.</p>"
literal|"<p>This messagebox will timout after 10 seconds "
literal|"if you are unable to close it.</p>"
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|10
operator|*
literal|1000
argument_list|,
operator|&
name|message
argument_list|,
name|SLOT
argument_list|(
name|accept
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
comment|//! [0] //! [1]
name|Calibration
name|cal
decl_stmt|;
name|cal
operator|.
name|exec
argument_list|()
expr_stmt|;
comment|//! [1]
comment|//! [2]
block|{
name|QMessageBox
name|message
decl_stmt|;
name|message
operator|.
name|setText
argument_list|(
literal|"<p>The next screen will let you test the calibration "
literal|"by drawing into a widget.</p><p>This program will "
literal|"automatically close after 20 seconds.<p>"
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|10
operator|*
literal|1000
argument_list|,
operator|&
name|message
argument_list|,
name|SLOT
argument_list|(
name|accept
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|message
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
name|ScribbleWidget
name|scribble
decl_stmt|;
name|scribble
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
name|scribble
operator|.
name|show
argument_list|()
expr_stmt|;
name|app
operator|.
name|setActiveWindow
argument_list|(
operator|&
name|scribble
argument_list|)
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|20
operator|*
literal|1000
argument_list|,
operator|&
name|app
argument_list|,
name|SLOT
argument_list|(
name|quit
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
begin_comment
comment|//! [2]
end_comment
end_unit
