begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"dbscreen.h"
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|initDevice
name|bool
name|DBScreen
operator|::
name|initDevice
parameter_list|()
block|{
if|if
condition|(
operator|!
name|QLinuxFbScreen
operator|::
name|initDevice
argument_list|()
condition|)
return|return
literal|false
return|;
name|QScreenCursor
operator|::
name|initSoftwareCursor
argument_list|()
expr_stmt|;
name|image
operator|=
operator|new
name|QImage
argument_list|(
name|deviceWidth
argument_list|()
argument_list|,
name|deviceHeight
argument_list|()
argument_list|,
name|pixelFormat
argument_list|()
argument_list|)
expr_stmt|;
name|painter
operator|=
operator|new
name|QPainter
argument_list|(
name|image
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|shutdownDevice
name|void
name|DBScreen
operator|::
name|shutdownDevice
parameter_list|()
block|{
name|QLinuxFbScreen
operator|::
name|shutdownDevice
argument_list|()
expr_stmt|;
operator|delete
name|painter
expr_stmt|;
operator|delete
name|image
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|solidFill
name|void
name|DBScreen
operator|::
name|solidFill
parameter_list|(
specifier|const
name|QColor
modifier|&
name|color
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|)
block|{
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
init|=
name|region
operator|.
name|rects
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rects
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|painter
operator|->
name|fillRect
argument_list|(
name|rects
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_function
DECL|function|blit
name|void
name|DBScreen
operator|::
name|blit
parameter_list|(
specifier|const
name|QImage
modifier|&
name|image
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|topLeft
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|)
block|{
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
init|=
name|region
operator|.
name|rects
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rects
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|QRect
name|destRect
init|=
name|rects
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|QRect
name|srcRect
argument_list|(
name|destRect
operator|.
name|x
argument_list|()
operator|-
name|topLeft
operator|.
name|x
argument_list|()
argument_list|,
name|destRect
operator|.
name|y
argument_list|()
operator|-
name|topLeft
operator|.
name|y
argument_list|()
argument_list|,
name|destRect
operator|.
name|width
argument_list|()
argument_list|,
name|destRect
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawImage
argument_list|(
name|destRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|image
argument_list|,
name|srcRect
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_function
DECL|function|exposeRegion
name|void
name|DBScreen
operator|::
name|exposeRegion
parameter_list|(
name|QRegion
name|region
parameter_list|,
name|int
name|changing
parameter_list|)
block|{
name|QLinuxFbScreen
operator|::
name|exposeRegion
argument_list|(
name|region
argument_list|,
name|changing
argument_list|)
expr_stmt|;
name|QLinuxFbScreen
operator|::
name|blit
argument_list|(
operator|*
name|image
argument_list|,
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|region
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
end_unit
