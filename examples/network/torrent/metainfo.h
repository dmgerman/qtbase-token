begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|METAINFO_H
end_ifndef
begin_define
DECL|macro|METAINFO_H
define|#
directive|define
name|METAINFO_H
end_define
begin_include
include|#
directive|include
file|<QByteArray>
end_include
begin_include
include|#
directive|include
file|<QDateTime>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|<QMap>
end_include
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_include
include|#
directive|include
file|<QVariant>
end_include
begin_struct
DECL|struct|MetaInfoSingleFile
struct|struct
name|MetaInfoSingleFile
block|{
DECL|member|length
name|qint64
name|length
decl_stmt|;
DECL|member|md5sum
name|QByteArray
name|md5sum
decl_stmt|;
DECL|member|name
name|QString
name|name
decl_stmt|;
DECL|member|pieceLength
name|int
name|pieceLength
decl_stmt|;
DECL|member|sha1Sums
name|QList
operator|<
name|QByteArray
operator|>
name|sha1Sums
expr_stmt|;
block|}
struct|;
end_struct
begin_struct
DECL|struct|MetaInfoMultiFile
struct|struct
name|MetaInfoMultiFile
block|{
DECL|member|length
name|qint64
name|length
decl_stmt|;
DECL|member|md5sum
name|QByteArray
name|md5sum
decl_stmt|;
DECL|member|path
name|QString
name|path
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
name|class
name|MetaInfo
block|{
name|public
label|:
enum|enum
name|FileForm
block|{
name|SingleFileForm
block|,
name|MultiFileForm
block|}
enum|;
name|MetaInfo
argument_list|()
expr_stmt|;
name|void
name|clear
parameter_list|()
function_decl|;
name|bool
name|parse
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|data
parameter_list|)
function_decl|;
name|QString
name|errorString
argument_list|()
specifier|const
expr_stmt|;
name|QByteArray
name|infoValue
argument_list|()
specifier|const
expr_stmt|;
name|FileForm
name|fileForm
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|announceUrl
argument_list|()
specifier|const
expr_stmt|;
name|QStringList
name|announceList
argument_list|()
specifier|const
expr_stmt|;
name|QDateTime
name|creationDate
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|comment
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|createdBy
argument_list|()
specifier|const
expr_stmt|;
comment|// For single file form
name|MetaInfoSingleFile
name|singleFile
argument_list|()
specifier|const
expr_stmt|;
comment|// For multifile form
name|QList
operator|<
name|MetaInfoMultiFile
operator|>
name|multiFiles
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|name
argument_list|()
specifier|const
expr_stmt|;
name|int
name|pieceLength
argument_list|()
specifier|const
expr_stmt|;
name|QList
operator|<
name|QByteArray
operator|>
name|sha1Sums
argument_list|()
specifier|const
expr_stmt|;
comment|// Total size
name|qint64
name|totalSize
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|QString
name|errString
decl_stmt|;
name|QByteArray
name|content
decl_stmt|;
name|QByteArray
name|infoData
decl_stmt|;
name|FileForm
name|metaInfoFileForm
decl_stmt|;
name|MetaInfoSingleFile
name|metaInfoSingleFile
decl_stmt|;
name|QList
operator|<
name|MetaInfoMultiFile
operator|>
name|metaInfoMultiFiles
expr_stmt|;
name|QString
name|metaInfoAnnounce
decl_stmt|;
name|QStringList
name|metaInfoAnnounceList
decl_stmt|;
name|QDateTime
name|metaInfoCreationDate
decl_stmt|;
name|QString
name|metaInfoComment
decl_stmt|;
name|QString
name|metaInfoCreatedBy
decl_stmt|;
name|QString
name|metaInfoName
decl_stmt|;
name|int
name|metaInfoPieceLength
decl_stmt|;
name|QList
operator|<
name|QByteArray
operator|>
name|metaInfoSha1Sums
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
