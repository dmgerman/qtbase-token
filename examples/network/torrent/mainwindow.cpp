begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtWidgets>
end_include
begin_include
include|#
directive|include
file|"addtorrentdialog.h"
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_include
include|#
directive|include
file|"ratecontroller.h"
end_include
begin_include
include|#
directive|include
file|"torrentclient.h"
end_include
begin_comment
comment|// TorrentView extends QTreeWidget to allow drag and drop.
end_comment
begin_class
DECL|class|TorrentView
class|class
name|TorrentView
super|:
specifier|public
name|QTreeWidget
block|{
name|Q_OBJECT
public|public:
name|TorrentView
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
constructor_decl|;
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
signals|signals:
name|void
name|fileDropped
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|)
function_decl|;
protected|protected:
name|void
name|dragMoveEvent
parameter_list|(
name|QDragMoveEvent
modifier|*
name|event
parameter_list|)
function_decl|;
name|void
name|dropEvent
parameter_list|(
name|QDropEvent
modifier|*
name|event
parameter_list|)
function_decl|;
endif|#
directive|endif
block|}
class|;
end_class
begin_comment
comment|// TorrentViewDelegate is used to draw the progress bars.
end_comment
begin_class
DECL|class|TorrentViewDelegate
class|class
name|TorrentViewDelegate
super|:
specifier|public
name|QItemDelegate
block|{
name|Q_OBJECT
public|public:
DECL|function|TorrentViewDelegate
specifier|inline
name|TorrentViewDelegate
parameter_list|(
name|MainWindow
modifier|*
name|mainWindow
parameter_list|)
member_init_list|:
name|QItemDelegate
argument_list|(
name|mainWindow
argument_list|)
block|{}
DECL|function|paint
specifier|inline
name|void
name|paint
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QStyleOptionViewItem
modifier|&
name|option
parameter_list|,
specifier|const
name|QModelIndex
modifier|&
name|index
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|index
operator|.
name|column
argument_list|()
operator|!=
literal|2
condition|)
block|{
name|QItemDelegate
operator|::
name|paint
argument_list|(
name|painter
argument_list|,
name|option
argument_list|,
name|index
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// Set up a QStyleOptionProgressBar to precisely mimic the
comment|// environment of a progress bar.
name|QStyleOptionProgressBar
name|progressBarOption
decl_stmt|;
name|progressBarOption
operator|.
name|state
operator|=
name|QStyle
operator|::
name|State_Enabled
expr_stmt|;
name|progressBarOption
operator|.
name|direction
operator|=
name|QApplication
operator|::
name|layoutDirection
argument_list|()
expr_stmt|;
name|progressBarOption
operator|.
name|rect
operator|=
name|option
operator|.
name|rect
expr_stmt|;
name|progressBarOption
operator|.
name|fontMetrics
operator|=
name|QApplication
operator|::
name|fontMetrics
argument_list|()
expr_stmt|;
name|progressBarOption
operator|.
name|minimum
operator|=
literal|0
expr_stmt|;
name|progressBarOption
operator|.
name|maximum
operator|=
literal|100
expr_stmt|;
name|progressBarOption
operator|.
name|textAlignment
operator|=
name|Qt
operator|::
name|AlignCenter
expr_stmt|;
name|progressBarOption
operator|.
name|textVisible
operator|=
literal|true
expr_stmt|;
comment|// Set the progress and text values of the style option.
name|int
name|progress
init|=
name|qobject_cast
argument_list|<
name|MainWindow
operator|*
argument_list|>
argument_list|(
name|parent
argument_list|()
argument_list|)
operator|->
name|clientForRow
argument_list|(
name|index
operator|.
name|row
argument_list|()
argument_list|)
operator|->
name|progress
argument_list|()
decl_stmt|;
name|progressBarOption
operator|.
name|progress
operator|=
name|progress
operator|<
literal|0
condition|?
literal|0
else|:
name|progress
expr_stmt|;
name|progressBarOption
operator|.
name|text
operator|=
name|QString
argument_list|()
operator|.
name|sprintf
argument_list|(
literal|"%d%%"
argument_list|,
name|progressBarOption
operator|.
name|progress
argument_list|)
expr_stmt|;
comment|// Draw the progress bar onto the view.
name|QApplication
operator|::
name|style
argument_list|()
operator|->
name|drawControl
argument_list|(
name|QStyle
operator|::
name|CE_ProgressBar
argument_list|,
operator|&
name|progressBarOption
argument_list|,
name|painter
argument_list|)
expr_stmt|;
block|}
block|}
class|;
end_class
begin_constructor
DECL|function|MainWindow
name|MainWindow
operator|::
name|MainWindow
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|quitDialog
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|saveChanges
argument_list|(
literal|false
argument_list|)
block|{
comment|// Initialize some static strings
name|QStringList
name|headers
decl_stmt|;
name|headers
operator|<<
name|tr
argument_list|(
literal|"Torrent"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Peers/Seeds"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Progress"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Down rate"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Up rate"
argument_list|)
operator|<<
name|tr
argument_list|(
literal|"Status"
argument_list|)
expr_stmt|;
comment|// Main torrent list
name|torrentView
operator|=
operator|new
name|TorrentView
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|torrentView
operator|->
name|setItemDelegate
argument_list|(
operator|new
name|TorrentViewDelegate
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|torrentView
operator|->
name|setHeaderLabels
argument_list|(
name|headers
argument_list|)
expr_stmt|;
name|torrentView
operator|->
name|setSelectionBehavior
argument_list|(
name|QAbstractItemView
operator|::
name|SelectRows
argument_list|)
expr_stmt|;
name|torrentView
operator|->
name|setAlternatingRowColors
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|torrentView
operator|->
name|setRootIsDecorated
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setCentralWidget
argument_list|(
name|torrentView
argument_list|)
expr_stmt|;
comment|// Set header resize modes and initial section sizes
name|QFontMetrics
name|fm
init|=
name|fontMetrics
argument_list|()
decl_stmt|;
name|QHeaderView
modifier|*
name|header
init|=
name|torrentView
operator|->
name|header
argument_list|()
decl_stmt|;
name|header
operator|->
name|resizeSection
argument_list|(
literal|0
argument_list|,
name|fm
operator|.
name|width
argument_list|(
literal|"typical-name-for-a-torrent.torrent"
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|->
name|resizeSection
argument_list|(
literal|1
argument_list|,
name|fm
operator|.
name|width
argument_list|(
name|headers
operator|.
name|at
argument_list|(
literal|1
argument_list|)
operator|+
literal|"  "
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|->
name|resizeSection
argument_list|(
literal|2
argument_list|,
name|fm
operator|.
name|width
argument_list|(
name|headers
operator|.
name|at
argument_list|(
literal|2
argument_list|)
operator|+
literal|"  "
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|->
name|resizeSection
argument_list|(
literal|3
argument_list|,
name|qMax
argument_list|(
name|fm
operator|.
name|width
argument_list|(
name|headers
operator|.
name|at
argument_list|(
literal|3
argument_list|)
operator|+
literal|"  "
argument_list|)
argument_list|,
name|fm
operator|.
name|width
argument_list|(
literal|" 1234.0 KB/s "
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|->
name|resizeSection
argument_list|(
literal|4
argument_list|,
name|qMax
argument_list|(
name|fm
operator|.
name|width
argument_list|(
name|headers
operator|.
name|at
argument_list|(
literal|4
argument_list|)
operator|+
literal|"  "
argument_list|)
argument_list|,
name|fm
operator|.
name|width
argument_list|(
literal|" 1234.0 KB/s "
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|header
operator|->
name|resizeSection
argument_list|(
literal|5
argument_list|,
name|qMax
argument_list|(
name|fm
operator|.
name|width
argument_list|(
name|headers
operator|.
name|at
argument_list|(
literal|5
argument_list|)
operator|+
literal|"  "
argument_list|)
argument_list|,
name|fm
operator|.
name|width
argument_list|(
name|tr
argument_list|(
literal|"Downloading"
argument_list|)
operator|+
literal|"  "
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create common actions
name|QAction
modifier|*
name|newTorrentAction
init|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/icons/bottom.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Add&new torrent"
argument_list|)
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|pauseTorrentAction
operator|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/icons/player_pause.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"&Pause torrent"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|removeTorrentAction
operator|=
operator|new
name|QAction
argument_list|(
name|QIcon
argument_list|(
literal|":/icons/player_stop.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"&Remove torrent"
argument_list|)
argument_list|,
name|this
argument_list|)
expr_stmt|;
comment|// File menu
name|QMenu
modifier|*
name|fileMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&File"
argument_list|)
argument_list|)
decl_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|newTorrentAction
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|pauseTorrentAction
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|removeTorrentAction
argument_list|)
expr_stmt|;
name|fileMenu
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|fileMenu
operator|->
name|addAction
argument_list|(
name|QIcon
argument_list|(
literal|":/icons/exit.png"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"E&xit"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Help menu
name|QMenu
modifier|*
name|helpMenu
init|=
name|menuBar
argument_list|()
operator|->
name|addMenu
argument_list|(
name|tr
argument_list|(
literal|"&Help"
argument_list|)
argument_list|)
decl_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|tr
argument_list|(
literal|"&About"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|about
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|helpMenu
operator|->
name|addAction
argument_list|(
name|tr
argument_list|(
literal|"About&Qt"
argument_list|)
argument_list|,
name|qApp
argument_list|,
name|SLOT
argument_list|(
name|aboutQt
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Top toolbar
name|QToolBar
modifier|*
name|topBar
init|=
operator|new
name|QToolBar
argument_list|(
name|tr
argument_list|(
literal|"Tools"
argument_list|)
argument_list|)
decl_stmt|;
name|addToolBar
argument_list|(
name|Qt
operator|::
name|TopToolBarArea
argument_list|,
name|topBar
argument_list|)
expr_stmt|;
name|topBar
operator|->
name|setMovable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|topBar
operator|->
name|addAction
argument_list|(
name|newTorrentAction
argument_list|)
expr_stmt|;
name|topBar
operator|->
name|addAction
argument_list|(
name|removeTorrentAction
argument_list|)
expr_stmt|;
name|topBar
operator|->
name|addAction
argument_list|(
name|pauseTorrentAction
argument_list|)
expr_stmt|;
name|topBar
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|downActionTool
operator|=
name|topBar
operator|->
name|addAction
argument_list|(
name|QIcon
argument_list|(
name|tr
argument_list|(
literal|":/icons/1downarrow.png"
argument_list|)
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Move down"
argument_list|)
argument_list|)
expr_stmt|;
name|upActionTool
operator|=
name|topBar
operator|->
name|addAction
argument_list|(
name|QIcon
argument_list|(
name|tr
argument_list|(
literal|":/icons/1uparrow.png"
argument_list|)
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Move up"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Bottom toolbar
name|QToolBar
modifier|*
name|bottomBar
init|=
operator|new
name|QToolBar
argument_list|(
name|tr
argument_list|(
literal|"Rate control"
argument_list|)
argument_list|)
decl_stmt|;
name|addToolBar
argument_list|(
name|Qt
operator|::
name|BottomToolBarArea
argument_list|,
name|bottomBar
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|setMovable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|downloadLimitSlider
operator|=
operator|new
name|QSlider
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|downloadLimitSlider
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Max download:"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|addWidget
argument_list|(
name|downloadLimitSlider
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|addWidget
argument_list|(
operator|(
name|downloadLimitLabel
operator|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"0 KB/s"
argument_list|)
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|downloadLimitLabel
operator|->
name|setFixedSize
argument_list|(
name|QSize
argument_list|(
name|fm
operator|.
name|width
argument_list|(
name|tr
argument_list|(
literal|"99999 KB/s"
argument_list|)
argument_list|)
argument_list|,
name|fm
operator|.
name|lineSpacing
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|uploadLimitSlider
operator|=
operator|new
name|QSlider
argument_list|(
name|Qt
operator|::
name|Horizontal
argument_list|)
expr_stmt|;
name|uploadLimitSlider
operator|->
name|setRange
argument_list|(
literal|0
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|addWidget
argument_list|(
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Max upload:"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|addWidget
argument_list|(
name|uploadLimitSlider
argument_list|)
expr_stmt|;
name|bottomBar
operator|->
name|addWidget
argument_list|(
operator|(
name|uploadLimitLabel
operator|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"0 KB/s"
argument_list|)
argument_list|)
operator|)
argument_list|)
expr_stmt|;
name|uploadLimitLabel
operator|->
name|setFixedSize
argument_list|(
name|QSize
argument_list|(
name|fm
operator|.
name|width
argument_list|(
name|tr
argument_list|(
literal|"99999 KB/s"
argument_list|)
argument_list|)
argument_list|,
name|fm
operator|.
name|lineSpacing
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_OSX
name|setUnifiedTitleAndToolBarOnMac
argument_list|(
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
comment|// Set up connections
name|connect
argument_list|(
name|torrentView
argument_list|,
name|SIGNAL
argument_list|(
name|itemSelectionChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setActionsEnabled
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|torrentView
argument_list|,
name|SIGNAL
argument_list|(
name|fileDropped
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|acceptFileDrop
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|uploadLimitSlider
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setUploadLimit
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|downloadLimitSlider
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setDownloadLimit
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|newTorrentAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|addTorrent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|pauseTorrentAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|pauseTorrent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|removeTorrentAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|removeTorrent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|upActionTool
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|moveTorrentUp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|downActionTool
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|moveTorrentDown
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Load settings and start
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Torrent Client"
argument_list|)
argument_list|)
expr_stmt|;
name|setActionsEnabled
argument_list|()
expr_stmt|;
name|QMetaObject
operator|::
name|invokeMethod
argument_list|(
name|this
argument_list|,
literal|"loadSettings"
argument_list|,
name|Qt
operator|::
name|QueuedConnection
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|sizeHint
name|QSize
name|MainWindow
operator|::
name|sizeHint
parameter_list|()
specifier|const
block|{
specifier|const
name|QHeaderView
modifier|*
name|header
init|=
name|torrentView
operator|->
name|header
argument_list|()
decl_stmt|;
comment|// Add up the sizes of all header sections. The last section is
comment|// stretched, so its size is relative to the size of the width;
comment|// instead of counting it, we count the size of its largest value.
name|int
name|width
init|=
name|fontMetrics
argument_list|()
operator|.
name|width
argument_list|(
name|tr
argument_list|(
literal|"Downloading"
argument_list|)
operator|+
literal|"  "
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|header
operator|->
name|count
argument_list|()
operator|-
literal|1
condition|;
operator|++
name|i
control|)
name|width
operator|+=
name|header
operator|->
name|sectionSize
argument_list|(
name|i
argument_list|)
expr_stmt|;
return|return
name|QSize
argument_list|(
name|width
argument_list|,
name|QMainWindow
operator|::
name|sizeHint
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
operator|.
name|expandedTo
argument_list|(
name|QApplication
operator|::
name|globalStrut
argument_list|()
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|clientForRow
specifier|const
name|TorrentClient
modifier|*
name|MainWindow
operator|::
name|clientForRow
parameter_list|(
name|int
name|row
parameter_list|)
specifier|const
block|{
comment|// Return the client at the given row.
return|return
name|jobs
operator|.
name|at
argument_list|(
name|row
argument_list|)
operator|.
name|client
return|;
block|}
end_function
begin_function
DECL|function|rowOfClient
name|int
name|MainWindow
operator|::
name|rowOfClient
parameter_list|(
name|TorrentClient
modifier|*
name|client
parameter_list|)
specifier|const
block|{
comment|// Return the row that displays this client's status, or -1 if the
comment|// client is not known.
name|int
name|row
init|=
literal|0
decl_stmt|;
foreach|foreach
control|(
name|Job
name|job
decl|,
name|jobs
control|)
block|{
if|if
condition|(
name|job
operator|.
name|client
operator|==
name|client
condition|)
return|return
name|row
return|;
operator|++
name|row
expr_stmt|;
block|}
return|return
operator|-
literal|1
return|;
block|}
end_function
begin_function
DECL|function|loadSettings
name|void
name|MainWindow
operator|::
name|loadSettings
parameter_list|()
block|{
comment|// Load base settings (last working directory, upload/download limits).
name|QSettings
name|settings
argument_list|(
literal|"QtProject"
argument_list|,
literal|"Torrent"
argument_list|)
decl_stmt|;
name|lastDirectory
operator|=
name|settings
operator|.
name|value
argument_list|(
literal|"LastDirectory"
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
if|if
condition|(
name|lastDirectory
operator|.
name|isEmpty
argument_list|()
condition|)
name|lastDirectory
operator|=
name|QDir
operator|::
name|currentPath
argument_list|()
expr_stmt|;
name|int
name|up
init|=
name|settings
operator|.
name|value
argument_list|(
literal|"UploadLimit"
argument_list|)
operator|.
name|toInt
argument_list|()
decl_stmt|;
name|int
name|down
init|=
name|settings
operator|.
name|value
argument_list|(
literal|"DownloadLimit"
argument_list|)
operator|.
name|toInt
argument_list|()
decl_stmt|;
name|uploadLimitSlider
operator|->
name|setValue
argument_list|(
name|up
condition|?
name|up
else|:
literal|170
argument_list|)
expr_stmt|;
name|downloadLimitSlider
operator|->
name|setValue
argument_list|(
name|down
condition|?
name|down
else|:
literal|550
argument_list|)
expr_stmt|;
comment|// Resume all previous downloads.
name|int
name|size
init|=
name|settings
operator|.
name|beginReadArray
argument_list|(
literal|"Torrents"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
operator|++
name|i
control|)
block|{
name|settings
operator|.
name|setArrayIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|QByteArray
name|resumeState
init|=
name|settings
operator|.
name|value
argument_list|(
literal|"resumeState"
argument_list|)
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|QString
name|fileName
init|=
name|settings
operator|.
name|value
argument_list|(
literal|"sourceFileName"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
name|QString
name|dest
init|=
name|settings
operator|.
name|value
argument_list|(
literal|"destinationFolder"
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|addTorrent
argument_list|(
name|fileName
argument_list|,
name|dest
argument_list|,
name|resumeState
argument_list|)
condition|)
block|{
name|TorrentClient
modifier|*
name|client
init|=
name|jobs
operator|.
name|last
argument_list|()
operator|.
name|client
decl_stmt|;
name|client
operator|->
name|setDownloadedBytes
argument_list|(
name|settings
operator|.
name|value
argument_list|(
literal|"downloadedBytes"
argument_list|)
operator|.
name|toLongLong
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|->
name|setUploadedBytes
argument_list|(
name|settings
operator|.
name|value
argument_list|(
literal|"uploadedBytes"
argument_list|)
operator|.
name|toLongLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|addTorrent
name|bool
name|MainWindow
operator|::
name|addTorrent
parameter_list|()
block|{
comment|// Show the file dialog, let the user select what torrent to start downloading.
name|QString
name|fileName
init|=
name|QFileDialog
operator|::
name|getOpenFileName
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Choose a torrent file"
argument_list|)
argument_list|,
name|lastDirectory
argument_list|,
name|tr
argument_list|(
literal|"Torrents (*.torrent);;"
literal|" All files (*.*)"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|fileName
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|false
return|;
name|lastDirectory
operator|=
name|QFileInfo
argument_list|(
name|fileName
argument_list|)
operator|.
name|absolutePath
argument_list|()
expr_stmt|;
comment|// Show the "Add Torrent" dialog.
name|AddTorrentDialog
modifier|*
name|addTorrentDialog
init|=
operator|new
name|AddTorrentDialog
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|addTorrentDialog
operator|->
name|setTorrent
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|addTorrentDialog
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|addTorrentDialog
operator|->
name|exec
argument_list|()
condition|)
return|return
literal|false
return|;
comment|// Add the torrent to our list of downloads
name|addTorrent
argument_list|(
name|fileName
argument_list|,
name|addTorrentDialog
operator|->
name|destinationFolder
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|saveChanges
condition|)
block|{
name|saveChanges
operator|=
literal|true
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|1000
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|saveSettings
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|removeTorrent
name|void
name|MainWindow
operator|::
name|removeTorrent
parameter_list|()
block|{
comment|// Find the row of the current item, and find the torrent client
comment|// for that row.
name|int
name|row
init|=
name|torrentView
operator|->
name|indexOfTopLevelItem
argument_list|(
name|torrentView
operator|->
name|currentItem
argument_list|()
argument_list|)
decl_stmt|;
name|TorrentClient
modifier|*
name|client
init|=
name|jobs
operator|.
name|at
argument_list|(
name|row
argument_list|)
operator|.
name|client
decl_stmt|;
comment|// Stop the client.
name|client
operator|->
name|disconnect
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|torrentStopped
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|->
name|stop
argument_list|()
expr_stmt|;
comment|// Remove the row from the view.
operator|delete
name|torrentView
operator|->
name|takeTopLevelItem
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|jobs
operator|.
name|removeAt
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|setActionsEnabled
argument_list|()
expr_stmt|;
name|saveChanges
operator|=
literal|true
expr_stmt|;
name|saveSettings
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|torrentStopped
name|void
name|MainWindow
operator|::
name|torrentStopped
parameter_list|()
block|{
comment|// Schedule the client for deletion.
name|TorrentClient
modifier|*
name|client
init|=
name|qobject_cast
argument_list|<
name|TorrentClient
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
comment|// If the quit dialog is shown, update its progress.
if|if
condition|(
name|quitDialog
condition|)
block|{
if|if
condition|(
operator|++
name|jobsStopped
operator|==
name|jobsToStop
condition|)
name|quitDialog
operator|->
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|torrentError
name|void
name|MainWindow
operator|::
name|torrentError
parameter_list|(
name|TorrentClient
operator|::
name|Error
parameter_list|)
block|{
comment|// Delete the client.
name|TorrentClient
modifier|*
name|client
init|=
name|qobject_cast
argument_list|<
name|TorrentClient
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|rowOfClient
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|QString
name|fileName
init|=
name|jobs
operator|.
name|at
argument_list|(
name|row
argument_list|)
operator|.
name|torrentFileName
decl_stmt|;
name|jobs
operator|.
name|removeAt
argument_list|(
name|row
argument_list|)
expr_stmt|;
comment|// Display the warning.
name|QMessageBox
operator|::
name|warning
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Error"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"An error occurred while downloading %0: %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|fileName
argument_list|)
operator|.
name|arg
argument_list|(
name|client
operator|->
name|errorString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|torrentView
operator|->
name|takeTopLevelItem
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|client
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addTorrent
name|bool
name|MainWindow
operator|::
name|addTorrent
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|,
specifier|const
name|QString
modifier|&
name|destinationFolder
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|resumeState
parameter_list|)
block|{
comment|// Check if the torrent is already being downloaded.
foreach|foreach
control|(
name|Job
name|job
decl|,
name|jobs
control|)
block|{
if|if
condition|(
name|job
operator|.
name|torrentFileName
operator|==
name|fileName
operator|&&
name|job
operator|.
name|destinationDirectory
operator|==
name|destinationFolder
condition|)
block|{
name|QMessageBox
operator|::
name|warning
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Already downloading"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"The torrent file %1 is "
literal|"already being downloaded."
argument_list|)
operator|.
name|arg
argument_list|(
name|fileName
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
comment|// Create a new torrent client and attempt to parse the torrent data.
name|TorrentClient
modifier|*
name|client
init|=
operator|new
name|TorrentClient
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|client
operator|->
name|setTorrent
argument_list|(
name|fileName
argument_list|)
condition|)
block|{
name|QMessageBox
operator|::
name|warning
argument_list|(
name|this
argument_list|,
name|tr
argument_list|(
literal|"Error"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"The torrent file %1 cannot not be opened/resumed."
argument_list|)
operator|.
name|arg
argument_list|(
name|fileName
argument_list|)
argument_list|)
expr_stmt|;
operator|delete
name|client
expr_stmt|;
return|return
literal|false
return|;
block|}
name|client
operator|->
name|setDestinationFolder
argument_list|(
name|destinationFolder
argument_list|)
expr_stmt|;
name|client
operator|->
name|setDumpedState
argument_list|(
name|resumeState
argument_list|)
expr_stmt|;
comment|// Setup the client connections.
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|TorrentClient
operator|::
name|State
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateState
argument_list|(
name|TorrentClient
operator|::
name|State
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|peerInfoUpdated
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updatePeerInfo
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|progressUpdated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateProgress
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|downloadRateUpdated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateDownloadRate
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|uploadRateUpdated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateUploadRate
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|torrentStopped
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|error
argument_list|(
name|TorrentClient
operator|::
name|Error
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|torrentError
argument_list|(
name|TorrentClient
operator|::
name|Error
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add the client to the list of downloading jobs.
name|Job
name|job
decl_stmt|;
name|job
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|job
operator|.
name|torrentFileName
operator|=
name|fileName
expr_stmt|;
name|job
operator|.
name|destinationDirectory
operator|=
name|destinationFolder
expr_stmt|;
name|jobs
operator|<<
name|job
expr_stmt|;
comment|// Create and add a row in the torrent view for this download.
name|QTreeWidgetItem
modifier|*
name|item
init|=
operator|new
name|QTreeWidgetItem
argument_list|(
name|torrentView
argument_list|)
decl_stmt|;
name|QString
name|baseFileName
init|=
name|QFileInfo
argument_list|(
name|fileName
argument_list|)
operator|.
name|fileName
argument_list|()
decl_stmt|;
if|if
condition|(
name|baseFileName
operator|.
name|toLower
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".torrent"
argument_list|)
condition|)
name|baseFileName
operator|.
name|remove
argument_list|(
name|baseFileName
operator|.
name|size
argument_list|()
operator|-
literal|8
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|0
argument_list|,
name|baseFileName
argument_list|)
expr_stmt|;
name|item
operator|->
name|setToolTip
argument_list|(
literal|0
argument_list|,
name|tr
argument_list|(
literal|"Torrent: %1<br>Destination: %2"
argument_list|)
operator|.
name|arg
argument_list|(
name|baseFileName
argument_list|)
operator|.
name|arg
argument_list|(
name|destinationFolder
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|1
argument_list|,
name|tr
argument_list|(
literal|"0/0"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|2
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|3
argument_list|,
literal|"0.0 KB/s"
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|4
argument_list|,
literal|"0.0 KB/s"
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|5
argument_list|,
name|tr
argument_list|(
literal|"Idle"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setFlags
argument_list|(
name|item
operator|->
name|flags
argument_list|()
operator|&
operator|~
name|Qt
operator|::
name|ItemIsEditable
argument_list|)
expr_stmt|;
name|item
operator|->
name|setTextAlignment
argument_list|(
literal|1
argument_list|,
name|Qt
operator|::
name|AlignHCenter
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|saveChanges
condition|)
block|{
name|saveChanges
operator|=
literal|true
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|5000
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|saveSettings
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|client
operator|->
name|start
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|saveSettings
name|void
name|MainWindow
operator|::
name|saveSettings
parameter_list|()
block|{
if|if
condition|(
operator|!
name|saveChanges
condition|)
return|return;
name|saveChanges
operator|=
literal|false
expr_stmt|;
comment|// Prepare and reset the settings
name|QSettings
name|settings
argument_list|(
literal|"QtProject"
argument_list|,
literal|"Torrent"
argument_list|)
decl_stmt|;
name|settings
operator|.
name|clear
argument_list|()
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"LastDirectory"
argument_list|,
name|lastDirectory
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"UploadLimit"
argument_list|,
name|uploadLimitSlider
operator|->
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"DownloadLimit"
argument_list|,
name|downloadLimitSlider
operator|->
name|value
argument_list|()
argument_list|)
expr_stmt|;
comment|// Store data on all known torrents
name|settings
operator|.
name|beginWriteArray
argument_list|(
literal|"Torrents"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|jobs
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|settings
operator|.
name|setArrayIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"sourceFileName"
argument_list|,
name|jobs
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|torrentFileName
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"destinationFolder"
argument_list|,
name|jobs
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|destinationDirectory
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"uploadedBytes"
argument_list|,
name|jobs
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|client
operator|->
name|uploadedBytes
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"downloadedBytes"
argument_list|,
name|jobs
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|client
operator|->
name|downloadedBytes
argument_list|()
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setValue
argument_list|(
literal|"resumeState"
argument_list|,
name|jobs
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|.
name|client
operator|->
name|dumpedState
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|settings
operator|.
name|endArray
argument_list|()
expr_stmt|;
name|settings
operator|.
name|sync
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateState
name|void
name|MainWindow
operator|::
name|updateState
parameter_list|(
name|TorrentClient
operator|::
name|State
parameter_list|)
block|{
comment|// Update the state string whenever the client's state changes.
name|TorrentClient
modifier|*
name|client
init|=
name|qobject_cast
argument_list|<
name|TorrentClient
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|rowOfClient
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
name|torrentView
operator|->
name|topLevelItem
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
condition|)
block|{
name|item
operator|->
name|setToolTip
argument_list|(
literal|0
argument_list|,
name|tr
argument_list|(
literal|"Torrent: %1<br>Destination: %2<br>State: %3"
argument_list|)
operator|.
name|arg
argument_list|(
name|jobs
operator|.
name|at
argument_list|(
name|row
argument_list|)
operator|.
name|torrentFileName
argument_list|)
operator|.
name|arg
argument_list|(
name|jobs
operator|.
name|at
argument_list|(
name|row
argument_list|)
operator|.
name|destinationDirectory
argument_list|)
operator|.
name|arg
argument_list|(
name|client
operator|->
name|stateString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|5
argument_list|,
name|client
operator|->
name|stateString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setActionsEnabled
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updatePeerInfo
name|void
name|MainWindow
operator|::
name|updatePeerInfo
parameter_list|()
block|{
comment|// Update the number of connected, visited, seed and leecher peers.
name|TorrentClient
modifier|*
name|client
init|=
name|qobject_cast
argument_list|<
name|TorrentClient
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|rowOfClient
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|QTreeWidgetItem
modifier|*
name|item
init|=
name|torrentView
operator|->
name|topLevelItem
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|item
operator|->
name|setText
argument_list|(
literal|1
argument_list|,
name|tr
argument_list|(
literal|"%1/%2"
argument_list|)
operator|.
name|arg
argument_list|(
name|client
operator|->
name|connectedPeerCount
argument_list|()
argument_list|)
operator|.
name|arg
argument_list|(
name|client
operator|->
name|seedCount
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateProgress
name|void
name|MainWindow
operator|::
name|updateProgress
parameter_list|(
name|int
name|percent
parameter_list|)
block|{
name|TorrentClient
modifier|*
name|client
init|=
name|qobject_cast
argument_list|<
name|TorrentClient
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|rowOfClient
argument_list|(
name|client
argument_list|)
decl_stmt|;
comment|// Update the progressbar.
name|QTreeWidgetItem
modifier|*
name|item
init|=
name|torrentView
operator|->
name|topLevelItem
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
condition|)
name|item
operator|->
name|setText
argument_list|(
literal|2
argument_list|,
name|QString
operator|::
name|number
argument_list|(
name|percent
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setActionsEnabled
name|void
name|MainWindow
operator|::
name|setActionsEnabled
parameter_list|()
block|{
comment|// Find the view item and client for the current row, and update
comment|// the states of the actions.
name|QTreeWidgetItem
modifier|*
name|item
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|!
name|torrentView
operator|->
name|selectedItems
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|item
operator|=
name|torrentView
operator|->
name|selectedItems
argument_list|()
operator|.
name|first
argument_list|()
expr_stmt|;
name|TorrentClient
modifier|*
name|client
init|=
name|item
condition|?
name|jobs
operator|.
name|at
argument_list|(
name|torrentView
operator|->
name|indexOfTopLevelItem
argument_list|(
name|item
argument_list|)
argument_list|)
operator|.
name|client
else|:
literal|0
decl_stmt|;
name|bool
name|pauseEnabled
init|=
name|client
operator|&&
operator|(
operator|(
name|client
operator|->
name|state
argument_list|()
operator|==
name|TorrentClient
operator|::
name|Paused
operator|)
operator|||
operator|(
name|client
operator|->
name|state
argument_list|()
operator|>
name|TorrentClient
operator|::
name|Preparing
operator|)
operator|)
decl_stmt|;
name|removeTorrentAction
operator|->
name|setEnabled
argument_list|(
name|item
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|pauseTorrentAction
operator|->
name|setEnabled
argument_list|(
name|item
operator|!=
literal|0
operator|&&
name|pauseEnabled
argument_list|)
expr_stmt|;
if|if
condition|(
name|client
operator|&&
name|client
operator|->
name|state
argument_list|()
operator|==
name|TorrentClient
operator|::
name|Paused
condition|)
block|{
name|pauseTorrentAction
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
literal|":/icons/player_play.png"
argument_list|)
argument_list|)
expr_stmt|;
name|pauseTorrentAction
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Resume torrent"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|pauseTorrentAction
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
literal|":/icons/player_pause.png"
argument_list|)
argument_list|)
expr_stmt|;
name|pauseTorrentAction
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"Pause torrent"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|int
name|row
init|=
name|torrentView
operator|->
name|indexOfTopLevelItem
argument_list|(
name|item
argument_list|)
decl_stmt|;
name|upActionTool
operator|->
name|setEnabled
argument_list|(
name|item
operator|&&
name|row
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|downActionTool
operator|->
name|setEnabled
argument_list|(
name|item
operator|&&
name|row
operator|!=
name|jobs
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updateDownloadRate
name|void
name|MainWindow
operator|::
name|updateDownloadRate
parameter_list|(
name|int
name|bytesPerSecond
parameter_list|)
block|{
comment|// Update the download rate.
name|TorrentClient
modifier|*
name|client
init|=
name|qobject_cast
argument_list|<
name|TorrentClient
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|rowOfClient
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|QString
name|num
decl_stmt|;
name|num
operator|.
name|sprintf
argument_list|(
literal|"%.1f KB/s"
argument_list|,
name|bytesPerSecond
operator|/
literal|1024.0
argument_list|)
expr_stmt|;
name|torrentView
operator|->
name|topLevelItem
argument_list|(
name|row
argument_list|)
operator|->
name|setText
argument_list|(
literal|3
argument_list|,
name|num
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|saveChanges
condition|)
block|{
name|saveChanges
operator|=
literal|true
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|5000
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|saveSettings
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|updateUploadRate
name|void
name|MainWindow
operator|::
name|updateUploadRate
parameter_list|(
name|int
name|bytesPerSecond
parameter_list|)
block|{
comment|// Update the upload rate.
name|TorrentClient
modifier|*
name|client
init|=
name|qobject_cast
argument_list|<
name|TorrentClient
operator|*
argument_list|>
argument_list|(
name|sender
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|row
init|=
name|rowOfClient
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|QString
name|num
decl_stmt|;
name|num
operator|.
name|sprintf
argument_list|(
literal|"%.1f KB/s"
argument_list|,
name|bytesPerSecond
operator|/
literal|1024.0
argument_list|)
expr_stmt|;
name|torrentView
operator|->
name|topLevelItem
argument_list|(
name|row
argument_list|)
operator|->
name|setText
argument_list|(
literal|4
argument_list|,
name|num
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|saveChanges
condition|)
block|{
name|saveChanges
operator|=
literal|true
expr_stmt|;
name|QTimer
operator|::
name|singleShot
argument_list|(
literal|5000
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|saveSettings
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|pauseTorrent
name|void
name|MainWindow
operator|::
name|pauseTorrent
parameter_list|()
block|{
comment|// Pause or unpause the current torrent.
name|int
name|row
init|=
name|torrentView
operator|->
name|indexOfTopLevelItem
argument_list|(
name|torrentView
operator|->
name|currentItem
argument_list|()
argument_list|)
decl_stmt|;
name|TorrentClient
modifier|*
name|client
init|=
name|jobs
operator|.
name|at
argument_list|(
name|row
argument_list|)
operator|.
name|client
decl_stmt|;
name|client
operator|->
name|setPaused
argument_list|(
name|client
operator|->
name|state
argument_list|()
operator|!=
name|TorrentClient
operator|::
name|Paused
argument_list|)
expr_stmt|;
name|setActionsEnabled
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveTorrentUp
name|void
name|MainWindow
operator|::
name|moveTorrentUp
parameter_list|()
block|{
name|QTreeWidgetItem
modifier|*
name|item
init|=
name|torrentView
operator|->
name|currentItem
argument_list|()
decl_stmt|;
name|int
name|row
init|=
name|torrentView
operator|->
name|indexOfTopLevelItem
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|row
operator|==
literal|0
condition|)
return|return;
name|Job
name|tmp
init|=
name|jobs
operator|.
name|at
argument_list|(
name|row
operator|-
literal|1
argument_list|)
decl_stmt|;
name|jobs
index|[
name|row
operator|-
literal|1
index|]
operator|=
name|jobs
index|[
name|row
index|]
expr_stmt|;
name|jobs
index|[
name|row
index|]
operator|=
name|tmp
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|itemAbove
init|=
name|torrentView
operator|->
name|takeTopLevelItem
argument_list|(
name|row
operator|-
literal|1
argument_list|)
decl_stmt|;
name|torrentView
operator|->
name|insertTopLevelItem
argument_list|(
name|row
argument_list|,
name|itemAbove
argument_list|)
expr_stmt|;
name|setActionsEnabled
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|moveTorrentDown
name|void
name|MainWindow
operator|::
name|moveTorrentDown
parameter_list|()
block|{
name|QTreeWidgetItem
modifier|*
name|item
init|=
name|torrentView
operator|->
name|currentItem
argument_list|()
decl_stmt|;
name|int
name|row
init|=
name|torrentView
operator|->
name|indexOfTopLevelItem
argument_list|(
name|item
argument_list|)
decl_stmt|;
if|if
condition|(
name|row
operator|==
name|jobs
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|)
return|return;
name|Job
name|tmp
init|=
name|jobs
operator|.
name|at
argument_list|(
name|row
operator|+
literal|1
argument_list|)
decl_stmt|;
name|jobs
index|[
name|row
operator|+
literal|1
index|]
operator|=
name|jobs
index|[
name|row
index|]
expr_stmt|;
name|jobs
index|[
name|row
index|]
operator|=
name|tmp
expr_stmt|;
name|QTreeWidgetItem
modifier|*
name|itemAbove
init|=
name|torrentView
operator|->
name|takeTopLevelItem
argument_list|(
name|row
operator|+
literal|1
argument_list|)
decl_stmt|;
name|torrentView
operator|->
name|insertTopLevelItem
argument_list|(
name|row
argument_list|,
name|itemAbove
argument_list|)
expr_stmt|;
name|setActionsEnabled
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|rateFromValue
specifier|static
name|int
name|rateFromValue
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|int
name|rate
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|value
operator|>=
literal|0
operator|&&
name|value
operator|<
literal|250
condition|)
block|{
name|rate
operator|=
literal|1
operator|+
name|int
argument_list|(
name|value
operator|*
literal|0.124
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|value
operator|<
literal|500
condition|)
block|{
name|rate
operator|=
literal|32
operator|+
name|int
argument_list|(
operator|(
name|value
operator|-
literal|250
operator|)
operator|*
literal|0.384
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|value
operator|<
literal|750
condition|)
block|{
name|rate
operator|=
literal|128
operator|+
name|int
argument_list|(
operator|(
name|value
operator|-
literal|500
operator|)
operator|*
literal|1.536
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rate
operator|=
literal|512
operator|+
name|int
argument_list|(
operator|(
name|value
operator|-
literal|750
operator|)
operator|*
literal|6.1445
argument_list|)
expr_stmt|;
block|}
return|return
name|rate
return|;
block|}
end_function
begin_function
DECL|function|setUploadLimit
name|void
name|MainWindow
operator|::
name|setUploadLimit
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|int
name|rate
init|=
name|rateFromValue
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|uploadLimitLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"%1 KB/s"
argument_list|)
operator|.
name|arg
argument_list|(
name|QString
argument_list|()
operator|.
name|sprintf
argument_list|(
literal|"%4d"
argument_list|,
name|rate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|RateController
operator|::
name|instance
argument_list|()
operator|->
name|setUploadLimit
argument_list|(
name|rate
operator|*
literal|1024
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setDownloadLimit
name|void
name|MainWindow
operator|::
name|setDownloadLimit
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|int
name|rate
init|=
name|rateFromValue
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|downloadLimitLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"%1 KB/s"
argument_list|)
operator|.
name|arg
argument_list|(
name|QString
argument_list|()
operator|.
name|sprintf
argument_list|(
literal|"%4d"
argument_list|,
name|rate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|RateController
operator|::
name|instance
argument_list|()
operator|->
name|setDownloadLimit
argument_list|(
name|rate
operator|*
literal|1024
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|about
name|void
name|MainWindow
operator|::
name|about
parameter_list|()
block|{
name|QLabel
modifier|*
name|icon
init|=
operator|new
name|QLabel
decl_stmt|;
name|icon
operator|->
name|setPixmap
argument_list|(
name|QPixmap
argument_list|(
literal|":/icons/peertopeer.png"
argument_list|)
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|text
init|=
operator|new
name|QLabel
decl_stmt|;
name|text
operator|->
name|setWordWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|text
operator|->
name|setText
argument_list|(
literal|"<p>The<b>Torrent Client</b> example demonstrates how to"
literal|" write a complete peer-to-peer file sharing"
literal|" application using Qt's network and thread classes.</p>"
literal|"<p>This feature complete client implementation of"
literal|" the BitTorrent protocol can efficiently"
literal|" maintain several hundred network connections"
literal|" simultaneously.</p>"
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|quitButton
init|=
operator|new
name|QPushButton
argument_list|(
literal|"OK"
argument_list|)
decl_stmt|;
name|QHBoxLayout
modifier|*
name|topLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|topLayout
operator|->
name|setMargin
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|topLayout
operator|->
name|setSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|topLayout
operator|->
name|addWidget
argument_list|(
name|icon
argument_list|)
expr_stmt|;
name|topLayout
operator|->
name|addWidget
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|bottomLayout
init|=
operator|new
name|QHBoxLayout
decl_stmt|;
name|bottomLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|bottomLayout
operator|->
name|addWidget
argument_list|(
name|quitButton
argument_list|)
expr_stmt|;
name|bottomLayout
operator|->
name|addStretch
argument_list|()
expr_stmt|;
name|QVBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|mainLayout
operator|->
name|addLayout
argument_list|(
name|topLayout
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addLayout
argument_list|(
name|bottomLayout
argument_list|)
expr_stmt|;
name|QDialog
name|about
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|about
operator|.
name|setModal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|about
operator|.
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"About Torrent Client"
argument_list|)
argument_list|)
expr_stmt|;
name|about
operator|.
name|setLayout
argument_list|(
name|mainLayout
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|quitButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
operator|&
name|about
argument_list|,
name|SLOT
argument_list|(
name|close
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|about
operator|.
name|exec
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|acceptFileDrop
name|void
name|MainWindow
operator|::
name|acceptFileDrop
parameter_list|(
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|)
block|{
comment|// Create and show the "Add Torrent" dialog.
name|AddTorrentDialog
modifier|*
name|addTorrentDialog
init|=
operator|new
name|AddTorrentDialog
decl_stmt|;
name|lastDirectory
operator|=
name|QFileInfo
argument_list|(
name|fileName
argument_list|)
operator|.
name|absolutePath
argument_list|()
expr_stmt|;
name|addTorrentDialog
operator|->
name|setTorrent
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|addTorrentDialog
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|addTorrentDialog
operator|->
name|exec
argument_list|()
condition|)
return|return;
comment|// Add the torrent to our list of downloads.
name|addTorrent
argument_list|(
name|fileName
argument_list|,
name|addTorrentDialog
operator|->
name|destinationFolder
argument_list|()
argument_list|)
expr_stmt|;
name|saveSettings
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|closeEvent
name|void
name|MainWindow
operator|::
name|closeEvent
parameter_list|(
name|QCloseEvent
modifier|*
parameter_list|)
block|{
if|if
condition|(
name|jobs
operator|.
name|isEmpty
argument_list|()
condition|)
return|return;
comment|// Save upload / download numbers.
name|saveSettings
argument_list|()
expr_stmt|;
name|saveChanges
operator|=
literal|false
expr_stmt|;
name|quitDialog
operator|=
operator|new
name|QProgressDialog
argument_list|(
name|tr
argument_list|(
literal|"Disconnecting from trackers"
argument_list|)
argument_list|,
name|tr
argument_list|(
literal|"Abort"
argument_list|)
argument_list|,
literal|0
argument_list|,
name|jobsToStop
argument_list|,
name|this
argument_list|)
expr_stmt|;
comment|// Stop all clients, remove the rows from the view and wait for
comment|// them to signal that they have stopped.
name|jobsToStop
operator|=
literal|0
expr_stmt|;
name|jobsStopped
operator|=
literal|0
expr_stmt|;
foreach|foreach
control|(
name|Job
name|job
decl|,
name|jobs
control|)
block|{
operator|++
name|jobsToStop
expr_stmt|;
name|TorrentClient
modifier|*
name|client
init|=
name|job
operator|.
name|client
decl_stmt|;
name|client
operator|->
name|disconnect
argument_list|()
expr_stmt|;
name|connect
argument_list|(
name|client
argument_list|,
name|SIGNAL
argument_list|(
name|stopped
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|torrentStopped
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|->
name|stop
argument_list|()
expr_stmt|;
operator|delete
name|torrentView
operator|->
name|takeTopLevelItem
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|jobsToStop
operator|>
name|jobsStopped
condition|)
name|quitDialog
operator|->
name|exec
argument_list|()
expr_stmt|;
name|quitDialog
operator|->
name|deleteLater
argument_list|()
expr_stmt|;
name|quitDialog
operator|=
literal|0
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|TorrentView
name|TorrentView
operator|::
name|TorrentView
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QTreeWidget
argument_list|(
name|parent
argument_list|)
block|{
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
name|setAcceptDrops
argument_list|(
literal|true
argument_list|)
expr_stmt|;
endif|#
directive|endif
block|}
end_constructor
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
end_ifndef
begin_function
DECL|function|dragMoveEvent
name|void
name|TorrentView
operator|::
name|dragMoveEvent
parameter_list|(
name|QDragMoveEvent
modifier|*
name|event
parameter_list|)
block|{
comment|// Accept file actions with a '.torrent' extension.
name|QUrl
name|url
argument_list|(
name|event
operator|->
name|mimeData
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|url
operator|.
name|isValid
argument_list|()
operator|&&
name|url
operator|.
name|scheme
argument_list|()
operator|.
name|toLower
argument_list|()
operator|==
literal|"file"
operator|&&
name|url
operator|.
name|path
argument_list|()
operator|.
name|toLower
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".torrent"
argument_list|)
condition|)
name|event
operator|->
name|acceptProposedAction
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dropEvent
name|void
name|TorrentView
operator|::
name|dropEvent
parameter_list|(
name|QDropEvent
modifier|*
name|event
parameter_list|)
block|{
comment|// Accept drops if the file has a '.torrent' extension and it
comment|// exists.
name|QString
name|fileName
init|=
name|QUrl
argument_list|(
name|event
operator|->
name|mimeData
argument_list|()
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|path
argument_list|()
decl_stmt|;
if|if
condition|(
name|QFile
operator|::
name|exists
argument_list|(
name|fileName
argument_list|)
operator|&&
name|fileName
operator|.
name|toLower
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".torrent"
argument_list|)
condition|)
emit|emit
name|fileDropped
argument_list|(
name|fileName
argument_list|)
emit|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"mainwindow.moc"
end_include
end_unit
