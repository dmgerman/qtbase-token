begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QWindow>
end_include
begin_include
include|#
directive|include
file|<QtGui/qopengl.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qopenglshaderprogram.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qopenglframebufferobject.h>
end_include
begin_include
include|#
directive|include
file|<QPropertyAnimation>
end_include
begin_include
include|#
directive|include
file|<QColor>
end_include
begin_include
include|#
directive|include
file|<QImage>
end_include
begin_include
include|#
directive|include
file|<QTime>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QOpenGLContext
name|class
name|QOpenGLContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
name|class
name|PaintedWindow
range|:
name|public
name|QWindow
block|{
name|Q_OBJECT
name|Q_PROPERTY
argument_list|(
argument|qreal rotation READ rotation WRITE setRotation NOTIFY rotationChanged
argument_list|)
name|public
operator|:
name|PaintedWindow
argument_list|()
block|;
name|qreal
name|rotation
argument_list|()
specifier|const
block|{
return|return
name|m_rotation
return|;
block|}
name|signals
operator|:
name|void
name|rotationChanged
argument_list|(
argument|qreal rotation
argument_list|)
block|;
name|private
name|slots
operator|:
name|void
name|paint
argument_list|()
block|;
name|void
name|setRotation
argument_list|(
argument|qreal r
argument_list|)
block|;
name|void
name|orientationChanged
argument_list|(
argument|Qt::ScreenOrientation newOrientation
argument_list|)
block|;
name|void
name|rotationDone
argument_list|()
block|;
name|private
operator|:
name|void
name|resizeEvent
argument_list|(
name|QResizeEvent
operator|*
argument_list|)
block|;
name|void
name|exposeEvent
argument_list|(
name|QExposeEvent
operator|*
argument_list|)
block|;
name|void
name|mousePressEvent
argument_list|(
name|QMouseEvent
operator|*
argument_list|)
block|;
name|void
name|paint
argument_list|(
name|QPainter
operator|*
name|painter
argument_list|,
specifier|const
name|QRect
operator|&
name|rect
argument_list|)
block|;
name|QOpenGLContext
operator|*
name|m_context
block|;
name|qreal
name|m_rotation
block|;
name|QImage
name|m_prevImage
block|;
name|QImage
name|m_nextImage
block|;
name|qreal
name|m_deltaRotation
block|;
name|Qt
operator|::
name|ScreenOrientation
name|m_targetOrientation
block|;
name|Qt
operator|::
name|ScreenOrientation
name|m_nextTargetOrientation
block|;
name|QPropertyAnimation
operator|*
name|m_animation
block|;
name|QTimer
operator|*
name|m_paintTimer
block|; }
decl_stmt|;
end_decl_stmt
end_unit
