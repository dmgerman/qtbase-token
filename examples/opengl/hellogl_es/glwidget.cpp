begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor **     the names of its contributors may be used to endorse or promote **     products derived from this software without specific prior written **     permission. ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"glwidget.h"
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_include
include|#
directive|include
file|"bubble.h"
end_include
begin_decl_stmt
DECL|variable|bubbleNum
specifier|const
name|int
name|bubbleNum
init|=
literal|8
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|CrossProduct
specifier|inline
name|void
name|CrossProduct
parameter_list|(
name|qreal
modifier|&
name|xOut
parameter_list|,
name|qreal
modifier|&
name|yOut
parameter_list|,
name|qreal
modifier|&
name|zOut
parameter_list|,
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|z1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|,
name|qreal
name|z2
parameter_list|)
block|{
name|xOut
operator|=
name|y1
operator|*
name|z2
operator|-
name|z1
operator|*
name|y2
expr_stmt|;
name|yOut
operator|=
name|z1
operator|*
name|x2
operator|-
name|x1
operator|*
name|z2
expr_stmt|;
name|zOut
operator|=
name|x1
operator|*
name|y2
operator|-
name|y1
operator|*
name|x2
expr_stmt|;
block|}
end_function
begin_function
DECL|function|Normalize
specifier|inline
name|void
name|Normalize
parameter_list|(
name|qreal
modifier|&
name|x
parameter_list|,
name|qreal
modifier|&
name|y
parameter_list|,
name|qreal
modifier|&
name|z
parameter_list|)
block|{
name|qreal
name|l
init|=
name|sqrt
argument_list|(
name|x
operator|*
name|x
operator|+
name|y
operator|*
name|y
operator|+
name|z
operator|*
name|z
argument_list|)
decl_stmt|;
name|x
operator|=
name|x
operator|/
name|l
expr_stmt|;
name|y
operator|=
name|y
operator|/
name|l
expr_stmt|;
name|z
operator|=
name|z
operator|/
name|l
expr_stmt|;
block|}
end_function
begin_constructor
DECL|function|GLWidget
name|GLWidget
operator|::
name|GLWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QGLWidget
argument_list|(
name|parent
argument_list|)
block|{
name|qtLogo
operator|=
literal|true
expr_stmt|;
name|createdVertices
operator|=
literal|0
expr_stmt|;
name|createdNormals
operator|=
literal|0
expr_stmt|;
name|m_vertexNumber
operator|=
literal|0
expr_stmt|;
name|frames
operator|=
literal|0
expr_stmt|;
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_PaintOnScreen
argument_list|)
expr_stmt|;
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_NoSystemBackground
argument_list|)
expr_stmt|;
name|setAutoBufferSwap
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|m_showBubbles
operator|=
literal|true
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~GLWidget
name|GLWidget
operator|::
name|~
name|GLWidget
parameter_list|()
block|{
if|if
condition|(
name|createdVertices
condition|)
operator|delete
index|[]
name|createdVertices
expr_stmt|;
if|if
condition|(
name|createdNormals
condition|)
operator|delete
index|[]
name|createdNormals
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|setScaling
name|void
name|GLWidget
operator|::
name|setScaling
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
if|if
condition|(
name|scale
operator|>
literal|50
condition|)
name|m_fScale
operator|=
literal|1
operator|+
name|qreal
argument_list|(
name|scale
operator|-
literal|50
argument_list|)
operator|/
literal|50
operator|*
literal|0.5
expr_stmt|;
elseif|else
if|if
condition|(
name|scale
operator|<
literal|50
condition|)
name|m_fScale
operator|=
literal|1
operator|-
operator|(
name|qreal
argument_list|(
literal|50
operator|-
name|scale
argument_list|)
operator|/
literal|50
operator|*
literal|1
operator|/
literal|2
operator|)
expr_stmt|;
else|else
name|m_fScale
operator|=
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setLogo
name|void
name|GLWidget
operator|::
name|setLogo
parameter_list|()
block|{
name|qtLogo
operator|=
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTexture
name|void
name|GLWidget
operator|::
name|setTexture
parameter_list|()
block|{
name|qtLogo
operator|=
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showBubbles
name|void
name|GLWidget
operator|::
name|showBubbles
parameter_list|(
name|bool
name|bubbles
parameter_list|)
block|{
name|m_showBubbles
operator|=
name|bubbles
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|paintQtLogo
name|void
name|GLWidget
operator|::
name|paintQtLogo
parameter_list|()
block|{
name|glDisable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glEnableClientState
argument_list|(
name|GL_VERTEX_ARRAY
argument_list|)
expr_stmt|;
name|glVertexPointer
argument_list|(
literal|3
argument_list|,
name|GL_FLOAT
argument_list|,
literal|0
argument_list|,
name|createdVertices
argument_list|)
expr_stmt|;
name|glEnableClientState
argument_list|(
name|GL_NORMAL_ARRAY
argument_list|)
expr_stmt|;
name|glNormalPointer
argument_list|(
name|GL_FLOAT
argument_list|,
literal|0
argument_list|,
name|createdNormals
argument_list|)
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_TRIANGLES
argument_list|,
literal|0
argument_list|,
name|m_vertexNumber
operator|/
literal|3
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|paintTexturedCube
name|void
name|GLWidget
operator|::
name|paintTexturedCube
parameter_list|()
block|{
name|glEnable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glBindTexture
argument_list|(
name|GL_TEXTURE_2D
argument_list|,
name|m_uiTexture
argument_list|)
expr_stmt|;
name|GLfloat
name|afVertices
index|[]
init|=
block|{
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|}
decl_stmt|;
name|glEnableClientState
argument_list|(
name|GL_VERTEX_ARRAY
argument_list|)
expr_stmt|;
name|glVertexPointer
argument_list|(
literal|3
argument_list|,
name|GL_FLOAT
argument_list|,
literal|0
argument_list|,
name|afVertices
argument_list|)
expr_stmt|;
name|GLfloat
name|afTexCoord
index|[]
init|=
block|{
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|}
decl_stmt|;
name|glEnableClientState
argument_list|(
name|GL_TEXTURE_COORD_ARRAY
argument_list|)
expr_stmt|;
name|glTexCoordPointer
argument_list|(
literal|2
argument_list|,
name|GL_FLOAT
argument_list|,
literal|0
argument_list|,
name|afTexCoord
argument_list|)
expr_stmt|;
name|GLfloat
name|afNormals
index|[]
init|=
block|{
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
decl_stmt|;
name|glEnableClientState
argument_list|(
name|GL_NORMAL_ARRAY
argument_list|)
expr_stmt|;
name|glNormalPointer
argument_list|(
name|GL_FLOAT
argument_list|,
literal|0
argument_list|,
name|afNormals
argument_list|)
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_TRIANGLES
argument_list|,
literal|0
argument_list|,
literal|36
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initializeGL
name|void
name|GLWidget
operator|::
name|initializeGL
parameter_list|()
block|{
name|glClearColor
argument_list|(
literal|0.1f
argument_list|,
literal|0.1f
argument_list|,
literal|0.2f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glGenTextures
argument_list|(
literal|1
argument_list|,
operator|&
name|m_uiTexture
argument_list|)
expr_stmt|;
name|m_uiTexture
operator|=
name|bindTexture
argument_list|(
name|QImage
argument_list|(
literal|":/qt.png"
argument_list|)
argument_list|)
expr_stmt|;
name|glTexParameterf
argument_list|(
name|GL_TEXTURE_2D
argument_list|,
name|GL_TEXTURE_MIN_FILTER
argument_list|,
name|GL_LINEAR
argument_list|)
expr_stmt|;
name|glTexParameterf
argument_list|(
name|GL_TEXTURE_2D
argument_list|,
name|GL_TEXTURE_MAG_FILTER
argument_list|,
name|GL_LINEAR
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHT0
argument_list|)
expr_stmt|;
name|GLfloat
name|aLightPosition
index|[]
init|=
block|{
literal|0.0f
block|,
literal|0.3f
block|,
literal|1.0f
block|,
literal|0.0f
block|}
decl_stmt|;
name|glLightfv
argument_list|(
name|GL_LIGHT0
argument_list|,
name|GL_SPOT_DIRECTION
argument_list|,
name|aLightPosition
argument_list|)
expr_stmt|;
name|m_fAngle
operator|=
literal|0
expr_stmt|;
name|m_fScale
operator|=
literal|1
expr_stmt|;
name|createGeometry
argument_list|()
expr_stmt|;
name|createBubbles
argument_list|(
name|bubbleNum
operator|-
name|bubbles
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintGL
name|void
name|GLWidget
operator|::
name|paintGL
parameter_list|()
block|{
name|createBubbles
argument_list|(
name|bubbleNum
operator|-
name|bubbles
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
comment|//! [3]
name|QPainter
name|painter
decl_stmt|;
name|painter
operator|.
name|begin
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
comment|//! [3]
comment|//! [4]
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_TEXTURE
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
comment|//Since OpenGL ES does not support glPush/PopAttrib(GL_ALL_ATTRIB_BITS)
comment|//we have to take care of the states ourselves
name|glClearColor
argument_list|(
literal|0.1f
argument_list|,
literal|0.1f
argument_list|,
literal|0.2f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
operator||
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glTexParameterf
argument_list|(
name|GL_TEXTURE_2D
argument_list|,
name|GL_TEXTURE_MIN_FILTER
argument_list|,
name|GL_LINEAR
argument_list|)
expr_stmt|;
name|glTexParameterf
argument_list|(
name|GL_TEXTURE_2D
argument_list|,
name|GL_TEXTURE_MAG_FILTER
argument_list|,
name|GL_LINEAR
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_LIGHT0
argument_list|)
expr_stmt|;
name|glShadeModel
argument_list|(
name|GL_FLAT
argument_list|)
expr_stmt|;
name|glFrontFace
argument_list|(
name|GL_CW
argument_list|)
expr_stmt|;
name|glCullFace
argument_list|(
name|GL_FRONT
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glRotatef
argument_list|(
name|m_fAngle
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|m_fAngle
argument_list|,
literal|1.0f
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|m_fAngle
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glScalef
argument_list|(
name|m_fScale
argument_list|,
name|m_fScale
argument_list|,
name|m_fScale
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
literal|0.0f
argument_list|,
operator|-
literal|0.2f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|GLfloat
name|matDiff
index|[]
init|=
block|{
literal|0.40f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|}
decl_stmt|;
name|glMaterialfv
argument_list|(
name|GL_FRONT_AND_BACK
argument_list|,
name|GL_DIFFUSE
argument_list|,
name|matDiff
argument_list|)
expr_stmt|;
if|if
condition|(
name|qtLogo
condition|)
name|paintQtLogo
argument_list|()
expr_stmt|;
else|else
name|paintTexturedCube
argument_list|()
expr_stmt|;
comment|//! [4]
comment|//![5]
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_TEXTURE
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glDisable
argument_list|(
name|GL_LIGHTING
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_LIGHT0
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
comment|//![5]
comment|//! [6]
if|if
condition|(
name|m_showBubbles
condition|)
foreach|foreach
control|(
name|Bubble
modifier|*
name|bubble
decl|,
name|bubbles
control|)
block|{
name|bubble
operator|->
name|drawBubble
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
comment|//! [6]
comment|//! [7]
name|QString
name|framesPerSecond
decl_stmt|;
name|framesPerSecond
operator|.
name|setNum
argument_list|(
name|frames
operator|/
operator|(
name|time
operator|.
name|elapsed
argument_list|()
operator|/
literal|1000.0
operator|)
argument_list|,
literal|'f'
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|,
name|framesPerSecond
operator|+
literal|" fps"
argument_list|)
expr_stmt|;
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
comment|//! [7]
comment|//! [8]
name|swapBuffers
argument_list|()
expr_stmt|;
comment|//! [8]
name|QMutableListIterator
argument_list|<
name|Bubble
modifier|*
argument_list|>
name|iter
argument_list|(
name|bubbles
argument_list|)
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Bubble
modifier|*
name|bubble
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|bubble
operator|->
name|move
argument_list|(
name|rect
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
operator|(
name|frames
operator|%
literal|100
operator|)
condition|)
block|{
name|time
operator|.
name|start
argument_list|()
expr_stmt|;
name|frames
operator|=
literal|0
expr_stmt|;
block|}
name|m_fAngle
operator|+=
literal|1.0f
expr_stmt|;
name|frames
operator|++
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createBubbles
name|void
name|GLWidget
operator|::
name|createBubbles
parameter_list|(
name|int
name|number
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|number
condition|;
operator|++
name|i
control|)
block|{
name|QPointF
name|position
argument_list|(
name|width
argument_list|()
operator|*
operator|(
literal|0.1
operator|+
operator|(
literal|0.8
operator|*
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
operator|)
argument_list|,
name|height
argument_list|()
operator|*
operator|(
literal|0.1
operator|+
operator|(
literal|0.8
operator|*
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
operator|)
argument_list|)
decl_stmt|;
name|qreal
name|radius
init|=
name|qMin
argument_list|(
name|width
argument_list|()
argument_list|,
name|height
argument_list|()
argument_list|)
operator|*
operator|(
literal|0.0175
operator|+
literal|0.0875
operator|*
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
decl_stmt|;
name|QPointF
name|velocity
argument_list|(
name|width
argument_list|()
operator|*
literal|0.0175
operator|*
operator|(
operator|-
literal|0.5
operator|+
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
argument_list|,
name|height
argument_list|()
operator|*
literal|0.0175
operator|*
operator|(
operator|-
literal|0.5
operator|+
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
argument_list|)
decl_stmt|;
name|bubbles
operator|.
name|append
argument_list|(
operator|new
name|Bubble
argument_list|(
name|position
argument_list|,
name|radius
argument_list|,
name|velocity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|createGeometry
name|void
name|GLWidget
operator|::
name|createGeometry
parameter_list|()
block|{
name|vertices
operator|.
name|clear
argument_list|()
expr_stmt|;
name|normals
operator|.
name|clear
argument_list|()
expr_stmt|;
name|qreal
name|x1
init|=
operator|+
literal|0.06f
decl_stmt|;
name|qreal
name|y1
init|=
operator|-
literal|0.14f
decl_stmt|;
name|qreal
name|x2
init|=
operator|+
literal|0.14f
decl_stmt|;
name|qreal
name|y2
init|=
operator|-
literal|0.06f
decl_stmt|;
name|qreal
name|x3
init|=
operator|+
literal|0.08f
decl_stmt|;
name|qreal
name|y3
init|=
operator|+
literal|0.00f
decl_stmt|;
name|qreal
name|x4
init|=
operator|+
literal|0.30f
decl_stmt|;
name|qreal
name|y4
init|=
operator|+
literal|0.22f
decl_stmt|;
name|quad
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|,
name|y2
argument_list|,
name|x2
argument_list|,
name|y1
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|x3
argument_list|,
name|y3
argument_list|,
name|x4
argument_list|,
name|y4
argument_list|,
name|y4
argument_list|,
name|x4
argument_list|,
name|y3
argument_list|,
name|x3
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
name|y2
argument_list|,
name|x2
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|y2
argument_list|,
name|x2
argument_list|,
name|y1
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|y1
argument_list|,
name|x1
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x3
argument_list|,
name|y3
argument_list|,
name|x4
argument_list|,
name|y4
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x4
argument_list|,
name|y4
argument_list|,
name|y4
argument_list|,
name|x4
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|y4
argument_list|,
name|x4
argument_list|,
name|y3
argument_list|,
name|x3
argument_list|)
expr_stmt|;
specifier|const
name|qreal
name|Pi
init|=
literal|3.14159f
decl_stmt|;
specifier|const
name|int
name|NumSectors
init|=
literal|100
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NumSectors
condition|;
operator|++
name|i
control|)
block|{
name|qreal
name|angle1
init|=
operator|(
name|i
operator|*
literal|2
operator|*
name|Pi
operator|)
operator|/
name|NumSectors
decl_stmt|;
name|qreal
name|x5
init|=
literal|0.30
operator|*
name|sin
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|y5
init|=
literal|0.30
operator|*
name|cos
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|x6
init|=
literal|0.20
operator|*
name|sin
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|y6
init|=
literal|0.20
operator|*
name|cos
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|angle2
init|=
operator|(
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
literal|2
operator|*
name|Pi
operator|)
operator|/
name|NumSectors
decl_stmt|;
name|qreal
name|x7
init|=
literal|0.20
operator|*
name|sin
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|qreal
name|y7
init|=
literal|0.20
operator|*
name|cos
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|qreal
name|x8
init|=
literal|0.30
operator|*
name|sin
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|qreal
name|y8
init|=
literal|0.30
operator|*
name|cos
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|quad
argument_list|(
name|x5
argument_list|,
name|y5
argument_list|,
name|x6
argument_list|,
name|y6
argument_list|,
name|x7
argument_list|,
name|y7
argument_list|,
name|x8
argument_list|,
name|y8
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x6
argument_list|,
name|y6
argument_list|,
name|x7
argument_list|,
name|y7
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x8
argument_list|,
name|y8
argument_list|,
name|x5
argument_list|,
name|y5
argument_list|)
expr_stmt|;
block|}
comment|//! [1]
name|m_vertexNumber
operator|=
name|vertices
operator|.
name|size
argument_list|()
expr_stmt|;
name|createdVertices
operator|=
operator|new
name|GLfloat
index|[
name|m_vertexNumber
index|]
expr_stmt|;
name|createdNormals
operator|=
operator|new
name|GLfloat
index|[
name|m_vertexNumber
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_vertexNumber
condition|;
name|i
operator|++
control|)
block|{
name|createdVertices
index|[
name|i
index|]
operator|=
name|vertices
operator|.
name|at
argument_list|(
name|i
argument_list|)
operator|*
literal|2
expr_stmt|;
name|createdNormals
index|[
name|i
index|]
operator|=
name|normals
operator|.
name|at
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|vertices
operator|.
name|clear
argument_list|()
expr_stmt|;
name|normals
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|quad
name|void
name|GLWidget
operator|::
name|quad
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|,
name|qreal
name|x3
parameter_list|,
name|qreal
name|y3
parameter_list|,
name|qreal
name|x4
parameter_list|,
name|qreal
name|y4
parameter_list|)
block|{
name|qreal
name|nx
decl_stmt|,
name|ny
decl_stmt|,
name|nz
decl_stmt|;
name|vertices
operator|<<
name|x1
operator|<<
name|y1
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x2
operator|<<
name|y2
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x4
operator|<<
name|y4
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x3
operator|<<
name|y3
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x4
operator|<<
name|y4
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x2
operator|<<
name|y2
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|CrossProduct
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x2
operator|-
name|x1
argument_list|,
name|y2
operator|-
name|y1
argument_list|,
literal|0
argument_list|,
name|x4
operator|-
name|x1
argument_list|,
name|y4
operator|-
name|y1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Normalize
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|vertices
operator|<<
name|x4
operator|<<
name|y4
operator|<<
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x2
operator|<<
name|y2
operator|<<
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x1
operator|<<
name|y1
operator|<<
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x2
operator|<<
name|y2
operator|<<
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x4
operator|<<
name|y4
operator|<<
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x3
operator|<<
name|y3
operator|<<
literal|0.05f
expr_stmt|;
name|CrossProduct
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x2
operator|-
name|x4
argument_list|,
name|y2
operator|-
name|y4
argument_list|,
literal|0
argument_list|,
name|x1
operator|-
name|x4
argument_list|,
name|y1
operator|-
name|y4
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Normalize
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|extrude
name|void
name|GLWidget
operator|::
name|extrude
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|)
block|{
name|qreal
name|nx
decl_stmt|,
name|ny
decl_stmt|,
name|nz
decl_stmt|;
name|vertices
operator|<<
name|x1
operator|<<
name|y1
operator|<<
operator|+
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x2
operator|<<
name|y2
operator|<<
operator|+
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x1
operator|<<
name|y1
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x2
operator|<<
name|y2
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x1
operator|<<
name|y1
operator|<<
operator|-
literal|0.05f
expr_stmt|;
name|vertices
operator|<<
name|x2
operator|<<
name|y2
operator|<<
operator|+
literal|0.05f
expr_stmt|;
name|CrossProduct
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x2
operator|-
name|x1
argument_list|,
name|y2
operator|-
name|y1
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
operator|-
literal|0.1f
argument_list|)
expr_stmt|;
name|Normalize
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
name|normals
operator|<<
name|nx
operator|<<
name|ny
operator|<<
name|nz
expr_stmt|;
block|}
end_function
end_unit
