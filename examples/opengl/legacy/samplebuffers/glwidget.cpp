begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"glwidget.h"
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|GL_MULTISAMPLE
end_ifndef
begin_define
DECL|macro|GL_MULTISAMPLE
define|#
directive|define
name|GL_MULTISAMPLE
value|0x809D
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_constructor
DECL|function|GLWidget
name|GLWidget
operator|::
name|GLWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QGLWidget
argument_list|(
name|QGLFormat
argument_list|(
name|QGL
operator|::
name|SampleBuffers
argument_list|)
argument_list|,
name|parent
argument_list|)
block|{
name|startTimer
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Sample Buffers"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|initializeGL
name|void
name|GLWidget
operator|::
name|initializeGL
parameter_list|()
block|{
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glOrtho
argument_list|(
operator|-
literal|.5
argument_list|,
literal|.5
argument_list|,
literal|.5
argument_list|,
operator|-
literal|.5
argument_list|,
operator|-
literal|1000
argument_list|,
literal|1000
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glClearColor
argument_list|(
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|makeObject
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeGL
name|void
name|GLWidget
operator|::
name|resizeGL
parameter_list|(
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
block|{
name|glViewport
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintGL
name|void
name|GLWidget
operator|::
name|paintGL
parameter_list|()
block|{
specifier|static
name|float
name|rot
init|=
literal|0.0
decl_stmt|;
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
operator||
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glEnable
argument_list|(
name|GL_MULTISAMPLE
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
operator|-
literal|0.25f
argument_list|,
operator|-
literal|0.10f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glScalef
argument_list|(
literal|0.75f
argument_list|,
literal|1.15f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|rot
argument_list|,
literal|0.0f
argument_list|,
literal|0.f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glCallList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glDisable
argument_list|(
name|GL_MULTISAMPLE
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
literal|0.25f
argument_list|,
operator|-
literal|0.10f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glScalef
argument_list|(
literal|0.75f
argument_list|,
literal|1.15f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|rot
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glCallList
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|rot
operator|+=
literal|0.2f
expr_stmt|;
name|qglColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|renderText
argument_list|(
operator|-
literal|0.35
argument_list|,
literal|0.4
argument_list|,
literal|0.0
argument_list|,
literal|"Multisampling enabled"
argument_list|)
expr_stmt|;
name|renderText
argument_list|(
literal|0.15
argument_list|,
literal|0.4
argument_list|,
literal|0.0
argument_list|,
literal|"Multisampling disabled"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|timerEvent
name|void
name|GLWidget
operator|::
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
parameter_list|)
block|{
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|makeObject
name|void
name|GLWidget
operator|::
name|makeObject
parameter_list|()
block|{
name|QColor
name|qtGreen
argument_list|(
name|QColor
operator|::
name|fromCmykF
argument_list|(
literal|0.40
argument_list|,
literal|0.0
argument_list|,
literal|1.0
argument_list|,
literal|0.0
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|double
name|Pi
init|=
literal|3.14159265358979323846
decl_stmt|;
specifier|const
name|int
name|NumSectors
init|=
literal|15
decl_stmt|;
name|GLdouble
name|x1
init|=
operator|+
literal|0.06
decl_stmt|;
name|GLdouble
name|y1
init|=
operator|-
literal|0.14
decl_stmt|;
name|GLdouble
name|x2
init|=
operator|+
literal|0.14
decl_stmt|;
name|GLdouble
name|y2
init|=
operator|-
literal|0.06
decl_stmt|;
name|GLdouble
name|x3
init|=
operator|+
literal|0.08
decl_stmt|;
name|GLdouble
name|y3
init|=
operator|+
literal|0.00
decl_stmt|;
name|GLdouble
name|x4
init|=
operator|+
literal|0.30
decl_stmt|;
name|GLdouble
name|y4
init|=
operator|+
literal|0.22
decl_stmt|;
name|list
operator|=
name|glGenLists
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|glNewList
argument_list|(
name|list
argument_list|,
name|GL_COMPILE
argument_list|)
expr_stmt|;
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NumSectors
condition|;
operator|++
name|i
control|)
block|{
name|double
name|angle1
init|=
operator|(
name|i
operator|*
literal|2
operator|*
name|Pi
operator|)
operator|/
name|NumSectors
decl_stmt|;
name|GLdouble
name|x5
init|=
literal|0.30
operator|*
name|sin
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|GLdouble
name|y5
init|=
literal|0.30
operator|*
name|cos
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|GLdouble
name|x6
init|=
literal|0.20
operator|*
name|sin
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|GLdouble
name|y6
init|=
literal|0.20
operator|*
name|cos
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|double
name|angle2
init|=
operator|(
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
literal|2
operator|*
name|Pi
operator|)
operator|/
name|NumSectors
decl_stmt|;
name|GLdouble
name|x7
init|=
literal|0.20
operator|*
name|sin
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|GLdouble
name|y7
init|=
literal|0.20
operator|*
name|cos
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|GLdouble
name|x8
init|=
literal|0.30
operator|*
name|sin
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|GLdouble
name|y8
init|=
literal|0.30
operator|*
name|cos
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|qglColor
argument_list|(
name|qtGreen
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|GL_QUADS
argument_list|,
name|x5
argument_list|,
name|y5
argument_list|,
name|x6
argument_list|,
name|y6
argument_list|,
name|x7
argument_list|,
name|y7
argument_list|,
name|x8
argument_list|,
name|y8
argument_list|)
expr_stmt|;
name|qglColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|GL_LINE_LOOP
argument_list|,
name|x5
argument_list|,
name|y5
argument_list|,
name|x6
argument_list|,
name|y6
argument_list|,
name|x7
argument_list|,
name|y7
argument_list|,
name|x8
argument_list|,
name|y8
argument_list|)
expr_stmt|;
block|}
name|qglColor
argument_list|(
name|qtGreen
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|GL_QUADS
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|,
name|y2
argument_list|,
name|x2
argument_list|,
name|y1
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|GL_QUADS
argument_list|,
name|x3
argument_list|,
name|y3
argument_list|,
name|x4
argument_list|,
name|y4
argument_list|,
name|y4
argument_list|,
name|x4
argument_list|,
name|y3
argument_list|,
name|x3
argument_list|)
expr_stmt|;
name|qglColor
argument_list|(
name|Qt
operator|::
name|black
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|GL_LINE_LOOP
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|,
name|y2
argument_list|,
name|x2
argument_list|,
name|y1
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|GL_LINE_LOOP
argument_list|,
name|x3
argument_list|,
name|y3
argument_list|,
name|x4
argument_list|,
name|y4
argument_list|,
name|y4
argument_list|,
name|x4
argument_list|,
name|y3
argument_list|,
name|x3
argument_list|)
expr_stmt|;
block|}
name|glEndList
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|quad
name|void
name|GLWidget
operator|::
name|quad
parameter_list|(
name|GLenum
name|primitive
parameter_list|,
name|GLdouble
name|x1
parameter_list|,
name|GLdouble
name|y1
parameter_list|,
name|GLdouble
name|x2
parameter_list|,
name|GLdouble
name|y2
parameter_list|,
name|GLdouble
name|x3
parameter_list|,
name|GLdouble
name|y3
parameter_list|,
name|GLdouble
name|x4
parameter_list|,
name|GLdouble
name|y4
parameter_list|)
block|{
name|glBegin
argument_list|(
name|primitive
argument_list|)
expr_stmt|;
block|{
name|glVertex2d
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|glVertex2d
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
name|glVertex2d
argument_list|(
name|x3
argument_list|,
name|y3
argument_list|)
expr_stmt|;
name|glVertex2d
argument_list|(
name|x4
argument_list|,
name|y4
argument_list|)
expr_stmt|;
block|}
name|glEnd
argument_list|()
expr_stmt|;
block|}
end_function
end_unit
