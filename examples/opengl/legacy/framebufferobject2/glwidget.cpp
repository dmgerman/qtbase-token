begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"glwidget.h"
end_include
begin_include
include|#
directive|include
file|<QtGui/QImage>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_decl_stmt
DECL|variable|cubeArray
specifier|static
name|GLint
name|cubeArray
index|[]
index|[
literal|3
index|]
init|=
block|{
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|0
block|,
literal|1
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|cubeTextureArray
specifier|static
name|GLint
name|cubeTextureArray
index|[]
index|[
literal|2
index|]
init|=
block|{
block|{
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|0
block|}
block|,
block|{
literal|0
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|faceArray
specifier|static
name|GLint
name|faceArray
index|[]
index|[
literal|2
index|]
init|=
block|{
block|{
literal|1
block|,
operator|-
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|}
block|,
block|{
operator|-
literal|1
block|,
literal|1
block|}
block|,
block|{
operator|-
literal|1
block|,
operator|-
literal|1
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|colorArray
specifier|static
name|GLubyte
name|colorArray
index|[]
index|[
literal|4
index|]
init|=
block|{
block|{
literal|102
block|,
literal|176
block|,
literal|54
block|,
literal|255
block|}
block|,
block|{
literal|81
block|,
literal|141
block|,
literal|41
block|,
literal|255
block|}
block|,
block|{
literal|62
block|,
literal|108
block|,
literal|32
block|,
literal|255
block|}
block|,
block|{
literal|45
block|,
literal|79
block|,
literal|23
block|,
literal|255
block|}
block|}
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|GLWidget
name|GLWidget
operator|::
name|GLWidget
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QGLWidget
argument_list|(
name|QGLFormat
argument_list|(
name|QGL
operator|::
name|SampleBuffers
argument_list|)
argument_list|,
name|parent
argument_list|)
block|{
comment|// create the framebuffer object - make sure to have a current
comment|// context before creating it
name|makeCurrent
argument_list|()
expr_stmt|;
name|fbo
operator|=
operator|new
name|QGLFramebufferObject
argument_list|(
literal|512
argument_list|,
literal|512
argument_list|)
expr_stmt|;
name|timerId
operator|=
name|startTimer
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"OpenGL framebuffer objects 2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~GLWidget
name|GLWidget
operator|::
name|~
name|GLWidget
parameter_list|()
block|{
name|glDeleteLists
argument_list|(
name|pbufferList
argument_list|,
literal|1
argument_list|)
expr_stmt|;
operator|delete
name|fbo
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|initializeGL
name|void
name|GLWidget
operator|::
name|initializeGL
parameter_list|()
block|{
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glEnableClientState
argument_list|(
name|GL_VERTEX_ARRAY
argument_list|)
expr_stmt|;
name|glEnableClientState
argument_list|(
name|GL_TEXTURE_COORD_ARRAY
argument_list|)
expr_stmt|;
name|glVertexPointer
argument_list|(
literal|3
argument_list|,
name|GL_INT
argument_list|,
literal|0
argument_list|,
name|cubeArray
argument_list|)
expr_stmt|;
name|glTexCoordPointer
argument_list|(
literal|2
argument_list|,
name|GL_INT
argument_list|,
literal|0
argument_list|,
name|cubeTextureArray
argument_list|)
expr_stmt|;
name|glColorPointer
argument_list|(
literal|4
argument_list|,
name|GL_UNSIGNED_BYTE
argument_list|,
literal|0
argument_list|,
name|colorArray
argument_list|)
expr_stmt|;
name|glBlendFunc
argument_list|(
name|GL_SRC_ALPHA
argument_list|,
name|GL_ONE_MINUS_SRC_ALPHA
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_BLEND
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|glClearColor
argument_list|(
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|pbufferList
operator|=
name|glGenLists
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|glNewList
argument_list|(
name|pbufferList
argument_list|,
name|GL_COMPILE
argument_list|)
expr_stmt|;
block|{
name|glClear
argument_list|(
name|GL_DEPTH_BUFFER_BIT
operator||
name|GL_COLOR_BUFFER_BIT
argument_list|)
expr_stmt|;
comment|// draw cube background
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glTranslatef
argument_list|(
literal|0.5f
argument_list|,
literal|0.5f
argument_list|,
operator|-
literal|2.0f
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glEnableClientState
argument_list|(
name|GL_COLOR_ARRAY
argument_list|)
expr_stmt|;
name|glVertexPointer
argument_list|(
literal|2
argument_list|,
name|GL_INT
argument_list|,
literal|0
argument_list|,
name|faceArray
argument_list|)
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_QUADS
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|glVertexPointer
argument_list|(
literal|3
argument_list|,
name|GL_INT
argument_list|,
literal|0
argument_list|,
name|cubeArray
argument_list|)
expr_stmt|;
name|glDisableClientState
argument_list|(
name|GL_COLOR_ARRAY
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_TEXTURE_2D
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
comment|// draw cube
name|glTranslatef
argument_list|(
literal|0.5f
argument_list|,
literal|0.5f
argument_list|,
literal|0.5f
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
literal|3.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
operator|-
literal|0.5f
argument_list|,
operator|-
literal|0.5f
argument_list|,
operator|-
literal|0.5f
argument_list|)
expr_stmt|;
name|glColor4f
argument_list|(
literal|0.9f
argument_list|,
literal|0.9f
argument_list|,
literal|0.9f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_QUADS
argument_list|,
literal|0
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
comment|// this state is popped back in the paintGL() function
block|}
name|glEndList
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
operator|++
name|i
control|)
block|{
name|yOffs
index|[
name|i
index|]
operator|=
literal|0.0f
expr_stmt|;
name|xInc
index|[
name|i
index|]
operator|=
literal|0.005f
expr_stmt|;
name|rot
index|[
name|i
index|]
operator|=
literal|0.0f
expr_stmt|;
block|}
name|xOffs
index|[
literal|0
index|]
operator|=
literal|0.0f
expr_stmt|;
name|xOffs
index|[
literal|1
index|]
operator|=
literal|0.5f
expr_stmt|;
name|xOffs
index|[
literal|2
index|]
operator|=
literal|1.0f
expr_stmt|;
name|cubeTexture
operator|=
name|bindTexture
argument_list|(
name|QImage
argument_list|(
literal|":res/cubelogo.png"
argument_list|)
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
comment|// push to avoid stack underflow in the first paintGL() call
block|}
end_function
begin_function
DECL|function|resizeGL
name|void
name|GLWidget
operator|::
name|resizeGL
parameter_list|(
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
block|{
name|glViewport
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|float
name|aspect
init|=
name|w
operator|/
call|(
name|float
call|)
argument_list|(
name|h
condition|?
name|h
else|:
literal|1
argument_list|)
decl_stmt|;
name|glFrustum
argument_list|(
operator|-
name|aspect
argument_list|,
name|aspect
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
operator|-
literal|0.5f
argument_list|,
operator|-
literal|0.5f
argument_list|,
operator|-
literal|0.5f
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
operator|-
literal|15.0f
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintGL
name|void
name|GLWidget
operator|::
name|paintGL
parameter_list|()
block|{
name|glPopMatrix
argument_list|()
expr_stmt|;
comment|// pop the matrix pushed in the pbuffer list
comment|// push the projection matrix and the entire GL state before
comment|// doing any rendering into our framebuffer object
name|glPushAttrib
argument_list|(
name|GL_ALL_ATTRIB_BITS
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glViewport
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|fbo
operator|->
name|size
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
name|fbo
operator|->
name|size
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glOrtho
argument_list|(
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|,
operator|-
literal|99
argument_list|,
literal|99
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
operator|-
literal|0.5f
argument_list|,
operator|-
literal|0.5f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
comment|// render to the framebuffer object
name|fbo
operator|->
name|bind
argument_list|()
expr_stmt|;
name|glBindTexture
argument_list|(
name|GL_TEXTURE_2D
argument_list|,
name|cubeTexture
argument_list|)
expr_stmt|;
name|glCallList
argument_list|(
name|pbufferList
argument_list|)
expr_stmt|;
name|fbo
operator|->
name|release
argument_list|()
expr_stmt|;
comment|// pop the projection matrix and GL state back for rendering
comment|// to the actual widget
name|glPopAttrib
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glBindTexture
argument_list|(
name|GL_TEXTURE_2D
argument_list|,
name|fbo
operator|->
name|texture
argument_list|()
argument_list|)
expr_stmt|;
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
operator||
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
comment|// draw the background
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_PROJECTION
argument_list|)
expr_stmt|;
name|glPushMatrix
argument_list|()
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glVertexPointer
argument_list|(
literal|2
argument_list|,
name|GL_INT
argument_list|,
literal|0
argument_list|,
name|faceArray
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
operator|-
literal|1.2f
argument_list|,
operator|-
literal|0.8f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|glScalef
argument_list|(
literal|0.2f
argument_list|,
literal|0.2f
argument_list|,
literal|0.2f
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
literal|5
condition|;
operator|++
name|y
control|)
block|{
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
literal|5
condition|;
operator|++
name|x
control|)
block|{
name|glTranslatef
argument_list|(
literal|2.0f
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|glColor4f
argument_list|(
literal|0.8f
argument_list|,
literal|0.8f
argument_list|,
literal|0.8f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_QUADS
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
name|glTranslatef
argument_list|(
operator|-
literal|10.0f
argument_list|,
literal|2.0f
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|glVertexPointer
argument_list|(
literal|3
argument_list|,
name|GL_INT
argument_list|,
literal|0
argument_list|,
name|cubeArray
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
comment|// draw the bouncing cubes
name|drawCube
argument_list|(
literal|0
argument_list|,
literal|0.0f
argument_list|,
literal|1.5f
argument_list|,
literal|2.5f
argument_list|,
literal|1.5f
argument_list|)
expr_stmt|;
name|drawCube
argument_list|(
literal|1
argument_list|,
literal|1.0f
argument_list|,
literal|2.0f
argument_list|,
literal|2.5f
argument_list|,
literal|2.0f
argument_list|)
expr_stmt|;
name|drawCube
argument_list|(
literal|2
argument_list|,
literal|2.0f
argument_list|,
literal|3.5f
argument_list|,
literal|2.5f
argument_list|,
literal|2.5f
argument_list|)
expr_stmt|;
name|glPopMatrix
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|drawCube
name|void
name|GLWidget
operator|::
name|drawCube
parameter_list|(
name|int
name|i
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|rotation
parameter_list|,
name|GLfloat
name|jmp
parameter_list|,
name|GLfloat
name|amp
parameter_list|)
block|{
name|glMatrixMode
argument_list|(
name|GL_MODELVIEW
argument_list|)
expr_stmt|;
name|glLoadIdentity
argument_list|()
expr_stmt|;
name|glTranslatef
argument_list|(
name|xOffs
index|[
name|i
index|]
argument_list|,
name|yOffs
index|[
name|i
index|]
argument_list|,
name|z
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
literal|0.5f
argument_list|,
literal|0.5f
argument_list|,
literal|0.5f
argument_list|)
expr_stmt|;
name|GLfloat
name|scale
init|=
literal|0.75
operator|+
name|i
operator|*
operator|(
literal|0.25f
operator|/
literal|2
operator|)
decl_stmt|;
name|glScalef
argument_list|(
name|scale
argument_list|,
name|scale
argument_list|,
name|scale
argument_list|)
expr_stmt|;
name|glRotatef
argument_list|(
name|rot
index|[
name|i
index|]
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|glTranslatef
argument_list|(
operator|-
literal|0.5f
argument_list|,
operator|-
literal|0.5f
argument_list|,
operator|-
literal|0.5f
argument_list|)
expr_stmt|;
name|glColor4f
argument_list|(
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|1.0f
argument_list|,
literal|0.8f
argument_list|)
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_QUADS
argument_list|,
literal|0
argument_list|,
literal|24
argument_list|)
expr_stmt|;
if|if
condition|(
name|xOffs
index|[
name|i
index|]
operator|>
literal|1.0f
operator|||
name|xOffs
index|[
name|i
index|]
operator|<
operator|-
literal|1.0f
condition|)
block|{
name|xInc
index|[
name|i
index|]
operator|=
operator|-
name|xInc
index|[
name|i
index|]
expr_stmt|;
name|xOffs
index|[
name|i
index|]
operator|=
name|xOffs
index|[
name|i
index|]
operator|>
literal|1.0f
condition|?
literal|1.0f
else|:
operator|-
literal|1.0f
expr_stmt|;
block|}
name|xOffs
index|[
name|i
index|]
operator|+=
name|xInc
index|[
name|i
index|]
expr_stmt|;
name|yOffs
index|[
name|i
index|]
operator|=
name|qAbs
argument_list|(
name|cos
argument_list|(
operator|(
operator|-
literal|3.141592f
operator|*
name|jmp
operator|)
operator|*
name|xOffs
index|[
name|i
index|]
argument_list|)
operator|*
name|amp
argument_list|)
operator|-
literal|1
expr_stmt|;
name|rot
index|[
name|i
index|]
operator|+=
name|rotation
expr_stmt|;
block|}
end_function
end_unit
