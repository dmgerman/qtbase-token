begin_unit
begin_comment
comment|/****************************************************************************  **  ** Copyright (C) 2015 The Qt Company Ltd.  ** Contact: http://www.qt.io/licensing/  **  ** This file is part of the examples of the Qt Toolkit.  **  ** $QT_BEGIN_LICENSE:BSD$  ** You may use this file under the terms of the BSD license as follows:  **  ** "Redistribution and use in source and binary forms, with or without  ** modification, are permitted provided that the following conditions are  ** met:  **   * Redistributions of source code must retain the above copyright  **     notice, this list of conditions and the following disclaimer.  **   * Redistributions in binary form must reproduce the above copyright  **     notice, this list of conditions and the following disclaimer in  **     the documentation and/or other materials provided with the  **     distribution.  **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the  **     names of its contributors may be used to endorse or promote products  **     derived from this software without specific prior written permission.  **  **  ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."  **  ** $QT_END_LICENSE$  **  ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"glwidget.h"
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QPaintEngine>
end_include
begin_include
include|#
directive|include
file|<QOpenGLShaderProgram>
end_include
begin_include
include|#
directive|include
file|<QOpenGLTexture>
end_include
begin_include
include|#
directive|include
file|<QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_include
include|#
directive|include
file|"bubble.h"
end_include
begin_decl_stmt
DECL|variable|bubbleNum
specifier|const
name|int
name|bubbleNum
init|=
literal|8
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|GLWidget
name|GLWidget
operator|::
name|GLWidget
parameter_list|(
name|MainWindow
modifier|*
name|mw
parameter_list|,
name|bool
name|button
parameter_list|,
specifier|const
name|QColor
modifier|&
name|background
parameter_list|)
member_init_list|:
name|m_mainWindow
argument_list|(
name|mw
argument_list|)
member_init_list|,
name|m_showBubbles
argument_list|(
literal|true
argument_list|)
member_init_list|,
name|m_qtLogo
argument_list|(
literal|true
argument_list|)
member_init_list|,
name|m_frames
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_program1
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_program2
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_texture
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_transparent
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|m_btn
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|m_hasButton
argument_list|(
name|button
argument_list|)
member_init_list|,
name|m_background
argument_list|(
name|background
argument_list|)
block|{
name|setMinimumSize
argument_list|(
literal|300
argument_list|,
literal|250
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~GLWidget
name|GLWidget
operator|::
name|~
name|GLWidget
parameter_list|()
block|{
name|qDeleteAll
argument_list|(
name|m_bubbles
argument_list|)
expr_stmt|;
comment|// And now release all OpenGL resources.
name|makeCurrent
argument_list|()
expr_stmt|;
operator|delete
name|m_texture
expr_stmt|;
operator|delete
name|m_program1
expr_stmt|;
operator|delete
name|m_program2
expr_stmt|;
operator|delete
name|m_vshader1
expr_stmt|;
operator|delete
name|m_fshader1
expr_stmt|;
operator|delete
name|m_vshader2
expr_stmt|;
operator|delete
name|m_fshader2
expr_stmt|;
name|m_vbo1
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|m_vbo2
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|doneCurrent
argument_list|()
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|setScaling
name|void
name|GLWidget
operator|::
name|setScaling
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
if|if
condition|(
name|scale
operator|>
literal|30
condition|)
name|m_fScale
operator|=
literal|1
operator|+
name|qreal
argument_list|(
name|scale
operator|-
literal|30
argument_list|)
operator|/
literal|30
operator|*
literal|0.25
expr_stmt|;
elseif|else
if|if
condition|(
name|scale
operator|<
literal|30
condition|)
name|m_fScale
operator|=
literal|1
operator|-
operator|(
name|qreal
argument_list|(
literal|30
operator|-
name|scale
argument_list|)
operator|/
literal|30
operator|*
literal|0.25
operator|)
expr_stmt|;
else|else
name|m_fScale
operator|=
literal|1
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setLogo
name|void
name|GLWidget
operator|::
name|setLogo
parameter_list|()
block|{
name|m_qtLogo
operator|=
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTexture
name|void
name|GLWidget
operator|::
name|setTexture
parameter_list|()
block|{
name|m_qtLogo
operator|=
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setShowBubbles
name|void
name|GLWidget
operator|::
name|setShowBubbles
parameter_list|(
name|bool
name|bubbles
parameter_list|)
block|{
name|m_showBubbles
operator|=
name|bubbles
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintQtLogo
name|void
name|GLWidget
operator|::
name|paintQtLogo
parameter_list|()
block|{
name|m_program1
operator|->
name|enableAttributeArray
argument_list|(
name|m_vertexAttr1
argument_list|)
expr_stmt|;
name|m_program1
operator|->
name|enableAttributeArray
argument_list|(
name|m_normalAttr1
argument_list|)
expr_stmt|;
name|m_vbo1
operator|.
name|bind
argument_list|()
expr_stmt|;
comment|// The data in the buffer is placed like this:
comment|// vertex1.x, vertex1.y, vertex1.z, normal1.x, normal1.y, normal1.z, vertex2.x, ...
name|m_program1
operator|->
name|setAttributeBuffer
argument_list|(
name|m_vertexAttr1
argument_list|,
name|GL_FLOAT
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
literal|6
operator|*
sizeof|sizeof
argument_list|(
name|GLfloat
argument_list|)
argument_list|)
expr_stmt|;
name|m_program1
operator|->
name|setAttributeBuffer
argument_list|(
name|m_normalAttr1
argument_list|,
name|GL_FLOAT
argument_list|,
literal|3
operator|*
sizeof|sizeof
argument_list|(
name|GLfloat
argument_list|)
argument_list|,
literal|3
argument_list|,
literal|6
operator|*
sizeof|sizeof
argument_list|(
name|GLfloat
argument_list|)
argument_list|)
expr_stmt|;
name|m_vbo1
operator|.
name|release
argument_list|()
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_TRIANGLES
argument_list|,
literal|0
argument_list|,
name|m_vertices
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|m_program1
operator|->
name|disableAttributeArray
argument_list|(
name|m_normalAttr1
argument_list|)
expr_stmt|;
name|m_program1
operator|->
name|disableAttributeArray
argument_list|(
name|m_vertexAttr1
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintTexturedCube
name|void
name|GLWidget
operator|::
name|paintTexturedCube
parameter_list|()
block|{
name|m_texture
operator|->
name|bind
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|m_vbo2
operator|.
name|isCreated
argument_list|()
condition|)
block|{
specifier|static
name|GLfloat
name|afVertices
index|[]
init|=
block|{
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|,
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
operator|-
literal|0.5
block|,
literal|0.5
block|}
decl_stmt|;
specifier|static
name|GLfloat
name|afTexCoord
index|[]
init|=
block|{
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|0.0f
block|,
literal|0.0f
block|,
literal|1.0f
block|,
literal|1.0f
block|}
decl_stmt|;
name|GLfloat
name|afNormals
index|[]
init|=
block|{
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
operator|-
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|0
block|}
decl_stmt|;
name|m_vbo2
operator|.
name|create
argument_list|()
expr_stmt|;
name|m_vbo2
operator|.
name|bind
argument_list|()
expr_stmt|;
name|m_vbo2
operator|.
name|allocate
argument_list|(
literal|36
operator|*
literal|8
operator|*
sizeof|sizeof
argument_list|(
name|GLfloat
argument_list|)
argument_list|)
expr_stmt|;
name|m_vbo2
operator|.
name|write
argument_list|(
literal|0
argument_list|,
name|afVertices
argument_list|,
sizeof|sizeof
argument_list|(
name|afVertices
argument_list|)
argument_list|)
expr_stmt|;
name|m_vbo2
operator|.
name|write
argument_list|(
sizeof|sizeof
argument_list|(
name|afVertices
argument_list|)
argument_list|,
name|afTexCoord
argument_list|,
sizeof|sizeof
argument_list|(
name|afTexCoord
argument_list|)
argument_list|)
expr_stmt|;
name|m_vbo2
operator|.
name|write
argument_list|(
sizeof|sizeof
argument_list|(
name|afVertices
argument_list|)
operator|+
sizeof|sizeof
argument_list|(
name|afTexCoord
argument_list|)
argument_list|,
name|afNormals
argument_list|,
sizeof|sizeof
argument_list|(
name|afNormals
argument_list|)
argument_list|)
expr_stmt|;
name|m_vbo2
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
name|m_program2
operator|->
name|setUniformValue
argument_list|(
name|m_textureUniform2
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// use texture unit 0
name|m_program2
operator|->
name|enableAttributeArray
argument_list|(
name|m_vertexAttr2
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|enableAttributeArray
argument_list|(
name|m_normalAttr2
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|enableAttributeArray
argument_list|(
name|m_texCoordAttr2
argument_list|)
expr_stmt|;
name|m_vbo2
operator|.
name|bind
argument_list|()
expr_stmt|;
comment|// In the buffer we first have 36 vertices (3 floats for each), then 36 texture
comment|// coordinates (2 floats for each), then 36 normals (3 floats for each).
name|m_program2
operator|->
name|setAttributeBuffer
argument_list|(
name|m_vertexAttr2
argument_list|,
name|GL_FLOAT
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|setAttributeBuffer
argument_list|(
name|m_texCoordAttr2
argument_list|,
name|GL_FLOAT
argument_list|,
literal|36
operator|*
literal|3
operator|*
sizeof|sizeof
argument_list|(
name|GLfloat
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|setAttributeBuffer
argument_list|(
name|m_normalAttr2
argument_list|,
name|GL_FLOAT
argument_list|,
literal|36
operator|*
literal|5
operator|*
sizeof|sizeof
argument_list|(
name|GLfloat
argument_list|)
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|m_vbo2
operator|.
name|release
argument_list|()
expr_stmt|;
name|glDrawArrays
argument_list|(
name|GL_TRIANGLES
argument_list|,
literal|0
argument_list|,
literal|36
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|disableAttributeArray
argument_list|(
name|m_vertexAttr2
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|disableAttributeArray
argument_list|(
name|m_normalAttr2
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|disableAttributeArray
argument_list|(
name|m_texCoordAttr2
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|initializeGL
name|void
name|GLWidget
operator|::
name|initializeGL
parameter_list|()
block|{
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
name|m_texture
operator|=
operator|new
name|QOpenGLTexture
argument_list|(
name|QImage
argument_list|(
literal|":/qt.png"
argument_list|)
argument_list|)
expr_stmt|;
name|m_vshader1
operator|=
operator|new
name|QOpenGLShader
argument_list|(
name|QOpenGLShader
operator|::
name|Vertex
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|vsrc1
init|=
literal|"attribute highp vec4 vertex;\n"
literal|"attribute mediump vec3 normal;\n"
literal|"uniform mediump mat4 matrix;\n"
literal|"varying mediump vec4 color;\n"
literal|"void main(void)\n"
literal|"{\n"
literal|"    vec3 toLight = normalize(vec3(0.0, 0.3, 1.0));\n"
literal|"    float angle = max(dot(normal, toLight), 0.0);\n"
literal|"    vec3 col = vec3(0.40, 1.0, 0.0);\n"
literal|"    color = vec4(col * 0.2 + col * 0.8 * angle, 1.0);\n"
literal|"    color = clamp(color, 0.0, 1.0);\n"
literal|"    gl_Position = matrix * vertex;\n"
literal|"}\n"
decl_stmt|;
name|m_vshader1
operator|->
name|compileSourceCode
argument_list|(
name|vsrc1
argument_list|)
expr_stmt|;
name|m_fshader1
operator|=
operator|new
name|QOpenGLShader
argument_list|(
name|QOpenGLShader
operator|::
name|Fragment
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|fsrc1
init|=
literal|"varying mediump vec4 color;\n"
literal|"void main(void)\n"
literal|"{\n"
literal|"    gl_FragColor = color;\n"
literal|"}\n"
decl_stmt|;
name|m_fshader1
operator|->
name|compileSourceCode
argument_list|(
name|fsrc1
argument_list|)
expr_stmt|;
name|m_program1
operator|=
operator|new
name|QOpenGLShaderProgram
expr_stmt|;
name|m_program1
operator|->
name|addShader
argument_list|(
name|m_vshader1
argument_list|)
expr_stmt|;
name|m_program1
operator|->
name|addShader
argument_list|(
name|m_fshader1
argument_list|)
expr_stmt|;
name|m_program1
operator|->
name|link
argument_list|()
expr_stmt|;
name|m_vertexAttr1
operator|=
name|m_program1
operator|->
name|attributeLocation
argument_list|(
literal|"vertex"
argument_list|)
expr_stmt|;
name|m_normalAttr1
operator|=
name|m_program1
operator|->
name|attributeLocation
argument_list|(
literal|"normal"
argument_list|)
expr_stmt|;
name|m_matrixUniform1
operator|=
name|m_program1
operator|->
name|uniformLocation
argument_list|(
literal|"matrix"
argument_list|)
expr_stmt|;
name|m_vshader2
operator|=
operator|new
name|QOpenGLShader
argument_list|(
name|QOpenGLShader
operator|::
name|Vertex
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|vsrc2
init|=
literal|"attribute highp vec4 vertex;\n"
literal|"attribute highp vec4 texCoord;\n"
literal|"attribute mediump vec3 normal;\n"
literal|"uniform mediump mat4 matrix;\n"
literal|"varying highp vec4 texc;\n"
literal|"varying mediump float angle;\n"
literal|"void main(void)\n"
literal|"{\n"
literal|"    vec3 toLight = normalize(vec3(0.0, 0.3, 1.0));\n"
literal|"    angle = max(dot(normal, toLight), 0.0);\n"
literal|"    gl_Position = matrix * vertex;\n"
literal|"    texc = texCoord;\n"
literal|"}\n"
decl_stmt|;
name|m_vshader2
operator|->
name|compileSourceCode
argument_list|(
name|vsrc2
argument_list|)
expr_stmt|;
name|m_fshader2
operator|=
operator|new
name|QOpenGLShader
argument_list|(
name|QOpenGLShader
operator|::
name|Fragment
argument_list|)
expr_stmt|;
specifier|const
name|char
modifier|*
name|fsrc2
init|=
literal|"varying highp vec4 texc;\n"
literal|"uniform sampler2D tex;\n"
literal|"varying mediump float angle;\n"
literal|"void main(void)\n"
literal|"{\n"
literal|"    highp vec3 color = texture2D(tex, texc.st).rgb;\n"
literal|"    color = color * 0.2 + color * 0.8 * angle;\n"
literal|"    gl_FragColor = vec4(clamp(color, 0.0, 1.0), 1.0);\n"
literal|"}\n"
decl_stmt|;
name|m_fshader2
operator|->
name|compileSourceCode
argument_list|(
name|fsrc2
argument_list|)
expr_stmt|;
name|m_program2
operator|=
operator|new
name|QOpenGLShaderProgram
expr_stmt|;
name|m_program2
operator|->
name|addShader
argument_list|(
name|m_vshader2
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|addShader
argument_list|(
name|m_fshader2
argument_list|)
expr_stmt|;
name|m_program2
operator|->
name|link
argument_list|()
expr_stmt|;
name|m_vertexAttr2
operator|=
name|m_program2
operator|->
name|attributeLocation
argument_list|(
literal|"vertex"
argument_list|)
expr_stmt|;
name|m_normalAttr2
operator|=
name|m_program2
operator|->
name|attributeLocation
argument_list|(
literal|"normal"
argument_list|)
expr_stmt|;
name|m_texCoordAttr2
operator|=
name|m_program2
operator|->
name|attributeLocation
argument_list|(
literal|"texCoord"
argument_list|)
expr_stmt|;
name|m_matrixUniform2
operator|=
name|m_program2
operator|->
name|uniformLocation
argument_list|(
literal|"matrix"
argument_list|)
expr_stmt|;
name|m_textureUniform2
operator|=
name|m_program2
operator|->
name|uniformLocation
argument_list|(
literal|"tex"
argument_list|)
expr_stmt|;
name|m_fAngle
operator|=
literal|0
expr_stmt|;
name|m_fScale
operator|=
literal|1
expr_stmt|;
name|createGeometry
argument_list|()
expr_stmt|;
comment|// Use a vertex buffer object. Client-side pointers are old-school and should be avoided.
name|m_vbo1
operator|.
name|create
argument_list|()
expr_stmt|;
name|m_vbo1
operator|.
name|bind
argument_list|()
expr_stmt|;
comment|// For the cube all the data belonging to the texture coordinates and
comment|// normals is placed separately, after the vertices. Here, for the Qt logo,
comment|// let's do something different and potentially more efficient: create a
comment|// properly interleaved data set.
specifier|const
name|int
name|vertexCount
init|=
name|m_vertices
operator|.
name|count
argument_list|()
decl_stmt|;
name|QVector
argument_list|<
name|GLfloat
argument_list|>
name|buf
decl_stmt|;
name|buf
operator|.
name|resize
argument_list|(
name|vertexCount
operator|*
literal|3
operator|*
literal|2
argument_list|)
expr_stmt|;
name|GLfloat
modifier|*
name|p
init|=
name|buf
operator|.
name|data
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|vertexCount
condition|;
operator|++
name|i
control|)
block|{
operator|*
name|p
operator|++
operator|=
name|m_vertices
index|[
name|i
index|]
operator|.
name|x
argument_list|()
expr_stmt|;
operator|*
name|p
operator|++
operator|=
name|m_vertices
index|[
name|i
index|]
operator|.
name|y
argument_list|()
expr_stmt|;
operator|*
name|p
operator|++
operator|=
name|m_vertices
index|[
name|i
index|]
operator|.
name|z
argument_list|()
expr_stmt|;
operator|*
name|p
operator|++
operator|=
name|m_normals
index|[
name|i
index|]
operator|.
name|x
argument_list|()
expr_stmt|;
operator|*
name|p
operator|++
operator|=
name|m_normals
index|[
name|i
index|]
operator|.
name|y
argument_list|()
expr_stmt|;
operator|*
name|p
operator|++
operator|=
name|m_normals
index|[
name|i
index|]
operator|.
name|z
argument_list|()
expr_stmt|;
block|}
name|m_vbo1
operator|.
name|allocate
argument_list|(
name|buf
operator|.
name|constData
argument_list|()
argument_list|,
name|buf
operator|.
name|count
argument_list|()
operator|*
sizeof|sizeof
argument_list|(
name|GLfloat
argument_list|)
argument_list|)
expr_stmt|;
name|m_vbo1
operator|.
name|release
argument_list|()
expr_stmt|;
name|createBubbles
argument_list|(
name|bubbleNum
operator|-
name|m_bubbles
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|paintGL
name|void
name|GLWidget
operator|::
name|paintGL
parameter_list|()
block|{
name|createBubbles
argument_list|(
name|bubbleNum
operator|-
name|m_bubbles
operator|.
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|QPainter
name|painter
decl_stmt|;
name|painter
operator|.
name|begin
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|painter
operator|.
name|beginNativePainting
argument_list|()
expr_stmt|;
name|glClearColor
argument_list|(
name|m_background
operator|.
name|redF
argument_list|()
argument_list|,
name|m_background
operator|.
name|greenF
argument_list|()
argument_list|,
name|m_background
operator|.
name|blueF
argument_list|()
argument_list|,
name|m_transparent
condition|?
literal|0.0f
else|:
literal|1.0f
argument_list|)
expr_stmt|;
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
operator||
name|GL_DEPTH_BUFFER_BIT
argument_list|)
expr_stmt|;
name|glFrontFace
argument_list|(
name|GL_CW
argument_list|)
expr_stmt|;
name|glCullFace
argument_list|(
name|GL_FRONT
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|glEnable
argument_list|(
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|QMatrix4x4
name|modelview
decl_stmt|;
name|modelview
operator|.
name|rotate
argument_list|(
name|m_fAngle
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|modelview
operator|.
name|rotate
argument_list|(
name|m_fAngle
argument_list|,
literal|1.0f
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
name|modelview
operator|.
name|rotate
argument_list|(
name|m_fAngle
argument_list|,
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
literal|1.0f
argument_list|)
expr_stmt|;
name|modelview
operator|.
name|scale
argument_list|(
name|m_fScale
argument_list|)
expr_stmt|;
name|modelview
operator|.
name|translate
argument_list|(
literal|0.0f
argument_list|,
operator|-
literal|0.2f
argument_list|,
literal|0.0f
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_qtLogo
condition|)
block|{
name|m_program1
operator|->
name|bind
argument_list|()
expr_stmt|;
name|m_program1
operator|->
name|setUniformValue
argument_list|(
name|m_matrixUniform1
argument_list|,
name|modelview
argument_list|)
expr_stmt|;
name|paintQtLogo
argument_list|()
expr_stmt|;
name|m_program1
operator|->
name|release
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|m_program2
operator|->
name|bind
argument_list|()
expr_stmt|;
name|m_program2
operator|->
name|setUniformValue
argument_list|(
name|m_matrixUniform2
argument_list|,
name|modelview
argument_list|)
expr_stmt|;
name|paintTexturedCube
argument_list|()
expr_stmt|;
name|m_program2
operator|->
name|release
argument_list|()
expr_stmt|;
block|}
name|glDisable
argument_list|(
name|GL_DEPTH_TEST
argument_list|)
expr_stmt|;
name|glDisable
argument_list|(
name|GL_CULL_FACE
argument_list|)
expr_stmt|;
name|painter
operator|.
name|endNativePainting
argument_list|()
expr_stmt|;
if|if
condition|(
name|m_showBubbles
condition|)
foreach|foreach
control|(
name|Bubble
modifier|*
name|bubble
decl|,
name|m_bubbles
control|)
block|{
name|bubble
operator|->
name|drawBubble
argument_list|(
operator|&
name|painter
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
specifier|const
name|int
name|elapsed
init|=
name|m_time
operator|.
name|elapsed
argument_list|()
condition|)
block|{
name|QString
name|framesPerSecond
decl_stmt|;
name|framesPerSecond
operator|.
name|setNum
argument_list|(
name|m_frames
operator|/
operator|(
name|elapsed
operator|/
literal|1000.0
operator|)
argument_list|,
literal|'f'
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|m_transparent
condition|?
name|Qt
operator|::
name|black
else|:
name|Qt
operator|::
name|white
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
literal|20
argument_list|,
literal|40
argument_list|,
name|framesPerSecond
operator|+
literal|" paintGL calls / s"
argument_list|)
expr_stmt|;
block|}
name|painter
operator|.
name|end
argument_list|()
expr_stmt|;
name|QMutableListIterator
argument_list|<
name|Bubble
modifier|*
argument_list|>
name|iter
argument_list|(
name|m_bubbles
argument_list|)
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Bubble
modifier|*
name|bubble
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|bubble
operator|->
name|move
argument_list|(
name|rect
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
operator|(
name|m_frames
operator|%
literal|100
operator|)
condition|)
block|{
name|m_time
operator|.
name|start
argument_list|()
expr_stmt|;
name|m_frames
operator|=
literal|0
expr_stmt|;
block|}
name|m_fAngle
operator|+=
literal|1.0f
expr_stmt|;
operator|++
name|m_frames
expr_stmt|;
comment|// When requested, follow the ideal way to animate: Rely on
comment|// blocking swap and just schedule updates continuously.
if|if
condition|(
operator|!
name|m_mainWindow
operator|->
name|timerEnabled
argument_list|()
condition|)
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createBubbles
name|void
name|GLWidget
operator|::
name|createBubbles
parameter_list|(
name|int
name|number
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|number
condition|;
operator|++
name|i
control|)
block|{
name|QPointF
name|position
argument_list|(
name|width
argument_list|()
operator|*
operator|(
literal|0.1
operator|+
operator|(
literal|0.8
operator|*
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
operator|)
argument_list|,
name|height
argument_list|()
operator|*
operator|(
literal|0.1
operator|+
operator|(
literal|0.8
operator|*
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
operator|)
argument_list|)
decl_stmt|;
name|qreal
name|radius
init|=
name|qMin
argument_list|(
name|width
argument_list|()
argument_list|,
name|height
argument_list|()
argument_list|)
operator|*
operator|(
literal|0.0175
operator|+
literal|0.0875
operator|*
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
decl_stmt|;
name|QPointF
name|velocity
argument_list|(
name|width
argument_list|()
operator|*
literal|0.0175
operator|*
operator|(
operator|-
literal|0.5
operator|+
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
argument_list|,
name|height
argument_list|()
operator|*
literal|0.0175
operator|*
operator|(
operator|-
literal|0.5
operator|+
name|qrand
argument_list|()
operator|/
operator|(
name|RAND_MAX
operator|+
literal|1.0
operator|)
operator|)
argument_list|)
decl_stmt|;
name|m_bubbles
operator|.
name|append
argument_list|(
operator|new
name|Bubble
argument_list|(
name|position
argument_list|,
name|radius
argument_list|,
name|velocity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|createGeometry
name|void
name|GLWidget
operator|::
name|createGeometry
parameter_list|()
block|{
name|m_vertices
operator|.
name|clear
argument_list|()
expr_stmt|;
name|m_normals
operator|.
name|clear
argument_list|()
expr_stmt|;
name|qreal
name|x1
init|=
operator|+
literal|0.06f
decl_stmt|;
name|qreal
name|y1
init|=
operator|-
literal|0.14f
decl_stmt|;
name|qreal
name|x2
init|=
operator|+
literal|0.14f
decl_stmt|;
name|qreal
name|y2
init|=
operator|-
literal|0.06f
decl_stmt|;
name|qreal
name|x3
init|=
operator|+
literal|0.08f
decl_stmt|;
name|qreal
name|y3
init|=
operator|+
literal|0.00f
decl_stmt|;
name|qreal
name|x4
init|=
operator|+
literal|0.30f
decl_stmt|;
name|qreal
name|y4
init|=
operator|+
literal|0.22f
decl_stmt|;
name|quad
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|,
name|y2
argument_list|,
name|x2
argument_list|,
name|y1
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|quad
argument_list|(
name|x3
argument_list|,
name|y3
argument_list|,
name|x4
argument_list|,
name|y4
argument_list|,
name|y4
argument_list|,
name|x4
argument_list|,
name|y3
argument_list|,
name|x3
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
name|y2
argument_list|,
name|x2
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|y2
argument_list|,
name|x2
argument_list|,
name|y1
argument_list|,
name|x1
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|y1
argument_list|,
name|x1
argument_list|,
name|x1
argument_list|,
name|y1
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x3
argument_list|,
name|y3
argument_list|,
name|x4
argument_list|,
name|y4
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x4
argument_list|,
name|y4
argument_list|,
name|y4
argument_list|,
name|x4
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|y4
argument_list|,
name|x4
argument_list|,
name|y3
argument_list|,
name|x3
argument_list|)
expr_stmt|;
specifier|const
name|qreal
name|Pi
init|=
literal|3.14159f
decl_stmt|;
specifier|const
name|int
name|NumSectors
init|=
literal|100
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|NumSectors
condition|;
operator|++
name|i
control|)
block|{
name|qreal
name|angle1
init|=
operator|(
name|i
operator|*
literal|2
operator|*
name|Pi
operator|)
operator|/
name|NumSectors
decl_stmt|;
name|qreal
name|x5
init|=
literal|0.30
operator|*
name|sin
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|y5
init|=
literal|0.30
operator|*
name|cos
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|x6
init|=
literal|0.20
operator|*
name|sin
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|y6
init|=
literal|0.20
operator|*
name|cos
argument_list|(
name|angle1
argument_list|)
decl_stmt|;
name|qreal
name|angle2
init|=
operator|(
operator|(
name|i
operator|+
literal|1
operator|)
operator|*
literal|2
operator|*
name|Pi
operator|)
operator|/
name|NumSectors
decl_stmt|;
name|qreal
name|x7
init|=
literal|0.20
operator|*
name|sin
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|qreal
name|y7
init|=
literal|0.20
operator|*
name|cos
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|qreal
name|x8
init|=
literal|0.30
operator|*
name|sin
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|qreal
name|y8
init|=
literal|0.30
operator|*
name|cos
argument_list|(
name|angle2
argument_list|)
decl_stmt|;
name|quad
argument_list|(
name|x5
argument_list|,
name|y5
argument_list|,
name|x6
argument_list|,
name|y6
argument_list|,
name|x7
argument_list|,
name|y7
argument_list|,
name|x8
argument_list|,
name|y8
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x6
argument_list|,
name|y6
argument_list|,
name|x7
argument_list|,
name|y7
argument_list|)
expr_stmt|;
name|extrude
argument_list|(
name|x8
argument_list|,
name|y8
argument_list|,
name|x5
argument_list|,
name|y5
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|m_vertices
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|m_vertices
index|[
name|i
index|]
operator|*=
literal|2.0f
expr_stmt|;
block|}
end_function
begin_function
DECL|function|quad
name|void
name|GLWidget
operator|::
name|quad
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|,
name|qreal
name|x3
parameter_list|,
name|qreal
name|y3
parameter_list|,
name|qreal
name|x4
parameter_list|,
name|qreal
name|y4
parameter_list|)
block|{
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x4
argument_list|,
name|y4
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x3
argument_list|,
name|y3
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x4
argument_list|,
name|y4
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|QVector3D
name|n
init|=
name|QVector3D
operator|::
name|normal
argument_list|(
name|QVector3D
argument_list|(
name|x2
operator|-
name|x1
argument_list|,
name|y2
operator|-
name|y1
argument_list|,
literal|0.0f
argument_list|)
argument_list|,
name|QVector3D
argument_list|(
name|x4
operator|-
name|x1
argument_list|,
name|y4
operator|-
name|y1
argument_list|,
literal|0.0f
argument_list|)
argument_list|)
decl_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x4
argument_list|,
name|y4
argument_list|,
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x4
argument_list|,
name|y4
argument_list|,
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x3
argument_list|,
name|y3
argument_list|,
literal|0.05f
argument_list|)
expr_stmt|;
name|n
operator|=
name|QVector3D
operator|::
name|normal
argument_list|(
name|QVector3D
argument_list|(
name|x2
operator|-
name|x4
argument_list|,
name|y2
operator|-
name|y4
argument_list|,
literal|0.0f
argument_list|)
argument_list|,
name|QVector3D
argument_list|(
name|x1
operator|-
name|x4
argument_list|,
name|y1
operator|-
name|y4
argument_list|,
literal|0.0f
argument_list|)
argument_list|)
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
block|}
end_function
begin_function
DECL|function|extrude
name|void
name|GLWidget
operator|::
name|extrude
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|)
block|{
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
operator|+
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
operator|+
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
operator|-
literal|0.05f
argument_list|)
expr_stmt|;
name|m_vertices
operator|<<
name|QVector3D
argument_list|(
name|x2
argument_list|,
name|y2
argument_list|,
operator|+
literal|0.05f
argument_list|)
expr_stmt|;
name|QVector3D
name|n
init|=
name|QVector3D
operator|::
name|normal
argument_list|(
name|QVector3D
argument_list|(
name|x2
operator|-
name|x1
argument_list|,
name|y2
operator|-
name|y1
argument_list|,
literal|0.0f
argument_list|)
argument_list|,
name|QVector3D
argument_list|(
literal|0.0f
argument_list|,
literal|0.0f
argument_list|,
operator|-
literal|0.1f
argument_list|)
argument_list|)
decl_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
name|m_normals
operator|<<
name|n
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTransparent
name|void
name|GLWidget
operator|::
name|setTransparent
parameter_list|(
name|bool
name|transparent
parameter_list|)
block|{
name|setAttribute
argument_list|(
name|Qt
operator|::
name|WA_AlwaysStackOnTop
argument_list|,
name|transparent
argument_list|)
expr_stmt|;
name|m_transparent
operator|=
name|transparent
expr_stmt|;
comment|// Call update() on the top-level window after toggling AlwayStackOnTop to make sure
comment|// the entire backingstore is updated accordingly.
name|window
argument_list|()
operator|->
name|update
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resizeGL
name|void
name|GLWidget
operator|::
name|resizeGL
parameter_list|(
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
block|{
if|if
condition|(
name|m_hasButton
condition|)
block|{
if|if
condition|(
operator|!
name|m_btn
condition|)
block|{
name|m_btn
operator|=
operator|new
name|QPushButton
argument_list|(
literal|"A widget on top.\nPress me!"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_btn
argument_list|,
operator|&
name|QPushButton
operator|::
name|clicked
argument_list|,
name|this
argument_list|,
operator|&
name|GLWidget
operator|::
name|handleButtonPress
argument_list|)
expr_stmt|;
block|}
name|m_btn
operator|->
name|move
argument_list|(
name|w
operator|/
literal|2
argument_list|,
name|h
operator|/
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|handleButtonPress
name|void
name|GLWidget
operator|::
name|handleButtonPress
parameter_list|()
block|{
name|m_mainWindow
operator|->
name|addNew
argument_list|()
expr_stmt|;
block|}
end_function
end_unit
