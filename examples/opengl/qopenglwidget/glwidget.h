begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|GLWIDGET_H
end_ifndef
begin_define
DECL|macro|GLWIDGET_H
define|#
directive|define
name|GLWIDGET_H
end_define
begin_include
include|#
directive|include
file|<QOpenGLWidget>
end_include
begin_include
include|#
directive|include
file|<QOpenGLFunctions>
end_include
begin_include
include|#
directive|include
file|<QOpenGLBuffer>
end_include
begin_include
include|#
directive|include
file|<QVector3D>
end_include
begin_include
include|#
directive|include
file|<QMatrix4x4>
end_include
begin_include
include|#
directive|include
file|<QTime>
end_include
begin_include
include|#
directive|include
file|<QVector>
end_include
begin_include
include|#
directive|include
file|<QPushButton>
end_include
begin_decl_stmt
DECL|variable|Bubble
name|class
name|Bubble
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|MainWindow
name|class
name|MainWindow
decl_stmt|;
end_decl_stmt
begin_macro
DECL|function|QT_FORWARD_DECLARE_CLASS
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QOpenGLTexture
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QOpenGLShader
argument_list|)
end_macro
begin_macro
name|QT_FORWARD_DECLARE_CLASS
argument_list|(
argument|QOpenGLShaderProgram
argument_list|)
end_macro
begin_decl_stmt
name|class
name|GLWidget
range|:
name|public
name|QOpenGLWidget
decl_stmt|,
name|protected
name|QOpenGLFunctions
block|{
name|Q_OBJECT
name|public
range|:
name|GLWidget
argument_list|(
argument|MainWindow *mw
argument_list|,
argument|bool button
argument_list|,
argument|const QColor&background
argument_list|)
decl_stmt|;
operator|~
name|GLWidget
argument_list|()
expr_stmt|;
name|public
name|slots
range|:
name|void
name|setScaling
argument_list|(
argument|int scale
argument_list|)
decl_stmt|;
name|void
name|setLogo
parameter_list|()
function_decl|;
name|void
name|setTexture
parameter_list|()
function_decl|;
name|void
name|setShowBubbles
parameter_list|(
name|bool
parameter_list|)
function_decl|;
name|void
name|setTransparent
parameter_list|(
name|bool
name|transparent
parameter_list|)
function_decl|;
name|private
name|slots
range|:
name|void
name|handleButtonPress
argument_list|()
decl_stmt|;
name|protected
label|:
name|void
name|resizeGL
argument_list|(
name|int
name|w
argument_list|,
name|int
name|h
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|paintGL
argument_list|()
name|Q_DECL_OVERRIDE
expr_stmt|;
name|void
name|initializeGL
argument_list|()
name|Q_DECL_OVERRIDE
expr_stmt|;
name|private
label|:
name|void
name|paintTexturedCube
parameter_list|()
function_decl|;
name|void
name|paintQtLogo
parameter_list|()
function_decl|;
name|void
name|createGeometry
parameter_list|()
function_decl|;
name|void
name|createBubbles
parameter_list|(
name|int
name|number
parameter_list|)
function_decl|;
name|void
name|quad
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|,
name|qreal
name|x3
parameter_list|,
name|qreal
name|y3
parameter_list|,
name|qreal
name|x4
parameter_list|,
name|qreal
name|y4
parameter_list|)
function_decl|;
name|void
name|extrude
parameter_list|(
name|qreal
name|x1
parameter_list|,
name|qreal
name|y1
parameter_list|,
name|qreal
name|x2
parameter_list|,
name|qreal
name|y2
parameter_list|)
function_decl|;
name|MainWindow
modifier|*
name|m_mainWindow
decl_stmt|;
name|qreal
name|m_fAngle
decl_stmt|;
name|qreal
name|m_fScale
decl_stmt|;
name|bool
name|m_showBubbles
decl_stmt|;
name|QVector
operator|<
name|QVector3D
operator|>
name|m_vertices
expr_stmt|;
name|QVector
operator|<
name|QVector3D
operator|>
name|m_normals
expr_stmt|;
name|bool
name|m_qtLogo
decl_stmt|;
name|QList
operator|<
name|Bubble
operator|*
operator|>
name|m_bubbles
expr_stmt|;
name|int
name|m_frames
decl_stmt|;
name|QTime
name|m_time
decl_stmt|;
name|QOpenGLShader
modifier|*
name|m_vshader1
decl_stmt|;
name|QOpenGLShader
modifier|*
name|m_fshader1
decl_stmt|;
name|QOpenGLShader
modifier|*
name|m_vshader2
decl_stmt|;
name|QOpenGLShader
modifier|*
name|m_fshader2
decl_stmt|;
name|QOpenGLShaderProgram
modifier|*
name|m_program1
decl_stmt|;
name|QOpenGLShaderProgram
modifier|*
name|m_program2
decl_stmt|;
name|QOpenGLTexture
modifier|*
name|m_texture
decl_stmt|;
name|QOpenGLBuffer
name|m_vbo1
decl_stmt|;
name|QOpenGLBuffer
name|m_vbo2
decl_stmt|;
name|int
name|m_vertexAttr1
decl_stmt|;
name|int
name|m_normalAttr1
decl_stmt|;
name|int
name|m_matrixUniform1
decl_stmt|;
name|int
name|m_vertexAttr2
decl_stmt|;
name|int
name|m_normalAttr2
decl_stmt|;
name|int
name|m_texCoordAttr2
decl_stmt|;
name|int
name|m_matrixUniform2
decl_stmt|;
name|int
name|m_textureUniform2
decl_stmt|;
name|bool
name|m_transparent
decl_stmt|;
name|QPushButton
modifier|*
name|m_btn
decl_stmt|;
name|bool
name|m_hasButton
decl_stmt|;
name|QColor
name|m_background
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
