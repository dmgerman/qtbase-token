begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the examples of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QGuiApplication>
end_include
begin_include
include|#
directive|include
file|<QSurfaceFormat>
end_include
begin_include
include|#
directive|include
file|<QOpenGLContext>
end_include
begin_include
include|#
directive|include
file|"glwindow.h"
end_include
begin_comment
comment|// This example demonstrates easy, cross-platform usage of OpenGL ES 3.0 functions via
end_comment
begin_comment
comment|// QOpenGLExtraFunctions in an application that works identically on desktop platforms
end_comment
begin_comment
comment|// with OpenGL 3.3 and mobile/embedded devices with OpenGL ES 3.0.
end_comment
begin_comment
comment|// The code is always the same, with the exception of two places: (1) the OpenGL context
end_comment
begin_comment
comment|// creation has to have a sufficiently high version number for the features that are in
end_comment
begin_comment
comment|// use, and (2) the shader code's version directive is different.
end_comment
begin_function
DECL|function|main
name|int
name|main
parameter_list|(
name|int
name|argc
parameter_list|,
name|char
modifier|*
name|argv
index|[]
parameter_list|)
block|{
name|QSurfaceFormat
name|fmt
decl_stmt|;
name|fmt
operator|.
name|setDepthBufferSize
argument_list|(
literal|24
argument_list|)
expr_stmt|;
comment|// Request OpenGL 3.3 compatibility or OpenGL ES 3.0.
if|if
condition|(
name|QOpenGLContext
operator|::
name|openGLModuleType
argument_list|()
operator|==
name|QOpenGLContext
operator|::
name|LibGL
condition|)
block|{
name|qDebug
argument_list|(
literal|"Requesting 3.3 compatibility context"
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setVersion
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setProfile
argument_list|(
name|QSurfaceFormat
operator|::
name|CompatibilityProfile
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|(
literal|"Requesting 3.0 context"
argument_list|)
expr_stmt|;
name|fmt
operator|.
name|setVersion
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|QSurfaceFormat
operator|::
name|setDefaultFormat
argument_list|(
name|fmt
argument_list|)
expr_stmt|;
name|QGuiApplication
name|app
argument_list|(
name|argc
argument_list|,
name|argv
argument_list|)
decl_stmt|;
name|GLWindow
name|glWindow
decl_stmt|;
name|glWindow
operator|.
name|showMaximized
argument_list|()
expr_stmt|;
return|return
name|app
operator|.
name|exec
argument_list|()
return|;
block|}
end_function
end_unit
