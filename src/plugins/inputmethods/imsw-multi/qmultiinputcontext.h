begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|/**************************************************************************** ** ** Definition of QMultiInputContext class ** ** Copyright (C) 2004 immodule for Qt Project.  All rights reserved. ** ** This file is written to contribute to Nokia Corporation and/or its subsidiary(-ies) under their own ** licence. You may use this file under your Qt license. Following ** description is copied from their original file headers. Contact ** immodule-qt@freedesktop.org if any conditions of this licensing are ** not clear to you. ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMULTIINPUTCONTEXT_H
end_ifndef
begin_define
DECL|macro|QMULTIINPUTCONTEXT_H
define|#
directive|define
name|QMULTIINPUTCONTEXT_H
end_define
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_IM
end_ifndef
begin_include
include|#
directive|include
file|<QtGui/qwidget.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qinputcontext.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qnamespace.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmap.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qpointer.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qlist.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QMultiInputContext
range|:
name|public
name|QInputContext
block|{
name|Q_OBJECT
name|public
operator|:
name|QMultiInputContext
argument_list|()
block|;
operator|~
name|QMultiInputContext
argument_list|()
block|;
name|QString
name|identifierName
argument_list|()
block|;
name|QString
name|language
argument_list|()
block|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_X11
argument_list|)
name|bool
name|x11FilterEvent
argument_list|(
name|QWidget
operator|*
name|keywidget
argument_list|,
name|XEvent
operator|*
name|event
argument_list|)
block|;
endif|#
directive|endif
comment|// Q_WS_X11
name|bool
name|filterEvent
argument_list|(
specifier|const
name|QEvent
operator|*
name|event
argument_list|)
block|;
name|void
name|reset
argument_list|()
block|;
name|void
name|update
argument_list|()
block|;
name|void
name|mouseHandler
argument_list|(
argument|int x
argument_list|,
argument|QMouseEvent *event
argument_list|)
block|;
name|QFont
name|font
argument_list|()
specifier|const
block|;
name|bool
name|isComposing
argument_list|()
specifier|const
block|;
name|QList
operator|<
name|QAction
operator|*
operator|>
name|actions
argument_list|()
block|;
name|QWidget
operator|*
name|focusWidget
argument_list|()
specifier|const
block|;
name|void
name|setFocusWidget
argument_list|(
name|QWidget
operator|*
name|w
argument_list|)
block|;
name|void
name|widgetDestroyed
argument_list|(
name|QWidget
operator|*
name|w
argument_list|)
block|;
name|QInputContext
operator|*
name|slave
argument_list|()
block|{
return|return
name|slaves
operator|.
name|at
argument_list|(
name|current
argument_list|)
return|;
block|}
specifier|const
name|QInputContext
operator|*
name|slave
argument_list|()
specifier|const
block|{
return|return
name|slaves
operator|.
name|at
argument_list|(
name|current
argument_list|)
return|;
block|}
name|protected
name|Q_SLOTS
operator|:
name|void
name|changeSlave
argument_list|(
name|QAction
operator|*
argument_list|)
block|;
name|private
operator|:
name|void
operator|*
name|unused
block|;
name|int
name|current
block|;
name|QList
operator|<
name|QInputContext
operator|*
operator|>
name|slaves
block|;
name|QMenu
operator|*
name|menu
block|;
name|QAction
operator|*
name|separator
block|;
name|QStringList
name|keys
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_NO_IM
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMULTIINPUTCONTEXT_H
end_comment
end_unit
