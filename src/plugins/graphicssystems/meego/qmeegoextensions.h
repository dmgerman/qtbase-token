begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|MEXTENSIONS_H
end_ifndef
begin_define
DECL|macro|MEXTENSIONS_H
define|#
directive|define
name|MEXTENSIONS_H
end_define
begin_include
include|#
directive|include
file|<private/qgl_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qeglcontext_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qpixmapdata_gl_p.h>
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2.h>
end_include
begin_include
include|#
directive|include
file|<GLES2/gl2ext.h>
end_include
begin_comment
comment|/* Extensions decls */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_SHARED_IMAGE_NOK
end_ifndef
begin_define
DECL|macro|EGL_SHARED_IMAGE_NOK
define|#
directive|define
name|EGL_SHARED_IMAGE_NOK
value|0x30DA
end_define
begin_typedef
DECL|typedef|EGLNativeSharedImageTypeNOK
typedef|typedef
name|void
modifier|*
name|EGLNativeSharedImageTypeNOK
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_GL_TEXTURE_2D_KHR
end_ifndef
begin_define
DECL|macro|EGL_GL_TEXTURE_2D_KHR
define|#
directive|define
name|EGL_GL_TEXTURE_2D_KHR
value|0x30B1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_FIXED_WIDTH_NOK
end_ifndef
begin_define
DECL|macro|EGL_FIXED_WIDTH_NOK
define|#
directive|define
name|EGL_FIXED_WIDTH_NOK
value|0x30DB
end_define
begin_define
DECL|macro|EGL_FIXED_HEIGHT_NOK
define|#
directive|define
name|EGL_FIXED_HEIGHT_NOK
value|0x30DC
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_BITMAP_POINTER_KHR
end_ifndef
begin_define
DECL|macro|EGL_BITMAP_POINTER_KHR
define|#
directive|define
name|EGL_BITMAP_POINTER_KHR
value|0x30C6
end_define
begin_define
DECL|macro|EGL_BITMAP_PITCH_KHR
define|#
directive|define
name|EGL_BITMAP_PITCH_KHR
value|0x30C7
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_MAP_PRESERVE_PIXELS_KHR
end_ifndef
begin_define
DECL|macro|EGL_MAP_PRESERVE_PIXELS_KHR
define|#
directive|define
name|EGL_MAP_PRESERVE_PIXELS_KHR
value|0x30C4
end_define
begin_define
DECL|macro|EGL_LOCK_USAGE_HINT_KHR
define|#
directive|define
name|EGL_LOCK_USAGE_HINT_KHR
value|0x30C5
end_define
begin_define
DECL|macro|EGL_READ_SURFACE_BIT_KHR
define|#
directive|define
name|EGL_READ_SURFACE_BIT_KHR
value|0x0001
end_define
begin_define
DECL|macro|EGL_WRITE_SURFACE_BIT_KHR
define|#
directive|define
name|EGL_WRITE_SURFACE_BIT_KHR
value|0x0002
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|EGL_SYNC_FENCE_KHR
end_ifndef
begin_define
DECL|macro|EGL_SYNC_FENCE_KHR
define|#
directive|define
name|EGL_SYNC_FENCE_KHR
value|0x30F9
end_define
begin_define
DECL|macro|EGL_SYNC_TYPE_KHR
define|#
directive|define
name|EGL_SYNC_TYPE_KHR
value|0x30F7
end_define
begin_define
DECL|macro|EGL_SYNC_STATUS_KHR
define|#
directive|define
name|EGL_SYNC_STATUS_KHR
value|0x30F1
end_define
begin_define
DECL|macro|EGL_SYNC_CONDITION_KHR
define|#
directive|define
name|EGL_SYNC_CONDITION_KHR
value|0x30F8
end_define
begin_define
DECL|macro|EGL_SIGNALED_KHR
define|#
directive|define
name|EGL_SIGNALED_KHR
value|0x30F2
end_define
begin_define
DECL|macro|EGL_UNSIGNALED_KHR
define|#
directive|define
name|EGL_UNSIGNALED_KHR
value|0x30F3
end_define
begin_define
DECL|macro|EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR
define|#
directive|define
name|EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR
value|0x30F0
end_define
begin_define
DECL|macro|EGL_SYNC_FLUSH_COMMANDS_BIT_KHR
define|#
directive|define
name|EGL_SYNC_FLUSH_COMMANDS_BIT_KHR
value|0x0001
end_define
begin_define
DECL|macro|EGL_FOREVER_KHR
define|#
directive|define
name|EGL_FOREVER_KHR
value|0xFFFFFFFFFFFFFFFFull
end_define
begin_define
DECL|macro|EGL_TIMEOUT_EXPIRED_KHR
define|#
directive|define
name|EGL_TIMEOUT_EXPIRED_KHR
value|0x30F5
end_define
begin_define
DECL|macro|EGL_CONDITION_SATISFIED_KHR
define|#
directive|define
name|EGL_CONDITION_SATISFIED_KHR
value|0x30F6
end_define
begin_define
DECL|macro|EGL_NO_SYNC_KHR
define|#
directive|define
name|EGL_NO_SYNC_KHR
value|((EGLSyncKHR)0)
end_define
begin_typedef
DECL|typedef|EGLSyncKHR
typedef|typedef
name|void
modifier|*
name|EGLSyncKHR
typedef|;
end_typedef
begin_typedef
DECL|typedef|EGLTimeKHR
typedef|typedef
name|khronos_utime_nanoseconds_t
name|EGLTimeKHR
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* Class */
end_comment
begin_decl_stmt
name|class
name|QMeeGoExtensions
block|{
name|public
label|:
specifier|static
name|void
name|ensureInitialized
parameter_list|()
function_decl|;
specifier|static
name|EGLNativeSharedImageTypeNOK
name|eglCreateSharedImageNOK
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLImageKHR
name|image
parameter_list|,
name|EGLint
modifier|*
name|props
parameter_list|)
function_decl|;
specifier|static
name|bool
name|eglQueryImageNOK
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLImageKHR
name|image
parameter_list|,
name|EGLint
name|prop
parameter_list|,
name|EGLint
modifier|*
name|v
parameter_list|)
function_decl|;
specifier|static
name|bool
name|eglDestroySharedImageNOK
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLNativeSharedImageTypeNOK
name|img
parameter_list|)
function_decl|;
specifier|static
name|bool
name|eglSetSurfaceScalingNOK
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
specifier|static
name|bool
name|eglLockSurfaceKHR
parameter_list|(
name|EGLDisplay
name|display
parameter_list|,
name|EGLSurface
name|surface
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
specifier|static
name|bool
name|eglUnlockSurfaceKHR
parameter_list|(
name|EGLDisplay
name|display
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
function_decl|;
specifier|static
name|EGLSyncKHR
name|eglCreateSyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLenum
name|type
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
specifier|static
name|bool
name|eglDestroySyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|)
function_decl|;
specifier|static
name|EGLint
name|eglClientWaitSyncKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|flags
parameter_list|,
name|EGLTimeKHR
name|timeout
parameter_list|)
function_decl|;
specifier|static
name|EGLBoolean
name|eglGetSyncAttribKHR
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSyncKHR
name|sync
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|private
label|:
specifier|static
name|void
name|initialize
parameter_list|()
function_decl|;
specifier|static
name|bool
name|initialized
decl_stmt|;
specifier|static
name|bool
name|hasImageShared
decl_stmt|;
specifier|static
name|bool
name|hasSurfaceScaling
decl_stmt|;
specifier|static
name|bool
name|hasLockSurface
decl_stmt|;
specifier|static
name|bool
name|hasFenceSync
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
