begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qgraphicssystem_vg_p.h"
end_include
begin_include
include|#
directive|include
file|<QtOpenVG/private/qpixmapdata_vg_p.h>
end_include
begin_include
include|#
directive|include
file|<QtOpenVG/private/qwindowsurface_vg_p.h>
end_include
begin_include
include|#
directive|include
file|<QtOpenVG/private/qvgimagepool_p.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
end_if
begin_include
include|#
directive|include
file|<QtGui/private/qwidget_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<QtGui/private/qapplication_p.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|QVGGraphicsSystem
name|QVGGraphicsSystem
operator|::
name|QVGGraphicsSystem
parameter_list|()
block|{
name|QApplicationPrivate
operator|::
name|graphics_system_name
operator|=
name|QLatin1String
argument_list|(
literal|"openvg"
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|createPixmapData
name|QPixmapData
modifier|*
name|QVGGraphicsSystem
operator|::
name|createPixmapData
parameter_list|(
name|QPixmapData
operator|::
name|PixelType
name|type
parameter_list|)
specifier|const
block|{
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QVG_NO_SINGLE_CONTEXT
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QVG_NO_PIXMAP_DATA
argument_list|)
comment|// Pixmaps can use QVGPixmapData; bitmaps must use raster.
if|if
condition|(
name|type
operator|==
name|QPixmapData
operator|::
name|PixmapType
condition|)
return|return
operator|new
name|QVGPixmapData
argument_list|(
name|type
argument_list|)
return|;
else|else
return|return
operator|new
name|QRasterPixmapData
argument_list|(
name|type
argument_list|)
return|;
else|#
directive|else
return|return
operator|new
name|QRasterPixmapData
argument_list|(
name|type
argument_list|)
return|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|createWindowSurface
name|QWindowSurface
modifier|*
name|QVGGraphicsSystem
operator|::
name|createWindowSurface
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_SYMBIAN
argument_list|)
if|if
condition|(
operator|!
name|QApplicationPrivate
operator|::
name|instance
argument_list|()
operator|->
name|useTranslucentEGLSurfaces
condition|)
block|{
name|QWidgetPrivate
modifier|*
name|d
init|=
name|qt_widget_private
argument_list|(
name|widget
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|d
operator|->
name|isOpaque
operator|&&
name|widget
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_TranslucentBackground
argument_list|)
condition|)
return|return
name|d
operator|->
name|createDefaultWindowSurface_sys
argument_list|()
return|;
block|}
endif|#
directive|endif
return|return
operator|new
name|QVGWindowSurface
argument_list|(
name|widget
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|releaseCachedResources
name|void
name|QVGGraphicsSystem
operator|::
name|releaseCachedResources
parameter_list|()
block|{
name|QVGImagePool
operator|::
name|instance
argument_list|()
operator|->
name|hibernate
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
