begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2014 BlackBerry Limited. All rights reserved. ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qbb10darkstyle.h"
end_include
begin_include
include|#
directive|include
file|<QApplication>
end_include
begin_include
include|#
directive|include
file|<QFont>
end_include
begin_include
include|#
directive|include
file|<QStyleOption>
end_include
begin_include
include|#
directive|include
file|<QProgressBar>
end_include
begin_include
include|#
directive|include
file|<QComboBox>
end_include
begin_include
include|#
directive|include
file|<QAbstractItemView>
end_include
begin_include
include|#
directive|include
file|<QPainter>
end_include
begin_include
include|#
directive|include
file|<QLineEdit>
end_include
begin_include
include|#
directive|include
file|<QTextEdit>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QBB10DarkStyle
name|QBB10DarkStyle
operator|::
name|QBB10DarkStyle
parameter_list|()
member_init_list|:
name|QPixmapStyle
argument_list|()
block|{
name|addDescriptor
argument_list|(
name|PB_Enabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/button/core_button_inactive.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_Checked
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/button/core_button_enabled_selected.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_Pressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/button/core_button_pressed.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_Disabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/button/core_button_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_PressedDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/button/core_button_disabled_selected.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|,
literal|13
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|LE_Enabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/lineedit/core_textinput_bg.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|LE_Disabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/lineedit/core_textinput_bg_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|LE_Focused
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/lineedit/core_textinput_bg_highlight.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|copyDescriptor
argument_list|(
name|LE_Enabled
argument_list|,
name|TE_Enabled
argument_list|)
expr_stmt|;
name|copyDescriptor
argument_list|(
name|LE_Disabled
argument_list|,
name|TE_Disabled
argument_list|)
expr_stmt|;
name|copyDescriptor
argument_list|(
name|LE_Focused
argument_list|,
name|TE_Focused
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|CB_Enabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/checkbox/core_checkbox_enabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|CB_Checked
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/checkbox/core_checkbox_checked.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|CB_Pressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/checkbox/core_checkbox_pressed.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|CB_PressedChecked
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/checkbox/core_checkbox_pressed_checked.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|CB_Disabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/checkbox/core_checkbox_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|CB_DisabledChecked
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/checkbox/core_checkbox_disabled_checked.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|RB_Enabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/radiobutton/core_radiobutton_inactive.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|RB_Checked
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/radiobutton/core_radiobutton_checked.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|RB_Pressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/radiobutton/core_radiobutton_pressed.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|RB_Disabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/radiobutton/core_radiobutton_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|RB_DisabledChecked
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/radiobutton/core_radiobutton_disabled_checked.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_HBackground
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/progressbar/core_progressindicator_bg.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_HContent
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/progressbar/core_progressindicator_fill.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_HComplete
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/progressbar/core_progressindicator_complete.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_VBackground
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/progressbar/core_progressindicator_vbg.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_VContent
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/progressbar/core_progressindicator_vfill.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|PB_VComplete
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/progressbar/core_progressindicator_vcomplete.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_HEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_enabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_HDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_HActiveEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_inactive.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_HActivePressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_active.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_HActiveDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_cache.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_VEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_venabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_VDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_vdisabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_VActiveEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_vinactive.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_VActivePressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_vactive.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SG_VActiveDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_vcache.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|SH_HEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_handle.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|SH_HDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_handle_disabled.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|SH_HPressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_handle_pressed.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|SH_VEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_handle.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|SH_VDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_handle_disabled.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|SH_VPressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/slider/core_slider_handle_pressed.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|DD_ButtonEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_button.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|DD_ButtonDisabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_button_disabled.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|DD_ButtonPressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_button_pressed.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|,
literal|14
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|DD_ItemSelected
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_listitem_active.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|DD_ArrowEnabled
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_button_arrowdown.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|35
argument_list|,
literal|39
argument_list|,
literal|35
argument_list|,
literal|39
argument_list|)
argument_list|)
expr_stmt|;
name|copyPixmap
argument_list|(
name|DD_ArrowEnabled
argument_list|,
name|DD_ArrowDisabled
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|DD_ArrowPressed
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_button_arrowdown_pressed.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|35
argument_list|,
literal|39
argument_list|,
literal|35
argument_list|,
literal|39
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|DD_ArrowOpen
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_button_arrowup.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|35
argument_list|,
literal|39
argument_list|,
literal|35
argument_list|,
literal|39
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|DD_PopupDown
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_menu.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|DD_PopupUp
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_menuup.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|,
literal|12
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|DD_ItemSeparator
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_divider.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|ID_Selected
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/listitem/core_listitem_active.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addPixmap
argument_list|(
name|ID_Separator
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/listitem/core_listitem_divider.png"
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SB_Horizontal
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/scrollbar/core_scrollbar.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|7
argument_list|,
literal|8
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|RepeatTile
argument_list|,
name|Qt
operator|::
name|StretchTile
argument_list|)
argument_list|)
expr_stmt|;
name|addDescriptor
argument_list|(
name|SB_Vertical
argument_list|,
name|QLatin1String
argument_list|(
literal|"://dark/scrollbar/core_scrollbar_v.png"
argument_list|)
argument_list|,
name|QMargins
argument_list|(
literal|8
argument_list|,
literal|7
argument_list|,
literal|8
argument_list|,
literal|7
argument_list|)
argument_list|,
name|QTileRules
argument_list|(
name|Qt
operator|::
name|StretchTile
argument_list|,
name|Qt
operator|::
name|RepeatTile
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QBB10DarkStyle
name|QBB10DarkStyle
operator|::
name|~
name|QBB10DarkStyle
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|polish
name|void
name|QBB10DarkStyle
operator|::
name|polish
parameter_list|(
name|QApplication
modifier|*
name|application
parameter_list|)
block|{
name|QPixmapStyle
operator|::
name|polish
argument_list|(
name|application
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|polish
name|void
name|QBB10DarkStyle
operator|::
name|polish
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
comment|// Hide the text by default
if|if
condition|(
name|QProgressBar
modifier|*
name|pb
init|=
name|qobject_cast
argument_list|<
name|QProgressBar
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
name|pb
operator|->
name|setTextVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|QComboBox
modifier|*
name|cb
init|=
name|qobject_cast
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|QAbstractItemView
modifier|*
name|list
init|=
name|cb
operator|->
name|view
argument_list|()
decl_stmt|;
name|QPalette
name|p
init|=
name|list
operator|->
name|palette
argument_list|()
decl_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|p
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|->
name|setPalette
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|qobject_cast
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
operator|||
name|qobject_cast
argument_list|<
name|QTextEdit
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|QPalette
name|p
init|=
name|widget
operator|->
name|palette
argument_list|()
decl_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|,
name|QColor
argument_list|(
literal|38
argument_list|,
literal|38
argument_list|,
literal|38
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setPalette
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|qobject_cast
argument_list|<
name|QAbstractItemView
operator|*
argument_list|>
argument_list|(
name|widget
argument_list|)
condition|)
block|{
name|QPalette
name|p
init|=
name|widget
operator|->
name|palette
argument_list|()
decl_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|p
operator|.
name|brush
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|->
name|setPalette
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|QPixmapStyle
operator|::
name|polish
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|standardPalette
name|QPalette
name|QBB10DarkStyle
operator|::
name|standardPalette
parameter_list|()
specifier|const
block|{
name|QPalette
name|p
decl_stmt|;
name|QColor
name|color
init|=
name|QColor
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|,
literal|250
argument_list|)
decl_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|WindowText
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Text
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|color
operator|.
name|setAlpha
argument_list|(
literal|179
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|WindowText
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Disabled
argument_list|,
name|QPalette
operator|::
name|Text
argument_list|,
name|color
argument_list|)
expr_stmt|;
name|p
operator|.
name|setColor
argument_list|(
name|QPalette
operator|::
name|Window
argument_list|,
name|QColor
argument_list|(
literal|18
argument_list|,
literal|18
argument_list|,
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|Highlight
argument_list|,
name|QColor
argument_list|(
literal|0
argument_list|,
literal|168
argument_list|,
literal|223
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|HighlightedText
argument_list|,
name|QColor
argument_list|(
literal|250
argument_list|,
literal|250
argument_list|,
literal|250
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
end_function
begin_function
DECL|function|drawControl
name|void
name|QBB10DarkStyle
operator|::
name|drawControl
parameter_list|(
name|QStyle
operator|::
name|ControlElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|element
condition|)
block|{
case|case
name|CE_PushButtonLabel
case|:
block|{
specifier|const
name|bool
name|on
init|=
name|option
operator|->
name|state
operator|&
name|State_On
operator|||
name|option
operator|->
name|state
operator|&
name|State_Sunken
decl_stmt|;
specifier|const
name|QStyleOptionButton
modifier|*
name|button
init|=
name|qstyleoption_cast
argument_list|<
specifier|const
name|QStyleOptionButton
operator|*
argument_list|>
argument_list|(
name|option
argument_list|)
decl_stmt|;
name|QStyleOptionButton
name|newOpt
init|=
operator|*
name|button
decl_stmt|;
if|if
condition|(
name|on
condition|)
name|newOpt
operator|.
name|palette
operator|.
name|setBrush
argument_list|(
name|QPalette
operator|::
name|ButtonText
argument_list|,
name|QColor
argument_list|(
literal|38
argument_list|,
literal|38
argument_list|,
literal|38
argument_list|)
argument_list|)
expr_stmt|;
name|QPixmapStyle
operator|::
name|drawControl
argument_list|(
name|CE_PushButtonLabel
argument_list|,
operator|&
name|newOpt
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|CE_ProgressBarLabel
case|:
comment|// Don't draw the progress bar label
break|break;
default|default:
name|QPixmapStyle
operator|::
name|drawControl
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|drawPrimitive
name|void
name|QBB10DarkStyle
operator|::
name|drawPrimitive
parameter_list|(
name|QStyle
operator|::
name|PrimitiveElement
name|element
parameter_list|,
specifier|const
name|QStyleOption
modifier|*
name|option
parameter_list|,
name|QPainter
modifier|*
name|painter
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
specifier|const
block|{
name|QPixmapStyle
operator|::
name|drawPrimitive
argument_list|(
name|element
argument_list|,
name|option
argument_list|,
name|painter
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|element
operator|==
name|PE_PanelItemViewItem
condition|)
block|{
comment|// Draw the checkbox for current item
if|if
condition|(
name|widget
operator|->
name|property
argument_list|(
literal|"_pixmap_combobox_list"
argument_list|)
operator|.
name|toBool
argument_list|()
operator|&&
name|option
operator|->
name|state
operator|&
name|QStyle
operator|::
name|State_Selected
condition|)
block|{
name|QPixmap
name|pix
argument_list|(
name|QLatin1String
argument_list|(
literal|"://dark/combobox/core_dropdown_checkmark.png"
argument_list|)
argument_list|)
decl_stmt|;
name|QRect
name|rect
init|=
name|option
operator|->
name|rect
decl_stmt|;
specifier|const
name|int
name|margin
init|=
name|rect
operator|.
name|height
argument_list|()
operator|/
literal|2
decl_stmt|;
name|QPoint
name|pos
argument_list|(
name|rect
operator|.
name|right
argument_list|()
operator|-
name|margin
operator|-
name|pix
operator|.
name|width
argument_list|()
operator|/
literal|2
argument_list|,
name|rect
operator|.
name|top
argument_list|()
operator|+
name|margin
operator|-
name|pix
operator|.
name|height
argument_list|()
operator|/
literal|2
argument_list|)
decl_stmt|;
name|painter
operator|->
name|drawPixmap
argument_list|(
name|pos
argument_list|,
name|pix
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
