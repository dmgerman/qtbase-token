begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2015 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Tobias Koenig<tobias.koenig@kdab.com> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QHAIKURASTERWINDOW_H
end_ifndef
begin_define
DECL|macro|QHAIKURASTERWINDOW_H
define|#
directive|define
name|QHAIKURASTERWINDOW_H
end_define
begin_include
include|#
directive|include
file|"qhaikuwindow.h"
end_include
begin_include
include|#
directive|include
file|<View.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QObject
name|class
name|HaikuViewProxy
range|:
name|public
name|QObject
decl_stmt|,
name|public
name|BView
block|{
name|Q_OBJECT
name|public
range|:
name|explicit
name|HaikuViewProxy
argument_list|(
name|BWindow
operator|*
name|window
argument_list|,
name|QObject
operator|*
name|parent
operator|=
name|Q_NULLPTR
argument_list|)
decl_stmt|;
name|void
name|MessageReceived
argument_list|(
name|BMessage
operator|*
name|message
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|Draw
argument_list|(
name|BRect
name|updateRect
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|MouseDown
argument_list|(
name|BPoint
name|pos
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|MouseUp
argument_list|(
name|BPoint
name|pos
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|MouseMoved
argument_list|(
name|BPoint
name|pos
argument_list|,
name|uint32
name|code
argument_list|,
specifier|const
name|BMessage
operator|*
name|dragMessage
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|KeyDown
argument_list|(
specifier|const
name|char
operator|*
name|bytes
argument_list|,
name|int32
name|numBytes
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|KeyUp
argument_list|(
specifier|const
name|char
operator|*
name|bytes
argument_list|,
name|int32
name|numBytes
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|Q_SIGNALS
label|:
name|void
name|mouseEvent
argument_list|(
specifier|const
name|QPoint
operator|&
name|localPosition
argument_list|,
specifier|const
name|QPoint
operator|&
name|globalPosition
argument_list|,
name|Qt
operator|::
name|MouseButtons
name|buttons
argument_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|,
name|Qt
operator|::
name|MouseEventSource
name|source
argument_list|)
decl_stmt|;
name|void
name|wheelEvent
argument_list|(
specifier|const
name|QPoint
operator|&
name|localPosition
argument_list|,
specifier|const
name|QPoint
operator|&
name|globalPosition
argument_list|,
name|int
name|delta
argument_list|,
name|Qt
operator|::
name|Orientation
name|orientation
argument_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|)
decl_stmt|;
name|void
name|keyEvent
argument_list|(
name|QEvent
operator|::
name|Type
name|type
argument_list|,
name|int
name|key
argument_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|,
specifier|const
name|QString
operator|&
name|text
argument_list|)
decl_stmt|;
name|void
name|enteredView
parameter_list|()
function_decl|;
name|void
name|exitedView
parameter_list|()
function_decl|;
name|void
name|drawRequest
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
name|private
label|:
name|Qt
operator|::
name|MouseButtons
name|keyStateToMouseButtons
argument_list|(
argument|uint32 keyState
argument_list|)
specifier|const
expr_stmt|;
name|Qt
operator|::
name|KeyboardModifiers
name|keyStateToModifiers
argument_list|(
argument|uint32 keyState
argument_list|)
specifier|const
expr_stmt|;
name|void
name|handleKeyEvent
argument_list|(
name|QEvent
operator|::
name|Type
name|type
argument_list|,
name|BMessage
operator|*
name|message
argument_list|)
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|QHaikuRasterWindow
range|:
name|public
name|QHaikuWindow
block|{
name|Q_OBJECT
name|public
operator|:
name|explicit
name|QHaikuRasterWindow
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
block|;
operator|~
name|QHaikuRasterWindow
argument_list|()
block|;
name|BView
operator|*
name|nativeViewHandle
argument_list|()
specifier|const
block|;
name|private
operator|:
name|HaikuViewProxy
operator|*
name|m_view
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
