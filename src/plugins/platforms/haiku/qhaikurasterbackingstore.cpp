begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2015 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Tobias Koenig<tobias.koenig@kdab.com> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qhaikurasterbackingstore.h"
end_include
begin_include
include|#
directive|include
file|"qhaikurasterwindow.h"
end_include
begin_include
include|#
directive|include
file|<Bitmap.h>
end_include
begin_include
include|#
directive|include
file|<View.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QHaikuRasterBackingStore
name|QHaikuRasterBackingStore
operator|::
name|QHaikuRasterBackingStore
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|)
member_init_list|:
name|QPlatformBackingStore
argument_list|(
name|window
argument_list|)
member_init_list|,
name|m_bitmap
argument_list|(
name|Q_NULLPTR
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QHaikuRasterBackingStore
name|QHaikuRasterBackingStore
operator|::
name|~
name|QHaikuRasterBackingStore
parameter_list|()
block|{
operator|delete
name|m_bitmap
expr_stmt|;
name|m_bitmap
operator|=
name|Q_NULLPTR
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|paintDevice
name|QPaintDevice
modifier|*
name|QHaikuRasterBackingStore
operator|::
name|paintDevice
parameter_list|()
block|{
if|if
condition|(
operator|!
name|m_bufferSize
operator|.
name|isEmpty
argument_list|()
operator|&&
name|m_bitmap
condition|)
return|return
name|m_buffer
operator|.
name|image
argument_list|()
return|;
return|return
name|Q_NULLPTR
return|;
block|}
end_function
begin_function
DECL|function|flush
name|void
name|QHaikuRasterBackingStore
operator|::
name|flush
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|offset
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|window
condition|)
return|return;
name|QHaikuRasterWindow
modifier|*
name|targetWindow
init|=
cast|static_cast
argument_list|<
name|QHaikuRasterWindow
operator|*
argument_list|>
argument_list|(
name|window
operator|->
name|handle
argument_list|()
argument_list|)
decl_stmt|;
name|BView
modifier|*
name|view
init|=
name|targetWindow
operator|->
name|nativeViewHandle
argument_list|()
decl_stmt|;
name|view
operator|->
name|LockLooper
argument_list|()
expr_stmt|;
name|view
operator|->
name|DrawBitmap
argument_list|(
name|m_bitmap
argument_list|)
expr_stmt|;
name|view
operator|->
name|UnlockLooper
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resize
name|void
name|QHaikuRasterBackingStore
operator|::
name|resize
parameter_list|(
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|staticContents
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|staticContents
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_bufferSize
operator|==
name|size
condition|)
return|return;
operator|delete
name|m_bitmap
expr_stmt|;
name|m_bitmap
operator|=
operator|new
name|BBitmap
argument_list|(
name|BRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|()
argument_list|,
name|size
operator|.
name|height
argument_list|()
argument_list|)
argument_list|,
name|B_RGB32
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|m_buffer
operator|=
name|QHaikuBuffer
argument_list|(
name|m_bitmap
argument_list|)
expr_stmt|;
name|m_bufferSize
operator|=
name|size
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
