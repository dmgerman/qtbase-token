begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2015 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Tobias Koenig<tobias.koenig@kdab.com> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qhaikukeymapper.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|Haiku_ScanCodes
name|uint32
name|Haiku_ScanCodes
index|[]
init|=
block|{
name|Qt
operator|::
name|Key_Escape
block|,
literal|0x01
block|,
name|Qt
operator|::
name|Key_F1
block|,
literal|0x02
block|,
name|Qt
operator|::
name|Key_F2
block|,
literal|0x03
block|,
name|Qt
operator|::
name|Key_F3
block|,
literal|0x04
block|,
name|Qt
operator|::
name|Key_F4
block|,
literal|0x05
block|,
name|Qt
operator|::
name|Key_F5
block|,
literal|0x06
block|,
name|Qt
operator|::
name|Key_F6
block|,
literal|0x07
block|,
name|Qt
operator|::
name|Key_F7
block|,
literal|0x08
block|,
name|Qt
operator|::
name|Key_F8
block|,
literal|0x09
block|,
name|Qt
operator|::
name|Key_F9
block|,
literal|0x0A
block|,
name|Qt
operator|::
name|Key_F10
block|,
literal|0x0B
block|,
name|Qt
operator|::
name|Key_F11
block|,
literal|0x0C
block|,
name|Qt
operator|::
name|Key_F12
block|,
literal|0x0D
block|,
name|Qt
operator|::
name|Key_Print
block|,
literal|0x0E
block|,
name|Qt
operator|::
name|Key_Pause
block|,
literal|0x22
block|,
name|Qt
operator|::
name|Key_AsciiTilde
block|,
literal|0x11
block|,
name|Qt
operator|::
name|Key_1
block|,
literal|0x12
block|,
name|Qt
operator|::
name|Key_2
block|,
literal|0x13
block|,
name|Qt
operator|::
name|Key_3
block|,
literal|0x14
block|,
name|Qt
operator|::
name|Key_4
block|,
literal|0x15
block|,
name|Qt
operator|::
name|Key_5
block|,
literal|0x16
block|,
name|Qt
operator|::
name|Key_6
block|,
literal|0x17
block|,
name|Qt
operator|::
name|Key_7
block|,
literal|0x18
block|,
name|Qt
operator|::
name|Key_8
block|,
literal|0x19
block|,
name|Qt
operator|::
name|Key_9
block|,
literal|0x1A
block|,
name|Qt
operator|::
name|Key_0
block|,
literal|0x1B
block|,
name|Qt
operator|::
name|Key_Minus
block|,
literal|0x1C
block|,
name|Qt
operator|::
name|Key_Plus
block|,
literal|0x1D
block|,
name|Qt
operator|::
name|Key_Backspace
block|,
literal|0x1E
block|,
name|Qt
operator|::
name|Key_Insert
block|,
literal|0x1F
block|,
name|Qt
operator|::
name|Key_Home
block|,
literal|0x20
block|,
name|Qt
operator|::
name|Key_PageUp
block|,
literal|0x21
block|,
name|Qt
operator|::
name|Key_Slash
block|,
literal|0x23
block|,
name|Qt
operator|::
name|Key_Asterisk
block|,
literal|0x24
block|,
name|Qt
operator|::
name|Key_Minus
block|,
literal|0x25
block|,
name|Qt
operator|::
name|Key_Tab
block|,
literal|0x26
block|,
name|Qt
operator|::
name|Key_Q
block|,
literal|0x27
block|,
name|Qt
operator|::
name|Key_W
block|,
literal|0x28
block|,
name|Qt
operator|::
name|Key_E
block|,
literal|0x29
block|,
name|Qt
operator|::
name|Key_R
block|,
literal|0x2A
block|,
name|Qt
operator|::
name|Key_T
block|,
literal|0x2B
block|,
name|Qt
operator|::
name|Key_Y
block|,
literal|0x2C
block|,
name|Qt
operator|::
name|Key_U
block|,
literal|0x2D
block|,
name|Qt
operator|::
name|Key_I
block|,
literal|0x2E
block|,
name|Qt
operator|::
name|Key_O
block|,
literal|0x2F
block|,
name|Qt
operator|::
name|Key_P
block|,
literal|0x30
block|,
name|Qt
operator|::
name|Key_BracketLeft
block|,
literal|0x31
block|,
name|Qt
operator|::
name|Key_BracketRight
block|,
literal|0x32
block|,
name|Qt
operator|::
name|Key_Backslash
block|,
literal|0x33
block|,
name|Qt
operator|::
name|Key_Delete
block|,
literal|0x34
block|,
name|Qt
operator|::
name|Key_End
block|,
literal|0x35
block|,
name|Qt
operator|::
name|Key_PageDown
block|,
literal|0x36
block|,
name|Qt
operator|::
name|Key_Home
block|,
literal|0x37
block|,
comment|// numpad
name|Qt
operator|::
name|Key_Up
block|,
literal|0x38
block|,
comment|// numpad
name|Qt
operator|::
name|Key_PageUp
block|,
literal|0x39
block|,
comment|// numpad
name|Qt
operator|::
name|Key_Plus
block|,
literal|0x3A
block|,
comment|// numpad
name|Qt
operator|::
name|Key_A
block|,
literal|0x3C
block|,
name|Qt
operator|::
name|Key_S
block|,
literal|0x3D
block|,
name|Qt
operator|::
name|Key_D
block|,
literal|0x3E
block|,
name|Qt
operator|::
name|Key_F
block|,
literal|0x3F
block|,
name|Qt
operator|::
name|Key_G
block|,
literal|0x40
block|,
name|Qt
operator|::
name|Key_H
block|,
literal|0x41
block|,
name|Qt
operator|::
name|Key_J
block|,
literal|0x42
block|,
name|Qt
operator|::
name|Key_K
block|,
literal|0x43
block|,
name|Qt
operator|::
name|Key_L
block|,
literal|0x44
block|,
name|Qt
operator|::
name|Key_Colon
block|,
literal|0x45
block|,
name|Qt
operator|::
name|Key_QuoteDbl
block|,
literal|0x46
block|,
name|Qt
operator|::
name|Key_Return
block|,
literal|0x47
block|,
name|Qt
operator|::
name|Key_Left
block|,
literal|0x48
block|,
comment|// numpad
name|Qt
operator|::
name|Key_5
block|,
literal|0x49
block|,
comment|// numpad ???
name|Qt
operator|::
name|Key_Right
block|,
literal|0x4A
block|,
comment|// numpad
name|Qt
operator|::
name|Key_Z
block|,
literal|0x4C
block|,
name|Qt
operator|::
name|Key_X
block|,
literal|0x4D
block|,
name|Qt
operator|::
name|Key_C
block|,
literal|0x4E
block|,
name|Qt
operator|::
name|Key_V
block|,
literal|0x4F
block|,
name|Qt
operator|::
name|Key_B
block|,
literal|0x50
block|,
name|Qt
operator|::
name|Key_N
block|,
literal|0x51
block|,
name|Qt
operator|::
name|Key_M
block|,
literal|0x51
block|,
name|Qt
operator|::
name|Key_Less
block|,
literal|0x52
block|,
name|Qt
operator|::
name|Key_Greater
block|,
literal|0x54
block|,
name|Qt
operator|::
name|Key_Question
block|,
literal|0x55
block|,
name|Qt
operator|::
name|Key_Up
block|,
literal|0x57
block|,
comment|// cursor
name|Qt
operator|::
name|Key_End
block|,
literal|0x58
block|,
comment|// numpad
name|Qt
operator|::
name|Key_Down
block|,
literal|0x59
block|,
comment|// numpad
name|Qt
operator|::
name|Key_PageDown
block|,
literal|0x5A
block|,
comment|// numpad
name|Qt
operator|::
name|Key_Enter
block|,
literal|0x5B
block|,
comment|// numpad
name|Qt
operator|::
name|Key_Space
block|,
literal|0x5E
block|,
name|Qt
operator|::
name|Key_Left
block|,
literal|0x61
block|,
comment|// cursor
name|Qt
operator|::
name|Key_Down
block|,
literal|0x62
block|,
comment|// cursor
name|Qt
operator|::
name|Key_Right
block|,
literal|0x63
block|,
comment|// cursor
name|Qt
operator|::
name|Key_Insert
block|,
literal|0x64
block|,
comment|// cursor
name|Qt
operator|::
name|Key_Delete
block|,
literal|0x65
block|,
comment|// numpad
literal|0
block|,
literal|0x00
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|Haiku_ScanCodes_Numlock
name|uint32
name|Haiku_ScanCodes_Numlock
index|[]
init|=
block|{
name|Qt
operator|::
name|Key_7
block|,
literal|0x37
block|,
name|Qt
operator|::
name|Key_8
block|,
literal|0x38
block|,
name|Qt
operator|::
name|Key_9
block|,
literal|0x39
block|,
name|Qt
operator|::
name|Key_Plus
block|,
literal|0x3A
block|,
name|Qt
operator|::
name|Key_4
block|,
literal|0x48
block|,
name|Qt
operator|::
name|Key_5
block|,
literal|0x49
block|,
name|Qt
operator|::
name|Key_6
block|,
literal|0x4A
block|,
name|Qt
operator|::
name|Key_1
block|,
literal|0x58
block|,
name|Qt
operator|::
name|Key_2
block|,
literal|0x59
block|,
name|Qt
operator|::
name|Key_3
block|,
literal|0x5A
block|,
name|Qt
operator|::
name|Key_Enter
block|,
literal|0x5B
block|,
name|Qt
operator|::
name|Key_Comma
block|,
literal|0x65
block|,
literal|0
block|,
literal|0x00
block|}
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|translateKeyCode
name|uint32
name|QHaikuKeyMapper
operator|::
name|translateKeyCode
parameter_list|(
name|uint32
name|key
parameter_list|,
name|bool
name|numlockActive
parameter_list|)
block|{
name|uint32
name|code
init|=
literal|0
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|numlockActive
condition|)
block|{
while|while
condition|(
name|Haiku_ScanCodes_Numlock
index|[
name|i
index|]
condition|)
block|{
if|if
condition|(
name|key
operator|==
name|Haiku_ScanCodes_Numlock
index|[
name|i
operator|+
literal|1
index|]
condition|)
block|{
name|code
operator|=
name|Haiku_ScanCodes_Numlock
index|[
name|i
index|]
expr_stmt|;
break|break;
block|}
name|i
operator|+=
literal|2
expr_stmt|;
block|}
if|if
condition|(
name|code
operator|>
literal|0
condition|)
return|return
name|code
return|;
block|}
name|i
operator|=
literal|0
expr_stmt|;
while|while
condition|(
name|Haiku_ScanCodes
index|[
name|i
index|]
condition|)
block|{
if|if
condition|(
name|key
operator|==
name|Haiku_ScanCodes
index|[
name|i
operator|+
literal|1
index|]
condition|)
block|{
name|code
operator|=
name|Haiku_ScanCodes
index|[
name|i
index|]
expr_stmt|;
break|break;
block|}
name|i
operator|+=
literal|2
expr_stmt|;
block|}
return|return
name|code
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
