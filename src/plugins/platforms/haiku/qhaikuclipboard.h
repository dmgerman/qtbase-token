begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2015 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Tobias Koenig<tobias.koenig@kdab.com> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QHAIKUCLIPBOARD_H
end_ifndef
begin_define
DECL|macro|QHAIKUCLIPBOARD_H
define|#
directive|define
name|QHAIKUCLIPBOARD_H
end_define
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CLIPBOARD
argument_list|)
end_if
begin_include
include|#
directive|include
file|<qpa/qplatformclipboard.h>
end_include
begin_include
include|#
directive|include
file|<Handler.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QPlatformClipboard
name|class
name|QHaikuClipboard
range|:
name|public
name|QPlatformClipboard
decl_stmt|,
name|public
name|BHandler
block|{
name|public
label|:
name|QHaikuClipboard
argument_list|()
expr_stmt|;
operator|~
name|QHaikuClipboard
argument_list|()
expr_stmt|;
name|QMimeData
modifier|*
name|mimeData
argument_list|(
name|QClipboard
operator|::
name|Mode
name|mode
operator|=
name|QClipboard
operator|::
name|Clipboard
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|void
name|setMimeData
argument_list|(
name|QMimeData
operator|*
name|data
argument_list|,
name|QClipboard
operator|::
name|Mode
name|mode
operator|=
name|QClipboard
operator|::
name|Clipboard
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|bool
name|supportsMode
argument_list|(
name|QClipboard
operator|::
name|Mode
name|mode
argument_list|)
decl|const
name|Q_DECL_OVERRIDE
decl_stmt|;
name|bool
name|ownsMode
argument_list|(
name|QClipboard
operator|::
name|Mode
name|mode
argument_list|)
decl|const
name|Q_DECL_OVERRIDE
decl_stmt|;
comment|// override from BHandler to catch change notifications from Haiku clipboard
name|void
name|MessageReceived
argument_list|(
name|BMessage
operator|*
name|message
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|private
label|:
name|QMimeData
modifier|*
name|m_systemMimeData
decl_stmt|;
name|QMimeData
modifier|*
name|m_userMimeData
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
