begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qwindowsscaling.h"
end_include
begin_include
include|#
directive|include
file|"qwindowsscreen.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/QDebug>
end_include
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
comment|/*!     \class QWindowsScaling     \brief Windows scaling utilities      \internal     \ingroup qt-lighthouse-win */
DECL|member|m_factor
name|int
name|QWindowsScaling
operator|::
name|m_factor
init|=
literal|1
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|devicePixelRatioEnvVar
specifier|static
specifier|const
name|char
name|devicePixelRatioEnvVar
index|[]
init|=
literal|"QT_DEVICE_PIXEL_RATIO"
decl_stmt|;
end_decl_stmt
begin_comment
comment|// Suggest a scale factor by checking monitor sizes.
end_comment
begin_function
DECL|function|determineUiScaleFactor
name|int
name|QWindowsScaling
operator|::
name|determineUiScaleFactor
parameter_list|()
block|{
if|if
condition|(
operator|!
name|qEnvironmentVariableIsSet
argument_list|(
name|devicePixelRatioEnvVar
argument_list|)
condition|)
return|return
literal|1
return|;
specifier|const
name|QByteArray
name|envDevicePixelRatioEnv
init|=
name|qgetenv
argument_list|(
name|devicePixelRatioEnvVar
argument_list|)
decl_stmt|;
comment|// Auto: Suggest a scale factor by checking monitor resolution.
if|if
condition|(
name|envDevicePixelRatioEnv
operator|==
name|QByteArrayLiteral
argument_list|(
literal|"auto"
argument_list|)
condition|)
block|{
specifier|const
name|int
name|maxResolution
init|=
name|QWindowsScreen
operator|::
name|maxMonitorHorizResolution
argument_list|()
decl_stmt|;
return|return
name|maxResolution
operator|>
literal|180
condition|?
name|maxResolution
operator|/
literal|96
else|:
literal|1
return|;
block|}
comment|// Get factor from environment
name|bool
name|ok
init|=
literal|false
decl_stmt|;
specifier|const
name|int
name|envFactor
init|=
name|envDevicePixelRatioEnv
operator|.
name|toInt
argument_list|(
operator|&
name|ok
argument_list|)
decl_stmt|;
return|return
name|ok
operator|&&
name|envFactor
operator|>
literal|0
condition|?
name|envFactor
else|:
literal|1
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
