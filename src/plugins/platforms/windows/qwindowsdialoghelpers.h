begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWINDOWSDIALOGHELPER_H
end_ifndef
begin_define
DECL|macro|QWINDOWSDIALOGHELPER_H
define|#
directive|define
name|QWINDOWSDIALOGHELPER_H
end_define
begin_include
include|#
directive|include
file|"qtwindows_additional.h"
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformdialoghelper.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformtheme.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/QStringList>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QFileDialog
name|class
name|QFileDialog
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QDialog
name|class
name|QDialog
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWindowsNativeDialogBase
name|class
name|QWindowsNativeDialogBase
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|namespace
name|QWindowsDialogs
block|{
name|void
name|eatMouseMove
parameter_list|()
function_decl|;
name|bool
name|useHelper
argument_list|(
name|QPlatformTheme
operator|::
name|DialogType
name|type
argument_list|)
decl_stmt|;
name|QPlatformDialogHelper
modifier|*
name|createHelper
argument_list|(
name|QPlatformTheme
operator|::
name|DialogType
name|type
argument_list|)
decl_stmt|;
block|}
end_decl_stmt
begin_comment
comment|// namespace QWindowsDialogs
end_comment
begin_expr_stmt
name|template
operator|<
name|class
name|BaseClass
operator|>
name|class
name|QWindowsDialogHelperBase
operator|:
name|public
name|BaseClass
block|{
name|public
operator|:
name|virtual
name|void
name|exec
argument_list|()
block|;
name|virtual
name|bool
name|show
argument_list|(
argument|Qt::WindowFlags windowFlags
argument_list|,
argument|Qt::WindowModality windowModality
argument_list|,
argument|QWindow *parent
argument_list|)
block|;
name|virtual
name|void
name|hide
argument_list|()
block|;
name|virtual
name|QVariant
name|styleHint
argument_list|(
argument|QPlatformDialogHelper::StyleHint
argument_list|)
specifier|const
block|;
name|virtual
name|bool
name|supportsNonModalDialog
argument_list|()
specifier|const
block|{
return|return
name|true
return|;
block|}
name|protected
operator|:
name|QWindowsDialogHelperBase
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
operator|~
name|QWindowsDialogHelperBase
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QWindowsNativeDialogBase
operator|*
name|nativeDialog
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_label
name|private
label|:
end_label
begin_function_decl
name|virtual
name|QWindowsNativeDialogBase
modifier|*
name|createNativeDialog
parameter_list|()
init|=
literal|0
function_decl|;
end_function_decl
begin_function_decl
specifier|inline
name|QWindowsNativeDialogBase
modifier|*
name|ensureNativeDialog
parameter_list|()
function_decl|;
end_function_decl
begin_decl_stmt
name|QWindowsNativeDialogBase
modifier|*
name|m_nativeDialog
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|HWND
name|m_ownerWindow
decl_stmt|;
end_decl_stmt
begin_macro
unit|};
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWINDOWSDIALOGHELPER_H
end_comment
end_unit
