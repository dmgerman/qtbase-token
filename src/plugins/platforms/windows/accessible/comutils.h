begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|COMUTILS_H
end_ifndef
begin_define
DECL|macro|COMUTILS_H
define|#
directive|define
name|COMUTILS_H
end_define
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|_WINDOWS_
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|_WINDOWS_H
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|__WINDOWS__
argument_list|)
end_if
begin_error
error|#
directive|error
error|Must include windows.h first!
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<ocidl.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QVariant
name|class
name|QVariant
decl_stmt|;
end_decl_stmt
begin_comment
comment|// Originally QVariantToVARIANT copied from ActiveQt - renamed to avoid conflicts in static builds.
end_comment
begin_function_decl
name|bool
name|QVariant2VARIANT
parameter_list|(
specifier|const
name|QVariant
modifier|&
name|var
parameter_list|,
name|VARIANT
modifier|&
name|arg
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|typeName
parameter_list|,
name|bool
name|out
parameter_list|)
function_decl|;
end_function_decl
begin_function
DECL|function|QStringToBSTR
specifier|inline
name|BSTR
name|QStringToBSTR
parameter_list|(
specifier|const
name|QString
modifier|&
name|str
parameter_list|)
block|{
return|return
name|SysAllocStringLen
argument_list|(
name|reinterpret_cast
operator|<
specifier|const
name|OLECHAR
operator|*
operator|>
operator|(
name|str
operator|.
name|unicode
argument_list|()
operator|)
argument_list|,
name|UINT
argument_list|(
name|str
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// COMUTILS_H
end_comment
end_unit
