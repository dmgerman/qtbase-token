begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWINDOWSEGLCONTEXT_H
end_ifndef
begin_define
DECL|macro|QWINDOWSEGLCONTEXT_H
define|#
directive|define
name|QWINDOWSEGLCONTEXT_H
end_define
begin_include
include|#
directive|include
file|"qwindowsopenglcontext.h"
end_include
begin_include
include|#
directive|include
file|"qwindowsopengltester.h"
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_struct
DECL|struct|QWindowsLibEGL
struct|struct
name|QWindowsLibEGL
block|{
name|bool
name|init
parameter_list|()
function_decl|;
DECL|member|eglGetError
name|EGLint
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetError
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|eglGetDisplay
name|EGLDisplay
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetDisplay
function_decl|)
parameter_list|(
name|EGLNativeDisplayType
name|display_id
parameter_list|)
function_decl|;
DECL|member|eglGetPlatformDisplayEXT
name|EGLDisplay
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetPlatformDisplayEXT
function_decl|)
parameter_list|(
name|EGLenum
name|platform
parameter_list|,
name|void
modifier|*
name|native_display
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|eglInitialize
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglInitialize
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
modifier|*
name|major
parameter_list|,
name|EGLint
modifier|*
name|minor
parameter_list|)
function_decl|;
DECL|member|eglTerminate
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglTerminate
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|)
function_decl|;
DECL|member|eglChooseConfig
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglChooseConfig
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|,
name|EGLConfig
modifier|*
name|configs
parameter_list|,
name|EGLint
name|config_size
parameter_list|,
name|EGLint
modifier|*
name|num_config
parameter_list|)
function_decl|;
DECL|member|eglGetConfigAttrib
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetConfigAttrib
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLint
name|attribute
parameter_list|,
name|EGLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|eglCreateWindowSurface
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglCreateWindowSurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLNativeWindowType
name|win
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|eglCreatePbufferSurface
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglCreatePbufferSurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|eglDestroySurface
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglDestroySurface
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
function_decl|;
DECL|member|eglBindAPI
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglBindAPI
function_decl|)
parameter_list|(
name|EGLenum
name|api
parameter_list|)
function_decl|;
DECL|member|eglSwapInterval
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglSwapInterval
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLint
name|interval
parameter_list|)
function_decl|;
DECL|member|eglCreateContext
name|EGLContext
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglCreateContext
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLConfig
name|config
parameter_list|,
name|EGLContext
name|share_context
parameter_list|,
specifier|const
name|EGLint
modifier|*
name|attrib_list
parameter_list|)
function_decl|;
DECL|member|eglDestroyContext
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglDestroyContext
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLContext
name|ctx
parameter_list|)
function_decl|;
DECL|member|eglMakeCurrent
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglMakeCurrent
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|draw
parameter_list|,
name|EGLSurface
name|read
parameter_list|,
name|EGLContext
name|ctx
parameter_list|)
function_decl|;
DECL|member|eglGetCurrentContext
name|EGLContext
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetCurrentContext
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|eglGetCurrentSurface
name|EGLSurface
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetCurrentSurface
function_decl|)
parameter_list|(
name|EGLint
name|readdraw
parameter_list|)
function_decl|;
DECL|member|eglGetCurrentDisplay
name|EGLDisplay
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetCurrentDisplay
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|member|eglSwapBuffers
name|EGLBoolean
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglSwapBuffers
function_decl|)
parameter_list|(
name|EGLDisplay
name|dpy
parameter_list|,
name|EGLSurface
name|surface
parameter_list|)
function_decl|;
DECL|member|eglGetProcAddress
name|__eglMustCastToProperFunctionPointerType
function_decl|(
name|EGLAPIENTRY
modifier|*
name|eglGetProcAddress
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
name|procname
parameter_list|)
function_decl|;
DECL|member|private
name|private
label|:
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_STATIC
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_OPENGL_DYNAMIC
argument_list|)
name|void
modifier|*
name|resolve
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|m_lib
name|HMODULE
name|m_lib
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct
begin_struct
DECL|struct|QWindowsLibGLESv2
struct|struct
name|QWindowsLibGLESv2
block|{
name|bool
name|init
parameter_list|()
function_decl|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_STATIC
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_OPENGL_DYNAMIC
argument_list|)
DECL|function|moduleHandle
name|void
operator|*
name|moduleHandle
argument_list|()
specifier|const
block|{
return|return
name|m_lib
return|;
block|}
else|#
directive|else
DECL|function|moduleHandle
name|void
operator|*
name|moduleHandle
argument_list|()
specifier|const
block|{
return|return
name|Q_NULLPTR
return|;
block|}
endif|#
directive|endif
comment|// GL1+GLES2 common
DECL|member|glBindTexture
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBindTexture
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|member|glBlendFunc
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBlendFunc
function_decl|)
parameter_list|(
name|GLenum
name|sfactor
parameter_list|,
name|GLenum
name|dfactor
parameter_list|)
function_decl|;
DECL|member|glClear
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glClear
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|member|glClearColor
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glClearColor
function_decl|)
parameter_list|(
name|GLclampf
name|red
parameter_list|,
name|GLclampf
name|green
parameter_list|,
name|GLclampf
name|blue
parameter_list|,
name|GLclampf
name|alpha
parameter_list|)
function_decl|;
DECL|member|glClearStencil
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glClearStencil
function_decl|)
parameter_list|(
name|GLint
name|s
parameter_list|)
function_decl|;
DECL|member|glColorMask
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glColorMask
function_decl|)
parameter_list|(
name|GLboolean
name|red
parameter_list|,
name|GLboolean
name|green
parameter_list|,
name|GLboolean
name|blue
parameter_list|,
name|GLboolean
name|alpha
parameter_list|)
function_decl|;
DECL|member|glCopyTexImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glCopyTexImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|member|glCopyTexSubImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glCopyTexSubImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|member|glCullFace
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glCullFace
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|glDeleteTextures
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDeleteTextures
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|member|glDepthFunc
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDepthFunc
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|)
function_decl|;
DECL|member|glDepthMask
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDepthMask
function_decl|)
parameter_list|(
name|GLboolean
name|flag
parameter_list|)
function_decl|;
DECL|member|glDisable
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDisable
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|member|glDrawArrays
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDrawArrays
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|member|glDrawElements
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDrawElements
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|member|glEnable
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glEnable
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|member|glFinish
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glFinish
function_decl|)
parameter_list|()
function_decl|;
DECL|member|glFlush
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glFlush
function_decl|)
parameter_list|()
function_decl|;
DECL|member|glFrontFace
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glFrontFace
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|glGenTextures
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGenTextures
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|member|glGetBooleanv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetBooleanv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLboolean
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetError
name|GLenum
function_decl|(
name|APIENTRY
modifier|*
name|glGetError
function_decl|)
parameter_list|()
function_decl|;
DECL|member|glGetFloatv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetFloatv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetIntegerv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetIntegerv
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetString
specifier|const
name|GLubyte
modifier|*
function_decl|(
name|APIENTRY
modifier|*
name|glGetString
function_decl|)
parameter_list|(
name|GLenum
name|name
parameter_list|)
function_decl|;
DECL|member|glGetTexParameterfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetTexParameterfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetTexParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetTexParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glHint
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glHint
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|glIsEnabled
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|glIsEnabled
function_decl|)
parameter_list|(
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|member|glIsTexture
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|glIsTexture
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|member|glLineWidth
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glLineWidth
function_decl|)
parameter_list|(
name|GLfloat
name|width
parameter_list|)
function_decl|;
DECL|member|glPixelStorei
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glPixelStorei
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|glPolygonOffset
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glPolygonOffset
function_decl|)
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|units
parameter_list|)
function_decl|;
DECL|member|glReadPixels
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glReadPixels
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|glScissor
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glScissor
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|member|glStencilFunc
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glStencilFunc
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|glStencilMask
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glStencilMask
function_decl|)
parameter_list|(
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|glStencilOp
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glStencilOp
function_decl|)
parameter_list|(
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
DECL|member|glTexImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glTexImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|glTexParameterf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glTexParameterf
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|member|glTexParameterfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glTexParameterfv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glTexParameteri
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glTexParameteri
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|member|glTexParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glTexParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glTexSubImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glTexSubImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|member|glViewport
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glViewport
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
comment|// GLES2
DECL|member|glActiveTexture
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glActiveTexture
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
DECL|member|glAttachShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glAttachShader
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|glBindAttribLocation
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBindAttribLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|glBindBuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBindBuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|member|glBindFramebuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBindFramebuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|member|glBindRenderbuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBindRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|member|glBlendColor
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBlendColor
function_decl|)
parameter_list|(
name|GLclampf
name|red
parameter_list|,
name|GLclampf
name|green
parameter_list|,
name|GLclampf
name|blue
parameter_list|,
name|GLclampf
name|alpha
parameter_list|)
function_decl|;
DECL|member|glBlendEquation
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBlendEquation
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|member|glBlendEquationSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBlendEquationSeparate
function_decl|)
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
DECL|member|glBlendFuncSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBlendFuncSeparate
function_decl|)
parameter_list|(
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
DECL|member|glBufferData
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBufferData
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|qopengl_GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
DECL|member|glBufferSubData
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glBufferSubData
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|qopengl_GLintptr
name|offset
parameter_list|,
name|qopengl_GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|member|glCheckFramebufferStatus
name|GLenum
function_decl|(
name|APIENTRY
modifier|*
name|glCheckFramebufferStatus
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|member|glCompileShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glCompileShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|glCompressedTexImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glCompressedTexImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|member|glCompressedTexSubImage2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glCompressedTexSubImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|member|glCreateProgram
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|glCreateProgram
function_decl|)
parameter_list|()
function_decl|;
DECL|member|glCreateShader
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|glCreateShader
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
DECL|member|glDeleteBuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDeleteBuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|member|glDeleteFramebuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDeleteFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|member|glDeleteProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDeleteProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|glDeleteRenderbuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDeleteRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|member|glDeleteShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDeleteShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|glDetachShader
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDetachShader
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|glDisableVertexAttribArray
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDisableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|member|glEnableVertexAttribArray
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glEnableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|member|glFramebufferRenderbuffer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glFramebufferRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|member|glFramebufferTexture2D
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glFramebufferTexture2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|member|glGenBuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGenBuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|member|glGenerateMipmap
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGenerateMipmap
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|member|glGenFramebuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGenFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|member|glGenRenderbuffers
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGenRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|member|glGetActiveAttrib
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetActiveAttrib
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|glGetActiveUniform
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetActiveUniform
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|glGetAttachedShaders
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetAttachedShaders
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxcount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
function_decl|;
DECL|member|glGetAttribLocation
name|GLint
function_decl|(
name|APIENTRY
modifier|*
name|glGetAttribLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|glGetBufferParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetBufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetFramebufferAttachmentParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetFramebufferAttachmentParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetProgramiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetProgramiv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetProgramInfoLog
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetProgramInfoLog
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infolog
parameter_list|)
function_decl|;
DECL|member|glGetRenderbufferParameteriv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetRenderbufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetShaderiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetShaderiv
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetShaderInfoLog
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetShaderInfoLog
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infolog
parameter_list|)
function_decl|;
DECL|member|glGetShaderPrecisionFormat
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetShaderPrecisionFormat
function_decl|)
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
DECL|member|glGetShaderSource
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetShaderSource
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|source
parameter_list|)
function_decl|;
DECL|member|glGetUniformfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetUniformfv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetUniformiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetUniformiv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetUniformLocation
name|GLint
function_decl|(
name|APIENTRY
modifier|*
name|glGetUniformLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|glGetVertexAttribfv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetVertexAttribfv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetVertexAttribiv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetVertexAttribiv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|member|glGetVertexAttribPointerv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glGetVertexAttribPointerv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|member|glIsBuffer
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|glIsBuffer
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|member|glIsFramebuffer
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|glIsFramebuffer
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|member|glIsProgram
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|glIsProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|glIsRenderbuffer
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|glIsRenderbuffer
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|member|glIsShader
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|glIsShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|member|glLinkProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glLinkProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|glReleaseShaderCompiler
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glReleaseShaderCompiler
function_decl|)
parameter_list|()
function_decl|;
DECL|member|glRenderbufferStorage
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glRenderbufferStorage
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|member|glSampleCoverage
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glSampleCoverage
function_decl|)
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
DECL|member|glShaderBinary
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glShaderBinary
function_decl|)
parameter_list|(
name|GLint
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
DECL|member|glShaderSource
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glShaderSource
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
DECL|member|glStencilFuncSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glStencilFuncSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|glStencilMaskSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glStencilMaskSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|member|glStencilOpSeparate
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glStencilOpSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
DECL|member|glUniform1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform1f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|member|glUniform1fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform1fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniform1i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform1i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
DECL|member|glUniform1iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform1iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniform2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform2f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|member|glUniform2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform2fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniform2i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform2i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|member|glUniform2iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform2iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniform3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform3f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|glUniform3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform3fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniform3i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform3i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|member|glUniform3iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform3iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniform4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform4f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|member|glUniform4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform4fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniform4i
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform4i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|member|glUniform4iv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniform4iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|glUniformMatrix2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniformMatrix2fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|glUniformMatrix3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniformMatrix3fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|glUniformMatrix4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUniformMatrix4fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|member|glUseProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glUseProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|glValidateProgram
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glValidateProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib1f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib1f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib1fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib1fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib2f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib2f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib2fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib2fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib3f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib3f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib3fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib3fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib4f
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib4f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|member|glVertexAttrib4fv
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttrib4fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|member|glVertexAttribPointer
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glVertexAttribPointer
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
comment|// ES only
DECL|member|glClearDepthf
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glClearDepthf
function_decl|)
parameter_list|(
name|GLclampf
name|depth
parameter_list|)
function_decl|;
DECL|member|glDepthRangef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|glDepthRangef
function_decl|)
parameter_list|(
name|GLclampf
name|nearVal
parameter_list|,
name|GLclampf
name|farVal
parameter_list|)
function_decl|;
DECL|member|private
name|private
label|:
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_STATIC
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_OPENGL_DYNAMIC
argument_list|)
name|void
modifier|*
name|resolve
parameter_list|(
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|member|m_lib
name|HMODULE
name|m_lib
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct
begin_decl_stmt
name|class
name|QWindowsEGLStaticContext
range|:
name|public
name|QWindowsStaticOpenGLContext
block|{
name|Q_DISABLE_COPY
argument_list|(
argument|QWindowsEGLStaticContext
argument_list|)
name|public
operator|:
specifier|static
name|QWindowsEGLStaticContext
operator|*
name|create
argument_list|(
argument|QWindowsOpenGLTester::Renderers preferredType
argument_list|)
block|;
operator|~
name|QWindowsEGLStaticContext
argument_list|()
block|;
name|EGLDisplay
name|display
argument_list|()
specifier|const
block|{
return|return
name|m_display
return|;
block|}
name|QWindowsOpenGLContext
operator|*
name|createContext
argument_list|(
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
name|void
operator|*
name|moduleHandle
argument_list|()
specifier|const
block|{
return|return
name|libGLESv2
operator|.
name|moduleHandle
argument_list|()
return|;
block|}
name|QOpenGLContext
operator|::
name|OpenGLModuleType
name|moduleType
argument_list|()
specifier|const
block|{
return|return
name|QOpenGLContext
operator|::
name|LibGLES
return|;
block|}
name|void
operator|*
name|createWindowSurface
argument_list|(
argument|void *nativeWindow
argument_list|,
argument|void *nativeConfig
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|destroyWindowSurface
argument_list|(
argument|void *nativeSurface
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QSurfaceFormat
name|formatFromConfig
argument_list|(
argument|EGLDisplay display
argument_list|,
argument|EGLConfig config
argument_list|,
argument|const QSurfaceFormat&referenceFormat
argument_list|)
block|;
specifier|static
name|QWindowsLibEGL
name|libEGL
block|;
specifier|static
name|QWindowsLibGLESv2
name|libGLESv2
block|;
name|private
operator|:
name|QWindowsEGLStaticContext
argument_list|(
argument|EGLDisplay display
argument_list|,
argument|int version
argument_list|)
block|;
specifier|const
name|EGLDisplay
name|m_display
block|;
specifier|const
name|int
name|m_version
block|;
comment|//! majorVersion<<8 + minorVersion
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QWindowsEGLContext
range|:
name|public
name|QWindowsOpenGLContext
block|{
name|public
operator|:
name|QWindowsEGLContext
argument_list|(
name|QWindowsEGLStaticContext
operator|*
name|staticContext
argument_list|,
specifier|const
name|QSurfaceFormat
operator|&
name|format
argument_list|,
name|QPlatformOpenGLContext
operator|*
name|share
argument_list|)
block|;
operator|~
name|QWindowsEGLContext
argument_list|()
block|;
name|bool
name|makeCurrent
argument_list|(
argument|QPlatformSurface *surface
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|doneCurrent
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|swapBuffers
argument_list|(
argument|QPlatformSurface *surface
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QFunctionPointer
name|getProcAddress
argument_list|(
argument|const QByteArray&procName
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QSurfaceFormat
name|format
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_format
return|;
block|}
name|bool
name|isSharing
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_shareContext
operator|!=
name|EGL_NO_CONTEXT
return|;
block|}
name|bool
name|isValid
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_eglContext
operator|!=
name|EGL_NO_CONTEXT
return|;
block|}
name|void
operator|*
name|nativeContext
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_eglContext
return|;
block|}
name|void
operator|*
name|nativeDisplay
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_eglDisplay
return|;
block|}
name|void
operator|*
name|nativeConfig
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_eglConfig
return|;
block|}
name|private
operator|:
name|EGLConfig
name|chooseConfig
argument_list|(
specifier|const
name|QSurfaceFormat
operator|&
name|format
argument_list|)
block|;
name|QWindowsEGLStaticContext
operator|*
name|m_staticContext
block|;
name|EGLContext
name|m_eglContext
block|;
name|EGLContext
name|m_shareContext
block|;
name|EGLDisplay
name|m_eglDisplay
block|;
name|EGLConfig
name|m_eglConfig
block|;
name|QSurfaceFormat
name|m_format
block|;
name|EGLenum
name|m_api
block|;
name|int
name|m_swapInterval
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWINDOWSEGLCONTEXT_H
end_comment
end_unit
