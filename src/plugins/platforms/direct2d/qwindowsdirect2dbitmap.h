begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWINDOWSDIRECT2DBITMAP_H
end_ifndef
begin_define
DECL|macro|QWINDOWSDIRECT2DBITMAP_H
define|#
directive|define
name|QWINDOWSDIRECT2DBITMAP_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qnamespace.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/QRect>
end_include
begin_include
include|#
directive|include
file|<QtCore/QScopedPointer>
end_include
begin_struct_decl
struct_decl|struct
name|ID2D1DeviceContext
struct_decl|;
end_struct_decl
begin_struct_decl
struct_decl|struct
name|ID2D1Bitmap1
struct_decl|;
end_struct_decl
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QWindowsDirect2DDeviceContext
name|class
name|QWindowsDirect2DDeviceContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWindowsDirect2DBitmapPrivate
name|class
name|QWindowsDirect2DBitmapPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QImage
name|class
name|QImage
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QSize
name|class
name|QSize
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QColor
name|class
name|QColor
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QWindowsDirect2DBitmap
block|{
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QWindowsDirect2DBitmap
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QWindowsDirect2DBitmap
argument_list|)
name|public
label|:
name|QWindowsDirect2DBitmap
argument_list|()
expr_stmt|;
name|QWindowsDirect2DBitmap
argument_list|(
name|ID2D1Bitmap1
operator|*
name|bitmap
argument_list|,
name|ID2D1DeviceContext
operator|*
name|dc
argument_list|)
expr_stmt|;
operator|~
name|QWindowsDirect2DBitmap
argument_list|()
expr_stmt|;
name|bool
name|resize
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
name|bool
name|fromImage
argument_list|(
specifier|const
name|QImage
operator|&
name|image
argument_list|,
name|Qt
operator|::
name|ImageConversionFlags
name|flags
argument_list|)
decl_stmt|;
name|ID2D1Bitmap1
operator|*
name|bitmap
argument_list|()
specifier|const
expr_stmt|;
name|QWindowsDirect2DDeviceContext
operator|*
name|deviceContext
argument_list|()
specifier|const
expr_stmt|;
name|void
name|fill
parameter_list|(
specifier|const
name|QColor
modifier|&
name|color
parameter_list|)
function_decl|;
name|QImage
name|toImage
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
init|=
name|QRect
argument_list|()
parameter_list|)
function_decl|;
name|QSize
name|size
argument_list|()
specifier|const
expr_stmt|;
name|private
label|:
name|QScopedPointer
operator|<
name|QWindowsDirect2DBitmapPrivate
operator|>
name|d_ptr
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWINDOWSDIRECT2DBITMAP_H
end_comment
end_unit
