begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Copyright (C) 2012 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author James Turner<james.turner@kdab.com> ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QCOCOAMENU_H
end_ifndef
begin_define
DECL|macro|QCOCOAMENU_H
define|#
directive|define
name|QCOCOAMENU_H
end_define
begin_include
include|#
directive|include
file|<QtCore/QList>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformmenu.h>
end_include
begin_include
include|#
directive|include
file|"qcocoamenuitem.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QCocoaMenuBar
name|class
name|QCocoaMenuBar
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QCocoaMenu
range|:
name|public
name|QPlatformMenu
block|{
name|public
operator|:
name|QCocoaMenu
argument_list|()
block|;
operator|~
name|QCocoaMenu
argument_list|()
block|;
name|void
name|setTag
argument_list|(
argument|quintptr tag
argument_list|)
name|Q_DECL_OVERRIDE
block|{
name|m_tag
operator|=
name|tag
block|; }
name|quintptr
name|tag
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_tag
return|;
block|}
name|void
name|insertMenuItem
argument_list|(
argument|QPlatformMenuItem *menuItem
argument_list|,
argument|QPlatformMenuItem *before
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|removeMenuItem
argument_list|(
argument|QPlatformMenuItem *menuItem
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|syncMenuItem
argument_list|(
argument|QPlatformMenuItem *menuItem
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|setEnabled
argument_list|(
argument|bool enabled
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|isEnabled
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|void
name|setVisible
argument_list|(
argument|bool visible
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|showPopup
argument_list|(
argument|const QWindow *parentWindow
argument_list|,
argument|const QRect&targetRect
argument_list|,
argument|const QPlatformMenuItem *item
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|dismiss
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|syncSeparatorsCollapsible
argument_list|(
argument|bool enable
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|syncModalState
argument_list|(
argument|bool modal
argument_list|)
block|;
name|void
name|setIcon
argument_list|(
argument|const QIcon&icon
argument_list|)
name|Q_DECL_OVERRIDE
block|{
name|Q_UNUSED
argument_list|(
argument|icon
argument_list|)
block|}
name|void
name|setText
argument_list|(
argument|const QString&text
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|setMinimumWidth
argument_list|(
argument|int width
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|setFont
argument_list|(
argument|const QFont&font
argument_list|)
name|Q_DECL_OVERRIDE
block|;
specifier|inline
name|NSMenu
operator|*
name|nsMenu
argument_list|()
specifier|const
block|{
return|return
name|m_nativeMenu
return|;
block|}
specifier|inline
name|bool
name|isVisible
argument_list|()
specifier|const
block|{
return|return
name|m_visible
return|;
block|}
name|QPlatformMenuItem
operator|*
name|menuItemAt
argument_list|(
argument|int position
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|QPlatformMenuItem
operator|*
name|menuItemForTag
argument_list|(
argument|quintptr tag
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|QList
operator|<
name|QCocoaMenuItem
operator|*
operator|>
name|items
argument_list|()
specifier|const
block|;
name|QList
operator|<
name|QCocoaMenuItem
operator|*
operator|>
name|merged
argument_list|()
specifier|const
block|;
name|void
name|setAttachedItem
argument_list|(
name|NSMenuItem
operator|*
name|item
argument_list|)
block|;
name|NSMenuItem
operator|*
name|attachedItem
argument_list|()
specifier|const
block|;
name|private
operator|:
name|QCocoaMenuItem
operator|*
name|itemOrNull
argument_list|(
argument|int index
argument_list|)
specifier|const
block|;
name|void
name|insertNative
argument_list|(
name|QCocoaMenuItem
operator|*
name|item
argument_list|,
name|QCocoaMenuItem
operator|*
name|beforeItem
argument_list|)
block|;
name|QList
operator|<
name|QCocoaMenuItem
operator|*
operator|>
name|m_menuItems
block|;
name|NSMenu
operator|*
name|m_nativeMenu
block|;
name|NSMenuItem
operator|*
name|m_attachedItem
block|;
name|bool
name|m_enabled
block|;
name|bool
name|m_visible
block|;
name|quintptr
name|m_tag
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
