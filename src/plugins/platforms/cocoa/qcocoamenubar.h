begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Copyright (C) 2012 KlarÃ¤lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author James Turner<james.turner@kdab.com> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QCOCOAMENUBAR_H
end_ifndef
begin_define
DECL|macro|QCOCOAMENUBAR_H
define|#
directive|define
name|QCOCOAMENUBAR_H
end_define
begin_include
include|#
directive|include
file|<QtCore/QList>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformmenu.h>
end_include
begin_include
include|#
directive|include
file|"qcocoamenu.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QCocoaWindow
name|class
name|QCocoaWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QCocoaMenuBar
range|:
name|public
name|QPlatformMenuBar
block|{
name|Q_OBJECT
name|public
operator|:
name|QCocoaMenuBar
argument_list|()
block|;
name|virtual
operator|~
name|QCocoaMenuBar
argument_list|()
block|;
name|virtual
name|void
name|insertMenu
argument_list|(
name|QPlatformMenu
operator|*
name|menu
argument_list|,
name|QPlatformMenu
operator|*
name|before
argument_list|)
block|;
name|virtual
name|void
name|removeMenu
argument_list|(
name|QPlatformMenu
operator|*
name|menu
argument_list|)
block|;
name|virtual
name|void
name|syncMenu
argument_list|(
name|QPlatformMenu
operator|*
name|menuItem
argument_list|)
block|;
name|virtual
name|void
name|handleReparent
argument_list|(
name|QWindow
operator|*
name|newParentWindow
argument_list|)
block|;
name|virtual
name|QPlatformMenu
operator|*
name|menuForTag
argument_list|(
argument|quintptr tag
argument_list|)
specifier|const
block|;
specifier|inline
name|NSMenu
operator|*
name|nsMenu
argument_list|()
specifier|const
block|{
return|return
name|m_nativeMenu
return|;
block|}
specifier|static
name|void
name|redirectKnownMenuItemsToFirstResponder
argument_list|()
block|;
specifier|static
name|void
name|resetKnownMenuItemsToQt
argument_list|()
block|;
specifier|static
name|void
name|updateMenuBarImmediately
argument_list|()
block|;
name|QList
operator|<
name|QCocoaMenuItem
operator|*
operator|>
name|merged
argument_list|()
specifier|const
block|;
name|NSMenuItem
operator|*
name|itemForRole
argument_list|(
argument|QPlatformMenuItem::MenuRole r
argument_list|)
block|;
name|private
operator|:
specifier|static
name|QCocoaWindow
operator|*
name|findWindowForMenubar
argument_list|()
block|;
specifier|static
name|QCocoaMenuBar
operator|*
name|findGlobalMenubar
argument_list|()
block|;
name|bool
name|shouldDisable
argument_list|(
argument|QCocoaWindow *active
argument_list|)
specifier|const
block|;
name|void
name|insertNativeMenu
argument_list|(
name|QCocoaMenu
operator|*
name|menu
argument_list|,
name|QCocoaMenu
operator|*
name|beforeMenu
argument_list|)
block|;
name|void
name|removeNativeMenu
argument_list|(
name|QCocoaMenu
operator|*
name|menu
argument_list|)
block|;
name|QList
operator|<
name|QCocoaMenu
operator|*
operator|>
name|m_menus
block|;
name|NSMenu
operator|*
name|m_nativeMenu
block|;
name|QCocoaWindow
operator|*
name|m_window
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
