begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMACCLIPBOARD_H
end_ifndef
begin_define
DECL|macro|QMACCLIPBOARD_H
define|#
directive|define
name|QMACCLIPBOARD_H
end_define
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|"qmacmime.h"
end_include
begin_undef
DECL|macro|slots
undef|#
directive|undef
name|slots
end_undef
begin_empty
empty|#import<Cocoa/Cocoa.h>
end_empty
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QMacPasteboard
block|{
struct|struct
name|Promise
block|{
name|Promise
argument_list|()
operator|:
name|itemId
argument_list|(
literal|0
argument_list|)
operator|,
name|convertor
argument_list|(
literal|0
argument_list|)
block|{ }
name|Promise
argument_list|(
argument|int itemId
argument_list|,
argument|QMacPasteboardMime *c
argument_list|,
argument|QString m
argument_list|,
argument|QVariant d
argument_list|,
argument|int o=
literal|0
argument_list|)
operator|:
name|itemId
argument_list|(
name|itemId
argument_list|)
operator|,
name|offset
argument_list|(
name|o
argument_list|)
operator|,
name|convertor
argument_list|(
name|c
argument_list|)
operator|,
name|mime
argument_list|(
name|m
argument_list|)
operator|,
name|data
argument_list|(
argument|d
argument_list|)
block|{ }
name|int
name|itemId
operator|,
name|offset
expr_stmt|;
name|QMacPasteboardMime
modifier|*
name|convertor
decl_stmt|;
name|QString
name|mime
decl_stmt|;
name|QVariant
name|data
decl_stmt|;
block|}
struct|;
name|QList
operator|<
name|Promise
operator|>
name|promises
expr_stmt|;
name|PasteboardRef
name|paste
decl_stmt|;
name|uchar
name|mime_type
decl_stmt|;
name|mutable
name|QPointer
operator|<
name|QMimeData
operator|>
name|mime
expr_stmt|;
name|mutable
name|bool
name|mac_mime_source
decl_stmt|;
specifier|static
name|OSStatus
name|promiseKeeper
parameter_list|(
name|PasteboardRef
parameter_list|,
name|PasteboardItemID
parameter_list|,
name|CFStringRef
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
name|void
name|clear_helper
parameter_list|()
function_decl|;
name|public
label|:
name|QMacPasteboard
argument_list|(
argument|PasteboardRef p
argument_list|,
argument|uchar mime_type=
literal|0
argument_list|)
empty_stmt|;
name|QMacPasteboard
argument_list|(
argument|uchar mime_type
argument_list|)
empty_stmt|;
name|QMacPasteboard
argument_list|(
argument|CFStringRef name=
literal|0
argument_list|,
argument|uchar mime_type=
literal|0
argument_list|)
empty_stmt|;
operator|~
name|QMacPasteboard
argument_list|()
expr_stmt|;
name|bool
name|hasFlavor
argument_list|(
name|QString
name|flavor
argument_list|)
decl|const
decl_stmt|;
name|bool
name|hasOSType
argument_list|(
name|int
name|c_flavor
argument_list|)
decl|const
decl_stmt|;
name|PasteboardRef
name|pasteBoard
argument_list|()
specifier|const
expr_stmt|;
name|QMimeData
operator|*
name|mimeData
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setMimeData
parameter_list|(
name|QMimeData
modifier|*
name|mime
parameter_list|)
function_decl|;
name|QStringList
name|formats
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasFormat
argument_list|(
specifier|const
name|QString
operator|&
name|format
argument_list|)
decl|const
decl_stmt|;
name|QVariant
name|retrieveData
argument_list|(
specifier|const
name|QString
operator|&
name|format
argument_list|,
name|QVariant
operator|::
name|Type
argument_list|)
decl|const
decl_stmt|;
name|void
name|clear
parameter_list|()
function_decl|;
name|bool
name|sync
argument_list|()
specifier|const
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_function_decl
name|QString
name|qt_mac_get_pasteboardString
parameter_list|(
name|PasteboardRef
name|paste
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
