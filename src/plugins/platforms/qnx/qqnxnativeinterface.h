begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2012 Research In Motion ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QQNXNATIVEINTERFACE_H
end_ifndef
begin_define
DECL|macro|QQNXNATIVEINTERFACE_H
define|#
directive|define
name|QQNXNATIVEINTERFACE_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformnativeinterface.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QQnxIntegration
name|class
name|QQnxIntegration
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QQnxNativeInterface
range|:
name|public
name|QPlatformNativeInterface
block|{
name|public
operator|:
name|QQnxNativeInterface
argument_list|(
name|QQnxIntegration
operator|*
name|integration
argument_list|)
block|;
name|void
operator|*
name|nativeResourceForWindow
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|,
name|QWindow
operator|*
name|window
argument_list|)
block|;
name|void
operator|*
name|nativeResourceForScreen
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|,
name|QScreen
operator|*
name|screen
argument_list|)
block|;
name|void
operator|*
name|nativeResourceForIntegration
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|)
block|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_OPENGL
argument_list|)
name|void
operator|*
name|nativeResourceForContext
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|,
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
endif|#
directive|endif
name|void
name|setWindowProperty
argument_list|(
name|QPlatformWindow
operator|*
name|window
argument_list|,
specifier|const
name|QString
operator|&
name|name
argument_list|,
specifier|const
name|QVariant
operator|&
name|value
argument_list|)
block|;
name|NativeResourceForIntegrationFunction
name|nativeResourceFunctionForIntegration
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|)
block|;
name|private
operator|:
name|QQnxIntegration
operator|*
name|m_integration
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QQNXNATIVEINTERFACE_H
end_comment
end_unit
