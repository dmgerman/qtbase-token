begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2011 - 2012 Research In Motion ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QQNXGLCONTEXT_H
end_ifndef
begin_define
DECL|macro|QQNXGLCONTEXT_H
define|#
directive|define
name|QQNXGLCONTEXT_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformopenglcontext.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/QSurfaceFormat>
end_include
begin_include
include|#
directive|include
file|<QtCore/QAtomicInt>
end_include
begin_include
include|#
directive|include
file|<QtCore/QSize>
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QQnxWindow
name|class
name|QQnxWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QQnxGLContext
range|:
name|public
name|QPlatformOpenGLContext
block|{
name|public
operator|:
name|QQnxGLContext
argument_list|(
name|QOpenGLContext
operator|*
name|glContext
argument_list|)
block|;
name|virtual
operator|~
name|QQnxGLContext
argument_list|()
block|;
specifier|static
name|void
name|initialize
argument_list|()
block|;
specifier|static
name|void
name|shutdown
argument_list|()
block|;
name|void
name|requestSurfaceChange
argument_list|()
block|;
name|bool
name|makeCurrent
argument_list|(
name|QPlatformSurface
operator|*
name|surface
argument_list|)
block|;
name|void
name|doneCurrent
argument_list|()
block|;
name|void
name|swapBuffers
argument_list|(
name|QPlatformSurface
operator|*
name|surface
argument_list|)
block|;
name|QFunctionPointer
name|getProcAddress
argument_list|(
specifier|const
name|QByteArray
operator|&
name|procName
argument_list|)
block|;
name|virtual
name|QSurfaceFormat
name|format
argument_list|()
specifier|const
block|{
return|return
name|m_windowFormat
return|;
block|}
name|bool
name|isCurrent
argument_list|()
specifier|const
block|;
name|void
name|createSurface
argument_list|(
name|QPlatformSurface
operator|*
name|surface
argument_list|)
block|;
name|void
name|destroySurface
argument_list|()
block|;
name|private
operator|:
comment|/** \todo Should this be non-static so we can use additional displays? */
specifier|static
name|EGLDisplay
name|ms_eglDisplay
block|;
name|QSurfaceFormat
name|m_windowFormat
block|;
name|QOpenGLContext
operator|*
name|m_glContext
block|;
name|EGLConfig
name|m_eglConfig
block|;
name|EGLContext
name|m_eglContext
block|;
name|EGLSurface
name|m_eglSurface
block|;
name|QAtomicInt
name|m_newSurfaceRequested
block|;
specifier|static
name|EGLint
operator|*
name|contextAttrs
argument_list|()
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QQNXGLCONTEXT_H
end_comment
end_unit
