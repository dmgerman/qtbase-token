begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2011 - 2012 Research In Motion ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QQNXGLCONTEXT_H
end_ifndef
begin_define
DECL|macro|QQNXGLCONTEXT_H
define|#
directive|define
name|QQNXGLCONTEXT_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformopenglcontext.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/QSurfaceFormat>
end_include
begin_include
include|#
directive|include
file|<QtCore/QAtomicInt>
end_include
begin_include
include|#
directive|include
file|<QtCore/QSize>
end_include
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QQnxWindow
name|class
name|QQnxWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QQnxGLContext
range|:
name|public
name|QPlatformOpenGLContext
block|{
name|public
operator|:
name|QQnxGLContext
argument_list|(
name|QOpenGLContext
operator|*
name|glContext
argument_list|)
block|;
name|virtual
operator|~
name|QQnxGLContext
argument_list|()
block|;
specifier|static
name|EGLenum
name|checkEGLError
argument_list|(
specifier|const
name|char
operator|*
name|msg
argument_list|)
block|;
specifier|static
name|void
name|initializeContext
argument_list|()
block|;
specifier|static
name|void
name|shutdownContext
argument_list|()
block|;
name|void
name|requestSurfaceChange
argument_list|()
block|;
name|bool
name|makeCurrent
argument_list|(
name|QPlatformSurface
operator|*
name|surface
argument_list|)
block|;
name|void
name|doneCurrent
argument_list|()
block|;
name|void
name|swapBuffers
argument_list|(
name|QPlatformSurface
operator|*
name|surface
argument_list|)
block|;
name|QFunctionPointer
name|getProcAddress
argument_list|(
specifier|const
name|QByteArray
operator|&
name|procName
argument_list|)
block|;
name|virtual
name|QSurfaceFormat
name|format
argument_list|()
specifier|const
block|{
return|return
name|m_windowFormat
return|;
block|}
name|bool
name|isSharing
argument_list|()
specifier|const
block|;
specifier|static
name|EGLDisplay
name|getEglDisplay
argument_list|()
block|;
name|EGLConfig
name|getEglConfig
argument_list|()
specifier|const
block|{
return|return
name|m_eglConfig
return|;
block|}
name|EGLContext
name|getEglContext
argument_list|()
specifier|const
block|{
return|return
name|m_eglContext
return|;
block|}
name|private
operator|:
comment|//Can be static because different displays returne the same handle
specifier|static
name|EGLDisplay
name|ms_eglDisplay
block|;
name|QSurfaceFormat
name|m_windowFormat
block|;
name|QOpenGLContext
operator|*
name|m_glContext
block|;
name|EGLConfig
name|m_eglConfig
block|;
name|EGLContext
name|m_eglContext
block|;
name|EGLContext
name|m_eglShareContext
block|;
name|EGLSurface
name|m_currentEglSurface
block|;
specifier|static
name|EGLint
operator|*
name|contextAttrs
argument_list|(
specifier|const
name|QSurfaceFormat
operator|&
name|format
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QQNXGLCONTEXT_H
end_comment
end_unit
