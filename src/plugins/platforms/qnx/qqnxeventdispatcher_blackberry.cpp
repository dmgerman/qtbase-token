begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2012 Research In Motion ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qqnxeventdispatcher_blackberry.h"
end_include
begin_include
include|#
directive|include
file|<qpa/qwindowsysteminterface.h>
end_include
begin_include
include|#
directive|include
file|<private/qguiapplication_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QQnxEventDispatcherBlackberry
name|QQnxEventDispatcherBlackberry
operator|::
name|QQnxEventDispatcherBlackberry
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QEventDispatcherBlackberry
argument_list|(
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QQnxEventDispatcherBlackberry
name|QQnxEventDispatcherBlackberry
operator|::
name|~
name|QQnxEventDispatcherBlackberry
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|processEvents
name|bool
name|QQnxEventDispatcherBlackberry
operator|::
name|processEvents
parameter_list|(
name|QEventLoop
operator|::
name|ProcessEventsFlags
name|flags
parameter_list|)
block|{
specifier|const
name|bool
name|didSendEvents
init|=
name|QWindowSystemInterface
operator|::
name|sendWindowSystemEvents
argument_list|(
name|flags
argument_list|)
decl_stmt|;
if|if
condition|(
name|QEventDispatcherBlackberry
operator|::
name|processEvents
argument_list|(
name|flags
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
name|didSendEvents
return|;
block|}
end_function
begin_function
DECL|function|hasPendingEvents
name|bool
name|QQnxEventDispatcherBlackberry
operator|::
name|hasPendingEvents
parameter_list|()
block|{
return|return
name|QEventDispatcherBlackberry
operator|::
name|hasPendingEvents
argument_list|()
operator|||
name|QWindowSystemInterface
operator|::
name|windowSystemEventsQueued
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|flush
name|void
name|QQnxEventDispatcherBlackberry
operator|::
name|flush
parameter_list|()
block|{
if|if
condition|(
name|qApp
condition|)
name|qApp
operator|->
name|sendPostedEvents
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
