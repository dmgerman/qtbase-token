begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2011 - 2012 Research In Motion ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QQNXINPUTCONTEXT_H
end_ifndef
begin_define
DECL|macro|QQNXINPUTCONTEXT_H
define|#
directive|define
name|QQNXINPUTCONTEXT_H
end_define
begin_include
include|#
directive|include
file|<QtCore/QLocale>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatforminputcontext.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformintegration.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QQnxAbstractVirtualKeyboard
name|class
name|QQnxAbstractVirtualKeyboard
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QQnxIntegration
name|class
name|QQnxIntegration
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QQnxInputContext
range|:
name|public
name|QPlatformInputContext
block|{
name|Q_OBJECT
name|public
operator|:
name|explicit
name|QQnxInputContext
argument_list|(
name|QQnxIntegration
operator|*
name|integration
argument_list|,
name|QQnxAbstractVirtualKeyboard
operator|&
name|keyboard
argument_list|)
block|;
operator|~
name|QQnxInputContext
argument_list|()
block|;
name|bool
name|isValid
argument_list|()
specifier|const
block|;
name|void
name|reset
argument_list|()
block|;
name|bool
name|filterEvent
argument_list|(
specifier|const
name|QEvent
operator|*
name|event
argument_list|)
block|;
name|QRectF
name|keyboardRect
argument_list|()
specifier|const
block|;
name|bool
name|handleKeyboardEvent
argument_list|(
argument|int flags
argument_list|,
argument|int sym
argument_list|,
argument|int mod
argument_list|,
argument|int scan
argument_list|,
argument|int cap
argument_list|)
block|;
name|void
name|showInputPanel
argument_list|()
block|;
name|void
name|hideInputPanel
argument_list|()
block|;
name|bool
name|isInputPanelVisible
argument_list|()
specifier|const
block|;
name|QLocale
name|locale
argument_list|()
specifier|const
block|;
name|void
name|setFocusObject
argument_list|(
name|QObject
operator|*
name|object
argument_list|)
block|;
name|private
name|Q_SLOTS
operator|:
name|void
name|keyboardHeightChanged
argument_list|()
block|;
name|void
name|keyboardVisibilityChanged
argument_list|(
argument|bool visible
argument_list|)
block|;
name|void
name|keyboardLocaleChanged
argument_list|(
specifier|const
name|QLocale
operator|&
name|locale
argument_list|)
block|;
name|private
operator|:
name|bool
name|hasPhysicalKeyboard
argument_list|()
block|;
name|bool
name|m_inputPanelVisible
block|;
name|QLocale
name|m_inputPanelLocale
block|;
name|QQnxIntegration
operator|*
name|m_integration
block|;
name|QQnxAbstractVirtualKeyboard
operator|&
name|m_virtualKeyboard
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QQNXINPUTCONTEXT_H
end_comment
end_unit
