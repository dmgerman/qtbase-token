begin_unit
begin_comment
comment|/*************************************************************************** ** ** Copyright (C) 2011 - 2012 Research In Motion ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QQNXGLBACKINGSTORE_H
end_ifndef
begin_define
DECL|macro|QQNXGLBACKINGSTORE_H
define|#
directive|define
name|QQNXGLBACKINGSTORE_H
end_define
begin_include
include|#
directive|include
file|<QtGui/qplatformbackingstore_qpa.h>
end_include
begin_include
include|#
directive|include
file|<QtOpenGL/private/qglpaintdevice_p.h>
end_include
begin_include
include|#
directive|include
file|<screen/screen.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QGLContext
name|class
name|QGLContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QQnxGLContext
name|class
name|QQnxGLContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QQnxScreen
name|class
name|QQnxScreen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QQnxWindow
name|class
name|QQnxWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QQnxGLPaintDevice
range|:
name|public
name|QGLPaintDevice
block|{
name|public
operator|:
name|QQnxGLPaintDevice
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
block|;
operator|~
name|QQnxGLPaintDevice
argument_list|()
block|;
name|QPaintEngine
operator|*
name|paintEngine
argument_list|()
specifier|const
block|;
name|QSize
name|size
argument_list|()
specifier|const
block|;
name|QGLContext
operator|*
name|context
argument_list|()
specifier|const
block|{
return|return
name|m_glContext
return|;
block|}
name|private
operator|:
name|QQnxWindow
operator|*
name|m_window
block|;
name|QGLContext
operator|*
name|m_glContext
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QQnxGLBackingStore
range|:
name|public
name|QPlatformBackingStore
block|{
name|public
operator|:
name|QQnxGLBackingStore
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
block|;
operator|~
name|QQnxGLBackingStore
argument_list|()
block|;
name|QPaintDevice
operator|*
name|paintDevice
argument_list|()
block|{
return|return
name|m_paintDevice
return|;
block|}
name|void
name|flush
argument_list|(
name|QWindow
operator|*
name|window
argument_list|,
specifier|const
name|QRegion
operator|&
name|region
argument_list|,
specifier|const
name|QPoint
operator|&
name|offset
argument_list|)
block|;
name|void
name|resize
argument_list|(
specifier|const
name|QSize
operator|&
name|size
argument_list|,
specifier|const
name|QRegion
operator|&
name|staticContents
argument_list|)
block|;
name|void
name|beginPaint
argument_list|(
specifier|const
name|QRegion
operator|&
name|region
argument_list|)
block|;
name|void
name|endPaint
argument_list|(
specifier|const
name|QRegion
operator|&
name|region
argument_list|)
block|;
name|void
name|resizeSurface
argument_list|(
specifier|const
name|QSize
operator|&
name|size
argument_list|)
block|;
name|private
operator|:
name|QOpenGLContext
operator|*
name|m_openGLContext
block|;
name|QQnxGLPaintDevice
operator|*
name|m_paintDevice
block|;
name|QSize
name|m_requestedSize
block|;
name|QSize
name|m_size
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QQNXGLBACKINGSTORE_H
end_comment
end_unit
