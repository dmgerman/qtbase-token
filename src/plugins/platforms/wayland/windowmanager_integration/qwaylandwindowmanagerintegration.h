begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWAYLANDWINDOWMANAGERINTEGRATION_H
end_ifndef
begin_define
DECL|macro|QWAYLANDWINDOWMANAGERINTEGRATION_H
define|#
directive|define
name|QWAYLANDWINDOWMANAGERINTEGRATION_H
end_define
begin_include
include|#
directive|include
file|<QtCore/QObject>
end_include
begin_include
include|#
directive|include
file|<QtCore/QScopedPointer>
end_include
begin_include
include|#
directive|include
file|"wayland-client.h"
end_include
begin_include
include|#
directive|include
file|"qwaylanddisplay.h"
end_include
begin_decl_stmt
DECL|variable|QWaylandWindow
name|class
name|QWaylandWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWaylandWindowManagerIntegrationPrivate
name|class
name|QWaylandWindowManagerIntegrationPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QWaylandWindowManagerIntegration
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QWaylandWindowManagerIntegration
argument_list|)
name|public
operator|:
name|explicit
name|QWaylandWindowManagerIntegration
argument_list|(
name|QWaylandDisplay
operator|*
name|waylandDisplay
argument_list|)
block|;
name|virtual
operator|~
name|QWaylandWindowManagerIntegration
argument_list|()
block|;
specifier|static
name|QWaylandWindowManagerIntegration
operator|*
name|createIntegration
argument_list|(
name|QWaylandDisplay
operator|*
name|waylandDisplay
argument_list|)
block|;     struct
name|wl_windowmanager
operator|*
name|windowManager
argument_list|()
specifier|const
block|;
specifier|static
name|QWaylandWindowManagerIntegration
operator|*
name|instance
argument_list|()
block|;
name|void
name|mapSurfaceToProcess
argument_list|(
argument|struct wl_surface *surface
argument_list|,
argument|long long processId
argument_list|)
block|;
name|void
name|mapClientToProcess
argument_list|(
argument|long long processId
argument_list|)
block|;
name|void
name|authenticateWithToken
argument_list|(
specifier|const
name|QByteArray
operator|&
name|token
operator|=
name|QByteArray
argument_list|()
argument_list|)
block|;
name|void
name|setWindowProperty
argument_list|(
name|QWaylandWindow
operator|*
name|window
argument_list|,
specifier|const
name|QString
operator|&
name|propertyName
argument_list|,
specifier|const
name|QVariant
operator|&
name|propertyValue
argument_list|)
block|;
name|void
name|flushPropertyChanges
argument_list|(
name|QWaylandWindow
operator|*
name|windowToFlush
argument_list|)
block|;
name|private
name|slots
operator|:
name|void
name|removeQueuedPropertiesForWindow
argument_list|()
block|;
name|private
operator|:
specifier|static
name|void
name|wlHandleListenerGlobal
argument_list|(
argument|wl_display *display
argument_list|,
argument|uint32_t id
argument_list|,
argument|const char *interface
argument_list|,
argument|uint32_t version
argument_list|,
argument|void *data
argument_list|)
block|;
specifier|static
name|void
name|wlHandleOnScreenVisibilityChange
argument_list|(
argument|void *data
argument_list|,
argument|struct wl_windowmanager *wl_windowmanager
argument_list|,
argument|int visible
argument_list|)
block|;
specifier|static
name|void
name|wlHandleScreenOrientationChange
argument_list|(
argument|void *data
argument_list|,
argument|struct wl_windowmanager *wl_windowmanager
argument_list|,
argument|int screenOrientation
argument_list|)
block|;
specifier|static
name|void
name|wlHandleWindowPropertyChange
argument_list|(
name|void
operator|*
name|data
argument_list|,
expr|struct
name|wl_windowmanager
operator|*
name|wl_windowmanager
argument_list|,
expr|struct
name|wl_surface
operator|*
name|surface
argument_list|,
specifier|const
name|char
operator|*
name|propertyName
argument_list|,
expr|struct
name|wl_array
operator|*
name|propertyValue
argument_list|)
block|;
name|void
name|handleWindowPropertyChange
argument_list|(
name|QWaylandWindow
operator|*
name|window
argument_list|,
specifier|const
name|QString
operator|&
name|propertyName
argument_list|,
specifier|const
name|QVariant
operator|&
name|propertyValue
argument_list|)
block|;
name|private
operator|:
name|QScopedPointer
operator|<
name|QWaylandWindowManagerIntegrationPrivate
operator|>
name|d_ptr
block|;
specifier|static
name|QWaylandWindowManagerIntegration
operator|*
name|m_instance
block|;
specifier|static
specifier|const
expr|struct
name|wl_windowmanager_listener
name|m_windowManagerListener
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWAYLANDWINDOWMANAGERINTEGRATION_H
end_comment
end_unit
