begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|XCOMPOSITE_CLIENT_PROTOCOL_H
end_ifndef
begin_define
DECL|macro|XCOMPOSITE_CLIENT_PROTOCOL_H
define|#
directive|define
name|XCOMPOSITE_CLIENT_PROTOCOL_H
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
include|#
directive|include
file|<stdint.h>
include|#
directive|include
file|<stddef.h>
include|#
directive|include
file|"wayland-util.h"
struct_decl|struct
name|wl_client
struct_decl|;
struct_decl|struct
name|wl_xcomposite
struct_decl|;
specifier|extern
specifier|const
name|struct
name|wl_interface
name|wl_xcomposite_interface
decl_stmt|;
DECL|struct|wl_xcomposite_listener
struct|struct
name|wl_xcomposite_listener
block|{
DECL|member|root
name|void
function_decl|(
modifier|*
name|root
function_decl|)
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|wl_xcomposite
modifier|*
name|wl_xcomposite
parameter_list|,
specifier|const
name|char
modifier|*
name|display_name
parameter_list|,
name|uint32_t
name|root_window
parameter_list|)
function_decl|;
block|}
struct|;
specifier|static
specifier|inline
name|int
DECL|function|wl_xcomposite_add_listener
name|wl_xcomposite_add_listener
parameter_list|(
name|struct
name|wl_xcomposite
modifier|*
name|wl_xcomposite
parameter_list|,
specifier|const
name|struct
name|wl_xcomposite_listener
modifier|*
name|listener
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
block|{
return|return
name|wl_proxy_add_listener
argument_list|(
operator|(
expr|struct
name|wl_proxy
operator|*
operator|)
name|wl_xcomposite
argument_list|,
operator|(
name|void
argument_list|(
operator|*
operator|*
argument_list|)
argument_list|(
name|void
argument_list|)
operator|)
name|listener
argument_list|,
name|data
argument_list|)
return|;
block|}
DECL|macro|WL_XCOMPOSITE_CREATE_BUFFER
define|#
directive|define
name|WL_XCOMPOSITE_CREATE_BUFFER
value|0
specifier|static
specifier|inline
name|struct
name|wl_xcomposite
modifier|*
DECL|function|wl_xcomposite_create
name|wl_xcomposite_create
parameter_list|(
name|struct
name|wl_display
modifier|*
name|display
parameter_list|,
name|uint32_t
name|id
parameter_list|,
name|uint32_t
name|version
parameter_list|)
block|{
name|wl_display_bind
argument_list|(
name|display
argument_list|,
name|id
argument_list|,
literal|"wl_xcomposite"
argument_list|,
name|version
argument_list|)
expr_stmt|;
return|return
operator|(
expr|struct
name|wl_xcomposite
operator|*
operator|)
name|wl_proxy_create_for_id
argument_list|(
name|display
argument_list|,
operator|&
name|wl_xcomposite_interface
argument_list|,
name|id
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|void
DECL|function|wl_xcomposite_set_user_data
name|wl_xcomposite_set_user_data
parameter_list|(
name|struct
name|wl_xcomposite
modifier|*
name|wl_xcomposite
parameter_list|,
name|void
modifier|*
name|user_data
parameter_list|)
block|{
name|wl_proxy_set_user_data
argument_list|(
operator|(
expr|struct
name|wl_proxy
operator|*
operator|)
name|wl_xcomposite
argument_list|,
name|user_data
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|inline
name|void
modifier|*
DECL|function|wl_xcomposite_get_user_data
name|wl_xcomposite_get_user_data
parameter_list|(
name|struct
name|wl_xcomposite
modifier|*
name|wl_xcomposite
parameter_list|)
block|{
return|return
name|wl_proxy_get_user_data
argument_list|(
operator|(
expr|struct
name|wl_proxy
operator|*
operator|)
name|wl_xcomposite
argument_list|)
return|;
block|}
specifier|static
specifier|inline
name|void
DECL|function|wl_xcomposite_destroy
name|wl_xcomposite_destroy
parameter_list|(
name|struct
name|wl_xcomposite
modifier|*
name|wl_xcomposite
parameter_list|)
block|{
name|wl_proxy_destroy
argument_list|(
operator|(
expr|struct
name|wl_proxy
operator|*
operator|)
name|wl_xcomposite
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|inline
name|struct
name|wl_buffer
modifier|*
DECL|function|wl_xcomposite_create_buffer
name|wl_xcomposite_create_buffer
parameter_list|(
name|struct
name|wl_xcomposite
modifier|*
name|wl_xcomposite
parameter_list|,
name|uint32_t
name|x_window
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|,
name|struct
name|wl_visual
modifier|*
name|visual
parameter_list|)
block|{
name|struct
name|wl_proxy
modifier|*
name|id
decl_stmt|;
name|id
operator|=
name|wl_proxy_create
argument_list|(
operator|(
expr|struct
name|wl_proxy
operator|*
operator|)
name|wl_xcomposite
argument_list|,
operator|&
name|wl_buffer_interface
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|id
condition|)
return|return
name|NULL
return|;
name|wl_proxy_marshal
argument_list|(
operator|(
expr|struct
name|wl_proxy
operator|*
operator|)
name|wl_xcomposite
argument_list|,
name|WL_XCOMPOSITE_CREATE_BUFFER
argument_list|,
name|id
argument_list|,
name|x_window
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|visual
argument_list|)
expr_stmt|;
return|return
operator|(
expr|struct
name|wl_buffer
operator|*
operator|)
name|id
return|;
block|}
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
