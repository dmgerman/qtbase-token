begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qwaylandnativeinterface.h"
end_include
begin_include
include|#
directive|include
file|"qwaylanddisplay.h"
end_include
begin_include
include|#
directive|include
file|"qwaylandwindow.h"
end_include
begin_include
include|#
directive|include
file|<QtGui/private/qapplication_p.h>
end_include
begin_function
DECL|function|nativeResourceForWidget
name|void
modifier|*
name|QWaylandNativeInterface
operator|::
name|nativeResourceForWidget
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|resourceString
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QByteArray
name|lowerCaseResource
init|=
name|resourceString
operator|.
name|toLower
argument_list|()
decl_stmt|;
if|if
condition|(
name|lowerCaseResource
operator|==
literal|"display"
condition|)
return|return
name|qPlatformScreenForWidget
argument_list|(
name|widget
argument_list|)
operator|->
name|display
argument_list|()
operator|->
name|wl_display
argument_list|()
return|;
if|if
condition|(
name|lowerCaseResource
operator|==
literal|"surface"
condition|)
block|{
return|return
operator|(
operator|(
name|QWaylandWindow
operator|*
operator|)
name|widget
operator|->
name|platformWindow
argument_list|()
operator|)
operator|->
name|wl_surface
argument_list|()
return|;
block|}
return|return
name|NULL
return|;
block|}
end_function
begin_function
DECL|function|qPlatformScreenForWidget
name|QWaylandScreen
modifier|*
name|QWaylandNativeInterface
operator|::
name|qPlatformScreenForWidget
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QWaylandScreen
modifier|*
name|screen
decl_stmt|;
if|if
condition|(
name|widget
condition|)
block|{
name|screen
operator|=
cast|static_cast
argument_list|<
name|QWaylandScreen
operator|*
argument_list|>
argument_list|(
name|QPlatformScreen
operator|::
name|platformScreenForWidget
argument_list|(
name|widget
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|screen
operator|=
cast|static_cast
argument_list|<
name|QWaylandScreen
operator|*
argument_list|>
argument_list|(
name|QApplicationPrivate
operator|::
name|platformIntegration
argument_list|()
operator|->
name|screens
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|screen
return|;
block|}
end_function
end_unit
