begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWAYLANDINPUTDEVICE_H
end_ifndef
begin_define
DECL|macro|QWAYLANDINPUTDEVICE_H
define|#
directive|define
name|QWAYLANDINPUTDEVICE_H
end_define
begin_include
include|#
directive|include
file|"qwaylandwindow.h"
end_include
begin_include
include|#
directive|include
file|<QSocketNotifier>
end_include
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QtGui/QPlatformIntegration>
end_include
begin_include
include|#
directive|include
file|<QtGui/QPlatformScreen>
end_include
begin_include
include|#
directive|include
file|<wayland-client.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QWaylandWindow
name|class
name|QWaylandWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QWaylandInputDevice
block|{
name|public
label|:
name|QWaylandInputDevice
argument_list|(
argument|struct wl_display *display
argument_list|,
argument|uint32_t id
argument_list|)
empty_stmt|;
name|void
name|attach
parameter_list|(
name|QWaylandBuffer
modifier|*
name|buffer
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
function_decl|;
name|void
name|handleWindowDestroyed
parameter_list|(
name|QWaylandWindow
modifier|*
name|window
parameter_list|)
function_decl|;
block|struct
name|wl_input_device
operator|*
name|wl_input_device
argument_list|()
specifier|const
block|{
return|return
name|mInputDevice
return|;
block|}
name|private
label|:
name|struct
name|wl_display
modifier|*
name|mDisplay
decl_stmt|;
name|struct
name|wl_input_device
modifier|*
name|mInputDevice
decl_stmt|;
name|QWaylandWindow
modifier|*
name|mPointerFocus
decl_stmt|;
name|QWaylandWindow
modifier|*
name|mKeyboardFocus
decl_stmt|;
specifier|static
specifier|const
name|struct
name|wl_input_device_listener
name|inputDeviceListener
decl_stmt|;
name|Qt
operator|::
name|MouseButtons
name|mButtons
expr_stmt|;
name|QPoint
name|mSurfacePos
decl_stmt|;
name|QPoint
name|mGlobalPos
decl_stmt|;
name|struct
name|xkb_desc
modifier|*
name|mXkb
decl_stmt|;
name|Qt
operator|::
name|KeyboardModifiers
name|mModifiers
expr_stmt|;
name|uint32_t
name|mTime
decl_stmt|;
specifier|static
name|void
name|inputHandleMotion
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|wl_input_device
modifier|*
name|input_device
parameter_list|,
name|uint32_t
name|time
parameter_list|,
name|int32_t
name|x
parameter_list|,
name|int32_t
name|y
parameter_list|,
name|int32_t
name|sx
parameter_list|,
name|int32_t
name|sy
parameter_list|)
function_decl|;
specifier|static
name|void
name|inputHandleButton
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|wl_input_device
modifier|*
name|input_device
parameter_list|,
name|uint32_t
name|time
parameter_list|,
name|uint32_t
name|button
parameter_list|,
name|uint32_t
name|state
parameter_list|)
function_decl|;
specifier|static
name|void
name|inputHandleKey
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|wl_input_device
modifier|*
name|input_device
parameter_list|,
name|uint32_t
name|time
parameter_list|,
name|uint32_t
name|key
parameter_list|,
name|uint32_t
name|state
parameter_list|)
function_decl|;
specifier|static
name|void
name|inputHandlePointerFocus
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|wl_input_device
modifier|*
name|input_device
parameter_list|,
name|uint32_t
name|time
parameter_list|,
name|struct
name|wl_surface
modifier|*
name|surface
parameter_list|,
name|int32_t
name|x
parameter_list|,
name|int32_t
name|y
parameter_list|,
name|int32_t
name|sx
parameter_list|,
name|int32_t
name|sy
parameter_list|)
function_decl|;
specifier|static
name|void
name|inputHandleKeyboardFocus
parameter_list|(
name|void
modifier|*
name|data
parameter_list|,
name|struct
name|wl_input_device
modifier|*
name|input_device
parameter_list|,
name|uint32_t
name|time
parameter_list|,
name|struct
name|wl_surface
modifier|*
name|surface
parameter_list|,
name|struct
name|wl_array
modifier|*
name|keys
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
