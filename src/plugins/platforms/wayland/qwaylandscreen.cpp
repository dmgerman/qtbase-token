begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qwaylandscreen.h"
end_include
begin_include
include|#
directive|include
file|"qwaylanddisplay.h"
end_include
begin_include
include|#
directive|include
file|"qwaylandcursor.h"
end_include
begin_constructor
DECL|function|QWaylandScreen
name|QWaylandScreen
operator|::
name|QWaylandScreen
parameter_list|(
name|QWaylandDisplay
modifier|*
name|waylandDisplay
parameter_list|,
name|struct
name|wl_output
modifier|*
name|output
parameter_list|,
name|QRect
name|geometry
parameter_list|)
member_init_list|:
name|QPlatformScreen
argument_list|()
member_init_list|,
name|mWaylandDisplay
argument_list|(
name|waylandDisplay
argument_list|)
member_init_list|,
name|mOutput
argument_list|(
name|output
argument_list|)
member_init_list|,
name|mGeometry
argument_list|(
name|geometry
argument_list|)
member_init_list|,
name|mDepth
argument_list|(
literal|32
argument_list|)
member_init_list|,
name|mFormat
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
member_init_list|,
name|mWaylandCursor
argument_list|(
operator|new
name|QWaylandCursor
argument_list|(
name|this
argument_list|)
argument_list|)
block|{
name|moveToThread
argument_list|(
name|waylandDisplay
operator|->
name|thread
argument_list|()
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QWaylandScreen
name|QWaylandScreen
operator|::
name|~
name|QWaylandScreen
parameter_list|()
block|{
operator|delete
name|mWaylandCursor
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|display
name|QWaylandDisplay
modifier|*
name|QWaylandScreen
operator|::
name|display
parameter_list|()
specifier|const
block|{
return|return
name|mWaylandDisplay
return|;
block|}
end_function
begin_function
DECL|function|geometry
name|QRect
name|QWaylandScreen
operator|::
name|geometry
parameter_list|()
specifier|const
block|{
return|return
name|mGeometry
return|;
block|}
end_function
begin_function
DECL|function|depth
name|int
name|QWaylandScreen
operator|::
name|depth
parameter_list|()
specifier|const
block|{
return|return
name|mDepth
return|;
block|}
end_function
begin_function
DECL|function|format
name|QImage
operator|::
name|Format
name|QWaylandScreen
operator|::
name|format
parameter_list|()
specifier|const
block|{
return|return
name|mFormat
return|;
block|}
end_function
begin_function
DECL|function|waylandScreenFromWidget
name|QWaylandScreen
modifier|*
name|QWaylandScreen
operator|::
name|waylandScreenFromWidget
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QPlatformScreen
modifier|*
name|platformScreen
init|=
name|QPlatformScreen
operator|::
name|platformScreenForWidget
argument_list|(
name|widget
argument_list|)
decl_stmt|;
return|return
cast|static_cast
argument_list|<
name|QWaylandScreen
operator|*
argument_list|>
argument_list|(
name|platformScreen
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|visual
name|wl_visual
modifier|*
name|QWaylandScreen
operator|::
name|visual
parameter_list|()
specifier|const
block|{
name|struct
name|wl_visual
modifier|*
name|visual
decl_stmt|;
switch|switch
condition|(
name|format
argument_list|()
condition|)
block|{
case|case
name|QImage
operator|::
name|Format_ARGB32
case|:
name|visual
operator|=
name|mWaylandDisplay
operator|->
name|argbVisual
argument_list|()
expr_stmt|;
break|break;
case|case
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
case|:
name|visual
operator|=
name|mWaylandDisplay
operator|->
name|argbPremultipliedVisual
argument_list|()
expr_stmt|;
break|break;
default|default:
name|qDebug
argument_list|(
literal|"unsupported buffer format %d requested\n"
argument_list|,
name|format
argument_list|()
argument_list|)
expr_stmt|;
name|visual
operator|=
name|mWaylandDisplay
operator|->
name|argbVisual
argument_list|()
expr_stmt|;
break|break;
block|}
return|return
name|visual
return|;
block|}
end_function
end_unit
