begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014-2015 Canonical, Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIRCLIENTWINDOW_H
end_ifndef
begin_define
DECL|macro|QMIRCLIENTWINDOW_H
define|#
directive|define
name|QMIRCLIENTWINDOW_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformwindow.h>
end_include
begin_include
include|#
directive|include
file|<QSharedPointer>
end_include
begin_include
include|#
directive|include
file|<QMutex>
end_include
begin_include
include|#
directive|include
file|<memory>
end_include
begin_decl_stmt
DECL|variable|QMirClientClipboard
name|class
name|QMirClientClipboard
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMirClientInput
name|class
name|QMirClientInput
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMirClientScreen
name|class
name|QMirClientScreen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMirClientSurface
name|class
name|QMirClientSurface
decl_stmt|;
end_decl_stmt
begin_struct_decl
struct_decl|struct
name|MirConnection
struct_decl|;
end_struct_decl
begin_struct_decl
struct_decl|struct
name|MirSurface
struct_decl|;
end_struct_decl
begin_decl_stmt
DECL|variable|QObject
name|class
name|QMirClientWindow
range|:
name|public
name|QObject
decl_stmt|,
name|public
name|QPlatformWindow
block|{
name|Q_OBJECT
name|public
range|:
name|QMirClientWindow
argument_list|(
name|QWindow
operator|*
name|w
argument_list|,
specifier|const
name|QSharedPointer
operator|<
name|QMirClientClipboard
operator|>
operator|&
name|clipboard
argument_list|,
name|QMirClientScreen
operator|*
name|screen
argument_list|,
name|QMirClientInput
operator|*
name|input
argument_list|,
name|MirConnection
operator|*
name|mirConnection
argument_list|)
decl_stmt|;
name|virtual
operator|~
name|QMirClientWindow
argument_list|()
expr_stmt|;
comment|// QPlatformWindow methods.
name|WId
name|winId
argument_list|()
specifier|const
name|override
expr_stmt|;
name|void
name|setGeometry
argument_list|(
specifier|const
name|QRect
operator|&
argument_list|)
name|override
decl_stmt|;
name|void
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowState
name|state
argument_list|)
name|override
decl_stmt|;
name|void
name|setVisible
argument_list|(
name|bool
name|visible
argument_list|)
name|override
decl_stmt|;
name|void
name|setWindowTitle
argument_list|(
specifier|const
name|QString
operator|&
name|title
argument_list|)
name|override
decl_stmt|;
name|void
name|propagateSizeHints
argument_list|()
name|override
expr_stmt|;
comment|// New methods.
name|void
operator|*
name|eglSurface
argument_list|()
specifier|const
expr_stmt|;
name|MirSurface
operator|*
name|mirSurface
argument_list|()
specifier|const
expr_stmt|;
name|void
name|handleSurfaceResized
parameter_list|(
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
name|void
name|handleSurfaceFocused
parameter_list|()
function_decl|;
name|void
name|onSwapBuffersDone
parameter_list|()
function_decl|;
name|private
label|:
name|void
name|updatePanelHeightHack
argument_list|(
name|Qt
operator|::
name|WindowState
argument_list|)
decl_stmt|;
name|mutable
name|QMutex
name|mMutex
decl_stmt|;
specifier|const
name|WId
name|mId
decl_stmt|;
specifier|const
name|QSharedPointer
operator|<
name|QMirClientClipboard
operator|>
name|mClipboard
expr_stmt|;
name|std
operator|::
name|unique_ptr
operator|<
name|QMirClientSurface
operator|>
name|mSurface
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIRCLIENTWINDOW_H
end_comment
end_unit
