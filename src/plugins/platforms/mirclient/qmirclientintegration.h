begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Canonical, Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL3$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPLv3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or later as published by the Free ** Software Foundation and appearing in the file LICENSE.GPL included in ** the packaging of this file. Please review the following information to ** ensure the GNU General Public License version 2.0 requirements will be ** met: http://www.gnu.org/licenses/gpl-2.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIRCLIENTINTEGRATION_H
end_ifndef
begin_define
DECL|macro|QMIRCLIENTINTEGRATION_H
define|#
directive|define
name|QMIRCLIENTINTEGRATION_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformintegration.h>
end_include
begin_include
include|#
directive|include
file|<QSharedPointer>
end_include
begin_include
include|#
directive|include
file|"qmirclientplatformservices.h"
end_include
begin_comment
comment|// platform-api
end_comment
begin_include
include|#
directive|include
file|<ubuntu/application/description.h>
end_include
begin_include
include|#
directive|include
file|<ubuntu/application/instance.h>
end_include
begin_decl_stmt
DECL|variable|QMirClientClipboard
name|class
name|QMirClientClipboard
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMirClientInput
name|class
name|QMirClientInput
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMirClientNativeInterface
name|class
name|QMirClientNativeInterface
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMirClientScreen
name|class
name|QMirClientScreen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QMirClientClientIntegration
range|:
name|public
name|QPlatformIntegration
block|{
name|public
operator|:
name|QMirClientClientIntegration
argument_list|()
block|;
name|virtual
operator|~
name|QMirClientClientIntegration
argument_list|()
block|;
comment|// QPlatformIntegration methods.
name|bool
name|hasCapability
argument_list|(
argument|QPlatformIntegration::Capability cap
argument_list|)
specifier|const
name|override
block|;
name|QAbstractEventDispatcher
operator|*
name|createEventDispatcher
argument_list|()
specifier|const
name|override
block|;
name|QPlatformNativeInterface
operator|*
name|nativeInterface
argument_list|()
specifier|const
name|override
block|;
name|QPlatformBackingStore
operator|*
name|createPlatformBackingStore
argument_list|(
argument|QWindow* window
argument_list|)
specifier|const
name|override
block|;
name|QPlatformOpenGLContext
operator|*
name|createPlatformOpenGLContext
argument_list|(
argument|QOpenGLContext* context
argument_list|)
specifier|const
name|override
block|;
name|QPlatformFontDatabase
operator|*
name|fontDatabase
argument_list|()
specifier|const
name|override
block|{
return|return
name|mFontDb
return|;
block|}
name|QStringList
name|themeNames
argument_list|()
specifier|const
name|override
block|;
name|QPlatformTheme
operator|*
name|createPlatformTheme
argument_list|(
argument|const QString& name
argument_list|)
specifier|const
name|override
block|;
name|QVariant
name|styleHint
argument_list|(
argument|StyleHint hint
argument_list|)
specifier|const
name|override
block|;
name|QPlatformServices
operator|*
name|services
argument_list|()
specifier|const
name|override
block|;
name|QPlatformWindow
operator|*
name|createPlatformWindow
argument_list|(
argument|QWindow* window
argument_list|)
specifier|const
name|override
block|;
name|QPlatformInputContext
operator|*
name|inputContext
argument_list|()
specifier|const
name|override
block|{
return|return
name|mInputContext
return|;
block|}
name|QPlatformClipboard
operator|*
name|clipboard
argument_list|()
specifier|const
name|override
block|;
name|QPlatformOpenGLContext
operator|*
name|createPlatformOpenGLContext
argument_list|(
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
name|QPlatformWindow
operator|*
name|createPlatformWindow
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
block|;
name|QMirClientScreen
operator|*
name|screen
argument_list|()
specifier|const
block|{
return|return
name|mScreen
return|;
block|}
name|private
operator|:
name|void
name|setupOptions
argument_list|()
block|;
name|void
name|setupDescription
argument_list|()
block|;
name|QMirClientNativeInterface
operator|*
name|mNativeInterface
block|;
name|QPlatformFontDatabase
operator|*
name|mFontDb
block|;
name|QMirClientPlatformServices
operator|*
name|mServices
block|;
name|QMirClientScreen
operator|*
name|mScreen
block|;
name|QMirClientInput
operator|*
name|mInput
block|;
name|QPlatformInputContext
operator|*
name|mInputContext
block|;
name|QSharedPointer
operator|<
name|QMirClientClipboard
operator|>
name|mClipboard
block|;
name|qreal
name|mScaleFactor
block|;
comment|// Platform API stuff
name|UApplicationOptions
operator|*
name|mOptions
block|;
name|UApplicationDescription
operator|*
name|mDesc
block|;
name|UApplicationInstance
operator|*
name|mInstance
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIRCLIENTINTEGRATION_H
end_comment
end_unit
