begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 Canonical, Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIRCLIENTCLIPBOARD_H
end_ifndef
begin_define
DECL|macro|QMIRCLIENTCLIPBOARD_H
define|#
directive|define
name|QMIRCLIENTCLIPBOARD_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformclipboard.h>
end_include
begin_include
include|#
directive|include
file|<QMimeData>
end_include
begin_include
include|#
directive|include
file|<QPointer>
end_include
begin_decl_stmt
DECL|variable|QDBusInterface
name|class
name|QDBusInterface
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QDBusPendingCallWatcher
name|class
name|QDBusPendingCallWatcher
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QObject
name|class
name|QMirClientClipboard
range|:
name|public
name|QObject
decl_stmt|,
name|public
name|QPlatformClipboard
block|{
name|Q_OBJECT
name|public
range|:
name|QMirClientClipboard
argument_list|()
decl_stmt|;
name|virtual
operator|~
name|QMirClientClipboard
argument_list|()
expr_stmt|;
comment|// QPlatformClipboard methods.
name|QMimeData
modifier|*
name|mimeData
argument_list|(
name|QClipboard
operator|::
name|Mode
name|mode
operator|=
name|QClipboard
operator|::
name|Clipboard
argument_list|)
name|override
decl_stmt|;
name|void
name|setMimeData
argument_list|(
name|QMimeData
operator|*
name|data
argument_list|,
name|QClipboard
operator|::
name|Mode
name|mode
operator|=
name|QClipboard
operator|::
name|Clipboard
argument_list|)
name|override
decl_stmt|;
name|bool
name|supportsMode
argument_list|(
name|QClipboard
operator|::
name|Mode
name|mode
argument_list|)
decl|const
name|override
decl_stmt|;
name|bool
name|ownsMode
argument_list|(
name|QClipboard
operator|::
name|Mode
name|mode
argument_list|)
decl|const
name|override
decl_stmt|;
name|void
name|requestDBusClipboardContents
parameter_list|()
function_decl|;
name|private
name|Q_SLOTS
range|:
name|void
name|onDBusClipboardGetContentsFinished
argument_list|(
name|QDBusPendingCallWatcher
operator|*
argument_list|)
decl_stmt|;
name|void
name|onDBusClipboardSetContentsFinished
parameter_list|(
name|QDBusPendingCallWatcher
modifier|*
parameter_list|)
function_decl|;
name|void
name|updateMimeData
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|serializedMimeData
parameter_list|)
function_decl|;
name|private
label|:
name|void
name|setupDBus
parameter_list|()
function_decl|;
name|QByteArray
name|serializeMimeData
argument_list|(
name|QMimeData
operator|*
name|mimeData
argument_list|)
decl|const
decl_stmt|;
name|QMimeData
modifier|*
name|deserializeMimeData
argument_list|(
specifier|const
name|QByteArray
operator|&
name|serializedMimeData
argument_list|)
decl|const
decl_stmt|;
name|void
name|setDBusClipboardContents
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|clipboardContents
parameter_list|)
function_decl|;
name|QMimeData
modifier|*
name|mMimeData
decl_stmt|;
name|bool
name|mIsOutdated
decl_stmt|;
name|QPointer
operator|<
name|QDBusInterface
operator|>
name|mDBusClipboard
expr_stmt|;
name|QPointer
operator|<
name|QDBusPendingCallWatcher
operator|>
name|mPendingGetContentsCall
expr_stmt|;
name|QPointer
operator|<
name|QDBusPendingCallWatcher
operator|>
name|mPendingSetContentsCall
expr_stmt|;
name|bool
name|mUpdatesDisabled
decl_stmt|;
name|bool
name|mDBusSetupDone
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIRCLIENTCLIPBOARD_H
end_comment
end_unit
