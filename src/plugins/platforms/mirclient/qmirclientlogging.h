begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 Canonical, Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMIRCLIENTLOGGING_H
end_ifndef
begin_define
DECL|macro|QMIRCLIENTLOGGING_H
define|#
directive|define
name|QMIRCLIENTLOGGING_H
end_define
begin_comment
comment|// Logging and assertion macros.
end_comment
begin_define
DECL|macro|LOG
define|#
directive|define
name|LOG
parameter_list|(
modifier|...
parameter_list|)
value|qDebug(__VA_ARGS__)
end_define
begin_define
DECL|macro|LOG_IF
define|#
directive|define
name|LOG_IF
parameter_list|(
name|cond
parameter_list|,
modifier|...
parameter_list|)
value|do { if (cond) qDebug(__VA_ARGS__); } while (0)
end_define
begin_define
DECL|macro|ASSERT
define|#
directive|define
name|ASSERT
parameter_list|(
name|cond
parameter_list|)
value|((!(cond)) ? qt_assert(#cond,__FILE__,__LINE__) : qt_noop())
end_define
begin_define
DECL|macro|NOT_REACHED
define|#
directive|define
name|NOT_REACHED
parameter_list|()
value|qt_assert("Not reached!",__FILE__,__LINE__)
end_define
begin_comment
comment|// Logging and assertion macros are compiled out for release builds.
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_DEBUG
argument_list|)
end_if
begin_define
DECL|macro|DLOG
define|#
directive|define
name|DLOG
parameter_list|(
modifier|...
parameter_list|)
value|LOG(__VA_ARGS__)
end_define
begin_define
DECL|macro|DLOG_IF
define|#
directive|define
name|DLOG_IF
parameter_list|(
name|cond
parameter_list|,
modifier|...
parameter_list|)
value|LOG_IF((cond), __VA_ARGS__)
end_define
begin_define
DECL|macro|DASSERT
define|#
directive|define
name|DASSERT
parameter_list|(
name|cond
parameter_list|)
value|ASSERT((cond))
end_define
begin_define
DECL|macro|DNOT_REACHED
define|#
directive|define
name|DNOT_REACHED
parameter_list|()
value|NOT_REACHED()
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|DLOG
define|#
directive|define
name|DLOG
parameter_list|(
modifier|...
parameter_list|)
value|qt_noop()
end_define
begin_define
DECL|macro|DLOG_IF
define|#
directive|define
name|DLOG_IF
parameter_list|(
name|cond
parameter_list|,
modifier|...
parameter_list|)
value|qt_noop()
end_define
begin_define
DECL|macro|DASSERT
define|#
directive|define
name|DASSERT
parameter_list|(
name|cond
parameter_list|)
value|qt_noop()
end_define
begin_define
DECL|macro|DNOT_REACHED
define|#
directive|define
name|DNOT_REACHED
parameter_list|()
value|qt_noop()
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QMIRCLIENTLOGGING_H
end_comment
end_unit
