begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|OPENKODEKEYTRANSLATOR_H
end_ifndef
begin_define
DECL|macro|OPENKODEKEYTRANSLATOR_H
define|#
directive|define
name|OPENKODEKEYTRANSLATOR_H
end_define
begin_ifdef
ifdef|#
directive|ifdef
name|KD_ATX_keyboard
end_ifdef
begin_include
include|#
directive|include
file|<KD/ATX_keyboard.h>
end_include
begin_expr_stmt
name|QT_BEGIN_NAMESPACE
DECL|function|keyTranslator
name|Qt
operator|::
name|Key
name|keyTranslator
argument_list|(
argument|int key
argument_list|)
block|{
switch|switch
condition|(
name|key
condition|)
block|{
comment|// KD_KEY_ACCEPT_ATX:
comment|// KD_KEY_AGAIN_ATX:
comment|// KD_KEY_ALLCANDIDATES_ATX
comment|// KD_KEY_ALPHANUMERIC_ATX
case|case
name|KD_KEY_ALT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Alt
return|;
case|case
name|KD_KEY_ALTGRAPH_ATX
case|:
return|return
name|Qt
operator|::
name|Key_AltGr
return|;
comment|// KD_KEY_APPS_ATX
comment|// KD_KEY_ATTN_ATX
comment|// KD_KEY_BROWSERBACK_ATX
comment|// KD_KEY_BROWSERFAVORITES_ATX
comment|// KD_KEY_BROWSERFORWARD_ATX
comment|// KD_KEY_BROWSERHOME_ATX
comment|// KD_KEY_BROWSERREFRESH_ATX
comment|// KD_KEY_BROWSERSEARCH_ATX
comment|// KD_KEY_BROWSERSTOP_ATX
case|case
name|KD_KEY_CAPSLOCK_ATX
case|:
return|return
name|Qt
operator|::
name|Key_CapsLock
return|;
case|case
name|KD_KEY_CLEAR_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Clear
return|;
case|case
name|KD_KEY_CODEINPUT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Codeinput
return|;
comment|// KD_KEY_COMPOSE_ATX
case|case
name|KD_KEY_CONTROL_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Control
return|;
comment|// KD_KEY_CRSEL_ATX
comment|// KD_KEY_CONVERT_ATX
case|case
name|KD_KEY_COPY_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Copy
return|;
case|case
name|KD_KEY_CUT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Cut
return|;
case|case
name|KD_KEY_DOWN_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Down
return|;
case|case
name|KD_KEY_END_ATX
case|:
return|return
name|Qt
operator|::
name|Key_End
return|;
case|case
name|KD_KEY_ENTER_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Enter
return|;
comment|// KD_KEY_ERASEEOF_ATX
comment|// KD_KEY_EXECUTE_ATX
comment|// KD_KEY_EXSEL_ATX
case|case
name|KD_KEY_F1_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F1
return|;
case|case
name|KD_KEY_F2_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F2
return|;
case|case
name|KD_KEY_F3_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F3
return|;
case|case
name|KD_KEY_F4_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F4
return|;
case|case
name|KD_KEY_F5_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F5
return|;
case|case
name|KD_KEY_F6_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F6
return|;
case|case
name|KD_KEY_F7_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F7
return|;
case|case
name|KD_KEY_F8_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F8
return|;
case|case
name|KD_KEY_F9_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F9
return|;
case|case
name|KD_KEY_F10_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F10
return|;
case|case
name|KD_KEY_F11_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F11
return|;
case|case
name|KD_KEY_F12_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F12
return|;
case|case
name|KD_KEY_F13_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F13
return|;
case|case
name|KD_KEY_F14_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F14
return|;
case|case
name|KD_KEY_F15_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F15
return|;
case|case
name|KD_KEY_F16_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F16
return|;
case|case
name|KD_KEY_F17_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F17
return|;
case|case
name|KD_KEY_F18_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F18
return|;
case|case
name|KD_KEY_F19_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F19
return|;
case|case
name|KD_KEY_F20_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F20
return|;
case|case
name|KD_KEY_F21_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F21
return|;
case|case
name|KD_KEY_F22_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F22
return|;
case|case
name|KD_KEY_F23_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F23
return|;
case|case
name|KD_KEY_F24_ATX
case|:
return|return
name|Qt
operator|::
name|Key_F24
return|;
comment|// KD_KEY_FINALMODE_ATX
comment|// KD_KEY_FIND_ATX
comment|// KD_KEY_FULLWIDTH_ATX
comment|// KD_KEY_HALFWIDTH_ATX
case|case
name|KD_KEY_HANGULMODE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Hangul
return|;
comment|// KD_KEY_HANJAMODE_ATX
case|case
name|KD_KEY_HELP_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Help
return|;
case|case
name|KD_KEY_HIRAGANA_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Hiragana
return|;
case|case
name|KD_KEY_HOME_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Home
return|;
case|case
name|KD_KEY_INSERT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Insert
return|;
comment|// KD_KEY_JAPANESEHIRAGANA_ATX:
comment|// KD_KEY_JAPANESEKATAKANA_ATX
comment|// KD_KEY_JAPANESEROMAJI_ATX
comment|// KD_KEY_JUNJAMODE_ATX
case|case
name|KD_KEY_KANAMODE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Kana_Lock
return|;
comment|//?
case|case
name|KD_KEY_KANJIMODE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Kanji
return|;
comment|// KD_KEY_KATAKANA_ATX
comment|// KD_KEY_LAUNCHAPPLICATION1_ATX
comment|// KD_KEY_LAUNCHAPPLICATION2_ATX
case|case
name|KD_KEY_LAUNCHMAIL_ATX
case|:
return|return
name|Qt
operator|::
name|Key_MailForward
return|;
case|case
name|KD_KEY_LEFT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Left
return|;
case|case
name|KD_KEY_META_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Meta
return|;
case|case
name|KD_KEY_MEDIANEXTTRACK_ATX
case|:
return|return
name|Qt
operator|::
name|Key_MediaNext
return|;
case|case
name|KD_KEY_MEDIAPLAYPAUSE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_MediaPause
return|;
case|case
name|KD_KEY_MEDIAPREVIOUSTRACK_ATX
case|:
return|return
name|Qt
operator|::
name|Key_MediaPrevious
return|;
case|case
name|KD_KEY_MEDIASTOP_ATX
case|:
return|return
name|Qt
operator|::
name|Key_MediaStop
return|;
case|case
name|KD_KEY_MODECHANGE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Mode_switch
return|;
comment|// KD_KEY_NONCONVERT_ATX
case|case
name|KD_KEY_NUMLOCK_ATX
case|:
return|return
name|Qt
operator|::
name|Key_NumLock
return|;
case|case
name|KD_KEY_PAGEDOWN_ATX
case|:
return|return
name|Qt
operator|::
name|Key_PageDown
return|;
case|case
name|KD_KEY_PAGEUP_ATX
case|:
return|return
name|Qt
operator|::
name|Key_PageUp
return|;
case|case
name|KD_KEY_PASTE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Paste
return|;
case|case
name|KD_KEY_PAUSE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Pause
return|;
case|case
name|KD_KEY_PLAY_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Play
return|;
comment|// KD_KEY_PREVIOUSCANDIDATE_ATX
case|case
name|KD_KEY_PRINTSCREEN_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Print
return|;
comment|// case KD_KEY_PROCESS_ATX
comment|// case KD_KEY_PROPS_ATX
case|case
name|KD_KEY_RIGHT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Right
return|;
comment|// KD_KEY_ROMANCHARACTERS_ATX
case|case
name|KD_KEY_SCROLL_ATX
case|:
return|return
name|Qt
operator|::
name|Key_ScrollLock
return|;
case|case
name|KD_KEY_SELECT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Select
return|;
comment|// KD_KEY_SELECTMEDIA_ATX
case|case
name|KD_KEY_SHIFT_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Shift
return|;
case|case
name|KD_KEY_STOP_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Stop
return|;
case|case
name|KD_KEY_UP_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Up
return|;
comment|// KD_KEY_UNDO_ATX
case|case
name|KD_KEY_VOLUMEDOWN_ATX
case|:
return|return
name|Qt
operator|::
name|Key_VolumeDown
return|;
case|case
name|KD_KEY_VOLUMEMUTE_ATX
case|:
return|return
name|Qt
operator|::
name|Key_VolumeMute
return|;
case|case
name|KD_KEY_VOLUMEUP_ATX
case|:
return|return
name|Qt
operator|::
name|Key_VolumeUp
return|;
case|case
name|KD_KEY_WIN_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Meta
return|;
case|case
name|KD_KEY_ZOOM_ATX
case|:
return|return
name|Qt
operator|::
name|Key_Zoom
return|;
case|case
literal|0x8
case|:
return|return
name|Qt
operator|::
name|Key_Backspace
return|;
case|case
literal|0x1b
case|:
return|return
name|Qt
operator|::
name|Key_Escape
return|;
case|case
literal|0x9
case|:
return|return
name|Qt
operator|::
name|Key_Tab
return|;
default|default:
break|break;
block|}
end_expr_stmt
begin_return
return|return
name|Qt
operator|::
name|Key_Escape
return|;
end_return
begin_endif
unit|}  QT_END_NAMESPACE
endif|#
directive|endif
end_endif
begin_comment
comment|//KD_ATX_keyboard
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// OPENKODEKEYTRANSLATOR_H
end_comment
end_unit
