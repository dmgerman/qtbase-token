begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qandroidplatformforeignwindow.h"
end_include
begin_include
include|#
directive|include
file|"androidjnimain.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qvariant.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qwindowsysteminterface.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/private/qjnihelpers_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QAndroidPlatformForeignWindow
name|QAndroidPlatformForeignWindow
operator|::
name|QAndroidPlatformForeignWindow
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|)
member_init_list|:
name|QAndroidPlatformWindow
argument_list|(
name|window
argument_list|)
member_init_list|,
name|m_surfaceId
argument_list|(
operator|-
literal|1
argument_list|)
block|{
specifier|const
name|WId
name|wId
init|=
name|window
operator|->
name|property
argument_list|(
literal|"_q_foreignWinId"
argument_list|)
operator|.
name|value
argument_list|<
name|WId
argument_list|>
argument_list|()
decl_stmt|;
name|m_view
operator|=
cast|reinterpret_cast
argument_list|<
name|jobject
argument_list|>
argument_list|(
name|wId
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_view
operator|.
name|isValid
argument_list|()
condition|)
name|QtAndroid
operator|::
name|setViewVisibility
argument_list|(
name|m_view
operator|.
name|object
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QAndroidPlatformForeignWindow
name|QAndroidPlatformForeignWindow
operator|::
name|~
name|QAndroidPlatformForeignWindow
parameter_list|()
block|{
if|if
condition|(
name|m_view
operator|.
name|isValid
argument_list|()
condition|)
name|QtAndroid
operator|::
name|setViewVisibility
argument_list|(
name|m_view
operator|.
name|object
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_surfaceId
operator|!=
operator|-
literal|1
condition|)
name|QtAndroid
operator|::
name|destroySurface
argument_list|(
name|m_surfaceId
argument_list|)
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|lower
name|void
name|QAndroidPlatformForeignWindow
operator|::
name|lower
parameter_list|()
block|{
if|if
condition|(
name|m_surfaceId
operator|==
operator|-
literal|1
condition|)
return|return;
name|QAndroidPlatformWindow
operator|::
name|lower
argument_list|()
expr_stmt|;
name|QtAndroid
operator|::
name|bringChildToBack
argument_list|(
name|m_surfaceId
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|raise
name|void
name|QAndroidPlatformForeignWindow
operator|::
name|raise
parameter_list|()
block|{
if|if
condition|(
name|m_surfaceId
operator|==
operator|-
literal|1
condition|)
return|return;
name|QAndroidPlatformWindow
operator|::
name|raise
argument_list|()
expr_stmt|;
name|QtAndroid
operator|::
name|bringChildToFront
argument_list|(
name|m_surfaceId
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGeometry
name|void
name|QAndroidPlatformForeignWindow
operator|::
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
block|{
name|QAndroidPlatformWindow
operator|::
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
if|if
condition|(
name|m_surfaceId
operator|!=
operator|-
literal|1
condition|)
name|QtAndroid
operator|::
name|setSurfaceGeometry
argument_list|(
name|m_surfaceId
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setVisible
name|void
name|QAndroidPlatformForeignWindow
operator|::
name|setVisible
parameter_list|(
name|bool
name|visible
parameter_list|)
block|{
if|if
condition|(
operator|!
name|m_view
operator|.
name|isValid
argument_list|()
condition|)
return|return;
name|QtAndroid
operator|::
name|setViewVisibility
argument_list|(
name|m_view
operator|.
name|object
argument_list|()
argument_list|,
name|visible
argument_list|)
expr_stmt|;
name|QAndroidPlatformWindow
operator|::
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|visible
operator|&&
name|m_surfaceId
operator|!=
operator|-
literal|1
condition|)
block|{
name|QtAndroid
operator|::
name|destroySurface
argument_list|(
name|m_surfaceId
argument_list|)
expr_stmt|;
name|m_surfaceId
operator|=
operator|-
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|m_surfaceId
operator|==
operator|-
literal|1
condition|)
block|{
name|m_surfaceId
operator|=
name|QtAndroid
operator|::
name|insertNativeView
argument_list|(
name|m_view
operator|.
name|object
argument_list|()
argument_list|,
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|applicationStateChanged
name|void
name|QAndroidPlatformForeignWindow
operator|::
name|applicationStateChanged
parameter_list|(
name|Qt
operator|::
name|ApplicationState
name|state
parameter_list|)
block|{
if|if
condition|(
name|state
operator|<=
name|Qt
operator|::
name|ApplicationHidden
operator|&&
name|m_surfaceId
operator|!=
operator|-
literal|1
condition|)
block|{
name|QtAndroid
operator|::
name|destroySurface
argument_list|(
name|m_surfaceId
argument_list|)
expr_stmt|;
name|m_surfaceId
operator|=
operator|-
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|m_view
operator|.
name|isValid
argument_list|()
operator|&&
name|m_surfaceId
operator|==
operator|-
literal|1
condition|)
block|{
name|m_surfaceId
operator|=
name|QtAndroid
operator|::
name|insertNativeView
argument_list|(
name|m_view
operator|.
name|object
argument_list|()
argument_list|,
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|QAndroidPlatformWindow
operator|::
name|applicationStateChanged
argument_list|(
name|state
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setParent
name|void
name|QAndroidPlatformForeignWindow
operator|::
name|setParent
parameter_list|(
specifier|const
name|QPlatformWindow
modifier|*
name|window
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|window
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
