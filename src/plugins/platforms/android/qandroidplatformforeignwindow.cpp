begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qandroidplatformforeignwindow.h"
end_include
begin_include
include|#
directive|include
file|"androidjnimain.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qvariant.h>
end_include
begin_constructor
DECL|function|QAndroidPlatformForeignWindow
name|QAndroidPlatformForeignWindow
operator|::
name|QAndroidPlatformForeignWindow
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|)
member_init_list|:
name|QAndroidPlatformWindow
argument_list|(
name|window
argument_list|)
block|{
specifier|const
name|WId
name|wId
init|=
name|window
operator|->
name|property
argument_list|(
literal|"_q_foreignWinId"
argument_list|)
operator|.
name|value
argument_list|<
name|WId
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|wId
condition|)
block|{
name|m_view
operator|=
cast|reinterpret_cast
argument_list|<
name|jobject
argument_list|>
argument_list|(
name|wId
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|m_view
operator|.
name|isValid
argument_list|()
argument_list|)
expr_stmt|;
name|m_surfaceId
operator|=
name|QtAndroid
operator|::
name|insertNativeView
argument_list|(
name|m_view
operator|.
name|object
argument_list|()
argument_list|,
name|geometry
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_constructor
begin_destructor
DECL|function|~QAndroidPlatformForeignWindow
name|QAndroidPlatformForeignWindow
operator|::
name|~
name|QAndroidPlatformForeignWindow
parameter_list|()
block|{
if|if
condition|(
name|m_surfaceId
operator|!=
operator|-
literal|1
condition|)
name|QtAndroid
operator|::
name|destroySurface
argument_list|(
name|m_surfaceId
argument_list|)
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|setGeometry
name|void
name|QAndroidPlatformForeignWindow
operator|::
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
block|{
if|if
condition|(
name|rect
operator|==
name|geometry
argument_list|()
condition|)
return|return;
name|QAndroidPlatformWindow
operator|::
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|QtAndroid
operator|::
name|setSurfaceGeometry
argument_list|(
name|m_surfaceId
argument_list|,
name|rect
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
