begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 BogDan Vatra<bogdan@kde.org> ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qandroidplatformscreen.h"
end_include
begin_include
include|#
directive|include
file|"qandroidplatformintegration.h"
end_include
begin_include
include|#
directive|include
file|"androidjnimain.h"
end_include
begin_include
include|#
directive|include
file|"androidjnimenu.h"
end_include
begin_constructor
DECL|function|QAndroidPlatformScreen
name|QAndroidPlatformScreen
operator|::
name|QAndroidPlatformScreen
parameter_list|()
member_init_list|:
name|QFbScreen
argument_list|()
block|{
name|mGeometry
operator|=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|QAndroidPlatformIntegration
operator|::
name|m_defaultGeometryWidth
argument_list|,
name|QAndroidPlatformIntegration
operator|::
name|m_defaultGeometryHeight
argument_list|)
expr_stmt|;
name|mFormat
operator|=
name|QImage
operator|::
name|Format_RGB16
expr_stmt|;
name|mDepth
operator|=
literal|16
expr_stmt|;
name|mPhysicalSize
operator|.
name|setHeight
argument_list|(
name|QAndroidPlatformIntegration
operator|::
name|m_defaultPhysicalSizeHeight
argument_list|)
expr_stmt|;
name|mPhysicalSize
operator|.
name|setWidth
argument_list|(
name|QAndroidPlatformIntegration
operator|::
name|m_defaultPhysicalSizeWidth
argument_list|)
expr_stmt|;
name|initializeCompositor
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|topWindowChanged
name|void
name|QAndroidPlatformScreen
operator|::
name|topWindowChanged
parameter_list|(
name|QWindow
modifier|*
name|w
parameter_list|)
block|{
name|QtAndroidMenu
operator|::
name|setActiveTopLevelWindow
argument_list|(
name|w
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|doRedraw
name|QRegion
name|QAndroidPlatformScreen
operator|::
name|doRedraw
parameter_list|()
block|{
name|QRegion
name|touched
decl_stmt|;
name|touched
operator|=
name|QFbScreen
operator|::
name|doRedraw
argument_list|()
expr_stmt|;
if|if
condition|(
name|touched
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|touched
return|;
name|QtAndroid
operator|::
name|flushImage
argument_list|(
name|mGeometry
operator|.
name|topLeft
argument_list|()
argument_list|,
operator|*
name|mScreenImage
argument_list|,
name|touched
operator|.
name|boundingRect
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|touched
return|;
block|}
end_function
begin_function
DECL|function|logicalDpi
name|QDpi
name|QAndroidPlatformScreen
operator|::
name|logicalDpi
parameter_list|()
specifier|const
block|{
name|qreal
name|lDpi
init|=
name|QtAndroid
operator|::
name|scaledDensity
argument_list|()
operator|*
literal|72
decl_stmt|;
return|return
name|QDpi
argument_list|(
name|lDpi
argument_list|,
name|lDpi
argument_list|)
return|;
block|}
end_function
end_unit
