begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 BogDan Vatra<bogdan@kde.org> ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QANDROIDPLATFORMTHEME_H
end_ifndef
begin_define
DECL|macro|QANDROIDPLATFORMTHEME_H
define|#
directive|define
name|QANDROIDPLATFORMTHEME_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformtheme.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qfont.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpalette.h>
end_include
begin_include
include|#
directive|include
file|<QJsonObject>
end_include
begin_include
include|#
directive|include
file|<memory>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_struct
DECL|struct|AndroidStyle
struct|struct
name|AndroidStyle
block|{
specifier|static
name|QJsonObject
name|loadStyleData
parameter_list|()
function_decl|;
DECL|member|m_styleData
name|QJsonObject
name|m_styleData
decl_stmt|;
DECL|member|m_standardPalette
name|QPalette
name|m_standardPalette
decl_stmt|;
DECL|member|m_palettes
name|QHash
operator|<
name|int
operator|,
name|QPalette
operator|>
name|m_palettes
expr_stmt|;
DECL|member|m_fonts
name|QHash
operator|<
name|int
operator|,
name|QFont
operator|>
name|m_fonts
expr_stmt|;
DECL|member|QByteArray
DECL|member|m_QWidgetsFonts
name|QHash
operator|<
name|QByteArray
operator|,
name|QFont
operator|>
name|m_QWidgetsFonts
expr_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
DECL|variable|QAndroidPlatformNativeInterface
name|class
name|QAndroidPlatformNativeInterface
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QAndroidPlatformTheme
range|:
name|public
name|QPlatformTheme
block|{
name|public
operator|:
name|QAndroidPlatformTheme
argument_list|(
name|QAndroidPlatformNativeInterface
operator|*
name|androidPlatformNativeInterface
argument_list|)
block|;
name|virtual
name|QPlatformMenuBar
operator|*
name|createPlatformMenuBar
argument_list|()
specifier|const
block|;
name|virtual
name|QPlatformMenu
operator|*
name|createPlatformMenu
argument_list|()
specifier|const
block|;
name|virtual
name|QPlatformMenuItem
operator|*
name|createPlatformMenuItem
argument_list|()
specifier|const
block|;
name|virtual
name|void
name|showPlatformMenuBar
argument_list|()
block|;
name|virtual
specifier|const
name|QPalette
operator|*
name|palette
argument_list|(
argument|Palette type = SystemPalette
argument_list|)
specifier|const
block|;
name|virtual
specifier|const
name|QFont
operator|*
name|font
argument_list|(
argument|Font type = SystemFont
argument_list|)
specifier|const
block|;
name|virtual
name|QVariant
name|themeHint
argument_list|(
argument|ThemeHint hint
argument_list|)
specifier|const
block|;
name|QString
name|standardButtonText
argument_list|(
argument|int button
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|virtual
name|bool
name|usePlatformNativeDialog
argument_list|(
argument|DialogType type
argument_list|)
specifier|const
block|;
name|virtual
name|QPlatformDialogHelper
operator|*
name|createPlatformDialogHelper
argument_list|(
argument|DialogType type
argument_list|)
specifier|const
block|;
name|private
operator|:
name|std
operator|::
name|shared_ptr
operator|<
name|AndroidStyle
operator|>
name|m_androidStyleData
block|;
name|QPalette
name|m_defaultPalette
block|;
name|QFont
name|m_systemFont
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QANDROIDPLATFORMTHEME_H
end_comment
end_unit
