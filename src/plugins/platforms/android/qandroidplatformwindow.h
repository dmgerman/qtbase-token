begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 BogDan Vatra<bogdan@kde.org> ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|ANDROIDPLATFORMWINDOW_H
end_ifndef
begin_define
DECL|macro|ANDROIDPLATFORMWINDOW_H
define|#
directive|define
name|ANDROIDPLATFORMWINDOW_H
end_define
begin_include
include|#
directive|include
file|<qobject.h>
end_include
begin_include
include|#
directive|include
file|<qrect.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformwindow.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QAndroidPlatformScreen
name|class
name|QAndroidPlatformScreen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QAndroidPlatformBackingStore
name|class
name|QAndroidPlatformBackingStore
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QAndroidPlatformWindow
range|:
name|public
name|QPlatformWindow
block|{
name|public
operator|:
name|explicit
name|QAndroidPlatformWindow
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
block|;
name|void
name|lower
argument_list|()
block|;
name|void
name|raise
argument_list|()
block|;
name|void
name|setVisible
argument_list|(
argument|bool visible
argument_list|)
block|;
name|void
name|setWindowState
argument_list|(
argument|Qt::WindowState state
argument_list|)
block|;
name|void
name|setWindowFlags
argument_list|(
argument|Qt::WindowFlags flags
argument_list|)
block|;
name|Qt
operator|::
name|WindowFlags
name|windowFlags
argument_list|()
specifier|const
block|;
name|void
name|setParent
argument_list|(
specifier|const
name|QPlatformWindow
operator|*
name|window
argument_list|)
block|;
name|WId
name|winId
argument_list|()
specifier|const
block|{
return|return
name|m_windowId
return|;
block|}
name|QAndroidPlatformScreen
operator|*
name|platformScreen
argument_list|()
specifier|const
block|;
name|void
name|propagateSizeHints
argument_list|()
block|;
name|void
name|requestActivateWindow
argument_list|()
block|;
name|void
name|updateStatusBarVisibility
argument_list|()
block|;
specifier|inline
name|bool
name|isRaster
argument_list|()
specifier|const
block|{
if|if
condition|(
operator|(
name|window
argument_list|()
operator|->
name|flags
argument_list|()
operator|&
name|Qt
operator|::
name|ForeignWindow
operator|)
operator|==
name|Qt
operator|::
name|ForeignWindow
condition|)
return|return
name|false
return|;
return|return
name|window
argument_list|()
operator|->
name|surfaceType
argument_list|()
operator|==
name|QSurface
operator|::
name|RasterSurface
operator|||
name|window
argument_list|()
operator|->
name|surfaceType
argument_list|()
operator|==
name|QSurface
operator|::
name|RasterGLSurface
return|;
block|}
end_decl_stmt
begin_expr_stmt
name|bool
name|isExposed
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|virtual
name|void
name|applicationStateChanged
argument_list|(
name|Qt
operator|::
name|ApplicationState
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function
name|void
name|setBackingStore
parameter_list|(
name|QAndroidPlatformBackingStore
modifier|*
name|store
parameter_list|)
block|{
name|m_backingStore
operator|=
name|store
expr_stmt|;
block|}
end_function
begin_expr_stmt
name|QAndroidPlatformBackingStore
operator|*
name|backingStore
argument_list|()
specifier|const
block|{
return|return
name|m_backingStore
return|;
block|}
end_expr_stmt
begin_function
name|virtual
name|void
name|repaint
parameter_list|(
specifier|const
name|QRegion
modifier|&
parameter_list|)
block|{ }
end_function
begin_label
name|protected
label|:
end_label
begin_function_decl
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
end_function_decl
begin_label
name|protected
label|:
end_label
begin_expr_stmt
name|Qt
operator|::
name|WindowFlags
name|m_windowFlags
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Qt
operator|::
name|WindowState
name|m_windowState
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|WId
name|m_windowId
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QAndroidPlatformBackingStore
modifier|*
name|m_backingStore
init|=
name|nullptr
decl_stmt|;
end_decl_stmt
begin_macro
unit|};
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// ANDROIDPLATFORMWINDOW_H
end_comment
end_unit
