begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 BogDan Vatra<bogdan@kde.org> ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QANDROIDPLATFORMMENUITEM_H
end_ifndef
begin_define
DECL|macro|QANDROIDPLATFORMMENUITEM_H
define|#
directive|define
name|QANDROIDPLATFORMMENUITEM_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformmenu.h>
end_include
begin_decl_stmt
DECL|variable|QAndroidPlatformMenu
name|class
name|QAndroidPlatformMenu
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QAndroidPlatformMenuItem
range|:
name|public
name|QPlatformMenuItem
block|{
name|public
operator|:
name|QAndroidPlatformMenuItem
argument_list|()
block|;
name|void
name|setTag
argument_list|(
argument|quintptr tag
argument_list|)
block|;
name|quintptr
name|tag
argument_list|()
specifier|const
block|;
name|void
name|setText
argument_list|(
specifier|const
name|QString
operator|&
name|text
argument_list|)
block|;
name|QString
name|text
argument_list|()
specifier|const
block|;
name|void
name|setIcon
argument_list|(
specifier|const
name|QIcon
operator|&
name|icon
argument_list|)
block|;
name|QIcon
name|icon
argument_list|()
specifier|const
block|;
name|void
name|setMenu
argument_list|(
name|QPlatformMenu
operator|*
name|menu
argument_list|)
block|;
name|QAndroidPlatformMenu
operator|*
name|menu
argument_list|()
specifier|const
block|;
name|void
name|setVisible
argument_list|(
argument|bool isVisible
argument_list|)
block|;
name|bool
name|isVisible
argument_list|()
specifier|const
block|;
name|void
name|setIsSeparator
argument_list|(
argument|bool isSeparator
argument_list|)
block|;
name|bool
name|isSeparator
argument_list|()
specifier|const
block|;
name|void
name|setFont
argument_list|(
specifier|const
name|QFont
operator|&
name|font
argument_list|)
block|;
name|void
name|setRole
argument_list|(
argument|MenuRole role
argument_list|)
block|;
name|MenuRole
name|role
argument_list|()
specifier|const
block|;
name|void
name|setCheckable
argument_list|(
argument|bool checkable
argument_list|)
block|;
name|bool
name|isCheckable
argument_list|()
specifier|const
block|;
name|void
name|setChecked
argument_list|(
argument|bool isChecked
argument_list|)
block|;
name|bool
name|isChecked
argument_list|()
specifier|const
block|;
name|void
name|setShortcut
argument_list|(
specifier|const
name|QKeySequence
operator|&
name|shortcut
argument_list|)
block|;
name|void
name|setEnabled
argument_list|(
argument|bool enabled
argument_list|)
block|;
name|bool
name|isEnabled
argument_list|()
specifier|const
block|;
name|private
operator|:
name|quintptr
name|m_tag
block|;
name|QString
name|m_text
block|;
name|QIcon
name|m_icon
block|;
name|QAndroidPlatformMenu
operator|*
name|m_menu
block|;
name|bool
name|m_isVisible
block|;
name|bool
name|m_isSeparator
block|;
name|MenuRole
name|m_role
block|;
name|bool
name|m_isCheckable
block|;
name|bool
name|m_isChecked
block|;
name|bool
name|m_isEnabled
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QANDROIDPLATFORMMENUITEM_H
end_comment
end_unit
