begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWINRTFILEENGINE_H
end_ifndef
begin_define
DECL|macro|QWINRTFILEENGINE_H
define|#
directive|define
name|QWINRTFILEENGINE_H
end_define
begin_include
include|#
directive|include
file|<private/qabstractfileengine_p.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|namespace
name|ABI
block|{
name|namespace
name|Windows
block|{
name|namespace
name|Storage
block|{
struct_decl|struct
name|IStorageItem
struct_decl|;
block|}
block|}
block|}
end_decl_stmt
begin_decl_stmt
DECL|variable|QWinRTFileEngineHandlerPrivate
name|class
name|QWinRTFileEngineHandlerPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QWinRTFileEngineHandler
range|:
name|public
name|QAbstractFileEngineHandler
block|{
name|public
operator|:
name|QWinRTFileEngineHandler
argument_list|()
block|;
operator|~
name|QWinRTFileEngineHandler
argument_list|()
block|;
name|QAbstractFileEngine
operator|*
name|create
argument_list|(
argument|const QString&fileName
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
specifier|static
name|void
name|registerFile
argument_list|(
specifier|const
name|QString
operator|&
name|fileName
argument_list|,
name|ABI
operator|::
name|Windows
operator|::
name|Storage
operator|::
name|IStorageItem
operator|*
name|file
argument_list|)
block|;
specifier|static
name|ABI
operator|::
name|Windows
operator|::
name|Storage
operator|::
name|IStorageItem
operator|*
name|registeredFile
argument_list|(
specifier|const
name|QString
operator|&
name|fileName
argument_list|)
block|;
name|private
operator|:
name|QScopedPointer
operator|<
name|QWinRTFileEngineHandlerPrivate
operator|>
name|d_ptr
block|;
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QWinRTFileEngineHandler
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWinRTFileEnginePrivate
name|class
name|QWinRTFileEnginePrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QWinRTFileEngine
range|:
name|public
name|QAbstractFileEngine
block|{
name|public
operator|:
name|QWinRTFileEngine
argument_list|(
specifier|const
name|QString
operator|&
name|fileName
argument_list|,
name|ABI
operator|::
name|Windows
operator|::
name|Storage
operator|::
name|IStorageItem
operator|*
name|file
argument_list|)
block|;
operator|~
name|QWinRTFileEngine
argument_list|()
block|;
name|bool
name|open
argument_list|(
argument|QIODevice::OpenMode openMode
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|close
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|qint64
name|size
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|qint64
name|pos
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|bool
name|seek
argument_list|(
argument|qint64 pos
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|remove
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|bool
name|copy
argument_list|(
argument|const QString&newName
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|rename
argument_list|(
argument|const QString&newName
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|renameOverwrite
argument_list|(
argument|const QString&newName
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|FileFlags
name|fileFlags
argument_list|(
argument|FileFlags type=FileInfoAll
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|bool
name|setPermissions
argument_list|(
argument|uint perms
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QString
name|fileName
argument_list|(
argument|FileName type=DefaultName
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|QDateTime
name|fileTime
argument_list|(
argument|FileTime type
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|qint64
name|read
argument_list|(
argument|char *data
argument_list|,
argument|qint64 maxlen
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|qint64
name|write
argument_list|(
argument|const char *data
argument_list|,
argument|qint64 len
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|private
operator|:
name|QScopedPointer
operator|<
name|QWinRTFileEnginePrivate
operator|>
name|d_ptr
block|;
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QWinRTFileEngine
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWINRTFILEENGINE_H
end_comment
end_unit
