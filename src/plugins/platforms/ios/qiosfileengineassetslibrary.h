begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QIOSFILEENGINEASSETSLIBRARY_H
end_ifndef
begin_define
DECL|macro|QIOSFILEENGINEASSETSLIBRARY_H
define|#
directive|define
name|QIOSFILEENGINEASSETSLIBRARY_H
end_define
begin_include
include|#
directive|include
file|<QtCore/private/qabstractfileengine_p.h>
end_include
begin_expr_stmt
DECL|variable|ALAsset
name|Q_FORWARD_DECLARE_OBJC_CLASS
argument_list|(
name|ALAsset
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|QIOSAssetData
name|class
name|QIOSAssetData
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QIOSFileEngineAssetsLibrary
range|:
name|public
name|QAbstractFileEngine
block|{
name|public
operator|:
name|QIOSFileEngineAssetsLibrary
argument_list|(
specifier|const
name|QString
operator|&
name|fileName
argument_list|)
block|;
operator|~
name|QIOSFileEngineAssetsLibrary
argument_list|()
block|;
name|bool
name|open
argument_list|(
argument|QIODevice::OpenMode openMode
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|close
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|FileFlags
name|fileFlags
argument_list|(
argument|FileFlags type
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|qint64
name|size
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|qint64
name|read
argument_list|(
argument|char *data
argument_list|,
argument|qint64 maxlen
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|qint64
name|pos
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|bool
name|seek
argument_list|(
argument|qint64 pos
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QString
name|fileName
argument_list|(
argument|FileName file
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
name|void
name|setFileName
argument_list|(
argument|const QString&file
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QStringList
name|entryList
argument_list|(
argument|QDir::Filters filters
argument_list|,
argument|const QStringList&filterNames
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
ifndef|#
directive|ifndef
name|QT_NO_FILESYSTEMITERATOR
name|Iterator
operator|*
name|beginEntryList
argument_list|(
argument|QDir::Filters filters
argument_list|,
argument|const QStringList&filterNames
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|Iterator
operator|*
name|endEntryList
argument_list|()
name|Q_DECL_OVERRIDE
block|;
endif|#
directive|endif
name|void
name|setError
argument_list|(
argument|QFile::FileError error
argument_list|,
argument|const QString&str
argument_list|)
block|{
name|QAbstractFileEngine
operator|::
name|setError
argument_list|(
name|error
argument_list|,
name|str
argument_list|)
block|; }
name|private
operator|:
name|QString
name|m_fileName
block|;
name|QString
name|m_assetUrl
block|;
name|qint64
name|m_offset
block|;
name|mutable
name|QIOSAssetData
operator|*
name|m_data
block|;
name|ALAsset
operator|*
name|loadAsset
argument_list|()
specifier|const
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QIOSFILEENGINEASSETSLIBRARY_H
end_comment
end_unit
