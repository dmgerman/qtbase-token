begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QIOSGLOBAL_H
end_ifndef
begin_define
DECL|macro|QIOSGLOBAL_H
define|#
directive|define
name|QIOSGLOBAL_H
end_define
begin_empty
empty|#import<UIKit/UIKit.h>
end_empty
begin_include
include|#
directive|include
file|<QtCore/QtCore>
end_include
begin_decl_stmt
unit|@
DECL|variable|QIOSViewController
name|class
name|QIOSViewController
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QT_BEGIN_NAMESPACE
name|Q_DECLARE_LOGGING_CATEGORY
parameter_list|(
name|lcQpaInputMethods
parameter_list|)
function_decl|;
end_function_decl
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_DEBUG
argument_list|)
end_if
begin_define
DECL|macro|qImDebug
define|#
directive|define
name|qImDebug
parameter_list|(
modifier|...
parameter_list|)
define|\
value|for (bool qt_category_enabled = lcQpaInputMethods().isDebugEnabled(); qt_category_enabled; qt_category_enabled = false) \         QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC, lcQpaInputMethods().categoryName()).debug(__VA_ARGS__)
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|qImDebug
define|#
directive|define
name|qImDebug
parameter_list|()
value|QT_NO_QDEBUG_MACRO()
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
DECL|variable|QPlatformScreen
name|class
name|QPlatformScreen
decl_stmt|;
end_decl_stmt
begin_function_decl
name|bool
name|isQtApplication
parameter_list|()
function_decl|;
end_function_decl
begin_function_decl
name|CGRect
name|toCGRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|QRectF
name|fromCGRect
parameter_list|(
specifier|const
name|CGRect
modifier|&
name|rect
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|CGPoint
name|toCGPoint
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|point
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|QPointF
name|fromCGPoint
parameter_list|(
specifier|const
name|CGPoint
modifier|&
name|point
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|Qt
operator|::
name|ScreenOrientation
name|toQtScreenOrientation
argument_list|(
argument|UIDeviceOrientation uiDeviceOrientation
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|UIDeviceOrientation
name|fromQtScreenOrientation
argument_list|(
name|Qt
operator|::
name|ScreenOrientation
name|qtOrientation
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|int
name|infoPlistValue
parameter_list|(
name|NSString
modifier|*
name|key
parameter_list|,
name|int
name|defaultValue
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|QT_END_NAMESPACE
expr|@
name|interface
name|UIResponder
argument_list|(
name|QtFirstResponder
argument_list|)
operator|+
operator|(
name|id
operator|)
name|currentFirstResponder
expr_stmt|;
end_expr_stmt
begin_decl_stmt
unit|@
name|end
name|class
name|FirstResponderCandidate
range|:
name|public
name|QScopedValueRollback
operator|<
name|UIResponder
operator|*
operator|>
block|{
name|public
operator|:
name|FirstResponderCandidate
argument_list|(
name|UIResponder
operator|*
argument_list|)
block|;
specifier|static
name|UIResponder
operator|*
name|currentCandidate
argument_list|()
block|{
return|return
name|s_firstResponderCandidate
return|;
block|}
name|private
operator|:
specifier|static
name|UIResponder
operator|*
name|s_firstResponderCandidate
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QIOSGLOBAL_H
end_comment
end_unit
