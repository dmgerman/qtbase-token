begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QIOSWINDOW_H
end_ifndef
begin_define
DECL|macro|QIOSWINDOW_H
define|#
directive|define
name|QIOSWINDOW_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformwindow.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qwindowsysteminterface.h>
end_include
begin_empty
empty|#import<UIKit/UIKit.h>
end_empty
begin_decl_stmt
DECL|variable|QIOSContext
name|class
name|QIOSContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QIOSWindow
name|class
name|QIOSWindow
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QT_BEGIN_NAMESPACE
expr|@
DECL|variable|QUIView
name|class
name|QUIView
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|QObject
name|class
name|QIOSWindow
range|:
name|public
name|QObject
decl_stmt|,
name|public
name|QPlatformWindow
block|{
name|Q_OBJECT
name|public
range|:
name|explicit
name|QIOSWindow
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
decl_stmt|;
operator|~
name|QIOSWindow
argument_list|()
expr_stmt|;
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
name|void
name|setWindowState
argument_list|(
name|Qt
operator|::
name|WindowState
name|state
argument_list|)
decl_stmt|;
name|void
name|setParent
parameter_list|(
specifier|const
name|QPlatformWindow
modifier|*
name|window
parameter_list|)
function_decl|;
name|void
name|handleContentOrientationChange
argument_list|(
name|Qt
operator|::
name|ScreenOrientation
name|orientation
argument_list|)
decl_stmt|;
name|void
name|setVisible
parameter_list|(
name|bool
name|visible
parameter_list|)
function_decl|;
name|void
name|setOpacity
argument_list|(
name|qreal
name|level
argument_list|)
name|Q_DECL_OVERRIDE
decl_stmt|;
name|bool
name|isExposed
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
expr_stmt|;
name|void
name|propagateSizeHints
parameter_list|()
function|Q_DECL_OVERRIDE
block|{}
name|void
name|raise
parameter_list|()
block|{
name|raiseOrLower
argument_list|(
name|true
argument_list|)
expr_stmt|;
block|}
name|void
name|lower
parameter_list|()
block|{
name|raiseOrLower
argument_list|(
name|false
argument_list|)
expr_stmt|;
block|}
name|bool
name|shouldAutoActivateWindow
argument_list|()
specifier|const
expr_stmt|;
name|void
name|requestActivateWindow
parameter_list|()
function_decl|;
name|qreal
name|devicePixelRatio
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|setMouseGrabEnabled
parameter_list|(
name|bool
name|grab
parameter_list|)
block|{
return|return
name|grab
return|;
block|}
name|bool
name|setKeyboardGrabEnabled
parameter_list|(
name|bool
name|grab
parameter_list|)
block|{
return|return
name|grab
return|;
block|}
name|WId
name|winId
argument_list|()
specifier|const
block|{
return|return
name|WId
argument_list|(
name|m_view
argument_list|)
return|;
block|}
empty_stmt|;
name|void
name|clearAccessibleCache
parameter_list|()
function_decl|;
name|QSurfaceFormat
name|format
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
expr_stmt|;
name|private
label|:
name|void
name|applicationStateChanged
argument_list|(
name|Qt
operator|::
name|ApplicationState
name|state
argument_list|)
decl_stmt|;
name|void
name|applyGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
name|QUIView
modifier|*
name|m_view
decl_stmt|;
name|QRect
name|m_normalGeometry
decl_stmt|;
name|int
name|m_windowLevel
decl_stmt|;
name|void
name|raiseOrLower
parameter_list|(
name|bool
name|raise
parameter_list|)
function_decl|;
name|void
name|updateWindowLevel
parameter_list|()
function_decl|;
name|bool
name|blockedByModal
parameter_list|()
function_decl|;
name|friend
name|class
name|QIOSScreen
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QIOSWINDOW_H
end_comment
end_unit
