begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd and/or its subsidiary(-ies). ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qxcbglxnativeinterfacehandler.h"
end_include
begin_include
include|#
directive|include
file|"qglxintegration.h"
end_include
begin_include
include|#
directive|include
file|<QtGui/QOpenGLContext>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|resourceType
specifier|static
name|int
name|resourceType
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|key
parameter_list|)
block|{
specifier|static
specifier|const
name|QByteArray
name|names
index|[]
init|=
block|{
comment|// match QXcbGlxNativeInterfaceHandler::ResourceType
name|QByteArrayLiteral
argument_list|(
literal|"glxconfig"
argument_list|)
block|,
name|QByteArrayLiteral
argument_list|(
literal|"glxcontext"
argument_list|)
block|,     }
decl_stmt|;
for|for
control|(
name|size_t
name|i
init|=
literal|0
init|;
name|i
operator|<
sizeof|sizeof
argument_list|(
name|names
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|names
index|[
literal|0
index|]
argument_list|)
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|key
operator|==
name|names
index|[
name|i
index|]
condition|)
return|return
name|i
return|;
block|}
return|return
sizeof|sizeof
argument_list|(
name|names
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|names
index|[
literal|0
index|]
argument_list|)
return|;
block|}
end_function
begin_constructor
DECL|function|QXcbGlxNativeInterfaceHandler
name|QXcbGlxNativeInterfaceHandler
operator|::
name|QXcbGlxNativeInterfaceHandler
parameter_list|(
name|QXcbNativeInterface
modifier|*
name|nativeInterface
parameter_list|)
member_init_list|:
name|QXcbNativeInterfaceHandler
argument_list|(
name|nativeInterface
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|nativeResourceFunctionForContext
name|QPlatformNativeInterface
operator|::
name|NativeResourceForContextFunction
name|QXcbGlxNativeInterfaceHandler
operator|::
name|nativeResourceFunctionForContext
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|resource
parameter_list|)
specifier|const
block|{
switch|switch
condition|(
name|resourceType
argument_list|(
name|resource
argument_list|)
condition|)
block|{
case|case
name|GLXConfig
case|:
return|return
name|glxConfigForContext
return|;
case|case
name|GLXContext
case|:
return|return
name|glxContextForContext
return|;
default|default:
break|break;
block|}
return|return
name|Q_NULLPTR
return|;
block|}
end_function
begin_function
DECL|function|glxContextForContext
name|void
modifier|*
name|QXcbGlxNativeInterfaceHandler
operator|::
name|glxContextForContext
parameter_list|(
name|QOpenGLContext
modifier|*
name|context
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|QGLXContext
modifier|*
name|glxPlatformContext
init|=
cast|static_cast
argument_list|<
name|QGLXContext
operator|*
argument_list|>
argument_list|(
name|context
operator|->
name|handle
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|glxPlatformContext
operator|->
name|glxContext
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|glxConfigForContext
name|void
modifier|*
name|QXcbGlxNativeInterfaceHandler
operator|::
name|glxConfigForContext
parameter_list|(
name|QOpenGLContext
modifier|*
name|context
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|QGLXContext
modifier|*
name|glxPlatformContext
init|=
cast|static_cast
argument_list|<
name|QGLXContext
operator|*
argument_list|>
argument_list|(
name|context
operator|->
name|handle
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|glxPlatformContext
operator|->
name|glxConfig
argument_list|()
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
