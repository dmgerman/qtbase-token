begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qxcbeglwindow.h"
end_include
begin_include
include|#
directive|include
file|"qxcbeglintegration.h"
end_include
begin_include
include|#
directive|include
file|<QtPlatformSupport/private/qeglconvenience_p.h>
end_include
begin_include
include|#
directive|include
file|<QtPlatformSupport/private/qxlibeglintegration_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QXcbEglWindow
name|QXcbEglWindow
operator|::
name|QXcbEglWindow
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|,
name|QXcbEglIntegration
modifier|*
name|glIntegration
parameter_list|)
member_init_list|:
name|QXcbWindow
argument_list|(
name|window
argument_list|)
member_init_list|,
name|m_glIntegration
argument_list|(
name|glIntegration
argument_list|)
member_init_list|,
name|m_config
argument_list|(
name|Q_NULLPTR
argument_list|)
member_init_list|,
name|m_surface
argument_list|(
name|EGL_NO_SURFACE
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QXcbEglWindow
name|QXcbEglWindow
operator|::
name|~
name|QXcbEglWindow
parameter_list|()
block|{
name|eglDestroySurface
argument_list|(
name|m_glIntegration
operator|->
name|eglDisplay
argument_list|()
argument_list|,
name|m_surface
argument_list|)
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|resolveFormat
name|void
name|QXcbEglWindow
operator|::
name|resolveFormat
parameter_list|(
specifier|const
name|QSurfaceFormat
modifier|&
name|format
parameter_list|)
block|{
name|m_config
operator|=
name|q_configFromGLFormat
argument_list|(
name|m_glIntegration
operator|->
name|eglDisplay
argument_list|()
argument_list|,
name|format
argument_list|)
expr_stmt|;
name|m_format
operator|=
name|q_glFormatFromConfig
argument_list|(
name|m_glIntegration
operator|->
name|eglDisplay
argument_list|()
argument_list|,
name|m_config
argument_list|,
name|format
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifdef
ifdef|#
directive|ifdef
name|XCB_USE_XLIB
end_ifdef
begin_function
DECL|function|createVisual
specifier|const
name|xcb_visualtype_t
modifier|*
name|QXcbEglWindow
operator|::
name|createVisual
parameter_list|()
block|{
name|QXcbScreen
modifier|*
name|scr
init|=
name|xcbScreen
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|scr
condition|)
return|return
name|QXcbWindow
operator|::
name|createVisual
argument_list|()
return|;
name|Display
modifier|*
name|xdpy
init|=
cast|static_cast
argument_list|<
name|Display
operator|*
argument_list|>
argument_list|(
name|m_glIntegration
operator|->
name|xlib_display
argument_list|()
argument_list|)
decl_stmt|;
name|VisualID
name|id
init|=
name|QXlibEglIntegration
operator|::
name|getCompatibleVisualId
argument_list|(
name|xdpy
argument_list|,
name|m_glIntegration
operator|->
name|eglDisplay
argument_list|()
argument_list|,
name|m_config
argument_list|)
decl_stmt|;
name|XVisualInfo
name|visualInfoTemplate
decl_stmt|;
name|memset
argument_list|(
operator|&
name|visualInfoTemplate
argument_list|,
literal|0
argument_list|,
sizeof|sizeof
argument_list|(
name|XVisualInfo
argument_list|)
argument_list|)
expr_stmt|;
name|visualInfoTemplate
operator|.
name|visualid
operator|=
name|id
expr_stmt|;
name|XVisualInfo
modifier|*
name|visualInfo
decl_stmt|;
name|int
name|matchingCount
init|=
literal|0
decl_stmt|;
name|visualInfo
operator|=
name|XGetVisualInfo
argument_list|(
name|xdpy
argument_list|,
name|VisualIDMask
argument_list|,
operator|&
name|visualInfoTemplate
argument_list|,
operator|&
name|matchingCount
argument_list|)
expr_stmt|;
specifier|const
name|xcb_visualtype_t
modifier|*
name|xcb_visualtype
init|=
name|scr
operator|->
name|visualForId
argument_list|(
name|visualInfo
operator|->
name|visualid
argument_list|)
decl_stmt|;
name|XFree
argument_list|(
name|visualInfo
argument_list|)
expr_stmt|;
return|return
name|xcb_visualtype
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|create
name|void
name|QXcbEglWindow
operator|::
name|create
parameter_list|()
block|{
name|QXcbWindow
operator|::
name|create
argument_list|()
expr_stmt|;
name|m_surface
operator|=
name|eglCreateWindowSurface
argument_list|(
name|m_glIntegration
operator|->
name|eglDisplay
argument_list|()
argument_list|,
name|m_config
argument_list|,
name|m_window
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
