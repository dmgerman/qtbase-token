begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QXCBEGLCONTEXT_H
end_ifndef
begin_define
DECL|macro|QXCBEGLCONTEXT_H
define|#
directive|define
name|QXCBEGLCONTEXT_H
end_define
begin_include
include|#
directive|include
file|"qxcbeglwindow.h"
end_include
begin_include
include|#
directive|include
file|<QtPlatformSupport/private/qeglplatformcontext_p.h>
end_include
begin_include
include|#
directive|include
file|<QtPlatformSupport/private/qeglpbuffer_p.h>
end_include
begin_include
include|#
directive|include
file|<QtPlatformHeaders/QEGLNativeContext>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
comment|//####todo remove the noops (looks like their where there in the initial commit)
name|class
name|QXcbEglContext
range|:
name|public
name|QEGLPlatformContext
block|{
name|public
operator|:
name|QXcbEglContext
argument_list|(
argument|const QSurfaceFormat&glFormat
argument_list|,
argument|QPlatformOpenGLContext *share
argument_list|,
argument|EGLDisplay display
argument_list|,
argument|QXcbConnection *c
argument_list|,
argument|const QVariant&nativeHandle
argument_list|)
operator|:
name|QEGLPlatformContext
argument_list|(
name|glFormat
argument_list|,
name|share
argument_list|,
name|display
argument_list|,
literal|0
argument_list|,
name|nativeHandle
argument_list|)
block|,
name|m_connection
argument_list|(
argument|c
argument_list|)
block|{
name|Q_XCB_NOOP
argument_list|(
name|m_connection
argument_list|)
block|;     }
name|void
name|swapBuffers
argument_list|(
argument|QPlatformSurface *surface
argument_list|)
block|{
name|Q_XCB_NOOP
argument_list|(
name|m_connection
argument_list|)
block|;
name|QEGLPlatformContext
operator|::
name|swapBuffers
argument_list|(
name|surface
argument_list|)
block|;
name|Q_XCB_NOOP
argument_list|(
name|m_connection
argument_list|)
block|;     }
name|bool
name|makeCurrent
argument_list|(
argument|QPlatformSurface *surface
argument_list|)
block|{
name|Q_XCB_NOOP
argument_list|(
name|m_connection
argument_list|)
block|;
name|bool
name|ret
operator|=
name|QEGLPlatformContext
operator|::
name|makeCurrent
argument_list|(
name|surface
argument_list|)
block|;
name|Q_XCB_NOOP
argument_list|(
name|m_connection
argument_list|)
block|;
return|return
name|ret
return|;
block|}
name|void
name|doneCurrent
argument_list|()
block|{
name|Q_XCB_NOOP
argument_list|(
name|m_connection
argument_list|)
block|;
name|QEGLPlatformContext
operator|::
name|doneCurrent
argument_list|()
block|;
name|Q_XCB_NOOP
argument_list|(
name|m_connection
argument_list|)
block|;     }
name|EGLSurface
name|eglSurfaceForPlatformSurface
argument_list|(
argument|QPlatformSurface *surface
argument_list|)
block|{
if|if
condition|(
name|surface
operator|->
name|surface
argument_list|()
operator|->
name|surfaceClass
argument_list|()
operator|==
name|QSurface
operator|::
name|Window
condition|)
return|return
name|static_cast
operator|<
name|QXcbEglWindow
operator|*
operator|>
operator|(
name|surface
operator|)
operator|->
name|eglSurface
argument_list|()
return|;
else|else
return|return
name|static_cast
operator|<
name|QEGLPbuffer
operator|*
operator|>
operator|(
name|surface
operator|)
operator|->
name|pbuffer
argument_list|()
return|;
block|}
name|QVariant
name|nativeHandle
argument_list|()
specifier|const
block|{
return|return
name|QVariant
operator|::
name|fromValue
operator|<
name|QEGLNativeContext
operator|>
operator|(
name|QEGLNativeContext
argument_list|(
name|eglContext
argument_list|()
argument_list|,
name|eglDisplay
argument_list|()
argument_list|)
operator|)
return|;
block|}
name|private
operator|:
name|QXcbConnection
operator|*
name|m_connection
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QXCBEGLCONTEXT_H
end_comment
end_unit
