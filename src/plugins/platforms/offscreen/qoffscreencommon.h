begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOFFSCREENCOMMON_H
end_ifndef
begin_define
DECL|macro|QOFFSCREENCOMMON_H
define|#
directive|define
name|QOFFSCREENCOMMON_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformbackingstore.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformdrag.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformintegration.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformscreen.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformwindow.h>
end_include
begin_include
include|#
directive|include
file|<qscopedpointer.h>
end_include
begin_include
include|#
directive|include
file|<qimage.h>
end_include
begin_include
include|#
directive|include
file|<qhash.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QOffscreenScreen
range|:
name|public
name|QPlatformScreen
block|{
name|public
operator|:
name|QOffscreenScreen
argument_list|()
block|;
name|QRect
name|geometry
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_geometry
return|;
block|}
name|int
name|depth
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
literal|32
return|;
block|}
name|QImage
operator|::
name|Format
name|format
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|QImage
operator|::
name|Format_RGB32
return|;
block|}
name|QPlatformCursor
operator|*
name|cursor
argument_list|()
specifier|const
name|Q_DECL_OVERRIDE
block|{
return|return
name|m_cursor
operator|.
name|data
argument_list|()
return|;
block|}
name|QPixmap
name|grabWindow
argument_list|(
argument|WId window
argument_list|,
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int width
argument_list|,
argument|int height
argument_list|)
specifier|const
name|Q_DECL_OVERRIDE
block|;
specifier|static
name|QPlatformWindow
operator|*
name|windowContainingCursor
block|;
name|public
operator|:
name|QRect
name|m_geometry
block|;
name|QScopedPointer
operator|<
name|QPlatformCursor
operator|>
name|m_cursor
block|; }
decl_stmt|;
end_decl_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DRAGANDDROP
end_ifndef
begin_decl_stmt
name|class
name|QOffscreenDrag
range|:
name|public
name|QPlatformDrag
block|{
name|public
operator|:
name|QMimeData
operator|*
name|platformDropData
argument_list|()
name|Q_DECL_OVERRIDE
block|{
return|return
literal|0
return|;
block|}
name|Qt
operator|::
name|DropAction
name|drag
argument_list|(
argument|QDrag *
argument_list|)
name|Q_DECL_OVERRIDE
block|{
return|return
name|Qt
operator|::
name|IgnoreAction
return|;
block|}
expr|}
block|;
endif|#
directive|endif
name|class
name|QOffscreenBackingStore
operator|:
name|public
name|QPlatformBackingStore
block|{
name|public
operator|:
name|QOffscreenBackingStore
argument_list|(
name|QWindow
operator|*
name|window
argument_list|)
block|;
operator|~
name|QOffscreenBackingStore
argument_list|()
block|;
name|QPaintDevice
operator|*
name|paintDevice
argument_list|()
name|Q_DECL_OVERRIDE
block|;
name|void
name|flush
argument_list|(
argument|QWindow *window
argument_list|,
argument|const QRegion&region
argument_list|,
argument|const QPoint&offset
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|void
name|resize
argument_list|(
argument|const QSize&size
argument_list|,
argument|const QRegion&staticContents
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|bool
name|scroll
argument_list|(
argument|const QRegion&area
argument_list|,
argument|int dx
argument_list|,
argument|int dy
argument_list|)
name|Q_DECL_OVERRIDE
block|;
name|QPixmap
name|grabWindow
argument_list|(
argument|WId window
argument_list|,
argument|const QRect&rect
argument_list|)
specifier|const
block|;
specifier|static
name|QOffscreenBackingStore
operator|*
name|backingStoreForWinId
argument_list|(
argument|WId id
argument_list|)
block|;
name|private
operator|:
name|void
name|clearHash
argument_list|()
block|;
name|QImage
name|m_image
block|;
name|QHash
operator|<
name|WId
block|,
name|QRect
operator|>
name|m_windowAreaHash
block|;
specifier|static
name|QHash
operator|<
name|WId
block|,
name|QOffscreenBackingStore
operator|*
operator|>
name|m_backingStoreForWinIdHash
block|; }
block|;
name|QT_END_NAMESPACE
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
