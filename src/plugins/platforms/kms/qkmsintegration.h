begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QPLATFORMINTEGRATION_KMS_H
end_ifndef
begin_define
DECL|macro|QPLATFORMINTEGRATION_KMS_H
define|#
directive|define
name|QPLATFORMINTEGRATION_KMS_H
end_define
begin_include
include|#
directive|include
file|<qpa/qplatformintegration.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformnativeinterface.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QKmsScreen
name|class
name|QKmsScreen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QKmsDevice
name|class
name|QKmsDevice
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QKmsUdevListener
name|class
name|QKmsUdevListener
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QKmsUdevDRMHandler
name|class
name|QKmsUdevDRMHandler
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QKmsVTHandler
name|class
name|QKmsVTHandler
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QKmsIntegration
range|:
name|public
name|QPlatformIntegration
block|{
name|public
operator|:
name|QKmsIntegration
argument_list|()
block|;
operator|~
name|QKmsIntegration
argument_list|()
block|;
name|bool
name|hasCapability
argument_list|(
argument|QPlatformIntegration::Capability cap
argument_list|)
specifier|const
block|;
name|QPlatformOpenGLContext
operator|*
name|createPlatformOpenGLContext
argument_list|(
argument|QOpenGLContext *context
argument_list|)
specifier|const
block|;
name|QPlatformWindow
operator|*
name|createPlatformWindow
argument_list|(
argument|QWindow *window
argument_list|)
specifier|const
block|;
name|QPlatformBackingStore
operator|*
name|createPlatformBackingStore
argument_list|(
argument|QWindow *window
argument_list|)
specifier|const
block|;
name|QPlatformFontDatabase
operator|*
name|fontDatabase
argument_list|()
specifier|const
block|;
name|QAbstractEventDispatcher
operator|*
name|guiThreadEventDispatcher
argument_list|()
specifier|const
block|;
name|QPlatformNativeInterface
operator|*
name|nativeInterface
argument_list|()
specifier|const
block|;
name|void
name|addScreen
argument_list|(
name|QKmsScreen
operator|*
name|screen
argument_list|)
block|;
name|QObject
operator|*
name|createDevice
argument_list|(
specifier|const
name|char
operator|*
argument_list|)
block|;
name|private
operator|:
name|QStringList
name|findDrmDevices
argument_list|()
block|;
name|QList
operator|<
name|QPlatformScreen
operator|*
operator|>
name|m_screens
block|;
name|QList
operator|<
name|QKmsDevice
operator|*
operator|>
name|m_devices
block|;
name|QPlatformFontDatabase
operator|*
name|m_fontDatabase
block|;
name|QAbstractEventDispatcher
operator|*
name|m_eventDispatcher
block|;
name|QPlatformNativeInterface
operator|*
name|m_nativeInterface
block|;
name|QKmsUdevListener
operator|*
name|m_udevListener
block|;
name|QKmsUdevDRMHandler
operator|*
name|m_drmHandler
block|;
name|QKmsVTHandler
operator|*
name|m_vtHandler
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
