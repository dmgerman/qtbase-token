begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qminimalwindowsurface.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qdebug.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/private/qapplication_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QMinimalWindowSurface
name|QMinimalWindowSurface
operator|::
name|QMinimalWindowSurface
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|)
member_init_list|:
name|QWindowSurface
argument_list|(
name|window
argument_list|)
block|{
comment|//qDebug()<< "QMinimalWindowSurface::QMinimalWindowSurface:"<< (long)this;
block|}
end_constructor
begin_destructor
DECL|function|~QMinimalWindowSurface
name|QMinimalWindowSurface
operator|::
name|~
name|QMinimalWindowSurface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|paintDevice
name|QPaintDevice
modifier|*
name|QMinimalWindowSurface
operator|::
name|paintDevice
parameter_list|()
block|{
comment|//qDebug()<< "QMinimalWindowSurface::paintDevice";
return|return
operator|&
name|mImage
return|;
block|}
end_function
begin_function
DECL|function|flush
name|void
name|QMinimalWindowSurface
operator|::
name|flush
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|offset
argument_list|)
expr_stmt|;
specifier|static
name|int
name|c
init|=
literal|0
decl_stmt|;
name|QString
name|filename
init|=
name|QString
argument_list|(
literal|"output%1.png"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
operator|++
argument_list|,
literal|4
argument_list|,
literal|10
argument_list|,
name|QLatin1Char
argument_list|(
literal|'0'
argument_list|)
argument_list|)
decl_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"QMinimalWindowSurface::flush() saving contents to"
operator|<<
name|filename
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
expr_stmt|;
name|mImage
operator|.
name|save
argument_list|(
name|filename
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|resize
name|void
name|QMinimalWindowSurface
operator|::
name|resize
parameter_list|(
specifier|const
name|QSize
modifier|&
name|size
parameter_list|)
block|{
comment|//qDebug()<< "QMinimalWindowSurface::setGeometry:"<< (long)this<< rect;
name|QWindowSurface
operator|::
name|resize
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|QImage
operator|::
name|Format
name|format
init|=
name|QApplicationPrivate
operator|::
name|platformIntegration
argument_list|()
operator|->
name|screens
argument_list|()
operator|.
name|first
argument_list|()
operator|->
name|format
argument_list|()
decl_stmt|;
if|if
condition|(
name|mImage
operator|.
name|size
argument_list|()
operator|!=
name|size
condition|)
name|mImage
operator|=
name|QImage
argument_list|(
name|size
argument_list|,
name|format
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
