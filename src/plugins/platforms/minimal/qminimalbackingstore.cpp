begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qminimalbackingstore.h"
end_include
begin_include
include|#
directive|include
file|"qminimalintegration.h"
end_include
begin_include
include|#
directive|include
file|"qscreen.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qdebug.h>
end_include
begin_include
include|#
directive|include
file|<qpa/qplatformscreen.h>
end_include
begin_include
include|#
directive|include
file|<private/qguiapplication_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QMinimalBackingStore
name|QMinimalBackingStore
operator|::
name|QMinimalBackingStore
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|)
member_init_list|:
name|QPlatformBackingStore
argument_list|(
name|window
argument_list|)
member_init_list|,
name|mDebug
argument_list|(
name|QMinimalIntegration
operator|::
name|instance
argument_list|()
operator|->
name|options
argument_list|()
operator|&
name|QMinimalIntegration
operator|::
name|DebugBackingStore
argument_list|)
block|{
if|if
condition|(
name|mDebug
condition|)
name|qDebug
argument_list|()
operator|<<
literal|"QMinimalBackingStore::QMinimalBackingStore:"
operator|<<
operator|(
name|quintptr
operator|)
name|this
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QMinimalBackingStore
name|QMinimalBackingStore
operator|::
name|~
name|QMinimalBackingStore
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|paintDevice
name|QPaintDevice
modifier|*
name|QMinimalBackingStore
operator|::
name|paintDevice
parameter_list|()
block|{
if|if
condition|(
name|mDebug
condition|)
name|qDebug
argument_list|()
operator|<<
literal|"QMinimalBackingStore::paintDevice"
expr_stmt|;
return|return
operator|&
name|mImage
return|;
block|}
end_function
begin_function
DECL|function|flush
name|void
name|QMinimalBackingStore
operator|::
name|flush
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|offset
argument_list|)
expr_stmt|;
if|if
condition|(
name|mDebug
condition|)
block|{
specifier|static
name|int
name|c
init|=
literal|0
decl_stmt|;
name|QString
name|filename
init|=
name|QString
argument_list|(
literal|"output%1.png"
argument_list|)
operator|.
name|arg
argument_list|(
name|c
operator|++
argument_list|,
literal|4
argument_list|,
literal|10
argument_list|,
name|QLatin1Char
argument_list|(
literal|'0'
argument_list|)
argument_list|)
decl_stmt|;
name|qDebug
argument_list|()
operator|<<
literal|"QMinimalBackingStore::flush() saving contents to"
operator|<<
name|filename
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
expr_stmt|;
name|mImage
operator|.
name|save
argument_list|(
name|filename
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|resize
name|void
name|QMinimalBackingStore
operator|::
name|resize
parameter_list|(
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
specifier|const
name|QRegion
modifier|&
parameter_list|)
block|{
name|QImage
operator|::
name|Format
name|format
init|=
name|QGuiApplication
operator|::
name|primaryScreen
argument_list|()
operator|->
name|handle
argument_list|()
operator|->
name|format
argument_list|()
decl_stmt|;
if|if
condition|(
name|mImage
operator|.
name|size
argument_list|()
operator|!=
name|size
condition|)
name|mImage
operator|=
name|QImage
argument_list|(
name|size
argument_list|,
name|format
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
