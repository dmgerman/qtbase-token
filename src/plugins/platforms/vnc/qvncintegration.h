begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QGRAPHICSSYSTEM_VNC_H
end_ifndef
begin_define
DECL|macro|QGRAPHICSSYSTEM_VNC_H
define|#
directive|define
name|QGRAPHICSSYSTEM_VNC_H
end_define
begin_include
include|#
directive|include
file|"qvnccursor.h"
end_include
begin_include
include|#
directive|include
file|"../fb_base/fb_base.h"
end_include
begin_include
include|#
directive|include
file|<QPlatformIntegration>
end_include
begin_include
include|#
directive|include
file|"qgenericunixfontdatabase.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QVNCServer
name|class
name|QVNCServer
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QVNCDirtyMap
name|class
name|QVNCDirtyMap
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QVNCScreenPrivate
name|class
name|QVNCScreenPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QVNCScreen
range|:
name|public
name|QFbScreen
block|{
name|Q_OBJECT
name|public
operator|:
name|QVNCScreen
argument_list|(
argument|QRect screenSize
argument_list|,
argument|int screenId
argument_list|)
block|;
name|int
name|linestep
argument_list|()
specifier|const
block|{
return|return
name|image
argument_list|()
operator|?
name|image
argument_list|()
operator|->
name|bytesPerLine
argument_list|()
operator|:
literal|0
return|;
block|}
name|uchar
operator|*
name|base
argument_list|()
specifier|const
block|{
return|return
name|image
argument_list|()
condition|?
name|image
argument_list|()
operator|->
name|bits
argument_list|()
else|:
literal|0
return|;
block|}
name|QVNCDirtyMap
operator|*
name|dirtyMap
argument_list|()
block|;
name|public
operator|:
name|QVNCScreenPrivate
operator|*
name|d_ptr
block|;
name|private
operator|:
name|QVNCServer
operator|*
name|server
block|;
name|QRegion
name|doRedraw
argument_list|()
block|;
name|friend
name|class
name|QVNCIntegration
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QVNCIntegrationPrivate
name|class
name|QVNCIntegrationPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QAbstractEventDispatcher
name|class
name|QAbstractEventDispatcher
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QVNCIntegration
range|:
name|public
name|QPlatformIntegration
block|{
name|public
operator|:
name|QVNCIntegration
argument_list|(
specifier|const
name|QStringList
operator|&
name|paramList
argument_list|)
block|;
name|bool
name|hasCapability
argument_list|(
argument|QPlatformIntegration::Capability cap
argument_list|)
specifier|const
block|;
name|QPlatformPixmap
operator|*
name|createPlatformPixmap
argument_list|(
argument|QPlatformPixmap::PixelType type
argument_list|)
specifier|const
block|;
name|QPlatformWindow
operator|*
name|createPlatformWindow
argument_list|(
argument|QWidget *widget
argument_list|,
argument|WId winId
argument_list|)
specifier|const
block|;
name|QWindowSurface
operator|*
name|createWindowSurface
argument_list|(
argument|QWidget *widget
argument_list|,
argument|WId winId
argument_list|)
specifier|const
block|;
name|QAbstractEventDispatcher
name|createEventDispatcher
argument_list|()
specifier|const
block|;
name|QPixmap
name|grabWindow
argument_list|(
argument|WId window
argument_list|,
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int width
argument_list|,
argument|int height
argument_list|)
specifier|const
block|;
name|QList
operator|<
name|QPlatformScreen
operator|*
operator|>
name|screens
argument_list|()
specifier|const
block|{
return|return
name|mScreens
return|;
block|}
name|bool
name|isVirtualDesktop
argument_list|()
block|{
return|return
name|virtualDesktop
return|;
block|}
name|void
name|moveToScreen
argument_list|(
argument|QWidget *window
argument_list|,
argument|int screen
argument_list|)
block|;
name|QPlatformFontDatabase
operator|*
name|fontDatabase
argument_list|()
specifier|const
block|;
name|private
operator|:
name|QVNCScreen
operator|*
name|mPrimaryScreen
block|;
name|QList
operator|<
name|QPlatformScreen
operator|*
operator|>
name|mScreens
block|;
name|bool
name|virtualDesktop
block|;
name|QPlatformFontDatabase
operator|*
name|fontDb
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QGRAPHICSSYSTEM_VNC_H
end_comment
end_unit
