begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qkbddriverplugin_qws.h>
end_include
begin_include
include|#
directive|include
file|<qkbdlinuxinput_qws.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_class
DECL|class|QLinuxInputKbdDriver
class|class
name|QLinuxInputKbdDriver
super|:
specifier|public
name|QKbdDriverPlugin
block|{
public|public:
name|QLinuxInputKbdDriver
parameter_list|()
constructor_decl|;
name|QStringList
name|keys
parameter_list|()
specifier|const
function_decl|;
name|QWSKeyboardHandler
modifier|*
name|create
parameter_list|(
specifier|const
name|QString
modifier|&
name|driver
parameter_list|,
specifier|const
name|QString
modifier|&
name|device
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_constructor
DECL|function|QLinuxInputKbdDriver
name|QLinuxInputKbdDriver
operator|::
name|QLinuxInputKbdDriver
parameter_list|()
member_init_list|:
name|QKbdDriverPlugin
argument_list|()
block|{ }
end_constructor
begin_function
DECL|function|keys
name|QStringList
name|QLinuxInputKbdDriver
operator|::
name|keys
parameter_list|()
specifier|const
block|{
return|return
operator|(
name|QStringList
argument_list|()
operator|<<
name|QLatin1String
argument_list|(
literal|"LinuxInput"
argument_list|)
operator|)
return|;
block|}
end_function
begin_function
DECL|function|create
name|QWSKeyboardHandler
modifier|*
name|QLinuxInputKbdDriver
operator|::
name|create
parameter_list|(
specifier|const
name|QString
modifier|&
name|driver
parameter_list|,
specifier|const
name|QString
modifier|&
name|device
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|device
argument_list|)
expr_stmt|;
if|if
condition|(
name|driver
operator|.
name|compare
argument_list|(
name|QLatin1String
argument_list|(
literal|"LinuxInput"
argument_list|)
argument_list|,
name|Qt
operator|::
name|CaseInsensitive
argument_list|)
condition|)
return|return
literal|0
return|;
return|return
operator|new
name|QWSLinuxInputKeyboardHandler
argument_list|(
name|device
argument_list|)
return|;
block|}
end_function
begin_macro
name|Q_EXPORT_PLUGIN2
argument_list|(
argument|qwslinuxinputkbddriver
argument_list|,
argument|QLinuxInputKbdDriver
argument_list|)
end_macro
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
