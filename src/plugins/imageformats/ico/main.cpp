begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"main.h"
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|capabilities
name|QImageIOPlugin
operator|::
name|Capabilities
name|QICOPlugin
operator|::
name|capabilities
parameter_list|(
name|QIODevice
modifier|*
name|device
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|format
parameter_list|)
specifier|const
block|{
if|if
condition|(
name|format
operator|==
literal|"ico"
operator|||
name|format
operator|==
literal|"cur"
condition|)
return|return
name|Capabilities
argument_list|(
name|CanRead
operator||
name|CanWrite
argument_list|)
return|;
if|if
condition|(
operator|!
name|format
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|0
return|;
if|if
condition|(
operator|!
name|device
operator|->
name|isOpen
argument_list|()
condition|)
return|return
literal|0
return|;
name|Capabilities
name|cap
decl_stmt|;
if|if
condition|(
name|device
operator|->
name|isReadable
argument_list|()
operator|&&
name|QtIcoHandler
operator|::
name|canRead
argument_list|(
name|device
argument_list|)
condition|)
name|cap
operator||=
name|CanRead
expr_stmt|;
if|if
condition|(
name|device
operator|->
name|isWritable
argument_list|()
condition|)
name|cap
operator||=
name|CanWrite
expr_stmt|;
return|return
name|cap
return|;
block|}
end_function
begin_function
DECL|function|create
name|QImageIOHandler
modifier|*
name|QICOPlugin
operator|::
name|create
parameter_list|(
name|QIODevice
modifier|*
name|device
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|format
parameter_list|)
specifier|const
block|{
name|QImageIOHandler
modifier|*
name|handler
init|=
operator|new
name|QtIcoHandler
argument_list|(
name|device
argument_list|)
decl_stmt|;
name|handler
operator|->
name|setFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
return|return
name|handler
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
