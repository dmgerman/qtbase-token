begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QDIRECFBWINDOWSURFACE_H
end_ifndef
begin_define
DECL|macro|QDIRECFBWINDOWSURFACE_H
define|#
directive|define
name|QDIRECFBWINDOWSURFACE_H
end_define
begin_include
include|#
directive|include
file|"qdirectfbpaintengine.h"
end_include
begin_include
include|#
directive|include
file|"qdirectfbpaintdevice.h"
end_include
begin_include
include|#
directive|include
file|"qdirectfbscreen.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_QWS_DIRECTFB
end_ifndef
begin_include
include|#
directive|include
file|<private/qpaintengine_raster_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qwindowsurface_qws_p.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT_DIRECTFB_TIMING
end_ifdef
begin_include
include|#
directive|include
file|<qdatetime.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|function|QT_MODULE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
name|class
name|QDirectFBWindowSurface
range|:
name|public
name|QWSWindowSurface
decl_stmt|,
name|public
name|QDirectFBPaintDevice
block|{
name|public
label|:
name|QDirectFBWindowSurface
argument_list|(
argument|DFBSurfaceFlipFlags flipFlags
argument_list|,
argument|QDirectFBScreen *scr
argument_list|)
empty_stmt|;
name|QDirectFBWindowSurface
argument_list|(
argument|DFBSurfaceFlipFlags flipFlags
argument_list|,
argument|QDirectFBScreen *scr
argument_list|,
argument|QWidget *widget
argument_list|)
empty_stmt|;
operator|~
name|QDirectFBWindowSurface
argument_list|()
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_DIRECTFB_WM
name|void
name|raise
parameter_list|()
function_decl|;
endif|#
directive|endif
name|bool
name|isValid
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
name|QString
name|key
argument_list|()
specifier|const
block|{
return|return
name|QLatin1String
argument_list|(
literal|"directfb"
argument_list|)
return|;
block|}
name|QByteArray
name|permanentState
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setPermanentState
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|state
parameter_list|)
function_decl|;
name|bool
name|scroll
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|area
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|)
function_decl|;
name|bool
name|move
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
function_decl|;
name|QImage
name|image
argument_list|()
specifier|const
block|{
return|return
name|QImage
argument_list|()
return|;
block|}
name|QPaintDevice
modifier|*
name|paintDevice
parameter_list|()
block|{
return|return
name|this
return|;
block|}
name|void
name|flush
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
function_decl|;
name|void
name|beginPaint
parameter_list|(
specifier|const
name|QRegion
modifier|&
parameter_list|)
function_decl|;
name|void
name|endPaint
parameter_list|(
specifier|const
name|QRegion
modifier|&
parameter_list|)
function_decl|;
name|IDirectFBSurface
modifier|*
name|surfaceForWidget
argument_list|(
specifier|const
name|QWidget
operator|*
name|widget
argument_list|,
name|QRect
operator|*
name|rect
argument_list|)
decl|const
decl_stmt|;
name|IDirectFBSurface
operator|*
name|directFBSurface
argument_list|()
specifier|const
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_DIRECTFB_WM
name|IDirectFBWindow
operator|*
name|directFBWindow
argument_list|()
specifier|const
expr_stmt|;
endif|#
directive|endif
name|private
label|:
name|void
name|updateIsOpaque
parameter_list|()
function_decl|;
name|void
name|setOpaque
parameter_list|(
name|bool
name|opaque
parameter_list|)
function_decl|;
name|void
name|releaseSurface
parameter_list|()
function_decl|;
ifdef|#
directive|ifdef
name|QT_DIRECTFB_WM
name|void
name|createWindow
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
name|IDirectFBWindow
modifier|*
name|dfbWindow
decl_stmt|;
else|#
directive|else
enum|enum
name|Mode
block|{
name|Primary
block|,
name|Offscreen
block|}
name|mode
enum|;
endif|#
directive|endif
name|DFBSurfaceFlipFlags
name|flipFlags
decl_stmt|;
name|bool
name|boundingRectFlip
decl_stmt|;
name|bool
name|flushPending
decl_stmt|;
ifdef|#
directive|ifdef
name|QT_DIRECTFB_TIMING
name|int
name|frames
decl_stmt|;
name|QTime
name|timer
decl_stmt|;
endif|#
directive|endif
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_QWS_DIRECTFB
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QDIRECFBWINDOWSURFACE_H
end_comment
end_unit
