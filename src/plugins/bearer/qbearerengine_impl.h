begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QBEARERENGINE_IMPL_H
end_ifndef
begin_define
DECL|macro|QBEARERENGINE_IMPL_H
define|#
directive|define
name|QBEARERENGINE_IMPL_H
end_define
begin_include
include|#
directive|include
file|<QtNetwork/private/qbearerengine_p.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_BEARERMANAGEMENT
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QBearerEngineImpl
range|:
name|public
name|QBearerEngine
block|{
name|Q_OBJECT
name|public
operator|:
expr|enum
name|ConnectionError
block|{
name|InterfaceLookupError
operator|=
literal|0
block|,
name|ConnectError
block|,
name|OperationNotSupported
block|,
name|DisconnectionError
block|,     }
block|;
name|QBearerEngineImpl
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
operator|:
name|QBearerEngine
argument_list|(
argument|parent
argument_list|)
block|{}
operator|~
name|QBearerEngineImpl
argument_list|()
block|{}
name|virtual
name|void
name|connectToId
argument_list|(
specifier|const
name|QString
operator|&
name|id
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|void
name|disconnectFromId
argument_list|(
specifier|const
name|QString
operator|&
name|id
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QString
name|getInterfaceFromId
argument_list|(
specifier|const
name|QString
operator|&
name|id
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QNetworkSession
operator|::
name|State
name|sessionStateForId
argument_list|(
specifier|const
name|QString
operator|&
name|id
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|quint64
name|bytesWritten
argument_list|(
argument|const QString&
argument_list|)
block|{
return|return
name|Q_UINT64_C
argument_list|(
literal|0
argument_list|)
return|;
block|}
name|virtual
name|quint64
name|bytesReceived
argument_list|(
argument|const QString&
argument_list|)
block|{
return|return
name|Q_UINT64_C
argument_list|(
literal|0
argument_list|)
return|;
block|}
name|virtual
name|quint64
name|startTime
argument_list|(
argument|const QString&
argument_list|)
block|{
return|return
name|Q_UINT64_C
argument_list|(
literal|0
argument_list|)
return|;
block|}
name|Q_SIGNALS
operator|:
name|void
name|connectionError
argument_list|(
argument|const QString&id
argument_list|,
argument|QBearerEngineImpl::ConnectionError error
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
name|Q_DECLARE_METATYPE
argument_list|(
name|QBearerEngineImpl
operator|::
name|ConnectionError
argument_list|)
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_BEARERMANAGEMENT
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QBEARERENGINE_IMPL_H
end_comment
end_unit
