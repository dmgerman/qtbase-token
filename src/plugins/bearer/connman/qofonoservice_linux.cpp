begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QtDBus>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusConnection>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusError>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusInterface>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusMessage>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusReply>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusPendingCallWatcher>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusObjectPath>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusPendingCall>
end_include
begin_include
include|#
directive|include
file|"qofonoservice_linux_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_BEARERMANAGEMENT
end_ifndef
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DBUS
end_ifndef
begin_function
DECL|function|operator <<
name|QDBusArgument
modifier|&
name|operator
name|<<
parameter_list|(
name|QDBusArgument
modifier|&
name|argument
parameter_list|,
specifier|const
name|ObjectPathProperties
modifier|&
name|item
parameter_list|)
block|{
name|argument
operator|.
name|beginStructure
argument_list|()
expr_stmt|;
name|argument
operator|<<
name|item
operator|.
name|path
operator|<<
name|item
operator|.
name|properties
expr_stmt|;
name|argument
operator|.
name|endStructure
argument_list|()
expr_stmt|;
return|return
name|argument
return|;
block|}
end_function
begin_function
DECL|function|operator >>
specifier|const
name|QDBusArgument
modifier|&
name|operator
name|>>
parameter_list|(
specifier|const
name|QDBusArgument
modifier|&
name|argument
parameter_list|,
name|ObjectPathProperties
modifier|&
name|item
parameter_list|)
block|{
name|argument
operator|.
name|beginStructure
argument_list|()
expr_stmt|;
name|argument
operator|>>
name|item
operator|.
name|path
operator|>>
name|item
operator|.
name|properties
expr_stmt|;
name|argument
operator|.
name|endStructure
argument_list|()
expr_stmt|;
return|return
name|argument
return|;
block|}
end_function
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QOfonoManagerInterface
name|QOfonoManagerInterface
operator|::
name|QOfonoManagerInterface
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_MANAGER_PATH
argument_list|)
argument_list|,
name|OFONO_MANAGER_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{
name|qDBusRegisterMetaType
argument_list|<
name|ObjectPathProperties
argument_list|>
argument_list|()
expr_stmt|;
name|qDBusRegisterMetaType
argument_list|<
name|PathPropertiesList
argument_list|>
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QOfonoManagerInterface
name|QOfonoManagerInterface
operator|::
name|~
name|QOfonoManagerInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|getModems
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
name|QOfonoManagerInterface
operator|::
name|getModems
parameter_list|()
block|{
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
name|modemList
decl_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|argumentList
decl_stmt|;
name|QDBusReply
argument_list|<
name|PathPropertiesList
argument_list|>
name|reply
init|=
name|this
operator|->
name|asyncCallWithArgumentList
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetModems"
argument_list|)
argument_list|,
name|argumentList
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|isValid
argument_list|()
condition|)
block|{
foreach|foreach
control|(
name|ObjectPathProperties
name|modem
decl|,
name|reply
operator|.
name|value
argument_list|()
control|)
block|{
name|modemList
operator|<<
name|modem
operator|.
name|path
expr_stmt|;
block|}
block|}
return|return
name|modemList
return|;
block|}
end_function
begin_function
DECL|function|currentModem
name|QDBusObjectPath
name|QOfonoManagerInterface
operator|::
name|currentModem
parameter_list|()
block|{
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
name|modems
init|=
name|getModems
argument_list|()
decl_stmt|;
foreach|foreach
control|(
specifier|const
name|QDBusObjectPath
modifier|&
name|modem
decl|,
name|modems
control|)
block|{
name|QOfonoModemInterface
name|device
argument_list|(
name|modem
operator|.
name|path
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|device
operator|.
name|isPowered
argument_list|()
operator|&&
name|device
operator|.
name|isOnline
argument_list|()
condition|)
return|return
name|modem
return|;
empty_stmt|;
block|}
return|return
name|QDBusObjectPath
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|connectNotify
name|void
name|QOfonoManagerInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoManagerInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_MANAGER_PATH
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"PropertyCHanged not connected"
expr_stmt|;
block|}
block|}
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedContextSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoManagerInterface
operator|::
name|propertyChangedContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedContextSignal
condition|)
block|{
name|QOfonoDBusHelper
modifier|*
name|helper
decl_stmt|;
name|helper
operator|=
operator|new
name|QOfonoDBusHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_MANAGER_PATH
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|helper
argument_list|,
name|SLOT
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|helper
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoManagerInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoManagerInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoManagerInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
return|return
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
return|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|QVariant
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoManagerInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|isValid
argument_list|()
condition|)
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
else|else
return|return
name|QVariantMap
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOfonoDBusHelper
name|QOfonoDBusHelper
operator|::
name|QOfonoDBusHelper
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoDBusHelper
name|QOfonoDBusHelper
operator|::
name|~
name|QOfonoDBusHelper
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|propertyChanged
name|void
name|QOfonoDBusHelper
operator|::
name|propertyChanged
parameter_list|(
specifier|const
name|QString
modifier|&
name|item
parameter_list|,
specifier|const
name|QDBusVariant
modifier|&
name|var
parameter_list|)
block|{
name|QDBusMessage
name|msg
init|=
name|this
operator|->
name|message
argument_list|()
decl_stmt|;
name|Q_EMIT
name|propertyChangedContext
argument_list|(
name|msg
operator|.
name|path
argument_list|()
argument_list|,
name|item
argument_list|,
name|var
argument_list|)
decl_stmt|;
block|}
end_function
begin_constructor
DECL|function|QOfonoModemInterface
name|QOfonoModemInterface
operator|::
name|QOfonoModemInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|OFONO_MODEM_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoModemInterface
name|QOfonoModemInterface
operator|::
name|~
name|QOfonoModemInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|isPowered
name|bool
name|QOfonoModemInterface
operator|::
name|isPowered
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Powered"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isOnline
name|bool
name|QOfonoModemInterface
operator|::
name|isOnline
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Online"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getName
name|QString
name|QOfonoModemInterface
operator|::
name|getName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getManufacturer
name|QString
name|QOfonoModemInterface
operator|::
name|getManufacturer
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Manufacturer"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getModel
name|QString
name|QOfonoModemInterface
operator|::
name|getModel
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Model"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getRevision
name|QString
name|QOfonoModemInterface
operator|::
name|getRevision
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Revision"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getSerial
name|QString
name|QOfonoModemInterface
operator|::
name|getSerial
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Serial"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getFeatures
name|QStringList
name|QOfonoModemInterface
operator|::
name|getFeatures
parameter_list|()
block|{
comment|//sms, sim
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Features"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getInterfaces
name|QStringList
name|QOfonoModemInterface
operator|::
name|getInterfaces
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Interfaces"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|defaultInterface
name|QString
name|QOfonoModemInterface
operator|::
name|defaultInterface
parameter_list|()
block|{
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|modem
decl|,
name|getInterfaces
argument_list|()
control|)
block|{
return|return
name|modem
return|;
block|}
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|connectNotify
name|void
name|QOfonoModemInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoModemInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_MODEM_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"PropertyCHanged not connected"
expr_stmt|;
block|}
block|}
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedContextSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoModemInterface
operator|::
name|propertyChangedContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedContextSignal
condition|)
block|{
name|QOfonoDBusHelper
modifier|*
name|helper
decl_stmt|;
name|helper
operator|=
operator|new
name|QOfonoDBusHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_MODEM_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|helper
argument_list|,
name|SLOT
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|helper
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoModemInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoModemInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoModemInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoModemInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_constructor
DECL|function|QOfonoNetworkRegistrationInterface
name|QOfonoNetworkRegistrationInterface
operator|::
name|QOfonoNetworkRegistrationInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|OFONO_NETWORK_REGISTRATION_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoNetworkRegistrationInterface
name|QOfonoNetworkRegistrationInterface
operator|::
name|~
name|QOfonoNetworkRegistrationInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|getStatus
name|QString
name|QOfonoNetworkRegistrationInterface
operator|::
name|getStatus
parameter_list|()
block|{
comment|/*                 "unregistered"  Not registered to any network                 "registered"    Registered to home network                 "searching"     Not registered, but searching                 "denied"        Registration has been denied                 "unknown"       Status is unknown                 "roaming"       Registered, but roaming*/
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Status"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getLac
name|quint16
name|QOfonoNetworkRegistrationInterface
operator|::
name|getLac
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"LocationAreaCode"
argument_list|)
decl_stmt|;
return|return
name|var
operator|.
name|value
argument_list|<
name|quint16
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getCellId
name|quint32
name|QOfonoNetworkRegistrationInterface
operator|::
name|getCellId
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"CellId"
argument_list|)
decl_stmt|;
return|return
name|var
operator|.
name|value
argument_list|<
name|quint32
argument_list|>
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getTechnology
name|QString
name|QOfonoNetworkRegistrationInterface
operator|::
name|getTechnology
parameter_list|()
block|{
comment|// "gsm", "edge", "umts", "hspa","lte"
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Technology"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getOperatorName
name|QString
name|QOfonoNetworkRegistrationInterface
operator|::
name|getOperatorName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getSignalStrength
name|int
name|QOfonoNetworkRegistrationInterface
operator|::
name|getSignalStrength
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Strength"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|int
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getBaseStation
name|QString
name|QOfonoNetworkRegistrationInterface
operator|::
name|getBaseStation
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"BaseStation"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getOperators
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
name|QOfonoNetworkRegistrationInterface
operator|::
name|getOperators
parameter_list|()
block|{
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
name|operatorList
decl_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|argumentList
decl_stmt|;
name|QDBusReply
argument_list|<
name|PathPropertiesList
argument_list|>
name|reply
init|=
name|this
operator|->
name|asyncCallWithArgumentList
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetOperators"
argument_list|)
argument_list|,
name|argumentList
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|isValid
argument_list|()
condition|)
block|{
foreach|foreach
control|(
name|ObjectPathProperties
name|netop
decl|,
name|reply
operator|.
name|value
argument_list|()
control|)
block|{
name|operatorList
operator|<<
name|netop
operator|.
name|path
expr_stmt|;
block|}
block|}
return|return
name|operatorList
return|;
block|}
end_function
begin_function
DECL|function|connectNotify
name|void
name|QOfonoNetworkRegistrationInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoNetworkRegistrationInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_NETWORK_REGISTRATION_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"PropertyCHanged not connected"
expr_stmt|;
block|}
block|}
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedContextSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoNetworkRegistrationInterface
operator|::
name|propertyChangedContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedContextSignal
condition|)
block|{
name|QOfonoDBusHelper
modifier|*
name|helper
decl_stmt|;
name|helper
operator|=
operator|new
name|QOfonoDBusHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_NETWORK_REGISTRATION_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|helper
argument_list|,
name|SLOT
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|helper
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoNetworkRegistrationInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoNetworkRegistrationInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoNetworkRegistrationInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoNetworkRegistrationInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOfonoNetworkOperatorInterface
name|QOfonoNetworkOperatorInterface
operator|::
name|QOfonoNetworkOperatorInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|OFONO_NETWORK_OPERATOR_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoNetworkOperatorInterface
name|QOfonoNetworkOperatorInterface
operator|::
name|~
name|QOfonoNetworkOperatorInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|getName
name|QString
name|QOfonoNetworkOperatorInterface
operator|::
name|getName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getStatus
name|QString
name|QOfonoNetworkOperatorInterface
operator|::
name|getStatus
parameter_list|()
block|{
comment|// "unknown", "available", "current" and "forbidden"
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Status"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getMcc
name|QString
name|QOfonoNetworkOperatorInterface
operator|::
name|getMcc
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"MobileCountryCode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getMnc
name|QString
name|QOfonoNetworkOperatorInterface
operator|::
name|getMnc
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"MobileNetworkCode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getTechnologies
name|QStringList
name|QOfonoNetworkOperatorInterface
operator|::
name|getTechnologies
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Technologies"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|connectNotify
name|void
name|QOfonoNetworkOperatorInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoNetworkOperatorInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//        if (!connection().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_NETWORK_OPERATOR_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               this,SIGNAL(propertyChanged(QString,QDBusVariant)))) {
comment|//            qWarning()<< "PropertyCHanged not connected";
comment|//        }
comment|//    }
comment|//    static const QMetaMethod propertyChangedContextSignal = QMetaMethod::fromSignal(&QOfonoNetworkOperatorInterface::propertyChangedContext);
comment|//    if (signal == propertyChangedContextSignal) {
comment|//        QOfonoDBusHelper *helper;
comment|//        helper = new QOfonoDBusHelper(this);
comment|//        QDBusConnection::systemBus().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_NETWORK_OPERATOR_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               helper,SLOT(propertyChanged(QString,QDBusVariant)));
comment|//        QObject::connect(helper,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)),
comment|//                this,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)), Qt::UniqueConnection);
comment|//    }
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoNetworkOperatorInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoNetworkOperatorInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//    }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoNetworkOperatorInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoNetworkOperatorInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOfonoSimInterface
name|QOfonoSimInterface
operator|::
name|QOfonoSimInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|OFONO_SIM_MANAGER_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoSimInterface
name|QOfonoSimInterface
operator|::
name|~
name|QOfonoSimInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|isPresent
name|bool
name|QOfonoSimInterface
operator|::
name|isPresent
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Present"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getHomeMcc
name|QString
name|QOfonoSimInterface
operator|::
name|getHomeMcc
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"MobileCountryCode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getHomeMnc
name|QString
name|QOfonoSimInterface
operator|::
name|getHomeMnc
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"MobileNetworkCode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_comment
comment|//    QStringList subscriberNumbers();
end_comment
begin_comment
comment|//    QMap<QString,QString> serviceNumbers();
end_comment
begin_function
DECL|function|pinRequired
name|QString
name|QOfonoSimInterface
operator|::
name|pinRequired
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"PinRequired"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|lockedPins
name|QString
name|QOfonoSimInterface
operator|::
name|lockedPins
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"LockedPins"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|cardIdentifier
name|QString
name|QOfonoSimInterface
operator|::
name|cardIdentifier
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"CardIdentifier"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|connectNotify
name|void
name|QOfonoSimInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoSimInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//        if (!connection().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_SIM_MANAGER_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               this,SIGNAL(propertyChanged(QString,QDBusVariant)))) {
comment|//            qWarning()<< "PropertyCHanged not connected";
comment|//        }
comment|//    }
comment|//    static const QMetaMethod propertyChangedContextSignal = QMetaMethod::fromSignal(&QOfonoSimInterface::propertyChangedContext);
comment|//    if (signal == propertyChangedContextSignal) {
comment|//        QOfonoDBusHelper *helper;
comment|//        helper = new QOfonoDBusHelper(this);
comment|//        QDBusConnection::systemBus().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_SIM_MANAGER_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               helper,SLOT(propertyChanged(QString,QDBusVariant)));
comment|//        QObject::connect(helper,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)),
comment|//                this,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)), Qt::UniqueConnection);
comment|//    }
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoSimInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoSimInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//    }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoSimInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoSimInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOfonoDataConnectionManagerInterface
name|QOfonoDataConnectionManagerInterface
operator|::
name|QOfonoDataConnectionManagerInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|OFONO_DATA_CONNECTION_MANAGER_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoDataConnectionManagerInterface
name|QOfonoDataConnectionManagerInterface
operator|::
name|~
name|QOfonoDataConnectionManagerInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|getPrimaryContexts
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
name|QOfonoDataConnectionManagerInterface
operator|::
name|getPrimaryContexts
parameter_list|()
block|{
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
name|contextList
decl_stmt|;
name|QList
argument_list|<
name|QVariant
argument_list|>
name|argumentList
decl_stmt|;
name|QDBusReply
argument_list|<
name|PathPropertiesList
argument_list|>
name|reply
init|=
name|this
operator|->
name|asyncCallWithArgumentList
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetContexts"
argument_list|)
argument_list|,
name|argumentList
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|isValid
argument_list|()
condition|)
block|{
foreach|foreach
control|(
name|ObjectPathProperties
name|context
decl|,
name|reply
operator|.
name|value
argument_list|()
control|)
block|{
name|contextList
operator|<<
name|context
operator|.
name|path
expr_stmt|;
block|}
block|}
return|return
name|contextList
return|;
block|}
end_function
begin_function
DECL|function|isAttached
name|bool
name|QOfonoDataConnectionManagerInterface
operator|::
name|isAttached
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Attached"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isRoamingAllowed
name|bool
name|QOfonoDataConnectionManagerInterface
operator|::
name|isRoamingAllowed
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"RoamingAllowed"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isPowered
name|bool
name|QOfonoDataConnectionManagerInterface
operator|::
name|isPowered
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Powered"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|connectNotify
name|void
name|QOfonoDataConnectionManagerInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoDataConnectionManagerInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//        if (!connection().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_DATA_CONNECTION_MANAGER_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               this,SIGNAL(propertyChanged(QString,QDBusVariant)))) {
comment|//            qWarning()<< "PropertyCHanged not connected";
comment|//        }
comment|//    }
comment|//    static const QMetaMethod propertyChangedContextSignal = QMetaMethod::fromSignal(&QOfonoDataConnectionManagerInterface::propertyChangedContext);
comment|//    if (signal == propertyChangedContextSignal) {
comment|//        QOfonoDBusHelper *helper;
comment|//        helper = new QOfonoDBusHelper(this);
comment|//        QDBusConnection::systemBus().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_DATA_CONNECTION_MANAGER_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               helper,SLOT(propertyChanged(QString,QDBusVariant)));
comment|//        QObject::connect(helper,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)),
comment|//                this,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)), Qt::UniqueConnection);
comment|//    }
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoDataConnectionManagerInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoDataConnectionManagerInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//    }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoDataConnectionManagerInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoDataConnectionManagerInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOfonoPrimaryDataContextInterface
name|QOfonoPrimaryDataContextInterface
operator|::
name|QOfonoPrimaryDataContextInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|OFONO_DATA_CONTEXT_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoPrimaryDataContextInterface
name|QOfonoPrimaryDataContextInterface
operator|::
name|~
name|QOfonoPrimaryDataContextInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|isActive
name|bool
name|QOfonoPrimaryDataContextInterface
operator|::
name|isActive
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Active"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getApName
name|QString
name|QOfonoPrimaryDataContextInterface
operator|::
name|getApName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"AccessPointName"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getType
name|QString
name|QOfonoPrimaryDataContextInterface
operator|::
name|getType
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Type"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getName
name|QString
name|QOfonoPrimaryDataContextInterface
operator|::
name|getName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getSettings
name|QVariantMap
name|QOfonoPrimaryDataContextInterface
operator|::
name|getSettings
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Settings"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QVariantMap
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getInterface
name|QString
name|QOfonoPrimaryDataContextInterface
operator|::
name|getInterface
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Interface"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getAddress
name|QString
name|QOfonoPrimaryDataContextInterface
operator|::
name|getAddress
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Address"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|setActive
name|bool
name|QOfonoPrimaryDataContextInterface
operator|::
name|setActive
parameter_list|(
name|bool
name|on
parameter_list|)
block|{
comment|//    this->setProperty("Active", QVariant(on));
return|return
name|setProp
argument_list|(
literal|"Active"
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|on
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|setApn
name|bool
name|QOfonoPrimaryDataContextInterface
operator|::
name|setApn
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
block|{
return|return
name|setProp
argument_list|(
literal|"AccessPointName"
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|connectNotify
name|void
name|QOfonoPrimaryDataContextInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoPrimaryDataContextInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//        if (!connection().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_DATA_CONTEXT_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               this,SIGNAL(propertyChanged(QString,QDBusVariant)))) {
comment|//            qWarning()<< "PropertyCHanged not connected";
comment|//        }
comment|//    }
comment|//    static const QMetaMethod propertyChangedContextSignal = QMetaMethod::fromSignal(&QOfonoPrimaryDataContextInterface::propertyChangedContext);
comment|//    if (signal == propertyChangedContextSignal) {
comment|//        QOfonoDBusHelper *helper;
comment|//        helper = new QOfonoDBusHelper(this);
comment|//        QDBusConnection::systemBus().connect(QLatin1String(OFONO_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(OFONO_DATA_CONTEXT_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               helper,SLOT(propertyChanged(QString,QDBusVariant)));
comment|//        QObject::connect(helper,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)),
comment|//                this,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)), Qt::UniqueConnection);
comment|//    }
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoPrimaryDataContextInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QOfonoPrimaryDataContextInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//    }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoPrimaryDataContextInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoPrimaryDataContextInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|setProp
name|bool
name|QOfonoPrimaryDataContextInterface
operator|::
name|setProp
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|,
specifier|const
name|QVariant
modifier|&
name|var
parameter_list|)
block|{
name|QList
argument_list|<
name|QVariant
argument_list|>
name|args
decl_stmt|;
name|args
operator|<<
name|QVariant
operator|::
name|fromValue
argument_list|(
name|property
argument_list|)
operator|<<
name|QVariant
operator|::
name|fromValue
argument_list|(
name|QDBusVariant
argument_list|(
name|var
argument_list|)
argument_list|)
expr_stmt|;
name|QDBusMessage
name|reply
init|=
name|this
operator|->
name|callWithArgumentList
argument_list|(
name|QDBus
operator|::
name|AutoDetect
argument_list|,
name|QLatin1String
argument_list|(
literal|"SetProperty"
argument_list|)
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|bool
name|ok
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|type
argument_list|()
operator|!=
name|QDBusMessage
operator|::
name|ReplyMessage
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
name|reply
operator|.
name|errorMessage
argument_list|()
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
name|qWarning
argument_list|()
operator|<<
name|reply
operator|.
name|errorMessage
argument_list|()
expr_stmt|;
return|return
name|ok
return|;
block|}
end_function
begin_constructor
DECL|function|QOfonoSmsInterface
name|QOfonoSmsInterface
operator|::
name|QOfonoSmsInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|OFONO_SMS_MANAGER_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QOfonoSmsInterface
name|QOfonoSmsInterface
operator|::
name|~
name|QOfonoSmsInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|connectNotify
name|void
name|QOfonoSmsInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoSmsInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_SMS_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"PropertyCHanged not connected"
expr_stmt|;
block|}
block|}
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedContextSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoSmsInterface
operator|::
name|propertyChangedContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedContextSignal
condition|)
block|{
name|QOfonoDBusHelper
modifier|*
name|helper
decl_stmt|;
name|helper
operator|=
operator|new
name|QOfonoDBusHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_SMS_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|helper
argument_list|,
name|SLOT
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|helper
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|const
name|QMetaMethod
name|immediateMessageSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoSmsInterface
operator|::
name|immediateMessage
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|immediateMessageSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_SMS_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"ImmediateMessage"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|immediateMessage
argument_list|(
name|QString
argument_list|,
name|QVariantMap
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"PropertyCHanged not connected"
expr_stmt|;
block|}
block|}
specifier|static
specifier|const
name|QMetaMethod
name|incomingMessageSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoSmsInterface
operator|::
name|incomingMessage
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|incomingMessageSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|OFONO_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|OFONO_SMS_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"IncomingMessage"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|incomingMessage
argument_list|(
name|QString
argument_list|,
name|QVariantMap
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"PropertyCHanged not connected"
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QOfonoSmsInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QOfonoSmsInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QOfonoSmsInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
name|Q_FUNC_INFO
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QOfonoSmsInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|sendMessage
name|void
name|QOfonoSmsInterface
operator|::
name|sendMessage
parameter_list|(
specifier|const
name|QString
modifier|&
name|to
parameter_list|,
specifier|const
name|QString
modifier|&
name|message
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"SendMessage"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|to
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|message
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|error
argument_list|()
operator|.
name|type
argument_list|()
operator|==
name|QDBusError
operator|::
name|InvalidArgs
condition|)
name|qWarning
argument_list|(
literal|"%s"
argument_list|,
name|qPrintable
argument_list|(
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_DBUS
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_BEARERMANAGEMENT
end_comment
end_unit
