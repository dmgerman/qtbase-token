begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QObject>
end_include
begin_include
include|#
directive|include
file|<QList>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QtDBus>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusConnection>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusError>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusInterface>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusMessage>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusReply>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusPendingCallWatcher>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusObjectPath>
end_include
begin_include
include|#
directive|include
file|<QtDBus/QDBusPendingCall>
end_include
begin_include
include|#
directive|include
file|"qconnmanservice_linux_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_BEARERMANAGEMENT
end_ifndef
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DBUS
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|dbusConnection
specifier|static
name|QDBusConnection
name|dbusConnection
init|=
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
decl_stmt|;
end_decl_stmt
begin_constructor
DECL|function|QConnmanManagerInterface
name|QConnmanManagerInterface
operator|::
name|QConnmanManagerInterface
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_MANAGER_PATH
argument_list|)
argument_list|,
name|CONNMAN_MANAGER_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QConnmanManagerInterface
name|QConnmanManagerInterface
operator|::
name|~
name|QConnmanManagerInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|connectNotify
name|void
name|QConnmanManagerInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanManagerInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_MANAGER_PATH
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"PropertyCHanged not connected"
expr_stmt|;
block|}
block|}
specifier|static
specifier|const
name|QMetaMethod
name|stateChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanManagerInterface
operator|::
name|stateChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|stateChangedSignal
condition|)
block|{
if|if
condition|(
operator|!
name|connection
argument_list|()
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_MANAGER_PATH
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"StateChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|stateChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
literal|"StateChanged not connected"
expr_stmt|;
block|}
block|}
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedContextSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanManagerInterface
operator|::
name|propertyChangedContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedContextSignal
condition|)
block|{
name|QConnmanDBusHelper
modifier|*
name|helper
decl_stmt|;
name|helper
operator|=
operator|new
name|QConnmanDBusHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|dbusConnection
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_MANAGER_PATH
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_MANAGER_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|helper
argument_list|,
name|SLOT
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|helper
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QConnmanManagerInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanManagerInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QConnmanManagerInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|qDebug
argument_list|()
operator|<<
literal|"does not contain"
operator|<<
name|property
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QConnmanManagerInterface
operator|::
name|getProperties
parameter_list|()
block|{
if|if
condition|(
name|this
operator|->
name|isValid
argument_list|()
condition|)
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
else|else
return|return
name|QVariantMap
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getState
name|QString
name|QConnmanManagerInterface
operator|::
name|getState
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
literal|"GetState"
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|setProperty
name|bool
name|QConnmanManagerInterface
operator|::
name|setProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
specifier|const
name|QDBusVariant
modifier|&
name|value
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|createProfile
name|QDBusObjectPath
name|QConnmanManagerInterface
operator|::
name|createProfile
parameter_list|(
specifier|const
name|QString
modifier|&
comment|/*name*/
parameter_list|)
block|{
return|return
name|QDBusObjectPath
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|removeProfile
name|bool
name|QConnmanManagerInterface
operator|::
name|removeProfile
parameter_list|(
name|QDBusObjectPath
comment|/*path*/
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|requestScan
name|bool
name|QConnmanManagerInterface
operator|::
name|requestScan
parameter_list|(
specifier|const
name|QString
modifier|&
name|type
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QString
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"RequestScan"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|type
argument_list|)
argument_list|)
decl_stmt|;
name|bool
name|ok
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|error
argument_list|()
operator|.
name|type
argument_list|()
operator|==
name|QDBusError
operator|::
name|InvalidArgs
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|ok
return|;
block|}
end_function
begin_function
DECL|function|enableTechnology
name|bool
name|QConnmanManagerInterface
operator|::
name|enableTechnology
parameter_list|(
specifier|const
name|QString
modifier|&
name|type
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"EnableTechnology"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|type
argument_list|)
argument_list|)
decl_stmt|;
name|bool
name|ok
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|error
argument_list|()
operator|.
name|type
argument_list|()
operator|==
name|QDBusError
operator|::
name|InvalidArgs
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|ok
return|;
block|}
end_function
begin_function
DECL|function|disableTechnology
name|bool
name|QConnmanManagerInterface
operator|::
name|disableTechnology
parameter_list|(
specifier|const
name|QString
modifier|&
name|type
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"DisableTechnology"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|type
argument_list|)
argument_list|)
decl_stmt|;
name|bool
name|ok
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|error
argument_list|()
operator|.
name|type
argument_list|()
operator|==
name|QDBusError
operator|::
name|InvalidArgs
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
expr_stmt|;
name|ok
operator|=
literal|false
expr_stmt|;
block|}
return|return
name|ok
return|;
block|}
end_function
begin_function
DECL|function|connectService
name|QDBusObjectPath
name|QConnmanManagerInterface
operator|::
name|connectService
parameter_list|(
name|QVariantMap
modifier|&
name|map
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QDBusObjectPath
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"ConnectService"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|map
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|reply
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
expr_stmt|;
block|}
return|return
name|reply
return|;
block|}
end_function
begin_function
DECL|function|registerAgent
name|void
name|QConnmanManagerInterface
operator|::
name|registerAgent
parameter_list|(
name|QDBusObjectPath
modifier|&
comment|/*path*/
parameter_list|)
block|{ }
end_function
begin_function
DECL|function|unregisterAgent
name|void
name|QConnmanManagerInterface
operator|::
name|unregisterAgent
parameter_list|(
name|QDBusObjectPath
comment|/*path*/
parameter_list|)
block|{ }
end_function
begin_function
DECL|function|registerCounter
name|void
name|QConnmanManagerInterface
operator|::
name|registerCounter
parameter_list|(
specifier|const
name|QString
modifier|&
name|path
parameter_list|,
name|quint32
name|interval
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"RegisterCounter"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|path
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|interval
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|error
argument_list|()
operator|.
name|type
argument_list|()
operator|==
name|QDBusError
operator|::
name|InvalidArgs
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|unregisterCounter
name|void
name|QConnmanManagerInterface
operator|::
name|unregisterCounter
parameter_list|(
specifier|const
name|QString
modifier|&
name|path
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"UnregisterCounter"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|path
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|.
name|error
argument_list|()
operator|.
name|type
argument_list|()
operator|==
name|QDBusError
operator|::
name|InvalidArgs
condition|)
block|{
name|qWarning
argument_list|()
operator|<<
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|requestSession
name|QString
name|QConnmanManagerInterface
operator|::
name|requestSession
parameter_list|(
specifier|const
name|QString
modifier|&
name|bearerName
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"RequestSession"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|bearerName
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|releaseSession
name|void
name|QConnmanManagerInterface
operator|::
name|releaseSession
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QList
argument_list|<
name|QDBusObjectPath
argument_list|>
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"ReleaseSession"
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_function
begin_function
DECL|function|lookupService
name|QDBusObjectPath
name|QConnmanManagerInterface
operator|::
name|lookupService
parameter_list|(
specifier|const
name|QString
modifier|&
name|service
parameter_list|)
block|{
name|QDBusReply
argument_list|<
name|QDBusObjectPath
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"LookupService"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|service
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|reply
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|qDebug
argument_list|()
operator|<<
name|reply
operator|.
name|error
argument_list|()
operator|.
name|message
argument_list|()
expr_stmt|;
block|}
return|return
name|reply
return|;
block|}
end_function
begin_comment
comment|// properties
end_comment
begin_function
DECL|function|getAvailableTechnologies
name|QStringList
name|QConnmanManagerInterface
operator|::
name|getAvailableTechnologies
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"AvailableTechnologies"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getEnabledTechnologies
name|QStringList
name|QConnmanManagerInterface
operator|::
name|getEnabledTechnologies
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"EnabledTechnologies"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getConnectedTechnologies
name|QStringList
name|QConnmanManagerInterface
operator|::
name|getConnectedTechnologies
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"ConnectedTechnologies"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getDefaultTechnology
name|QString
name|QConnmanManagerInterface
operator|::
name|getDefaultTechnology
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"DefaultTechnology"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getOfflineMode
name|bool
name|QConnmanManagerInterface
operator|::
name|getOfflineMode
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"OfflineMode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getActiveProfile
name|QString
name|QConnmanManagerInterface
operator|::
name|getActiveProfile
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"ActiveProfile"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getProfiles
name|QStringList
name|QConnmanManagerInterface
operator|::
name|getProfiles
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Profiles"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getTechnologies
name|QStringList
name|QConnmanManagerInterface
operator|::
name|getTechnologies
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Technologies"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getServices
name|QStringList
name|QConnmanManagerInterface
operator|::
name|getServices
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Services"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getPathForTechnology
name|QString
name|QConnmanManagerInterface
operator|::
name|getPathForTechnology
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
block|{
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|path
decl|,
name|getTechnologies
argument_list|()
control|)
block|{
if|if
condition|(
name|path
operator|.
name|contains
argument_list|(
name|name
argument_list|)
condition|)
block|{
return|return
name|path
return|;
block|}
block|}
return|return
literal|""
return|;
block|}
end_function
begin_comment
comment|//////////////////////////
end_comment
begin_constructor
DECL|function|QConnmanProfileInterface
name|QConnmanProfileInterface
operator|::
name|QConnmanProfileInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|CONNMAN_PROFILE_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QConnmanProfileInterface
name|QConnmanProfileInterface
operator|::
name|~
name|QConnmanProfileInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|connectNotify
name|void
name|QConnmanProfileInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanProfileInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
name|dbusConnection
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_PROFILE_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QConnmanProfileInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanProfileInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QConnmanProfileInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QConnmanProfileInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_comment
comment|// properties
end_comment
begin_function
DECL|function|getName
name|QString
name|QConnmanProfileInterface
operator|::
name|getName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isOfflineMode
name|bool
name|QConnmanProfileInterface
operator|::
name|isOfflineMode
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"OfflineMode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getServices
name|QStringList
name|QConnmanProfileInterface
operator|::
name|getServices
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Services"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_comment
comment|///////////////////////////
end_comment
begin_constructor
DECL|function|QConnmanServiceInterface
name|QConnmanServiceInterface
operator|::
name|QConnmanServiceInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|CONNMAN_SERVICE_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QConnmanServiceInterface
name|QConnmanServiceInterface
operator|::
name|~
name|QConnmanServiceInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|connectNotify
name|void
name|QConnmanServiceInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanServiceInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
name|dbusConnection
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedContextSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanServiceInterface
operator|::
name|propertyChangedContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedContextSignal
condition|)
block|{
name|QConnmanDBusHelper
modifier|*
name|helper
decl_stmt|;
name|helper
operator|=
operator|new
name|QConnmanDBusHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|dbusConnection
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|helper
argument_list|,
name|SLOT
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|helper
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QConnmanServiceInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanServiceInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QConnmanServiceInterface
operator|::
name|getProperties
parameter_list|()
block|{
if|if
condition|(
name|this
operator|->
name|isValid
argument_list|()
condition|)
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
else|else
return|return
name|QVariantMap
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QConnmanServiceInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_function
DECL|function|connect
name|void
name|QConnmanServiceInterface
operator|::
name|connect
parameter_list|()
block|{
name|this
operator|->
name|asyncCall
argument_list|(
name|QLatin1String
argument_list|(
literal|"Connect"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|disconnect
name|void
name|QConnmanServiceInterface
operator|::
name|disconnect
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"Disconnect"
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_function
begin_function
DECL|function|remove
name|void
name|QConnmanServiceInterface
operator|::
name|remove
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"Remove"
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_function
begin_comment
comment|// void moveBefore(QDBusObjectPath&service);
end_comment
begin_comment
comment|// void moveAfter(QDBusObjectPath&service);
end_comment
begin_comment
comment|// properties
end_comment
begin_function
DECL|function|getState
name|QString
name|QConnmanServiceInterface
operator|::
name|getState
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"State"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getError
name|QString
name|QConnmanServiceInterface
operator|::
name|getError
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Error"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getName
name|QString
name|QConnmanServiceInterface
operator|::
name|getName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getType
name|QString
name|QConnmanServiceInterface
operator|::
name|getType
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Type"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getMode
name|QString
name|QConnmanServiceInterface
operator|::
name|getMode
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Mode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getSecurity
name|QString
name|QConnmanServiceInterface
operator|::
name|getSecurity
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Security"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getPassphrase
name|QString
name|QConnmanServiceInterface
operator|::
name|getPassphrase
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Passphrase"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isPassphraseRequired
name|bool
name|QConnmanServiceInterface
operator|::
name|isPassphraseRequired
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"PassphraseRequired"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getSignalStrength
name|quint8
name|QConnmanServiceInterface
operator|::
name|getSignalStrength
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Strength"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|quint8
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isFavorite
name|bool
name|QConnmanServiceInterface
operator|::
name|isFavorite
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Favorite"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isImmutable
name|bool
name|QConnmanServiceInterface
operator|::
name|isImmutable
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Immutable"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isAutoConnect
name|bool
name|QConnmanServiceInterface
operator|::
name|isAutoConnect
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"AutoConnect"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isSetupRequired
name|bool
name|QConnmanServiceInterface
operator|::
name|isSetupRequired
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"SetupRequired"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getAPN
name|QString
name|QConnmanServiceInterface
operator|::
name|getAPN
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"APN"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getMCC
name|QString
name|QConnmanServiceInterface
operator|::
name|getMCC
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"MCC"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getMNC
name|QString
name|QConnmanServiceInterface
operator|::
name|getMNC
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"MNC"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|isRoaming
name|bool
name|QConnmanServiceInterface
operator|::
name|isRoaming
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Roaming"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getNameservers
name|QStringList
name|QConnmanServiceInterface
operator|::
name|getNameservers
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"NameServers"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getDomains
name|QStringList
name|QConnmanServiceInterface
operator|::
name|getDomains
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Domains"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getIPv4
name|QVariantMap
name|QConnmanServiceInterface
operator|::
name|getIPv4
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"IPv4"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QVariantMap
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getIPv4Configuration
name|QVariantMap
name|QConnmanServiceInterface
operator|::
name|getIPv4Configuration
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"IPv4.Configuration"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QVariantMap
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getProxy
name|QVariantMap
name|QConnmanServiceInterface
operator|::
name|getProxy
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Proxy"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QVariantMap
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getEthernet
name|QVariantMap
name|QConnmanServiceInterface
operator|::
name|getEthernet
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Ethernet"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QVariantMap
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getMethod
name|QString
name|QConnmanServiceInterface
operator|::
name|getMethod
parameter_list|()
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getEthernet
argument_list|()
decl_stmt|;
name|QMapIterator
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|it
argument_list|(
name|map
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it
operator|.
name|key
argument_list|()
operator|==
literal|"Method"
condition|)
block|{
return|return
name|it
operator|.
name|value
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getInterface
name|QString
name|QConnmanServiceInterface
operator|::
name|getInterface
parameter_list|()
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getEthernet
argument_list|()
decl_stmt|;
name|QMapIterator
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|it
argument_list|(
name|map
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it
operator|.
name|key
argument_list|()
operator|==
literal|"Interface"
condition|)
block|{
return|return
name|it
operator|.
name|value
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getMacAddress
name|QString
name|QConnmanServiceInterface
operator|::
name|getMacAddress
parameter_list|()
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getEthernet
argument_list|()
decl_stmt|;
name|QMapIterator
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|it
argument_list|(
name|map
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it
operator|.
name|key
argument_list|()
operator|==
literal|"Address"
condition|)
block|{
return|return
name|it
operator|.
name|value
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getMtu
name|quint16
name|QConnmanServiceInterface
operator|::
name|getMtu
parameter_list|()
block|{
name|quint16
name|mtu
init|=
literal|0
decl_stmt|;
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getEthernet
argument_list|()
decl_stmt|;
name|QMapIterator
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|it
argument_list|(
name|map
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it
operator|.
name|key
argument_list|()
operator|==
literal|"MTU"
condition|)
block|{
return|return
name|it
operator|.
name|value
argument_list|()
operator|.
name|toUInt
argument_list|()
return|;
block|}
block|}
return|return
name|mtu
return|;
block|}
end_function
begin_function
DECL|function|getSpeed
name|quint16
name|QConnmanServiceInterface
operator|::
name|getSpeed
parameter_list|()
block|{
name|quint16
name|speed
init|=
literal|0
decl_stmt|;
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getEthernet
argument_list|()
decl_stmt|;
name|QMapIterator
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|it
argument_list|(
name|map
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it
operator|.
name|key
argument_list|()
operator|==
literal|"Speed"
condition|)
block|{
return|return
name|it
operator|.
name|value
argument_list|()
operator|.
name|toUInt
argument_list|()
return|;
block|}
block|}
return|return
name|speed
return|;
block|}
end_function
begin_function
DECL|function|getDuplex
name|QString
name|QConnmanServiceInterface
operator|::
name|getDuplex
parameter_list|()
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getEthernet
argument_list|()
decl_stmt|;
name|QMapIterator
argument_list|<
name|QString
argument_list|,
name|QVariant
argument_list|>
name|it
argument_list|(
name|map
argument_list|)
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|it
operator|.
name|next
argument_list|()
expr_stmt|;
if|if
condition|(
name|it
operator|.
name|key
argument_list|()
operator|==
literal|"Duplex"
condition|)
block|{
return|return
name|it
operator|.
name|value
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|isOfflineMode
name|bool
name|QConnmanServiceInterface
operator|::
name|isOfflineMode
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"OfflineMode"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|bool
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getServices
name|QStringList
name|QConnmanServiceInterface
operator|::
name|getServices
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Services"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QStringList
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_comment
comment|//////////////////////////
end_comment
begin_constructor
DECL|function|QConnmanTechnologyInterface
name|QConnmanTechnologyInterface
operator|::
name|QConnmanTechnologyInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|CONNMAN_TECHNOLOGY_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QConnmanTechnologyInterface
name|QConnmanTechnologyInterface
operator|::
name|~
name|QConnmanTechnologyInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|connectNotify
name|void
name|QConnmanTechnologyInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanTechnologyInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{
name|dbusConnection
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_TECHNOLOGY_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedContextSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanTechnologyInterface
operator|::
name|propertyChangedContext
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedContextSignal
condition|)
block|{
name|QConnmanDBusHelper
modifier|*
name|helper
decl_stmt|;
name|helper
operator|=
operator|new
name|QConnmanDBusHelper
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|dbusConnection
operator|.
name|connect
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|this
operator|->
name|path
argument_list|()
argument_list|,
name|QLatin1String
argument_list|(
name|CONNMAN_TECHNOLOGY_INTERFACE
argument_list|)
argument_list|,
name|QLatin1String
argument_list|(
literal|"PropertyChanged"
argument_list|)
argument_list|,
name|helper
argument_list|,
name|SLOT
argument_list|(
name|propertyChanged
argument_list|(
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|helper
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|propertyChangedContext
argument_list|(
name|QString
argument_list|,
name|QString
argument_list|,
name|QDBusVariant
argument_list|)
argument_list|)
argument_list|,
name|Qt
operator|::
name|UniqueConnection
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QConnmanTechnologyInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
specifier|static
specifier|const
name|QMetaMethod
name|propertyChangedSignal
init|=
name|QMetaMethod
operator|::
name|fromSignal
argument_list|(
operator|&
name|QConnmanTechnologyInterface
operator|::
name|propertyChanged
argument_list|)
decl_stmt|;
if|if
condition|(
name|signal
operator|==
name|propertyChangedSignal
condition|)
block|{      }
block|}
end_function
begin_function
DECL|function|getProperties
name|QVariantMap
name|QConnmanTechnologyInterface
operator|::
name|getProperties
parameter_list|()
block|{
name|QDBusReply
argument_list|<
name|QVariantMap
argument_list|>
name|reply
init|=
name|this
operator|->
name|call
argument_list|(
name|QLatin1String
argument_list|(
literal|"GetProperties"
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|reply
operator|.
name|value
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|getProperty
name|QVariant
name|QConnmanTechnologyInterface
operator|::
name|getProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|property
parameter_list|)
block|{
name|QVariant
name|var
decl_stmt|;
name|QVariantMap
name|map
init|=
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|map
operator|.
name|contains
argument_list|(
name|property
argument_list|)
condition|)
block|{
name|var
operator|=
name|map
operator|.
name|value
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
return|return
name|var
return|;
block|}
end_function
begin_comment
comment|// properties
end_comment
begin_function
DECL|function|getState
name|QString
name|QConnmanTechnologyInterface
operator|::
name|getState
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"State"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getName
name|QString
name|QConnmanTechnologyInterface
operator|::
name|getName
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Name"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|getType
name|QString
name|QConnmanTechnologyInterface
operator|::
name|getType
parameter_list|()
block|{
name|QVariant
name|var
init|=
name|getProperty
argument_list|(
literal|"Type"
argument_list|)
decl_stmt|;
return|return
name|qdbus_cast
argument_list|<
name|QString
argument_list|>
argument_list|(
name|var
argument_list|)
return|;
block|}
end_function
begin_comment
comment|//////////////////////////////////
end_comment
begin_constructor
DECL|function|QConnmanAgentInterface
name|QConnmanAgentInterface
operator|::
name|QConnmanAgentInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|CONNMAN_AGENT_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QConnmanAgentInterface
name|QConnmanAgentInterface
operator|::
name|~
name|QConnmanAgentInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|connectNotify
name|void
name|QConnmanAgentInterface
operator|::
name|connectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QConnmanAgentInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//        dbusConnection.connect(QLatin1String(CONNMAN_SERVICE),
comment|//                               this->path(),
comment|//                               QLatin1String(CONNMAN_NETWORK_INTERFACE),
comment|//                               QLatin1String("PropertyChanged"),
comment|//                               this,SIGNAL(propertyChanged(QString,QVariant&)));
comment|//    }
block|}
end_function
begin_function
DECL|function|disconnectNotify
name|void
name|QConnmanAgentInterface
operator|::
name|disconnectNotify
parameter_list|(
specifier|const
name|QMetaMethod
modifier|&
name|signal
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|signal
argument_list|)
expr_stmt|;
comment|//    static const QMetaMethod propertyChangedSignal = QMetaMethod::fromSignal(&QConnmanAgentInterface::propertyChanged);
comment|//    if (signal == propertyChangedSignal) {
comment|//    }
block|}
end_function
begin_function
DECL|function|release
name|void
name|QConnmanAgentInterface
operator|::
name|release
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|reportError
name|void
name|QConnmanAgentInterface
operator|::
name|reportError
parameter_list|(
name|QDBusObjectPath
modifier|&
comment|/*path*/
parameter_list|,
specifier|const
name|QString
modifier|&
comment|/*error*/
parameter_list|)
block|{ }
end_function
begin_comment
comment|//dict QConnmanAgentInterface::requestInput(QDBusObjectPath&path, dict fields)
end_comment
begin_comment
comment|//{
end_comment
begin_comment
comment|//}
end_comment
begin_function
DECL|function|cancel
name|void
name|QConnmanAgentInterface
operator|::
name|cancel
parameter_list|()
block|{ }
end_function
begin_comment
comment|/////////////////////////////////////////
end_comment
begin_constructor
DECL|function|QConnmanCounterInterface
name|QConnmanCounterInterface
operator|::
name|QConnmanCounterInterface
parameter_list|(
specifier|const
name|QString
modifier|&
name|dbusPathName
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDBusAbstractInterface
argument_list|(
name|QLatin1String
argument_list|(
name|CONNMAN_SERVICE
argument_list|)
argument_list|,
name|dbusPathName
argument_list|,
name|CONNMAN_COUNTER_INTERFACE
argument_list|,
name|QDBusConnection
operator|::
name|systemBus
argument_list|()
argument_list|,
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QConnmanCounterInterface
name|QConnmanCounterInterface
operator|::
name|~
name|QConnmanCounterInterface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|getReceivedByteCount
name|quint32
name|QConnmanCounterInterface
operator|::
name|getReceivedByteCount
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|getTransmittedByteCount
name|quint32
name|QConnmanCounterInterface
operator|::
name|getTransmittedByteCount
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
end_function
begin_function
DECL|function|getTimeOnline
name|quint64
name|QConnmanCounterInterface
operator|::
name|getTimeOnline
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
end_function
begin_comment
comment|/////////////////////////////////////////
end_comment
begin_constructor
DECL|function|QConnmanDBusHelper
name|QConnmanDBusHelper
operator|::
name|QConnmanDBusHelper
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QObject
argument_list|(
name|parent
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QConnmanDBusHelper
name|QConnmanDBusHelper
operator|::
name|~
name|QConnmanDBusHelper
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|propertyChanged
name|void
name|QConnmanDBusHelper
operator|::
name|propertyChanged
parameter_list|(
specifier|const
name|QString
modifier|&
name|item
parameter_list|,
specifier|const
name|QDBusVariant
modifier|&
name|var
parameter_list|)
block|{
name|QDBusMessage
name|msg
init|=
name|this
operator|->
name|message
argument_list|()
decl_stmt|;
name|Q_EMIT
name|propertyChangedContext
argument_list|(
name|msg
operator|.
name|path
argument_list|()
argument_list|,
name|item
argument_list|,
name|var
argument_list|)
decl_stmt|;
block|}
end_function
begin_comment
comment|/////////////////
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_DBUS
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_BEARERMANAGEMENT
end_comment
end_unit
