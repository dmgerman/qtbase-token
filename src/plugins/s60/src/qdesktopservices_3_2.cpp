begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the plugins of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<private/qcore_symbian_p.h>
end_include
begin_include
include|#
directive|include
file|<qstring.h>
end_include
begin_include
include|#
directive|include
file|<qdir.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_S60
end_ifdef
begin_include
include|#
directive|include
file|<e32base.h>
end_include
begin_comment
comment|// CBase -> Required by cdirectorylocalizer.h
end_comment
begin_include
include|#
directive|include
file|<CDirectoryLocalizer.h>
end_include
begin_comment
comment|// CDirectoryLocalizer
end_comment
begin_function
DECL|function|localizedDirectoryName
name|EXPORT_C
name|QString
name|localizedDirectoryName
parameter_list|(
name|QString
modifier|&
name|rawPath
parameter_list|)
block|{
name|QString
name|ret
decl_stmt|;
name|std
operator|::
name|exception
name|dummy
decl_stmt|;
comment|// voodoo fix for "Undefined symbol typeinfo for std::exception" in armv5 build
name|TRAPD
argument_list|(
argument|err
argument_list|,
argument|QT_TRYCATCH_LEAVING(             CDirectoryLocalizer* localizer = CDirectoryLocalizer::NewL();             CleanupStack::PushL(localizer);             localizer->SetFullPath(qt_QString2TPtrC(QDir::toNativeSeparators(rawPath)));             if(localizer->IsLocalized()){                 TPtrC locName(localizer->LocalizedName());                 ret = qt_TDesC2QString(locName);             }             CleanupStack::PopAndDestroy(localizer);         )
argument_list|)
if|if
condition|(
name|err
operator|!=
name|KErrNone
condition|)
name|ret
operator|=
name|QString
argument_list|()
expr_stmt|;
return|return
name|ret
return|;
block|}
end_function
begin_else
else|#
directive|else
end_else
begin_function
DECL|function|localizedDirectoryName
name|EXPORT_C
name|QString
name|localizedDirectoryName
parameter_list|(
name|QString
modifier|&
comment|/* rawPath */
parameter_list|)
block|{
name|qWarning
argument_list|(
literal|"QDesktopServices::displayName() not implemented for this platform version"
argument_list|)
expr_stmt|;
return|return
name|QString
argument_list|()
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
end_unit
