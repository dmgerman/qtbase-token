begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtOpenGL module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qgl_p.h"
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|qt_gl_getProcAddress_search
specifier|static
name|void
modifier|*
name|qt_gl_getProcAddress_search
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|,
specifier|const
name|char
modifier|*
name|name1
parameter_list|,
specifier|const
name|char
modifier|*
name|name2
parameter_list|,
specifier|const
name|char
modifier|*
name|name3
parameter_list|,
specifier|const
name|char
modifier|*
name|name4
parameter_list|)
block|{
name|void
modifier|*
name|addr
decl_stmt|;
name|addr
operator|=
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
name|name1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|addr
condition|)
return|return
name|addr
return|;
name|addr
operator|=
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
name|name2
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|addr
condition|)
return|return
name|addr
return|;
name|addr
operator|=
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
name|name3
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|addr
condition|)
return|return
name|addr
return|;
if|if
condition|(
name|name4
condition|)
return|return
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
name|name4
argument_list|)
argument_list|)
return|;
return|return
literal|0
return|;
block|}
end_function
begin_comment
comment|// Search for an extension function starting with the most likely
end_comment
begin_comment
comment|// function suffix first, and then trying the other variations.
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES
argument_list|)
end_if
begin_define
DECL|macro|qt_gl_getProcAddress
define|#
directive|define
name|qt_gl_getProcAddress
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name, name "OES", name "EXT", name "ARB")
end_define
begin_define
DECL|macro|qt_gl_getProcAddressEXT
define|#
directive|define
name|qt_gl_getProcAddressEXT
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name "OES", name, name "EXT", name "ARB")
end_define
begin_define
DECL|macro|qt_gl_getProcAddressARB
define|#
directive|define
name|qt_gl_getProcAddressARB
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name "OES", name, name "ARB", name "EXT")
end_define
begin_define
DECL|macro|qt_gl_getProcAddressOES
define|#
directive|define
name|qt_gl_getProcAddressOES
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name "OES", name, name "EXT", name "ARB")
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|qt_gl_getProcAddress
define|#
directive|define
name|qt_gl_getProcAddress
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name, name "ARB", name "EXT", 0)
end_define
begin_define
DECL|macro|qt_gl_getProcAddressEXT
define|#
directive|define
name|qt_gl_getProcAddressEXT
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name "EXT", name, name "ARB", 0)
end_define
begin_define
DECL|macro|qt_gl_getProcAddressARB
define|#
directive|define
name|qt_gl_getProcAddressARB
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name "ARB", name, name "EXT", 0)
end_define
begin_define
DECL|macro|qt_gl_getProcAddressOES
define|#
directive|define
name|qt_gl_getProcAddressOES
parameter_list|(
name|ctx
parameter_list|,
name|name
parameter_list|)
define|\
value|qt_gl_getProcAddress_search((ctx), name "OES", name, name "EXT", name "ARB")
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|qt_resolve_framebufferobject_extensions
name|bool
name|qt_resolve_framebufferobject_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
specifier|static
name|bool
name|have_resolved
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|have_resolved
condition|)
return|return
literal|true
return|;
name|have_resolved
operator|=
literal|true
expr_stmt|;
else|#
directive|else
if|if
condition|(
name|glIsRenderbuffer
operator|!=
literal|0
condition|)
return|return
literal|true
return|;
endif|#
directive|endif
if|if
condition|(
name|ctx
operator|==
literal|0
condition|)
block|{
name|qWarning
argument_list|(
literal|"QGLFramebufferObject: Unable to resolve framebuffer object extensions -"
literal|" make sure there is a current context when creating the framebuffer object."
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
name|glBlitFramebufferEXT
operator|=
operator|(
name|_glBlitFramebufferEXT
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glBlitFramebuffer"
argument_list|)
expr_stmt|;
name|glRenderbufferStorageMultisampleEXT
operator|=
operator|(
name|_glRenderbufferStorageMultisampleEXT
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glRenderbufferStorageMultisample"
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|glIsRenderbuffer
operator|=
operator|(
name|_glIsRenderbuffer
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glIsRenderbuffer"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|glIsRenderbuffer
condition|)
return|return
literal|false
return|;
comment|// Not much point searching for anything else.
name|glBindRenderbuffer
operator|=
operator|(
name|_glBindRenderbuffer
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glBindRenderbuffer"
argument_list|)
expr_stmt|;
name|glDeleteRenderbuffers
operator|=
operator|(
name|_glDeleteRenderbuffers
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glDeleteRenderbuffers"
argument_list|)
expr_stmt|;
name|glGenRenderbuffers
operator|=
operator|(
name|_glGenRenderbuffers
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glGenRenderbuffers"
argument_list|)
expr_stmt|;
name|glRenderbufferStorage
operator|=
operator|(
name|_glRenderbufferStorage
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glRenderbufferStorage"
argument_list|)
expr_stmt|;
name|glGetRenderbufferParameteriv
operator|=
operator|(
name|_glGetRenderbufferParameteriv
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glGetRenderbufferParameteriv"
argument_list|)
expr_stmt|;
name|glIsFramebuffer
operator|=
operator|(
name|_glIsFramebuffer
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glIsFramebuffer"
argument_list|)
expr_stmt|;
name|glBindFramebuffer
operator|=
operator|(
name|_glBindFramebuffer
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glBindFramebuffer"
argument_list|)
expr_stmt|;
name|glDeleteFramebuffers
operator|=
operator|(
name|_glDeleteFramebuffers
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glDeleteFramebuffers"
argument_list|)
expr_stmt|;
name|glGenFramebuffers
operator|=
operator|(
name|_glGenFramebuffers
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glGenFramebuffers"
argument_list|)
expr_stmt|;
name|glCheckFramebufferStatus
operator|=
operator|(
name|_glCheckFramebufferStatus
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glCheckFramebufferStatus"
argument_list|)
expr_stmt|;
name|glFramebufferTexture2D
operator|=
operator|(
name|_glFramebufferTexture2D
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glFramebufferTexture2D"
argument_list|)
expr_stmt|;
name|glFramebufferRenderbuffer
operator|=
operator|(
name|_glFramebufferRenderbuffer
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glFramebufferRenderbuffer"
argument_list|)
expr_stmt|;
name|glGetFramebufferAttachmentParameteriv
operator|=
operator|(
name|_glGetFramebufferAttachmentParameteriv
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glGetFramebufferAttachmentParameteriv"
argument_list|)
expr_stmt|;
name|glGenerateMipmap
operator|=
operator|(
name|_glGenerateMipmap
operator|)
name|qt_gl_getProcAddressEXT
argument_list|(
name|ctx
argument_list|,
literal|"glGenerateMipmap"
argument_list|)
expr_stmt|;
return|return
name|glIsRenderbuffer
operator|!=
literal|0
return|;
else|#
directive|else
return|return
literal|true
return|;
endif|#
directive|endif
block|}
end_function
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_function
DECL|function|qt_resolve_version_1_3_functions
name|bool
name|qt_resolve_version_1_3_functions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
block|{
if|if
condition|(
name|glMultiTexCoord4f
operator|!=
literal|0
condition|)
return|return
literal|true
return|;
name|QGLContext
name|cx
argument_list|(
name|QGLFormat
operator|::
name|defaultFormat
argument_list|()
argument_list|)
decl_stmt|;
name|glMultiTexCoord4f
operator|=
operator|(
name|_glMultiTexCoord4f
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glMultiTexCoord4f"
argument_list|)
argument_list|)
expr_stmt|;
name|glActiveTexture
operator|=
operator|(
name|_glActiveTexture
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glActiveTexture"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|glMultiTexCoord4f
operator|&&
name|glActiveTexture
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_function
DECL|function|qt_resolve_stencil_face_extension
name|bool
name|qt_resolve_stencil_face_extension
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
block|{
if|if
condition|(
name|glActiveStencilFaceEXT
operator|!=
literal|0
condition|)
return|return
literal|true
return|;
name|QGLContext
name|cx
argument_list|(
name|QGLFormat
operator|::
name|defaultFormat
argument_list|()
argument_list|)
decl_stmt|;
name|glActiveStencilFaceEXT
operator|=
operator|(
name|_glActiveStencilFaceEXT
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glActiveStencilFaceEXT"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|glActiveStencilFaceEXT
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_function
DECL|function|qt_resolve_frag_program_extensions
name|bool
name|qt_resolve_frag_program_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
block|{
if|if
condition|(
name|glProgramStringARB
operator|!=
literal|0
condition|)
return|return
literal|true
return|;
comment|// ARB_fragment_program
name|glProgramStringARB
operator|=
operator|(
name|_glProgramStringARB
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glProgramStringARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glBindProgramARB
operator|=
operator|(
name|_glBindProgramARB
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glBindProgramARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glDeleteProgramsARB
operator|=
operator|(
name|_glDeleteProgramsARB
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDeleteProgramsARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glGenProgramsARB
operator|=
operator|(
name|_glGenProgramsARB
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGenProgramsARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glProgramLocalParameter4fvARB
operator|=
operator|(
name|_glProgramLocalParameter4fvARB
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glProgramLocalParameter4fvARB"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|glProgramStringARB
operator|&&
name|glBindProgramARB
operator|&&
name|glDeleteProgramsARB
operator|&&
name|glGenProgramsARB
operator|&&
name|glProgramLocalParameter4fvARB
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|qt_resolve_buffer_extensions
name|bool
name|qt_resolve_buffer_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QGL_RESOLVE_BUFFER_FUNCS
argument_list|)
if|if
condition|(
name|glBindBuffer
operator|&&
name|glDeleteBuffers
operator|&&
name|glGenBuffers
operator|&&
name|glBufferData
operator|&&
name|glBufferSubData
operator|&&
name|glGetBufferParameteriv
condition|)
return|return
literal|true
return|;
endif|#
directive|endif
if|#
directive|if
name|defined
argument_list|(
name|QGL_RESOLVE_BUFFER_FUNCS
argument_list|)
name|glBindBuffer
operator|=
operator|(
name|_glBindBuffer
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glBindBuffer"
argument_list|)
expr_stmt|;
name|glDeleteBuffers
operator|=
operator|(
name|_glDeleteBuffers
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glDeleteBuffers"
argument_list|)
expr_stmt|;
name|glGenBuffers
operator|=
operator|(
name|_glGenBuffers
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glGenBuffers"
argument_list|)
expr_stmt|;
name|glBufferData
operator|=
operator|(
name|_glBufferData
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glBufferData"
argument_list|)
expr_stmt|;
name|glBufferSubData
operator|=
operator|(
name|_glBufferSubData
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glBufferSubData"
argument_list|)
expr_stmt|;
name|glGetBufferSubData
operator|=
operator|(
name|_glGetBufferSubData
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glGetBufferSubData"
argument_list|)
expr_stmt|;
name|glGetBufferParameteriv
operator|=
operator|(
name|_glGetBufferParameteriv
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glGetBufferParameteriv"
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|glMapBufferARB
operator|=
operator|(
name|_glMapBufferARB
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glMapBuffer"
argument_list|)
expr_stmt|;
name|glUnmapBufferARB
operator|=
operator|(
name|_glUnmapBufferARB
operator|)
name|qt_gl_getProcAddressARB
argument_list|(
name|ctx
argument_list|,
literal|"glUnmapBuffer"
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|QGL_RESOLVE_BUFFER_FUNCS
argument_list|)
return|return
name|glBindBuffer
operator|&&
name|glDeleteBuffers
operator|&&
name|glGenBuffers
operator|&&
name|glBufferData
operator|&&
name|glBufferSubData
operator|&&
name|glGetBufferParameteriv
return|;
comment|// glGetBufferSubData() is optional
else|#
directive|else
return|return
literal|true
return|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|qt_resolve_glsl_extensions
name|bool
name|qt_resolve_glsl_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
comment|// The GLSL shader functions are always present in OpenGL/ES 2.0.
comment|// The only exceptions are glGetProgramBinaryOES and glProgramBinaryOES.
if|if
condition|(
operator|!
name|QGLContextPrivate
operator|::
name|extensionFuncs
argument_list|(
name|ctx
argument_list|)
operator|.
name|qt_glslResolved
condition|)
block|{
name|glGetProgramBinaryOES
operator|=
operator|(
name|_glGetProgramBinaryOES
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetProgramBinaryOES"
argument_list|)
argument_list|)
expr_stmt|;
name|glProgramBinaryOES
operator|=
operator|(
name|_glProgramBinaryOES
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glProgramBinaryOES"
argument_list|)
argument_list|)
expr_stmt|;
name|QGLContextPrivate
operator|::
name|extensionFuncs
argument_list|(
name|ctx
argument_list|)
operator|.
name|qt_glslResolved
operator|=
literal|true
expr_stmt|;
block|}
return|return
literal|true
return|;
else|#
directive|else
if|if
condition|(
name|glCreateShader
condition|)
return|return
literal|true
return|;
comment|// Geometry shaders are optional...
name|glProgramParameteriEXT
operator|=
operator|(
name|_glProgramParameteriEXT
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glProgramParameteriEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|glFramebufferTextureEXT
operator|=
operator|(
name|_glFramebufferTextureEXT
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glFramebufferTextureEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|glFramebufferTextureLayerEXT
operator|=
operator|(
name|_glFramebufferTextureLayerEXT
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glFramebufferTextureLayerEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|glFramebufferTextureFaceEXT
operator|=
operator|(
name|_glFramebufferTextureFaceEXT
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glFramebufferTextureFaceEXT"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Must at least have the FragmentShader extension to continue.
if|if
condition|(
operator|!
operator|(
name|QGLExtensions
operator|::
name|glExtensions
argument_list|()
operator|&
name|QGLExtensions
operator|::
name|FragmentShader
operator|)
condition|)
return|return
literal|false
return|;
name|glCreateShader
operator|=
operator|(
name|_glCreateShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glCreateShader"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|glCreateShader
condition|)
block|{
name|glShaderSource
operator|=
operator|(
name|_glShaderSource
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glShaderSource"
argument_list|)
argument_list|)
expr_stmt|;
name|glShaderBinary
operator|=
operator|(
name|_glShaderBinary
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glShaderBinary"
argument_list|)
argument_list|)
expr_stmt|;
name|glCompileShader
operator|=
operator|(
name|_glCompileShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glCompileShader"
argument_list|)
argument_list|)
expr_stmt|;
name|glDeleteShader
operator|=
operator|(
name|_glDeleteShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDeleteShader"
argument_list|)
argument_list|)
expr_stmt|;
name|glIsShader
operator|=
operator|(
name|_glIsShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glIsShader"
argument_list|)
argument_list|)
expr_stmt|;
name|glCreateProgram
operator|=
operator|(
name|_glCreateProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glCreateProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|glAttachShader
operator|=
operator|(
name|_glAttachShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glAttachShader"
argument_list|)
argument_list|)
expr_stmt|;
name|glDetachShader
operator|=
operator|(
name|_glDetachShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDetachShader"
argument_list|)
argument_list|)
expr_stmt|;
name|glLinkProgram
operator|=
operator|(
name|_glLinkProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glLinkProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|glUseProgram
operator|=
operator|(
name|_glUseProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUseProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|glDeleteProgram
operator|=
operator|(
name|_glDeleteProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDeleteProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|glIsProgram
operator|=
operator|(
name|_glIsProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glIsProgram"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetShaderInfoLog
operator|=
operator|(
name|_glGetShaderInfoLog
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetShaderInfoLog"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetShaderiv
operator|=
operator|(
name|_glGetShaderiv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetShaderiv"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetShaderSource
operator|=
operator|(
name|_glGetShaderSource
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetShaderSource"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetProgramiv
operator|=
operator|(
name|_glGetProgramiv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetProgramiv"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetProgramInfoLog
operator|=
operator|(
name|_glGetProgramInfoLog
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetProgramInfoLog"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetUniformLocation
operator|=
operator|(
name|_glGetUniformLocation
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetUniformLocation"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform4fv
operator|=
operator|(
name|_glUniform4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform3fv
operator|=
operator|(
name|_glUniform3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform2fv
operator|=
operator|(
name|_glUniform2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform1fv
operator|=
operator|(
name|_glUniform1fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform1fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform1i
operator|=
operator|(
name|_glUniform1i
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform1i"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform1iv
operator|=
operator|(
name|_glUniform1iv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform1iv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix2fv
operator|=
operator|(
name|_glUniformMatrix2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix3fv
operator|=
operator|(
name|_glUniformMatrix3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix4fv
operator|=
operator|(
name|_glUniformMatrix4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix2x3fv
operator|=
operator|(
name|_glUniformMatrix2x3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix2x3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix2x4fv
operator|=
operator|(
name|_glUniformMatrix2x4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix2x4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix3x2fv
operator|=
operator|(
name|_glUniformMatrix3x2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix3x2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix3x4fv
operator|=
operator|(
name|_glUniformMatrix3x4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix3x4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix4x2fv
operator|=
operator|(
name|_glUniformMatrix4x2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix4x2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix4x3fv
operator|=
operator|(
name|_glUniformMatrix4x3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix4x3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glBindAttribLocation
operator|=
operator|(
name|_glBindAttribLocation
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glBindAttribLocation"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetAttribLocation
operator|=
operator|(
name|_glGetAttribLocation
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetAttribLocation"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib1fv
operator|=
operator|(
name|_glVertexAttrib1fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib1fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib2fv
operator|=
operator|(
name|_glVertexAttrib2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib2fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib3fv
operator|=
operator|(
name|_glVertexAttrib3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib3fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib4fv
operator|=
operator|(
name|_glVertexAttrib4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib4fv"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttribPointer
operator|=
operator|(
name|_glVertexAttribPointer
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttribPointer"
argument_list|)
argument_list|)
expr_stmt|;
name|glDisableVertexAttribArray
operator|=
operator|(
name|_glDisableVertexAttribArray
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDisableVertexAttribArray"
argument_list|)
argument_list|)
expr_stmt|;
name|glEnableVertexAttribArray
operator|=
operator|(
name|_glEnableVertexAttribArray
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glEnableVertexAttribArray"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// We may not have the standard shader functions, but we might
comment|// have the older ARB functions instead.
name|glCreateShader
operator|=
operator|(
name|_glCreateShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glCreateShaderObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glShaderSource
operator|=
operator|(
name|_glShaderSource
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glShaderSourceARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glShaderBinary
operator|=
operator|(
name|_glShaderBinary
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glShaderBinaryARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glCompileShader
operator|=
operator|(
name|_glCompileShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glCompileShaderARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glDeleteShader
operator|=
operator|(
name|_glDeleteShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDeleteObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glIsShader
operator|=
literal|0
expr_stmt|;
name|glCreateProgram
operator|=
operator|(
name|_glCreateProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glCreateProgramObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glAttachShader
operator|=
operator|(
name|_glAttachShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glAttachObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glDetachShader
operator|=
operator|(
name|_glDetachShader
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDetachObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glLinkProgram
operator|=
operator|(
name|_glLinkProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glLinkProgramARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUseProgram
operator|=
operator|(
name|_glUseProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUseProgramObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glDeleteProgram
operator|=
operator|(
name|_glDeleteProgram
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDeleteObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glIsProgram
operator|=
literal|0
expr_stmt|;
name|glGetShaderInfoLog
operator|=
operator|(
name|_glGetShaderInfoLog
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetInfoLogARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetShaderiv
operator|=
operator|(
name|_glGetShaderiv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetObjectParameterivARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetShaderSource
operator|=
operator|(
name|_glGetShaderSource
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetShaderSourceARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetProgramiv
operator|=
operator|(
name|_glGetProgramiv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetObjectParameterivARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetProgramInfoLog
operator|=
operator|(
name|_glGetProgramInfoLog
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetInfoLogARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetUniformLocation
operator|=
operator|(
name|_glGetUniformLocation
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetUniformLocationARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform4fv
operator|=
operator|(
name|_glUniform4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform4fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform3fv
operator|=
operator|(
name|_glUniform3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform3fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform2fv
operator|=
operator|(
name|_glUniform2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform2fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform1fv
operator|=
operator|(
name|_glUniform1fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform1fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform1i
operator|=
operator|(
name|_glUniform1i
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform1iARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniform1iv
operator|=
operator|(
name|_glUniform1iv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniform1ivARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix2fv
operator|=
operator|(
name|_glUniformMatrix2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix2fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix3fv
operator|=
operator|(
name|_glUniformMatrix3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix3fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix4fv
operator|=
operator|(
name|_glUniformMatrix4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix4fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix2x3fv
operator|=
operator|(
name|_glUniformMatrix2x3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix2x3fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix2x4fv
operator|=
operator|(
name|_glUniformMatrix2x4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix2x4fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix3x2fv
operator|=
operator|(
name|_glUniformMatrix3x2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix3x2fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix3x4fv
operator|=
operator|(
name|_glUniformMatrix3x4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix3x4fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix4x2fv
operator|=
operator|(
name|_glUniformMatrix4x2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix4x2fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glUniformMatrix4x3fv
operator|=
operator|(
name|_glUniformMatrix4x3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glUniformMatrix4x3fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glBindAttribLocation
operator|=
operator|(
name|_glBindAttribLocation
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glBindAttribLocationARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glGetAttribLocation
operator|=
operator|(
name|_glGetAttribLocation
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glGetAttribLocationARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib1fv
operator|=
operator|(
name|_glVertexAttrib1fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib1fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib2fv
operator|=
operator|(
name|_glVertexAttrib2fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib2fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib3fv
operator|=
operator|(
name|_glVertexAttrib3fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib3fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttrib4fv
operator|=
operator|(
name|_glVertexAttrib4fv
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttrib4fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glVertexAttribPointer
operator|=
operator|(
name|_glVertexAttribPointer
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glVertexAttribPointerARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glDisableVertexAttribArray
operator|=
operator|(
name|_glDisableVertexAttribArray
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glDisableVertexAttribArrayARB"
argument_list|)
argument_list|)
expr_stmt|;
name|glEnableVertexAttribArray
operator|=
operator|(
name|_glEnableVertexAttribArray
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glEnableVertexAttribArrayARB"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Note: glShaderBinary(), glIsShader(), glIsProgram(), and
comment|// glUniformMatrixNxMfv() are optional, but all other functions
comment|// are required.
return|return
name|glCreateShader
operator|&&
name|glShaderSource
operator|&&
name|glCompileShader
operator|&&
name|glDeleteProgram
operator|&&
name|glCreateProgram
operator|&&
name|glAttachShader
operator|&&
name|glDetachShader
operator|&&
name|glLinkProgram
operator|&&
name|glUseProgram
operator|&&
name|glGetShaderInfoLog
operator|&&
name|glGetShaderiv
operator|&&
name|glGetShaderSource
operator|&&
name|glGetProgramiv
operator|&&
name|glGetProgramInfoLog
operator|&&
name|glGetUniformLocation
operator|&&
name|glUniform1fv
operator|&&
name|glUniform2fv
operator|&&
name|glUniform3fv
operator|&&
name|glUniform4fv
operator|&&
name|glUniform1i
operator|&&
name|glUniform1iv
operator|&&
name|glUniformMatrix2fv
operator|&&
name|glUniformMatrix3fv
operator|&&
name|glUniformMatrix4fv
operator|&&
name|glBindAttribLocation
operator|&&
name|glGetAttribLocation
operator|&&
name|glVertexAttrib1fv
operator|&&
name|glVertexAttrib2fv
operator|&&
name|glVertexAttrib3fv
operator|&&
name|glVertexAttrib4fv
operator|&&
name|glVertexAttribPointer
operator|&&
name|glDisableVertexAttribArray
operator|&&
name|glEnableVertexAttribArray
return|;
endif|#
directive|endif
block|}
end_function
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_function
DECL|function|qt_resolve_version_2_0_functions
name|bool
name|qt_resolve_version_2_0_functions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
block|{
name|bool
name|gl2supported
init|=
literal|true
decl_stmt|;
if|if
condition|(
operator|!
name|qt_resolve_glsl_extensions
argument_list|(
name|ctx
argument_list|)
condition|)
name|gl2supported
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|qt_resolve_version_1_3_functions
argument_list|(
name|ctx
argument_list|)
condition|)
name|gl2supported
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|qt_resolve_framebufferobject_extensions
argument_list|(
name|ctx
argument_list|)
condition|)
name|gl2supported
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|glStencilOpSeparate
condition|)
return|return
name|gl2supported
return|;
name|glBlendColor
operator|=
operator|(
name|_glBlendColor
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glBlendColor"
argument_list|)
argument_list|)
expr_stmt|;
name|glStencilOpSeparate
operator|=
operator|(
name|_glStencilOpSeparate
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
name|QLatin1String
argument_list|(
literal|"glStencilOpSeparate"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|glBlendColor
operator|||
operator|!
name|glStencilOpSeparate
condition|)
name|gl2supported
operator|=
literal|false
expr_stmt|;
return|return
name|gl2supported
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
