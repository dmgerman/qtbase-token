begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtOpenGL module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QGLPIXMAPFILTER_P_H
end_ifndef
begin_define
DECL|macro|QGLPIXMAPFILTER_P_H
define|#
directive|define
name|QGLPIXMAPFILTER_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<private/qpixmapfilter_p.h>
end_include
begin_include
include|#
directive|include
file|<QtOpenGL/qgl.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|variable|QGLPixelBuffer
name|class
name|QGLPixelBuffer
decl_stmt|;
end_decl_stmt
begin_macro
DECL|function|QT_MODULE
name|QT_MODULE
argument_list|(
argument|OpenGL
argument_list|)
end_macro
begin_decl_stmt
name|class
name|QGLPixmapFilterBase
block|{
name|public
label|:
name|virtual
operator|~
name|QGLPixmapFilterBase
argument_list|()
block|{}
name|protected
operator|:
name|void
name|bindTexture
argument_list|(
argument|const QPixmap&src
argument_list|)
specifier|const
expr_stmt|;
name|void
name|drawImpl
argument_list|(
name|QPainter
operator|*
name|painter
argument_list|,
specifier|const
name|QPointF
operator|&
name|pos
argument_list|,
specifier|const
name|QPixmap
operator|&
name|src
argument_list|,
specifier|const
name|QRectF
operator|&
name|srcRect
operator|=
name|QRectF
argument_list|()
argument_list|)
decl|const
decl_stmt|;
name|virtual
name|bool
name|processGL
argument_list|(
name|QPainter
operator|*
name|painter
argument_list|,
specifier|const
name|QPointF
operator|&
name|pos
argument_list|,
specifier|const
name|QPixmap
operator|&
name|src
argument_list|,
specifier|const
name|QRectF
operator|&
name|srcRect
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|template
operator|<
name|typename
name|Filter
operator|>
DECL|variable|Filter
name|class
name|QGLPixmapFilter
operator|:
name|public
name|Filter
operator|,
name|public
name|QGLPixmapFilterBase
block|{
name|public
operator|:
name|void
name|draw
argument_list|(
argument|QPainter *painter
argument_list|,
argument|const QPointF&pos
argument_list|,
argument|const QPixmap&src
argument_list|,
argument|const QRectF&srcRect = QRectF()
argument_list|)
specifier|const
block|{
specifier|const
name|QRectF
name|source
operator|=
name|srcRect
operator|.
name|isNull
argument_list|()
operator|?
name|QRectF
argument_list|(
name|src
operator|.
name|rect
argument_list|()
argument_list|)
operator|:
name|srcRect
block|;
if|if
condition|(
name|painter
condition|)
name|drawImpl
argument_list|(
name|painter
argument_list|,
name|pos
argument_list|,
name|src
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
end_expr_stmt
begin_expr_stmt
unit|};
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QGLPIXMAPFILTER_P_H
end_comment
end_unit
