begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtOpenGL module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QGL_EXTENSIONS_P_H
end_ifndef
begin_define
DECL|macro|QGL_EXTENSIONS_P_H
define|#
directive|define
name|QGL_EXTENSIONS_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the Qt OpenGL classes.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// extension prototypes
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|APIENTRYP
end_ifndef
begin_ifdef
ifdef|#
directive|ifdef
name|APIENTRY
end_ifdef
begin_define
DECL|macro|APIENTRYP
define|#
directive|define
name|APIENTRYP
value|APIENTRY *
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|APIENTRY
define|#
directive|define
name|APIENTRY
end_define
begin_define
DECL|macro|APIENTRYP
define|#
directive|define
name|APIENTRYP
value|*
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|GL_ARB_vertex_buffer_object
end_ifndef
begin_typedef
DECL|typedef|GLintptrARB
typedef|typedef
name|ptrdiff_t
name|GLintptrARB
typedef|;
end_typedef
begin_typedef
DECL|typedef|GLsizeiptrARB
typedef|typedef
name|ptrdiff_t
name|GLsizeiptrARB
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|GL_VERSION_2_0
end_ifndef
begin_typedef
DECL|typedef|GLchar
typedef|typedef
name|char
name|GLchar
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// ARB_vertex_buffer_object
end_comment
begin_typedef
DECL|typedef|_glBindBuffer
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindBuffer
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteBuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteBuffers
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
specifier|const
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGenBuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenBuffers
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBufferData
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBufferData
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLsizeiptrARB
parameter_list|,
specifier|const
name|GLvoid
modifier|*
parameter_list|,
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBufferSubData
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBufferSubData
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLintptrARB
parameter_list|,
name|GLsizeiptrARB
parameter_list|,
specifier|const
name|GLvoid
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetBufferSubData
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetBufferSubData
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLintptrARB
parameter_list|,
name|GLsizeiptrARB
parameter_list|,
name|GLvoid
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetBufferParameteriv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetBufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glMapBufferARB
typedef|typedef
name|GLvoid
modifier|*
function_decl|(
name|APIENTRY
modifier|*
name|_glMapBufferARB
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUnmapBufferARB
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|_glUnmapBufferARB
function_decl|)
parameter_list|(
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// We can call the buffer functions directly in OpenGL/ES 1.1 or higher,
end_comment
begin_comment
comment|// but all other platforms need to resolve the extensions.
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES
argument_list|)
end_if
begin_if
if|#
directive|if
name|defined
argument_list|(
name|GL_OES_VERSION_1_0
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|GL_OES_VERSION_1_1
argument_list|)
end_if
begin_define
DECL|macro|QGL_RESOLVE_BUFFER_FUNCS
define|#
directive|define
name|QGL_RESOLVE_BUFFER_FUNCS
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|QGL_RESOLVE_BUFFER_FUNCS
define|#
directive|define
name|QGL_RESOLVE_BUFFER_FUNCS
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// ARB_fragment_program
end_comment
begin_typedef
DECL|typedef|_glProgramStringARB
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glProgramStringARB
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLvoid
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBindProgramARB
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindProgramARB
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteProgramsARB
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteProgramsARB
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
specifier|const
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGenProgramsARB
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenProgramsARB
function_decl|)
parameter_list|(
name|GLsizei
parameter_list|,
name|GLuint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glProgramLocalParameter4fvARB
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glProgramLocalParameter4fvARB
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLuint
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// GLSL
end_comment
begin_typedef
DECL|typedef|_glCreateShader
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|_glCreateShader
function_decl|)
parameter_list|(
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glShaderSource
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glShaderSource
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
parameter_list|,
specifier|const
name|GLint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glShaderBinary
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glShaderBinary
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
specifier|const
name|GLuint
modifier|*
parameter_list|,
name|GLenum
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|GLint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glCompileShader
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glCompileShader
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteShader
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteShader
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glIsShader
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|_glIsShader
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glCreateProgram
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|_glCreateProgram
function_decl|)
parameter_list|()
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glAttachShader
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glAttachShader
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDetachShader
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDetachShader
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glLinkProgram
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glLinkProgram
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUseProgram
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUseProgram
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteProgram
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteProgram
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glIsProgram
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|_glIsProgram
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetShaderInfoLog
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetShaderInfoLog
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetShaderiv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetShaderiv
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLenum
parameter_list|,
name|GLint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetShaderSource
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetShaderSource
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetProgramiv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetProgramiv
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLenum
parameter_list|,
name|GLint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetProgramInfoLog
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetProgramInfoLog
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetUniformLocation
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRY
modifier|*
name|_glGetUniformLocation
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniform4fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniform4fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniform3fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniform3fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniform2fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniform2fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniform1fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniform1fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniform1i
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniform1i
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniform1iv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniform1iv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLint
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix2fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix2fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix3fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix3fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix4fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix4fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix2x3fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix2x3fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix2x4fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix2x4fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix3x2fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix3x2fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix3x4fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix3x4fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix4x2fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix4x2fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glUniformMatrix4x3fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glUniformMatrix4x3fv
function_decl|)
parameter_list|(
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLboolean
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBindAttribLocation
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindAttribLocation
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLuint
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetAttribLocation
typedef|typedef
name|GLint
function_decl|(
name|APIENTRY
modifier|*
name|_glGetAttribLocation
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glVertexAttrib1fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glVertexAttrib1fv
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glVertexAttrib2fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glVertexAttrib2fv
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glVertexAttrib3fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glVertexAttrib3fv
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glVertexAttrib4fv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glVertexAttrib4fv
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
specifier|const
name|GLfloat
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glVertexAttribPointer
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glVertexAttribPointer
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLint
parameter_list|,
name|GLenum
parameter_list|,
name|GLboolean
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLvoid
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDisableVertexAttribArray
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDisableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glEnableVertexAttribArray
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glEnableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetProgramBinaryOES
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetProgramBinaryOES
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
modifier|*
parameter_list|,
name|GLenum
modifier|*
parameter_list|,
name|void
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glProgramBinaryOES
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glProgramBinaryOES
function_decl|)
parameter_list|(
name|GLuint
parameter_list|,
name|GLenum
parameter_list|,
specifier|const
name|void
modifier|*
parameter_list|,
name|GLint
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glMultiTexCoord4f
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glMultiTexCoord4f
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLfloat
parameter_list|,
name|GLfloat
parameter_list|,
name|GLfloat
parameter_list|,
name|GLfloat
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glActiveStencilFaceEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glActiveStencilFaceEXT
function_decl|)
parameter_list|(
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// Needed for GL2 engine:
end_comment
begin_typedef
DECL|typedef|_glStencilOpSeparate
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glStencilOpSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|sfail
parameter_list|,
name|GLenum
name|dpfail
parameter_list|,
name|GLenum
name|dppass
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glActiveTexture
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glActiveTexture
function_decl|)
parameter_list|(
name|GLenum
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBlendColor
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBlendColor
function_decl|)
parameter_list|(
name|GLclampf
parameter_list|,
name|GLclampf
parameter_list|,
name|GLclampf
parameter_list|,
name|GLclampf
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// EXT_GL_framebuffer_object
end_comment
begin_typedef
DECL|typedef|_glIsRenderbuffer
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|_glIsRenderbuffer
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBindRenderbuffer
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteRenderbuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGenRenderbuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glRenderbufferStorage
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glRenderbufferStorage
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetRenderbufferParameteriv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetRenderbufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glIsFramebuffer
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRY
modifier|*
name|_glIsFramebuffer
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glBindFramebuffer
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBindFramebuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glDeleteFramebuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glDeleteFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGenFramebuffers
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glCheckFramebufferStatus
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRY
modifier|*
name|_glCheckFramebufferStatus
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glFramebufferTexture2D
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glFramebufferTexture2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glFramebufferRenderbuffer
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glFramebufferRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGetFramebufferAttachmentParameteriv
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGetFramebufferAttachmentParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glGenerateMipmap
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glGenerateMipmap
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// EXT_GL_framebuffer_blit
end_comment
begin_typedef
DECL|typedef|_glBlitFramebufferEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glBlitFramebufferEXT
function_decl|)
parameter_list|(
name|int
name|srcX0
parameter_list|,
name|int
name|srcY0
parameter_list|,
name|int
name|srcX1
parameter_list|,
name|int
name|srcY1
parameter_list|,
name|int
name|dstX0
parameter_list|,
name|int
name|dstY0
parameter_list|,
name|int
name|dstX1
parameter_list|,
name|int
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// EXT_GL_framebuffer_multisample
end_comment
begin_typedef
DECL|typedef|_glRenderbufferStorageMultisampleEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glRenderbufferStorageMultisampleEXT
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// GL_EXT_geometry_shader4
end_comment
begin_typedef
DECL|typedef|_glProgramParameteriEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glProgramParameteriEXT
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glFramebufferTextureEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glFramebufferTextureEXT
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glFramebufferTextureLayerEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glFramebufferTextureLayerEXT
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|_glFramebufferTextureFaceEXT
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glFramebufferTextureFaceEXT
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|face
parameter_list|)
function_decl|;
end_typedef
begin_comment
comment|// ARB_texture_compression
end_comment
begin_typedef
DECL|typedef|_glCompressedTexImage2DARB
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|_glCompressedTexImage2DARB
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLint
parameter_list|,
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
parameter_list|,
name|GLint
parameter_list|,
name|GLsizei
parameter_list|,
specifier|const
name|GLvoid
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_struct
DECL|struct|QGLExtensionFuncs
struct|struct
name|QGLExtensionFuncs
block|{
DECL|function|QGLExtensionFuncs
name|QGLExtensionFuncs
argument_list|()
block|{
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|qt_glProgramStringARB
operator|=
literal|0
expr_stmt|;
name|qt_glBindProgramARB
operator|=
literal|0
expr_stmt|;
name|qt_glDeleteProgramsARB
operator|=
literal|0
expr_stmt|;
name|qt_glGenProgramsARB
operator|=
literal|0
expr_stmt|;
name|qt_glProgramLocalParameter4fvARB
operator|=
literal|0
expr_stmt|;
comment|// GLSL
name|qt_glCreateShader
operator|=
literal|0
expr_stmt|;
name|qt_glShaderSource
operator|=
literal|0
expr_stmt|;
name|qt_glShaderBinary
operator|=
literal|0
expr_stmt|;
name|qt_glCompileShader
operator|=
literal|0
expr_stmt|;
name|qt_glDeleteShader
operator|=
literal|0
expr_stmt|;
name|qt_glIsShader
operator|=
literal|0
expr_stmt|;
name|qt_glCreateProgram
operator|=
literal|0
expr_stmt|;
name|qt_glAttachShader
operator|=
literal|0
expr_stmt|;
name|qt_glDetachShader
operator|=
literal|0
expr_stmt|;
name|qt_glLinkProgram
operator|=
literal|0
expr_stmt|;
name|qt_glUseProgram
operator|=
literal|0
expr_stmt|;
name|qt_glDeleteProgram
operator|=
literal|0
expr_stmt|;
name|qt_glIsProgram
operator|=
literal|0
expr_stmt|;
name|qt_glGetShaderInfoLog
operator|=
literal|0
expr_stmt|;
name|qt_glGetShaderiv
operator|=
literal|0
expr_stmt|;
name|qt_glGetShaderSource
operator|=
literal|0
expr_stmt|;
name|qt_glGetProgramiv
operator|=
literal|0
expr_stmt|;
name|qt_glGetProgramInfoLog
operator|=
literal|0
expr_stmt|;
name|qt_glGetUniformLocation
operator|=
literal|0
expr_stmt|;
name|qt_glUniform4fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniform3fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniform2fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniform1fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniform1i
operator|=
literal|0
expr_stmt|;
name|qt_glUniform1iv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix2fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix3fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix4fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix2x3fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix2x4fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix3x2fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix3x4fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix4x2fv
operator|=
literal|0
expr_stmt|;
name|qt_glUniformMatrix4x3fv
operator|=
literal|0
expr_stmt|;
name|qt_glBindAttribLocation
operator|=
literal|0
expr_stmt|;
name|qt_glGetAttribLocation
operator|=
literal|0
expr_stmt|;
name|qt_glVertexAttrib1fv
operator|=
literal|0
expr_stmt|;
name|qt_glVertexAttrib2fv
operator|=
literal|0
expr_stmt|;
name|qt_glVertexAttrib3fv
operator|=
literal|0
expr_stmt|;
name|qt_glVertexAttrib4fv
operator|=
literal|0
expr_stmt|;
name|qt_glVertexAttribPointer
operator|=
literal|0
expr_stmt|;
name|qt_glDisableVertexAttribArray
operator|=
literal|0
expr_stmt|;
name|qt_glEnableVertexAttribArray
operator|=
literal|0
expr_stmt|;
comment|// Extras for GL2 engine:
name|qt_glActiveTexture
operator|=
literal|0
expr_stmt|;
name|qt_glStencilOpSeparate
operator|=
literal|0
expr_stmt|;
name|qt_glBlendColor
operator|=
literal|0
expr_stmt|;
name|qt_glActiveStencilFaceEXT
operator|=
literal|0
expr_stmt|;
name|qt_glMultiTexCoord4f
operator|=
literal|0
expr_stmt|;
else|#
directive|else
name|qt_glslResolved
operator|=
name|false
expr_stmt|;
name|qt_glGetProgramBinaryOES
operator|=
literal|0
expr_stmt|;
name|qt_glProgramBinaryOES
operator|=
literal|0
expr_stmt|;
endif|#
directive|endif
comment|// FBOs
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|qt_glIsRenderbuffer
operator|=
literal|0
expr_stmt|;
name|qt_glBindRenderbuffer
operator|=
literal|0
expr_stmt|;
name|qt_glDeleteRenderbuffers
operator|=
literal|0
expr_stmt|;
name|qt_glGenRenderbuffers
operator|=
literal|0
expr_stmt|;
name|qt_glRenderbufferStorage
operator|=
literal|0
expr_stmt|;
name|qt_glGetRenderbufferParameteriv
operator|=
literal|0
expr_stmt|;
name|qt_glIsFramebuffer
operator|=
literal|0
expr_stmt|;
name|qt_glBindFramebuffer
operator|=
literal|0
expr_stmt|;
name|qt_glDeleteFramebuffers
operator|=
literal|0
expr_stmt|;
name|qt_glGenFramebuffers
operator|=
literal|0
expr_stmt|;
name|qt_glCheckFramebufferStatus
operator|=
literal|0
expr_stmt|;
name|qt_glFramebufferTexture2D
operator|=
literal|0
expr_stmt|;
name|qt_glFramebufferRenderbuffer
operator|=
literal|0
expr_stmt|;
name|qt_glGetFramebufferAttachmentParameteriv
operator|=
literal|0
expr_stmt|;
name|qt_glGenerateMipmap
operator|=
literal|0
expr_stmt|;
endif|#
directive|endif
name|qt_glBlitFramebufferEXT
operator|=
literal|0
expr_stmt|;
name|qt_glRenderbufferStorageMultisampleEXT
operator|=
literal|0
expr_stmt|;
comment|// Buffer objects:
if|#
directive|if
name|defined
argument_list|(
name|QGL_RESOLVE_BUFFER_FUNCS
argument_list|)
name|qt_glBindBuffer
operator|=
literal|0
expr_stmt|;
name|qt_glDeleteBuffers
operator|=
literal|0
expr_stmt|;
name|qt_glGenBuffers
operator|=
literal|0
expr_stmt|;
name|qt_glBufferData
operator|=
literal|0
expr_stmt|;
name|qt_glBufferSubData
operator|=
literal|0
expr_stmt|;
name|qt_glGetBufferSubData
operator|=
literal|0
expr_stmt|;
name|qt_glGetBufferParameteriv
operator|=
literal|0
expr_stmt|;
endif|#
directive|endif
name|qt_glMapBufferARB
operator|=
literal|0
expr_stmt|;
name|qt_glUnmapBufferARB
operator|=
literal|0
expr_stmt|;
name|qt_glProgramParameteriEXT
operator|=
literal|0
expr_stmt|;
name|qt_glFramebufferTextureEXT
operator|=
literal|0
expr_stmt|;
name|qt_glFramebufferTextureLayerEXT
operator|=
literal|0
expr_stmt|;
name|qt_glFramebufferTextureFaceEXT
operator|=
literal|0
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES
argument_list|)
comment|// Texture compression
name|qt_glCompressedTexImage2DARB
operator|=
literal|0
expr_stmt|;
endif|#
directive|endif
block|}
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
DECL|member|qt_glProgramStringARB
name|_glProgramStringARB
name|qt_glProgramStringARB
decl_stmt|;
DECL|member|qt_glBindProgramARB
name|_glBindProgramARB
name|qt_glBindProgramARB
decl_stmt|;
DECL|member|qt_glDeleteProgramsARB
name|_glDeleteProgramsARB
name|qt_glDeleteProgramsARB
decl_stmt|;
DECL|member|qt_glGenProgramsARB
name|_glGenProgramsARB
name|qt_glGenProgramsARB
decl_stmt|;
DECL|member|qt_glProgramLocalParameter4fvARB
name|_glProgramLocalParameter4fvARB
name|qt_glProgramLocalParameter4fvARB
decl_stmt|;
comment|// GLSL definitions
DECL|member|qt_glCreateShader
name|_glCreateShader
name|qt_glCreateShader
decl_stmt|;
DECL|member|qt_glShaderSource
name|_glShaderSource
name|qt_glShaderSource
decl_stmt|;
DECL|member|qt_glShaderBinary
name|_glShaderBinary
name|qt_glShaderBinary
decl_stmt|;
DECL|member|qt_glCompileShader
name|_glCompileShader
name|qt_glCompileShader
decl_stmt|;
DECL|member|qt_glDeleteShader
name|_glDeleteShader
name|qt_glDeleteShader
decl_stmt|;
DECL|member|qt_glIsShader
name|_glIsShader
name|qt_glIsShader
decl_stmt|;
DECL|member|qt_glCreateProgram
name|_glCreateProgram
name|qt_glCreateProgram
decl_stmt|;
DECL|member|qt_glAttachShader
name|_glAttachShader
name|qt_glAttachShader
decl_stmt|;
DECL|member|qt_glDetachShader
name|_glDetachShader
name|qt_glDetachShader
decl_stmt|;
DECL|member|qt_glLinkProgram
name|_glLinkProgram
name|qt_glLinkProgram
decl_stmt|;
DECL|member|qt_glUseProgram
name|_glUseProgram
name|qt_glUseProgram
decl_stmt|;
DECL|member|qt_glDeleteProgram
name|_glDeleteProgram
name|qt_glDeleteProgram
decl_stmt|;
DECL|member|qt_glIsProgram
name|_glIsProgram
name|qt_glIsProgram
decl_stmt|;
DECL|member|qt_glGetShaderInfoLog
name|_glGetShaderInfoLog
name|qt_glGetShaderInfoLog
decl_stmt|;
DECL|member|qt_glGetShaderiv
name|_glGetShaderiv
name|qt_glGetShaderiv
decl_stmt|;
DECL|member|qt_glGetShaderSource
name|_glGetShaderSource
name|qt_glGetShaderSource
decl_stmt|;
DECL|member|qt_glGetProgramiv
name|_glGetProgramiv
name|qt_glGetProgramiv
decl_stmt|;
DECL|member|qt_glGetProgramInfoLog
name|_glGetProgramInfoLog
name|qt_glGetProgramInfoLog
decl_stmt|;
DECL|member|qt_glGetUniformLocation
name|_glGetUniformLocation
name|qt_glGetUniformLocation
decl_stmt|;
DECL|member|qt_glUniform4fv
name|_glUniform4fv
name|qt_glUniform4fv
decl_stmt|;
DECL|member|qt_glUniform3fv
name|_glUniform3fv
name|qt_glUniform3fv
decl_stmt|;
DECL|member|qt_glUniform2fv
name|_glUniform2fv
name|qt_glUniform2fv
decl_stmt|;
DECL|member|qt_glUniform1fv
name|_glUniform1fv
name|qt_glUniform1fv
decl_stmt|;
DECL|member|qt_glUniform1i
name|_glUniform1i
name|qt_glUniform1i
decl_stmt|;
DECL|member|qt_glUniform1iv
name|_glUniform1iv
name|qt_glUniform1iv
decl_stmt|;
DECL|member|qt_glUniformMatrix2fv
name|_glUniformMatrix2fv
name|qt_glUniformMatrix2fv
decl_stmt|;
DECL|member|qt_glUniformMatrix3fv
name|_glUniformMatrix3fv
name|qt_glUniformMatrix3fv
decl_stmt|;
DECL|member|qt_glUniformMatrix4fv
name|_glUniformMatrix4fv
name|qt_glUniformMatrix4fv
decl_stmt|;
DECL|member|qt_glUniformMatrix2x3fv
name|_glUniformMatrix2x3fv
name|qt_glUniformMatrix2x3fv
decl_stmt|;
DECL|member|qt_glUniformMatrix2x4fv
name|_glUniformMatrix2x4fv
name|qt_glUniformMatrix2x4fv
decl_stmt|;
DECL|member|qt_glUniformMatrix3x2fv
name|_glUniformMatrix3x2fv
name|qt_glUniformMatrix3x2fv
decl_stmt|;
DECL|member|qt_glUniformMatrix3x4fv
name|_glUniformMatrix3x4fv
name|qt_glUniformMatrix3x4fv
decl_stmt|;
DECL|member|qt_glUniformMatrix4x2fv
name|_glUniformMatrix4x2fv
name|qt_glUniformMatrix4x2fv
decl_stmt|;
DECL|member|qt_glUniformMatrix4x3fv
name|_glUniformMatrix4x3fv
name|qt_glUniformMatrix4x3fv
decl_stmt|;
DECL|member|qt_glBindAttribLocation
name|_glBindAttribLocation
name|qt_glBindAttribLocation
decl_stmt|;
DECL|member|qt_glGetAttribLocation
name|_glGetAttribLocation
name|qt_glGetAttribLocation
decl_stmt|;
DECL|member|qt_glVertexAttrib1fv
name|_glVertexAttrib1fv
name|qt_glVertexAttrib1fv
decl_stmt|;
DECL|member|qt_glVertexAttrib2fv
name|_glVertexAttrib2fv
name|qt_glVertexAttrib2fv
decl_stmt|;
DECL|member|qt_glVertexAttrib3fv
name|_glVertexAttrib3fv
name|qt_glVertexAttrib3fv
decl_stmt|;
DECL|member|qt_glVertexAttrib4fv
name|_glVertexAttrib4fv
name|qt_glVertexAttrib4fv
decl_stmt|;
DECL|member|qt_glVertexAttribPointer
name|_glVertexAttribPointer
name|qt_glVertexAttribPointer
decl_stmt|;
DECL|member|qt_glDisableVertexAttribArray
name|_glDisableVertexAttribArray
name|qt_glDisableVertexAttribArray
decl_stmt|;
DECL|member|qt_glEnableVertexAttribArray
name|_glEnableVertexAttribArray
name|qt_glEnableVertexAttribArray
decl_stmt|;
else|#
directive|else
DECL|member|qt_glslResolved
name|bool
name|qt_glslResolved
decl_stmt|;
DECL|member|qt_glGetProgramBinaryOES
name|_glGetProgramBinaryOES
name|qt_glGetProgramBinaryOES
decl_stmt|;
DECL|member|qt_glProgramBinaryOES
name|_glProgramBinaryOES
name|qt_glProgramBinaryOES
decl_stmt|;
endif|#
directive|endif
DECL|member|qt_glActiveStencilFaceEXT
name|_glActiveStencilFaceEXT
name|qt_glActiveStencilFaceEXT
decl_stmt|;
DECL|member|qt_glMultiTexCoord4f
name|_glMultiTexCoord4f
name|qt_glMultiTexCoord4f
decl_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
comment|// Extras needed for GL2 engine:
DECL|member|qt_glActiveTexture
name|_glActiveTexture
name|qt_glActiveTexture
decl_stmt|;
DECL|member|qt_glStencilOpSeparate
name|_glStencilOpSeparate
name|qt_glStencilOpSeparate
decl_stmt|;
DECL|member|qt_glBlendColor
name|_glBlendColor
name|qt_glBlendColor
decl_stmt|;
endif|#
directive|endif
comment|// FBOs
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
DECL|member|qt_glIsRenderbuffer
name|_glIsRenderbuffer
name|qt_glIsRenderbuffer
decl_stmt|;
DECL|member|qt_glBindRenderbuffer
name|_glBindRenderbuffer
name|qt_glBindRenderbuffer
decl_stmt|;
DECL|member|qt_glDeleteRenderbuffers
name|_glDeleteRenderbuffers
name|qt_glDeleteRenderbuffers
decl_stmt|;
DECL|member|qt_glGenRenderbuffers
name|_glGenRenderbuffers
name|qt_glGenRenderbuffers
decl_stmt|;
DECL|member|qt_glRenderbufferStorage
name|_glRenderbufferStorage
name|qt_glRenderbufferStorage
decl_stmt|;
DECL|member|qt_glGetRenderbufferParameteriv
name|_glGetRenderbufferParameteriv
name|qt_glGetRenderbufferParameteriv
decl_stmt|;
DECL|member|qt_glIsFramebuffer
name|_glIsFramebuffer
name|qt_glIsFramebuffer
decl_stmt|;
DECL|member|qt_glBindFramebuffer
name|_glBindFramebuffer
name|qt_glBindFramebuffer
decl_stmt|;
DECL|member|qt_glDeleteFramebuffers
name|_glDeleteFramebuffers
name|qt_glDeleteFramebuffers
decl_stmt|;
DECL|member|qt_glGenFramebuffers
name|_glGenFramebuffers
name|qt_glGenFramebuffers
decl_stmt|;
DECL|member|qt_glCheckFramebufferStatus
name|_glCheckFramebufferStatus
name|qt_glCheckFramebufferStatus
decl_stmt|;
DECL|member|qt_glFramebufferTexture2D
name|_glFramebufferTexture2D
name|qt_glFramebufferTexture2D
decl_stmt|;
DECL|member|qt_glFramebufferRenderbuffer
name|_glFramebufferRenderbuffer
name|qt_glFramebufferRenderbuffer
decl_stmt|;
DECL|member|qt_glGetFramebufferAttachmentParameteriv
name|_glGetFramebufferAttachmentParameteriv
name|qt_glGetFramebufferAttachmentParameteriv
decl_stmt|;
DECL|member|qt_glGenerateMipmap
name|_glGenerateMipmap
name|qt_glGenerateMipmap
decl_stmt|;
endif|#
directive|endif
DECL|member|qt_glBlitFramebufferEXT
name|_glBlitFramebufferEXT
name|qt_glBlitFramebufferEXT
decl_stmt|;
DECL|member|qt_glRenderbufferStorageMultisampleEXT
name|_glRenderbufferStorageMultisampleEXT
name|qt_glRenderbufferStorageMultisampleEXT
decl_stmt|;
comment|// Buffer objects
if|#
directive|if
name|defined
argument_list|(
name|QGL_RESOLVE_BUFFER_FUNCS
argument_list|)
DECL|member|qt_glBindBuffer
name|_glBindBuffer
name|qt_glBindBuffer
decl_stmt|;
DECL|member|qt_glDeleteBuffers
name|_glDeleteBuffers
name|qt_glDeleteBuffers
decl_stmt|;
DECL|member|qt_glGenBuffers
name|_glGenBuffers
name|qt_glGenBuffers
decl_stmt|;
DECL|member|qt_glBufferData
name|_glBufferData
name|qt_glBufferData
decl_stmt|;
DECL|member|qt_glBufferSubData
name|_glBufferSubData
name|qt_glBufferSubData
decl_stmt|;
DECL|member|qt_glGetBufferSubData
name|_glGetBufferSubData
name|qt_glGetBufferSubData
decl_stmt|;
DECL|member|qt_glGetBufferParameteriv
name|_glGetBufferParameteriv
name|qt_glGetBufferParameteriv
decl_stmt|;
endif|#
directive|endif
DECL|member|qt_glMapBufferARB
name|_glMapBufferARB
name|qt_glMapBufferARB
decl_stmt|;
DECL|member|qt_glUnmapBufferARB
name|_glUnmapBufferARB
name|qt_glUnmapBufferARB
decl_stmt|;
comment|// Geometry shaders...
DECL|member|qt_glProgramParameteriEXT
name|_glProgramParameteriEXT
name|qt_glProgramParameteriEXT
decl_stmt|;
DECL|member|qt_glFramebufferTextureEXT
name|_glFramebufferTextureEXT
name|qt_glFramebufferTextureEXT
decl_stmt|;
DECL|member|qt_glFramebufferTextureLayerEXT
name|_glFramebufferTextureLayerEXT
name|qt_glFramebufferTextureLayerEXT
decl_stmt|;
DECL|member|qt_glFramebufferTextureFaceEXT
name|_glFramebufferTextureFaceEXT
name|qt_glFramebufferTextureFaceEXT
decl_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES
argument_list|)
comment|// Texture compression
DECL|member|qt_glCompressedTexImage2DARB
name|_glCompressedTexImage2DARB
name|qt_glCompressedTexImage2DARB
decl_stmt|;
endif|#
directive|endif
block|}
struct|;
end_struct
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_define
DECL|macro|glProgramStringARB
define|#
directive|define
name|glProgramStringARB
value|QGLContextPrivate::extensionFuncs(ctx).qt_glProgramStringARB
end_define
begin_define
DECL|macro|glBindProgramARB
define|#
directive|define
name|glBindProgramARB
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBindProgramARB
end_define
begin_define
DECL|macro|glDeleteProgramsARB
define|#
directive|define
name|glDeleteProgramsARB
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDeleteProgramsARB
end_define
begin_define
DECL|macro|glGenProgramsARB
define|#
directive|define
name|glGenProgramsARB
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGenProgramsARB
end_define
begin_define
DECL|macro|glProgramLocalParameter4fvARB
define|#
directive|define
name|glProgramLocalParameter4fvARB
value|QGLContextPrivate::extensionFuncs(ctx).qt_glProgramLocalParameter4fvARB
end_define
begin_define
DECL|macro|glActiveStencilFaceEXT
define|#
directive|define
name|glActiveStencilFaceEXT
value|QGLContextPrivate::extensionFuncs(ctx).qt_glActiveStencilFaceEXT
end_define
begin_define
DECL|macro|glMultiTexCoord4f
define|#
directive|define
name|glMultiTexCoord4f
value|QGLContextPrivate::extensionFuncs(ctx).qt_glMultiTexCoord4f
end_define
begin_define
DECL|macro|glActiveTexture
define|#
directive|define
name|glActiveTexture
value|QGLContextPrivate::extensionFuncs(ctx).qt_glActiveTexture
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !defined(QT_OPENGL_ES_2)
end_comment
begin_comment
comment|// FBOs
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_define
DECL|macro|glIsRenderbuffer
define|#
directive|define
name|glIsRenderbuffer
value|QGLContextPrivate::extensionFuncs(ctx).qt_glIsRenderbuffer
end_define
begin_define
DECL|macro|glBindRenderbuffer
define|#
directive|define
name|glBindRenderbuffer
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBindRenderbuffer
end_define
begin_define
DECL|macro|glDeleteRenderbuffers
define|#
directive|define
name|glDeleteRenderbuffers
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDeleteRenderbuffers
end_define
begin_define
DECL|macro|glGenRenderbuffers
define|#
directive|define
name|glGenRenderbuffers
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGenRenderbuffers
end_define
begin_define
DECL|macro|glRenderbufferStorage
define|#
directive|define
name|glRenderbufferStorage
value|QGLContextPrivate::extensionFuncs(ctx).qt_glRenderbufferStorage
end_define
begin_define
DECL|macro|glGetRenderbufferParameteriv
define|#
directive|define
name|glGetRenderbufferParameteriv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetRenderbufferParameteriv
end_define
begin_define
DECL|macro|glIsFramebuffer
define|#
directive|define
name|glIsFramebuffer
value|QGLContextPrivate::extensionFuncs(ctx).qt_glIsFramebuffer
end_define
begin_define
DECL|macro|glBindFramebuffer
define|#
directive|define
name|glBindFramebuffer
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBindFramebuffer
end_define
begin_define
DECL|macro|glDeleteFramebuffers
define|#
directive|define
name|glDeleteFramebuffers
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDeleteFramebuffers
end_define
begin_define
DECL|macro|glGenFramebuffers
define|#
directive|define
name|glGenFramebuffers
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGenFramebuffers
end_define
begin_define
DECL|macro|glCheckFramebufferStatus
define|#
directive|define
name|glCheckFramebufferStatus
value|QGLContextPrivate::extensionFuncs(ctx).qt_glCheckFramebufferStatus
end_define
begin_define
DECL|macro|glFramebufferTexture2D
define|#
directive|define
name|glFramebufferTexture2D
value|QGLContextPrivate::extensionFuncs(ctx).qt_glFramebufferTexture2D
end_define
begin_define
DECL|macro|glFramebufferRenderbuffer
define|#
directive|define
name|glFramebufferRenderbuffer
value|QGLContextPrivate::extensionFuncs(ctx).qt_glFramebufferRenderbuffer
end_define
begin_define
DECL|macro|glGetFramebufferAttachmentParameteriv
define|#
directive|define
name|glGetFramebufferAttachmentParameteriv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetFramebufferAttachmentParameteriv
end_define
begin_define
DECL|macro|glGenerateMipmap
define|#
directive|define
name|glGenerateMipmap
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGenerateMipmap
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_OPENGL_ES_2
end_comment
begin_define
DECL|macro|glBlitFramebufferEXT
define|#
directive|define
name|glBlitFramebufferEXT
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBlitFramebufferEXT
end_define
begin_define
DECL|macro|glRenderbufferStorageMultisampleEXT
define|#
directive|define
name|glRenderbufferStorageMultisampleEXT
value|QGLContextPrivate::extensionFuncs(ctx).qt_glRenderbufferStorageMultisampleEXT
end_define
begin_comment
comment|// Buffer objects
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QGL_RESOLVE_BUFFER_FUNCS
argument_list|)
end_if
begin_define
DECL|macro|glBindBuffer
define|#
directive|define
name|glBindBuffer
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBindBuffer
end_define
begin_define
DECL|macro|glDeleteBuffers
define|#
directive|define
name|glDeleteBuffers
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDeleteBuffers
end_define
begin_define
DECL|macro|glGenBuffers
define|#
directive|define
name|glGenBuffers
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGenBuffers
end_define
begin_define
DECL|macro|glBufferData
define|#
directive|define
name|glBufferData
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBufferData
end_define
begin_define
DECL|macro|glBufferSubData
define|#
directive|define
name|glBufferSubData
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBufferSubData
end_define
begin_define
DECL|macro|glGetBufferSubData
define|#
directive|define
name|glGetBufferSubData
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetBufferSubData
end_define
begin_define
DECL|macro|glGetBufferParameteriv
define|#
directive|define
name|glGetBufferParameteriv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetBufferParameteriv
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_define
DECL|macro|glMapBufferARB
define|#
directive|define
name|glMapBufferARB
value|QGLContextPrivate::extensionFuncs(ctx).qt_glMapBufferARB
end_define
begin_define
DECL|macro|glUnmapBufferARB
define|#
directive|define
name|glUnmapBufferARB
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUnmapBufferARB
end_define
begin_comment
comment|// GLSL
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_define
DECL|macro|glCreateShader
define|#
directive|define
name|glCreateShader
value|QGLContextPrivate::extensionFuncs(ctx).qt_glCreateShader
end_define
begin_define
DECL|macro|glShaderSource
define|#
directive|define
name|glShaderSource
value|QGLContextPrivate::extensionFuncs(ctx).qt_glShaderSource
end_define
begin_define
DECL|macro|glShaderBinary
define|#
directive|define
name|glShaderBinary
value|QGLContextPrivate::extensionFuncs(ctx).qt_glShaderBinary
end_define
begin_define
DECL|macro|glCompileShader
define|#
directive|define
name|glCompileShader
value|QGLContextPrivate::extensionFuncs(ctx).qt_glCompileShader
end_define
begin_define
DECL|macro|glDeleteShader
define|#
directive|define
name|glDeleteShader
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDeleteShader
end_define
begin_define
DECL|macro|glIsShader
define|#
directive|define
name|glIsShader
value|QGLContextPrivate::extensionFuncs(ctx).qt_glIsShader
end_define
begin_define
DECL|macro|glCreateProgram
define|#
directive|define
name|glCreateProgram
value|QGLContextPrivate::extensionFuncs(ctx).qt_glCreateProgram
end_define
begin_define
DECL|macro|glAttachShader
define|#
directive|define
name|glAttachShader
value|QGLContextPrivate::extensionFuncs(ctx).qt_glAttachShader
end_define
begin_define
DECL|macro|glDetachShader
define|#
directive|define
name|glDetachShader
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDetachShader
end_define
begin_define
DECL|macro|glLinkProgram
define|#
directive|define
name|glLinkProgram
value|QGLContextPrivate::extensionFuncs(ctx).qt_glLinkProgram
end_define
begin_define
DECL|macro|glUseProgram
define|#
directive|define
name|glUseProgram
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUseProgram
end_define
begin_define
DECL|macro|glDeleteProgram
define|#
directive|define
name|glDeleteProgram
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDeleteProgram
end_define
begin_define
DECL|macro|glIsProgram
define|#
directive|define
name|glIsProgram
value|QGLContextPrivate::extensionFuncs(ctx).qt_glIsProgram
end_define
begin_define
DECL|macro|glGetShaderInfoLog
define|#
directive|define
name|glGetShaderInfoLog
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetShaderInfoLog
end_define
begin_define
DECL|macro|glGetShaderiv
define|#
directive|define
name|glGetShaderiv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetShaderiv
end_define
begin_define
DECL|macro|glGetShaderSource
define|#
directive|define
name|glGetShaderSource
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetShaderSource
end_define
begin_define
DECL|macro|glGetProgramiv
define|#
directive|define
name|glGetProgramiv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetProgramiv
end_define
begin_define
DECL|macro|glGetProgramInfoLog
define|#
directive|define
name|glGetProgramInfoLog
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetProgramInfoLog
end_define
begin_define
DECL|macro|glGetUniformLocation
define|#
directive|define
name|glGetUniformLocation
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetUniformLocation
end_define
begin_define
DECL|macro|glUniform4fv
define|#
directive|define
name|glUniform4fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniform4fv
end_define
begin_define
DECL|macro|glUniform3fv
define|#
directive|define
name|glUniform3fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniform3fv
end_define
begin_define
DECL|macro|glUniform2fv
define|#
directive|define
name|glUniform2fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniform2fv
end_define
begin_define
DECL|macro|glUniform1fv
define|#
directive|define
name|glUniform1fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniform1fv
end_define
begin_define
DECL|macro|glUniform1i
define|#
directive|define
name|glUniform1i
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniform1i
end_define
begin_define
DECL|macro|glUniform1iv
define|#
directive|define
name|glUniform1iv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniform1iv
end_define
begin_define
DECL|macro|glUniformMatrix2fv
define|#
directive|define
name|glUniformMatrix2fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix2fv
end_define
begin_define
DECL|macro|glUniformMatrix3fv
define|#
directive|define
name|glUniformMatrix3fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix3fv
end_define
begin_define
DECL|macro|glUniformMatrix4fv
define|#
directive|define
name|glUniformMatrix4fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix4fv
end_define
begin_define
DECL|macro|glUniformMatrix2x3fv
define|#
directive|define
name|glUniformMatrix2x3fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix2x3fv
end_define
begin_define
DECL|macro|glUniformMatrix2x4fv
define|#
directive|define
name|glUniformMatrix2x4fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix2x4fv
end_define
begin_define
DECL|macro|glUniformMatrix3x2fv
define|#
directive|define
name|glUniformMatrix3x2fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix3x2fv
end_define
begin_define
DECL|macro|glUniformMatrix3x4fv
define|#
directive|define
name|glUniformMatrix3x4fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix3x4fv
end_define
begin_define
DECL|macro|glUniformMatrix4x2fv
define|#
directive|define
name|glUniformMatrix4x2fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix4x2fv
end_define
begin_define
DECL|macro|glUniformMatrix4x3fv
define|#
directive|define
name|glUniformMatrix4x3fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glUniformMatrix4x3fv
end_define
begin_define
DECL|macro|glBindAttribLocation
define|#
directive|define
name|glBindAttribLocation
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBindAttribLocation
end_define
begin_define
DECL|macro|glGetAttribLocation
define|#
directive|define
name|glGetAttribLocation
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetAttribLocation
end_define
begin_define
DECL|macro|glVertexAttrib1fv
define|#
directive|define
name|glVertexAttrib1fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glVertexAttrib1fv
end_define
begin_define
DECL|macro|glVertexAttrib2fv
define|#
directive|define
name|glVertexAttrib2fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glVertexAttrib2fv
end_define
begin_define
DECL|macro|glVertexAttrib3fv
define|#
directive|define
name|glVertexAttrib3fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glVertexAttrib3fv
end_define
begin_define
DECL|macro|glVertexAttrib4fv
define|#
directive|define
name|glVertexAttrib4fv
value|QGLContextPrivate::extensionFuncs(ctx).qt_glVertexAttrib4fv
end_define
begin_define
DECL|macro|glVertexAttribPointer
define|#
directive|define
name|glVertexAttribPointer
value|QGLContextPrivate::extensionFuncs(ctx).qt_glVertexAttribPointer
end_define
begin_define
DECL|macro|glDisableVertexAttribArray
define|#
directive|define
name|glDisableVertexAttribArray
value|QGLContextPrivate::extensionFuncs(ctx).qt_glDisableVertexAttribArray
end_define
begin_define
DECL|macro|glEnableVertexAttribArray
define|#
directive|define
name|glEnableVertexAttribArray
value|QGLContextPrivate::extensionFuncs(ctx).qt_glEnableVertexAttribArray
end_define
begin_else
else|#
directive|else
end_else
begin_comment
comment|// QT_OPENGL_ES_2
end_comment
begin_define
DECL|macro|glGetProgramBinaryOES
define|#
directive|define
name|glGetProgramBinaryOES
value|QGLContextPrivate::extensionFuncs(ctx).qt_glGetProgramBinaryOES
end_define
begin_define
DECL|macro|glProgramBinaryOES
define|#
directive|define
name|glProgramBinaryOES
value|QGLContextPrivate::extensionFuncs(ctx).qt_glProgramBinaryOES
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_OPENGL_ES_2
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_define
DECL|macro|glStencilOpSeparate
define|#
directive|define
name|glStencilOpSeparate
value|QGLContextPrivate::extensionFuncs(ctx).qt_glStencilOpSeparate
end_define
begin_define
DECL|macro|glBlendColor
define|#
directive|define
name|glBlendColor
value|QGLContextPrivate::extensionFuncs(ctx).qt_glBlendColor
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_define
DECL|macro|glClearDepth
define|#
directive|define
name|glClearDepth
value|glClearDepthf
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_define
DECL|macro|glProgramParameteriEXT
define|#
directive|define
name|glProgramParameteriEXT
value|QGLContextPrivate::extensionFuncs(ctx).qt_glProgramParameteriEXT
end_define
begin_define
DECL|macro|glFramebufferTextureEXT
define|#
directive|define
name|glFramebufferTextureEXT
value|QGLContextPrivate::extensionFuncs(ctx).qt_glFramebufferTextureEXT
end_define
begin_define
DECL|macro|glFramebufferTextureLayerEXT
define|#
directive|define
name|glFramebufferTextureLayerEXT
value|QGLContextPrivate::extensionFuncs(ctx).qt_glFramebufferTextureLayerEXT
end_define
begin_define
DECL|macro|glFramebufferTextureFaceEXT
define|#
directive|define
name|glFramebufferTextureFaceEXT
value|QGLContextPrivate::extensionFuncs(ctx).qt_glFramebufferTextureFaceEXT
end_define
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES
argument_list|)
end_if
begin_define
DECL|macro|glCompressedTexImage2D
define|#
directive|define
name|glCompressedTexImage2D
value|QGLContextPrivate::extensionFuncs(ctx).qt_glCompressedTexImage2DARB
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_function_decl
specifier|extern
name|bool
name|qt_resolve_framebufferobject_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_resolve_buffer_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_resolve_version_1_3_functions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_resolve_version_2_0_functions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_resolve_stencil_face_extension
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_resolve_frag_program_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|bool
name|qt_resolve_glsl_extensions
parameter_list|(
name|QGLContext
modifier|*
name|ctx
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QGL_EXTENSIONS_P_H
end_comment
end_unit
