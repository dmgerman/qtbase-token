begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtOpenGL module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QGLPAINTDEVICE_P_H
end_ifndef
begin_define
DECL|macro|QGLPAINTDEVICE_P_H
define|#
directive|define
name|QGLPAINTDEVICE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QtOpenGL module.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<qpaintdevice.h>
end_include
begin_include
include|#
directive|include
file|<qgl.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|Q_OPENGL_EXPORT
name|QGLPaintDevice
range|:
name|public
name|QPaintDevice
block|{
name|public
operator|:
name|QGLPaintDevice
argument_list|()
block|;
name|virtual
operator|~
name|QGLPaintDevice
argument_list|()
block|;
name|int
name|devType
argument_list|()
specifier|const
block|{
return|return
name|QInternal
operator|::
name|OpenGL
return|;
block|}
name|virtual
name|void
name|beginPaint
argument_list|()
block|;
name|virtual
name|void
name|ensureActiveTarget
argument_list|()
block|;
name|virtual
name|void
name|endPaint
argument_list|()
block|;
name|virtual
name|QGLContext
operator|*
name|context
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|virtual
name|QGLFormat
name|format
argument_list|()
specifier|const
block|;
name|virtual
name|QSize
name|size
argument_list|()
specifier|const
operator|=
literal|0
block|;
name|virtual
name|bool
name|alphaRequested
argument_list|()
specifier|const
block|;
name|virtual
name|bool
name|isFlipped
argument_list|()
specifier|const
block|;
comment|// returns the QGLPaintDevice for the given QPaintDevice
specifier|static
name|QGLPaintDevice
operator|*
name|getDevice
argument_list|(
name|QPaintDevice
operator|*
argument_list|)
block|;
name|protected
operator|:
name|int
name|metric
argument_list|(
argument|QPaintDevice::PaintDeviceMetric metric
argument_list|)
specifier|const
block|;
name|GLuint
name|m_previousFBO
block|;
name|GLuint
name|m_thisFBO
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|// Wraps a QGLWidget
end_comment
begin_decl_stmt
DECL|variable|QGLWidget
name|class
name|QGLWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_OPENGL_EXPORT
name|QGLWidgetGLPaintDevice
range|:
name|public
name|QGLPaintDevice
block|{
name|public
operator|:
name|QGLWidgetGLPaintDevice
argument_list|()
block|;
name|virtual
name|QPaintEngine
operator|*
name|paintEngine
argument_list|()
specifier|const
block|;
comment|// QGLWidgets need to do swapBufers in endPaint:
name|virtual
name|void
name|beginPaint
argument_list|()
block|;
name|virtual
name|void
name|endPaint
argument_list|()
block|;
name|virtual
name|QSize
name|size
argument_list|()
specifier|const
block|;
name|virtual
name|QGLContext
operator|*
name|context
argument_list|()
specifier|const
block|;
name|void
name|setWidget
argument_list|(
name|QGLWidget
operator|*
argument_list|)
block|;
name|private
operator|:
name|friend
name|class
name|QGLWidget
block|;
name|QGLWidget
operator|*
name|glWidget
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QGLPAINTDEVICE_P_H
end_comment
end_unit
