begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtOpenGL module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QSCREENEGL_P_H
end_ifndef
begin_define
DECL|macro|QSCREENEGL_P_H
define|#
directive|define
name|QSCREENEGL_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QScreenEGL class.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtGui/QScreen>
end_include
begin_include
include|#
directive|include
file|<QtOpenGL/qgl.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_include
include|#
directive|include
file|<EGL/egl.h>
end_include
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<GLES/egl.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|EGL_VERSION_1_3
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QEGL_NATIVE_TYPES_DEFINED
argument_list|)
end_if
begin_undef
DECL|macro|EGLNativeWindowType
undef|#
directive|undef
name|EGLNativeWindowType
end_undef
begin_undef
DECL|macro|EGLNativePixmapType
undef|#
directive|undef
name|EGLNativePixmapType
end_undef
begin_undef
DECL|macro|EGLNativeDisplayType
undef|#
directive|undef
name|EGLNativeDisplayType
end_undef
begin_typedef
DECL|typedef|EGLNativeWindowType
typedef|typedef
name|NativeWindowType
name|EGLNativeWindowType
typedef|;
end_typedef
begin_typedef
DECL|typedef|EGLNativePixmapType
typedef|typedef
name|NativePixmapType
name|EGLNativePixmapType
typedef|;
end_typedef
begin_typedef
DECL|typedef|EGLNativeDisplayType
typedef|typedef
name|NativeDisplayType
name|EGLNativeDisplayType
typedef|;
end_typedef
begin_define
DECL|macro|QEGL_NATIVE_TYPES_DEFINED
define|#
directive|define
name|QEGL_NATIVE_TYPES_DEFINED
value|1
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|OpenGL
parameter_list|)
name|class
name|QGLScreenPrivate
decl_stmt|;
name|class
name|Q_OPENGL_EXPORT
name|QGLScreenSurfaceFunctions
decl_stmt|{ public:     virtual bool createNativeWindow(QWidget *widget
operator|,
decl_stmt|EGLNativeWindowType *native
end_function
begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt
begin_function_decl
name|virtual
name|bool
name|createNativePixmap
parameter_list|(
name|QPixmap
modifier|*
name|pixmap
parameter_list|,
name|EGLNativePixmapType
modifier|*
name|native
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|virtual
name|bool
name|createNativeImage
parameter_list|(
name|QImage
modifier|*
name|image
parameter_list|,
name|EGLNativePixmapType
modifier|*
name|native
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
unit|};
name|class
name|Q_OPENGL_EXPORT
name|QGLScreen
range|:
name|public
name|QScreen
block|{
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGLScreen
argument_list|)
name|public
operator|:
name|QGLScreen
argument_list|(
argument|int displayId
argument_list|)
block|;
name|virtual
operator|~
name|QGLScreen
argument_list|()
block|;      enum
name|Option
block|{
name|NoOptions
operator|=
literal|0
block|,
name|NativeWindows
operator|=
literal|1
block|,
name|NativePixmaps
operator|=
literal|2
block|,
name|NativeImages
operator|=
literal|4
block|,
name|Overlays
operator|=
literal|8
block|}
block|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|Options
argument_list|,
argument|Option
argument_list|)
name|QGLScreen
operator|::
name|Options
name|options
argument_list|()
specifier|const
block|;
name|virtual
name|bool
name|chooseContext
argument_list|(
name|QGLContext
operator|*
name|context
argument_list|,
specifier|const
name|QGLContext
operator|*
name|shareContext
argument_list|)
block|;
name|virtual
name|bool
name|hasOpenGL
argument_list|()
operator|=
literal|0
block|;
name|QGLScreenSurfaceFunctions
operator|*
name|surfaceFunctions
argument_list|()
specifier|const
block|;
name|protected
operator|:
name|void
name|setOptions
argument_list|(
argument|QGLScreen::Options value
argument_list|)
block|;
name|void
name|setSurfaceFunctions
argument_list|(
name|QGLScreenSurfaceFunctions
operator|*
name|functions
argument_list|)
block|;
name|private
operator|:
name|QGLScreenPrivate
operator|*
name|d_ptr
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QGLScreen::Options
argument_list|)
end_macro
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QSCREENEGL_P_H
end_comment
end_unit
