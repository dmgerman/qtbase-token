begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QCUPS_P_H
end_ifndef
begin_define
DECL|macro|QCUPS_P_H
define|#
directive|define
name|QCUPS_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"QtCore/qstring.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qstringlist.h"
end_include
begin_include
include|#
directive|include
file|"QtPrintSupport/qprinter.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qdatetime.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_CUPS
end_ifndef
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
comment|// HACK! Define these here temporarily so they can be used in the dialogs
comment|// without a circular reference to QCupsPrintEngine in the plugin.
comment|// Move back to qcupsprintengine_p.h in the plugin once all usage
comment|// removed from the dialogs.
DECL|macro|PPK_CupsOptions
define|#
directive|define
name|PPK_CupsOptions
value|QPrintEngine::PrintEnginePropertyKey(0xfe00)
name|class
name|Q_PRINTSUPPORT_EXPORT
name|QCUPSSupport
block|{
name|public
label|:
comment|// Enum for values of job-hold-until option
enum|enum
name|JobHoldUntil
block|{
name|NoHold
init|=
literal|0
block|,
comment|//CUPS Default
name|Indefinite
block|,
name|DayTime
block|,
name|Night
block|,
name|SecondShift
block|,
name|ThirdShift
block|,
name|Weekend
block|,
name|SpecificTime
block|}
enum|;
comment|// Enum for valid banner pages
enum|enum
name|BannerPage
block|{
name|NoBanner
init|=
literal|0
block|,
comment|//CUPS Default 'none'
name|Standard
block|,
name|Unclassified
block|,
name|Confidential
block|,
name|Classified
block|,
name|Secret
block|,
name|TopSecret
block|}
enum|;
comment|// Enum for valid page set
enum|enum
name|PageSet
block|{
name|AllPages
init|=
literal|0
block|,
comment|//CUPS Default
name|OddPages
block|,
name|EvenPages
block|}
enum|;
comment|// Enum for valid number of pages per sheet
enum|enum
name|PagesPerSheet
block|{
name|OnePagePerSheet
init|=
literal|0
block|,
name|TwoPagesPerSheet
block|,
name|FourPagesPerSheet
block|,
name|SixPagesPerSheet
block|,
name|NinePagesPerSheet
block|,
name|SixteenPagesPerSheet
block|}
enum|;
comment|// Enum for valid layouts of pages per sheet
enum|enum
name|PagesPerSheetLayout
block|{
name|LeftToRightTopToBottom
init|=
literal|0
block|,
name|LeftToRightBottomToTop
block|,
name|RightToLeftTopToBottom
block|,
name|RightToLeftBottomToTop
block|,
name|BottomToTopLeftToRight
block|,
name|BottomToTopRightToLeft
block|,
name|TopToBottomLeftToRight
block|,
name|TopToBottomRightToLeft
block|}
enum|;
specifier|static
name|QStringList
name|cupsOptionsList
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|)
function_decl|;
specifier|static
name|void
name|setCupsOptions
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|cupsOptions
parameter_list|)
function_decl|;
specifier|static
name|void
name|setCupsOption
parameter_list|(
name|QStringList
modifier|&
name|cupsOptions
parameter_list|,
specifier|const
name|QString
modifier|&
name|option
parameter_list|,
specifier|const
name|QString
modifier|&
name|value
parameter_list|)
function_decl|;
specifier|static
name|void
name|setJobHold
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
specifier|const
name|JobHoldUntil
name|jobHold
init|=
name|NoHold
parameter_list|,
specifier|const
name|QTime
modifier|&
name|holdUntilTime
init|=
name|QTime
argument_list|()
parameter_list|)
function_decl|;
specifier|static
name|void
name|setJobBilling
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
specifier|const
name|QString
modifier|&
name|jobBilling
init|=
name|QString
argument_list|()
parameter_list|)
function_decl|;
specifier|static
name|void
name|setJobPriority
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|int
name|priority
init|=
literal|50
parameter_list|)
function_decl|;
specifier|static
name|void
name|setBannerPages
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
specifier|const
name|BannerPage
name|startBannerPage
parameter_list|,
specifier|const
name|BannerPage
name|endBannerPage
parameter_list|)
function_decl|;
specifier|static
name|void
name|setPageSet
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
specifier|const
name|PageSet
name|pageSet
parameter_list|)
function_decl|;
specifier|static
name|void
name|setPagesPerSheetLayout
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
specifier|const
name|PagesPerSheet
name|pagesPerSheet
parameter_list|,
specifier|const
name|PagesPerSheetLayout
name|pagesPerSheetLayout
parameter_list|)
function_decl|;
specifier|static
name|void
name|setPageRange
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|int
name|pageFrom
parameter_list|,
name|int
name|pageTo
parameter_list|)
function_decl|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|QT_END_NAMESPACE
name|Q_DECLARE_METATYPE
argument_list|(
name|QCUPSSupport
operator|::
name|JobHoldUntil
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QCUPSSupport
operator|::
name|BannerPage
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QCUPSSupport
operator|::
name|PageSet
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QCUPSSupport
operator|::
name|PagesPerSheetLayout
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QCUPSSupport
operator|::
name|PagesPerSheet
argument_list|)
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_CUPS
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
