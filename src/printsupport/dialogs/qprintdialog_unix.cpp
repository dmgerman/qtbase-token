begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qplatformdefs.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_PRINTDIALOG
end_ifndef
begin_include
include|#
directive|include
file|"private/qabstractprintdialog_p.h"
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qmessagebox.h>
end_include
begin_include
include|#
directive|include
file|"qprintdialog.h"
end_include
begin_include
include|#
directive|include
file|"qfiledialog.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qdir.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qevent.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qfilesystemmodel.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qstyleditemdelegate.h>
end_include
begin_include
include|#
directive|include
file|<QtPrintSupport/qprinter.h>
end_include
begin_include
include|#
directive|include
file|<QtPrintSupport/qprinterinfo.h>
end_include
begin_include
include|#
directive|include
file|<private/qprintengine_pdf_p.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qdialogbuttonbox.h>
end_include
begin_include
include|#
directive|include
file|"private/qfscompleter_p.h"
end_include
begin_include
include|#
directive|include
file|"ui_qprintpropertieswidget.h"
end_include
begin_include
include|#
directive|include
file|"ui_qprintsettingsoutput.h"
end_include
begin_include
include|#
directive|include
file|"ui_qprintwidget.h"
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
end_if
begin_include
include|#
directive|include
file|<private/qcups_p.h>
end_include
begin_include
include|#
directive|include
file|"qcupsjobwidget_p.h"
end_include
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<QtCore/qlibrary.h>
end_include
begin_include
include|#
directive|include
file|<private/qprintengine_pdf_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/*  Print dialog class declarations      QPrintDialog:            The main Print Dialog, nothing really held here.      QUnixPrintWidget:     QUnixPrintWidgetPrivate: The real Unix Print Dialog implementation.                               Directly includes the upper half of the Print Dialog                              containing the Printer Selection widgets and                              Properties button.                               Embeds the Properties pop-up dialog from                              QPrintPropertiesDialog                               Embeds the lower half from separate widget class                              QPrintDialogPrivate                               Layout in qprintwidget.ui      QPrintDialogPrivate:     The lower half of the Print Dialog containing the                              Copies and Options tabs that expands when the                              Options button is selected.                               Layout in qprintsettingsoutput.ui      QPrintPropertiesDialog:  Dialog displayed when clicking on Properties button to                              allow editing of Page and Advanced tabs.                               Layout in qprintpropertieswidget.ui */
end_comment
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_class_decl
class_decl|class
name|QOptionTreeItem
class_decl|;
end_class_decl
begin_class_decl
class_decl|class
name|QPPDOptionsModel
class_decl|;
end_class_decl
begin_class
DECL|class|QPrintPropertiesDialog
class|class
name|QPrintPropertiesDialog
super|:
specifier|public
name|QDialog
block|{
name|Q_OBJECT
public|public:
name|QPrintPropertiesDialog
parameter_list|(
name|QAbstractPrintDialog
modifier|*
name|parent
init|=
literal|0
parameter_list|)
constructor_decl|;
name|~
name|QPrintPropertiesDialog
parameter_list|()
destructor_decl|;
name|void
name|selectPrinter
parameter_list|()
function_decl|;
name|void
name|selectPdfPsPrinter
parameter_list|(
specifier|const
name|QPrinter
modifier|*
name|p
parameter_list|)
function_decl|;
comment|/// copy printer properties to the widget
name|void
name|applyPrinterProperties
parameter_list|(
name|QPrinter
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
name|setupPrinter
parameter_list|()
specifier|const
function_decl|;
protected|protected:
name|void
name|showEvent
parameter_list|(
name|QShowEvent
modifier|*
name|event
parameter_list|)
function_decl|;
private|private:
friend|friend
class_decl|class
name|QUnixPrintWidgetPrivate
class_decl|;
DECL|member|widget
name|Ui
operator|::
name|QPrintPropertiesWidget
name|widget
decl_stmt|;
DECL|member|m_buttons
name|QDialogButtonBox
modifier|*
name|m_buttons
decl_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
DECL|member|m_jobOptions
name|QCupsJobWidget
modifier|*
name|m_jobOptions
decl_stmt|;
endif|#
directive|endif
block|}
class|;
end_class
begin_class_decl
class_decl|class
name|QUnixPrintWidgetPrivate
class_decl|;
end_class_decl
begin_class
DECL|class|QUnixPrintWidget
class|class
name|QUnixPrintWidget
super|:
specifier|public
name|QWidget
block|{
name|Q_OBJECT
public|public:
specifier|explicit
name|QUnixPrintWidget
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
constructor_decl|;
name|~
name|QUnixPrintWidget
parameter_list|()
destructor_decl|;
name|void
name|updatePrinter
parameter_list|()
function_decl|;
private|private:
friend|friend
class_decl|class
name|QPrintDialogPrivate
class_decl|;
friend|friend
class_decl|class
name|QUnixPrintWidgetPrivate
class_decl|;
DECL|member|d
name|QUnixPrintWidgetPrivate
modifier|*
name|d
decl_stmt|;
name|Q_PRIVATE_SLOT
argument_list|(
argument|d
argument_list|,
argument|void _q_printerChanged(int)
argument_list|)
name|Q_PRIVATE_SLOT
argument_list|(
argument|d
argument_list|,
argument|void _q_btnBrowseClicked()
argument_list|)
name|Q_PRIVATE_SLOT
argument_list|(
argument|d
argument_list|,
argument|void _q_btnPropertiesClicked()
argument_list|)
block|}
class|;
end_class
begin_class
DECL|class|QUnixPrintWidgetPrivate
class|class
name|QUnixPrintWidgetPrivate
block|{
public|public:
name|QUnixPrintWidgetPrivate
parameter_list|(
name|QUnixPrintWidget
modifier|*
name|q
parameter_list|,
name|QPrinter
modifier|*
name|prn
parameter_list|)
constructor_decl|;
name|~
name|QUnixPrintWidgetPrivate
parameter_list|()
destructor_decl|;
comment|/// copy printer properties to the widget
name|void
name|applyPrinterProperties
parameter_list|()
function_decl|;
name|bool
name|checkFields
parameter_list|()
function_decl|;
name|void
name|setupPrinter
parameter_list|()
function_decl|;
name|void
name|setOptionsPane
parameter_list|(
name|QPrintDialogPrivate
modifier|*
name|pane
parameter_list|)
function_decl|;
name|void
name|setupPrinterProperties
parameter_list|()
function_decl|;
comment|// slots
name|void
name|_q_printerChanged
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
name|void
name|_q_btnPropertiesClicked
parameter_list|()
function_decl|;
name|void
name|_q_btnBrowseClicked
parameter_list|()
function_decl|;
DECL|member|parent
name|QUnixPrintWidget
modifier|*
specifier|const
name|parent
decl_stmt|;
DECL|member|propertiesDialog
name|QPrintPropertiesDialog
modifier|*
name|propertiesDialog
decl_stmt|;
DECL|member|widget
name|Ui
operator|::
name|QPrintWidget
name|widget
decl_stmt|;
DECL|member|q
name|QAbstractPrintDialog
modifier|*
name|q
decl_stmt|;
DECL|member|printer
name|QPrinter
modifier|*
name|printer
decl_stmt|;
name|void
name|updateWidget
parameter_list|()
function_decl|;
private|private:
DECL|member|optionsPane
name|QPrintDialogPrivate
modifier|*
name|optionsPane
decl_stmt|;
DECL|member|filePrintersAdded
name|bool
name|filePrintersAdded
decl_stmt|;
DECL|member|propertiesDialogShown
name|bool
name|propertiesDialogShown
decl_stmt|;
block|}
class|;
end_class
begin_class
DECL|class|QPrintDialogPrivate
class|class
name|QPrintDialogPrivate
super|:
specifier|public
name|QAbstractPrintDialogPrivate
block|{
name|Q_DECLARE_PUBLIC
argument_list|(
argument|QPrintDialog
argument_list|)
name|Q_DECLARE_TR_FUNCTIONS
parameter_list|(
name|QPrintDialog
parameter_list|)
specifier|public
private|:
name|QPrintDialogPrivate
parameter_list|()
constructor_decl|;
name|~
name|QPrintDialogPrivate
parameter_list|()
destructor_decl|;
name|void
name|init
parameter_list|()
function_decl|;
comment|/// copy printer properties to the widget
name|void
name|applyPrinterProperties
parameter_list|()
function_decl|;
name|void
name|selectPrinter
parameter_list|(
specifier|const
name|QPrinter
operator|::
name|OutputFormat
name|outputFormat
parameter_list|)
function_decl|;
name|void
name|_q_chbPrintLastFirstToggled
parameter_list|(
name|bool
parameter_list|)
function_decl|;
name|void
name|_q_togglePageSetCombo
parameter_list|(
name|bool
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_MESSAGEBOX
name|void
name|_q_checkFields
parameter_list|()
function_decl|;
endif|#
directive|endif
name|void
name|_q_collapseOrExpandDialog
parameter_list|()
function_decl|;
name|void
name|setupPrinter
parameter_list|()
function_decl|;
name|void
name|updateWidgets
parameter_list|()
function_decl|;
specifier|virtual
name|void
name|setTabs
parameter_list|(
specifier|const
name|QList
argument_list|<
name|QWidget
modifier|*
argument_list|>
modifier|&
name|tabs
parameter_list|)
function_decl|;
DECL|member|options
name|Ui
operator|::
name|QPrintSettingsOutput
name|options
decl_stmt|;
DECL|member|top
name|QUnixPrintWidget
modifier|*
name|top
decl_stmt|;
DECL|member|bottom
name|QWidget
modifier|*
name|bottom
decl_stmt|;
DECL|member|buttons
name|QDialogButtonBox
modifier|*
name|buttons
decl_stmt|;
DECL|member|collapseButton
name|QPushButton
modifier|*
name|collapseButton
decl_stmt|;
DECL|member|printerOutputFormat
name|QPrinter
operator|::
name|OutputFormat
name|printerOutputFormat
decl_stmt|;
block|}
class|;
end_class
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|/*      QPrintPropertiesDialog      Dialog displayed when clicking on Properties button to allow editing of Page     and Advanced tabs.  */
end_comment
begin_constructor
DECL|function|QPrintPropertiesDialog
name|QPrintPropertiesDialog
operator|::
name|QPrintPropertiesDialog
parameter_list|(
name|QAbstractPrintDialog
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
name|parent
argument_list|)
block|{
name|QVBoxLayout
modifier|*
name|lay
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|this
operator|->
name|setLayout
argument_list|(
name|lay
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|content
init|=
operator|new
name|QWidget
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|widget
operator|.
name|setupUi
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|m_buttons
operator|=
operator|new
name|QDialogButtonBox
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
name|m_buttons
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_buttons
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|accept
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|m_buttons
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|)
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|reject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
if|if
condition|(
name|QCUPSSupport
operator|::
name|isAvailable
argument_list|()
condition|)
block|{
name|m_jobOptions
operator|=
operator|new
name|QCupsJobWidget
argument_list|()
expr_stmt|;
name|widget
operator|.
name|tabs
operator|->
name|addTab
argument_list|(
name|m_jobOptions
argument_list|,
name|tr
argument_list|(
literal|"Job Options"
argument_list|)
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|}
end_constructor
begin_destructor
DECL|function|~QPrintPropertiesDialog
name|QPrintPropertiesDialog
operator|::
name|~
name|QPrintPropertiesDialog
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|applyPrinterProperties
name|void
name|QPrintPropertiesDialog
operator|::
name|applyPrinterProperties
parameter_list|(
name|QPrinter
modifier|*
name|p
parameter_list|)
block|{
name|widget
operator|.
name|pageSetup
operator|->
name|setPrinter
argument_list|(
name|p
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
if|if
condition|(
name|QCUPSSupport
operator|::
name|isAvailable
argument_list|()
condition|)
block|{
name|m_jobOptions
operator|->
name|setPrinter
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|setupPrinter
name|void
name|QPrintPropertiesDialog
operator|::
name|setupPrinter
parameter_list|()
specifier|const
block|{
name|widget
operator|.
name|pageSetup
operator|->
name|setupPrinter
argument_list|()
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
if|if
condition|(
name|QCUPSSupport
operator|::
name|isAvailable
argument_list|()
condition|)
block|{
name|m_jobOptions
operator|->
name|setupPrinter
argument_list|()
expr_stmt|;
block|}
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|selectPrinter
name|void
name|QPrintPropertiesDialog
operator|::
name|selectPrinter
parameter_list|()
block|{
name|widget
operator|.
name|pageSetup
operator|->
name|selectPrinter
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|selectPdfPsPrinter
name|void
name|QPrintPropertiesDialog
operator|::
name|selectPdfPsPrinter
parameter_list|(
specifier|const
name|QPrinter
modifier|*
name|p
parameter_list|)
block|{
name|widget
operator|.
name|pageSetup
operator|->
name|selectPdfPsPrinter
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|showEvent
name|void
name|QPrintPropertiesDialog
operator|::
name|showEvent
parameter_list|(
name|QShowEvent
modifier|*
name|event
parameter_list|)
block|{
name|event
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|/*      QPrintDialogPrivate      The lower half of the Print Dialog containing the Copies and Options     tabs that expands when the Options button is selected.  */
end_comment
begin_constructor
DECL|function|QPrintDialogPrivate
name|QPrintDialogPrivate
operator|::
name|QPrintDialogPrivate
parameter_list|()
member_init_list|:
name|top
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|bottom
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|buttons
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|collapseButton
argument_list|(
literal|0
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QPrintDialogPrivate
name|QPrintDialogPrivate
operator|::
name|~
name|QPrintDialogPrivate
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|init
name|void
name|QPrintDialogPrivate
operator|::
name|init
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|top
operator|=
operator|new
name|QUnixPrintWidget
argument_list|(
name|q
operator|->
name|printer
argument_list|()
argument_list|,
name|q
argument_list|)
expr_stmt|;
name|bottom
operator|=
operator|new
name|QWidget
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|options
operator|.
name|setupUi
argument_list|(
name|bottom
argument_list|)
expr_stmt|;
name|options
operator|.
name|color
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|color
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/dialogs/qprintdialog/images/status-color.png"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|grayscale
operator|->
name|setIconSize
argument_list|(
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|grayscale
operator|->
name|setIcon
argument_list|(
name|QIcon
argument_list|(
name|QLatin1String
argument_list|(
literal|":/qt-project.org/dialogs/qprintdialog/images/status-gray-scale.png"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
comment|// Add Page Set widget if CUPS is available
if|if
condition|(
name|QCUPSSupport
operator|::
name|isAvailable
argument_list|()
condition|)
block|{
name|options
operator|.
name|pageSetCombo
operator|->
name|addItem
argument_list|(
name|tr
argument_list|(
literal|"All Pages"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|QCUPSSupport
operator|::
name|AllPages
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetCombo
operator|->
name|addItem
argument_list|(
name|tr
argument_list|(
literal|"Odd Pages"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|QCUPSSupport
operator|::
name|OddPages
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetCombo
operator|->
name|addItem
argument_list|(
name|tr
argument_list|(
literal|"Even Pages"
argument_list|)
argument_list|,
name|QVariant
operator|::
name|fromValue
argument_list|(
name|QCUPSSupport
operator|::
name|EvenPages
argument_list|)
argument_list|)
expr_stmt|;
block|}
endif|#
directive|endif
name|top
operator|->
name|d
operator|->
name|setOptionsPane
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|buttons
operator|=
operator|new
name|QDialogButtonBox
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
operator||
name|QDialogButtonBox
operator|::
name|Cancel
argument_list|,
name|Qt
operator|::
name|Horizontal
argument_list|,
name|q
argument_list|)
expr_stmt|;
name|collapseButton
operator|=
operator|new
name|QPushButton
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"&Options>>"
argument_list|)
argument_list|,
name|buttons
argument_list|)
expr_stmt|;
name|buttons
operator|->
name|addButton
argument_list|(
name|collapseButton
argument_list|,
name|QDialogButtonBox
operator|::
name|ResetRole
argument_list|)
expr_stmt|;
name|bottom
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|QPushButton
modifier|*
name|printButton
init|=
name|buttons
operator|->
name|button
argument_list|(
name|QDialogButtonBox
operator|::
name|Ok
argument_list|)
decl_stmt|;
name|printButton
operator|->
name|setText
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"&Print"
argument_list|)
argument_list|)
expr_stmt|;
name|printButton
operator|->
name|setDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|lay
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|q
operator|->
name|setLayout
argument_list|(
name|lay
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
name|top
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
name|bottom
argument_list|)
expr_stmt|;
name|lay
operator|->
name|addWidget
argument_list|(
name|buttons
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|QT_NO_MESSAGEBOX
name|QObject
operator|::
name|connect
argument_list|(
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|accepted
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|accept
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
else|#
directive|else
name|QObject
operator|::
name|connect
argument_list|(
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|accepted
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_checkFields
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QObject
operator|::
name|connect
argument_list|(
name|buttons
argument_list|,
name|SIGNAL
argument_list|(
name|rejected
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|reject
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|options
operator|.
name|reverse
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_chbPrintLastFirstToggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|options
operator|.
name|printSelection
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_togglePageSetCombo
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|options
operator|.
name|printCurrentPage
argument_list|,
name|SIGNAL
argument_list|(
name|toggled
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_togglePageSetCombo
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|collapseButton
argument_list|,
name|SIGNAL
argument_list|(
name|released
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_collapseOrExpandDialog
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// initialize printer options
end_comment
begin_function
DECL|function|selectPrinter
name|void
name|QPrintDialogPrivate
operator|::
name|selectPrinter
parameter_list|(
specifier|const
name|QPrinter
operator|::
name|OutputFormat
name|outputFormat
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|QPrinter
modifier|*
name|p
init|=
name|q
operator|->
name|printer
argument_list|()
decl_stmt|;
name|printerOutputFormat
operator|=
name|outputFormat
expr_stmt|;
if|if
condition|(
name|p
operator|->
name|colorMode
argument_list|()
operator|==
name|QPrinter
operator|::
name|Color
condition|)
name|options
operator|.
name|color
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|options
operator|.
name|grayscale
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|p
operator|->
name|duplex
argument_list|()
condition|)
block|{
case|case
name|QPrinter
operator|::
name|DuplexNone
case|:
name|options
operator|.
name|noDuplex
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrinter
operator|::
name|DuplexLongSide
case|:
case|case
name|QPrinter
operator|::
name|DuplexAuto
case|:
name|options
operator|.
name|duplexLong
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrinter
operator|::
name|DuplexShortSide
case|:
name|options
operator|.
name|duplexShort
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
break|break;
block|}
name|options
operator|.
name|copies
operator|->
name|setValue
argument_list|(
name|p
operator|->
name|copyCount
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|.
name|collate
operator|->
name|setChecked
argument_list|(
name|p
operator|->
name|collateCopies
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|.
name|reverse
operator|->
name|setChecked
argument_list|(
name|p
operator|->
name|pageOrder
argument_list|()
operator|==
name|QPrinter
operator|::
name|LastPageFirst
argument_list|)
expr_stmt|;
if|if
condition|(
name|outputFormat
operator|==
name|QPrinter
operator|::
name|PdfFormat
operator|||
name|options
operator|.
name|printSelection
operator|->
name|isChecked
argument_list|()
operator|||
name|options
operator|.
name|printCurrentPage
operator|->
name|isChecked
argument_list|()
condition|)
name|options
operator|.
name|pageSetCombo
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
else|else
name|options
operator|.
name|pageSetCombo
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|applyPrinterProperties
name|void
name|QPrintDialogPrivate
operator|::
name|applyPrinterProperties
parameter_list|()
block|{
comment|// apply printer options to property dialog
name|top
operator|->
name|d
operator|->
name|applyPrinterProperties
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupPrinter
name|void
name|QPrintDialogPrivate
operator|::
name|setupPrinter
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|QPrinter
modifier|*
name|p
init|=
name|q
operator|->
name|printer
argument_list|()
decl_stmt|;
if|if
condition|(
name|options
operator|.
name|duplex
operator|->
name|isEnabled
argument_list|()
condition|)
block|{
if|if
condition|(
name|options
operator|.
name|noDuplex
operator|->
name|isChecked
argument_list|()
condition|)
name|p
operator|->
name|setDuplex
argument_list|(
name|QPrinter
operator|::
name|DuplexNone
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|options
operator|.
name|duplexLong
operator|->
name|isChecked
argument_list|()
condition|)
name|p
operator|->
name|setDuplex
argument_list|(
name|QPrinter
operator|::
name|DuplexLongSide
argument_list|)
expr_stmt|;
else|else
name|p
operator|->
name|setDuplex
argument_list|(
name|QPrinter
operator|::
name|DuplexShortSide
argument_list|)
expr_stmt|;
block|}
name|p
operator|->
name|setColorMode
argument_list|(
name|options
operator|.
name|color
operator|->
name|isChecked
argument_list|()
condition|?
name|QPrinter
operator|::
name|Color
else|:
name|QPrinter
operator|::
name|GrayScale
argument_list|)
expr_stmt|;
comment|// print range
if|if
condition|(
name|options
operator|.
name|printAll
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|p
operator|->
name|setPrintRange
argument_list|(
name|QPrinter
operator|::
name|AllPages
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFromTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|options
operator|.
name|printSelection
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|p
operator|->
name|setPrintRange
argument_list|(
name|QPrinter
operator|::
name|Selection
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFromTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|options
operator|.
name|printCurrentPage
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|p
operator|->
name|setPrintRange
argument_list|(
name|QPrinter
operator|::
name|CurrentPage
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFromTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|options
operator|.
name|printRange
operator|->
name|isChecked
argument_list|()
condition|)
block|{
name|p
operator|->
name|setPrintRange
argument_list|(
name|QPrinter
operator|::
name|PageRange
argument_list|)
expr_stmt|;
name|p
operator|->
name|setFromTo
argument_list|(
name|options
operator|.
name|from
operator|->
name|value
argument_list|()
argument_list|,
name|qMax
argument_list|(
name|options
operator|.
name|from
operator|->
name|value
argument_list|()
argument_list|,
name|options
operator|.
name|to
operator|->
name|value
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
comment|// page set
if|if
condition|(
name|QCUPSSupport
operator|::
name|isAvailable
argument_list|()
operator|&&
operator|(
name|p
operator|->
name|printRange
argument_list|()
operator|==
name|QPrinter
operator|::
name|AllPages
operator|||
name|p
operator|->
name|printRange
argument_list|()
operator|==
name|QPrinter
operator|::
name|PageRange
operator|)
condition|)
block|{
comment|//If the application is selecting pages and the first page number is even then need to adjust the odd-even accordingly
name|QCUPSSupport
operator|::
name|PageSet
name|pageSet
init|=
name|options
operator|.
name|pageSetCombo
operator|->
name|itemData
argument_list|(
name|options
operator|.
name|pageSetCombo
operator|->
name|currentIndex
argument_list|()
argument_list|)
operator|.
name|value
argument_list|<
name|QCUPSSupport
operator|::
name|PageSet
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|p
operator|->
name|printRange
argument_list|()
operator|==
name|QPrinter
operator|::
name|PageRange
operator|&&
operator|(
name|q
operator|->
name|fromPage
argument_list|()
operator|%
literal|2
operator|==
literal|0
operator|)
condition|)
block|{
if|if
condition|(
name|pageSet
operator|==
name|QCUPSSupport
operator|::
name|OddPages
condition|)
name|QCUPSSupport
operator|::
name|setPageSet
argument_list|(
name|p
argument_list|,
name|QCUPSSupport
operator|::
name|EvenPages
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|pageSet
operator|==
name|QCUPSSupport
operator|::
name|EvenPages
condition|)
name|QCUPSSupport
operator|::
name|setPageSet
argument_list|(
name|p
argument_list|,
name|QCUPSSupport
operator|::
name|OddPages
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|pageSet
operator|!=
name|QCUPSSupport
operator|::
name|AllPages
condition|)
block|{
name|QCUPSSupport
operator|::
name|setPageSet
argument_list|(
name|p
argument_list|,
name|pageSet
argument_list|)
expr_stmt|;
block|}
block|}
endif|#
directive|endif
comment|// copies
name|p
operator|->
name|setCopyCount
argument_list|(
name|options
operator|.
name|copies
operator|->
name|value
argument_list|()
argument_list|)
expr_stmt|;
name|p
operator|->
name|setCollateCopies
argument_list|(
name|options
operator|.
name|collate
operator|->
name|isChecked
argument_list|()
argument_list|)
expr_stmt|;
name|top
operator|->
name|d
operator|->
name|setupPrinter
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_chbPrintLastFirstToggled
name|void
name|QPrintDialogPrivate
operator|::
name|_q_chbPrintLastFirstToggled
parameter_list|(
name|bool
name|checked
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|checked
condition|)
name|q
operator|->
name|printer
argument_list|()
operator|->
name|setPageOrder
argument_list|(
name|QPrinter
operator|::
name|LastPageFirst
argument_list|)
expr_stmt|;
else|else
name|q
operator|->
name|printer
argument_list|()
operator|->
name|setPageOrder
argument_list|(
name|QPrinter
operator|::
name|FirstPageFirst
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_togglePageSetCombo
name|void
name|QPrintDialogPrivate
operator|::
name|_q_togglePageSetCombo
parameter_list|(
name|bool
name|checked
parameter_list|)
block|{
if|if
condition|(
name|printerOutputFormat
operator|==
name|QPrinter
operator|::
name|PdfFormat
condition|)
return|return;
name|options
operator|.
name|pageSetCombo
operator|->
name|setDisabled
argument_list|(
name|checked
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_collapseOrExpandDialog
name|void
name|QPrintDialogPrivate
operator|::
name|_q_collapseOrExpandDialog
parameter_list|()
block|{
name|int
name|collapseHeight
init|=
literal|0
decl_stmt|;
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|QWidget
modifier|*
name|widgetToHide
init|=
name|bottom
decl_stmt|;
if|if
condition|(
name|widgetToHide
operator|->
name|isVisible
argument_list|()
condition|)
block|{
name|collapseButton
operator|->
name|setText
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"&Options>>"
argument_list|)
argument_list|)
expr_stmt|;
name|collapseHeight
operator|=
name|widgetToHide
operator|->
name|y
argument_list|()
operator|+
name|widgetToHide
operator|->
name|height
argument_list|()
operator|-
operator|(
name|top
operator|->
name|y
argument_list|()
operator|+
name|top
operator|->
name|height
argument_list|()
operator|)
expr_stmt|;
block|}
else|else
name|collapseButton
operator|->
name|setText
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"&Options<<"
argument_list|)
argument_list|)
expr_stmt|;
name|widgetToHide
operator|->
name|setVisible
argument_list|(
operator|!
name|widgetToHide
operator|->
name|isVisible
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|widgetToHide
operator|->
name|isVisible
argument_list|()
condition|)
block|{
comment|// make it shrink
name|q
operator|->
name|layout
argument_list|()
operator|->
name|activate
argument_list|()
expr_stmt|;
name|q
operator|->
name|resize
argument_list|(
name|QSize
argument_list|(
name|q
operator|->
name|width
argument_list|()
argument_list|,
name|q
operator|->
name|height
argument_list|()
operator|-
name|collapseHeight
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_MESSAGEBOX
end_ifndef
begin_function
DECL|function|_q_checkFields
name|void
name|QPrintDialogPrivate
operator|::
name|_q_checkFields
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|top
operator|->
name|d
operator|->
name|checkFields
argument_list|()
condition|)
name|q
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_MESSAGEBOX
end_comment
begin_function
DECL|function|updateWidgets
name|void
name|QPrintDialogPrivate
operator|::
name|updateWidgets
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|options
operator|.
name|gbPrintRange
operator|->
name|setVisible
argument_list|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintPageRange
argument_list|)
operator|||
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintSelection
argument_list|)
operator|||
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintCurrentPage
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|printRange
operator|->
name|setEnabled
argument_list|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintPageRange
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|printSelection
operator|->
name|setVisible
argument_list|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintSelection
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|printCurrentPage
operator|->
name|setVisible
argument_list|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintCurrentPage
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|collate
operator|->
name|setVisible
argument_list|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintCollateCopies
argument_list|)
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
if|if
condition|(
name|QCUPSSupport
operator|::
name|isAvailable
argument_list|()
condition|)
block|{
comment|// Don't display Page Set if only Selection or Current Page are enabled
if|if
condition|(
operator|!
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintPageRange
argument_list|)
operator|&&
operator|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintSelection
argument_list|)
operator|||
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintCurrentPage
argument_list|)
operator|)
condition|)
block|{
name|options
operator|.
name|pageSetCombo
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetLabel
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|options
operator|.
name|pageSetCombo
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetLabel
operator|->
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
endif|#
directive|endif
switch|switch
condition|(
name|q
operator|->
name|printRange
argument_list|()
condition|)
block|{
case|case
name|QPrintDialog
operator|::
name|AllPages
case|:
name|options
operator|.
name|printAll
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetCombo
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrintDialog
operator|::
name|Selection
case|:
name|options
operator|.
name|printSelection
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetCombo
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrintDialog
operator|::
name|PageRange
case|:
name|options
operator|.
name|printRange
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetCombo
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrintDialog
operator|::
name|CurrentPage
case|:
if|if
condition|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintCurrentPage
argument_list|)
condition|)
block|{
name|options
operator|.
name|printCurrentPage
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|options
operator|.
name|pageSetCombo
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
break|break;
block|}
specifier|const
name|int
name|minPage
init|=
name|qMax
argument_list|(
literal|1
argument_list|,
name|qMin
argument_list|(
name|q
operator|->
name|minPage
argument_list|()
argument_list|,
name|q
operator|->
name|maxPage
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
specifier|const
name|int
name|maxPage
init|=
name|qMax
argument_list|(
literal|1
argument_list|,
name|q
operator|->
name|maxPage
argument_list|()
operator|==
name|INT_MAX
condition|?
literal|9999
else|:
name|q
operator|->
name|maxPage
argument_list|()
argument_list|)
decl_stmt|;
name|options
operator|.
name|from
operator|->
name|setMinimum
argument_list|(
name|minPage
argument_list|)
expr_stmt|;
name|options
operator|.
name|to
operator|->
name|setMinimum
argument_list|(
name|minPage
argument_list|)
expr_stmt|;
name|options
operator|.
name|from
operator|->
name|setMaximum
argument_list|(
name|maxPage
argument_list|)
expr_stmt|;
name|options
operator|.
name|to
operator|->
name|setMaximum
argument_list|(
name|maxPage
argument_list|)
expr_stmt|;
name|options
operator|.
name|from
operator|->
name|setValue
argument_list|(
name|q
operator|->
name|fromPage
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|.
name|to
operator|->
name|setValue
argument_list|(
name|q
operator|->
name|toPage
argument_list|()
argument_list|)
expr_stmt|;
name|top
operator|->
name|d
operator|->
name|updateWidget
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setTabs
name|void
name|QPrintDialogPrivate
operator|::
name|setTabs
parameter_list|(
specifier|const
name|QList
argument_list|<
name|QWidget
modifier|*
argument_list|>
modifier|&
name|tabWidgets
parameter_list|)
block|{
name|QList
argument_list|<
name|QWidget
modifier|*
argument_list|>
operator|::
name|ConstIterator
name|iter
init|=
name|tabWidgets
operator|.
name|begin
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|!=
name|tabWidgets
operator|.
name|constEnd
argument_list|()
condition|)
block|{
name|QWidget
modifier|*
name|tab
init|=
operator|*
name|iter
decl_stmt|;
name|options
operator|.
name|tabs
operator|->
name|addTab
argument_list|(
name|tab
argument_list|,
name|tab
operator|->
name|windowTitle
argument_list|()
argument_list|)
expr_stmt|;
operator|++
name|iter
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|/*      QPrintDialog      The main Print Dialog.  */
end_comment
begin_constructor
DECL|function|QPrintDialog
name|QPrintDialog
operator|::
name|QPrintDialog
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QAbstractPrintDialog
argument_list|(
operator|*
operator|(
operator|new
name|QPrintDialogPrivate
operator|)
argument_list|,
name|printer
argument_list|,
name|parent
argument_list|)
block|{
name|Q_D
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|d
operator|->
name|init
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*!     Constructs a print dialog with the given \a parent. */
end_comment
begin_constructor
DECL|function|QPrintDialog
name|QPrintDialog
operator|::
name|QPrintDialog
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QAbstractPrintDialog
argument_list|(
operator|*
operator|(
operator|new
name|QPrintDialogPrivate
operator|)
argument_list|,
literal|0
argument_list|,
name|parent
argument_list|)
block|{
name|Q_D
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|d
operator|->
name|init
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QPrintDialog
name|QPrintDialog
operator|::
name|~
name|QPrintDialog
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|setVisible
name|void
name|QPrintDialog
operator|::
name|setVisible
parameter_list|(
name|bool
name|visible
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|visible
condition|)
name|d
operator|->
name|updateWidgets
argument_list|()
expr_stmt|;
name|QAbstractPrintDialog
operator|::
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|exec
name|int
name|QPrintDialog
operator|::
name|exec
parameter_list|()
block|{
return|return
name|QDialog
operator|::
name|exec
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|accept
name|void
name|QPrintDialog
operator|::
name|accept
parameter_list|()
block|{
name|Q_D
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|d
operator|->
name|setupPrinter
argument_list|()
expr_stmt|;
name|QDialog
operator|::
name|accept
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|/*      QUnixPrintWidget&& QUnixPrintWidgetPrivate      The upper half of the Print Dialog containing the Printer Selection widgets  */
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_UNIX
argument_list|)
end_if
begin_comment
comment|/*! \internal */
end_comment
begin_constructor
DECL|function|QUnixPrintWidgetPrivate
name|QUnixPrintWidgetPrivate
operator|::
name|QUnixPrintWidgetPrivate
parameter_list|(
name|QUnixPrintWidget
modifier|*
name|p
parameter_list|,
name|QPrinter
modifier|*
name|prn
parameter_list|)
member_init_list|:
name|parent
argument_list|(
name|p
argument_list|)
member_init_list|,
name|propertiesDialog
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|printer
argument_list|(
name|prn
argument_list|)
member_init_list|,
name|optionsPane
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|filePrintersAdded
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|propertiesDialogShown
argument_list|(
literal|false
argument_list|)
block|{
name|q
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|parent
condition|)
name|q
operator|=
name|qobject_cast
argument_list|<
name|QAbstractPrintDialog
operator|*
argument_list|>
argument_list|(
name|parent
operator|->
name|parent
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|setupUi
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|int
name|currentPrinterIndex
init|=
literal|0
decl_stmt|;
name|QList
argument_list|<
name|QPrinterInfo
argument_list|>
name|printers
init|=
name|QPrinterInfo
operator|::
name|availablePrinters
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|printers
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|QPrinterInfo
name|pInfo
init|=
name|printers
operator|.
name|at
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|widget
operator|.
name|printers
operator|->
name|addItem
argument_list|(
name|pInfo
operator|.
name|printerName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|pInfo
operator|.
name|isDefault
argument_list|()
condition|)
name|currentPrinterIndex
operator|=
name|i
expr_stmt|;
block|}
name|widget
operator|.
name|properties
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_FILESYSTEMMODEL
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_COMPLETER
argument_list|)
name|QFileSystemModel
modifier|*
name|fsm
init|=
operator|new
name|QFileSystemModel
argument_list|(
name|widget
operator|.
name|filename
argument_list|)
decl_stmt|;
name|fsm
operator|->
name|setRootPath
argument_list|(
name|QDir
operator|::
name|homePath
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|filename
operator|->
name|setCompleter
argument_list|(
operator|new
name|QCompleter
argument_list|(
name|fsm
argument_list|,
name|widget
operator|.
name|filename
argument_list|)
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|_q_printerChanged
argument_list|(
name|currentPrinterIndex
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|widget
operator|.
name|printers
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|parent
argument_list|,
name|SLOT
argument_list|(
name|_q_printerChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|widget
operator|.
name|fileBrowser
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|parent
argument_list|,
name|SLOT
argument_list|(
name|_q_btnBrowseClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|widget
operator|.
name|properties
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|parent
argument_list|,
name|SLOT
argument_list|(
name|_q_btnPropertiesClicked
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// disable features that QPrinter does not yet support.
name|widget
operator|.
name|preview
operator|->
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|updateWidget
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|updateWidget
parameter_list|()
block|{
specifier|const
name|bool
name|printToFile
init|=
name|q
operator|==
literal|0
operator|||
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintToFile
argument_list|)
decl_stmt|;
if|if
condition|(
name|printToFile
operator|&&
operator|!
name|filePrintersAdded
condition|)
block|{
if|if
condition|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
condition|)
name|widget
operator|.
name|printers
operator|->
name|insertSeparator
argument_list|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|printers
operator|->
name|addItem
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Print to File (PDF)"
argument_list|)
argument_list|)
expr_stmt|;
name|filePrintersAdded
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|printToFile
operator|&&
name|filePrintersAdded
condition|)
block|{
name|widget
operator|.
name|printers
operator|->
name|removeItem
argument_list|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|widget
operator|.
name|printers
operator|->
name|removeItem
argument_list|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
condition|)
name|widget
operator|.
name|printers
operator|->
name|removeItem
argument_list|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// remove separator
name|filePrintersAdded
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|printer
operator|&&
name|filePrintersAdded
operator|&&
operator|(
name|printer
operator|->
name|outputFormat
argument_list|()
operator|!=
name|QPrinter
operator|::
name|NativeFormat
operator|||
name|printer
operator|->
name|printerName
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
if|if
condition|(
name|printer
operator|->
name|outputFormat
argument_list|()
operator|==
name|QPrinter
operator|::
name|PdfFormat
condition|)
name|widget
operator|.
name|printers
operator|->
name|setCurrentIndex
argument_list|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|widget
operator|.
name|filename
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|.
name|lOutput
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|widget
operator|.
name|filename
operator|->
name|setVisible
argument_list|(
name|printToFile
argument_list|)
expr_stmt|;
name|widget
operator|.
name|lOutput
operator|->
name|setVisible
argument_list|(
name|printToFile
argument_list|)
expr_stmt|;
name|widget
operator|.
name|fileBrowser
operator|->
name|setVisible
argument_list|(
name|printToFile
argument_list|)
expr_stmt|;
name|widget
operator|.
name|properties
operator|->
name|setVisible
argument_list|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QAbstractPrintDialog
operator|::
name|PrintShowPageSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_destructor
DECL|function|~QUnixPrintWidgetPrivate
name|QUnixPrintWidgetPrivate
operator|::
name|~
name|QUnixPrintWidgetPrivate
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|_q_printerChanged
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|_q_printerChanged
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|index
operator|<
literal|0
condition|)
return|return;
specifier|const
name|int
name|printerCount
init|=
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
decl_stmt|;
name|widget
operator|.
name|filename
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|widget
operator|.
name|lOutput
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Reset properties dialog when printer is changed
if|if
condition|(
name|propertiesDialog
condition|)
block|{
operator|delete
name|propertiesDialog
expr_stmt|;
name|propertiesDialog
operator|=
literal|0
expr_stmt|;
name|propertiesDialogShown
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|filePrintersAdded
condition|)
block|{
name|Q_ASSERT
argument_list|(
name|index
operator|!=
name|printerCount
operator|-
literal|2
argument_list|)
expr_stmt|;
comment|// separator
if|if
condition|(
name|index
operator|==
name|printerCount
operator|-
literal|1
condition|)
block|{
comment|// PDF
name|widget
operator|.
name|location
operator|->
name|setText
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Local file"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|type
operator|->
name|setText
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Write PDF file"
argument_list|)
argument_list|)
expr_stmt|;
name|widget
operator|.
name|properties
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|widget
operator|.
name|filename
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QString
name|filename
init|=
name|widget
operator|.
name|filename
operator|->
name|text
argument_list|()
decl_stmt|;
name|widget
operator|.
name|filename
operator|->
name|setText
argument_list|(
name|filename
argument_list|)
expr_stmt|;
name|widget
operator|.
name|lOutput
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|optionsPane
condition|)
name|optionsPane
operator|->
name|selectPrinter
argument_list|(
name|QPrinter
operator|::
name|PdfFormat
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
if|if
condition|(
name|printer
condition|)
block|{
name|QString
name|printerName
init|=
name|widget
operator|.
name|printers
operator|->
name|itemText
argument_list|(
name|index
argument_list|)
decl_stmt|;
name|printer
operator|->
name|setPrinterName
argument_list|(
name|printerName
argument_list|)
expr_stmt|;
name|QPrinterInfo
name|printerInfo
init|=
name|QPrinterInfo
operator|::
name|printerInfo
argument_list|(
name|printer
operator|->
name|printerName
argument_list|()
argument_list|)
decl_stmt|;
name|widget
operator|.
name|location
operator|->
name|setText
argument_list|(
name|printerInfo
operator|.
name|location
argument_list|()
argument_list|)
expr_stmt|;
name|widget
operator|.
name|type
operator|->
name|setText
argument_list|(
name|printerInfo
operator|.
name|makeAndModel
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|optionsPane
condition|)
name|optionsPane
operator|->
name|selectPrinter
argument_list|(
name|QPrinter
operator|::
name|NativeFormat
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setOptionsPane
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|setOptionsPane
parameter_list|(
name|QPrintDialogPrivate
modifier|*
name|pane
parameter_list|)
block|{
name|optionsPane
operator|=
name|pane
expr_stmt|;
if|if
condition|(
name|optionsPane
condition|)
name|optionsPane
operator|->
name|selectPrinter
argument_list|(
name|QPrinter
operator|::
name|NativeFormat
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_btnBrowseClicked
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|_q_btnBrowseClicked
parameter_list|()
block|{
name|QString
name|filename
init|=
name|widget
operator|.
name|filename
operator|->
name|text
argument_list|()
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_FILEDIALOG
name|filename
operator|=
name|QFileDialog
operator|::
name|getSaveFileName
argument_list|(
name|parent
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Print To File ..."
argument_list|)
argument_list|,
name|filename
argument_list|,
name|QString
argument_list|()
argument_list|,
literal|0
argument_list|,
name|QFileDialog
operator|::
name|DontConfirmOverwrite
argument_list|)
expr_stmt|;
else|#
directive|else
name|filename
operator|.
name|clear
argument_list|()
expr_stmt|;
endif|#
directive|endif
if|if
condition|(
operator|!
name|filename
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|widget
operator|.
name|filename
operator|->
name|setText
argument_list|(
name|filename
argument_list|)
expr_stmt|;
name|widget
operator|.
name|printers
operator|->
name|setCurrentIndex
argument_list|(
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// the pdf one
block|}
block|}
end_function
begin_function
DECL|function|applyPrinterProperties
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|applyPrinterProperties
parameter_list|()
block|{
if|if
condition|(
name|printer
operator|==
literal|0
condition|)
return|return;
if|if
condition|(
name|printer
operator|->
name|outputFileName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QString
name|home
init|=
name|QDir
operator|::
name|homePath
argument_list|()
decl_stmt|;
name|QString
name|cur
init|=
name|QDir
operator|::
name|currentPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|home
operator|.
name|at
argument_list|(
name|home
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
operator|!=
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
condition|)
name|home
operator|+=
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
if|if
condition|(
name|cur
operator|.
name|at
argument_list|(
name|cur
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
operator|!=
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
condition|)
name|cur
operator|+=
name|QLatin1Char
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
if|if
condition|(
name|cur
operator|.
name|left
argument_list|(
name|home
operator|.
name|length
argument_list|()
argument_list|)
operator|!=
name|home
condition|)
name|cur
operator|=
name|home
expr_stmt|;
if|if
condition|(
name|QGuiApplication
operator|::
name|platformName
argument_list|()
operator|==
name|QLatin1String
argument_list|(
literal|"xcb"
argument_list|)
condition|)
block|{
if|if
condition|(
name|printer
operator|->
name|docName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|cur
operator|+=
name|QLatin1String
argument_list|(
literal|"print.pdf"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|QRegExp
name|re
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"(.*)\\.\\S+"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|re
operator|.
name|exactMatch
argument_list|(
name|printer
operator|->
name|docName
argument_list|()
argument_list|)
condition|)
name|cur
operator|+=
name|re
operator|.
name|cap
argument_list|(
literal|1
argument_list|)
expr_stmt|;
else|else
name|cur
operator|+=
name|printer
operator|->
name|docName
argument_list|()
expr_stmt|;
name|cur
operator|+=
name|QLatin1String
argument_list|(
literal|".pdf"
argument_list|)
expr_stmt|;
block|}
block|}
comment|// xcb
name|widget
operator|.
name|filename
operator|->
name|setText
argument_list|(
name|cur
argument_list|)
expr_stmt|;
block|}
else|else
name|widget
operator|.
name|filename
operator|->
name|setText
argument_list|(
name|printer
operator|->
name|outputFileName
argument_list|()
argument_list|)
expr_stmt|;
name|QString
name|printerName
init|=
name|printer
operator|->
name|printerName
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|printerName
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|widget
operator|.
name|printers
operator|->
name|itemText
argument_list|(
name|i
argument_list|)
operator|==
name|printerName
condition|)
block|{
name|widget
operator|.
name|printers
operator|->
name|setCurrentIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
comment|// PDF and PS printers are not added to the dialog yet, we'll handle those cases in QUnixPrintWidgetPrivate::updateWidget
if|if
condition|(
name|propertiesDialog
condition|)
name|propertiesDialog
operator|->
name|applyPrinterProperties
argument_list|(
name|printer
argument_list|)
expr_stmt|;
block|}
end_function
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_MESSAGEBOX
end_ifndef
begin_function
DECL|function|checkFields
name|bool
name|QUnixPrintWidgetPrivate
operator|::
name|checkFields
parameter_list|()
block|{
if|if
condition|(
name|widget
operator|.
name|filename
operator|->
name|isEnabled
argument_list|()
condition|)
block|{
name|QString
name|file
init|=
name|widget
operator|.
name|filename
operator|->
name|text
argument_list|()
decl_stmt|;
name|QFile
name|f
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|QFileInfo
name|fi
argument_list|(
name|f
argument_list|)
decl_stmt|;
name|bool
name|exists
init|=
name|fi
operator|.
name|exists
argument_list|()
decl_stmt|;
name|bool
name|opened
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|exists
operator|&&
name|fi
operator|.
name|isDir
argument_list|()
condition|)
block|{
name|QMessageBox
operator|::
name|warning
argument_list|(
name|q
argument_list|,
name|q
operator|->
name|windowTitle
argument_list|()
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"%1 is a directory.\nPlease choose a different file name."
argument_list|)
operator|.
name|arg
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
operator|(
name|exists
operator|&&
operator|!
name|fi
operator|.
name|isWritable
argument_list|()
operator|)
operator|||
operator|!
operator|(
name|opened
operator|=
name|f
operator|.
name|open
argument_list|(
name|QFile
operator|::
name|Append
argument_list|)
operator|)
condition|)
block|{
name|QMessageBox
operator|::
name|warning
argument_list|(
name|q
argument_list|,
name|q
operator|->
name|windowTitle
argument_list|()
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"File %1 is not writable.\nPlease choose a different file name."
argument_list|)
operator|.
name|arg
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
name|exists
condition|)
block|{
name|int
name|ret
init|=
name|QMessageBox
operator|::
name|question
argument_list|(
name|q
argument_list|,
name|q
operator|->
name|windowTitle
argument_list|()
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"%1 already exists.\nDo you want to overwrite it?"
argument_list|)
operator|.
name|arg
argument_list|(
name|file
argument_list|)
argument_list|,
name|QMessageBox
operator|::
name|Yes
operator||
name|QMessageBox
operator|::
name|No
argument_list|,
name|QMessageBox
operator|::
name|No
argument_list|)
decl_stmt|;
if|if
condition|(
name|ret
operator|==
name|QMessageBox
operator|::
name|No
condition|)
return|return
literal|false
return|;
block|}
if|if
condition|(
name|opened
condition|)
block|{
name|f
operator|.
name|close
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|exists
condition|)
name|f
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_CUPS
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_NO_LIBRARY
argument_list|)
name|QCUPSSupport
operator|::
name|PagesPerSheet
name|pagesPerSheet
init|=
name|propertiesDialog
operator|->
name|widget
operator|.
name|pageSetup
operator|->
name|widget
operator|.
name|pagesPerSheetCombo
operator|->
name|currentData
argument_list|()
operator|.
name|value
argument_list|<
name|QCUPSSupport
operator|::
name|PagesPerSheet
argument_list|>
argument_list|()
decl_stmt|;
name|QCUPSSupport
operator|::
name|PageSet
name|pageSet
init|=
name|optionsPane
operator|->
name|options
operator|.
name|pageSetCombo
operator|->
name|currentData
argument_list|()
operator|.
name|value
argument_list|<
name|QCUPSSupport
operator|::
name|PageSet
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|propertiesDialogShown
operator|&&
name|pagesPerSheet
operator|!=
name|QCUPSSupport
operator|::
name|OnePagePerSheet
operator|&&
name|pageSet
operator|!=
name|QCUPSSupport
operator|::
name|AllPages
condition|)
block|{
name|QMessageBox
operator|::
name|warning
argument_list|(
name|q
argument_list|,
name|q
operator|->
name|windowTitle
argument_list|()
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Options 'Pages Per Sheet' and 'Page Set' cannot be used together.\nPlease turn one of those options off."
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
endif|#
directive|endif
comment|// Every test passed. Accept the dialog.
return|return
literal|true
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_MESSAGEBOX
end_comment
begin_function
DECL|function|setupPrinterProperties
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|setupPrinterProperties
parameter_list|()
block|{
if|if
condition|(
name|propertiesDialog
condition|)
operator|delete
name|propertiesDialog
expr_stmt|;
name|propertiesDialog
operator|=
operator|new
name|QPrintPropertiesDialog
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|propertiesDialog
operator|->
name|setResult
argument_list|(
name|QDialog
operator|::
name|Rejected
argument_list|)
expr_stmt|;
name|propertiesDialogShown
operator|=
literal|false
expr_stmt|;
name|propertiesDialog
operator|->
name|applyPrinterProperties
argument_list|(
name|q
operator|->
name|printer
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintToFile
argument_list|)
operator|&&
operator|(
name|widget
operator|.
name|printers
operator|->
name|currentIndex
argument_list|()
operator|==
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
operator|-
literal|1
operator|)
condition|)
block|{
comment|// PDF
name|propertiesDialog
operator|->
name|selectPdfPsPrinter
argument_list|(
name|q
operator|->
name|printer
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
name|propertiesDialog
operator|->
name|selectPrinter
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_btnPropertiesClicked
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|_q_btnPropertiesClicked
parameter_list|()
block|{
if|if
condition|(
operator|!
name|propertiesDialog
condition|)
name|setupPrinterProperties
argument_list|()
expr_stmt|;
name|propertiesDialog
operator|->
name|exec
argument_list|()
expr_stmt|;
if|if
condition|(
name|propertiesDialog
operator|->
name|result
argument_list|()
operator|==
name|QDialog
operator|::
name|Rejected
condition|)
block|{
comment|// If properties dialog was rejected the dialog is deleted and
comment|// the properties are set to defaults when printer is setup
operator|delete
name|propertiesDialog
expr_stmt|;
name|propertiesDialog
operator|=
literal|0
expr_stmt|;
name|propertiesDialogShown
operator|=
literal|false
expr_stmt|;
block|}
else|else
comment|// properties dialog was shown and accepted
name|propertiesDialogShown
operator|=
literal|true
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupPrinter
name|void
name|QUnixPrintWidgetPrivate
operator|::
name|setupPrinter
parameter_list|()
block|{
specifier|const
name|int
name|printerCount
init|=
name|widget
operator|.
name|printers
operator|->
name|count
argument_list|()
decl_stmt|;
specifier|const
name|int
name|index
init|=
name|widget
operator|.
name|printers
operator|->
name|currentIndex
argument_list|()
decl_stmt|;
if|if
condition|(
name|filePrintersAdded
operator|&&
name|index
operator|==
name|printerCount
operator|-
literal|1
condition|)
block|{
comment|// PDF
name|printer
operator|->
name|setPrinterName
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|index
operator|!=
name|printerCount
operator|-
literal|2
argument_list|)
expr_stmt|;
comment|// separator
name|printer
operator|->
name|setOutputFormat
argument_list|(
name|QPrinter
operator|::
name|PdfFormat
argument_list|)
expr_stmt|;
name|QString
name|path
init|=
name|widget
operator|.
name|filename
operator|->
name|text
argument_list|()
decl_stmt|;
if|if
condition|(
name|QDir
operator|::
name|isRelativePath
argument_list|(
name|path
argument_list|)
condition|)
name|path
operator|=
name|QDir
operator|::
name|homePath
argument_list|()
operator|+
name|QDir
operator|::
name|separator
argument_list|()
operator|+
name|path
expr_stmt|;
name|printer
operator|->
name|setOutputFileName
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printer
operator|->
name|setPrinterName
argument_list|(
name|widget
operator|.
name|printers
operator|->
name|currentText
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setOutputFileName
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|propertiesDialog
condition|)
name|setupPrinterProperties
argument_list|()
expr_stmt|;
if|if
condition|(
name|propertiesDialog
operator|->
name|result
argument_list|()
operator|==
name|QDialog
operator|::
name|Accepted
operator|||
operator|!
name|propertiesDialogShown
condition|)
name|propertiesDialog
operator|->
name|setupPrinter
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|/*! \internal */
end_comment
begin_constructor
DECL|function|QUnixPrintWidget
name|QUnixPrintWidget
operator|::
name|QUnixPrintWidget
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QWidget
argument_list|(
name|parent
argument_list|)
member_init_list|,
name|d
argument_list|(
operator|new
name|QUnixPrintWidgetPrivate
argument_list|(
name|this
argument_list|,
name|printer
argument_list|)
argument_list|)
block|{
name|d
operator|->
name|applyPrinterProperties
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*! \internal */
end_comment
begin_destructor
DECL|function|~QUnixPrintWidget
name|QUnixPrintWidget
operator|::
name|~
name|QUnixPrintWidget
parameter_list|()
block|{
operator|delete
name|d
expr_stmt|;
block|}
end_destructor
begin_comment
comment|/*! \internal      Updates the printer with the states held in the QUnixPrintWidget. */
end_comment
begin_function
DECL|function|updatePrinter
name|void
name|QUnixPrintWidget
operator|::
name|updatePrinter
parameter_list|()
block|{
name|d
operator|->
name|setupPrinter
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|////////////////////////////////////////////////////////////////////////////////
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// defined (Q_OS_UNIX)
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_include
include|#
directive|include
file|"moc_qprintdialog.cpp"
end_include
begin_include
include|#
directive|include
file|"qprintdialog_unix.moc"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_PRINTDIALOG
end_comment
end_unit
