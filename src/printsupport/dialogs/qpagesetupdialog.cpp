begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<private/qabstractpagesetupdialog_p.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_PRINTDIALOG
end_ifndef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_comment
comment|/*!     \class QPageSetupDialog      \brief The QPageSetupDialog class provides a configuration dialog     for the page-related options on a printer.      \ingroup standard-dialogs     \ingroup printing     \inmodule QtPrintSupport      On Windows and Mac OS X the page setup dialog is implemented using     the native page setup dialogs.      Note that on Windows and Mac OS X custom paper sizes won't be     reflected in the native page setup dialogs. Additionally, custom     page margins set on a QPrinter won't show in the native Mac OS X     page setup dialog.      \sa QPrinter, QPrintDialog */
end_comment
begin_comment
comment|/*!     \fn QPageSetupDialog::QPageSetupDialog(QPrinter *printer, QWidget *parent)      Constructs a page setup dialog that configures \a printer with \a     parent as the parent widget. */
end_comment
begin_comment
comment|/*!     \since 4.5      \fn QPageSetupDialog::QPageSetupDialog(QWidget *parent)      Constructs a page setup dialog that configures a default-constructed     QPrinter with \a parent as the parent widget.      \sa printer() */
end_comment
begin_comment
comment|/*!     \fn QPrinter *QPageSetupDialog::printer()      Returns the printer that was passed to the QPageSetupDialog     constructor. */
end_comment
begin_comment
comment|// hack
end_comment
begin_class
DECL|class|QPageSetupDialogPrivate
class|class
name|QPageSetupDialogPrivate
super|:
specifier|public
name|QAbstractPageSetupDialogPrivate
block|{
block|}
class|;
end_class
begin_comment
comment|/*!     \enum QPageSetupDialog::PageSetupDialogOption     \since 4.4      Used to specify options to the page setup dialog      This value is obsolete and does nothing since Qt 4.5:      \value DontUseSheet In previous versions of QDialog::exec() the     page setup dialog would create a sheet by default if the dialog     was given a parent.  This is no longer supported from Qt 4.5.  If     you want to use sheets, use QPageSetupDialog::open() instead.      \omitvalue None     \omitvalue OwnsPrinter */
end_comment
begin_comment
comment|/*!     Sets the given \a option to be enabled if \a on is true;     otherwise, clears the given \a option.      \sa options, testOption() */
end_comment
begin_function
DECL|function|setOption
name|void
name|QPageSetupDialog
operator|::
name|setOption
parameter_list|(
name|PageSetupDialogOption
name|option
parameter_list|,
name|bool
name|on
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QPageSetupDialog
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|d
operator|->
name|opts
operator|&
name|option
operator|)
operator|!=
operator|!
name|on
condition|)
name|setOptions
argument_list|(
name|d
operator|->
name|opts
operator|^
name|option
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     Returns true if the given \a option is enabled; otherwise, returns     false.      \sa options, setOption() */
end_comment
begin_function
DECL|function|testOption
name|bool
name|QPageSetupDialog
operator|::
name|testOption
parameter_list|(
name|PageSetupDialogOption
name|option
parameter_list|)
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QPageSetupDialog
argument_list|)
expr_stmt|;
return|return
operator|(
name|d
operator|->
name|opts
operator|&
name|option
operator|)
operator|!=
literal|0
return|;
block|}
end_function
begin_comment
comment|/*!     \property QPageSetupDialog::options     \brief the various options that affect the look and feel of the dialog     \since 4.5      By default, all options are disabled.      Options should be set before showing the dialog. Setting them while the     dialog is visible is not guaranteed to have an immediate effect on the     dialog (depending on the option and on the platform).      \sa setOption(), testOption() */
end_comment
begin_function
DECL|function|setOptions
name|void
name|QPageSetupDialog
operator|::
name|setOptions
parameter_list|(
name|PageSetupDialogOptions
name|options
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QPageSetupDialog
argument_list|)
expr_stmt|;
name|PageSetupDialogOptions
name|changed
init|=
operator|(
name|options
operator|^
name|d
operator|->
name|opts
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|changed
condition|)
return|return;
name|d
operator|->
name|opts
operator|=
name|options
expr_stmt|;
block|}
end_function
begin_function
DECL|function|options
name|QPageSetupDialog
operator|::
name|PageSetupDialogOptions
name|QPageSetupDialog
operator|::
name|options
parameter_list|()
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QPageSetupDialog
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|opts
return|;
block|}
end_function
begin_comment
comment|/*!     \obsolete      Use setOption(\a option, true) instead. */
end_comment
begin_function
DECL|function|addEnabledOption
name|void
name|QPageSetupDialog
operator|::
name|addEnabledOption
parameter_list|(
name|PageSetupDialogOption
name|option
parameter_list|)
block|{
name|setOption
argument_list|(
name|option
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \obsolete      Use setOptions(\a options) instead. */
end_comment
begin_function
DECL|function|setEnabledOptions
name|void
name|QPageSetupDialog
operator|::
name|setEnabledOptions
parameter_list|(
name|PageSetupDialogOptions
name|options
parameter_list|)
block|{
name|setOptions
argument_list|(
name|options
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \obsolete      Use options() instead. */
end_comment
begin_function
DECL|function|enabledOptions
name|QPageSetupDialog
operator|::
name|PageSetupDialogOptions
name|QPageSetupDialog
operator|::
name|enabledOptions
parameter_list|()
specifier|const
block|{
return|return
name|options
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*!     \obsolete      Use testOption(\a option) instead. */
end_comment
begin_function
DECL|function|isOptionEnabled
name|bool
name|QPageSetupDialog
operator|::
name|isOptionEnabled
parameter_list|(
name|PageSetupDialogOption
name|option
parameter_list|)
specifier|const
block|{
return|return
name|testOption
argument_list|(
name|option
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     \overload     \since 4.5      Opens the dialog and connects its accepted() signal to the slot specified     by \a receiver and \a member.      The signal will be disconnected from the slot when the dialog is closed. */
end_comment
begin_function
DECL|function|open
name|void
name|QPageSetupDialog
operator|::
name|open
parameter_list|(
name|QObject
modifier|*
name|receiver
parameter_list|,
specifier|const
name|char
modifier|*
name|member
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QPageSetupDialog
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|accepted
argument_list|()
argument_list|)
argument_list|,
name|receiver
argument_list|,
name|member
argument_list|)
expr_stmt|;
name|d
operator|->
name|receiverToDisconnectOnClose
operator|=
name|receiver
expr_stmt|;
name|d
operator|->
name|memberToDisconnectOnClose
operator|=
name|member
expr_stmt|;
name|QDialog
operator|::
name|open
argument_list|()
expr_stmt|;
block|}
end_function
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_MAC
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
end_if
begin_comment
comment|/*! \fn void QPageSetupDialog::setVisible(bool visible)     \reimp */
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
