begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qprintpreviewdialog.h"
end_include
begin_include
include|#
directive|include
file|"qprintpreviewwidget.h"
end_include
begin_include
include|#
directive|include
file|<private/qprinter_p.h>
end_include
begin_include
include|#
directive|include
file|"private/qdialog_p.h"
end_include
begin_include
include|#
directive|include
file|"qprintdialog.h"
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qaction.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qboxlayout.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qcombobox.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qlabel.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qlineedit.h>
end_include
begin_include
include|#
directive|include
file|<QtPrintSupport/qpagesetupdialog.h>
end_include
begin_include
include|#
directive|include
file|<QtPrintSupport/qprinter.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qstyle.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qtoolbutton.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qvalidator.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qfiledialog.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qmainwindow.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qtoolbar.h>
end_include
begin_include
include|#
directive|include
file|<QtWidgets/qformlayout.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/QCoreApplication>
end_include
begin_include
include|#
directive|include
file|<math.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_PRINTPREVIEWDIALOG
end_ifndef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_namespace
namespace|namespace
block|{
DECL|class|QPrintPreviewMainWindow
class|class
name|QPrintPreviewMainWindow
super|:
specifier|public
name|QMainWindow
block|{
public|public:
DECL|function|QPrintPreviewMainWindow
name|QPrintPreviewMainWindow
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|createPopupMenu
name|QMenu
modifier|*
name|createPopupMenu
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
block|}
class|;
DECL|class|ZoomFactorValidator
class|class
name|ZoomFactorValidator
super|:
specifier|public
name|QDoubleValidator
block|{
public|public:
DECL|function|ZoomFactorValidator
name|ZoomFactorValidator
parameter_list|(
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDoubleValidator
argument_list|(
name|parent
argument_list|)
block|{}
DECL|function|ZoomFactorValidator
name|ZoomFactorValidator
parameter_list|(
name|qreal
name|bottom
parameter_list|,
name|qreal
name|top
parameter_list|,
name|int
name|decimals
parameter_list|,
name|QObject
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QDoubleValidator
argument_list|(
name|bottom
argument_list|,
name|top
argument_list|,
name|decimals
argument_list|,
name|parent
argument_list|)
block|{}
DECL|function|validate
name|State
name|validate
parameter_list|(
name|QString
modifier|&
name|input
parameter_list|,
name|int
modifier|&
name|pos
parameter_list|)
specifier|const
block|{
name|bool
name|replacePercent
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|input
operator|.
name|endsWith
argument_list|(
name|QLatin1Char
argument_list|(
literal|'%'
argument_list|)
argument_list|)
condition|)
block|{
name|input
operator|=
name|input
operator|.
name|left
argument_list|(
name|input
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|replacePercent
operator|=
literal|true
expr_stmt|;
block|}
name|State
name|state
init|=
name|QDoubleValidator
operator|::
name|validate
argument_list|(
name|input
argument_list|,
name|pos
argument_list|)
decl_stmt|;
if|if
condition|(
name|replacePercent
condition|)
name|input
operator|+=
name|QLatin1Char
argument_list|(
literal|'%'
argument_list|)
expr_stmt|;
specifier|const
name|int
name|num_size
init|=
literal|4
decl_stmt|;
if|if
condition|(
name|state
operator|==
name|Intermediate
condition|)
block|{
name|int
name|i
init|=
name|input
operator|.
name|indexOf
argument_list|(
name|QLocale
operator|::
name|system
argument_list|()
operator|.
name|decimalPoint
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|i
operator|==
operator|-
literal|1
operator|&&
name|input
operator|.
name|size
argument_list|()
operator|>
name|num_size
operator|)
operator|||
operator|(
name|i
operator|!=
operator|-
literal|1
operator|&&
name|i
operator|>
name|num_size
operator|)
condition|)
return|return
name|Invalid
return|;
block|}
return|return
name|state
return|;
block|}
block|}
class|;
DECL|class|LineEdit
class|class
name|LineEdit
super|:
specifier|public
name|QLineEdit
block|{
name|Q_OBJECT
public|public:
DECL|function|LineEdit
name|LineEdit
parameter_list|(
name|QWidget
modifier|*
name|parent
init|=
literal|0
parameter_list|)
member_init_list|:
name|QLineEdit
argument_list|(
name|parent
argument_list|)
block|{
name|setContextMenuPolicy
argument_list|(
name|Qt
operator|::
name|NoContextMenu
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|returnPressed
argument_list|()
argument_list|)
argument_list|,
name|SLOT
argument_list|(
name|handleReturnPressed
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
protected|protected:
DECL|function|focusInEvent
name|void
name|focusInEvent
parameter_list|(
name|QFocusEvent
modifier|*
name|e
parameter_list|)
block|{
name|origText
operator|=
name|text
argument_list|()
expr_stmt|;
name|QLineEdit
operator|::
name|focusInEvent
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
DECL|function|focusOutEvent
name|void
name|focusOutEvent
parameter_list|(
name|QFocusEvent
modifier|*
name|e
parameter_list|)
block|{
if|if
condition|(
name|isModified
argument_list|()
operator|&&
operator|!
name|hasAcceptableInput
argument_list|()
condition|)
name|setText
argument_list|(
name|origText
argument_list|)
expr_stmt|;
name|QLineEdit
operator|::
name|focusOutEvent
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
private|private
name|slots
private|:
DECL|function|handleReturnPressed
name|void
name|handleReturnPressed
parameter_list|()
block|{
name|origText
operator|=
name|text
argument_list|()
expr_stmt|;
block|}
private|private:
DECL|member|origText
name|QString
name|origText
decl_stmt|;
block|}
class|;
block|}
end_namespace
begin_comment
comment|// anonymous namespace
end_comment
begin_class
DECL|class|QPrintPreviewDialogPrivate
class|class
name|QPrintPreviewDialogPrivate
super|:
specifier|public
name|QDialogPrivate
block|{
name|Q_DECLARE_PUBLIC
parameter_list|(
name|QPrintPreviewDialog
parameter_list|)
specifier|public
private|:
DECL|function|QPrintPreviewDialogPrivate
name|QPrintPreviewDialogPrivate
parameter_list|()
member_init_list|:
name|printDialog
argument_list|(
literal|0
argument_list|)
member_init_list|,
name|ownPrinter
argument_list|(
literal|false
argument_list|)
member_init_list|,
name|initialized
argument_list|(
literal|false
argument_list|)
block|{}
comment|// private slots
name|void
name|_q_fit
parameter_list|(
name|QAction
modifier|*
name|action
parameter_list|)
function_decl|;
name|void
name|_q_zoomIn
parameter_list|()
function_decl|;
name|void
name|_q_zoomOut
parameter_list|()
function_decl|;
name|void
name|_q_navigate
parameter_list|(
name|QAction
modifier|*
name|action
parameter_list|)
function_decl|;
name|void
name|_q_setMode
parameter_list|(
name|QAction
modifier|*
name|action
parameter_list|)
function_decl|;
name|void
name|_q_pageNumEdited
parameter_list|()
function_decl|;
name|void
name|_q_print
parameter_list|()
function_decl|;
name|void
name|_q_pageSetup
parameter_list|()
function_decl|;
name|void
name|_q_previewChanged
parameter_list|()
function_decl|;
name|void
name|_q_zoomFactorChanged
parameter_list|()
function_decl|;
name|void
name|init
parameter_list|(
name|QPrinter
modifier|*
name|printer
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|populateScene
parameter_list|()
function_decl|;
name|void
name|layoutPages
parameter_list|()
function_decl|;
name|void
name|setupActions
parameter_list|()
function_decl|;
name|void
name|updateNavActions
parameter_list|()
function_decl|;
name|void
name|setFitting
parameter_list|(
name|bool
name|on
parameter_list|)
function_decl|;
name|bool
name|isFitting
parameter_list|()
function_decl|;
name|void
name|updatePageNumLabel
parameter_list|()
function_decl|;
name|void
name|updateZoomFactor
parameter_list|()
function_decl|;
DECL|member|printDialog
name|QPrintDialog
modifier|*
name|printDialog
decl_stmt|;
DECL|member|preview
name|QPrintPreviewWidget
modifier|*
name|preview
decl_stmt|;
DECL|member|printer
name|QPrinter
modifier|*
name|printer
decl_stmt|;
DECL|member|ownPrinter
name|bool
name|ownPrinter
decl_stmt|;
DECL|member|initialized
name|bool
name|initialized
decl_stmt|;
comment|// widgets:
DECL|member|pageNumEdit
name|QLineEdit
modifier|*
name|pageNumEdit
decl_stmt|;
DECL|member|pageNumLabel
name|QLabel
modifier|*
name|pageNumLabel
decl_stmt|;
DECL|member|zoomFactor
name|QComboBox
modifier|*
name|zoomFactor
decl_stmt|;
comment|// actions:
DECL|member|navGroup
name|QActionGroup
modifier|*
name|navGroup
decl_stmt|;
DECL|member|nextPageAction
name|QAction
modifier|*
name|nextPageAction
decl_stmt|;
DECL|member|prevPageAction
name|QAction
modifier|*
name|prevPageAction
decl_stmt|;
DECL|member|firstPageAction
name|QAction
modifier|*
name|firstPageAction
decl_stmt|;
DECL|member|lastPageAction
name|QAction
modifier|*
name|lastPageAction
decl_stmt|;
DECL|member|fitGroup
name|QActionGroup
modifier|*
name|fitGroup
decl_stmt|;
DECL|member|fitWidthAction
name|QAction
modifier|*
name|fitWidthAction
decl_stmt|;
DECL|member|fitPageAction
name|QAction
modifier|*
name|fitPageAction
decl_stmt|;
DECL|member|zoomGroup
name|QActionGroup
modifier|*
name|zoomGroup
decl_stmt|;
DECL|member|zoomInAction
name|QAction
modifier|*
name|zoomInAction
decl_stmt|;
DECL|member|zoomOutAction
name|QAction
modifier|*
name|zoomOutAction
decl_stmt|;
DECL|member|orientationGroup
name|QActionGroup
modifier|*
name|orientationGroup
decl_stmt|;
DECL|member|portraitAction
name|QAction
modifier|*
name|portraitAction
decl_stmt|;
DECL|member|landscapeAction
name|QAction
modifier|*
name|landscapeAction
decl_stmt|;
DECL|member|modeGroup
name|QActionGroup
modifier|*
name|modeGroup
decl_stmt|;
DECL|member|singleModeAction
name|QAction
modifier|*
name|singleModeAction
decl_stmt|;
DECL|member|facingModeAction
name|QAction
modifier|*
name|facingModeAction
decl_stmt|;
DECL|member|overviewModeAction
name|QAction
modifier|*
name|overviewModeAction
decl_stmt|;
DECL|member|printerGroup
name|QActionGroup
modifier|*
name|printerGroup
decl_stmt|;
DECL|member|printAction
name|QAction
modifier|*
name|printAction
decl_stmt|;
DECL|member|pageSetupAction
name|QAction
modifier|*
name|pageSetupAction
decl_stmt|;
DECL|member|receiverToDisconnectOnClose
name|QPointer
argument_list|<
name|QObject
argument_list|>
name|receiverToDisconnectOnClose
decl_stmt|;
DECL|member|memberToDisconnectOnClose
name|QByteArray
name|memberToDisconnectOnClose
decl_stmt|;
block|}
class|;
end_class
begin_function
DECL|function|init
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|init
parameter_list|(
name|QPrinter
modifier|*
name|_printer
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|_printer
condition|)
block|{
name|preview
operator|=
operator|new
name|QPrintPreviewWidget
argument_list|(
name|_printer
argument_list|,
name|q
argument_list|)
expr_stmt|;
name|printer
operator|=
name|_printer
expr_stmt|;
block|}
else|else
block|{
name|ownPrinter
operator|=
literal|true
expr_stmt|;
name|printer
operator|=
operator|new
name|QPrinter
expr_stmt|;
name|preview
operator|=
operator|new
name|QPrintPreviewWidget
argument_list|(
name|printer
argument_list|,
name|q
argument_list|)
expr_stmt|;
block|}
name|QObject
operator|::
name|connect
argument_list|(
name|preview
argument_list|,
name|SIGNAL
argument_list|(
name|paintRequested
argument_list|(
name|QPrinter
operator|*
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SIGNAL
argument_list|(
name|paintRequested
argument_list|(
name|QPrinter
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|preview
argument_list|,
name|SIGNAL
argument_list|(
name|previewChanged
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_previewChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|setupActions
argument_list|()
expr_stmt|;
name|pageNumEdit
operator|=
operator|new
name|LineEdit
expr_stmt|;
name|pageNumEdit
operator|->
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignRight
argument_list|)
expr_stmt|;
name|pageNumEdit
operator|->
name|setSizePolicy
argument_list|(
name|QSizePolicy
argument_list|(
name|QSizePolicy
operator|::
name|Fixed
argument_list|,
name|QSizePolicy
operator|::
name|Fixed
argument_list|)
argument_list|)
expr_stmt|;
name|pageNumLabel
operator|=
operator|new
name|QLabel
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|pageNumEdit
argument_list|,
name|SIGNAL
argument_list|(
name|editingFinished
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_pageNumEdited
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|zoomFactor
operator|=
operator|new
name|QComboBox
expr_stmt|;
name|zoomFactor
operator|->
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|zoomFactor
operator|->
name|setMinimumContentsLength
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|zoomFactor
operator|->
name|setInsertPolicy
argument_list|(
name|QComboBox
operator|::
name|NoInsert
argument_list|)
expr_stmt|;
name|LineEdit
modifier|*
name|zoomEditor
init|=
operator|new
name|LineEdit
decl_stmt|;
name|zoomEditor
operator|->
name|setValidator
argument_list|(
operator|new
name|ZoomFactorValidator
argument_list|(
literal|1
argument_list|,
literal|1000
argument_list|,
literal|1
argument_list|,
name|zoomEditor
argument_list|)
argument_list|)
expr_stmt|;
name|zoomFactor
operator|->
name|setLineEdit
argument_list|(
name|zoomEditor
argument_list|)
expr_stmt|;
specifier|static
specifier|const
name|short
name|factorsX2
index|[]
init|=
block|{
literal|25
block|,
literal|50
block|,
literal|100
block|,
literal|200
block|,
literal|250
block|,
literal|300
block|,
literal|400
block|,
literal|800
block|,
literal|1600
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|int
argument_list|(
sizeof|sizeof
argument_list|(
name|factorsX2
argument_list|)
operator|/
sizeof|sizeof
argument_list|(
name|factorsX2
index|[
literal|0
index|]
argument_list|)
argument_list|)
condition|;
operator|++
name|i
control|)
name|zoomFactor
operator|->
name|addItem
argument_list|(
name|QPrintPreviewDialog
operator|::
name|tr
argument_list|(
literal|"%1%"
argument_list|)
operator|.
name|arg
argument_list|(
name|factorsX2
index|[
name|i
index|]
operator|/
literal|2.0
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|zoomFactor
operator|->
name|lineEdit
argument_list|()
argument_list|,
name|SIGNAL
argument_list|(
name|editingFinished
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_zoomFactorChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|zoomFactor
argument_list|,
name|SIGNAL
argument_list|(
name|currentIndexChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_zoomFactorChanged
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QPrintPreviewMainWindow
modifier|*
name|mw
init|=
operator|new
name|QPrintPreviewMainWindow
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|QToolBar
modifier|*
name|toolbar
init|=
operator|new
name|QToolBar
argument_list|(
name|mw
argument_list|)
decl_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|fitWidthAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|fitPageAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|toolbar
operator|->
name|addWidget
argument_list|(
name|zoomFactor
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|zoomOutAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|zoomInAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|portraitAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|landscapeAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|firstPageAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|prevPageAction
argument_list|)
expr_stmt|;
comment|// this is to ensure the label text and the editor text are
comment|// aligned in all styles - the extra QVBoxLayout is a workaround
comment|// for bug in QFormLayout
name|QWidget
modifier|*
name|pageEdit
init|=
operator|new
name|QWidget
argument_list|(
name|toolbar
argument_list|)
decl_stmt|;
name|QVBoxLayout
modifier|*
name|vboxLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|vboxLayout
operator|->
name|setContentsMargins
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
comment|// We query the widgets about their size and then we fix the size.
comment|// This should do the trick for the laying out part...
name|QSize
name|pageNumEditSize
decl_stmt|,
name|pageNumLabelSize
decl_stmt|;
name|pageNumEditSize
operator|=
name|pageNumEdit
operator|->
name|minimumSizeHint
argument_list|()
expr_stmt|;
name|pageNumLabelSize
operator|=
name|pageNumLabel
operator|->
name|minimumSizeHint
argument_list|()
expr_stmt|;
name|pageNumEdit
operator|->
name|resize
argument_list|(
name|pageNumEditSize
argument_list|)
expr_stmt|;
name|pageNumLabel
operator|->
name|resize
argument_list|(
name|pageNumLabelSize
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|QFormLayout
modifier|*
name|formLayout
init|=
operator|new
name|QFormLayout
decl_stmt|;
ifdef|#
directive|ifdef
name|Q_OS_MAC
comment|// We have to change the growth policy in Mac.
name|formLayout
operator|->
name|setFieldGrowthPolicy
argument_list|(
name|QFormLayout
operator|::
name|AllNonFixedFieldsGrow
argument_list|)
expr_stmt|;
endif|#
directive|endif
name|formLayout
operator|->
name|setWidget
argument_list|(
literal|0
argument_list|,
name|QFormLayout
operator|::
name|LabelRole
argument_list|,
name|pageNumEdit
argument_list|)
expr_stmt|;
name|formLayout
operator|->
name|setWidget
argument_list|(
literal|0
argument_list|,
name|QFormLayout
operator|::
name|FieldRole
argument_list|,
name|pageNumLabel
argument_list|)
expr_stmt|;
name|vboxLayout
operator|->
name|addLayout
argument_list|(
name|formLayout
argument_list|)
expr_stmt|;
name|vboxLayout
operator|->
name|setAlignment
argument_list|(
name|Qt
operator|::
name|AlignVCenter
argument_list|)
expr_stmt|;
name|pageEdit
operator|->
name|setLayout
argument_list|(
name|vboxLayout
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addWidget
argument_list|(
name|pageEdit
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|nextPageAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|lastPageAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|singleModeAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|facingModeAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|overviewModeAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addSeparator
argument_list|()
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|pageSetupAction
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|addAction
argument_list|(
name|printAction
argument_list|)
expr_stmt|;
comment|// Cannot use the actions' triggered signal here, since it doesn't autorepeat
name|QToolButton
modifier|*
name|zoomInButton
init|=
cast|static_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|toolbar
operator|->
name|widgetForAction
argument_list|(
name|zoomInAction
argument_list|)
argument_list|)
decl_stmt|;
name|QToolButton
modifier|*
name|zoomOutButton
init|=
cast|static_cast
argument_list|<
name|QToolButton
operator|*
argument_list|>
argument_list|(
name|toolbar
operator|->
name|widgetForAction
argument_list|(
name|zoomOutAction
argument_list|)
argument_list|)
decl_stmt|;
name|zoomInButton
operator|->
name|setAutoRepeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|zoomInButton
operator|->
name|setAutoRepeatInterval
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|zoomInButton
operator|->
name|setAutoRepeatDelay
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|zoomOutButton
operator|->
name|setAutoRepeat
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|zoomOutButton
operator|->
name|setAutoRepeatInterval
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|zoomOutButton
operator|->
name|setAutoRepeatDelay
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|zoomInButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_zoomIn
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|zoomOutButton
argument_list|,
name|SIGNAL
argument_list|(
name|clicked
argument_list|()
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_zoomOut
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|mw
operator|->
name|addToolBar
argument_list|(
name|toolbar
argument_list|)
expr_stmt|;
name|mw
operator|->
name|setCentralWidget
argument_list|(
name|preview
argument_list|)
expr_stmt|;
comment|// QMainWindows are always created as top levels, force it to be a
comment|// plain widget
name|mw
operator|->
name|setParent
argument_list|(
name|q
argument_list|,
name|Qt
operator|::
name|Widget
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|topLayout
init|=
operator|new
name|QVBoxLayout
decl_stmt|;
name|topLayout
operator|->
name|addWidget
argument_list|(
name|mw
argument_list|)
expr_stmt|;
name|topLayout
operator|->
name|setMargin
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|q
operator|->
name|setLayout
argument_list|(
name|topLayout
argument_list|)
expr_stmt|;
name|QString
name|caption
init|=
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Print Preview"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|printer
operator|->
name|docName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|caption
operator|+=
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|": "
argument_list|)
operator|+
name|printer
operator|->
name|docName
argument_list|()
expr_stmt|;
name|q
operator|->
name|setWindowTitle
argument_list|(
name|caption
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|printer
operator|->
name|isValid
argument_list|()
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
operator|||
name|printer
operator|->
name|outputFormat
argument_list|()
operator|!=
name|QPrinter
operator|::
name|NativeFormat
endif|#
directive|endif
condition|)
name|pageSetupAction
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|preview
operator|->
name|setFocus
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_setupActionIcon
specifier|static
specifier|inline
name|void
name|qt_setupActionIcon
parameter_list|(
name|QAction
modifier|*
name|action
parameter_list|,
specifier|const
name|QLatin1String
modifier|&
name|name
parameter_list|)
block|{
name|QLatin1String
name|imagePrefix
argument_list|(
literal|":/qt-project.org/dialogs/qprintpreviewdialog/images/"
argument_list|)
decl_stmt|;
name|QIcon
name|icon
decl_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|imagePrefix
operator|+
name|name
operator|+
name|QLatin1String
argument_list|(
literal|"-24.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|24
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addFile
argument_list|(
name|imagePrefix
operator|+
name|name
operator|+
name|QLatin1String
argument_list|(
literal|"-32.png"
argument_list|)
argument_list|,
name|QSize
argument_list|(
literal|32
argument_list|,
literal|32
argument_list|)
argument_list|)
expr_stmt|;
name|action
operator|->
name|setIcon
argument_list|(
name|icon
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupActions
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|setupActions
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
comment|// Navigation
name|navGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|navGroup
operator|->
name|setExclusive
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|nextPageAction
operator|=
name|navGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Next page"
argument_list|)
argument_list|)
expr_stmt|;
name|prevPageAction
operator|=
name|navGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Previous page"
argument_list|)
argument_list|)
expr_stmt|;
name|firstPageAction
operator|=
name|navGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"First page"
argument_list|)
argument_list|)
expr_stmt|;
name|lastPageAction
operator|=
name|navGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Last page"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|nextPageAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"go-next"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|prevPageAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"go-previous"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|firstPageAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"go-first"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|lastPageAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"go-last"
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|navGroup
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|QAction
operator|*
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_navigate
argument_list|(
name|QAction
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fitGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|fitWidthAction
operator|=
name|fitGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Fit width"
argument_list|)
argument_list|)
expr_stmt|;
name|fitPageAction
operator|=
name|fitGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Fit page"
argument_list|)
argument_list|)
expr_stmt|;
name|fitWidthAction
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"fitWidthAction"
argument_list|)
argument_list|)
expr_stmt|;
name|fitPageAction
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"fitPageAction"
argument_list|)
argument_list|)
expr_stmt|;
name|fitWidthAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|fitPageAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|fitWidthAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"fit-width"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|fitPageAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"fit-page"
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|fitGroup
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|QAction
operator|*
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_fit
argument_list|(
name|QAction
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Zoom
name|zoomGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|zoomInAction
operator|=
name|zoomGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Zoom in"
argument_list|)
argument_list|)
expr_stmt|;
name|zoomOutAction
operator|=
name|zoomGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Zoom out"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|zoomInAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"zoom-in"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|zoomOutAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"zoom-out"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Portrait/Landscape
name|orientationGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|portraitAction
operator|=
name|orientationGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Portrait"
argument_list|)
argument_list|)
expr_stmt|;
name|landscapeAction
operator|=
name|orientationGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Landscape"
argument_list|)
argument_list|)
expr_stmt|;
name|portraitAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|landscapeAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|portraitAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"layout-portrait"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|landscapeAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"layout-landscape"
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|portraitAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|preview
argument_list|,
name|SLOT
argument_list|(
name|setPortraitOrientation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|landscapeAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|preview
argument_list|,
name|SLOT
argument_list|(
name|setLandscapeOrientation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Display mode
name|modeGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|singleModeAction
operator|=
name|modeGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Show single page"
argument_list|)
argument_list|)
expr_stmt|;
name|facingModeAction
operator|=
name|modeGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Show facing pages"
argument_list|)
argument_list|)
expr_stmt|;
name|overviewModeAction
operator|=
name|modeGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Show overview of all pages"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|singleModeAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"view-page-one"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|facingModeAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"view-page-sided"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|overviewModeAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"view-page-multi"
argument_list|)
argument_list|)
expr_stmt|;
name|singleModeAction
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"singleModeAction"
argument_list|)
argument_list|)
expr_stmt|;
name|facingModeAction
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"facingModeAction"
argument_list|)
argument_list|)
expr_stmt|;
name|overviewModeAction
operator|->
name|setObjectName
argument_list|(
name|QLatin1String
argument_list|(
literal|"overviewModeAction"
argument_list|)
argument_list|)
expr_stmt|;
name|singleModeAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|facingModeAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|overviewModeAction
operator|->
name|setCheckable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|modeGroup
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|QAction
operator|*
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_setMode
argument_list|(
name|QAction
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Print
name|printerGroup
operator|=
operator|new
name|QActionGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|printAction
operator|=
name|printerGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Print"
argument_list|)
argument_list|)
expr_stmt|;
name|pageSetupAction
operator|=
name|printerGroup
operator|->
name|addAction
argument_list|(
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Page setup"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|printAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"print"
argument_list|)
argument_list|)
expr_stmt|;
name|qt_setupActionIcon
argument_list|(
name|pageSetupAction
argument_list|,
name|QLatin1String
argument_list|(
literal|"page-setup"
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|printAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_print
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|pageSetupAction
argument_list|,
name|SIGNAL
argument_list|(
name|triggered
argument_list|(
name|bool
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_pageSetup
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// Initial state:
name|fitPageAction
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|singleModeAction
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|preview
operator|->
name|orientation
argument_list|()
operator|==
name|QPrinter
operator|::
name|Portrait
condition|)
name|portraitAction
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|landscapeAction
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isFitting
name|bool
name|QPrintPreviewDialogPrivate
operator|::
name|isFitting
parameter_list|()
block|{
return|return
operator|(
name|fitGroup
operator|->
name|isExclusive
argument_list|()
operator|&&
operator|(
name|fitWidthAction
operator|->
name|isChecked
argument_list|()
operator|||
name|fitPageAction
operator|->
name|isChecked
argument_list|()
operator|)
operator|)
return|;
block|}
end_function
begin_function
DECL|function|setFitting
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|setFitting
parameter_list|(
name|bool
name|on
parameter_list|)
block|{
if|if
condition|(
name|isFitting
argument_list|()
operator|==
name|on
condition|)
return|return;
name|fitGroup
operator|->
name|setExclusive
argument_list|(
name|on
argument_list|)
expr_stmt|;
if|if
condition|(
name|on
condition|)
block|{
name|QAction
modifier|*
name|action
init|=
name|fitWidthAction
operator|->
name|isChecked
argument_list|()
condition|?
name|fitWidthAction
else|:
name|fitPageAction
decl_stmt|;
name|action
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|fitGroup
operator|->
name|checkedAction
argument_list|()
operator|!=
name|action
condition|)
block|{
comment|// work around exclusitivity problem
name|fitGroup
operator|->
name|removeAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|fitGroup
operator|->
name|addAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|fitWidthAction
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|fitPageAction
operator|->
name|setChecked
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|updateNavActions
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|updateNavActions
parameter_list|()
block|{
name|int
name|curPage
init|=
name|preview
operator|->
name|currentPage
argument_list|()
decl_stmt|;
name|int
name|numPages
init|=
name|preview
operator|->
name|pageCount
argument_list|()
decl_stmt|;
name|nextPageAction
operator|->
name|setEnabled
argument_list|(
name|curPage
operator|<
name|numPages
argument_list|)
expr_stmt|;
name|prevPageAction
operator|->
name|setEnabled
argument_list|(
name|curPage
operator|>
literal|1
argument_list|)
expr_stmt|;
name|firstPageAction
operator|->
name|setEnabled
argument_list|(
name|curPage
operator|>
literal|1
argument_list|)
expr_stmt|;
name|lastPageAction
operator|->
name|setEnabled
argument_list|(
name|curPage
operator|<
name|numPages
argument_list|)
expr_stmt|;
name|pageNumEdit
operator|->
name|setText
argument_list|(
name|QString
operator|::
name|number
argument_list|(
name|curPage
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|updatePageNumLabel
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|updatePageNumLabel
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
name|int
name|numPages
init|=
name|preview
operator|->
name|pageCount
argument_list|()
decl_stmt|;
name|int
name|maxChars
init|=
name|QString
operator|::
name|number
argument_list|(
name|numPages
argument_list|)
operator|.
name|length
argument_list|()
decl_stmt|;
name|pageNumLabel
operator|->
name|setText
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"/ %1"
argument_list|)
operator|.
name|arg
argument_list|(
name|numPages
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|cyphersWidth
init|=
name|q
operator|->
name|fontMetrics
argument_list|()
operator|.
name|width
argument_list|(
name|QString
argument_list|()
operator|.
name|fill
argument_list|(
name|QLatin1Char
argument_list|(
literal|'8'
argument_list|)
argument_list|,
name|maxChars
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|maxWidth
init|=
name|pageNumEdit
operator|->
name|minimumSizeHint
argument_list|()
operator|.
name|width
argument_list|()
operator|+
name|cyphersWidth
decl_stmt|;
name|pageNumEdit
operator|->
name|setMinimumWidth
argument_list|(
name|maxWidth
argument_list|)
expr_stmt|;
name|pageNumEdit
operator|->
name|setMaximumWidth
argument_list|(
name|maxWidth
argument_list|)
expr_stmt|;
name|pageNumEdit
operator|->
name|setValidator
argument_list|(
operator|new
name|QIntValidator
argument_list|(
literal|1
argument_list|,
name|numPages
argument_list|,
name|pageNumEdit
argument_list|)
argument_list|)
expr_stmt|;
comment|// any old one will be deleted later along with its parent pageNumEdit
block|}
end_function
begin_function
DECL|function|updateZoomFactor
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|updateZoomFactor
parameter_list|()
block|{
name|zoomFactor
operator|->
name|lineEdit
argument_list|()
operator|->
name|setText
argument_list|(
name|QString
argument_list|()
operator|.
name|sprintf
argument_list|(
literal|"%.1f%%"
argument_list|,
name|preview
operator|->
name|zoomFactor
argument_list|()
operator|*
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_fit
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_fit
parameter_list|(
name|QAction
modifier|*
name|action
parameter_list|)
block|{
name|setFitting
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|action
operator|==
name|fitPageAction
condition|)
name|preview
operator|->
name|fitInView
argument_list|()
expr_stmt|;
else|else
name|preview
operator|->
name|fitToWidth
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_zoomIn
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_zoomIn
parameter_list|()
block|{
name|setFitting
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|preview
operator|->
name|zoomIn
argument_list|()
expr_stmt|;
name|updateZoomFactor
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_zoomOut
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_zoomOut
parameter_list|()
block|{
name|setFitting
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|preview
operator|->
name|zoomOut
argument_list|()
expr_stmt|;
name|updateZoomFactor
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_pageNumEdited
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_pageNumEdited
parameter_list|()
block|{
name|bool
name|ok
init|=
literal|false
decl_stmt|;
name|int
name|res
init|=
name|pageNumEdit
operator|->
name|text
argument_list|()
operator|.
name|toInt
argument_list|(
operator|&
name|ok
argument_list|)
decl_stmt|;
if|if
condition|(
name|ok
condition|)
name|preview
operator|->
name|setCurrentPage
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_navigate
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_navigate
parameter_list|(
name|QAction
modifier|*
name|action
parameter_list|)
block|{
name|int
name|curPage
init|=
name|preview
operator|->
name|currentPage
argument_list|()
decl_stmt|;
if|if
condition|(
name|action
operator|==
name|prevPageAction
condition|)
name|preview
operator|->
name|setCurrentPage
argument_list|(
name|curPage
operator|-
literal|1
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|action
operator|==
name|nextPageAction
condition|)
name|preview
operator|->
name|setCurrentPage
argument_list|(
name|curPage
operator|+
literal|1
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|action
operator|==
name|firstPageAction
condition|)
name|preview
operator|->
name|setCurrentPage
argument_list|(
literal|1
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|action
operator|==
name|lastPageAction
condition|)
name|preview
operator|->
name|setCurrentPage
argument_list|(
name|preview
operator|->
name|pageCount
argument_list|()
argument_list|)
expr_stmt|;
name|updateNavActions
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_setMode
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_setMode
parameter_list|(
name|QAction
modifier|*
name|action
parameter_list|)
block|{
if|if
condition|(
name|action
operator|==
name|overviewModeAction
condition|)
block|{
name|preview
operator|->
name|setViewMode
argument_list|(
name|QPrintPreviewWidget
operator|::
name|AllPagesView
argument_list|)
expr_stmt|;
name|setFitting
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|fitGroup
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|navGroup
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pageNumEdit
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pageNumLabel
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|action
operator|==
name|facingModeAction
condition|)
block|{
name|preview
operator|->
name|setViewMode
argument_list|(
name|QPrintPreviewWidget
operator|::
name|FacingPagesView
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|preview
operator|->
name|setViewMode
argument_list|(
name|QPrintPreviewWidget
operator|::
name|SinglePageView
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|action
operator|==
name|facingModeAction
operator|||
name|action
operator|==
name|singleModeAction
condition|)
block|{
name|fitGroup
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|navGroup
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pageNumEdit
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|pageNumLabel
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setFitting
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|_q_print
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_print
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_WIN
argument_list|)
operator|||
name|defined
argument_list|(
name|Q_OS_MAC
argument_list|)
if|if
condition|(
name|printer
operator|->
name|outputFormat
argument_list|()
operator|!=
name|QPrinter
operator|::
name|NativeFormat
condition|)
block|{
name|QString
name|title
decl_stmt|;
name|QString
name|suffix
decl_stmt|;
if|if
condition|(
name|printer
operator|->
name|outputFormat
argument_list|()
operator|==
name|QPrinter
operator|::
name|PdfFormat
condition|)
block|{
name|title
operator|=
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Export to PDF"
argument_list|)
expr_stmt|;
name|suffix
operator|=
name|QLatin1String
argument_list|(
literal|".pdf"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|title
operator|=
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QPrintPreviewDialog"
argument_list|,
literal|"Export to PostScript"
argument_list|)
expr_stmt|;
name|suffix
operator|=
name|QLatin1String
argument_list|(
literal|".ps"
argument_list|)
expr_stmt|;
block|}
name|QString
name|fileName
init|=
name|QFileDialog
operator|::
name|getSaveFileName
argument_list|(
name|q
argument_list|,
name|title
argument_list|,
name|printer
operator|->
name|outputFileName
argument_list|()
argument_list|,
name|QLatin1Char
argument_list|(
literal|'*'
argument_list|)
operator|+
name|suffix
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|fileName
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|QFileInfo
argument_list|(
name|fileName
argument_list|)
operator|.
name|suffix
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|fileName
operator|.
name|append
argument_list|(
name|suffix
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setOutputFileName
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|printer
operator|->
name|outputFileName
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|preview
operator|->
name|print
argument_list|()
expr_stmt|;
name|q
operator|->
name|accept
argument_list|()
expr_stmt|;
return|return;
block|}
endif|#
directive|endif
if|if
condition|(
operator|!
name|printDialog
condition|)
name|printDialog
operator|=
operator|new
name|QPrintDialog
argument_list|(
name|printer
argument_list|,
name|q
argument_list|)
expr_stmt|;
if|if
condition|(
name|printDialog
operator|->
name|exec
argument_list|()
operator|==
name|QDialog
operator|::
name|Accepted
condition|)
block|{
name|preview
operator|->
name|print
argument_list|()
expr_stmt|;
name|q
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|_q_pageSetup
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_pageSetup
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
name|QPageSetupDialog
name|pageSetup
argument_list|(
name|printer
argument_list|,
name|q
argument_list|)
decl_stmt|;
if|if
condition|(
name|pageSetup
operator|.
name|exec
argument_list|()
operator|==
name|QDialog
operator|::
name|Accepted
condition|)
block|{
comment|// update possible orientation changes
if|if
condition|(
name|preview
operator|->
name|orientation
argument_list|()
operator|==
name|QPrinter
operator|::
name|Portrait
condition|)
block|{
name|portraitAction
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|preview
operator|->
name|setPortraitOrientation
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|landscapeAction
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|preview
operator|->
name|setLandscapeOrientation
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|_q_previewChanged
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_previewChanged
parameter_list|()
block|{
name|updateNavActions
argument_list|()
expr_stmt|;
name|updatePageNumLabel
argument_list|()
expr_stmt|;
name|updateZoomFactor
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_zoomFactorChanged
name|void
name|QPrintPreviewDialogPrivate
operator|::
name|_q_zoomFactorChanged
parameter_list|()
block|{
name|QString
name|text
init|=
name|zoomFactor
operator|->
name|lineEdit
argument_list|()
operator|->
name|text
argument_list|()
decl_stmt|;
name|bool
name|ok
decl_stmt|;
name|qreal
name|factor
init|=
name|text
operator|.
name|remove
argument_list|(
name|QLatin1Char
argument_list|(
literal|'%'
argument_list|)
argument_list|)
operator|.
name|toFloat
argument_list|(
operator|&
name|ok
argument_list|)
decl_stmt|;
name|factor
operator|=
name|qMax
argument_list|(
name|qreal
argument_list|(
literal|1.0
argument_list|)
argument_list|,
name|qMin
argument_list|(
name|qreal
argument_list|(
literal|1000.0
argument_list|)
argument_list|,
name|factor
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|ok
condition|)
block|{
name|preview
operator|->
name|setZoomFactor
argument_list|(
name|factor
operator|/
literal|100.0
argument_list|)
expr_stmt|;
name|zoomFactor
operator|->
name|setEditText
argument_list|(
name|QString
operator|::
name|fromLatin1
argument_list|(
literal|"%1%"
argument_list|)
operator|.
name|arg
argument_list|(
name|factor
argument_list|)
argument_list|)
expr_stmt|;
name|setFitting
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_comment
comment|///////////////////////////////////////////////////////////////////////////
end_comment
begin_comment
comment|/*!     \class QPrintPreviewDialog     \since 4.4      \brief The QPrintPreviewDialog class provides a dialog for     previewing and configuring page layouts for printer output.      \ingroup standard-dialogs     \ingroup printing     \inmodule QtPrintSupport      Using QPrintPreviewDialog in your existing application is     straightforward:      \list 1     \li Create the QPrintPreviewDialog.      You can construct a QPrintPreviewDialog with an existing QPrinter     object, or you can have QPrintPreviewDialog create one for you,     which will be the system default printer.      \li Connect the paintRequested() signal to a slot.      When the dialog needs to generate a set of preview pages, the     paintRequested() signal will be emitted. You can use the exact     same code for the actual printing as for having the preview     generated, including calling QPrinter::newPage() to start a new     page in the preview. Connect a slot to the paintRequested()     signal, where you draw onto the QPrinter object that is passed     into the slot.      \li Call exec().      Call QPrintPreviewDialog::exec() to show the preview dialog.     \endlist      \sa QPrinter, QPrintDialog, QPageSetupDialog, QPrintPreviewWidget */
end_comment
begin_comment
comment|/*!     Constructs a QPrintPreviewDialog based on \a printer and with \a     parent as the parent widget. The widget flags \a flags are passed on     to the QWidget constructor.      \sa QWidget::setWindowFlags() */
end_comment
begin_constructor
DECL|function|QPrintPreviewDialog
name|QPrintPreviewDialog
operator|::
name|QPrintPreviewDialog
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|flags
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
operator|*
operator|new
name|QPrintPreviewDialogPrivate
argument_list|,
name|parent
argument_list|,
name|flags
argument_list|)
block|{
name|Q_D
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
name|d
operator|->
name|init
argument_list|(
name|printer
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*!     \overload     \fn QPrintPreviewDialog::QPrintPreviewDialog(QWidget *parent, Qt::WindowFlags flags)      This will create an internal QPrinter object, which will use the     system default printer. */
end_comment
begin_constructor
DECL|function|QPrintPreviewDialog
name|QPrintPreviewDialog
operator|::
name|QPrintPreviewDialog
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|,
name|Qt
operator|::
name|WindowFlags
name|f
parameter_list|)
member_init_list|:
name|QDialog
argument_list|(
operator|*
operator|new
name|QPrintPreviewDialogPrivate
argument_list|,
name|parent
argument_list|,
name|f
argument_list|)
block|{
name|Q_D
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
name|d
operator|->
name|init
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_comment
comment|/*!     Destroys the QPrintPreviewDialog. */
end_comment
begin_destructor
DECL|function|~QPrintPreviewDialog
name|QPrintPreviewDialog
operator|::
name|~
name|QPrintPreviewDialog
parameter_list|()
block|{
name|Q_D
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|ownPrinter
condition|)
operator|delete
name|d
operator|->
name|printer
expr_stmt|;
operator|delete
name|d
operator|->
name|printDialog
expr_stmt|;
block|}
end_destructor
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|setVisible
name|void
name|QPrintPreviewDialog
operator|::
name|setVisible
parameter_list|(
name|bool
name|visible
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
comment|// this will make the dialog get a decent default size
if|if
condition|(
name|visible
operator|&&
operator|!
name|d
operator|->
name|initialized
condition|)
block|{
name|d
operator|->
name|preview
operator|->
name|updatePreview
argument_list|()
expr_stmt|;
name|d
operator|->
name|initialized
operator|=
literal|true
expr_stmt|;
block|}
name|QDialog
operator|::
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \reimp */
end_comment
begin_function
DECL|function|done
name|void
name|QPrintPreviewDialog
operator|::
name|done
parameter_list|(
name|int
name|result
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
name|QDialog
operator|::
name|done
argument_list|(
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|receiverToDisconnectOnClose
condition|)
block|{
name|disconnect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|d
operator|->
name|receiverToDisconnectOnClose
argument_list|,
name|d
operator|->
name|memberToDisconnectOnClose
argument_list|)
expr_stmt|;
name|d
operator|->
name|receiverToDisconnectOnClose
operator|=
literal|0
expr_stmt|;
block|}
name|d
operator|->
name|memberToDisconnectOnClose
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \overload     \since 4.5      Opens the dialog and connects its finished(int) signal to the slot specified     by \a receiver and \a member.      The signal will be disconnected from the slot when the dialog is closed. */
end_comment
begin_function
DECL|function|open
name|void
name|QPrintPreviewDialog
operator|::
name|open
parameter_list|(
name|QObject
modifier|*
name|receiver
parameter_list|,
specifier|const
name|char
modifier|*
name|member
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
comment|// the int parameter isn't very useful here; we could just as well connect
comment|// to reject(), but this feels less robust somehow
name|connect
argument_list|(
name|this
argument_list|,
name|SIGNAL
argument_list|(
name|finished
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|receiver
argument_list|,
name|member
argument_list|)
expr_stmt|;
name|d
operator|->
name|receiverToDisconnectOnClose
operator|=
name|receiver
expr_stmt|;
name|d
operator|->
name|memberToDisconnectOnClose
operator|=
name|member
expr_stmt|;
name|QDialog
operator|::
name|open
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     Returns a pointer to the QPrinter object this dialog is currently     operating on. */
end_comment
begin_function
DECL|function|printer
name|QPrinter
modifier|*
name|QPrintPreviewDialog
operator|::
name|printer
parameter_list|()
block|{
name|Q_D
argument_list|(
name|QPrintPreviewDialog
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|printer
return|;
block|}
end_function
begin_comment
comment|/*!     \fn void QPrintPreviewDialog::paintRequested(QPrinter *printer)      This signal is emitted when the QPrintPreviewDialog needs to generate     a set of preview pages.      The \a printer instance supplied is the paint device onto which you should     paint the contents of each page, using the QPrinter instance in the same way     as you would when printing directly. */
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_include
include|#
directive|include
file|"moc_qprintpreviewdialog.cpp"
end_include
begin_include
include|#
directive|include
file|"qprintpreviewdialog.moc"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_PRINTPREVIEWDIALOG
end_comment
end_unit
