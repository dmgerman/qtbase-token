begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of Qt Designer.  This header
end_comment
begin_comment
comment|// file may change from version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// THIS FILE IS AUTOMATICALLY GENERATED
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|UI4_H
end_ifndef
begin_define
DECL|macro|UI4_H
define|#
directive|define
name|UI4_H
end_define
begin_include
include|#
directive|include
file|<qlist.h>
end_include
begin_include
include|#
directive|include
file|<qstring.h>
end_include
begin_include
include|#
directive|include
file|<qstringlist.h>
end_include
begin_include
include|#
directive|include
file|<qxmlstream.h>
end_include
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|macro|QDESIGNER_UILIB_EXTERN
define|#
directive|define
name|QDESIGNER_UILIB_EXTERN
value|Q_DECL_EXPORT
DECL|macro|QDESIGNER_UILIB_IMPORT
define|#
directive|define
name|QDESIGNER_UILIB_IMPORT
value|Q_DECL_IMPORT
if|#
directive|if
name|defined
argument_list|(
name|QT_DESIGNER_STATIC
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_UIC
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_UIC3
argument_list|)
DECL|macro|QDESIGNER_UILIB_EXPORT
define|#
directive|define
name|QDESIGNER_UILIB_EXPORT
elif|#
directive|elif
name|defined
argument_list|(
name|QDESIGNER_UILIB_LIBRARY
argument_list|)
define|#
directive|define
name|QDESIGNER_UILIB_EXPORT
value|QDESIGNER_UILIB_EXTERN
else|#
directive|else
define|#
directive|define
name|QDESIGNER_UILIB_EXPORT
value|QDESIGNER_UILIB_IMPORT
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QDESIGNER_UILIB_EXPORT
DECL|macro|QDESIGNER_UILIB_EXPORT
define|#
directive|define
name|QDESIGNER_UILIB_EXPORT
endif|#
directive|endif
ifdef|#
directive|ifdef
name|QFORMINTERNAL_NAMESPACE
name|namespace
name|QFormInternal
block|{
endif|#
directive|endif
comment|/******************************************************************************* ** Forward declarations */
name|class
name|DomUI
decl_stmt|;
name|class
name|DomIncludes
decl_stmt|;
name|class
name|DomInclude
decl_stmt|;
name|class
name|DomResources
decl_stmt|;
name|class
name|DomResource
decl_stmt|;
name|class
name|DomActionGroup
decl_stmt|;
name|class
name|DomAction
decl_stmt|;
name|class
name|DomActionRef
decl_stmt|;
name|class
name|DomButtonGroup
decl_stmt|;
name|class
name|DomButtonGroups
decl_stmt|;
name|class
name|DomImages
decl_stmt|;
name|class
name|DomImage
decl_stmt|;
name|class
name|DomImageData
decl_stmt|;
name|class
name|DomCustomWidgets
decl_stmt|;
name|class
name|DomHeader
decl_stmt|;
name|class
name|DomCustomWidget
decl_stmt|;
name|class
name|DomProperties
decl_stmt|;
name|class
name|DomPropertyData
decl_stmt|;
name|class
name|DomSizePolicyData
decl_stmt|;
name|class
name|DomLayoutDefault
decl_stmt|;
name|class
name|DomLayoutFunction
decl_stmt|;
name|class
name|DomTabStops
decl_stmt|;
name|class
name|DomLayout
decl_stmt|;
name|class
name|DomLayoutItem
decl_stmt|;
name|class
name|DomRow
decl_stmt|;
name|class
name|DomColumn
decl_stmt|;
name|class
name|DomItem
decl_stmt|;
name|class
name|DomWidget
decl_stmt|;
name|class
name|DomSpacer
decl_stmt|;
name|class
name|DomColor
decl_stmt|;
name|class
name|DomGradientStop
decl_stmt|;
name|class
name|DomGradient
decl_stmt|;
name|class
name|DomBrush
decl_stmt|;
name|class
name|DomColorRole
decl_stmt|;
name|class
name|DomColorGroup
decl_stmt|;
name|class
name|DomPalette
decl_stmt|;
name|class
name|DomFont
decl_stmt|;
name|class
name|DomPoint
decl_stmt|;
name|class
name|DomRect
decl_stmt|;
name|class
name|DomLocale
decl_stmt|;
name|class
name|DomSizePolicy
decl_stmt|;
name|class
name|DomSize
decl_stmt|;
name|class
name|DomDate
decl_stmt|;
name|class
name|DomTime
decl_stmt|;
name|class
name|DomDateTime
decl_stmt|;
name|class
name|DomStringList
decl_stmt|;
name|class
name|DomResourcePixmap
decl_stmt|;
name|class
name|DomResourceIcon
decl_stmt|;
name|class
name|DomString
decl_stmt|;
name|class
name|DomPointF
decl_stmt|;
name|class
name|DomRectF
decl_stmt|;
name|class
name|DomSizeF
decl_stmt|;
name|class
name|DomChar
decl_stmt|;
name|class
name|DomUrl
decl_stmt|;
name|class
name|DomProperty
decl_stmt|;
name|class
name|DomConnections
decl_stmt|;
name|class
name|DomConnection
decl_stmt|;
name|class
name|DomConnectionHints
decl_stmt|;
name|class
name|DomConnectionHint
decl_stmt|;
name|class
name|DomScript
decl_stmt|;
name|class
name|DomWidgetData
decl_stmt|;
name|class
name|DomDesignerData
decl_stmt|;
name|class
name|DomSlots
decl_stmt|;
name|class
name|DomPropertySpecifications
decl_stmt|;
name|class
name|DomStringPropertySpecification
decl_stmt|;
comment|/******************************************************************************* ** Declarations */
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomUI
block|{
name|public
label|:
name|DomUI
argument_list|()
expr_stmt|;
operator|~
name|DomUI
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeVersion
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_version
return|;
block|}
specifier|inline
name|QString
name|attributeVersion
argument_list|()
specifier|const
block|{
return|return
name|m_attr_version
return|;
block|}
specifier|inline
name|void
name|setAttributeVersion
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_version
operator|=
name|a
expr_stmt|;
name|m_has_attr_version
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeVersion
parameter_list|()
block|{
name|m_has_attr_version
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeLanguage
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_language
return|;
block|}
specifier|inline
name|QString
name|attributeLanguage
argument_list|()
specifier|const
block|{
return|return
name|m_attr_language
return|;
block|}
specifier|inline
name|void
name|setAttributeLanguage
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_language
operator|=
name|a
expr_stmt|;
name|m_has_attr_language
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeLanguage
parameter_list|()
block|{
name|m_has_attr_language
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeDisplayname
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_displayname
return|;
block|}
specifier|inline
name|QString
name|attributeDisplayname
argument_list|()
specifier|const
block|{
return|return
name|m_attr_displayname
return|;
block|}
specifier|inline
name|void
name|setAttributeDisplayname
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_displayname
operator|=
name|a
expr_stmt|;
name|m_has_attr_displayname
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeDisplayname
parameter_list|()
block|{
name|m_has_attr_displayname
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeStdsetdef
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_stdsetdef
return|;
block|}
specifier|inline
name|int
name|attributeStdsetdef
argument_list|()
specifier|const
block|{
return|return
name|m_attr_stdsetdef
return|;
block|}
specifier|inline
name|void
name|setAttributeStdsetdef
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_stdsetdef
operator|=
name|a
expr_stmt|;
name|m_has_attr_stdsetdef
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeStdsetdef
parameter_list|()
block|{
name|m_has_attr_stdsetdef
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeStdSetDef
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_stdSetDef
return|;
block|}
specifier|inline
name|int
name|attributeStdSetDef
argument_list|()
specifier|const
block|{
return|return
name|m_attr_stdSetDef
return|;
block|}
specifier|inline
name|void
name|setAttributeStdSetDef
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_stdSetDef
operator|=
name|a
expr_stmt|;
name|m_has_attr_stdSetDef
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeStdSetDef
parameter_list|()
block|{
name|m_has_attr_stdSetDef
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QString
name|elementAuthor
argument_list|()
specifier|const
block|{
return|return
name|m_author
return|;
block|}
name|void
name|setElementAuthor
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementAuthor
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Author
return|;
block|}
name|void
name|clearElementAuthor
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementComment
argument_list|()
specifier|const
block|{
return|return
name|m_comment
return|;
block|}
name|void
name|setElementComment
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementComment
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Comment
return|;
block|}
name|void
name|clearElementComment
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementExportMacro
argument_list|()
specifier|const
block|{
return|return
name|m_exportMacro
return|;
block|}
name|void
name|setElementExportMacro
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementExportMacro
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|ExportMacro
return|;
block|}
name|void
name|clearElementExportMacro
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementClass
argument_list|()
specifier|const
block|{
return|return
name|m_class
return|;
block|}
name|void
name|setElementClass
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementClass
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Class
return|;
block|}
name|void
name|clearElementClass
parameter_list|()
function_decl|;
specifier|inline
name|DomWidget
operator|*
name|elementWidget
argument_list|()
specifier|const
block|{
return|return
name|m_widget
return|;
block|}
name|DomWidget
modifier|*
name|takeElementWidget
parameter_list|()
function_decl|;
name|void
name|setElementWidget
parameter_list|(
name|DomWidget
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementWidget
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Widget
return|;
block|}
name|void
name|clearElementWidget
parameter_list|()
function_decl|;
specifier|inline
name|DomLayoutDefault
operator|*
name|elementLayoutDefault
argument_list|()
specifier|const
block|{
return|return
name|m_layoutDefault
return|;
block|}
name|DomLayoutDefault
modifier|*
name|takeElementLayoutDefault
parameter_list|()
function_decl|;
name|void
name|setElementLayoutDefault
parameter_list|(
name|DomLayoutDefault
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementLayoutDefault
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|LayoutDefault
return|;
block|}
name|void
name|clearElementLayoutDefault
parameter_list|()
function_decl|;
specifier|inline
name|DomLayoutFunction
operator|*
name|elementLayoutFunction
argument_list|()
specifier|const
block|{
return|return
name|m_layoutFunction
return|;
block|}
name|DomLayoutFunction
modifier|*
name|takeElementLayoutFunction
parameter_list|()
function_decl|;
name|void
name|setElementLayoutFunction
parameter_list|(
name|DomLayoutFunction
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementLayoutFunction
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|LayoutFunction
return|;
block|}
name|void
name|clearElementLayoutFunction
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementPixmapFunction
argument_list|()
specifier|const
block|{
return|return
name|m_pixmapFunction
return|;
block|}
name|void
name|setElementPixmapFunction
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementPixmapFunction
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|PixmapFunction
return|;
block|}
name|void
name|clearElementPixmapFunction
parameter_list|()
function_decl|;
specifier|inline
name|DomCustomWidgets
operator|*
name|elementCustomWidgets
argument_list|()
specifier|const
block|{
return|return
name|m_customWidgets
return|;
block|}
name|DomCustomWidgets
modifier|*
name|takeElementCustomWidgets
parameter_list|()
function_decl|;
name|void
name|setElementCustomWidgets
parameter_list|(
name|DomCustomWidgets
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementCustomWidgets
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|CustomWidgets
return|;
block|}
name|void
name|clearElementCustomWidgets
parameter_list|()
function_decl|;
specifier|inline
name|DomTabStops
operator|*
name|elementTabStops
argument_list|()
specifier|const
block|{
return|return
name|m_tabStops
return|;
block|}
name|DomTabStops
modifier|*
name|takeElementTabStops
parameter_list|()
function_decl|;
name|void
name|setElementTabStops
parameter_list|(
name|DomTabStops
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementTabStops
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|TabStops
return|;
block|}
name|void
name|clearElementTabStops
parameter_list|()
function_decl|;
specifier|inline
name|DomImages
operator|*
name|elementImages
argument_list|()
specifier|const
block|{
return|return
name|m_images
return|;
block|}
name|DomImages
modifier|*
name|takeElementImages
parameter_list|()
function_decl|;
name|void
name|setElementImages
parameter_list|(
name|DomImages
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementImages
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Images
return|;
block|}
name|void
name|clearElementImages
parameter_list|()
function_decl|;
specifier|inline
name|DomIncludes
operator|*
name|elementIncludes
argument_list|()
specifier|const
block|{
return|return
name|m_includes
return|;
block|}
name|DomIncludes
modifier|*
name|takeElementIncludes
parameter_list|()
function_decl|;
name|void
name|setElementIncludes
parameter_list|(
name|DomIncludes
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementIncludes
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Includes
return|;
block|}
name|void
name|clearElementIncludes
parameter_list|()
function_decl|;
specifier|inline
name|DomResources
operator|*
name|elementResources
argument_list|()
specifier|const
block|{
return|return
name|m_resources
return|;
block|}
name|DomResources
modifier|*
name|takeElementResources
parameter_list|()
function_decl|;
name|void
name|setElementResources
parameter_list|(
name|DomResources
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementResources
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Resources
return|;
block|}
name|void
name|clearElementResources
parameter_list|()
function_decl|;
specifier|inline
name|DomConnections
operator|*
name|elementConnections
argument_list|()
specifier|const
block|{
return|return
name|m_connections
return|;
block|}
name|DomConnections
modifier|*
name|takeElementConnections
parameter_list|()
function_decl|;
name|void
name|setElementConnections
parameter_list|(
name|DomConnections
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementConnections
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Connections
return|;
block|}
name|void
name|clearElementConnections
parameter_list|()
function_decl|;
specifier|inline
name|DomDesignerData
operator|*
name|elementDesignerdata
argument_list|()
specifier|const
block|{
return|return
name|m_designerdata
return|;
block|}
name|DomDesignerData
modifier|*
name|takeElementDesignerdata
parameter_list|()
function_decl|;
name|void
name|setElementDesignerdata
parameter_list|(
name|DomDesignerData
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementDesignerdata
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Designerdata
return|;
block|}
name|void
name|clearElementDesignerdata
parameter_list|()
function_decl|;
specifier|inline
name|DomSlots
operator|*
name|elementSlots
argument_list|()
specifier|const
block|{
return|return
name|m_slots
return|;
block|}
name|DomSlots
modifier|*
name|takeElementSlots
parameter_list|()
function_decl|;
name|void
name|setElementSlots
parameter_list|(
name|DomSlots
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSlots
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Slots
return|;
block|}
name|void
name|clearElementSlots
parameter_list|()
function_decl|;
specifier|inline
name|DomButtonGroups
operator|*
name|elementButtonGroups
argument_list|()
specifier|const
block|{
return|return
name|m_buttonGroups
return|;
block|}
name|DomButtonGroups
modifier|*
name|takeElementButtonGroups
parameter_list|()
function_decl|;
name|void
name|setElementButtonGroups
parameter_list|(
name|DomButtonGroups
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementButtonGroups
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|ButtonGroups
return|;
block|}
name|void
name|clearElementButtonGroups
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_version
decl_stmt|;
name|bool
name|m_has_attr_version
decl_stmt|;
name|QString
name|m_attr_language
decl_stmt|;
name|bool
name|m_has_attr_language
decl_stmt|;
name|QString
name|m_attr_displayname
decl_stmt|;
name|bool
name|m_has_attr_displayname
decl_stmt|;
name|int
name|m_attr_stdsetdef
decl_stmt|;
name|bool
name|m_has_attr_stdsetdef
decl_stmt|;
name|int
name|m_attr_stdSetDef
decl_stmt|;
name|bool
name|m_has_attr_stdSetDef
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QString
name|m_author
decl_stmt|;
name|QString
name|m_comment
decl_stmt|;
name|QString
name|m_exportMacro
decl_stmt|;
name|QString
name|m_class
decl_stmt|;
name|DomWidget
modifier|*
name|m_widget
decl_stmt|;
name|DomLayoutDefault
modifier|*
name|m_layoutDefault
decl_stmt|;
name|DomLayoutFunction
modifier|*
name|m_layoutFunction
decl_stmt|;
name|QString
name|m_pixmapFunction
decl_stmt|;
name|DomCustomWidgets
modifier|*
name|m_customWidgets
decl_stmt|;
name|DomTabStops
modifier|*
name|m_tabStops
decl_stmt|;
name|DomImages
modifier|*
name|m_images
decl_stmt|;
name|DomIncludes
modifier|*
name|m_includes
decl_stmt|;
name|DomResources
modifier|*
name|m_resources
decl_stmt|;
name|DomConnections
modifier|*
name|m_connections
decl_stmt|;
name|DomDesignerData
modifier|*
name|m_designerdata
decl_stmt|;
name|DomSlots
modifier|*
name|m_slots
decl_stmt|;
name|DomButtonGroups
modifier|*
name|m_buttonGroups
decl_stmt|;
enum|enum
name|Child
block|{
name|Author
init|=
literal|1
block|,
name|Comment
init|=
literal|2
block|,
name|ExportMacro
init|=
literal|4
block|,
name|Class
init|=
literal|8
block|,
name|Widget
init|=
literal|16
block|,
name|LayoutDefault
init|=
literal|32
block|,
name|LayoutFunction
init|=
literal|64
block|,
name|PixmapFunction
init|=
literal|128
block|,
name|CustomWidgets
init|=
literal|256
block|,
name|TabStops
init|=
literal|512
block|,
name|Images
init|=
literal|1024
block|,
name|Includes
init|=
literal|2048
block|,
name|Resources
init|=
literal|4096
block|,
name|Connections
init|=
literal|8192
block|,
name|Designerdata
init|=
literal|16384
block|,
name|Slots
init|=
literal|32768
block|,
name|ButtonGroups
init|=
literal|65536
block|}
enum|;
name|DomUI
argument_list|(
specifier|const
name|DomUI
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomUI
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomIncludes
block|{
name|public
label|:
name|DomIncludes
argument_list|()
expr_stmt|;
operator|~
name|DomIncludes
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomInclude
operator|*
operator|>
name|elementInclude
argument_list|()
specifier|const
block|{
return|return
name|m_include
return|;
block|}
name|void
name|setElementInclude
argument_list|(
specifier|const
name|QList
operator|<
name|DomInclude
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomInclude
operator|*
operator|>
name|m_include
expr_stmt|;
enum|enum
name|Child
block|{
name|Include
init|=
literal|1
block|}
enum|;
name|DomIncludes
argument_list|(
specifier|const
name|DomIncludes
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomIncludes
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomInclude
block|{
name|public
label|:
name|DomInclude
argument_list|()
expr_stmt|;
operator|~
name|DomInclude
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeLocation
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_location
return|;
block|}
specifier|inline
name|QString
name|attributeLocation
argument_list|()
specifier|const
block|{
return|return
name|m_attr_location
return|;
block|}
specifier|inline
name|void
name|setAttributeLocation
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_location
operator|=
name|a
expr_stmt|;
name|m_has_attr_location
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeLocation
parameter_list|()
block|{
name|m_has_attr_location
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeImpldecl
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_impldecl
return|;
block|}
specifier|inline
name|QString
name|attributeImpldecl
argument_list|()
specifier|const
block|{
return|return
name|m_attr_impldecl
return|;
block|}
specifier|inline
name|void
name|setAttributeImpldecl
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_impldecl
operator|=
name|a
expr_stmt|;
name|m_has_attr_impldecl
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeImpldecl
parameter_list|()
block|{
name|m_has_attr_impldecl
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_location
decl_stmt|;
name|bool
name|m_has_attr_location
decl_stmt|;
name|QString
name|m_attr_impldecl
decl_stmt|;
name|bool
name|m_has_attr_impldecl
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomInclude
argument_list|(
specifier|const
name|DomInclude
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomInclude
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomResources
block|{
name|public
label|:
name|DomResources
argument_list|()
expr_stmt|;
operator|~
name|DomResources
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomResource
operator|*
operator|>
name|elementInclude
argument_list|()
specifier|const
block|{
return|return
name|m_include
return|;
block|}
name|void
name|setElementInclude
argument_list|(
specifier|const
name|QList
operator|<
name|DomResource
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomResource
operator|*
operator|>
name|m_include
expr_stmt|;
enum|enum
name|Child
block|{
name|Include
init|=
literal|1
block|}
enum|;
name|DomResources
argument_list|(
specifier|const
name|DomResources
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomResources
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomResource
block|{
name|public
label|:
name|DomResource
argument_list|()
expr_stmt|;
operator|~
name|DomResource
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeLocation
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_location
return|;
block|}
specifier|inline
name|QString
name|attributeLocation
argument_list|()
specifier|const
block|{
return|return
name|m_attr_location
return|;
block|}
specifier|inline
name|void
name|setAttributeLocation
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_location
operator|=
name|a
expr_stmt|;
name|m_has_attr_location
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeLocation
parameter_list|()
block|{
name|m_has_attr_location
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_location
decl_stmt|;
name|bool
name|m_has_attr_location
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomResource
argument_list|(
specifier|const
name|DomResource
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomResource
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomActionGroup
block|{
name|public
label|:
name|DomActionGroup
argument_list|()
expr_stmt|;
operator|~
name|DomActionGroup
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomAction
operator|*
operator|>
name|elementAction
argument_list|()
specifier|const
block|{
return|return
name|m_action
return|;
block|}
name|void
name|setElementAction
argument_list|(
specifier|const
name|QList
operator|<
name|DomAction
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomActionGroup
operator|*
operator|>
name|elementActionGroup
argument_list|()
specifier|const
block|{
return|return
name|m_actionGroup
return|;
block|}
name|void
name|setElementActionGroup
argument_list|(
specifier|const
name|QList
operator|<
name|DomActionGroup
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementAttribute
argument_list|()
specifier|const
block|{
return|return
name|m_attribute
return|;
block|}
name|void
name|setElementAttribute
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomAction
operator|*
operator|>
name|m_action
expr_stmt|;
name|QList
operator|<
name|DomActionGroup
operator|*
operator|>
name|m_actionGroup
expr_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_attribute
expr_stmt|;
enum|enum
name|Child
block|{
name|Action
init|=
literal|1
block|,
name|ActionGroup
init|=
literal|2
block|,
name|Property
init|=
literal|4
block|,
name|Attribute
init|=
literal|8
block|}
enum|;
name|DomActionGroup
argument_list|(
specifier|const
name|DomActionGroup
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomActionGroup
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomAction
block|{
name|public
label|:
name|DomAction
argument_list|()
expr_stmt|;
operator|~
name|DomAction
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeMenu
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_menu
return|;
block|}
specifier|inline
name|QString
name|attributeMenu
argument_list|()
specifier|const
block|{
return|return
name|m_attr_menu
return|;
block|}
specifier|inline
name|void
name|setAttributeMenu
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_menu
operator|=
name|a
expr_stmt|;
name|m_has_attr_menu
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeMenu
parameter_list|()
block|{
name|m_has_attr_menu
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementAttribute
argument_list|()
specifier|const
block|{
return|return
name|m_attribute
return|;
block|}
name|void
name|setElementAttribute
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
name|QString
name|m_attr_menu
decl_stmt|;
name|bool
name|m_has_attr_menu
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_attribute
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|,
name|Attribute
init|=
literal|2
block|}
enum|;
name|DomAction
argument_list|(
specifier|const
name|DomAction
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomAction
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomActionRef
block|{
name|public
label|:
name|DomActionRef
argument_list|()
expr_stmt|;
operator|~
name|DomActionRef
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomActionRef
argument_list|(
specifier|const
name|DomActionRef
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomActionRef
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomButtonGroup
block|{
name|public
label|:
name|DomButtonGroup
argument_list|()
expr_stmt|;
operator|~
name|DomButtonGroup
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementAttribute
argument_list|()
specifier|const
block|{
return|return
name|m_attribute
return|;
block|}
name|void
name|setElementAttribute
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_attribute
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|,
name|Attribute
init|=
literal|2
block|}
enum|;
name|DomButtonGroup
argument_list|(
specifier|const
name|DomButtonGroup
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomButtonGroup
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomButtonGroups
block|{
name|public
label|:
name|DomButtonGroups
argument_list|()
expr_stmt|;
operator|~
name|DomButtonGroups
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomButtonGroup
operator|*
operator|>
name|elementButtonGroup
argument_list|()
specifier|const
block|{
return|return
name|m_buttonGroup
return|;
block|}
name|void
name|setElementButtonGroup
argument_list|(
specifier|const
name|QList
operator|<
name|DomButtonGroup
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomButtonGroup
operator|*
operator|>
name|m_buttonGroup
expr_stmt|;
enum|enum
name|Child
block|{
name|ButtonGroup
init|=
literal|1
block|}
enum|;
name|DomButtonGroups
argument_list|(
specifier|const
name|DomButtonGroups
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomButtonGroups
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomImages
block|{
name|public
label|:
name|DomImages
argument_list|()
expr_stmt|;
operator|~
name|DomImages
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomImage
operator|*
operator|>
name|elementImage
argument_list|()
specifier|const
block|{
return|return
name|m_image
return|;
block|}
name|void
name|setElementImage
argument_list|(
specifier|const
name|QList
operator|<
name|DomImage
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomImage
operator|*
operator|>
name|m_image
expr_stmt|;
enum|enum
name|Child
block|{
name|Image
init|=
literal|1
block|}
enum|;
name|DomImages
argument_list|(
specifier|const
name|DomImages
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomImages
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomImage
block|{
name|public
label|:
name|DomImage
argument_list|()
expr_stmt|;
operator|~
name|DomImage
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|DomImageData
operator|*
name|elementData
argument_list|()
specifier|const
block|{
return|return
name|m_data
return|;
block|}
name|DomImageData
modifier|*
name|takeElementData
parameter_list|()
function_decl|;
name|void
name|setElementData
parameter_list|(
name|DomImageData
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementData
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Data
return|;
block|}
name|void
name|clearElementData
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomImageData
modifier|*
name|m_data
decl_stmt|;
enum|enum
name|Child
block|{
name|Data
init|=
literal|1
block|}
enum|;
name|DomImage
argument_list|(
specifier|const
name|DomImage
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomImage
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomImageData
block|{
name|public
label|:
name|DomImageData
argument_list|()
expr_stmt|;
operator|~
name|DomImageData
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeFormat
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_format
return|;
block|}
specifier|inline
name|QString
name|attributeFormat
argument_list|()
specifier|const
block|{
return|return
name|m_attr_format
return|;
block|}
specifier|inline
name|void
name|setAttributeFormat
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_format
operator|=
name|a
expr_stmt|;
name|m_has_attr_format
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeFormat
parameter_list|()
block|{
name|m_has_attr_format
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeLength
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_length
return|;
block|}
specifier|inline
name|int
name|attributeLength
argument_list|()
specifier|const
block|{
return|return
name|m_attr_length
return|;
block|}
specifier|inline
name|void
name|setAttributeLength
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_length
operator|=
name|a
expr_stmt|;
name|m_has_attr_length
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeLength
parameter_list|()
block|{
name|m_has_attr_length
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_format
decl_stmt|;
name|bool
name|m_has_attr_format
decl_stmt|;
name|int
name|m_attr_length
decl_stmt|;
name|bool
name|m_has_attr_length
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomImageData
argument_list|(
specifier|const
name|DomImageData
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomImageData
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomCustomWidgets
block|{
name|public
label|:
name|DomCustomWidgets
argument_list|()
expr_stmt|;
operator|~
name|DomCustomWidgets
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomCustomWidget
operator|*
operator|>
name|elementCustomWidget
argument_list|()
specifier|const
block|{
return|return
name|m_customWidget
return|;
block|}
name|void
name|setElementCustomWidget
argument_list|(
specifier|const
name|QList
operator|<
name|DomCustomWidget
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomCustomWidget
operator|*
operator|>
name|m_customWidget
expr_stmt|;
enum|enum
name|Child
block|{
name|CustomWidget
init|=
literal|1
block|}
enum|;
name|DomCustomWidgets
argument_list|(
specifier|const
name|DomCustomWidgets
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomCustomWidgets
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomHeader
block|{
name|public
label|:
name|DomHeader
argument_list|()
expr_stmt|;
operator|~
name|DomHeader
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeLocation
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_location
return|;
block|}
specifier|inline
name|QString
name|attributeLocation
argument_list|()
specifier|const
block|{
return|return
name|m_attr_location
return|;
block|}
specifier|inline
name|void
name|setAttributeLocation
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_location
operator|=
name|a
expr_stmt|;
name|m_has_attr_location
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeLocation
parameter_list|()
block|{
name|m_has_attr_location
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_location
decl_stmt|;
name|bool
name|m_has_attr_location
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomHeader
argument_list|(
specifier|const
name|DomHeader
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomHeader
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomCustomWidget
block|{
name|public
label|:
name|DomCustomWidget
argument_list|()
expr_stmt|;
operator|~
name|DomCustomWidget
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QString
name|elementClass
argument_list|()
specifier|const
block|{
return|return
name|m_class
return|;
block|}
name|void
name|setElementClass
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementClass
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Class
return|;
block|}
name|void
name|clearElementClass
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementExtends
argument_list|()
specifier|const
block|{
return|return
name|m_extends
return|;
block|}
name|void
name|setElementExtends
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementExtends
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Extends
return|;
block|}
name|void
name|clearElementExtends
parameter_list|()
function_decl|;
specifier|inline
name|DomHeader
operator|*
name|elementHeader
argument_list|()
specifier|const
block|{
return|return
name|m_header
return|;
block|}
name|DomHeader
modifier|*
name|takeElementHeader
parameter_list|()
function_decl|;
name|void
name|setElementHeader
parameter_list|(
name|DomHeader
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHeader
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Header
return|;
block|}
name|void
name|clearElementHeader
parameter_list|()
function_decl|;
specifier|inline
name|DomSize
operator|*
name|elementSizeHint
argument_list|()
specifier|const
block|{
return|return
name|m_sizeHint
return|;
block|}
name|DomSize
modifier|*
name|takeElementSizeHint
parameter_list|()
function_decl|;
name|void
name|setElementSizeHint
parameter_list|(
name|DomSize
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSizeHint
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|SizeHint
return|;
block|}
name|void
name|clearElementSizeHint
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementAddPageMethod
argument_list|()
specifier|const
block|{
return|return
name|m_addPageMethod
return|;
block|}
name|void
name|setElementAddPageMethod
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementAddPageMethod
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|AddPageMethod
return|;
block|}
name|void
name|clearElementAddPageMethod
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementContainer
argument_list|()
specifier|const
block|{
return|return
name|m_container
return|;
block|}
name|void
name|setElementContainer
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementContainer
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Container
return|;
block|}
name|void
name|clearElementContainer
parameter_list|()
function_decl|;
specifier|inline
name|DomSizePolicyData
operator|*
name|elementSizePolicy
argument_list|()
specifier|const
block|{
return|return
name|m_sizePolicy
return|;
block|}
name|DomSizePolicyData
modifier|*
name|takeElementSizePolicy
parameter_list|()
function_decl|;
name|void
name|setElementSizePolicy
parameter_list|(
name|DomSizePolicyData
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSizePolicy
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|SizePolicy
return|;
block|}
name|void
name|clearElementSizePolicy
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementPixmap
argument_list|()
specifier|const
block|{
return|return
name|m_pixmap
return|;
block|}
name|void
name|setElementPixmap
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementPixmap
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Pixmap
return|;
block|}
name|void
name|clearElementPixmap
parameter_list|()
function_decl|;
specifier|inline
name|DomScript
operator|*
name|elementScript
argument_list|()
specifier|const
block|{
return|return
name|m_script
return|;
block|}
name|DomScript
modifier|*
name|takeElementScript
parameter_list|()
function_decl|;
name|void
name|setElementScript
parameter_list|(
name|DomScript
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementScript
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Script
return|;
block|}
name|void
name|clearElementScript
parameter_list|()
function_decl|;
specifier|inline
name|DomProperties
operator|*
name|elementProperties
argument_list|()
specifier|const
block|{
return|return
name|m_properties
return|;
block|}
name|DomProperties
modifier|*
name|takeElementProperties
parameter_list|()
function_decl|;
name|void
name|setElementProperties
parameter_list|(
name|DomProperties
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementProperties
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Properties
return|;
block|}
name|void
name|clearElementProperties
parameter_list|()
function_decl|;
specifier|inline
name|DomSlots
operator|*
name|elementSlots
argument_list|()
specifier|const
block|{
return|return
name|m_slots
return|;
block|}
name|DomSlots
modifier|*
name|takeElementSlots
parameter_list|()
function_decl|;
name|void
name|setElementSlots
parameter_list|(
name|DomSlots
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSlots
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Slots
return|;
block|}
name|void
name|clearElementSlots
parameter_list|()
function_decl|;
specifier|inline
name|DomPropertySpecifications
operator|*
name|elementPropertyspecifications
argument_list|()
specifier|const
block|{
return|return
name|m_propertyspecifications
return|;
block|}
name|DomPropertySpecifications
modifier|*
name|takeElementPropertyspecifications
parameter_list|()
function_decl|;
name|void
name|setElementPropertyspecifications
parameter_list|(
name|DomPropertySpecifications
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementPropertyspecifications
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Propertyspecifications
return|;
block|}
name|void
name|clearElementPropertyspecifications
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QString
name|m_class
decl_stmt|;
name|QString
name|m_extends
decl_stmt|;
name|DomHeader
modifier|*
name|m_header
decl_stmt|;
name|DomSize
modifier|*
name|m_sizeHint
decl_stmt|;
name|QString
name|m_addPageMethod
decl_stmt|;
name|int
name|m_container
decl_stmt|;
name|DomSizePolicyData
modifier|*
name|m_sizePolicy
decl_stmt|;
name|QString
name|m_pixmap
decl_stmt|;
name|DomScript
modifier|*
name|m_script
decl_stmt|;
name|DomProperties
modifier|*
name|m_properties
decl_stmt|;
name|DomSlots
modifier|*
name|m_slots
decl_stmt|;
name|DomPropertySpecifications
modifier|*
name|m_propertyspecifications
decl_stmt|;
enum|enum
name|Child
block|{
name|Class
init|=
literal|1
block|,
name|Extends
init|=
literal|2
block|,
name|Header
init|=
literal|4
block|,
name|SizeHint
init|=
literal|8
block|,
name|AddPageMethod
init|=
literal|16
block|,
name|Container
init|=
literal|32
block|,
name|SizePolicy
init|=
literal|64
block|,
name|Pixmap
init|=
literal|128
block|,
name|Script
init|=
literal|256
block|,
name|Properties
init|=
literal|512
block|,
name|Slots
init|=
literal|1024
block|,
name|Propertyspecifications
init|=
literal|2048
block|}
enum|;
name|DomCustomWidget
argument_list|(
specifier|const
name|DomCustomWidget
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomCustomWidget
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomProperties
block|{
name|public
label|:
name|DomProperties
argument_list|()
expr_stmt|;
operator|~
name|DomProperties
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomPropertyData
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomPropertyData
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomPropertyData
operator|*
operator|>
name|m_property
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|}
enum|;
name|DomProperties
argument_list|(
specifier|const
name|DomProperties
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomProperties
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomPropertyData
block|{
name|public
label|:
name|DomPropertyData
argument_list|()
expr_stmt|;
operator|~
name|DomPropertyData
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeType
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_type
return|;
block|}
specifier|inline
name|QString
name|attributeType
argument_list|()
specifier|const
block|{
return|return
name|m_attr_type
return|;
block|}
specifier|inline
name|void
name|setAttributeType
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_type
operator|=
name|a
expr_stmt|;
name|m_has_attr_type
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeType
parameter_list|()
block|{
name|m_has_attr_type
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_type
decl_stmt|;
name|bool
name|m_has_attr_type
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomPropertyData
argument_list|(
specifier|const
name|DomPropertyData
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomPropertyData
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomSizePolicyData
block|{
name|public
label|:
name|DomSizePolicyData
argument_list|()
expr_stmt|;
operator|~
name|DomSizePolicyData
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementHorData
argument_list|()
specifier|const
block|{
return|return
name|m_horData
return|;
block|}
name|void
name|setElementHorData
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHorData
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|HorData
return|;
block|}
name|void
name|clearElementHorData
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementVerData
argument_list|()
specifier|const
block|{
return|return
name|m_verData
return|;
block|}
name|void
name|setElementVerData
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementVerData
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|VerData
return|;
block|}
name|void
name|clearElementVerData
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_horData
decl_stmt|;
name|int
name|m_verData
decl_stmt|;
enum|enum
name|Child
block|{
name|HorData
init|=
literal|1
block|,
name|VerData
init|=
literal|2
block|}
enum|;
name|DomSizePolicyData
argument_list|(
specifier|const
name|DomSizePolicyData
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomSizePolicyData
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomLayoutDefault
block|{
name|public
label|:
name|DomLayoutDefault
argument_list|()
expr_stmt|;
operator|~
name|DomLayoutDefault
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeSpacing
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_spacing
return|;
block|}
specifier|inline
name|int
name|attributeSpacing
argument_list|()
specifier|const
block|{
return|return
name|m_attr_spacing
return|;
block|}
specifier|inline
name|void
name|setAttributeSpacing
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_spacing
operator|=
name|a
expr_stmt|;
name|m_has_attr_spacing
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeSpacing
parameter_list|()
block|{
name|m_has_attr_spacing
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeMargin
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_margin
return|;
block|}
specifier|inline
name|int
name|attributeMargin
argument_list|()
specifier|const
block|{
return|return
name|m_attr_margin
return|;
block|}
specifier|inline
name|void
name|setAttributeMargin
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_margin
operator|=
name|a
expr_stmt|;
name|m_has_attr_margin
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeMargin
parameter_list|()
block|{
name|m_has_attr_margin
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|int
name|m_attr_spacing
decl_stmt|;
name|bool
name|m_has_attr_spacing
decl_stmt|;
name|int
name|m_attr_margin
decl_stmt|;
name|bool
name|m_has_attr_margin
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomLayoutDefault
argument_list|(
specifier|const
name|DomLayoutDefault
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomLayoutDefault
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomLayoutFunction
block|{
name|public
label|:
name|DomLayoutFunction
argument_list|()
expr_stmt|;
operator|~
name|DomLayoutFunction
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeSpacing
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_spacing
return|;
block|}
specifier|inline
name|QString
name|attributeSpacing
argument_list|()
specifier|const
block|{
return|return
name|m_attr_spacing
return|;
block|}
specifier|inline
name|void
name|setAttributeSpacing
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_spacing
operator|=
name|a
expr_stmt|;
name|m_has_attr_spacing
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeSpacing
parameter_list|()
block|{
name|m_has_attr_spacing
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeMargin
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_margin
return|;
block|}
specifier|inline
name|QString
name|attributeMargin
argument_list|()
specifier|const
block|{
return|return
name|m_attr_margin
return|;
block|}
specifier|inline
name|void
name|setAttributeMargin
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_margin
operator|=
name|a
expr_stmt|;
name|m_has_attr_margin
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeMargin
parameter_list|()
block|{
name|m_has_attr_margin
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_spacing
decl_stmt|;
name|bool
name|m_has_attr_spacing
decl_stmt|;
name|QString
name|m_attr_margin
decl_stmt|;
name|bool
name|m_has_attr_margin
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomLayoutFunction
argument_list|(
specifier|const
name|DomLayoutFunction
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomLayoutFunction
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomTabStops
block|{
name|public
label|:
name|DomTabStops
argument_list|()
expr_stmt|;
operator|~
name|DomTabStops
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QStringList
name|elementTabStop
argument_list|()
specifier|const
block|{
return|return
name|m_tabStop
return|;
block|}
name|void
name|setElementTabStop
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|a
parameter_list|)
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QStringList
name|m_tabStop
decl_stmt|;
enum|enum
name|Child
block|{
name|TabStop
init|=
literal|1
block|}
enum|;
name|DomTabStops
argument_list|(
specifier|const
name|DomTabStops
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomTabStops
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomLayout
block|{
name|public
label|:
name|DomLayout
argument_list|()
expr_stmt|;
operator|~
name|DomLayout
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeClass
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_class
return|;
block|}
specifier|inline
name|QString
name|attributeClass
argument_list|()
specifier|const
block|{
return|return
name|m_attr_class
return|;
block|}
specifier|inline
name|void
name|setAttributeClass
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_class
operator|=
name|a
expr_stmt|;
name|m_has_attr_class
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeClass
parameter_list|()
block|{
name|m_has_attr_class
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeStretch
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_stretch
return|;
block|}
specifier|inline
name|QString
name|attributeStretch
argument_list|()
specifier|const
block|{
return|return
name|m_attr_stretch
return|;
block|}
specifier|inline
name|void
name|setAttributeStretch
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_stretch
operator|=
name|a
expr_stmt|;
name|m_has_attr_stretch
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeStretch
parameter_list|()
block|{
name|m_has_attr_stretch
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeRowStretch
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_rowStretch
return|;
block|}
specifier|inline
name|QString
name|attributeRowStretch
argument_list|()
specifier|const
block|{
return|return
name|m_attr_rowStretch
return|;
block|}
specifier|inline
name|void
name|setAttributeRowStretch
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_rowStretch
operator|=
name|a
expr_stmt|;
name|m_has_attr_rowStretch
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeRowStretch
parameter_list|()
block|{
name|m_has_attr_rowStretch
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeColumnStretch
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_columnStretch
return|;
block|}
specifier|inline
name|QString
name|attributeColumnStretch
argument_list|()
specifier|const
block|{
return|return
name|m_attr_columnStretch
return|;
block|}
specifier|inline
name|void
name|setAttributeColumnStretch
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_columnStretch
operator|=
name|a
expr_stmt|;
name|m_has_attr_columnStretch
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeColumnStretch
parameter_list|()
block|{
name|m_has_attr_columnStretch
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeRowMinimumHeight
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_rowMinimumHeight
return|;
block|}
specifier|inline
name|QString
name|attributeRowMinimumHeight
argument_list|()
specifier|const
block|{
return|return
name|m_attr_rowMinimumHeight
return|;
block|}
specifier|inline
name|void
name|setAttributeRowMinimumHeight
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_rowMinimumHeight
operator|=
name|a
expr_stmt|;
name|m_has_attr_rowMinimumHeight
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeRowMinimumHeight
parameter_list|()
block|{
name|m_has_attr_rowMinimumHeight
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeColumnMinimumWidth
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_columnMinimumWidth
return|;
block|}
specifier|inline
name|QString
name|attributeColumnMinimumWidth
argument_list|()
specifier|const
block|{
return|return
name|m_attr_columnMinimumWidth
return|;
block|}
specifier|inline
name|void
name|setAttributeColumnMinimumWidth
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_columnMinimumWidth
operator|=
name|a
expr_stmt|;
name|m_has_attr_columnMinimumWidth
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeColumnMinimumWidth
parameter_list|()
block|{
name|m_has_attr_columnMinimumWidth
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementAttribute
argument_list|()
specifier|const
block|{
return|return
name|m_attribute
return|;
block|}
name|void
name|setElementAttribute
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomLayoutItem
operator|*
operator|>
name|elementItem
argument_list|()
specifier|const
block|{
return|return
name|m_item
return|;
block|}
name|void
name|setElementItem
argument_list|(
specifier|const
name|QList
operator|<
name|DomLayoutItem
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_class
decl_stmt|;
name|bool
name|m_has_attr_class
decl_stmt|;
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
name|QString
name|m_attr_stretch
decl_stmt|;
name|bool
name|m_has_attr_stretch
decl_stmt|;
name|QString
name|m_attr_rowStretch
decl_stmt|;
name|bool
name|m_has_attr_rowStretch
decl_stmt|;
name|QString
name|m_attr_columnStretch
decl_stmt|;
name|bool
name|m_has_attr_columnStretch
decl_stmt|;
name|QString
name|m_attr_rowMinimumHeight
decl_stmt|;
name|bool
name|m_has_attr_rowMinimumHeight
decl_stmt|;
name|QString
name|m_attr_columnMinimumWidth
decl_stmt|;
name|bool
name|m_has_attr_columnMinimumWidth
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_attribute
expr_stmt|;
name|QList
operator|<
name|DomLayoutItem
operator|*
operator|>
name|m_item
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|,
name|Attribute
init|=
literal|2
block|,
name|Item
init|=
literal|4
block|}
enum|;
name|DomLayout
argument_list|(
specifier|const
name|DomLayout
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomLayout
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomLayoutItem
block|{
name|public
label|:
name|DomLayoutItem
argument_list|()
expr_stmt|;
operator|~
name|DomLayoutItem
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeRow
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_row
return|;
block|}
specifier|inline
name|int
name|attributeRow
argument_list|()
specifier|const
block|{
return|return
name|m_attr_row
return|;
block|}
specifier|inline
name|void
name|setAttributeRow
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_row
operator|=
name|a
expr_stmt|;
name|m_has_attr_row
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeRow
parameter_list|()
block|{
name|m_has_attr_row
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeColumn
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_column
return|;
block|}
specifier|inline
name|int
name|attributeColumn
argument_list|()
specifier|const
block|{
return|return
name|m_attr_column
return|;
block|}
specifier|inline
name|void
name|setAttributeColumn
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_column
operator|=
name|a
expr_stmt|;
name|m_has_attr_column
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeColumn
parameter_list|()
block|{
name|m_has_attr_column
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeRowSpan
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_rowSpan
return|;
block|}
specifier|inline
name|int
name|attributeRowSpan
argument_list|()
specifier|const
block|{
return|return
name|m_attr_rowSpan
return|;
block|}
specifier|inline
name|void
name|setAttributeRowSpan
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_rowSpan
operator|=
name|a
expr_stmt|;
name|m_has_attr_rowSpan
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeRowSpan
parameter_list|()
block|{
name|m_has_attr_rowSpan
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeColSpan
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_colSpan
return|;
block|}
specifier|inline
name|int
name|attributeColSpan
argument_list|()
specifier|const
block|{
return|return
name|m_attr_colSpan
return|;
block|}
specifier|inline
name|void
name|setAttributeColSpan
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_colSpan
operator|=
name|a
expr_stmt|;
name|m_has_attr_colSpan
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeColSpan
parameter_list|()
block|{
name|m_has_attr_colSpan
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeAlignment
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_alignment
return|;
block|}
specifier|inline
name|QString
name|attributeAlignment
argument_list|()
specifier|const
block|{
return|return
name|m_attr_alignment
return|;
block|}
specifier|inline
name|void
name|setAttributeAlignment
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_alignment
operator|=
name|a
expr_stmt|;
name|m_has_attr_alignment
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeAlignment
parameter_list|()
block|{
name|m_has_attr_alignment
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
enum|enum
name|Kind
block|{
name|Unknown
init|=
literal|0
block|,
name|Widget
block|,
name|Layout
block|,
name|Spacer
block|}
enum|;
specifier|inline
name|Kind
name|kind
argument_list|()
specifier|const
block|{
return|return
name|m_kind
return|;
block|}
specifier|inline
name|DomWidget
operator|*
name|elementWidget
argument_list|()
specifier|const
block|{
return|return
name|m_widget
return|;
block|}
name|DomWidget
modifier|*
name|takeElementWidget
parameter_list|()
function_decl|;
name|void
name|setElementWidget
parameter_list|(
name|DomWidget
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomLayout
operator|*
name|elementLayout
argument_list|()
specifier|const
block|{
return|return
name|m_layout
return|;
block|}
name|DomLayout
modifier|*
name|takeElementLayout
parameter_list|()
function_decl|;
name|void
name|setElementLayout
parameter_list|(
name|DomLayout
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomSpacer
operator|*
name|elementSpacer
argument_list|()
specifier|const
block|{
return|return
name|m_spacer
return|;
block|}
name|DomSpacer
modifier|*
name|takeElementSpacer
parameter_list|()
function_decl|;
name|void
name|setElementSpacer
parameter_list|(
name|DomSpacer
modifier|*
name|a
parameter_list|)
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|int
name|m_attr_row
decl_stmt|;
name|bool
name|m_has_attr_row
decl_stmt|;
name|int
name|m_attr_column
decl_stmt|;
name|bool
name|m_has_attr_column
decl_stmt|;
name|int
name|m_attr_rowSpan
decl_stmt|;
name|bool
name|m_has_attr_rowSpan
decl_stmt|;
name|int
name|m_attr_colSpan
decl_stmt|;
name|bool
name|m_has_attr_colSpan
decl_stmt|;
name|QString
name|m_attr_alignment
decl_stmt|;
name|bool
name|m_has_attr_alignment
decl_stmt|;
comment|// child element data
name|Kind
name|m_kind
decl_stmt|;
name|DomWidget
modifier|*
name|m_widget
decl_stmt|;
name|DomLayout
modifier|*
name|m_layout
decl_stmt|;
name|DomSpacer
modifier|*
name|m_spacer
decl_stmt|;
name|DomLayoutItem
argument_list|(
specifier|const
name|DomLayoutItem
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomLayoutItem
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomRow
block|{
name|public
label|:
name|DomRow
argument_list|()
expr_stmt|;
operator|~
name|DomRow
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|}
enum|;
name|DomRow
argument_list|(
specifier|const
name|DomRow
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomRow
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomColumn
block|{
name|public
label|:
name|DomColumn
argument_list|()
expr_stmt|;
operator|~
name|DomColumn
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|}
enum|;
name|DomColumn
argument_list|(
specifier|const
name|DomColumn
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomColumn
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomItem
block|{
name|public
label|:
name|DomItem
argument_list|()
expr_stmt|;
operator|~
name|DomItem
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeRow
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_row
return|;
block|}
specifier|inline
name|int
name|attributeRow
argument_list|()
specifier|const
block|{
return|return
name|m_attr_row
return|;
block|}
specifier|inline
name|void
name|setAttributeRow
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_row
operator|=
name|a
expr_stmt|;
name|m_has_attr_row
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeRow
parameter_list|()
block|{
name|m_has_attr_row
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeColumn
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_column
return|;
block|}
specifier|inline
name|int
name|attributeColumn
argument_list|()
specifier|const
block|{
return|return
name|m_attr_column
return|;
block|}
specifier|inline
name|void
name|setAttributeColumn
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_column
operator|=
name|a
expr_stmt|;
name|m_has_attr_column
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeColumn
parameter_list|()
block|{
name|m_has_attr_column
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomItem
operator|*
operator|>
name|elementItem
argument_list|()
specifier|const
block|{
return|return
name|m_item
return|;
block|}
name|void
name|setElementItem
argument_list|(
specifier|const
name|QList
operator|<
name|DomItem
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|int
name|m_attr_row
decl_stmt|;
name|bool
name|m_has_attr_row
decl_stmt|;
name|int
name|m_attr_column
decl_stmt|;
name|bool
name|m_has_attr_column
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
name|QList
operator|<
name|DomItem
operator|*
operator|>
name|m_item
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|,
name|Item
init|=
literal|2
block|}
enum|;
name|DomItem
argument_list|(
specifier|const
name|DomItem
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomItem
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomWidget
block|{
name|public
label|:
name|DomWidget
argument_list|()
expr_stmt|;
operator|~
name|DomWidget
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeClass
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_class
return|;
block|}
specifier|inline
name|QString
name|attributeClass
argument_list|()
specifier|const
block|{
return|return
name|m_attr_class
return|;
block|}
specifier|inline
name|void
name|setAttributeClass
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_class
operator|=
name|a
expr_stmt|;
name|m_has_attr_class
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeClass
parameter_list|()
block|{
name|m_has_attr_class
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeNative
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_native
return|;
block|}
specifier|inline
name|bool
name|attributeNative
argument_list|()
specifier|const
block|{
return|return
name|m_attr_native
return|;
block|}
specifier|inline
name|void
name|setAttributeNative
parameter_list|(
name|bool
name|a
parameter_list|)
block|{
name|m_attr_native
operator|=
name|a
expr_stmt|;
name|m_has_attr_native
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeNative
parameter_list|()
block|{
name|m_has_attr_native
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QStringList
name|elementClass
argument_list|()
specifier|const
block|{
return|return
name|m_class
return|;
block|}
name|void
name|setElementClass
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomScript
operator|*
operator|>
name|elementScript
argument_list|()
specifier|const
block|{
return|return
name|m_script
return|;
block|}
name|void
name|setElementScript
argument_list|(
specifier|const
name|QList
operator|<
name|DomScript
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomWidgetData
operator|*
operator|>
name|elementWidgetData
argument_list|()
specifier|const
block|{
return|return
name|m_widgetData
return|;
block|}
name|void
name|setElementWidgetData
argument_list|(
specifier|const
name|QList
operator|<
name|DomWidgetData
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementAttribute
argument_list|()
specifier|const
block|{
return|return
name|m_attribute
return|;
block|}
name|void
name|setElementAttribute
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomRow
operator|*
operator|>
name|elementRow
argument_list|()
specifier|const
block|{
return|return
name|m_row
return|;
block|}
name|void
name|setElementRow
argument_list|(
specifier|const
name|QList
operator|<
name|DomRow
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomColumn
operator|*
operator|>
name|elementColumn
argument_list|()
specifier|const
block|{
return|return
name|m_column
return|;
block|}
name|void
name|setElementColumn
argument_list|(
specifier|const
name|QList
operator|<
name|DomColumn
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomItem
operator|*
operator|>
name|elementItem
argument_list|()
specifier|const
block|{
return|return
name|m_item
return|;
block|}
name|void
name|setElementItem
argument_list|(
specifier|const
name|QList
operator|<
name|DomItem
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomLayout
operator|*
operator|>
name|elementLayout
argument_list|()
specifier|const
block|{
return|return
name|m_layout
return|;
block|}
name|void
name|setElementLayout
argument_list|(
specifier|const
name|QList
operator|<
name|DomLayout
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomWidget
operator|*
operator|>
name|elementWidget
argument_list|()
specifier|const
block|{
return|return
name|m_widget
return|;
block|}
name|void
name|setElementWidget
argument_list|(
specifier|const
name|QList
operator|<
name|DomWidget
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomAction
operator|*
operator|>
name|elementAction
argument_list|()
specifier|const
block|{
return|return
name|m_action
return|;
block|}
name|void
name|setElementAction
argument_list|(
specifier|const
name|QList
operator|<
name|DomAction
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomActionGroup
operator|*
operator|>
name|elementActionGroup
argument_list|()
specifier|const
block|{
return|return
name|m_actionGroup
return|;
block|}
name|void
name|setElementActionGroup
argument_list|(
specifier|const
name|QList
operator|<
name|DomActionGroup
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomActionRef
operator|*
operator|>
name|elementAddAction
argument_list|()
specifier|const
block|{
return|return
name|m_addAction
return|;
block|}
name|void
name|setElementAddAction
argument_list|(
specifier|const
name|QList
operator|<
name|DomActionRef
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QStringList
name|elementZOrder
argument_list|()
specifier|const
block|{
return|return
name|m_zOrder
return|;
block|}
name|void
name|setElementZOrder
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|a
parameter_list|)
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_class
decl_stmt|;
name|bool
name|m_has_attr_class
decl_stmt|;
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
name|bool
name|m_attr_native
decl_stmt|;
name|bool
name|m_has_attr_native
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QStringList
name|m_class
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
name|QList
operator|<
name|DomScript
operator|*
operator|>
name|m_script
expr_stmt|;
name|QList
operator|<
name|DomWidgetData
operator|*
operator|>
name|m_widgetData
expr_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_attribute
expr_stmt|;
name|QList
operator|<
name|DomRow
operator|*
operator|>
name|m_row
expr_stmt|;
name|QList
operator|<
name|DomColumn
operator|*
operator|>
name|m_column
expr_stmt|;
name|QList
operator|<
name|DomItem
operator|*
operator|>
name|m_item
expr_stmt|;
name|QList
operator|<
name|DomLayout
operator|*
operator|>
name|m_layout
expr_stmt|;
name|QList
operator|<
name|DomWidget
operator|*
operator|>
name|m_widget
expr_stmt|;
name|QList
operator|<
name|DomAction
operator|*
operator|>
name|m_action
expr_stmt|;
name|QList
operator|<
name|DomActionGroup
operator|*
operator|>
name|m_actionGroup
expr_stmt|;
name|QList
operator|<
name|DomActionRef
operator|*
operator|>
name|m_addAction
expr_stmt|;
name|QStringList
name|m_zOrder
decl_stmt|;
enum|enum
name|Child
block|{
name|Class
init|=
literal|1
block|,
name|Property
init|=
literal|2
block|,
name|Script
init|=
literal|4
block|,
name|WidgetData
init|=
literal|8
block|,
name|Attribute
init|=
literal|16
block|,
name|Row
init|=
literal|32
block|,
name|Column
init|=
literal|64
block|,
name|Item
init|=
literal|128
block|,
name|Layout
init|=
literal|256
block|,
name|Widget
init|=
literal|512
block|,
name|Action
init|=
literal|1024
block|,
name|ActionGroup
init|=
literal|2048
block|,
name|AddAction
init|=
literal|4096
block|,
name|ZOrder
init|=
literal|8192
block|}
enum|;
name|DomWidget
argument_list|(
specifier|const
name|DomWidget
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomWidget
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomSpacer
block|{
name|public
label|:
name|DomSpacer
argument_list|()
expr_stmt|;
operator|~
name|DomSpacer
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|}
enum|;
name|DomSpacer
argument_list|(
specifier|const
name|DomSpacer
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomSpacer
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomColor
block|{
name|public
label|:
name|DomColor
argument_list|()
expr_stmt|;
operator|~
name|DomColor
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeAlpha
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_alpha
return|;
block|}
specifier|inline
name|int
name|attributeAlpha
argument_list|()
specifier|const
block|{
return|return
name|m_attr_alpha
return|;
block|}
specifier|inline
name|void
name|setAttributeAlpha
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_alpha
operator|=
name|a
expr_stmt|;
name|m_has_attr_alpha
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeAlpha
parameter_list|()
block|{
name|m_has_attr_alpha
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|int
name|elementRed
argument_list|()
specifier|const
block|{
return|return
name|m_red
return|;
block|}
name|void
name|setElementRed
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementRed
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Red
return|;
block|}
name|void
name|clearElementRed
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementGreen
argument_list|()
specifier|const
block|{
return|return
name|m_green
return|;
block|}
name|void
name|setElementGreen
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementGreen
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Green
return|;
block|}
name|void
name|clearElementGreen
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementBlue
argument_list|()
specifier|const
block|{
return|return
name|m_blue
return|;
block|}
name|void
name|setElementBlue
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementBlue
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Blue
return|;
block|}
name|void
name|clearElementBlue
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|int
name|m_attr_alpha
decl_stmt|;
name|bool
name|m_has_attr_alpha
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_red
decl_stmt|;
name|int
name|m_green
decl_stmt|;
name|int
name|m_blue
decl_stmt|;
enum|enum
name|Child
block|{
name|Red
init|=
literal|1
block|,
name|Green
init|=
literal|2
block|,
name|Blue
init|=
literal|4
block|}
enum|;
name|DomColor
argument_list|(
specifier|const
name|DomColor
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomColor
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomGradientStop
block|{
name|public
label|:
name|DomGradientStop
argument_list|()
expr_stmt|;
operator|~
name|DomGradientStop
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributePosition
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_position
return|;
block|}
specifier|inline
name|double
name|attributePosition
argument_list|()
specifier|const
block|{
return|return
name|m_attr_position
return|;
block|}
specifier|inline
name|void
name|setAttributePosition
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_position
operator|=
name|a
expr_stmt|;
name|m_has_attr_position
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributePosition
parameter_list|()
block|{
name|m_has_attr_position
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|DomColor
operator|*
name|elementColor
argument_list|()
specifier|const
block|{
return|return
name|m_color
return|;
block|}
name|DomColor
modifier|*
name|takeElementColor
parameter_list|()
function_decl|;
name|void
name|setElementColor
parameter_list|(
name|DomColor
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementColor
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Color
return|;
block|}
name|void
name|clearElementColor
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|double
name|m_attr_position
decl_stmt|;
name|bool
name|m_has_attr_position
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomColor
modifier|*
name|m_color
decl_stmt|;
enum|enum
name|Child
block|{
name|Color
init|=
literal|1
block|}
enum|;
name|DomGradientStop
argument_list|(
specifier|const
name|DomGradientStop
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomGradientStop
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomGradient
block|{
name|public
label|:
name|DomGradient
argument_list|()
expr_stmt|;
operator|~
name|DomGradient
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeStartX
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_startX
return|;
block|}
specifier|inline
name|double
name|attributeStartX
argument_list|()
specifier|const
block|{
return|return
name|m_attr_startX
return|;
block|}
specifier|inline
name|void
name|setAttributeStartX
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_startX
operator|=
name|a
expr_stmt|;
name|m_has_attr_startX
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeStartX
parameter_list|()
block|{
name|m_has_attr_startX
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeStartY
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_startY
return|;
block|}
specifier|inline
name|double
name|attributeStartY
argument_list|()
specifier|const
block|{
return|return
name|m_attr_startY
return|;
block|}
specifier|inline
name|void
name|setAttributeStartY
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_startY
operator|=
name|a
expr_stmt|;
name|m_has_attr_startY
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeStartY
parameter_list|()
block|{
name|m_has_attr_startY
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeEndX
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_endX
return|;
block|}
specifier|inline
name|double
name|attributeEndX
argument_list|()
specifier|const
block|{
return|return
name|m_attr_endX
return|;
block|}
specifier|inline
name|void
name|setAttributeEndX
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_endX
operator|=
name|a
expr_stmt|;
name|m_has_attr_endX
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeEndX
parameter_list|()
block|{
name|m_has_attr_endX
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeEndY
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_endY
return|;
block|}
specifier|inline
name|double
name|attributeEndY
argument_list|()
specifier|const
block|{
return|return
name|m_attr_endY
return|;
block|}
specifier|inline
name|void
name|setAttributeEndY
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_endY
operator|=
name|a
expr_stmt|;
name|m_has_attr_endY
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeEndY
parameter_list|()
block|{
name|m_has_attr_endY
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeCentralX
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_centralX
return|;
block|}
specifier|inline
name|double
name|attributeCentralX
argument_list|()
specifier|const
block|{
return|return
name|m_attr_centralX
return|;
block|}
specifier|inline
name|void
name|setAttributeCentralX
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_centralX
operator|=
name|a
expr_stmt|;
name|m_has_attr_centralX
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeCentralX
parameter_list|()
block|{
name|m_has_attr_centralX
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeCentralY
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_centralY
return|;
block|}
specifier|inline
name|double
name|attributeCentralY
argument_list|()
specifier|const
block|{
return|return
name|m_attr_centralY
return|;
block|}
specifier|inline
name|void
name|setAttributeCentralY
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_centralY
operator|=
name|a
expr_stmt|;
name|m_has_attr_centralY
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeCentralY
parameter_list|()
block|{
name|m_has_attr_centralY
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeFocalX
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_focalX
return|;
block|}
specifier|inline
name|double
name|attributeFocalX
argument_list|()
specifier|const
block|{
return|return
name|m_attr_focalX
return|;
block|}
specifier|inline
name|void
name|setAttributeFocalX
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_focalX
operator|=
name|a
expr_stmt|;
name|m_has_attr_focalX
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeFocalX
parameter_list|()
block|{
name|m_has_attr_focalX
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeFocalY
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_focalY
return|;
block|}
specifier|inline
name|double
name|attributeFocalY
argument_list|()
specifier|const
block|{
return|return
name|m_attr_focalY
return|;
block|}
specifier|inline
name|void
name|setAttributeFocalY
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_focalY
operator|=
name|a
expr_stmt|;
name|m_has_attr_focalY
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeFocalY
parameter_list|()
block|{
name|m_has_attr_focalY
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeRadius
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_radius
return|;
block|}
specifier|inline
name|double
name|attributeRadius
argument_list|()
specifier|const
block|{
return|return
name|m_attr_radius
return|;
block|}
specifier|inline
name|void
name|setAttributeRadius
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_radius
operator|=
name|a
expr_stmt|;
name|m_has_attr_radius
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeRadius
parameter_list|()
block|{
name|m_has_attr_radius
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeAngle
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_angle
return|;
block|}
specifier|inline
name|double
name|attributeAngle
argument_list|()
specifier|const
block|{
return|return
name|m_attr_angle
return|;
block|}
specifier|inline
name|void
name|setAttributeAngle
parameter_list|(
name|double
name|a
parameter_list|)
block|{
name|m_attr_angle
operator|=
name|a
expr_stmt|;
name|m_has_attr_angle
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeAngle
parameter_list|()
block|{
name|m_has_attr_angle
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeType
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_type
return|;
block|}
specifier|inline
name|QString
name|attributeType
argument_list|()
specifier|const
block|{
return|return
name|m_attr_type
return|;
block|}
specifier|inline
name|void
name|setAttributeType
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_type
operator|=
name|a
expr_stmt|;
name|m_has_attr_type
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeType
parameter_list|()
block|{
name|m_has_attr_type
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeSpread
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_spread
return|;
block|}
specifier|inline
name|QString
name|attributeSpread
argument_list|()
specifier|const
block|{
return|return
name|m_attr_spread
return|;
block|}
specifier|inline
name|void
name|setAttributeSpread
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_spread
operator|=
name|a
expr_stmt|;
name|m_has_attr_spread
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeSpread
parameter_list|()
block|{
name|m_has_attr_spread
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeCoordinateMode
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_coordinateMode
return|;
block|}
specifier|inline
name|QString
name|attributeCoordinateMode
argument_list|()
specifier|const
block|{
return|return
name|m_attr_coordinateMode
return|;
block|}
specifier|inline
name|void
name|setAttributeCoordinateMode
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_coordinateMode
operator|=
name|a
expr_stmt|;
name|m_has_attr_coordinateMode
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeCoordinateMode
parameter_list|()
block|{
name|m_has_attr_coordinateMode
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomGradientStop
operator|*
operator|>
name|elementGradientStop
argument_list|()
specifier|const
block|{
return|return
name|m_gradientStop
return|;
block|}
name|void
name|setElementGradientStop
argument_list|(
specifier|const
name|QList
operator|<
name|DomGradientStop
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|double
name|m_attr_startX
decl_stmt|;
name|bool
name|m_has_attr_startX
decl_stmt|;
name|double
name|m_attr_startY
decl_stmt|;
name|bool
name|m_has_attr_startY
decl_stmt|;
name|double
name|m_attr_endX
decl_stmt|;
name|bool
name|m_has_attr_endX
decl_stmt|;
name|double
name|m_attr_endY
decl_stmt|;
name|bool
name|m_has_attr_endY
decl_stmt|;
name|double
name|m_attr_centralX
decl_stmt|;
name|bool
name|m_has_attr_centralX
decl_stmt|;
name|double
name|m_attr_centralY
decl_stmt|;
name|bool
name|m_has_attr_centralY
decl_stmt|;
name|double
name|m_attr_focalX
decl_stmt|;
name|bool
name|m_has_attr_focalX
decl_stmt|;
name|double
name|m_attr_focalY
decl_stmt|;
name|bool
name|m_has_attr_focalY
decl_stmt|;
name|double
name|m_attr_radius
decl_stmt|;
name|bool
name|m_has_attr_radius
decl_stmt|;
name|double
name|m_attr_angle
decl_stmt|;
name|bool
name|m_has_attr_angle
decl_stmt|;
name|QString
name|m_attr_type
decl_stmt|;
name|bool
name|m_has_attr_type
decl_stmt|;
name|QString
name|m_attr_spread
decl_stmt|;
name|bool
name|m_has_attr_spread
decl_stmt|;
name|QString
name|m_attr_coordinateMode
decl_stmt|;
name|bool
name|m_has_attr_coordinateMode
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomGradientStop
operator|*
operator|>
name|m_gradientStop
expr_stmt|;
enum|enum
name|Child
block|{
name|GradientStop
init|=
literal|1
block|}
enum|;
name|DomGradient
argument_list|(
specifier|const
name|DomGradient
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomGradient
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomBrush
block|{
name|public
label|:
name|DomBrush
argument_list|()
expr_stmt|;
operator|~
name|DomBrush
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeBrushStyle
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_brushStyle
return|;
block|}
specifier|inline
name|QString
name|attributeBrushStyle
argument_list|()
specifier|const
block|{
return|return
name|m_attr_brushStyle
return|;
block|}
specifier|inline
name|void
name|setAttributeBrushStyle
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_brushStyle
operator|=
name|a
expr_stmt|;
name|m_has_attr_brushStyle
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeBrushStyle
parameter_list|()
block|{
name|m_has_attr_brushStyle
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
enum|enum
name|Kind
block|{
name|Unknown
init|=
literal|0
block|,
name|Color
block|,
name|Texture
block|,
name|Gradient
block|}
enum|;
specifier|inline
name|Kind
name|kind
argument_list|()
specifier|const
block|{
return|return
name|m_kind
return|;
block|}
specifier|inline
name|DomColor
operator|*
name|elementColor
argument_list|()
specifier|const
block|{
return|return
name|m_color
return|;
block|}
name|DomColor
modifier|*
name|takeElementColor
parameter_list|()
function_decl|;
name|void
name|setElementColor
parameter_list|(
name|DomColor
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomProperty
operator|*
name|elementTexture
argument_list|()
specifier|const
block|{
return|return
name|m_texture
return|;
block|}
name|DomProperty
modifier|*
name|takeElementTexture
parameter_list|()
function_decl|;
name|void
name|setElementTexture
parameter_list|(
name|DomProperty
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomGradient
operator|*
name|elementGradient
argument_list|()
specifier|const
block|{
return|return
name|m_gradient
return|;
block|}
name|DomGradient
modifier|*
name|takeElementGradient
parameter_list|()
function_decl|;
name|void
name|setElementGradient
parameter_list|(
name|DomGradient
modifier|*
name|a
parameter_list|)
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_brushStyle
decl_stmt|;
name|bool
name|m_has_attr_brushStyle
decl_stmt|;
comment|// child element data
name|Kind
name|m_kind
decl_stmt|;
name|DomColor
modifier|*
name|m_color
decl_stmt|;
name|DomProperty
modifier|*
name|m_texture
decl_stmt|;
name|DomGradient
modifier|*
name|m_gradient
decl_stmt|;
name|DomBrush
argument_list|(
specifier|const
name|DomBrush
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomBrush
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomColorRole
block|{
name|public
label|:
name|DomColorRole
argument_list|()
expr_stmt|;
operator|~
name|DomColorRole
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeRole
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_role
return|;
block|}
specifier|inline
name|QString
name|attributeRole
argument_list|()
specifier|const
block|{
return|return
name|m_attr_role
return|;
block|}
specifier|inline
name|void
name|setAttributeRole
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_role
operator|=
name|a
expr_stmt|;
name|m_has_attr_role
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeRole
parameter_list|()
block|{
name|m_has_attr_role
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|DomBrush
operator|*
name|elementBrush
argument_list|()
specifier|const
block|{
return|return
name|m_brush
return|;
block|}
name|DomBrush
modifier|*
name|takeElementBrush
parameter_list|()
function_decl|;
name|void
name|setElementBrush
parameter_list|(
name|DomBrush
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementBrush
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Brush
return|;
block|}
name|void
name|clearElementBrush
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_role
decl_stmt|;
name|bool
name|m_has_attr_role
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomBrush
modifier|*
name|m_brush
decl_stmt|;
enum|enum
name|Child
block|{
name|Brush
init|=
literal|1
block|}
enum|;
name|DomColorRole
argument_list|(
specifier|const
name|DomColorRole
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomColorRole
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomColorGroup
block|{
name|public
label|:
name|DomColorGroup
argument_list|()
expr_stmt|;
operator|~
name|DomColorGroup
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomColorRole
operator|*
operator|>
name|elementColorRole
argument_list|()
specifier|const
block|{
return|return
name|m_colorRole
return|;
block|}
name|void
name|setElementColorRole
argument_list|(
specifier|const
name|QList
operator|<
name|DomColorRole
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
specifier|inline
name|QList
operator|<
name|DomColor
operator|*
operator|>
name|elementColor
argument_list|()
specifier|const
block|{
return|return
name|m_color
return|;
block|}
name|void
name|setElementColor
argument_list|(
specifier|const
name|QList
operator|<
name|DomColor
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomColorRole
operator|*
operator|>
name|m_colorRole
expr_stmt|;
name|QList
operator|<
name|DomColor
operator|*
operator|>
name|m_color
expr_stmt|;
enum|enum
name|Child
block|{
name|ColorRole
init|=
literal|1
block|,
name|Color
init|=
literal|2
block|}
enum|;
name|DomColorGroup
argument_list|(
specifier|const
name|DomColorGroup
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomColorGroup
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomPalette
block|{
name|public
label|:
name|DomPalette
argument_list|()
expr_stmt|;
operator|~
name|DomPalette
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|DomColorGroup
operator|*
name|elementActive
argument_list|()
specifier|const
block|{
return|return
name|m_active
return|;
block|}
name|DomColorGroup
modifier|*
name|takeElementActive
parameter_list|()
function_decl|;
name|void
name|setElementActive
parameter_list|(
name|DomColorGroup
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementActive
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Active
return|;
block|}
name|void
name|clearElementActive
parameter_list|()
function_decl|;
specifier|inline
name|DomColorGroup
operator|*
name|elementInactive
argument_list|()
specifier|const
block|{
return|return
name|m_inactive
return|;
block|}
name|DomColorGroup
modifier|*
name|takeElementInactive
parameter_list|()
function_decl|;
name|void
name|setElementInactive
parameter_list|(
name|DomColorGroup
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementInactive
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Inactive
return|;
block|}
name|void
name|clearElementInactive
parameter_list|()
function_decl|;
specifier|inline
name|DomColorGroup
operator|*
name|elementDisabled
argument_list|()
specifier|const
block|{
return|return
name|m_disabled
return|;
block|}
name|DomColorGroup
modifier|*
name|takeElementDisabled
parameter_list|()
function_decl|;
name|void
name|setElementDisabled
parameter_list|(
name|DomColorGroup
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementDisabled
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Disabled
return|;
block|}
name|void
name|clearElementDisabled
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomColorGroup
modifier|*
name|m_active
decl_stmt|;
name|DomColorGroup
modifier|*
name|m_inactive
decl_stmt|;
name|DomColorGroup
modifier|*
name|m_disabled
decl_stmt|;
enum|enum
name|Child
block|{
name|Active
init|=
literal|1
block|,
name|Inactive
init|=
literal|2
block|,
name|Disabled
init|=
literal|4
block|}
enum|;
name|DomPalette
argument_list|(
specifier|const
name|DomPalette
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomPalette
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomFont
block|{
name|public
label|:
name|DomFont
argument_list|()
expr_stmt|;
operator|~
name|DomFont
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QString
name|elementFamily
argument_list|()
specifier|const
block|{
return|return
name|m_family
return|;
block|}
name|void
name|setElementFamily
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementFamily
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Family
return|;
block|}
name|void
name|clearElementFamily
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementPointSize
argument_list|()
specifier|const
block|{
return|return
name|m_pointSize
return|;
block|}
name|void
name|setElementPointSize
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementPointSize
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|PointSize
return|;
block|}
name|void
name|clearElementPointSize
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementWeight
argument_list|()
specifier|const
block|{
return|return
name|m_weight
return|;
block|}
name|void
name|setElementWeight
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementWeight
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Weight
return|;
block|}
name|void
name|clearElementWeight
parameter_list|()
function_decl|;
specifier|inline
name|bool
name|elementItalic
argument_list|()
specifier|const
block|{
return|return
name|m_italic
return|;
block|}
name|void
name|setElementItalic
parameter_list|(
name|bool
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementItalic
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Italic
return|;
block|}
name|void
name|clearElementItalic
parameter_list|()
function_decl|;
specifier|inline
name|bool
name|elementBold
argument_list|()
specifier|const
block|{
return|return
name|m_bold
return|;
block|}
name|void
name|setElementBold
parameter_list|(
name|bool
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementBold
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Bold
return|;
block|}
name|void
name|clearElementBold
parameter_list|()
function_decl|;
specifier|inline
name|bool
name|elementUnderline
argument_list|()
specifier|const
block|{
return|return
name|m_underline
return|;
block|}
name|void
name|setElementUnderline
parameter_list|(
name|bool
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementUnderline
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Underline
return|;
block|}
name|void
name|clearElementUnderline
parameter_list|()
function_decl|;
specifier|inline
name|bool
name|elementStrikeOut
argument_list|()
specifier|const
block|{
return|return
name|m_strikeOut
return|;
block|}
name|void
name|setElementStrikeOut
parameter_list|(
name|bool
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementStrikeOut
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|StrikeOut
return|;
block|}
name|void
name|clearElementStrikeOut
parameter_list|()
function_decl|;
specifier|inline
name|bool
name|elementAntialiasing
argument_list|()
specifier|const
block|{
return|return
name|m_antialiasing
return|;
block|}
name|void
name|setElementAntialiasing
parameter_list|(
name|bool
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementAntialiasing
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Antialiasing
return|;
block|}
name|void
name|clearElementAntialiasing
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementStyleStrategy
argument_list|()
specifier|const
block|{
return|return
name|m_styleStrategy
return|;
block|}
name|void
name|setElementStyleStrategy
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementStyleStrategy
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|StyleStrategy
return|;
block|}
name|void
name|clearElementStyleStrategy
parameter_list|()
function_decl|;
specifier|inline
name|bool
name|elementKerning
argument_list|()
specifier|const
block|{
return|return
name|m_kerning
return|;
block|}
name|void
name|setElementKerning
parameter_list|(
name|bool
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementKerning
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Kerning
return|;
block|}
name|void
name|clearElementKerning
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QString
name|m_family
decl_stmt|;
name|int
name|m_pointSize
decl_stmt|;
name|int
name|m_weight
decl_stmt|;
name|bool
name|m_italic
decl_stmt|;
name|bool
name|m_bold
decl_stmt|;
name|bool
name|m_underline
decl_stmt|;
name|bool
name|m_strikeOut
decl_stmt|;
name|bool
name|m_antialiasing
decl_stmt|;
name|QString
name|m_styleStrategy
decl_stmt|;
name|bool
name|m_kerning
decl_stmt|;
enum|enum
name|Child
block|{
name|Family
init|=
literal|1
block|,
name|PointSize
init|=
literal|2
block|,
name|Weight
init|=
literal|4
block|,
name|Italic
init|=
literal|8
block|,
name|Bold
init|=
literal|16
block|,
name|Underline
init|=
literal|32
block|,
name|StrikeOut
init|=
literal|64
block|,
name|Antialiasing
init|=
literal|128
block|,
name|StyleStrategy
init|=
literal|256
block|,
name|Kerning
init|=
literal|512
block|}
enum|;
name|DomFont
argument_list|(
specifier|const
name|DomFont
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomFont
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomPoint
block|{
name|public
label|:
name|DomPoint
argument_list|()
expr_stmt|;
operator|~
name|DomPoint
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementX
argument_list|()
specifier|const
block|{
return|return
name|m_x
return|;
block|}
name|void
name|setElementX
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementX
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|X
return|;
block|}
name|void
name|clearElementX
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementY
argument_list|()
specifier|const
block|{
return|return
name|m_y
return|;
block|}
name|void
name|setElementY
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementY
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Y
return|;
block|}
name|void
name|clearElementY
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_x
decl_stmt|;
name|int
name|m_y
decl_stmt|;
enum|enum
name|Child
block|{
name|X
init|=
literal|1
block|,
name|Y
init|=
literal|2
block|}
enum|;
name|DomPoint
argument_list|(
specifier|const
name|DomPoint
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomPoint
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomRect
block|{
name|public
label|:
name|DomRect
argument_list|()
expr_stmt|;
operator|~
name|DomRect
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementX
argument_list|()
specifier|const
block|{
return|return
name|m_x
return|;
block|}
name|void
name|setElementX
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementX
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|X
return|;
block|}
name|void
name|clearElementX
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementY
argument_list|()
specifier|const
block|{
return|return
name|m_y
return|;
block|}
name|void
name|setElementY
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementY
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Y
return|;
block|}
name|void
name|clearElementY
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_width
return|;
block|}
name|void
name|setElementWidth
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Width
return|;
block|}
name|void
name|clearElementWidth
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_height
return|;
block|}
name|void
name|setElementHeight
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Height
return|;
block|}
name|void
name|clearElementHeight
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_x
decl_stmt|;
name|int
name|m_y
decl_stmt|;
name|int
name|m_width
decl_stmt|;
name|int
name|m_height
decl_stmt|;
enum|enum
name|Child
block|{
name|X
init|=
literal|1
block|,
name|Y
init|=
literal|2
block|,
name|Width
init|=
literal|4
block|,
name|Height
init|=
literal|8
block|}
enum|;
name|DomRect
argument_list|(
specifier|const
name|DomRect
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomRect
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomLocale
block|{
name|public
label|:
name|DomLocale
argument_list|()
expr_stmt|;
operator|~
name|DomLocale
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeLanguage
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_language
return|;
block|}
specifier|inline
name|QString
name|attributeLanguage
argument_list|()
specifier|const
block|{
return|return
name|m_attr_language
return|;
block|}
specifier|inline
name|void
name|setAttributeLanguage
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_language
operator|=
name|a
expr_stmt|;
name|m_has_attr_language
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeLanguage
parameter_list|()
block|{
name|m_has_attr_language
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeCountry
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_country
return|;
block|}
specifier|inline
name|QString
name|attributeCountry
argument_list|()
specifier|const
block|{
return|return
name|m_attr_country
return|;
block|}
specifier|inline
name|void
name|setAttributeCountry
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_country
operator|=
name|a
expr_stmt|;
name|m_has_attr_country
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeCountry
parameter_list|()
block|{
name|m_has_attr_country
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_language
decl_stmt|;
name|bool
name|m_has_attr_language
decl_stmt|;
name|QString
name|m_attr_country
decl_stmt|;
name|bool
name|m_has_attr_country
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomLocale
argument_list|(
specifier|const
name|DomLocale
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomLocale
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomSizePolicy
block|{
name|public
label|:
name|DomSizePolicy
argument_list|()
expr_stmt|;
operator|~
name|DomSizePolicy
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeHSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_hSizeType
return|;
block|}
specifier|inline
name|QString
name|attributeHSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_attr_hSizeType
return|;
block|}
specifier|inline
name|void
name|setAttributeHSizeType
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_hSizeType
operator|=
name|a
expr_stmt|;
name|m_has_attr_hSizeType
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeHSizeType
parameter_list|()
block|{
name|m_has_attr_hSizeType
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeVSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_vSizeType
return|;
block|}
specifier|inline
name|QString
name|attributeVSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_attr_vSizeType
return|;
block|}
specifier|inline
name|void
name|setAttributeVSizeType
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_vSizeType
operator|=
name|a
expr_stmt|;
name|m_has_attr_vSizeType
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeVSizeType
parameter_list|()
block|{
name|m_has_attr_vSizeType
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|int
name|elementHSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_hSizeType
return|;
block|}
name|void
name|setElementHSizeType
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|HSizeType
return|;
block|}
name|void
name|clearElementHSizeType
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementVSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_vSizeType
return|;
block|}
name|void
name|setElementVSizeType
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementVSizeType
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|VSizeType
return|;
block|}
name|void
name|clearElementVSizeType
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementHorStretch
argument_list|()
specifier|const
block|{
return|return
name|m_horStretch
return|;
block|}
name|void
name|setElementHorStretch
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHorStretch
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|HorStretch
return|;
block|}
name|void
name|clearElementHorStretch
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementVerStretch
argument_list|()
specifier|const
block|{
return|return
name|m_verStretch
return|;
block|}
name|void
name|setElementVerStretch
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementVerStretch
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|VerStretch
return|;
block|}
name|void
name|clearElementVerStretch
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_hSizeType
decl_stmt|;
name|bool
name|m_has_attr_hSizeType
decl_stmt|;
name|QString
name|m_attr_vSizeType
decl_stmt|;
name|bool
name|m_has_attr_vSizeType
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_hSizeType
decl_stmt|;
name|int
name|m_vSizeType
decl_stmt|;
name|int
name|m_horStretch
decl_stmt|;
name|int
name|m_verStretch
decl_stmt|;
enum|enum
name|Child
block|{
name|HSizeType
init|=
literal|1
block|,
name|VSizeType
init|=
literal|2
block|,
name|HorStretch
init|=
literal|4
block|,
name|VerStretch
init|=
literal|8
block|}
enum|;
name|DomSizePolicy
argument_list|(
specifier|const
name|DomSizePolicy
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomSizePolicy
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomSize
block|{
name|public
label|:
name|DomSize
argument_list|()
expr_stmt|;
operator|~
name|DomSize
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_width
return|;
block|}
name|void
name|setElementWidth
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Width
return|;
block|}
name|void
name|clearElementWidth
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_height
return|;
block|}
name|void
name|setElementHeight
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Height
return|;
block|}
name|void
name|clearElementHeight
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_width
decl_stmt|;
name|int
name|m_height
decl_stmt|;
enum|enum
name|Child
block|{
name|Width
init|=
literal|1
block|,
name|Height
init|=
literal|2
block|}
enum|;
name|DomSize
argument_list|(
specifier|const
name|DomSize
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomSize
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomDate
block|{
name|public
label|:
name|DomDate
argument_list|()
expr_stmt|;
operator|~
name|DomDate
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementYear
argument_list|()
specifier|const
block|{
return|return
name|m_year
return|;
block|}
name|void
name|setElementYear
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementYear
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Year
return|;
block|}
name|void
name|clearElementYear
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementMonth
argument_list|()
specifier|const
block|{
return|return
name|m_month
return|;
block|}
name|void
name|setElementMonth
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementMonth
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Month
return|;
block|}
name|void
name|clearElementMonth
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementDay
argument_list|()
specifier|const
block|{
return|return
name|m_day
return|;
block|}
name|void
name|setElementDay
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementDay
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Day
return|;
block|}
name|void
name|clearElementDay
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_year
decl_stmt|;
name|int
name|m_month
decl_stmt|;
name|int
name|m_day
decl_stmt|;
enum|enum
name|Child
block|{
name|Year
init|=
literal|1
block|,
name|Month
init|=
literal|2
block|,
name|Day
init|=
literal|4
block|}
enum|;
name|DomDate
argument_list|(
specifier|const
name|DomDate
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomDate
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomTime
block|{
name|public
label|:
name|DomTime
argument_list|()
expr_stmt|;
operator|~
name|DomTime
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementHour
argument_list|()
specifier|const
block|{
return|return
name|m_hour
return|;
block|}
name|void
name|setElementHour
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHour
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Hour
return|;
block|}
name|void
name|clearElementHour
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementMinute
argument_list|()
specifier|const
block|{
return|return
name|m_minute
return|;
block|}
name|void
name|setElementMinute
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementMinute
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Minute
return|;
block|}
name|void
name|clearElementMinute
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementSecond
argument_list|()
specifier|const
block|{
return|return
name|m_second
return|;
block|}
name|void
name|setElementSecond
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSecond
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Second
return|;
block|}
name|void
name|clearElementSecond
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_hour
decl_stmt|;
name|int
name|m_minute
decl_stmt|;
name|int
name|m_second
decl_stmt|;
enum|enum
name|Child
block|{
name|Hour
init|=
literal|1
block|,
name|Minute
init|=
literal|2
block|,
name|Second
init|=
literal|4
block|}
enum|;
name|DomTime
argument_list|(
specifier|const
name|DomTime
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomTime
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomDateTime
block|{
name|public
label|:
name|DomDateTime
argument_list|()
expr_stmt|;
operator|~
name|DomDateTime
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementHour
argument_list|()
specifier|const
block|{
return|return
name|m_hour
return|;
block|}
name|void
name|setElementHour
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHour
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Hour
return|;
block|}
name|void
name|clearElementHour
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementMinute
argument_list|()
specifier|const
block|{
return|return
name|m_minute
return|;
block|}
name|void
name|setElementMinute
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementMinute
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Minute
return|;
block|}
name|void
name|clearElementMinute
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementSecond
argument_list|()
specifier|const
block|{
return|return
name|m_second
return|;
block|}
name|void
name|setElementSecond
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSecond
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Second
return|;
block|}
name|void
name|clearElementSecond
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementYear
argument_list|()
specifier|const
block|{
return|return
name|m_year
return|;
block|}
name|void
name|setElementYear
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementYear
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Year
return|;
block|}
name|void
name|clearElementYear
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementMonth
argument_list|()
specifier|const
block|{
return|return
name|m_month
return|;
block|}
name|void
name|setElementMonth
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementMonth
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Month
return|;
block|}
name|void
name|clearElementMonth
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementDay
argument_list|()
specifier|const
block|{
return|return
name|m_day
return|;
block|}
name|void
name|setElementDay
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementDay
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Day
return|;
block|}
name|void
name|clearElementDay
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_hour
decl_stmt|;
name|int
name|m_minute
decl_stmt|;
name|int
name|m_second
decl_stmt|;
name|int
name|m_year
decl_stmt|;
name|int
name|m_month
decl_stmt|;
name|int
name|m_day
decl_stmt|;
enum|enum
name|Child
block|{
name|Hour
init|=
literal|1
block|,
name|Minute
init|=
literal|2
block|,
name|Second
init|=
literal|4
block|,
name|Year
init|=
literal|8
block|,
name|Month
init|=
literal|16
block|,
name|Day
init|=
literal|32
block|}
enum|;
name|DomDateTime
argument_list|(
specifier|const
name|DomDateTime
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomDateTime
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomStringList
block|{
name|public
label|:
name|DomStringList
argument_list|()
expr_stmt|;
operator|~
name|DomStringList
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeNotr
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_notr
return|;
block|}
specifier|inline
name|QString
name|attributeNotr
argument_list|()
specifier|const
block|{
return|return
name|m_attr_notr
return|;
block|}
specifier|inline
name|void
name|setAttributeNotr
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_notr
operator|=
name|a
expr_stmt|;
name|m_has_attr_notr
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeNotr
parameter_list|()
block|{
name|m_has_attr_notr
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeComment
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_comment
return|;
block|}
specifier|inline
name|QString
name|attributeComment
argument_list|()
specifier|const
block|{
return|return
name|m_attr_comment
return|;
block|}
specifier|inline
name|void
name|setAttributeComment
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_comment
operator|=
name|a
expr_stmt|;
name|m_has_attr_comment
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeComment
parameter_list|()
block|{
name|m_has_attr_comment
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeExtraComment
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_extraComment
return|;
block|}
specifier|inline
name|QString
name|attributeExtraComment
argument_list|()
specifier|const
block|{
return|return
name|m_attr_extraComment
return|;
block|}
specifier|inline
name|void
name|setAttributeExtraComment
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_extraComment
operator|=
name|a
expr_stmt|;
name|m_has_attr_extraComment
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeExtraComment
parameter_list|()
block|{
name|m_has_attr_extraComment
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|QStringList
name|elementString
argument_list|()
specifier|const
block|{
return|return
name|m_string
return|;
block|}
name|void
name|setElementString
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|a
parameter_list|)
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_notr
decl_stmt|;
name|bool
name|m_has_attr_notr
decl_stmt|;
name|QString
name|m_attr_comment
decl_stmt|;
name|bool
name|m_has_attr_comment
decl_stmt|;
name|QString
name|m_attr_extraComment
decl_stmt|;
name|bool
name|m_has_attr_extraComment
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QStringList
name|m_string
decl_stmt|;
enum|enum
name|Child
block|{
name|String
init|=
literal|1
block|}
enum|;
name|DomStringList
argument_list|(
specifier|const
name|DomStringList
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomStringList
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomResourcePixmap
block|{
name|public
label|:
name|DomResourcePixmap
argument_list|()
expr_stmt|;
operator|~
name|DomResourcePixmap
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeResource
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_resource
return|;
block|}
specifier|inline
name|QString
name|attributeResource
argument_list|()
specifier|const
block|{
return|return
name|m_attr_resource
return|;
block|}
specifier|inline
name|void
name|setAttributeResource
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_resource
operator|=
name|a
expr_stmt|;
name|m_has_attr_resource
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeResource
parameter_list|()
block|{
name|m_has_attr_resource
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeAlias
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_alias
return|;
block|}
specifier|inline
name|QString
name|attributeAlias
argument_list|()
specifier|const
block|{
return|return
name|m_attr_alias
return|;
block|}
specifier|inline
name|void
name|setAttributeAlias
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_alias
operator|=
name|a
expr_stmt|;
name|m_has_attr_alias
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeAlias
parameter_list|()
block|{
name|m_has_attr_alias
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_resource
decl_stmt|;
name|bool
name|m_has_attr_resource
decl_stmt|;
name|QString
name|m_attr_alias
decl_stmt|;
name|bool
name|m_has_attr_alias
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomResourcePixmap
argument_list|(
specifier|const
name|DomResourcePixmap
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomResourcePixmap
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomResourceIcon
block|{
name|public
label|:
name|DomResourceIcon
argument_list|()
expr_stmt|;
operator|~
name|DomResourceIcon
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeTheme
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_theme
return|;
block|}
specifier|inline
name|QString
name|attributeTheme
argument_list|()
specifier|const
block|{
return|return
name|m_attr_theme
return|;
block|}
specifier|inline
name|void
name|setAttributeTheme
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_theme
operator|=
name|a
expr_stmt|;
name|m_has_attr_theme
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeTheme
parameter_list|()
block|{
name|m_has_attr_theme
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeResource
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_resource
return|;
block|}
specifier|inline
name|QString
name|attributeResource
argument_list|()
specifier|const
block|{
return|return
name|m_attr_resource
return|;
block|}
specifier|inline
name|void
name|setAttributeResource
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_resource
operator|=
name|a
expr_stmt|;
name|m_has_attr_resource
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeResource
parameter_list|()
block|{
name|m_has_attr_resource
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|DomResourcePixmap
operator|*
name|elementNormalOff
argument_list|()
specifier|const
block|{
return|return
name|m_normalOff
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementNormalOff
parameter_list|()
function_decl|;
name|void
name|setElementNormalOff
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementNormalOff
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|NormalOff
return|;
block|}
name|void
name|clearElementNormalOff
parameter_list|()
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementNormalOn
argument_list|()
specifier|const
block|{
return|return
name|m_normalOn
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementNormalOn
parameter_list|()
function_decl|;
name|void
name|setElementNormalOn
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementNormalOn
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|NormalOn
return|;
block|}
name|void
name|clearElementNormalOn
parameter_list|()
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementDisabledOff
argument_list|()
specifier|const
block|{
return|return
name|m_disabledOff
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementDisabledOff
parameter_list|()
function_decl|;
name|void
name|setElementDisabledOff
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementDisabledOff
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|DisabledOff
return|;
block|}
name|void
name|clearElementDisabledOff
parameter_list|()
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementDisabledOn
argument_list|()
specifier|const
block|{
return|return
name|m_disabledOn
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementDisabledOn
parameter_list|()
function_decl|;
name|void
name|setElementDisabledOn
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementDisabledOn
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|DisabledOn
return|;
block|}
name|void
name|clearElementDisabledOn
parameter_list|()
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementActiveOff
argument_list|()
specifier|const
block|{
return|return
name|m_activeOff
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementActiveOff
parameter_list|()
function_decl|;
name|void
name|setElementActiveOff
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementActiveOff
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|ActiveOff
return|;
block|}
name|void
name|clearElementActiveOff
parameter_list|()
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementActiveOn
argument_list|()
specifier|const
block|{
return|return
name|m_activeOn
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementActiveOn
parameter_list|()
function_decl|;
name|void
name|setElementActiveOn
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementActiveOn
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|ActiveOn
return|;
block|}
name|void
name|clearElementActiveOn
parameter_list|()
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementSelectedOff
argument_list|()
specifier|const
block|{
return|return
name|m_selectedOff
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementSelectedOff
parameter_list|()
function_decl|;
name|void
name|setElementSelectedOff
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSelectedOff
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|SelectedOff
return|;
block|}
name|void
name|clearElementSelectedOff
parameter_list|()
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementSelectedOn
argument_list|()
specifier|const
block|{
return|return
name|m_selectedOn
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementSelectedOn
parameter_list|()
function_decl|;
name|void
name|setElementSelectedOn
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSelectedOn
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|SelectedOn
return|;
block|}
name|void
name|clearElementSelectedOn
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_theme
decl_stmt|;
name|bool
name|m_has_attr_theme
decl_stmt|;
name|QString
name|m_attr_resource
decl_stmt|;
name|bool
name|m_has_attr_resource
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_normalOff
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_normalOn
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_disabledOff
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_disabledOn
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_activeOff
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_activeOn
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_selectedOff
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_selectedOn
decl_stmt|;
enum|enum
name|Child
block|{
name|NormalOff
init|=
literal|1
block|,
name|NormalOn
init|=
literal|2
block|,
name|DisabledOff
init|=
literal|4
block|,
name|DisabledOn
init|=
literal|8
block|,
name|ActiveOff
init|=
literal|16
block|,
name|ActiveOn
init|=
literal|32
block|,
name|SelectedOff
init|=
literal|64
block|,
name|SelectedOn
init|=
literal|128
block|}
enum|;
name|DomResourceIcon
argument_list|(
specifier|const
name|DomResourceIcon
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomResourceIcon
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomString
block|{
name|public
label|:
name|DomString
argument_list|()
expr_stmt|;
operator|~
name|DomString
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeNotr
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_notr
return|;
block|}
specifier|inline
name|QString
name|attributeNotr
argument_list|()
specifier|const
block|{
return|return
name|m_attr_notr
return|;
block|}
specifier|inline
name|void
name|setAttributeNotr
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_notr
operator|=
name|a
expr_stmt|;
name|m_has_attr_notr
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeNotr
parameter_list|()
block|{
name|m_has_attr_notr
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeComment
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_comment
return|;
block|}
specifier|inline
name|QString
name|attributeComment
argument_list|()
specifier|const
block|{
return|return
name|m_attr_comment
return|;
block|}
specifier|inline
name|void
name|setAttributeComment
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_comment
operator|=
name|a
expr_stmt|;
name|m_has_attr_comment
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeComment
parameter_list|()
block|{
name|m_has_attr_comment
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeExtraComment
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_extraComment
return|;
block|}
specifier|inline
name|QString
name|attributeExtraComment
argument_list|()
specifier|const
block|{
return|return
name|m_attr_extraComment
return|;
block|}
specifier|inline
name|void
name|setAttributeExtraComment
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_extraComment
operator|=
name|a
expr_stmt|;
name|m_has_attr_extraComment
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeExtraComment
parameter_list|()
block|{
name|m_has_attr_extraComment
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_notr
decl_stmt|;
name|bool
name|m_has_attr_notr
decl_stmt|;
name|QString
name|m_attr_comment
decl_stmt|;
name|bool
name|m_has_attr_comment
decl_stmt|;
name|QString
name|m_attr_extraComment
decl_stmt|;
name|bool
name|m_has_attr_extraComment
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomString
argument_list|(
specifier|const
name|DomString
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomString
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomPointF
block|{
name|public
label|:
name|DomPointF
argument_list|()
expr_stmt|;
operator|~
name|DomPointF
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|double
name|elementX
argument_list|()
specifier|const
block|{
return|return
name|m_x
return|;
block|}
name|void
name|setElementX
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementX
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|X
return|;
block|}
name|void
name|clearElementX
parameter_list|()
function_decl|;
specifier|inline
name|double
name|elementY
argument_list|()
specifier|const
block|{
return|return
name|m_y
return|;
block|}
name|void
name|setElementY
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementY
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Y
return|;
block|}
name|void
name|clearElementY
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|double
name|m_x
decl_stmt|;
name|double
name|m_y
decl_stmt|;
enum|enum
name|Child
block|{
name|X
init|=
literal|1
block|,
name|Y
init|=
literal|2
block|}
enum|;
name|DomPointF
argument_list|(
specifier|const
name|DomPointF
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomPointF
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomRectF
block|{
name|public
label|:
name|DomRectF
argument_list|()
expr_stmt|;
operator|~
name|DomRectF
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|double
name|elementX
argument_list|()
specifier|const
block|{
return|return
name|m_x
return|;
block|}
name|void
name|setElementX
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementX
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|X
return|;
block|}
name|void
name|clearElementX
parameter_list|()
function_decl|;
specifier|inline
name|double
name|elementY
argument_list|()
specifier|const
block|{
return|return
name|m_y
return|;
block|}
name|void
name|setElementY
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementY
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Y
return|;
block|}
name|void
name|clearElementY
parameter_list|()
function_decl|;
specifier|inline
name|double
name|elementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_width
return|;
block|}
name|void
name|setElementWidth
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Width
return|;
block|}
name|void
name|clearElementWidth
parameter_list|()
function_decl|;
specifier|inline
name|double
name|elementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_height
return|;
block|}
name|void
name|setElementHeight
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Height
return|;
block|}
name|void
name|clearElementHeight
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|double
name|m_x
decl_stmt|;
name|double
name|m_y
decl_stmt|;
name|double
name|m_width
decl_stmt|;
name|double
name|m_height
decl_stmt|;
enum|enum
name|Child
block|{
name|X
init|=
literal|1
block|,
name|Y
init|=
literal|2
block|,
name|Width
init|=
literal|4
block|,
name|Height
init|=
literal|8
block|}
enum|;
name|DomRectF
argument_list|(
specifier|const
name|DomRectF
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomRectF
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomSizeF
block|{
name|public
label|:
name|DomSizeF
argument_list|()
expr_stmt|;
operator|~
name|DomSizeF
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|double
name|elementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_width
return|;
block|}
name|void
name|setElementWidth
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementWidth
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Width
return|;
block|}
name|void
name|clearElementWidth
parameter_list|()
function_decl|;
specifier|inline
name|double
name|elementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_height
return|;
block|}
name|void
name|setElementHeight
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHeight
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Height
return|;
block|}
name|void
name|clearElementHeight
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|double
name|m_width
decl_stmt|;
name|double
name|m_height
decl_stmt|;
enum|enum
name|Child
block|{
name|Width
init|=
literal|1
block|,
name|Height
init|=
literal|2
block|}
enum|;
name|DomSizeF
argument_list|(
specifier|const
name|DomSizeF
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomSizeF
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomChar
block|{
name|public
label|:
name|DomChar
argument_list|()
expr_stmt|;
operator|~
name|DomChar
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|int
name|elementUnicode
argument_list|()
specifier|const
block|{
return|return
name|m_unicode
return|;
block|}
name|void
name|setElementUnicode
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementUnicode
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Unicode
return|;
block|}
name|void
name|clearElementUnicode
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_unicode
decl_stmt|;
enum|enum
name|Child
block|{
name|Unicode
init|=
literal|1
block|}
enum|;
name|DomChar
argument_list|(
specifier|const
name|DomChar
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomChar
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomUrl
block|{
name|public
label|:
name|DomUrl
argument_list|()
expr_stmt|;
operator|~
name|DomUrl
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|DomString
operator|*
name|elementString
argument_list|()
specifier|const
block|{
return|return
name|m_string
return|;
block|}
name|DomString
modifier|*
name|takeElementString
parameter_list|()
function_decl|;
name|void
name|setElementString
parameter_list|(
name|DomString
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementString
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|String
return|;
block|}
name|void
name|clearElementString
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomString
modifier|*
name|m_string
decl_stmt|;
enum|enum
name|Child
block|{
name|String
init|=
literal|1
block|}
enum|;
name|DomUrl
argument_list|(
specifier|const
name|DomUrl
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomUrl
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomProperty
block|{
name|public
label|:
name|DomProperty
argument_list|()
expr_stmt|;
operator|~
name|DomProperty
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeStdset
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_stdset
return|;
block|}
specifier|inline
name|int
name|attributeStdset
argument_list|()
specifier|const
block|{
return|return
name|m_attr_stdset
return|;
block|}
specifier|inline
name|void
name|setAttributeStdset
parameter_list|(
name|int
name|a
parameter_list|)
block|{
name|m_attr_stdset
operator|=
name|a
expr_stmt|;
name|m_has_attr_stdset
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeStdset
parameter_list|()
block|{
name|m_has_attr_stdset
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
enum|enum
name|Kind
block|{
name|Unknown
init|=
literal|0
block|,
name|Bool
block|,
name|Color
block|,
name|Cstring
block|,
name|Cursor
block|,
name|CursorShape
block|,
name|Enum
block|,
name|Font
block|,
name|IconSet
block|,
name|Pixmap
block|,
name|Palette
block|,
name|Point
block|,
name|Rect
block|,
name|Set
block|,
name|Locale
block|,
name|SizePolicy
block|,
name|Size
block|,
name|String
block|,
name|StringList
block|,
name|Number
block|,
name|Float
block|,
name|Double
block|,
name|Date
block|,
name|Time
block|,
name|DateTime
block|,
name|PointF
block|,
name|RectF
block|,
name|SizeF
block|,
name|LongLong
block|,
name|Char
block|,
name|Url
block|,
name|UInt
block|,
name|ULongLong
block|,
name|Brush
block|}
enum|;
specifier|inline
name|Kind
name|kind
argument_list|()
specifier|const
block|{
return|return
name|m_kind
return|;
block|}
specifier|inline
name|QString
name|elementBool
argument_list|()
specifier|const
block|{
return|return
name|m_bool
return|;
block|}
name|void
name|setElementBool
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomColor
operator|*
name|elementColor
argument_list|()
specifier|const
block|{
return|return
name|m_color
return|;
block|}
name|DomColor
modifier|*
name|takeElementColor
parameter_list|()
function_decl|;
name|void
name|setElementColor
parameter_list|(
name|DomColor
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|QString
name|elementCstring
argument_list|()
specifier|const
block|{
return|return
name|m_cstring
return|;
block|}
name|void
name|setElementCstring
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|int
name|elementCursor
argument_list|()
specifier|const
block|{
return|return
name|m_cursor
return|;
block|}
name|void
name|setElementCursor
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|QString
name|elementCursorShape
argument_list|()
specifier|const
block|{
return|return
name|m_cursorShape
return|;
block|}
name|void
name|setElementCursorShape
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|QString
name|elementEnum
argument_list|()
specifier|const
block|{
return|return
name|m_enum
return|;
block|}
name|void
name|setElementEnum
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomFont
operator|*
name|elementFont
argument_list|()
specifier|const
block|{
return|return
name|m_font
return|;
block|}
name|DomFont
modifier|*
name|takeElementFont
parameter_list|()
function_decl|;
name|void
name|setElementFont
parameter_list|(
name|DomFont
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomResourceIcon
operator|*
name|elementIconSet
argument_list|()
specifier|const
block|{
return|return
name|m_iconSet
return|;
block|}
name|DomResourceIcon
modifier|*
name|takeElementIconSet
parameter_list|()
function_decl|;
name|void
name|setElementIconSet
parameter_list|(
name|DomResourceIcon
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomResourcePixmap
operator|*
name|elementPixmap
argument_list|()
specifier|const
block|{
return|return
name|m_pixmap
return|;
block|}
name|DomResourcePixmap
modifier|*
name|takeElementPixmap
parameter_list|()
function_decl|;
name|void
name|setElementPixmap
parameter_list|(
name|DomResourcePixmap
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomPalette
operator|*
name|elementPalette
argument_list|()
specifier|const
block|{
return|return
name|m_palette
return|;
block|}
name|DomPalette
modifier|*
name|takeElementPalette
parameter_list|()
function_decl|;
name|void
name|setElementPalette
parameter_list|(
name|DomPalette
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomPoint
operator|*
name|elementPoint
argument_list|()
specifier|const
block|{
return|return
name|m_point
return|;
block|}
name|DomPoint
modifier|*
name|takeElementPoint
parameter_list|()
function_decl|;
name|void
name|setElementPoint
parameter_list|(
name|DomPoint
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomRect
operator|*
name|elementRect
argument_list|()
specifier|const
block|{
return|return
name|m_rect
return|;
block|}
name|DomRect
modifier|*
name|takeElementRect
parameter_list|()
function_decl|;
name|void
name|setElementRect
parameter_list|(
name|DomRect
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|QString
name|elementSet
argument_list|()
specifier|const
block|{
return|return
name|m_set
return|;
block|}
name|void
name|setElementSet
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomLocale
operator|*
name|elementLocale
argument_list|()
specifier|const
block|{
return|return
name|m_locale
return|;
block|}
name|DomLocale
modifier|*
name|takeElementLocale
parameter_list|()
function_decl|;
name|void
name|setElementLocale
parameter_list|(
name|DomLocale
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomSizePolicy
operator|*
name|elementSizePolicy
argument_list|()
specifier|const
block|{
return|return
name|m_sizePolicy
return|;
block|}
name|DomSizePolicy
modifier|*
name|takeElementSizePolicy
parameter_list|()
function_decl|;
name|void
name|setElementSizePolicy
parameter_list|(
name|DomSizePolicy
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomSize
operator|*
name|elementSize
argument_list|()
specifier|const
block|{
return|return
name|m_size
return|;
block|}
name|DomSize
modifier|*
name|takeElementSize
parameter_list|()
function_decl|;
name|void
name|setElementSize
parameter_list|(
name|DomSize
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomString
operator|*
name|elementString
argument_list|()
specifier|const
block|{
return|return
name|m_string
return|;
block|}
name|DomString
modifier|*
name|takeElementString
parameter_list|()
function_decl|;
name|void
name|setElementString
parameter_list|(
name|DomString
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomStringList
operator|*
name|elementStringList
argument_list|()
specifier|const
block|{
return|return
name|m_stringList
return|;
block|}
name|DomStringList
modifier|*
name|takeElementStringList
parameter_list|()
function_decl|;
name|void
name|setElementStringList
parameter_list|(
name|DomStringList
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|int
name|elementNumber
argument_list|()
specifier|const
block|{
return|return
name|m_number
return|;
block|}
name|void
name|setElementNumber
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|float
name|elementFloat
argument_list|()
specifier|const
block|{
return|return
name|m_float
return|;
block|}
name|void
name|setElementFloat
parameter_list|(
name|float
name|a
parameter_list|)
function_decl|;
specifier|inline
name|double
name|elementDouble
argument_list|()
specifier|const
block|{
return|return
name|m_double
return|;
block|}
name|void
name|setElementDouble
parameter_list|(
name|double
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomDate
operator|*
name|elementDate
argument_list|()
specifier|const
block|{
return|return
name|m_date
return|;
block|}
name|DomDate
modifier|*
name|takeElementDate
parameter_list|()
function_decl|;
name|void
name|setElementDate
parameter_list|(
name|DomDate
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomTime
operator|*
name|elementTime
argument_list|()
specifier|const
block|{
return|return
name|m_time
return|;
block|}
name|DomTime
modifier|*
name|takeElementTime
parameter_list|()
function_decl|;
name|void
name|setElementTime
parameter_list|(
name|DomTime
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomDateTime
operator|*
name|elementDateTime
argument_list|()
specifier|const
block|{
return|return
name|m_dateTime
return|;
block|}
name|DomDateTime
modifier|*
name|takeElementDateTime
parameter_list|()
function_decl|;
name|void
name|setElementDateTime
parameter_list|(
name|DomDateTime
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomPointF
operator|*
name|elementPointF
argument_list|()
specifier|const
block|{
return|return
name|m_pointF
return|;
block|}
name|DomPointF
modifier|*
name|takeElementPointF
parameter_list|()
function_decl|;
name|void
name|setElementPointF
parameter_list|(
name|DomPointF
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomRectF
operator|*
name|elementRectF
argument_list|()
specifier|const
block|{
return|return
name|m_rectF
return|;
block|}
name|DomRectF
modifier|*
name|takeElementRectF
parameter_list|()
function_decl|;
name|void
name|setElementRectF
parameter_list|(
name|DomRectF
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomSizeF
operator|*
name|elementSizeF
argument_list|()
specifier|const
block|{
return|return
name|m_sizeF
return|;
block|}
name|DomSizeF
modifier|*
name|takeElementSizeF
parameter_list|()
function_decl|;
name|void
name|setElementSizeF
parameter_list|(
name|DomSizeF
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|qlonglong
name|elementLongLong
argument_list|()
specifier|const
block|{
return|return
name|m_longLong
return|;
block|}
name|void
name|setElementLongLong
parameter_list|(
name|qlonglong
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomChar
operator|*
name|elementChar
argument_list|()
specifier|const
block|{
return|return
name|m_char
return|;
block|}
name|DomChar
modifier|*
name|takeElementChar
parameter_list|()
function_decl|;
name|void
name|setElementChar
parameter_list|(
name|DomChar
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomUrl
operator|*
name|elementUrl
argument_list|()
specifier|const
block|{
return|return
name|m_url
return|;
block|}
name|DomUrl
modifier|*
name|takeElementUrl
parameter_list|()
function_decl|;
name|void
name|setElementUrl
parameter_list|(
name|DomUrl
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|uint
name|elementUInt
argument_list|()
specifier|const
block|{
return|return
name|m_UInt
return|;
block|}
name|void
name|setElementUInt
parameter_list|(
name|uint
name|a
parameter_list|)
function_decl|;
specifier|inline
name|qulonglong
name|elementULongLong
argument_list|()
specifier|const
block|{
return|return
name|m_uLongLong
return|;
block|}
name|void
name|setElementULongLong
parameter_list|(
name|qulonglong
name|a
parameter_list|)
function_decl|;
specifier|inline
name|DomBrush
operator|*
name|elementBrush
argument_list|()
specifier|const
block|{
return|return
name|m_brush
return|;
block|}
name|DomBrush
modifier|*
name|takeElementBrush
parameter_list|()
function_decl|;
name|void
name|setElementBrush
parameter_list|(
name|DomBrush
modifier|*
name|a
parameter_list|)
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
name|int
name|m_attr_stdset
decl_stmt|;
name|bool
name|m_has_attr_stdset
decl_stmt|;
comment|// child element data
name|Kind
name|m_kind
decl_stmt|;
name|QString
name|m_bool
decl_stmt|;
name|DomColor
modifier|*
name|m_color
decl_stmt|;
name|QString
name|m_cstring
decl_stmt|;
name|int
name|m_cursor
decl_stmt|;
name|QString
name|m_cursorShape
decl_stmt|;
name|QString
name|m_enum
decl_stmt|;
name|DomFont
modifier|*
name|m_font
decl_stmt|;
name|DomResourceIcon
modifier|*
name|m_iconSet
decl_stmt|;
name|DomResourcePixmap
modifier|*
name|m_pixmap
decl_stmt|;
name|DomPalette
modifier|*
name|m_palette
decl_stmt|;
name|DomPoint
modifier|*
name|m_point
decl_stmt|;
name|DomRect
modifier|*
name|m_rect
decl_stmt|;
name|QString
name|m_set
decl_stmt|;
name|DomLocale
modifier|*
name|m_locale
decl_stmt|;
name|DomSizePolicy
modifier|*
name|m_sizePolicy
decl_stmt|;
name|DomSize
modifier|*
name|m_size
decl_stmt|;
name|DomString
modifier|*
name|m_string
decl_stmt|;
name|DomStringList
modifier|*
name|m_stringList
decl_stmt|;
name|int
name|m_number
decl_stmt|;
name|float
name|m_float
decl_stmt|;
name|double
name|m_double
decl_stmt|;
name|DomDate
modifier|*
name|m_date
decl_stmt|;
name|DomTime
modifier|*
name|m_time
decl_stmt|;
name|DomDateTime
modifier|*
name|m_dateTime
decl_stmt|;
name|DomPointF
modifier|*
name|m_pointF
decl_stmt|;
name|DomRectF
modifier|*
name|m_rectF
decl_stmt|;
name|DomSizeF
modifier|*
name|m_sizeF
decl_stmt|;
name|qlonglong
name|m_longLong
decl_stmt|;
name|DomChar
modifier|*
name|m_char
decl_stmt|;
name|DomUrl
modifier|*
name|m_url
decl_stmt|;
name|uint
name|m_UInt
decl_stmt|;
name|qulonglong
name|m_uLongLong
decl_stmt|;
name|DomBrush
modifier|*
name|m_brush
decl_stmt|;
name|DomProperty
argument_list|(
specifier|const
name|DomProperty
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomProperty
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomConnections
block|{
name|public
label|:
name|DomConnections
argument_list|()
expr_stmt|;
operator|~
name|DomConnections
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomConnection
operator|*
operator|>
name|elementConnection
argument_list|()
specifier|const
block|{
return|return
name|m_connection
return|;
block|}
name|void
name|setElementConnection
argument_list|(
specifier|const
name|QList
operator|<
name|DomConnection
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomConnection
operator|*
operator|>
name|m_connection
expr_stmt|;
enum|enum
name|Child
block|{
name|Connection
init|=
literal|1
block|}
enum|;
name|DomConnections
argument_list|(
specifier|const
name|DomConnections
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomConnections
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomConnection
block|{
name|public
label|:
name|DomConnection
argument_list|()
expr_stmt|;
operator|~
name|DomConnection
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QString
name|elementSender
argument_list|()
specifier|const
block|{
return|return
name|m_sender
return|;
block|}
name|void
name|setElementSender
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSender
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Sender
return|;
block|}
name|void
name|clearElementSender
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementSignal
argument_list|()
specifier|const
block|{
return|return
name|m_signal
return|;
block|}
name|void
name|setElementSignal
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSignal
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Signal
return|;
block|}
name|void
name|clearElementSignal
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementReceiver
argument_list|()
specifier|const
block|{
return|return
name|m_receiver
return|;
block|}
name|void
name|setElementReceiver
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementReceiver
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Receiver
return|;
block|}
name|void
name|clearElementReceiver
parameter_list|()
function_decl|;
specifier|inline
name|QString
name|elementSlot
argument_list|()
specifier|const
block|{
return|return
name|m_slot
return|;
block|}
name|void
name|setElementSlot
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementSlot
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Slot
return|;
block|}
name|void
name|clearElementSlot
parameter_list|()
function_decl|;
specifier|inline
name|DomConnectionHints
operator|*
name|elementHints
argument_list|()
specifier|const
block|{
return|return
name|m_hints
return|;
block|}
name|DomConnectionHints
modifier|*
name|takeElementHints
parameter_list|()
function_decl|;
name|void
name|setElementHints
parameter_list|(
name|DomConnectionHints
modifier|*
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementHints
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Hints
return|;
block|}
name|void
name|clearElementHints
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QString
name|m_sender
decl_stmt|;
name|QString
name|m_signal
decl_stmt|;
name|QString
name|m_receiver
decl_stmt|;
name|QString
name|m_slot
decl_stmt|;
name|DomConnectionHints
modifier|*
name|m_hints
decl_stmt|;
enum|enum
name|Child
block|{
name|Sender
init|=
literal|1
block|,
name|Signal
init|=
literal|2
block|,
name|Receiver
init|=
literal|4
block|,
name|Slot
init|=
literal|8
block|,
name|Hints
init|=
literal|16
block|}
enum|;
name|DomConnection
argument_list|(
specifier|const
name|DomConnection
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomConnection
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomConnectionHints
block|{
name|public
label|:
name|DomConnectionHints
argument_list|()
expr_stmt|;
operator|~
name|DomConnectionHints
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomConnectionHint
operator|*
operator|>
name|elementHint
argument_list|()
specifier|const
block|{
return|return
name|m_hint
return|;
block|}
name|void
name|setElementHint
argument_list|(
specifier|const
name|QList
operator|<
name|DomConnectionHint
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomConnectionHint
operator|*
operator|>
name|m_hint
expr_stmt|;
enum|enum
name|Child
block|{
name|Hint
init|=
literal|1
block|}
enum|;
name|DomConnectionHints
argument_list|(
specifier|const
name|DomConnectionHints
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomConnectionHints
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomConnectionHint
block|{
name|public
label|:
name|DomConnectionHint
argument_list|()
expr_stmt|;
operator|~
name|DomConnectionHint
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeType
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_type
return|;
block|}
specifier|inline
name|QString
name|attributeType
argument_list|()
specifier|const
block|{
return|return
name|m_attr_type
return|;
block|}
specifier|inline
name|void
name|setAttributeType
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_type
operator|=
name|a
expr_stmt|;
name|m_has_attr_type
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeType
parameter_list|()
block|{
name|m_has_attr_type
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
specifier|inline
name|int
name|elementX
argument_list|()
specifier|const
block|{
return|return
name|m_x
return|;
block|}
name|void
name|setElementX
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementX
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|X
return|;
block|}
name|void
name|clearElementX
parameter_list|()
function_decl|;
specifier|inline
name|int
name|elementY
argument_list|()
specifier|const
block|{
return|return
name|m_y
return|;
block|}
name|void
name|setElementY
parameter_list|(
name|int
name|a
parameter_list|)
function_decl|;
specifier|inline
name|bool
name|hasElementY
argument_list|()
specifier|const
block|{
return|return
name|m_children
operator|&
name|Y
return|;
block|}
name|void
name|clearElementY
parameter_list|()
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_type
decl_stmt|;
name|bool
name|m_has_attr_type
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|int
name|m_x
decl_stmt|;
name|int
name|m_y
decl_stmt|;
enum|enum
name|Child
block|{
name|X
init|=
literal|1
block|,
name|Y
init|=
literal|2
block|}
enum|;
name|DomConnectionHint
argument_list|(
specifier|const
name|DomConnectionHint
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomConnectionHint
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomScript
block|{
name|public
label|:
name|DomScript
argument_list|()
expr_stmt|;
operator|~
name|DomScript
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeSource
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_source
return|;
block|}
specifier|inline
name|QString
name|attributeSource
argument_list|()
specifier|const
block|{
return|return
name|m_attr_source
return|;
block|}
specifier|inline
name|void
name|setAttributeSource
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_source
operator|=
name|a
expr_stmt|;
name|m_has_attr_source
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeSource
parameter_list|()
block|{
name|m_has_attr_source
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeLanguage
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_language
return|;
block|}
specifier|inline
name|QString
name|attributeLanguage
argument_list|()
specifier|const
block|{
return|return
name|m_attr_language
return|;
block|}
specifier|inline
name|void
name|setAttributeLanguage
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_language
operator|=
name|a
expr_stmt|;
name|m_has_attr_language
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeLanguage
parameter_list|()
block|{
name|m_has_attr_language
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_source
decl_stmt|;
name|bool
name|m_has_attr_source
decl_stmt|;
name|QString
name|m_attr_language
decl_stmt|;
name|bool
name|m_has_attr_language
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomScript
argument_list|(
specifier|const
name|DomScript
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomScript
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomWidgetData
block|{
name|public
label|:
name|DomWidgetData
argument_list|()
expr_stmt|;
operator|~
name|DomWidgetData
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|}
enum|;
name|DomWidgetData
argument_list|(
specifier|const
name|DomWidgetData
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomWidgetData
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomDesignerData
block|{
name|public
label|:
name|DomDesignerData
argument_list|()
expr_stmt|;
operator|~
name|DomDesignerData
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|elementProperty
argument_list|()
specifier|const
block|{
return|return
name|m_property
return|;
block|}
name|void
name|setElementProperty
argument_list|(
specifier|const
name|QList
operator|<
name|DomProperty
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomProperty
operator|*
operator|>
name|m_property
expr_stmt|;
enum|enum
name|Child
block|{
name|Property
init|=
literal|1
block|}
enum|;
name|DomDesignerData
argument_list|(
specifier|const
name|DomDesignerData
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomDesignerData
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomSlots
block|{
name|public
label|:
name|DomSlots
argument_list|()
expr_stmt|;
operator|~
name|DomSlots
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QStringList
name|elementSignal
argument_list|()
specifier|const
block|{
return|return
name|m_signal
return|;
block|}
name|void
name|setElementSignal
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|a
parameter_list|)
function_decl|;
specifier|inline
name|QStringList
name|elementSlot
argument_list|()
specifier|const
block|{
return|return
name|m_slot
return|;
block|}
name|void
name|setElementSlot
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|a
parameter_list|)
function_decl|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QStringList
name|m_signal
decl_stmt|;
name|QStringList
name|m_slot
decl_stmt|;
enum|enum
name|Child
block|{
name|Signal
init|=
literal|1
block|,
name|Slot
init|=
literal|2
block|}
enum|;
name|DomSlots
argument_list|(
specifier|const
name|DomSlots
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomSlots
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomPropertySpecifications
block|{
name|public
label|:
name|DomPropertySpecifications
argument_list|()
expr_stmt|;
operator|~
name|DomPropertySpecifications
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
comment|// child element accessors
specifier|inline
name|QList
operator|<
name|DomStringPropertySpecification
operator|*
operator|>
name|elementStringpropertyspecification
argument_list|()
specifier|const
block|{
return|return
name|m_stringpropertyspecification
return|;
block|}
name|void
name|setElementStringpropertyspecification
argument_list|(
specifier|const
name|QList
operator|<
name|DomStringPropertySpecification
operator|*
operator|>
operator|&
name|a
argument_list|)
decl_stmt|;
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|QList
operator|<
name|DomStringPropertySpecification
operator|*
operator|>
name|m_stringpropertyspecification
expr_stmt|;
enum|enum
name|Child
block|{
name|Stringpropertyspecification
init|=
literal|1
block|}
enum|;
name|DomPropertySpecifications
argument_list|(
specifier|const
name|DomPropertySpecifications
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomPropertySpecifications
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
name|class
name|QDESIGNER_UILIB_EXPORT
name|DomStringPropertySpecification
block|{
name|public
label|:
name|DomStringPropertySpecification
argument_list|()
expr_stmt|;
operator|~
name|DomStringPropertySpecification
argument_list|()
expr_stmt|;
name|void
name|read
parameter_list|(
name|QXmlStreamReader
modifier|&
name|reader
parameter_list|)
function_decl|;
name|void
name|write
argument_list|(
name|QXmlStreamWriter
operator|&
name|writer
argument_list|,
specifier|const
name|QString
operator|&
name|tagName
operator|=
name|QString
argument_list|()
argument_list|)
decl|const
decl_stmt|;
specifier|inline
name|QString
name|text
argument_list|()
specifier|const
block|{
return|return
name|m_text
return|;
block|}
specifier|inline
name|void
name|setText
parameter_list|(
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
block|{
name|m_text
operator|=
name|s
expr_stmt|;
block|}
comment|// attribute accessors
specifier|inline
name|bool
name|hasAttributeName
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_name
return|;
block|}
specifier|inline
name|QString
name|attributeName
argument_list|()
specifier|const
block|{
return|return
name|m_attr_name
return|;
block|}
specifier|inline
name|void
name|setAttributeName
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_name
operator|=
name|a
expr_stmt|;
name|m_has_attr_name
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeName
parameter_list|()
block|{
name|m_has_attr_name
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeType
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_type
return|;
block|}
specifier|inline
name|QString
name|attributeType
argument_list|()
specifier|const
block|{
return|return
name|m_attr_type
return|;
block|}
specifier|inline
name|void
name|setAttributeType
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_type
operator|=
name|a
expr_stmt|;
name|m_has_attr_type
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeType
parameter_list|()
block|{
name|m_has_attr_type
operator|=
name|false
expr_stmt|;
block|}
specifier|inline
name|bool
name|hasAttributeNotr
argument_list|()
specifier|const
block|{
return|return
name|m_has_attr_notr
return|;
block|}
specifier|inline
name|QString
name|attributeNotr
argument_list|()
specifier|const
block|{
return|return
name|m_attr_notr
return|;
block|}
specifier|inline
name|void
name|setAttributeNotr
parameter_list|(
specifier|const
name|QString
modifier|&
name|a
parameter_list|)
block|{
name|m_attr_notr
operator|=
name|a
expr_stmt|;
name|m_has_attr_notr
operator|=
name|true
expr_stmt|;
block|}
specifier|inline
name|void
name|clearAttributeNotr
parameter_list|()
block|{
name|m_has_attr_notr
operator|=
name|false
expr_stmt|;
block|}
comment|// child element accessors
name|private
label|:
name|QString
name|m_text
decl_stmt|;
name|void
name|clear
parameter_list|(
name|bool
name|clear_all
init|=
name|true
parameter_list|)
function_decl|;
comment|// attribute data
name|QString
name|m_attr_name
decl_stmt|;
name|bool
name|m_has_attr_name
decl_stmt|;
name|QString
name|m_attr_type
decl_stmt|;
name|bool
name|m_has_attr_type
decl_stmt|;
name|QString
name|m_attr_notr
decl_stmt|;
name|bool
name|m_has_attr_notr
decl_stmt|;
comment|// child element data
name|uint
name|m_children
decl_stmt|;
name|DomStringPropertySpecification
argument_list|(
specifier|const
name|DomStringPropertySpecification
operator|&
name|other
argument_list|)
expr_stmt|;
name|void
name|operator
init|=
operator|(
specifier|const
name|DomStringPropertySpecification
operator|&
name|other
operator|)
decl_stmt|;
block|}
empty_stmt|;
ifdef|#
directive|ifdef
name|QFORMINTERNAL_NAMESPACE
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// UI4_H
end_comment
end_unit
