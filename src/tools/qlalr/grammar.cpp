begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|// This file was generated by qlalr - DO NOT EDIT!
end_comment
begin_include
include|#
directive|include
file|"grammar_p.h"
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|member|spell
specifier|const
name|char
modifier|*
specifier|const
name|grammar
operator|::
name|spell
index|[]
init|=
block|{
literal|"end of file"
block|,
literal|"identifier"
block|,
literal|"string literal"
block|,
literal|"%decl"
block|,
literal|"%expect"
block|,
literal|"%expect-lr"
block|,
literal|"%impl"
block|,
literal|"%left"
block|,
literal|"%merged_output"
block|,
literal|"%nonassoc"
block|,
literal|"%parser"
block|,
literal|"%prec"
block|,
literal|"%right"
block|,
literal|"%start"
block|,
literal|"%token"
block|,
literal|"%token_prefix"
block|,
literal|":"
block|,
literal|"|"
block|,
literal|";"
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|lhs
specifier|const
name|short
name|grammar
operator|::
name|lhs
index|[]
init|=
block|{
literal|22
block|,
literal|23
block|,
literal|23
block|,
literal|29
block|,
literal|25
block|,
literal|28
block|,
literal|28
block|,
literal|28
block|,
literal|28
block|,
literal|28
block|,
literal|28
block|,
literal|28
block|,
literal|24
block|,
literal|24
block|,
literal|31
block|,
literal|32
block|,
literal|32
block|,
literal|33
block|,
literal|33
block|,
literal|34
block|,
literal|34
block|,
literal|34
block|,
literal|31
block|,
literal|35
block|,
literal|35
block|,
literal|36
block|,
literal|37
block|,
literal|37
block|,
literal|38
block|,
literal|38
block|,
literal|30
block|,
literal|30
block|,
literal|26
block|,
literal|26
block|,
literal|40
block|,
literal|39
block|,
literal|41
block|,
literal|41
block|,
literal|44
block|,
literal|43
block|,
literal|43
block|,
literal|42
block|,
literal|42
block|,
literal|27
block|,
literal|45
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|rhs
specifier|const
name|short
name|grammar
operator|::
name|rhs
index|[]
init|=
block|{
literal|4
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|4
block|,
literal|3
block|,
literal|6
block|,
literal|0
block|,
literal|0
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|0
block|,
literal|2
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|action_default
specifier|const
name|short
name|grammar
operator|::
name|action_default
index|[]
init|=
block|{
literal|44
block|,
literal|2
block|,
literal|44
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|13
block|,
literal|0
block|,
literal|0
block|,
literal|3
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|8
block|,
literal|10
block|,
literal|11
block|,
literal|9
block|,
literal|7
block|,
literal|6
block|,
literal|12
block|,
literal|20
block|,
literal|22
block|,
literal|0
block|,
literal|21
block|,
literal|0
block|,
literal|44
block|,
literal|31
block|,
literal|0
block|,
literal|14
block|,
literal|26
block|,
literal|24
block|,
literal|23
block|,
literal|25
block|,
literal|4
block|,
literal|33
block|,
literal|1
block|,
literal|0
block|,
literal|34
block|,
literal|44
block|,
literal|35
block|,
literal|42
block|,
literal|39
block|,
literal|40
block|,
literal|0
block|,
literal|31
block|,
literal|44
block|,
literal|40
block|,
literal|43
block|,
literal|0
block|,
literal|31
block|,
literal|41
block|,
literal|29
block|,
literal|27
block|,
literal|28
block|,
literal|32
block|,
literal|38
block|,
literal|30
block|,
literal|36
block|,
literal|31
block|,
literal|37
block|,
literal|5
block|,
literal|44
block|,
literal|16
block|,
literal|15
block|,
literal|18
block|,
literal|19
block|,
literal|17
block|,
literal|45
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|goto_default
specifier|const
name|short
name|grammar
operator|::
name|goto_default
index|[]
init|=
block|{
literal|3
block|,
literal|2
block|,
literal|13
block|,
literal|26
block|,
literal|36
block|,
literal|41
block|,
literal|10
block|,
literal|27
block|,
literal|61
block|,
literal|29
block|,
literal|64
block|,
literal|63
block|,
literal|23
block|,
literal|32
block|,
literal|31
block|,
literal|52
block|,
literal|55
block|,
literal|38
block|,
literal|39
block|,
literal|42
block|,
literal|43
block|,
literal|59
block|,
literal|44
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|action_index
specifier|const
name|short
name|grammar
operator|::
name|action_index
index|[]
init|=
block|{
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|54
block|,
literal|1
block|,
literal|5
block|,
literal|15
block|,
literal|20
block|,
operator|-
literal|22
block|,
operator|-
literal|1
block|,
literal|6
block|,
operator|-
literal|22
block|,
literal|3
block|,
literal|2
block|,
literal|35
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|10
block|,
operator|-
literal|22
block|,
literal|7
block|,
operator|-
literal|22
block|,
literal|14
block|,
literal|9
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|8
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|11
block|,
operator|-
literal|2
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|3
block|,
literal|16
block|,
literal|13
block|,
literal|14
block|,
operator|-
literal|22
block|,
literal|17
block|,
operator|-
literal|22
block|,
literal|4
block|,
literal|14
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|14
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|14
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|0
block|,
operator|-
literal|22
block|,
literal|12
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
operator|-
literal|22
block|,
literal|2
block|,
operator|-
literal|24
block|,
operator|-
literal|2
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|4
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|14
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
literal|0
block|,
operator|-
literal|16
block|,
operator|-
literal|15
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
literal|15
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|10
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
literal|1
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|3
block|,
operator|-
literal|24
block|,
operator|-
literal|1
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|,
operator|-
literal|24
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|action_info
specifier|const
name|short
name|grammar
operator|::
name|action_info
index|[]
init|=
block|{
literal|17
block|,
literal|68
block|,
literal|66
block|,
literal|20
block|,
literal|19
block|,
literal|51
block|,
literal|14
block|,
literal|18
block|,
literal|34
block|,
literal|30
block|,
literal|62
block|,
literal|30
block|,
literal|37
block|,
literal|62
block|,
literal|40
block|,
literal|45
block|,
literal|15
block|,
literal|48
block|,
literal|48
block|,
literal|0
block|,
literal|0
block|,
literal|16
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|49
block|,
literal|49
block|,
literal|0
block|,
literal|46
block|,
literal|0
block|,
literal|0
block|,
literal|53
block|,
literal|54
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|21
block|,
literal|0
block|,
literal|22
block|,
literal|0
block|,
literal|0
block|,
literal|24
block|,
literal|25
block|,
literal|28
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|8
block|,
literal|0
block|,
literal|9
block|,
literal|0
block|,
literal|11
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|12
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|33
block|,
literal|35
block|,
literal|65
block|,
literal|7
block|,
literal|47
block|,
literal|57
block|,
literal|50
block|,
literal|1
block|,
literal|58
block|,
literal|60
block|,
literal|67
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|56
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|member|action_check
specifier|const
name|short
name|grammar
operator|::
name|action_check
index|[]
init|=
block|{
literal|1
block|,
literal|0
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|16
block|,
literal|18
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|11
block|,
literal|11
block|,
operator|-
literal|1
block|,
literal|17
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|19
block|,
literal|20
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|7
block|,
operator|-
literal|1
block|,
literal|9
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
operator|-
literal|1
block|,
literal|8
block|,
operator|-
literal|1
block|,
literal|10
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|15
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|14
block|,
literal|5
block|,
literal|5
block|,
literal|5
block|,
literal|20
block|,
literal|15
block|,
literal|21
block|,
literal|5
block|,
literal|8
block|,
literal|8
block|,
literal|11
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|8
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|}
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
