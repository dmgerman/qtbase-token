begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QMLVISITOR_H
end_ifndef
begin_define
DECL|macro|QMLVISITOR_H
define|#
directive|define
name|QMLVISITOR_H
end_define
begin_include
include|#
directive|include
file|<QString>
end_include
begin_include
include|#
directive|include
file|"qqmljsastvisitor_p.h"
end_include
begin_include
include|#
directive|include
file|"node.h"
end_include
begin_include
include|#
directive|include
file|"tree.h"
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_struct
DECL|struct|QmlPropArgs
struct|struct
name|QmlPropArgs
block|{
DECL|member|type_
name|QString
name|type_
decl_stmt|;
DECL|member|module_
name|QString
name|module_
decl_stmt|;
DECL|member|component_
name|QString
name|component_
decl_stmt|;
DECL|member|name_
name|QString
name|name_
decl_stmt|;
DECL|function|clear
name|void
name|clear
parameter_list|()
block|{
name|type_
operator|.
name|clear
argument_list|()
expr_stmt|;
name|module_
operator|.
name|clear
argument_list|()
expr_stmt|;
name|component_
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
struct|;
end_struct
begin_decl_stmt
name|class
name|QmlDocVisitor
range|:
name|public
name|QQmlJS
operator|::
name|AST
operator|::
name|Visitor
block|{
name|public
operator|:
name|QmlDocVisitor
argument_list|(
specifier|const
name|QString
operator|&
name|filePath
argument_list|,
specifier|const
name|QString
operator|&
name|code
argument_list|,
name|QQmlJS
operator|::
name|Engine
operator|*
name|engine
argument_list|,
name|QSet
operator|<
name|QString
operator|>
operator|&
name|commands
argument_list|,
name|QSet
operator|<
name|QString
operator|>
operator|&
name|topics
argument_list|)
block|;
name|virtual
operator|~
name|QmlDocVisitor
argument_list|()
block|;
name|bool
name|visit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiImportList
operator|*
name|imports
argument_list|)
block|;
name|void
name|endVisit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiImportList
operator|*
name|definition
argument_list|)
block|;
name|bool
name|visit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiObjectDefinition
operator|*
name|definition
argument_list|)
block|;
name|void
name|endVisit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiObjectDefinition
operator|*
name|definition
argument_list|)
block|;
name|bool
name|visit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiPublicMember
operator|*
name|member
argument_list|)
block|;
name|void
name|endVisit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiPublicMember
operator|*
name|definition
argument_list|)
block|;
name|bool
name|visit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|IdentifierPropertyName
operator|*
name|idproperty
argument_list|)
block|;
name|bool
name|visit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|FunctionDeclaration
operator|*
argument_list|)
block|;
name|void
name|endVisit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|FunctionDeclaration
operator|*
argument_list|)
block|;
name|bool
name|visit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiScriptBinding
operator|*
argument_list|)
block|;
name|void
name|endVisit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiScriptBinding
operator|*
argument_list|)
block|;
name|bool
name|visit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiQualifiedId
operator|*
argument_list|)
block|;
name|void
name|endVisit
argument_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiQualifiedId
operator|*
argument_list|)
block|;
name|private
operator|:
name|QQmlJS
operator|::
name|AST
operator|::
name|SourceLocation
name|precedingComment
argument_list|(
argument|quint32 offset
argument_list|)
specifier|const
block|;
name|bool
name|applyDocumentation
argument_list|(
argument|QQmlJS::AST::SourceLocation location
argument_list|,
argument|Node *node
argument_list|)
block|;
name|void
name|applyMetacommands
argument_list|(
argument|QQmlJS::AST::SourceLocation location
argument_list|,
argument|Node* node
argument_list|,
argument|Doc& doc
argument_list|)
block|;
name|bool
name|splitQmlPropertyArg
argument_list|(
specifier|const
name|Doc
operator|&
name|doc
argument_list|,
specifier|const
name|QString
operator|&
name|arg
argument_list|,
name|QmlPropArgs
operator|&
name|qpa
argument_list|)
block|;
name|QQmlJS
operator|::
name|Engine
operator|*
name|engine
block|;
name|quint32
name|lastEndOffset
block|;
name|quint32
name|nestingLevel
block|;
name|QString
name|filePath
block|;
name|QString
name|name
block|;
name|QString
name|document
block|;
name|QList
operator|<
name|QPair
operator|<
name|QString
block|,
name|QString
operator|>
expr|>
name|importList
block|;
name|QSet
operator|<
name|QString
operator|>
name|commands
block|;
name|QSet
operator|<
name|QString
operator|>
name|topics
block|;
name|QSet
operator|<
name|quint32
operator|>
name|usedComments
block|;
name|Tree
operator|*
name|tree
block|;
name|InnerNode
operator|*
name|current
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
