begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|/*   separator.cpp */
end_comment
begin_include
include|#
directive|include
file|"separator.h"
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|separator
name|QString
name|separator
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|count
parameter_list|)
block|{
if|if
condition|(
name|index
operator|==
name|count
operator|-
literal|1
condition|)
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|"."
argument_list|,
literal|"terminator"
argument_list|)
return|;
if|if
condition|(
name|count
operator|==
literal|2
condition|)
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|" and "
argument_list|,
literal|"separator when N = 2"
argument_list|)
return|;
if|if
condition|(
name|index
operator|==
literal|0
condition|)
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|", "
argument_list|,
literal|"first separator when N> 2"
argument_list|)
return|;
if|if
condition|(
name|index
operator|<
name|count
operator|-
literal|2
condition|)
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|", "
argument_list|,
literal|"general separator when N> 2"
argument_list|)
return|;
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|", and "
argument_list|,
literal|"last separator when N> 2"
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|comma
name|QString
name|comma
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|count
parameter_list|)
block|{
if|if
condition|(
name|index
operator|==
name|count
operator|-
literal|1
condition|)
return|return
name|QString
argument_list|()
return|;
if|if
condition|(
name|count
operator|==
literal|2
condition|)
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|" and "
argument_list|,
literal|"separator when N = 2"
argument_list|)
return|;
if|if
condition|(
name|index
operator|==
literal|0
condition|)
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|", "
argument_list|,
literal|"first separator when N> 2"
argument_list|)
return|;
if|if
condition|(
name|index
operator|<
name|count
operator|-
literal|2
condition|)
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|", "
argument_list|,
literal|"general separator when N> 2"
argument_list|)
return|;
return|return
name|QCoreApplication
operator|::
name|translate
argument_list|(
literal|"QDoc"
argument_list|,
literal|", and "
argument_list|,
literal|"last separator when N> 2"
argument_list|)
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
