begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the tools applications of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QStringList>
end_include
begin_include
include|#
directive|include
file|<QtGlobal>
end_include
begin_include
include|#
directive|include
file|"qqmljsast_p.h"
end_include
begin_include
include|#
directive|include
file|"qqmljsastfwd_p.h"
end_include
begin_include
include|#
directive|include
file|"qqmljsengine_p.h"
end_include
begin_include
include|#
directive|include
file|"qmlmarkupvisitor.h"
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|QmlMarkupVisitor
name|QmlMarkupVisitor
operator|::
name|QmlMarkupVisitor
parameter_list|(
specifier|const
name|QString
modifier|&
name|source
parameter_list|,
specifier|const
name|QList
argument_list|<
name|QQmlJS
operator|::
name|AST
operator|::
name|SourceLocation
argument_list|>
modifier|&
name|pragmas
parameter_list|,
name|QQmlJS
operator|::
name|Engine
modifier|*
name|engine
parameter_list|)
block|{
name|this
operator|->
name|source
operator|=
name|source
expr_stmt|;
name|this
operator|->
name|engine
operator|=
name|engine
expr_stmt|;
name|cursor
operator|=
literal|0
expr_stmt|;
name|extraIndex
operator|=
literal|0
expr_stmt|;
comment|// Merge the lists of locations of pragmas and comments in the source code.
name|int
name|i
init|=
literal|0
decl_stmt|;
name|int
name|j
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|engine
operator|->
name|comments
argument_list|()
operator|.
name|length
argument_list|()
operator|&&
name|j
operator|<
name|pragmas
operator|.
name|length
argument_list|()
condition|)
block|{
if|if
condition|(
name|engine
operator|->
name|comments
argument_list|()
index|[
name|i
index|]
operator|.
name|offset
operator|<
name|pragmas
index|[
name|j
index|]
operator|.
name|offset
condition|)
block|{
name|extraTypes
operator|.
name|append
argument_list|(
name|Comment
argument_list|)
expr_stmt|;
name|extraLocations
operator|.
name|append
argument_list|(
name|engine
operator|->
name|comments
argument_list|()
index|[
name|i
index|]
argument_list|)
expr_stmt|;
operator|++
name|i
expr_stmt|;
block|}
else|else
block|{
name|extraTypes
operator|.
name|append
argument_list|(
name|Pragma
argument_list|)
expr_stmt|;
name|extraLocations
operator|.
name|append
argument_list|(
name|engine
operator|->
name|comments
argument_list|()
index|[
name|j
index|]
argument_list|)
expr_stmt|;
operator|++
name|j
expr_stmt|;
block|}
block|}
while|while
condition|(
name|i
operator|<
name|engine
operator|->
name|comments
argument_list|()
operator|.
name|length
argument_list|()
condition|)
block|{
name|extraTypes
operator|.
name|append
argument_list|(
name|Comment
argument_list|)
expr_stmt|;
name|extraLocations
operator|.
name|append
argument_list|(
name|engine
operator|->
name|comments
argument_list|()
index|[
name|i
index|]
argument_list|)
expr_stmt|;
operator|++
name|i
expr_stmt|;
block|}
while|while
condition|(
name|j
operator|<
name|pragmas
operator|.
name|length
argument_list|()
condition|)
block|{
name|extraTypes
operator|.
name|append
argument_list|(
name|Pragma
argument_list|)
expr_stmt|;
name|extraLocations
operator|.
name|append
argument_list|(
name|pragmas
index|[
name|j
index|]
argument_list|)
expr_stmt|;
operator|++
name|j
expr_stmt|;
block|}
block|}
end_function
begin_destructor
DECL|function|~QmlMarkupVisitor
name|QmlMarkupVisitor
operator|::
name|~
name|QmlMarkupVisitor
parameter_list|()
block|{ }
end_destructor
begin_comment
comment|// The protect() function is a copy of the one from CppCodeMarker.
end_comment
begin_decl_stmt
DECL|variable|samp
specifier|static
specifier|const
name|QString
name|samp
init|=
name|QLatin1String
argument_list|(
literal|"&amp;"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|slt
specifier|static
specifier|const
name|QString
name|slt
init|=
name|QLatin1String
argument_list|(
literal|"&lt;"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|sgt
specifier|static
specifier|const
name|QString
name|sgt
init|=
name|QLatin1String
argument_list|(
literal|"&gt;"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|squot
specifier|static
specifier|const
name|QString
name|squot
init|=
name|QLatin1String
argument_list|(
literal|"&quot;"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function
DECL|function|protect
name|QString
name|QmlMarkupVisitor
operator|::
name|protect
parameter_list|(
specifier|const
name|QString
modifier|&
name|str
parameter_list|)
block|{
name|int
name|n
init|=
name|str
operator|.
name|length
argument_list|()
decl_stmt|;
name|QString
name|marked
decl_stmt|;
name|marked
operator|.
name|reserve
argument_list|(
name|n
operator|*
literal|2
operator|+
literal|30
argument_list|)
expr_stmt|;
specifier|const
name|QChar
modifier|*
name|data
init|=
name|str
operator|.
name|constData
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|!=
name|n
condition|;
operator|++
name|i
control|)
block|{
switch|switch
condition|(
name|data
index|[
name|i
index|]
operator|.
name|unicode
argument_list|()
condition|)
block|{
case|case
literal|'&'
case|:
name|marked
operator|+=
name|samp
expr_stmt|;
break|break;
case|case
literal|'<'
case|:
name|marked
operator|+=
name|slt
expr_stmt|;
break|break;
case|case
literal|'>'
case|:
name|marked
operator|+=
name|sgt
expr_stmt|;
break|break;
case|case
literal|'"'
case|:
name|marked
operator|+=
name|squot
expr_stmt|;
break|break;
default|default :
name|marked
operator|+=
name|data
index|[
name|i
index|]
expr_stmt|;
block|}
block|}
return|return
name|marked
return|;
block|}
end_function
begin_function
DECL|function|markedUpCode
name|QString
name|QmlMarkupVisitor
operator|::
name|markedUpCode
parameter_list|()
block|{
if|if
condition|(
name|int
argument_list|(
name|cursor
argument_list|)
operator|<
name|source
operator|.
name|length
argument_list|()
condition|)
name|addExtra
argument_list|(
name|cursor
argument_list|,
name|source
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|output
return|;
block|}
end_function
begin_function
DECL|function|addExtra
name|void
name|QmlMarkupVisitor
operator|::
name|addExtra
parameter_list|(
name|quint32
name|start
parameter_list|,
name|quint32
name|finish
parameter_list|)
block|{
if|if
condition|(
name|extraIndex
operator|>=
name|extraLocations
operator|.
name|length
argument_list|()
condition|)
block|{
name|QString
name|extra
init|=
name|source
operator|.
name|mid
argument_list|(
name|start
argument_list|,
name|finish
operator|-
name|start
argument_list|)
decl_stmt|;
if|if
condition|(
name|extra
operator|.
name|trimmed
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|output
operator|+=
name|extra
expr_stmt|;
else|else
name|output
operator|+=
name|protect
argument_list|(
name|extra
argument_list|)
expr_stmt|;
comment|// text that should probably have been caught by the parser
name|cursor
operator|=
name|finish
expr_stmt|;
return|return;
block|}
while|while
condition|(
name|extraIndex
operator|<
name|extraLocations
operator|.
name|length
argument_list|()
condition|)
block|{
if|if
condition|(
name|extraTypes
index|[
name|extraIndex
index|]
operator|==
name|Comment
condition|)
block|{
if|if
condition|(
name|extraLocations
index|[
name|extraIndex
index|]
operator|.
name|offset
operator|-
literal|2
operator|>=
name|start
condition|)
break|break;
block|}
else|else
block|{
if|if
condition|(
name|extraLocations
index|[
name|extraIndex
index|]
operator|.
name|offset
operator|>=
name|start
condition|)
break|break;
block|}
name|extraIndex
operator|++
expr_stmt|;
block|}
name|quint32
name|i
init|=
name|start
decl_stmt|;
while|while
condition|(
name|i
operator|<
name|finish
operator|&&
name|extraIndex
operator|<
name|extraLocations
operator|.
name|length
argument_list|()
condition|)
block|{
name|quint32
name|j
init|=
name|extraLocations
index|[
name|extraIndex
index|]
operator|.
name|offset
operator|-
literal|2
decl_stmt|;
if|if
condition|(
name|i
operator|<=
name|j
operator|&&
name|j
operator|<
name|finish
condition|)
block|{
if|if
condition|(
name|i
operator|<
name|j
condition|)
name|output
operator|+=
name|protect
argument_list|(
name|source
operator|.
name|mid
argument_list|(
name|i
argument_list|,
name|j
operator|-
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|quint32
name|l
init|=
name|extraLocations
index|[
name|extraIndex
index|]
operator|.
name|length
decl_stmt|;
if|if
condition|(
name|extraTypes
index|[
name|extraIndex
index|]
operator|==
name|Comment
condition|)
block|{
if|if
condition|(
name|source
operator|.
name|mid
argument_list|(
name|j
argument_list|,
literal|2
argument_list|)
operator|==
name|QLatin1String
argument_list|(
literal|"/*"
argument_list|)
condition|)
name|l
operator|+=
literal|4
expr_stmt|;
else|else
name|l
operator|+=
literal|2
expr_stmt|;
name|output
operator|+=
name|QLatin1String
argument_list|(
literal|"<@comment>"
argument_list|)
expr_stmt|;
name|output
operator|+=
name|protect
argument_list|(
name|source
operator|.
name|mid
argument_list|(
name|j
argument_list|,
name|l
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|+=
name|QLatin1String
argument_list|(
literal|"</@comment>"
argument_list|)
expr_stmt|;
block|}
else|else
name|output
operator|+=
name|protect
argument_list|(
name|source
operator|.
name|mid
argument_list|(
name|j
argument_list|,
name|l
argument_list|)
argument_list|)
expr_stmt|;
name|extraIndex
operator|++
expr_stmt|;
name|i
operator|=
name|j
operator|+
name|l
expr_stmt|;
block|}
else|else
break|break;
block|}
name|QString
name|extra
init|=
name|source
operator|.
name|mid
argument_list|(
name|i
argument_list|,
name|finish
operator|-
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|extra
operator|.
name|trimmed
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
name|output
operator|+=
name|extra
expr_stmt|;
else|else
name|output
operator|+=
name|protect
argument_list|(
name|extra
argument_list|)
expr_stmt|;
comment|// text that should probably have been caught by the parser
name|cursor
operator|=
name|finish
expr_stmt|;
block|}
end_function
begin_function
DECL|function|addMarkedUpToken
name|void
name|QmlMarkupVisitor
operator|::
name|addMarkedUpToken
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|SourceLocation
modifier|&
name|location
parameter_list|,
specifier|const
name|QString
modifier|&
name|tagName
parameter_list|,
specifier|const
name|QHash
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
modifier|&
name|attributes
parameter_list|)
block|{
if|if
condition|(
operator|!
name|location
operator|.
name|isValid
argument_list|()
condition|)
return|return;
if|if
condition|(
name|cursor
operator|<
name|location
operator|.
name|offset
condition|)
name|addExtra
argument_list|(
name|cursor
argument_list|,
name|location
operator|.
name|offset
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|cursor
operator|>
name|location
operator|.
name|offset
condition|)
return|return;
name|output
operator|+=
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|"<@%1"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|tagName
argument_list|)
expr_stmt|;
foreach|foreach
control|(
specifier|const
name|QString
modifier|&
name|key
decl|,
name|attributes
control|)
name|output
operator|+=
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|" %1=\"%2\""
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|key
argument_list|)
operator|.
name|arg
argument_list|(
name|attributes
index|[
name|key
index|]
argument_list|)
expr_stmt|;
name|output
operator|+=
name|QString
argument_list|(
name|QLatin1String
argument_list|(
literal|">%2</@%3>"
argument_list|)
argument_list|)
operator|.
name|arg
argument_list|(
name|protect
argument_list|(
name|sourceText
argument_list|(
name|location
argument_list|)
argument_list|)
argument_list|,
name|tagName
argument_list|)
expr_stmt|;
name|cursor
operator|+=
name|location
operator|.
name|length
expr_stmt|;
block|}
end_function
begin_function
DECL|function|sourceText
name|QString
name|QmlMarkupVisitor
operator|::
name|sourceText
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|SourceLocation
modifier|&
name|location
parameter_list|)
block|{
return|return
name|source
operator|.
name|mid
argument_list|(
name|location
operator|.
name|offset
argument_list|,
name|location
operator|.
name|length
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|addVerbatim
name|void
name|QmlMarkupVisitor
operator|::
name|addVerbatim
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|SourceLocation
name|first
parameter_list|,
name|QQmlJS
operator|::
name|AST
operator|::
name|SourceLocation
name|last
parameter_list|)
block|{
if|if
condition|(
operator|!
name|first
operator|.
name|isValid
argument_list|()
condition|)
return|return;
name|quint32
name|start
init|=
name|first
operator|.
name|begin
argument_list|()
decl_stmt|;
name|quint32
name|finish
decl_stmt|;
if|if
condition|(
name|last
operator|.
name|isValid
argument_list|()
condition|)
name|finish
operator|=
name|last
operator|.
name|end
argument_list|()
expr_stmt|;
else|else
name|finish
operator|=
name|first
operator|.
name|end
argument_list|()
expr_stmt|;
if|if
condition|(
name|cursor
operator|<
name|start
condition|)
name|addExtra
argument_list|(
name|cursor
argument_list|,
name|start
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|cursor
operator|>
name|start
condition|)
return|return;
name|QString
name|text
init|=
name|source
operator|.
name|mid
argument_list|(
name|start
argument_list|,
name|finish
operator|-
name|start
argument_list|)
decl_stmt|;
name|output
operator|+=
name|protect
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|cursor
operator|=
name|finish
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiImport
modifier|*
name|uiimport
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|uiimport
operator|->
name|importToken
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|uiimport
operator|->
name|importUri
condition|)
name|addMarkedUpToken
argument_list|(
name|uiimport
operator|->
name|fileNameToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"headerfile"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|endVisit
name|void
name|QmlMarkupVisitor
operator|::
name|endVisit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiImport
modifier|*
name|uiimport
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|uiimport
operator|->
name|versionToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|uiimport
operator|->
name|asToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|uiimport
operator|->
name|importIdToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"headerfile"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|uiimport
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiPublicMember
modifier|*
name|member
parameter_list|)
block|{
if|if
condition|(
name|member
operator|->
name|type
operator|==
name|QQmlJS
operator|::
name|AST
operator|::
name|UiPublicMember
operator|::
name|Property
condition|)
block|{
name|addVerbatim
argument_list|(
name|member
operator|->
name|defaultToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|member
operator|->
name|readonlyToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|member
operator|->
name|propertyToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|member
operator|->
name|typeModifierToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|member
operator|->
name|typeToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|member
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|member
operator|->
name|colonToken
argument_list|)
expr_stmt|;
if|if
condition|(
name|member
operator|->
name|binding
condition|)
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|member
operator|->
name|binding
argument_list|,
name|this
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|member
operator|->
name|statement
condition|)
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|member
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|addVerbatim
argument_list|(
name|member
operator|->
name|propertyToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|member
operator|->
name|typeModifierToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|member
operator|->
name|typeToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
comment|//addVerbatim(member->identifierToken);
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|member
operator|->
name|parameters
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
name|addVerbatim
argument_list|(
name|member
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiObjectInitializer
modifier|*
name|initializer
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|initializer
operator|->
name|lbraceToken
argument_list|,
name|initializer
operator|->
name|lbraceToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|endVisit
name|void
name|QmlMarkupVisitor
operator|::
name|endVisit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiObjectInitializer
modifier|*
name|initializer
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|initializer
operator|->
name|rbraceToken
argument_list|,
name|initializer
operator|->
name|rbraceToken
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiObjectBinding
modifier|*
name|binding
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|binding
operator|->
name|qualifiedId
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|binding
operator|->
name|colonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|binding
operator|->
name|qualifiedTypeNameId
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|binding
operator|->
name|initializer
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiScriptBinding
modifier|*
name|binding
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|binding
operator|->
name|qualifiedId
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|binding
operator|->
name|colonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|binding
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiArrayBinding
modifier|*
name|binding
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|binding
operator|->
name|qualifiedId
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|binding
operator|->
name|colonToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|binding
operator|->
name|lbracketToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|binding
operator|->
name|members
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|binding
operator|->
name|rbracketToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiArrayMemberList
modifier|*
name|list
parameter_list|)
block|{
for|for
control|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiArrayMemberList
modifier|*
name|it
init|=
name|list
init|;
name|it
condition|;
name|it
operator|=
name|it
operator|->
name|next
control|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|it
operator|->
name|member
argument_list|,
name|this
argument_list|)
expr_stmt|;
comment|//addVerbatim(it->commaToken);
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiQualifiedId
modifier|*
name|id
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|id
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ThisExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|thisToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|IdentifierExpression
modifier|*
name|identifier
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|identifier
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|NullExpression
modifier|*
name|null
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|null
operator|->
name|nullToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"number"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|TrueLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|literal
operator|->
name|trueToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"number"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|FalseLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|literal
operator|->
name|falseToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"number"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|NumericLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|literal
operator|->
name|literalToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"number"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|StringLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|literal
operator|->
name|literalToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|RegExpLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|literal
operator|->
name|literalToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ArrayLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|literal
operator|->
name|lbracketToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|literal
operator|->
name|elements
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|literal
operator|->
name|rbracketToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ObjectLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|literal
operator|->
name|lbraceToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|endVisit
name|void
name|QmlMarkupVisitor
operator|::
name|endVisit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ObjectLiteral
modifier|*
name|literal
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|literal
operator|->
name|rbraceToken
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ElementList
modifier|*
name|list
parameter_list|)
block|{
for|for
control|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ElementList
modifier|*
name|it
init|=
name|list
init|;
name|it
condition|;
name|it
operator|=
name|it
operator|->
name|next
control|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|it
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
comment|//addVerbatim(it->commaToken);
block|}
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|list
operator|->
name|elision
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|Elision
modifier|*
name|elision
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|elision
operator|->
name|commaToken
argument_list|,
name|elision
operator|->
name|commaToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|PropertyNameAndValueList
modifier|*
name|list
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|list
operator|->
name|name
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|list
operator|->
name|colonToken
argument_list|,
name|list
operator|->
name|colonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|list
operator|->
name|value
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|list
operator|->
name|commaToken
argument_list|,
name|list
operator|->
name|commaToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ArrayMemberExpression
modifier|*
name|expression
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|base
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|lbracketToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|rbracketToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|FieldMemberExpression
modifier|*
name|expression
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|base
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|dotToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|expression
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|NewMemberExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|newToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|base
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|arguments
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|NewExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|newToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ArgumentList
modifier|*
name|list
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|list
operator|->
name|commaToken
argument_list|,
name|list
operator|->
name|commaToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|PostIncrementExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|incrementToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|PostDecrementExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|decrementToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|DeleteExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|deleteToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|VoidExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|voidToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|TypeOfExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|typeofToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|PreIncrementExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|incrementToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|PreDecrementExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|decrementToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UnaryPlusExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|plusToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UnaryMinusExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|minusToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|TildeExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|tildeToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|NotExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|expression
operator|->
name|notToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|BinaryExpression
modifier|*
name|expression
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|left
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|expression
operator|->
name|operatorToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"op"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|right
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ConditionalExpression
modifier|*
name|expression
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|questionToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|ok
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|colonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|ko
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|Expression
modifier|*
name|expression
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|left
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|commaToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|right
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|Block
modifier|*
name|block
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|block
operator|->
name|lbraceToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|endVisit
name|void
name|QmlMarkupVisitor
operator|::
name|endVisit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|Block
modifier|*
name|block
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|block
operator|->
name|rbraceToken
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|VariableStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|statement
operator|->
name|declarationKindToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|declarations
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|VariableDeclarationList
modifier|*
name|list
parameter_list|)
block|{
for|for
control|(
name|QQmlJS
operator|::
name|AST
operator|::
name|VariableDeclarationList
modifier|*
name|it
init|=
name|list
init|;
name|it
condition|;
name|it
operator|=
name|it
operator|->
name|next
control|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|it
operator|->
name|declaration
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|it
operator|->
name|commaToken
argument_list|)
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|VariableDeclaration
modifier|*
name|declaration
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|declaration
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|declaration
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|EmptyStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ExpressionStatement
modifier|*
name|statement
parameter_list|)
block|{
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|IfStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|ifToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|ok
argument_list|,
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|statement
operator|->
name|ko
condition|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|elseToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|ko
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|DoWhileStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|doToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|whileToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|WhileStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|whileToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ForStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|forToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|initialiser
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|firstSemicolonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|condition
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|secondSemicolonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|LocalForStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|forToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|varToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|declarations
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|firstSemicolonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|condition
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|secondSemicolonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ForEachStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|forToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|initialiser
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|inToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|LocalForEachStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|forToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|varToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|declaration
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|inToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ContinueStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|continueToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|BreakStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|breakToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ReturnStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|returnToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|WithStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|withToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|CaseBlock
modifier|*
name|block
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|block
operator|->
name|lbraceToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|endVisit
name|void
name|QmlMarkupVisitor
operator|::
name|endVisit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|CaseBlock
modifier|*
name|block
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|block
operator|->
name|rbraceToken
argument_list|,
name|block
operator|->
name|rbraceToken
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|SwitchStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|switchToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|block
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|CaseClause
modifier|*
name|clause
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|clause
operator|->
name|caseToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|clause
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|clause
operator|->
name|colonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|clause
operator|->
name|statements
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|DefaultClause
modifier|*
name|clause
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|clause
operator|->
name|defaultToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|clause
operator|->
name|colonToken
argument_list|,
name|clause
operator|->
name|colonToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|LabelledStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|colonToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|ThrowStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|throwToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|expression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|Catch
modifier|*
name|c
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|c
operator|->
name|catchToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|c
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|c
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|c
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|Finally
modifier|*
name|f
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|f
operator|->
name|finallyToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|f
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|TryStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|statement
operator|->
name|tryToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|statement
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|catchExpression
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|statement
operator|->
name|finallyExpression
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|FunctionExpression
modifier|*
name|expression
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|expression
operator|->
name|functionToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|expression
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|formals
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|lbraceToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|expression
operator|->
name|body
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|expression
operator|->
name|rbraceToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|FunctionDeclaration
modifier|*
name|declaration
parameter_list|)
block|{
name|addMarkedUpToken
argument_list|(
name|declaration
operator|->
name|functionToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"keyword"
argument_list|)
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|declaration
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|declaration
operator|->
name|lparenToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|declaration
operator|->
name|formals
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|declaration
operator|->
name|rparenToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|declaration
operator|->
name|lbraceToken
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|declaration
operator|->
name|body
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|declaration
operator|->
name|rbraceToken
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|FormalParameterList
modifier|*
name|list
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|list
operator|->
name|commaToken
argument_list|)
expr_stmt|;
name|addMarkedUpToken
argument_list|(
name|list
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|DebuggerStatement
modifier|*
name|statement
parameter_list|)
block|{
name|addVerbatim
argument_list|(
name|statement
operator|->
name|debuggerToken
argument_list|)
expr_stmt|;
name|addVerbatim
argument_list|(
name|statement
operator|->
name|semicolonToken
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_comment
comment|// Elements and items are represented by UiObjectDefinition nodes.
end_comment
begin_function
DECL|function|visit
name|bool
name|QmlMarkupVisitor
operator|::
name|visit
parameter_list|(
name|QQmlJS
operator|::
name|AST
operator|::
name|UiObjectDefinition
modifier|*
name|definition
parameter_list|)
block|{
name|QHash
argument_list|<
name|QString
argument_list|,
name|QString
argument_list|>
name|attributes
decl_stmt|;
name|addMarkedUpToken
argument_list|(
name|definition
operator|->
name|qualifiedTypeNameId
operator|->
name|identifierToken
argument_list|,
name|QLatin1String
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|QQmlJS
operator|::
name|AST
operator|::
name|Node
operator|::
name|accept
argument_list|(
name|definition
operator|->
name|initializer
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
