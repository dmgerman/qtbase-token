begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd nor the names of its **     contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ** ** This file was generated by glgen version 0.1 ** Command line was: glgen ** ** glgen is Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** ** This is an auto-generated file. ** Do not edit! All changes made to it will be lost. ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGLEXTENSIONS_H
end_ifndef
begin_define
DECL|macro|QOPENGLEXTENSIONS_H
define|#
directive|define
name|QOPENGLEXTENSIONS_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_OPENGL
end_ifndef
begin_include
include|#
directive|include
file|<QtGui/qopengl.h>
end_include
begin_decl_stmt
DECL|variable|QOpenGLContext
name|class
name|QOpenGLContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
if|#
directive|if
literal|0
comment|// silence syncqt warnings
pragma|#
directive|pragma
name|qt_class
name|(
name|QOpenGLExtensions
name|)
pragma|#
directive|pragma
name|qt_sync_stop_processing
endif|#
directive|endif
name|class
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
label|:
name|QAbstractOpenGLExtensionPrivate
argument_list|()
operator|:
name|initialized
argument_list|(
argument|false
argument_list|)
block|{}
name|bool
name|initialized
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|class
name|QAbstractOpenGLExtension
block|{
name|public
label|:
name|virtual
operator|~
name|QAbstractOpenGLExtension
argument_list|()
expr_stmt|;
name|virtual
name|bool
name|initializeOpenGLFunctions
parameter_list|()
function_decl|;
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QAbstractOpenGLExtension
argument_list|)
name|protected
label|:
name|bool
name|isInitialized
parameter_list|()
function|const;
name|QAbstractOpenGLExtension
argument_list|()
block|{}
name|QAbstractOpenGLExtension
argument_list|(
name|QAbstractOpenGLExtensionPrivate
operator|&
name|dd
argument_list|)
operator|:
name|d_ptr
argument_list|(
argument|&dd
argument_list|)
block|{}
name|QAbstractOpenGLExtensionPrivate
operator|*
name|d_ptr
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_decl_stmt
name|class
name|QOpenGLExtension_3DFX_tbufferPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TbufferMask3DFX
argument_list|)
operator|(
name|GLuint
name|mask
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_3DFX_tbuffer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_3DFX_tbuffer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTbufferMask3DFX
argument_list|(
argument|GLuint mask
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_3DFX_tbuffer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTbufferMask3DFX
specifier|inline
name|void
name|QOpenGLExtension_3DFX_tbuffer
operator|::
name|glTbufferMask3DFX
argument_list|(
argument|GLuint mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_3DFX_tbuffer
argument_list|)
block|;
name|d
operator|->
name|TbufferMask3DFX
argument_list|(
name|mask
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_debug_outputPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GetDebugMessageLogAMD
argument_list|)
operator|(
name|GLuint
name|count
operator|,
name|GLsizei
name|bufsize
operator|,
name|GLenum
operator|*
name|categories
operator|,
name|GLuint
operator|*
name|severities
operator|,
name|GLuint
operator|*
name|ids
operator|,
name|GLsizei
operator|*
name|lengths
operator|,
name|GLchar
operator|*
name|message
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageCallbackAMD
argument_list|)
operator|(
name|GLDEBUGPROCAMD
name|callback
operator|,
name|GLvoid
operator|*
name|userParam
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageInsertAMD
argument_list|)
operator|(
name|GLenum
name|category
operator|,
name|GLenum
name|severity
operator|,
name|GLuint
name|id
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|buf
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageEnableAMD
argument_list|)
operator|(
name|GLenum
name|category
operator|,
name|GLenum
name|severity
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|,
name|GLboolean
name|enabled
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_debug_output
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_debug_output
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLuint
name|glGetDebugMessageLogAMD
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLenum *categories
argument_list|,
argument|GLuint *severities
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *message
argument_list|)
block|;
name|void
name|glDebugMessageCallbackAMD
argument_list|(
argument|GLDEBUGPROCAMD callback
argument_list|,
argument|GLvoid *userParam
argument_list|)
block|;
name|void
name|glDebugMessageInsertAMD
argument_list|(
argument|GLenum category
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|;
name|void
name|glDebugMessageEnableAMD
argument_list|(
argument|GLenum category
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_debug_output
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetDebugMessageLogAMD
specifier|inline
name|GLuint
name|QOpenGLExtension_AMD_debug_output
operator|::
name|glGetDebugMessageLogAMD
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLenum *categories
argument_list|,
argument|GLuint *severities
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *message
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_debug_output
argument_list|)
block|;
return|return
name|d
operator|->
name|GetDebugMessageLogAMD
argument_list|(
name|count
argument_list|,
name|bufsize
argument_list|,
name|categories
argument_list|,
name|severities
argument_list|,
name|ids
argument_list|,
name|lengths
argument_list|,
name|message
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDebugMessageCallbackAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_debug_output
operator|::
name|glDebugMessageCallbackAMD
argument_list|(
argument|GLDEBUGPROCAMD callback
argument_list|,
argument|GLvoid *userParam
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_debug_output
argument_list|)
block|;
name|d
operator|->
name|DebugMessageCallbackAMD
argument_list|(
name|callback
argument_list|,
name|userParam
argument_list|)
block|; }
DECL|function|glDebugMessageInsertAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_debug_output
operator|::
name|glDebugMessageInsertAMD
argument_list|(
argument|GLenum category
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_debug_output
argument_list|)
block|;
name|d
operator|->
name|DebugMessageInsertAMD
argument_list|(
name|category
argument_list|,
name|severity
argument_list|,
name|id
argument_list|,
name|length
argument_list|,
name|buf
argument_list|)
block|; }
DECL|function|glDebugMessageEnableAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_debug_output
operator|::
name|glDebugMessageEnableAMD
argument_list|(
argument|GLenum category
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_debug_output
argument_list|)
block|;
name|d
operator|->
name|DebugMessageEnableAMD
argument_list|(
name|category
argument_list|,
name|severity
argument_list|,
name|count
argument_list|,
name|ids
argument_list|,
name|enabled
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_draw_buffers_blendPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendEquationSeparateIndexedAMD
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|modeRGB
operator|,
name|GLenum
name|modeAlpha
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendEquationIndexedAMD
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendFuncSeparateIndexedAMD
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|srcRGB
operator|,
name|GLenum
name|dstRGB
operator|,
name|GLenum
name|srcAlpha
operator|,
name|GLenum
name|dstAlpha
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendFuncIndexedAMD
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|src
operator|,
name|GLenum
name|dst
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_draw_buffers_blend
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_draw_buffers_blend
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlendEquationSeparateIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|;
name|void
name|glBlendEquationIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glBlendFuncSeparateIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum srcRGB
argument_list|,
argument|GLenum dstRGB
argument_list|,
argument|GLenum srcAlpha
argument_list|,
argument|GLenum dstAlpha
argument_list|)
block|;
name|void
name|glBlendFuncIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum src
argument_list|,
argument|GLenum dst
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_draw_buffers_blend
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlendEquationSeparateIndexedAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_draw_buffers_blend
operator|::
name|glBlendEquationSeparateIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendEquationSeparateIndexedAMD
argument_list|(
name|buf
argument_list|,
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|; }
DECL|function|glBlendEquationIndexedAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_draw_buffers_blend
operator|::
name|glBlendEquationIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendEquationIndexedAMD
argument_list|(
name|buf
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glBlendFuncSeparateIndexedAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_draw_buffers_blend
operator|::
name|glBlendFuncSeparateIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum srcRGB
argument_list|,
argument|GLenum dstRGB
argument_list|,
argument|GLenum srcAlpha
argument_list|,
argument|GLenum dstAlpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendFuncSeparateIndexedAMD
argument_list|(
name|buf
argument_list|,
name|srcRGB
argument_list|,
name|dstRGB
argument_list|,
name|srcAlpha
argument_list|,
name|dstAlpha
argument_list|)
block|; }
DECL|function|glBlendFuncIndexedAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_draw_buffers_blend
operator|::
name|glBlendFuncIndexedAMD
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum src
argument_list|,
argument|GLenum dst
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendFuncIndexedAMD
argument_list|(
name|buf
argument_list|,
name|src
argument_list|,
name|dst
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_multi_draw_indirectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawElementsIndirectAMD
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indirect
operator|,
name|GLsizei
name|primcount
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawArraysIndirectAMD
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLvoid
operator|*
name|indirect
operator|,
name|GLsizei
name|primcount
operator|,
name|GLsizei
name|stride
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_multi_draw_indirect
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_multi_draw_indirect
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiDrawElementsIndirectAMD
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indirect
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glMultiDrawArraysIndirectAMD
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLvoid *indirect
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_multi_draw_indirect
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiDrawElementsIndirectAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_multi_draw_indirect
operator|::
name|glMultiDrawElementsIndirectAMD
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indirect
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_multi_draw_indirect
argument_list|)
block|;
name|d
operator|->
name|MultiDrawElementsIndirectAMD
argument_list|(
name|mode
argument_list|,
name|type
argument_list|,
name|indirect
argument_list|,
name|primcount
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glMultiDrawArraysIndirectAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_multi_draw_indirect
operator|::
name|glMultiDrawArraysIndirectAMD
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLvoid *indirect
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_multi_draw_indirect
argument_list|)
block|;
name|d
operator|->
name|MultiDrawArraysIndirectAMD
argument_list|(
name|mode
argument_list|,
name|indirect
argument_list|,
name|primcount
argument_list|,
name|stride
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_name_gen_deletePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsNameAMD
argument_list|)
operator|(
name|GLenum
name|identifier
operator|,
name|GLuint
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteNamesAMD
argument_list|)
operator|(
name|GLenum
name|identifier
operator|,
name|GLuint
name|num
operator|,
specifier|const
name|GLuint
operator|*
name|names
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenNamesAMD
argument_list|)
operator|(
name|GLenum
name|identifier
operator|,
name|GLuint
name|num
operator|,
name|GLuint
operator|*
name|names
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_name_gen_delete
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_name_gen_delete
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glIsNameAMD
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|)
block|;
name|void
name|glDeleteNamesAMD
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint num
argument_list|,
argument|const GLuint *names
argument_list|)
block|;
name|void
name|glGenNamesAMD
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint num
argument_list|,
argument|GLuint *names
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_name_gen_delete
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIsNameAMD
specifier|inline
name|GLboolean
name|QOpenGLExtension_AMD_name_gen_delete
operator|::
name|glIsNameAMD
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_name_gen_delete
argument_list|)
block|;
return|return
name|d
operator|->
name|IsNameAMD
argument_list|(
name|identifier
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteNamesAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_name_gen_delete
operator|::
name|glDeleteNamesAMD
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint num
argument_list|,
argument|const GLuint *names
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_name_gen_delete
argument_list|)
block|;
name|d
operator|->
name|DeleteNamesAMD
argument_list|(
name|identifier
argument_list|,
name|num
argument_list|,
name|names
argument_list|)
block|; }
DECL|function|glGenNamesAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_name_gen_delete
operator|::
name|glGenNamesAMD
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint num
argument_list|,
argument|GLuint *names
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_name_gen_delete
argument_list|)
block|;
name|d
operator|->
name|GenNamesAMD
argument_list|(
name|identifier
argument_list|,
name|num
argument_list|,
name|names
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_performance_monitorPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCounterDataAMD
argument_list|)
operator|(
name|GLuint
name|monitor
operator|,
name|GLenum
name|pname
operator|,
name|GLsizei
name|dataSize
operator|,
name|GLuint
operator|*
name|data
operator|,
name|GLint
operator|*
name|bytesWritten
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndPerfMonitorAMD
argument_list|)
operator|(
name|GLuint
name|monitor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginPerfMonitorAMD
argument_list|)
operator|(
name|GLuint
name|monitor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SelectPerfMonitorCountersAMD
argument_list|)
operator|(
name|GLuint
name|monitor
operator|,
name|GLboolean
name|enable
operator|,
name|GLuint
name|group
operator|,
name|GLint
name|numCounters
operator|,
name|GLuint
operator|*
name|counterList
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeletePerfMonitorsAMD
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|monitors
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenPerfMonitorsAMD
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|monitors
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCounterInfoAMD
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLuint
name|counter
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCounterStringAMD
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLuint
name|counter
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|counterString
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorGroupStringAMD
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|groupString
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCountersAMD
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLint
operator|*
name|numCounters
operator|,
name|GLint
operator|*
name|maxActiveCounters
operator|,
name|GLsizei
name|counterSize
operator|,
name|GLuint
operator|*
name|counters
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorGroupsAMD
argument_list|)
operator|(
name|GLint
operator|*
name|numGroups
operator|,
name|GLsizei
name|groupsSize
operator|,
name|GLuint
operator|*
name|groups
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_performance_monitor
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_performance_monitor
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetPerfMonitorCounterDataAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei dataSize
argument_list|,
argument|GLuint *data
argument_list|,
argument|GLint *bytesWritten
argument_list|)
block|;
name|void
name|glEndPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|;
name|void
name|glBeginPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|;
name|void
name|glSelectPerfMonitorCountersAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLboolean enable
argument_list|,
argument|GLuint group
argument_list|,
argument|GLint numCounters
argument_list|,
argument|GLuint *counterList
argument_list|)
block|;
name|void
name|glDeletePerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|;
name|void
name|glGenPerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|;
name|void
name|glGetPerfMonitorCounterInfoAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glGetPerfMonitorCounterStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *counterString
argument_list|)
block|;
name|void
name|glGetPerfMonitorGroupStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *groupString
argument_list|)
block|;
name|void
name|glGetPerfMonitorCountersAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLint *numCounters
argument_list|,
argument|GLint *maxActiveCounters
argument_list|,
argument|GLsizei counterSize
argument_list|,
argument|GLuint *counters
argument_list|)
block|;
name|void
name|glGetPerfMonitorGroupsAMD
argument_list|(
argument|GLint *numGroups
argument_list|,
argument|GLsizei groupsSize
argument_list|,
argument|GLuint *groups
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetPerfMonitorCounterDataAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCounterDataAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei dataSize
argument_list|,
argument|GLuint *data
argument_list|,
argument|GLint *bytesWritten
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCounterDataAMD
argument_list|(
name|monitor
argument_list|,
name|pname
argument_list|,
name|dataSize
argument_list|,
name|data
argument_list|,
name|bytesWritten
argument_list|)
block|; }
DECL|function|glEndPerfMonitorAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glEndPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|EndPerfMonitorAMD
argument_list|(
name|monitor
argument_list|)
block|; }
DECL|function|glBeginPerfMonitorAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glBeginPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|BeginPerfMonitorAMD
argument_list|(
name|monitor
argument_list|)
block|; }
DECL|function|glSelectPerfMonitorCountersAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glSelectPerfMonitorCountersAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLboolean enable
argument_list|,
argument|GLuint group
argument_list|,
argument|GLint numCounters
argument_list|,
argument|GLuint *counterList
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|SelectPerfMonitorCountersAMD
argument_list|(
name|monitor
argument_list|,
name|enable
argument_list|,
name|group
argument_list|,
name|numCounters
argument_list|,
name|counterList
argument_list|)
block|; }
DECL|function|glDeletePerfMonitorsAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glDeletePerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|DeletePerfMonitorsAMD
argument_list|(
name|n
argument_list|,
name|monitors
argument_list|)
block|; }
DECL|function|glGenPerfMonitorsAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGenPerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GenPerfMonitorsAMD
argument_list|(
name|n
argument_list|,
name|monitors
argument_list|)
block|; }
DECL|function|glGetPerfMonitorCounterInfoAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCounterInfoAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCounterInfoAMD
argument_list|(
name|group
argument_list|,
name|counter
argument_list|,
name|pname
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetPerfMonitorCounterStringAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCounterStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *counterString
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCounterStringAMD
argument_list|(
name|group
argument_list|,
name|counter
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|counterString
argument_list|)
block|; }
DECL|function|glGetPerfMonitorGroupStringAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorGroupStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *groupString
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorGroupStringAMD
argument_list|(
name|group
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|groupString
argument_list|)
block|; }
DECL|function|glGetPerfMonitorCountersAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCountersAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLint *numCounters
argument_list|,
argument|GLint *maxActiveCounters
argument_list|,
argument|GLsizei counterSize
argument_list|,
argument|GLuint *counters
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCountersAMD
argument_list|(
name|group
argument_list|,
name|numCounters
argument_list|,
name|maxActiveCounters
argument_list|,
name|counterSize
argument_list|,
name|counters
argument_list|)
block|; }
DECL|function|glGetPerfMonitorGroupsAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorGroupsAMD
argument_list|(
argument|GLint *numGroups
argument_list|,
argument|GLsizei groupsSize
argument_list|,
argument|GLuint *groups
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorGroupsAMD
argument_list|(
name|numGroups
argument_list|,
name|groupsSize
argument_list|,
name|groups
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_sample_positionsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SetMultisamplefvAMD
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|val
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_sample_positions
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_sample_positions
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSetMultisamplefvAMD
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *val
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_sample_positions
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSetMultisamplefvAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_sample_positions
operator|::
name|glSetMultisamplefvAMD
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *val
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_sample_positions
argument_list|)
block|;
name|d
operator|->
name|SetMultisamplefvAMD
argument_list|(
name|pname
argument_list|,
name|index
argument_list|,
name|val
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_sparse_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorageSparseAMD
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLsizei
name|layers
operator|,
name|GLbitfield
name|flags
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_sparse_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_sparse_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexStorageSparseAMD
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei layers
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_sparse_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexStorageSparseAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_sparse_texture
operator|::
name|glTexStorageSparseAMD
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei layers
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_sparse_texture
argument_list|)
block|;
name|d
operator|->
name|TexStorageSparseAMD
argument_list|(
name|target
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|layers
argument_list|,
name|flags
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_stencil_operation_extendedPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilOpValueAMD
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLuint
name|value
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_stencil_operation_extended
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_stencil_operation_extended
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glStencilOpValueAMD
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_stencil_operation_extended
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glStencilOpValueAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_stencil_operation_extended
operator|::
name|glStencilOpValueAMD
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_stencil_operation_extended
argument_list|)
block|;
name|d
operator|->
name|StencilOpValueAMD
argument_list|(
name|face
argument_list|,
name|value
argument_list|)
block|; }
name|class
name|QOpenGLExtension_AMD_vertex_shader_tesselatorPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TessellationModeAMD
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TessellationFactorAMD
argument_list|)
operator|(
name|GLfloat
name|factor
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_vertex_shader_tesselator
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_vertex_shader_tesselator
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTessellationModeAMD
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glTessellationFactorAMD
argument_list|(
argument|GLfloat factor
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_vertex_shader_tesselator
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTessellationModeAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_vertex_shader_tesselator
operator|::
name|glTessellationModeAMD
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_vertex_shader_tesselator
argument_list|)
block|;
name|d
operator|->
name|TessellationModeAMD
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glTessellationFactorAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_vertex_shader_tesselator
operator|::
name|glTessellationFactorAMD
argument_list|(
argument|GLfloat factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_vertex_shader_tesselator
argument_list|)
block|;
name|d
operator|->
name|TessellationFactorAMD
argument_list|(
name|factor
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_element_arrayPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawRangeElementArrayAPPLE
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|start
operator|,
name|GLuint
name|end
operator|,
specifier|const
name|GLint
operator|*
name|first
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawElementArrayAPPLE
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLint
operator|*
name|first
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawRangeElementArrayAPPLE
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|start
operator|,
name|GLuint
name|end
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementArrayAPPLE
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ElementPointerAPPLE
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_element_array
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_element_array
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiDrawRangeElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glMultiDrawElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glDrawRangeElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|;
name|void
name|glDrawElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|;
name|void
name|glElementPointerAPPLE
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_element_array
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiDrawRangeElementArrayAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_element_array
operator|::
name|glMultiDrawRangeElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_element_array
argument_list|)
block|;
name|d
operator|->
name|MultiDrawRangeElementArrayAPPLE
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glMultiDrawElementArrayAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_element_array
operator|::
name|glMultiDrawElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_element_array
argument_list|)
block|;
name|d
operator|->
name|MultiDrawElementArrayAPPLE
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glDrawRangeElementArrayAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_element_array
operator|::
name|glDrawRangeElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_element_array
argument_list|)
block|;
name|d
operator|->
name|DrawRangeElementArrayAPPLE
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|first
argument_list|,
name|count
argument_list|)
block|; }
DECL|function|glDrawElementArrayAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_element_array
operator|::
name|glDrawElementArrayAPPLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_element_array
argument_list|)
block|;
name|d
operator|->
name|DrawElementArrayAPPLE
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|)
block|; }
DECL|function|glElementPointerAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_element_array
operator|::
name|glElementPointerAPPLE
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_element_array
argument_list|)
block|;
name|d
operator|->
name|ElementPointerAPPLE
argument_list|(
name|type
argument_list|,
name|pointer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_fencePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FinishObjectAPPLE
argument_list|)
operator|(
name|GLenum
name|object
operator|,
name|GLint
name|name
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP TestObjectAPPLE
argument_list|)
operator|(
name|GLenum
name|object
operator|,
name|GLuint
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FinishFenceAPPLE
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP TestFenceAPPLE
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsFenceAPPLE
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SetFenceAPPLE
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteFencesAPPLE
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|fences
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenFencesAPPLE
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|fences
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_fence
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_fence
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFinishObjectAPPLE
argument_list|(
argument|GLenum object
argument_list|,
argument|GLint name
argument_list|)
block|;
name|GLboolean
name|glTestObjectAPPLE
argument_list|(
argument|GLenum object
argument_list|,
argument|GLuint name
argument_list|)
block|;
name|void
name|glFinishFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|GLboolean
name|glTestFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|GLboolean
name|glIsFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|void
name|glSetFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|void
name|glDeleteFencesAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *fences
argument_list|)
block|;
name|void
name|glGenFencesAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *fences
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_fence
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFinishObjectAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_fence
operator|::
name|glFinishObjectAPPLE
argument_list|(
argument|GLenum object
argument_list|,
argument|GLint name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
name|d
operator|->
name|FinishObjectAPPLE
argument_list|(
name|object
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glTestObjectAPPLE
specifier|inline
name|GLboolean
name|QOpenGLExtension_APPLE_fence
operator|::
name|glTestObjectAPPLE
argument_list|(
argument|GLenum object
argument_list|,
argument|GLuint name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
return|return
name|d
operator|->
name|TestObjectAPPLE
argument_list|(
name|object
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glFinishFenceAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_fence
operator|::
name|glFinishFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
name|d
operator|->
name|FinishFenceAPPLE
argument_list|(
name|fence
argument_list|)
block|; }
DECL|function|glTestFenceAPPLE
specifier|inline
name|GLboolean
name|QOpenGLExtension_APPLE_fence
operator|::
name|glTestFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
return|return
name|d
operator|->
name|TestFenceAPPLE
argument_list|(
name|fence
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsFenceAPPLE
specifier|inline
name|GLboolean
name|QOpenGLExtension_APPLE_fence
operator|::
name|glIsFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
return|return
name|d
operator|->
name|IsFenceAPPLE
argument_list|(
name|fence
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glSetFenceAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_fence
operator|::
name|glSetFenceAPPLE
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
name|d
operator|->
name|SetFenceAPPLE
argument_list|(
name|fence
argument_list|)
block|; }
DECL|function|glDeleteFencesAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_fence
operator|::
name|glDeleteFencesAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *fences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
name|d
operator|->
name|DeleteFencesAPPLE
argument_list|(
name|n
argument_list|,
name|fences
argument_list|)
block|; }
DECL|function|glGenFencesAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_fence
operator|::
name|glGenFencesAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *fences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
block|;
name|d
operator|->
name|GenFencesAPPLE
argument_list|(
name|n
argument_list|,
name|fences
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_flush_buffer_rangePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FlushMappedBufferRangeAPPLE
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BufferParameteriAPPLE
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_flush_buffer_range
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_flush_buffer_range
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFlushMappedBufferRangeAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glBufferParameteriAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_flush_buffer_range
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFlushMappedBufferRangeAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_flush_buffer_range
operator|::
name|glFlushMappedBufferRangeAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_flush_buffer_range
argument_list|)
block|;
name|d
operator|->
name|FlushMappedBufferRangeAPPLE
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glBufferParameteriAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_flush_buffer_range
operator|::
name|glBufferParameteriAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_flush_buffer_range
argument_list|)
block|;
name|d
operator|->
name|BufferParameteriAPPLE
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_object_purgeablePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectParameterivAPPLE
argument_list|)
operator|(
name|GLenum
name|objectType
operator|,
name|GLuint
name|name
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP ObjectUnpurgeableAPPLE
argument_list|)
operator|(
name|GLenum
name|objectType
operator|,
name|GLuint
name|name
operator|,
name|GLenum
name|option
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP ObjectPurgeableAPPLE
argument_list|)
operator|(
name|GLenum
name|objectType
operator|,
name|GLuint
name|name
operator|,
name|GLenum
name|option
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_object_purgeable
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_object_purgeable
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetObjectParameterivAPPLE
argument_list|(
argument|GLenum objectType
argument_list|,
argument|GLuint name
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLenum
name|glObjectUnpurgeableAPPLE
argument_list|(
argument|GLenum objectType
argument_list|,
argument|GLuint name
argument_list|,
argument|GLenum option
argument_list|)
block|;
name|GLenum
name|glObjectPurgeableAPPLE
argument_list|(
argument|GLenum objectType
argument_list|,
argument|GLuint name
argument_list|,
argument|GLenum option
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_object_purgeable
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetObjectParameterivAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_object_purgeable
operator|::
name|glGetObjectParameterivAPPLE
argument_list|(
argument|GLenum objectType
argument_list|,
argument|GLuint name
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_object_purgeable
argument_list|)
block|;
name|d
operator|->
name|GetObjectParameterivAPPLE
argument_list|(
name|objectType
argument_list|,
name|name
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glObjectUnpurgeableAPPLE
specifier|inline
name|GLenum
name|QOpenGLExtension_APPLE_object_purgeable
operator|::
name|glObjectUnpurgeableAPPLE
argument_list|(
argument|GLenum objectType
argument_list|,
argument|GLuint name
argument_list|,
argument|GLenum option
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_object_purgeable
argument_list|)
block|;
return|return
name|d
operator|->
name|ObjectUnpurgeableAPPLE
argument_list|(
name|objectType
argument_list|,
name|name
argument_list|,
name|option
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glObjectPurgeableAPPLE
specifier|inline
name|GLenum
name|QOpenGLExtension_APPLE_object_purgeable
operator|::
name|glObjectPurgeableAPPLE
argument_list|(
argument|GLenum objectType
argument_list|,
argument|GLuint name
argument_list|,
argument|GLenum option
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_object_purgeable
argument_list|)
block|;
return|return
name|d
operator|->
name|ObjectPurgeableAPPLE
argument_list|(
name|objectType
argument_list|,
name|name
argument_list|,
name|option
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_texture_rangePrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTexParameterPointervAPPLE
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLenum
name|pname
expr|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureRangeAPPLE
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLsizei
name|length
expr|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_texture_range
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_texture_range
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetTexParameterPointervAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glTextureRangeAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_texture_range
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetTexParameterPointervAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_texture_range
operator|::
name|glGetTexParameterPointervAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_texture_range
argument_list|)
block|;
name|d
operator|->
name|GetTexParameterPointervAPPLE
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTextureRangeAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_texture_range
operator|::
name|glTextureRangeAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_texture_range
argument_list|)
block|;
name|d
operator|->
name|TextureRangeAPPLE
argument_list|(
name|target
argument_list|,
name|length
argument_list|,
name|pointer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_vertex_array_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsVertexArrayAPPLE
argument_list|)
operator|(
name|GLuint
name|array
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenVertexArraysAPPLE
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|arrays
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteVertexArraysAPPLE
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|arrays
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindVertexArrayAPPLE
argument_list|)
operator|(
name|GLuint
name|array
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_vertex_array_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_vertex_array_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glIsVertexArrayAPPLE
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|void
name|glGenVertexArraysAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|;
name|void
name|glDeleteVertexArraysAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|;
name|void
name|glBindVertexArrayAPPLE
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_vertex_array_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIsVertexArrayAPPLE
specifier|inline
name|GLboolean
name|QOpenGLExtension_APPLE_vertex_array_object
operator|::
name|glIsVertexArrayAPPLE
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsVertexArrayAPPLE
argument_list|(
name|array
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenVertexArraysAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_array_object
operator|::
name|glGenVertexArraysAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GenVertexArraysAPPLE
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glDeleteVertexArraysAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_array_object
operator|::
name|glDeleteVertexArraysAPPLE
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|DeleteVertexArraysAPPLE
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glBindVertexArrayAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_array_object
operator|::
name|glBindVertexArrayAPPLE
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|BindVertexArrayAPPLE
argument_list|(
name|array
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_vertex_array_rangePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayParameteriAPPLE
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FlushVertexArrayRangeAPPLE
argument_list|)
operator|(
name|GLsizei
name|length
operator|,
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayRangeAPPLE
argument_list|)
operator|(
name|GLsizei
name|length
operator|,
name|GLvoid
operator|*
name|pointer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_vertex_array_range
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_vertex_array_range
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexArrayParameteriAPPLE
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glFlushVertexArrayRangeAPPLE
argument_list|(
argument|GLsizei length
argument_list|,
argument|GLvoid *pointer
argument_list|)
block|;
name|void
name|glVertexArrayRangeAPPLE
argument_list|(
argument|GLsizei length
argument_list|,
argument|GLvoid *pointer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_vertex_array_range
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexArrayParameteriAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_array_range
operator|::
name|glVertexArrayParameteriAPPLE
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_range
argument_list|)
block|;
name|d
operator|->
name|VertexArrayParameteriAPPLE
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFlushVertexArrayRangeAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_array_range
operator|::
name|glFlushVertexArrayRangeAPPLE
argument_list|(
argument|GLsizei length
argument_list|,
argument|GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_range
argument_list|)
block|;
name|d
operator|->
name|FlushVertexArrayRangeAPPLE
argument_list|(
name|length
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexArrayRangeAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_array_range
operator|::
name|glVertexArrayRangeAPPLE
argument_list|(
argument|GLsizei length
argument_list|,
argument|GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_range
argument_list|)
block|;
name|d
operator|->
name|VertexArrayRangeAPPLE
argument_list|(
name|length
argument_list|,
name|pointer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_vertex_program_evaluatorsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MapVertexAttrib2fAPPLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|size
operator|,
name|GLfloat
name|u1
operator|,
name|GLfloat
name|u2
operator|,
name|GLint
name|ustride
operator|,
name|GLint
name|uorder
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|,
name|GLint
name|vstride
operator|,
name|GLint
name|vorder
operator|,
specifier|const
name|GLfloat
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MapVertexAttrib2dAPPLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|size
operator|,
name|GLdouble
name|u1
operator|,
name|GLdouble
name|u2
operator|,
name|GLint
name|ustride
operator|,
name|GLint
name|uorder
operator|,
name|GLdouble
name|v1
operator|,
name|GLdouble
name|v2
operator|,
name|GLint
name|vstride
operator|,
name|GLint
name|vorder
operator|,
specifier|const
name|GLdouble
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MapVertexAttrib1fAPPLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|size
operator|,
name|GLfloat
name|u1
operator|,
name|GLfloat
name|u2
operator|,
name|GLint
name|stride
operator|,
name|GLint
name|order
operator|,
specifier|const
name|GLfloat
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MapVertexAttrib1dAPPLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|size
operator|,
name|GLdouble
name|u1
operator|,
name|GLdouble
name|u2
operator|,
name|GLint
name|stride
operator|,
name|GLint
name|order
operator|,
specifier|const
name|GLdouble
operator|*
name|points
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsVertexAttribEnabledAPPLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DisableVertexAttribAPPLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EnableVertexAttribAPPLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_vertex_program_evaluators
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMapVertexAttrib2fAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|void
name|glMapVertexAttrib2dAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|;
name|void
name|glMapVertexAttrib1fAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|void
name|glMapVertexAttrib1dAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLdouble *points
argument_list|)
block|;
name|GLboolean
name|glIsVertexAttribEnabledAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|)
block|;
name|void
name|glDisableVertexAttribAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|)
block|;
name|void
name|glEnableVertexAttribAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMapVertexAttrib2fAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|glMapVertexAttrib2fAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|;
name|d
operator|->
name|MapVertexAttrib2fAPPLE
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMapVertexAttrib2dAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|glMapVertexAttrib2dAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|;
name|d
operator|->
name|MapVertexAttrib2dAPPLE
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMapVertexAttrib1fAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|glMapVertexAttrib1fAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|;
name|d
operator|->
name|MapVertexAttrib1fAPPLE
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMapVertexAttrib1dAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|glMapVertexAttrib1dAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint size
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLdouble *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|;
name|d
operator|->
name|MapVertexAttrib1dAPPLE
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glIsVertexAttribEnabledAPPLE
specifier|inline
name|GLboolean
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|glIsVertexAttribEnabledAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|;
return|return
name|d
operator|->
name|IsVertexAttribEnabledAPPLE
argument_list|(
name|index
argument_list|,
name|pname
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDisableVertexAttribAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|glDisableVertexAttribAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|;
name|d
operator|->
name|DisableVertexAttribAPPLE
argument_list|(
name|index
argument_list|,
name|pname
argument_list|)
block|; }
DECL|function|glEnableVertexAttribAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|glEnableVertexAttribAPPLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
block|;
name|d
operator|->
name|EnableVertexAttribAPPLE
argument_list|(
name|index
argument_list|,
name|pname
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_ES2_compatibilityPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearDepthf
argument_list|)
operator|(
name|GLfloat
name|dd
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DepthRangef
argument_list|)
operator|(
name|GLfloat
name|n
operator|,
name|GLfloat
name|f
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetShaderPrecisionFormat
argument_list|)
operator|(
name|GLenum
name|shadertype
operator|,
name|GLenum
name|precisiontype
operator|,
name|GLint
operator|*
name|range
operator|,
name|GLint
operator|*
name|precision
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ShaderBinary
argument_list|)
operator|(
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|shaders
operator|,
name|GLenum
name|binaryformat
operator|,
specifier|const
name|GLvoid
operator|*
name|binary
operator|,
name|GLsizei
name|length
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReleaseShaderCompiler
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_ES2_compatibility
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_ES2_compatibility
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glClearDepthf
argument_list|(
argument|GLfloat dd
argument_list|)
block|;
name|void
name|glDepthRangef
argument_list|(
argument|GLfloat n
argument_list|,
argument|GLfloat f
argument_list|)
block|;
name|void
name|glGetShaderPrecisionFormat
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLenum precisiontype
argument_list|,
argument|GLint *range
argument_list|,
argument|GLint *precision
argument_list|)
block|;
name|void
name|glShaderBinary
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *shaders
argument_list|,
argument|GLenum binaryformat
argument_list|,
argument|const GLvoid *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|;
name|void
name|glReleaseShaderCompiler
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_ES2_compatibility
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glClearDepthf
specifier|inline
name|void
name|QOpenGLExtension_ARB_ES2_compatibility
operator|::
name|glClearDepthf
argument_list|(
argument|GLfloat dd
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_ES2_compatibility
argument_list|)
block|;
name|d
operator|->
name|ClearDepthf
argument_list|(
name|dd
argument_list|)
block|; }
DECL|function|glDepthRangef
specifier|inline
name|void
name|QOpenGLExtension_ARB_ES2_compatibility
operator|::
name|glDepthRangef
argument_list|(
argument|GLfloat n
argument_list|,
argument|GLfloat f
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_ES2_compatibility
argument_list|)
block|;
name|d
operator|->
name|DepthRangef
argument_list|(
name|n
argument_list|,
name|f
argument_list|)
block|; }
DECL|function|glGetShaderPrecisionFormat
specifier|inline
name|void
name|QOpenGLExtension_ARB_ES2_compatibility
operator|::
name|glGetShaderPrecisionFormat
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLenum precisiontype
argument_list|,
argument|GLint *range
argument_list|,
argument|GLint *precision
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_ES2_compatibility
argument_list|)
block|;
name|d
operator|->
name|GetShaderPrecisionFormat
argument_list|(
name|shadertype
argument_list|,
name|precisiontype
argument_list|,
name|range
argument_list|,
name|precision
argument_list|)
block|; }
DECL|function|glShaderBinary
specifier|inline
name|void
name|QOpenGLExtension_ARB_ES2_compatibility
operator|::
name|glShaderBinary
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *shaders
argument_list|,
argument|GLenum binaryformat
argument_list|,
argument|const GLvoid *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_ES2_compatibility
argument_list|)
block|;
name|d
operator|->
name|ShaderBinary
argument_list|(
name|count
argument_list|,
name|shaders
argument_list|,
name|binaryformat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glReleaseShaderCompiler
specifier|inline
name|void
name|QOpenGLExtension_ARB_ES2_compatibility
operator|::
name|glReleaseShaderCompiler
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_ES2_compatibility
argument_list|)
block|;
name|d
operator|->
name|ReleaseShaderCompiler
argument_list|()
block|; }
name|class
name|QOpenGLExtension_ARB_base_instancePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsInstancedBaseVertexBaseInstance
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|void
operator|*
name|indices
operator|,
name|GLsizei
name|instancecount
operator|,
name|GLint
name|basevertex
operator|,
name|GLuint
name|baseinstance
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsInstancedBaseInstance
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|void
operator|*
name|indices
operator|,
name|GLsizei
name|instancecount
operator|,
name|GLuint
name|baseinstance
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawArraysInstancedBaseInstance
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|,
name|GLsizei
name|instancecount
operator|,
name|GLuint
name|baseinstance
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_base_instance
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_base_instance
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawElementsInstancedBaseVertexBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|;
name|void
name|glDrawElementsInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|;
name|void
name|glDrawArraysInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_base_instance
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawElementsInstancedBaseVertexBaseInstance
specifier|inline
name|void
name|QOpenGLExtension_ARB_base_instance
operator|::
name|glDrawElementsInstancedBaseVertexBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_base_instance
argument_list|)
block|;
name|d
operator|->
name|DrawElementsInstancedBaseVertexBaseInstance
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|,
name|basevertex
argument_list|,
name|baseinstance
argument_list|)
block|; }
DECL|function|glDrawElementsInstancedBaseInstance
specifier|inline
name|void
name|QOpenGLExtension_ARB_base_instance
operator|::
name|glDrawElementsInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_base_instance
argument_list|)
block|;
name|d
operator|->
name|DrawElementsInstancedBaseInstance
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|,
name|baseinstance
argument_list|)
block|; }
DECL|function|glDrawArraysInstancedBaseInstance
specifier|inline
name|void
name|QOpenGLExtension_ARB_base_instance
operator|::
name|glDrawArraysInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_base_instance
argument_list|)
block|;
name|d
operator|->
name|DrawArraysInstancedBaseInstance
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|instancecount
argument_list|,
name|baseinstance
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_blend_func_extendedPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetFragDataIndex
argument_list|)
operator|(
name|GLuint
name|program
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindFragDataLocationIndexed
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|colorNumber
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_blend_func_extended
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_blend_func_extended
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLint
name|glGetFragDataIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glBindFragDataLocationIndexed
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint colorNumber
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_blend_func_extended
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetFragDataIndex
specifier|inline
name|GLint
name|QOpenGLExtension_ARB_blend_func_extended
operator|::
name|glGetFragDataIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_blend_func_extended
argument_list|)
block|;
return|return
name|d
operator|->
name|GetFragDataIndex
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindFragDataLocationIndexed
specifier|inline
name|void
name|QOpenGLExtension_ARB_blend_func_extended
operator|::
name|glBindFragDataLocationIndexed
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint colorNumber
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_blend_func_extended
argument_list|)
block|;
name|d
operator|->
name|BindFragDataLocationIndexed
argument_list|(
name|program
argument_list|,
name|colorNumber
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_cl_eventPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLsync
argument_list|(
argument|QOPENGLF_APIENTRYP CreateSyncFromCLeventARB
argument_list|)
operator|(
expr|struct
name|_cl_context
operator|*
name|context
operator|,
expr|struct
name|_cl_event
operator|*
name|event
operator|,
name|GLbitfield
name|flags
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_cl_event
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_cl_event
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLsync
name|glCreateSyncFromCLeventARB
argument_list|(
argument|struct _cl_context * context
argument_list|,
argument|struct _cl_event * event
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_cl_event
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCreateSyncFromCLeventARB
specifier|inline
name|GLsync
name|QOpenGLExtension_ARB_cl_event
operator|::
name|glCreateSyncFromCLeventARB
argument_list|(
argument|struct _cl_context * context
argument_list|,
argument|struct _cl_event * event
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_cl_event
argument_list|)
block|;
return|return
name|d
operator|->
name|CreateSyncFromCLeventARB
argument_list|(
name|context
argument_list|,
name|event
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_clear_buffer_objectPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearBufferSubData
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLenum
name|internalformat
expr|,
name|GLintptr
name|offset
expr|,
name|GLsizeiptr
name|size
expr|,
name|GLenum
name|format
expr|,
name|GLenum
name|type
expr|,
specifier|const
name|void
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearBufferData
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLenum
name|internalformat
expr|,
name|GLenum
name|format
expr|,
name|GLenum
name|type
expr|,
specifier|const
name|void
operator|*
name|data
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_clear_buffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_clear_buffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glClearBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glClearBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_clear_buffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glClearBufferSubData
specifier|inline
name|void
name|QOpenGLExtension_ARB_clear_buffer_object
operator|::
name|glClearBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_clear_buffer_object
argument_list|)
block|;
name|d
operator|->
name|ClearBufferSubData
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glClearBufferData
specifier|inline
name|void
name|QOpenGLExtension_ARB_clear_buffer_object
operator|::
name|glClearBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_clear_buffer_object
argument_list|)
block|;
name|d
operator|->
name|ClearBufferData
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_color_buffer_floatPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClampColorARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|clamp
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_color_buffer_float
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_color_buffer_float
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glClampColorARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum clamp
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_color_buffer_float
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glClampColorARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_color_buffer_float
operator|::
name|glClampColorARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum clamp
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_color_buffer_float
argument_list|)
block|;
name|d
operator|->
name|ClampColorARB
argument_list|(
name|target
argument_list|,
name|clamp
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_compute_shaderPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DispatchComputeIndirect
argument_list|)
operator|(
name|GLintptr
name|indirect
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DispatchCompute
argument_list|)
operator|(
name|GLuint
name|num_groups_x
operator|,
name|GLuint
name|num_groups_y
operator|,
name|GLuint
name|num_groups_z
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_compute_shader
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_compute_shader
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDispatchComputeIndirect
argument_list|(
argument|GLintptr indirect
argument_list|)
block|;
name|void
name|glDispatchCompute
argument_list|(
argument|GLuint num_groups_x
argument_list|,
argument|GLuint num_groups_y
argument_list|,
argument|GLuint num_groups_z
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_compute_shader
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDispatchComputeIndirect
specifier|inline
name|void
name|QOpenGLExtension_ARB_compute_shader
operator|::
name|glDispatchComputeIndirect
argument_list|(
argument|GLintptr indirect
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_compute_shader
argument_list|)
block|;
name|d
operator|->
name|DispatchComputeIndirect
argument_list|(
name|indirect
argument_list|)
block|; }
DECL|function|glDispatchCompute
specifier|inline
name|void
name|QOpenGLExtension_ARB_compute_shader
operator|::
name|glDispatchCompute
argument_list|(
argument|GLuint num_groups_x
argument_list|,
argument|GLuint num_groups_y
argument_list|,
argument|GLuint num_groups_z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_compute_shader
argument_list|)
block|;
name|d
operator|->
name|DispatchCompute
argument_list|(
name|num_groups_x
argument_list|,
name|num_groups_y
argument_list|,
name|num_groups_z
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_copy_bufferPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyBufferSubData
argument_list|)
operator|(
name|GLenum
name|readTarget
operator|,
name|GLenum
name|writeTarget
operator|,
name|GLintptr
name|readOffset
operator|,
name|GLintptr
name|writeOffset
operator|,
name|GLsizeiptr
name|size
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_copy_buffer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_copy_buffer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glCopyBufferSubData
argument_list|(
argument|GLenum readTarget
argument_list|,
argument|GLenum writeTarget
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_copy_buffer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCopyBufferSubData
specifier|inline
name|void
name|QOpenGLExtension_ARB_copy_buffer
operator|::
name|glCopyBufferSubData
argument_list|(
argument|GLenum readTarget
argument_list|,
argument|GLenum writeTarget
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_copy_buffer
argument_list|)
block|;
name|d
operator|->
name|CopyBufferSubData
argument_list|(
name|readTarget
argument_list|,
name|writeTarget
argument_list|,
name|readOffset
argument_list|,
name|writeOffset
argument_list|,
name|size
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_copy_imagePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyImageSubData
argument_list|)
operator|(
name|GLuint
name|srcName
operator|,
name|GLenum
name|srcTarget
operator|,
name|GLint
name|srcLevel
operator|,
name|GLint
name|srcX
operator|,
name|GLint
name|srcY
operator|,
name|GLint
name|srcZ
operator|,
name|GLuint
name|dstName
operator|,
name|GLenum
name|dstTarget
operator|,
name|GLint
name|dstLevel
operator|,
name|GLint
name|dstX
operator|,
name|GLint
name|dstY
operator|,
name|GLint
name|dstZ
operator|,
name|GLsizei
name|srcWidth
operator|,
name|GLsizei
name|srcHeight
operator|,
name|GLsizei
name|srcDepth
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_copy_image
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_copy_image
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glCopyImageSubData
argument_list|(
argument|GLuint srcName
argument_list|,
argument|GLenum srcTarget
argument_list|,
argument|GLint srcLevel
argument_list|,
argument|GLint srcX
argument_list|,
argument|GLint srcY
argument_list|,
argument|GLint srcZ
argument_list|,
argument|GLuint dstName
argument_list|,
argument|GLenum dstTarget
argument_list|,
argument|GLint dstLevel
argument_list|,
argument|GLint dstX
argument_list|,
argument|GLint dstY
argument_list|,
argument|GLint dstZ
argument_list|,
argument|GLsizei srcWidth
argument_list|,
argument|GLsizei srcHeight
argument_list|,
argument|GLsizei srcDepth
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_copy_image
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCopyImageSubData
specifier|inline
name|void
name|QOpenGLExtension_ARB_copy_image
operator|::
name|glCopyImageSubData
argument_list|(
argument|GLuint srcName
argument_list|,
argument|GLenum srcTarget
argument_list|,
argument|GLint srcLevel
argument_list|,
argument|GLint srcX
argument_list|,
argument|GLint srcY
argument_list|,
argument|GLint srcZ
argument_list|,
argument|GLuint dstName
argument_list|,
argument|GLenum dstTarget
argument_list|,
argument|GLint dstLevel
argument_list|,
argument|GLint dstX
argument_list|,
argument|GLint dstY
argument_list|,
argument|GLint dstZ
argument_list|,
argument|GLsizei srcWidth
argument_list|,
argument|GLsizei srcHeight
argument_list|,
argument|GLsizei srcDepth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_copy_image
argument_list|)
block|;
name|d
operator|->
name|CopyImageSubData
argument_list|(
name|srcName
argument_list|,
name|srcTarget
argument_list|,
name|srcLevel
argument_list|,
name|srcX
argument_list|,
name|srcY
argument_list|,
name|srcZ
argument_list|,
name|dstName
argument_list|,
name|dstTarget
argument_list|,
name|dstLevel
argument_list|,
name|dstX
argument_list|,
name|dstY
argument_list|,
name|dstZ
argument_list|,
name|srcWidth
argument_list|,
name|srcHeight
argument_list|,
name|srcDepth
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_debug_outputPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GetDebugMessageLogARB
argument_list|)
operator|(
name|GLuint
name|count
operator|,
name|GLsizei
name|bufsize
operator|,
name|GLenum
operator|*
name|sources
operator|,
name|GLenum
operator|*
name|types
operator|,
name|GLuint
operator|*
name|ids
operator|,
name|GLenum
operator|*
name|severities
operator|,
name|GLsizei
operator|*
name|lengths
operator|,
name|GLchar
operator|*
name|messageLog
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageCallbackARB
argument_list|)
operator|(
name|GLDEBUGPROCARB
name|callback
operator|,
specifier|const
name|GLvoid
operator|*
name|userParam
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageInsertARB
argument_list|)
operator|(
name|GLenum
name|source
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|id
operator|,
name|GLenum
name|severity
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|buf
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageControlARB
argument_list|)
operator|(
name|GLenum
name|source
operator|,
name|GLenum
name|type
operator|,
name|GLenum
name|severity
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|,
name|GLboolean
name|enabled
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_debug_output
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_debug_output
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLuint
name|glGetDebugMessageLogARB
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLenum *sources
argument_list|,
argument|GLenum *types
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLenum *severities
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *messageLog
argument_list|)
block|;
name|void
name|glDebugMessageCallbackARB
argument_list|(
argument|GLDEBUGPROCARB callback
argument_list|,
argument|const GLvoid *userParam
argument_list|)
block|;
name|void
name|glDebugMessageInsertARB
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint id
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|;
name|void
name|glDebugMessageControlARB
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_debug_output
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetDebugMessageLogARB
specifier|inline
name|GLuint
name|QOpenGLExtension_ARB_debug_output
operator|::
name|glGetDebugMessageLogARB
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLenum *sources
argument_list|,
argument|GLenum *types
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLenum *severities
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *messageLog
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_debug_output
argument_list|)
block|;
return|return
name|d
operator|->
name|GetDebugMessageLogARB
argument_list|(
name|count
argument_list|,
name|bufsize
argument_list|,
name|sources
argument_list|,
name|types
argument_list|,
name|ids
argument_list|,
name|severities
argument_list|,
name|lengths
argument_list|,
name|messageLog
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDebugMessageCallbackARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_debug_output
operator|::
name|glDebugMessageCallbackARB
argument_list|(
argument|GLDEBUGPROCARB callback
argument_list|,
argument|const GLvoid *userParam
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_debug_output
argument_list|)
block|;
name|d
operator|->
name|DebugMessageCallbackARB
argument_list|(
name|callback
argument_list|,
name|userParam
argument_list|)
block|; }
DECL|function|glDebugMessageInsertARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_debug_output
operator|::
name|glDebugMessageInsertARB
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint id
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_debug_output
argument_list|)
block|;
name|d
operator|->
name|DebugMessageInsertARB
argument_list|(
name|source
argument_list|,
name|type
argument_list|,
name|id
argument_list|,
name|severity
argument_list|,
name|length
argument_list|,
name|buf
argument_list|)
block|; }
DECL|function|glDebugMessageControlARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_debug_output
operator|::
name|glDebugMessageControlARB
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_debug_output
argument_list|)
block|;
name|d
operator|->
name|DebugMessageControlARB
argument_list|(
name|source
argument_list|,
name|type
argument_list|,
name|severity
argument_list|,
name|count
argument_list|,
name|ids
argument_list|,
name|enabled
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_draw_buffersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawBuffersARB
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLenum
operator|*
name|bufs
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_draw_buffers
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_draw_buffers
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawBuffersARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_draw_buffers
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawBuffersARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_buffers
operator|::
name|glDrawBuffersARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_buffers
argument_list|)
block|;
name|d
operator|->
name|DrawBuffersARB
argument_list|(
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_draw_buffers_blendPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendFuncSeparateiARB
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|srcRGB
operator|,
name|GLenum
name|dstRGB
operator|,
name|GLenum
name|srcAlpha
operator|,
name|GLenum
name|dstAlpha
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendFunciARB
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|src
operator|,
name|GLenum
name|dst
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendEquationSeparateiARB
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|modeRGB
operator|,
name|GLenum
name|modeAlpha
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendEquationiARB
argument_list|)
operator|(
name|GLuint
name|buf
operator|,
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_draw_buffers_blend
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_draw_buffers_blend
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlendFuncSeparateiARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum srcRGB
argument_list|,
argument|GLenum dstRGB
argument_list|,
argument|GLenum srcAlpha
argument_list|,
argument|GLenum dstAlpha
argument_list|)
block|;
name|void
name|glBlendFunciARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum src
argument_list|,
argument|GLenum dst
argument_list|)
block|;
name|void
name|glBlendEquationSeparateiARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|;
name|void
name|glBlendEquationiARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_draw_buffers_blend
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlendFuncSeparateiARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_buffers_blend
operator|::
name|glBlendFuncSeparateiARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum srcRGB
argument_list|,
argument|GLenum dstRGB
argument_list|,
argument|GLenum srcAlpha
argument_list|,
argument|GLenum dstAlpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendFuncSeparateiARB
argument_list|(
name|buf
argument_list|,
name|srcRGB
argument_list|,
name|dstRGB
argument_list|,
name|srcAlpha
argument_list|,
name|dstAlpha
argument_list|)
block|; }
DECL|function|glBlendFunciARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_buffers_blend
operator|::
name|glBlendFunciARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum src
argument_list|,
argument|GLenum dst
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendFunciARB
argument_list|(
name|buf
argument_list|,
name|src
argument_list|,
name|dst
argument_list|)
block|; }
DECL|function|glBlendEquationSeparateiARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_buffers_blend
operator|::
name|glBlendEquationSeparateiARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendEquationSeparateiARB
argument_list|(
name|buf
argument_list|,
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|; }
DECL|function|glBlendEquationiARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_buffers_blend
operator|::
name|glBlendEquationiARB
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_buffers_blend
argument_list|)
block|;
name|d
operator|->
name|BlendEquationiARB
argument_list|(
name|buf
argument_list|,
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_draw_elements_base_vertexPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawElementsBaseVertex
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
specifier|const
operator|*
name|indices
operator|,
name|GLsizei
name|drawcount
operator|,
specifier|const
name|GLint
operator|*
name|basevertex
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsInstancedBaseVertex
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indices
operator|,
name|GLsizei
name|instancecount
operator|,
name|GLint
name|basevertex
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawRangeElementsBaseVertex
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|start
operator|,
name|GLuint
name|end
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indices
operator|,
name|GLint
name|basevertex
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsBaseVertex
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indices
operator|,
name|GLint
name|basevertex
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_draw_elements_base_vertex
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_draw_elements_base_vertex
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|const GLint *basevertex
argument_list|)
block|;
name|void
name|glDrawElementsInstancedBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|void
name|glDrawRangeElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|void
name|glDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_draw_elements_base_vertex
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiDrawElementsBaseVertex
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_elements_base_vertex
operator|::
name|glMultiDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|const GLint *basevertex
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_elements_base_vertex
argument_list|)
block|;
name|d
operator|->
name|MultiDrawElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|drawcount
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawElementsInstancedBaseVertex
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_elements_base_vertex
operator|::
name|glDrawElementsInstancedBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_elements_base_vertex
argument_list|)
block|;
name|d
operator|->
name|DrawElementsInstancedBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawRangeElementsBaseVertex
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_elements_base_vertex
operator|::
name|glDrawRangeElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_elements_base_vertex
argument_list|)
block|;
name|d
operator|->
name|DrawRangeElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawElementsBaseVertex
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_elements_base_vertex
operator|::
name|glDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_elements_base_vertex
argument_list|)
block|;
name|d
operator|->
name|DrawElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|basevertex
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_draw_indirectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsIndirect
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indirect
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawArraysIndirect
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLvoid
operator|*
name|indirect
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_draw_indirect
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_draw_indirect
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indirect
argument_list|)
block|;
name|void
name|glDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLvoid *indirect
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_draw_indirect
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawElementsIndirect
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_indirect
operator|::
name|glDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indirect
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_indirect
argument_list|)
block|;
name|d
operator|->
name|DrawElementsIndirect
argument_list|(
name|mode
argument_list|,
name|type
argument_list|,
name|indirect
argument_list|)
block|; }
DECL|function|glDrawArraysIndirect
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_indirect
operator|::
name|glDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLvoid *indirect
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_indirect
argument_list|)
block|;
name|d
operator|->
name|DrawArraysIndirect
argument_list|(
name|mode
argument_list|,
name|indirect
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_draw_instancedPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsInstancedARB
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawArraysInstancedARB
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|,
name|GLsizei
name|primcount
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_draw_instanced
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_draw_instanced
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawElementsInstancedARB
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glDrawArraysInstancedARB
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_draw_instanced
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawElementsInstancedARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_instanced
operator|::
name|glDrawElementsInstancedARB
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_instanced
argument_list|)
block|;
name|d
operator|->
name|DrawElementsInstancedARB
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glDrawArraysInstancedARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_draw_instanced
operator|::
name|glDrawArraysInstancedARB
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_instanced
argument_list|)
block|;
name|d
operator|->
name|DrawArraysInstancedARB
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_framebuffer_no_attachmentsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFramebufferParameteriv
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferParameteri
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_framebuffer_no_attachments
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_framebuffer_no_attachments
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetFramebufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFramebufferParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_framebuffer_no_attachments
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetFramebufferParameteriv
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_no_attachments
operator|::
name|glGetFramebufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_no_attachments
argument_list|)
block|;
name|d
operator|->
name|GetFramebufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFramebufferParameteri
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_no_attachments
operator|::
name|glFramebufferParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_no_attachments
argument_list|)
block|;
name|d
operator|->
name|FramebufferParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_framebuffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTextureLayer
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|layer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisample
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlitFramebuffer
argument_list|)
operator|(
name|GLint
name|srcX0
operator|,
name|GLint
name|srcY0
operator|,
name|GLint
name|srcX1
operator|,
name|GLint
name|srcY1
operator|,
name|GLint
name|dstX0
operator|,
name|GLint
name|dstY0
operator|,
name|GLint
name|dstX1
operator|,
name|GLint
name|dstY1
operator|,
name|GLbitfield
name|mask
operator|,
name|GLenum
name|filter
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenerateMipmap
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFramebufferAttachmentParameteriv
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferRenderbuffer
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|renderbuffertarget
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture3D
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|zoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture2D
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture1D
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP CheckFramebufferStatus
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenFramebuffers
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|framebuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteFramebuffers
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|framebuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindFramebuffer
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|framebuffer
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsFramebuffer
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetRenderbufferParameteriv
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorage
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenRenderbuffers
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|renderbuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteRenderbuffers
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|renderbuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindRenderbuffer
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsRenderbuffer
argument_list|)
operator|(
name|GLuint
name|renderbuffer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_framebuffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFramebufferTextureLayer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|;
name|void
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|;
name|void
name|glGenerateMipmap
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetFramebufferAttachmentParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFramebufferRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glFramebufferTexture3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|;
name|void
name|glFramebufferTexture2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glFramebufferTexture1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|GLenum
name|glCheckFramebufferStatus
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGenFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|;
name|void
name|glDeleteFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|;
name|void
name|glBindFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|;
name|GLboolean
name|glIsFramebuffer
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|;
name|void
name|glGetRenderbufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glRenderbufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glGenRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glDeleteRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glBindRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|GLboolean
name|glIsRenderbuffer
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFramebufferTextureLayer
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glFramebufferTextureLayer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferTextureLayer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layer
argument_list|)
block|; }
DECL|function|glRenderbufferStorageMultisample
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glBlitFramebuffer
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|BlitFramebuffer
argument_list|(
name|srcX0
argument_list|,
name|srcY0
argument_list|,
name|srcX1
argument_list|,
name|srcY1
argument_list|,
name|dstX0
argument_list|,
name|dstY0
argument_list|,
name|dstX1
argument_list|,
name|dstY1
argument_list|,
name|mask
argument_list|,
name|filter
argument_list|)
block|; }
DECL|function|glGenerateMipmap
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glGenerateMipmap
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GenerateMipmap
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glGetFramebufferAttachmentParameteriv
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glGetFramebufferAttachmentParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GetFramebufferAttachmentParameteriv
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFramebufferRenderbuffer
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glFramebufferRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferRenderbuffer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glFramebufferTexture3D
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glFramebufferTexture3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture3D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|zoffset
argument_list|)
block|; }
DECL|function|glFramebufferTexture2D
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glFramebufferTexture2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture2D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glFramebufferTexture1D
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glFramebufferTexture1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture1D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glCheckFramebufferStatus
specifier|inline
name|GLenum
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glCheckFramebufferStatus
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|CheckFramebufferStatus
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenFramebuffers
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glGenFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GenFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glDeleteFramebuffers
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glDeleteFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|DeleteFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glBindFramebuffer
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glBindFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|BindFramebuffer
argument_list|(
name|target
argument_list|,
name|framebuffer
argument_list|)
block|; }
DECL|function|glIsFramebuffer
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glIsFramebuffer
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsFramebuffer
argument_list|(
name|framebuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetRenderbufferParameteriv
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glGetRenderbufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GetRenderbufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glRenderbufferStorage
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glRenderbufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorage
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glGenRenderbuffers
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glGenRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GenRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glDeleteRenderbuffers
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glDeleteRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|DeleteRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glBindRenderbuffer
specifier|inline
name|void
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glBindRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|BindRenderbuffer
argument_list|(
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glIsRenderbuffer
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|glIsRenderbuffer
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsRenderbuffer
argument_list|(
name|renderbuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_geometry_shader4Private
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTextureFaceARB
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLenum
name|attachment
expr|,
name|GLuint
name|texture
expr|,
name|GLint
name|level
expr|,
name|GLenum
name|face
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTextureLayerARB
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLenum
name|attachment
expr|,
name|GLuint
name|texture
expr|,
name|GLint
name|level
expr|,
name|GLint
name|layer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTextureARB
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLenum
name|attachment
expr|,
name|GLuint
name|texture
expr|,
name|GLint
name|level
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameteriARB
argument_list|)
operator|(
name|GLuint
name|program
expr|,
name|GLenum
name|pname
expr|,
name|GLint
name|value
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_geometry_shader4
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_geometry_shader4
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFramebufferTextureFaceARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum face
argument_list|)
block|;
name|void
name|glFramebufferTextureLayerARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|;
name|void
name|glFramebufferTextureARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glProgramParameteriARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_geometry_shader4
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFramebufferTextureFaceARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_geometry_shader4
operator|::
name|glFramebufferTextureFaceARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum face
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_geometry_shader4
argument_list|)
block|;
name|d
operator|->
name|FramebufferTextureFaceARB
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|face
argument_list|)
block|; }
DECL|function|glFramebufferTextureLayerARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_geometry_shader4
operator|::
name|glFramebufferTextureLayerARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_geometry_shader4
argument_list|)
block|;
name|d
operator|->
name|FramebufferTextureLayerARB
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layer
argument_list|)
block|; }
DECL|function|glFramebufferTextureARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_geometry_shader4
operator|::
name|glFramebufferTextureARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_geometry_shader4
argument_list|)
block|;
name|d
operator|->
name|FramebufferTextureARB
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glProgramParameteriARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_geometry_shader4
operator|::
name|glProgramParameteriARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_geometry_shader4
argument_list|)
block|;
name|d
operator|->
name|ProgramParameteriARB
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_get_program_binaryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameteri
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramBinary
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|binaryFormat
operator|,
specifier|const
name|GLvoid
operator|*
name|binary
operator|,
name|GLsizei
name|length
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramBinary
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLenum
operator|*
name|binaryFormat
operator|,
name|GLvoid
operator|*
name|binary
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_get_program_binary
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_get_program_binary
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProgramParameteri
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|void
name|glProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum binaryFormat
argument_list|,
argument|const GLvoid *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|;
name|void
name|glGetProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLenum *binaryFormat
argument_list|,
argument|GLvoid *binary
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_get_program_binary
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProgramParameteri
specifier|inline
name|void
name|QOpenGLExtension_ARB_get_program_binary
operator|::
name|glProgramParameteri
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_get_program_binary
argument_list|)
block|;
name|d
operator|->
name|ProgramParameteri
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramBinary
specifier|inline
name|void
name|QOpenGLExtension_ARB_get_program_binary
operator|::
name|glProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum binaryFormat
argument_list|,
argument|const GLvoid *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_get_program_binary
argument_list|)
block|;
name|d
operator|->
name|ProgramBinary
argument_list|(
name|program
argument_list|,
name|binaryFormat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glGetProgramBinary
specifier|inline
name|void
name|QOpenGLExtension_ARB_get_program_binary
operator|::
name|glGetProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLenum *binaryFormat
argument_list|,
argument|GLvoid *binary
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_get_program_binary
argument_list|)
block|;
name|d
operator|->
name|GetProgramBinary
argument_list|(
name|program
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|binaryFormat
argument_list|,
name|binary
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_gpu_shader_fp64Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformdv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix4x3dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix4x2dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix3x4dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix3x2dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix2x4dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix2x3dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix4dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix3dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix2dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1dv
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4d
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3d
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2d
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1d
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_gpu_shader_fp64
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetUniformdv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glUniformMatrix4x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix4x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform1dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform4d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glUniform3d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glUniform2d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glUniform1d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetUniformdv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glGetUniformdv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|GetUniformdv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniformMatrix4x3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix4x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix4x3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix4x2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix4x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix4x2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix3x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix3x4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix3x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix3x2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix2x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix2x4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix2x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix2x3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniformMatrix2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform1dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform1dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4d
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform4d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform4d
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glUniform3d
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform3d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform3d
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glUniform2d
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform2d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform2d
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glUniform1d
specifier|inline
name|void
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|glUniform1d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
block|;
name|d
operator|->
name|Uniform1d
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_instanced_arraysPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribDivisorARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|divisor
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_instanced_arrays
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_instanced_arrays
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexAttribDivisorARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint divisor
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_instanced_arrays
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexAttribDivisorARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_instanced_arrays
operator|::
name|glVertexAttribDivisorARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint divisor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_instanced_arrays
argument_list|)
block|;
name|d
operator|->
name|VertexAttribDivisorARB
argument_list|(
name|index
argument_list|,
name|divisor
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_internalformat_queryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetInternalformativ
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLenum
name|pname
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_internalformat_query
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_internalformat_query
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetInternalformativ
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_internalformat_query
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetInternalformativ
specifier|inline
name|void
name|QOpenGLExtension_ARB_internalformat_query
operator|::
name|glGetInternalformativ
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_internalformat_query
argument_list|)
block|;
name|d
operator|->
name|GetInternalformativ
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_internalformat_query2Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetInternalformati64v
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLenum
name|pname
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLint64
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_internalformat_query2
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_internalformat_query2
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetInternalformati64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_internalformat_query2
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetInternalformati64v
specifier|inline
name|void
name|QOpenGLExtension_ARB_internalformat_query2
operator|::
name|glGetInternalformati64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_internalformat_query2
argument_list|)
block|;
name|d
operator|->
name|GetInternalformati64v
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_invalidate_subdataPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InvalidateSubFramebuffer
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|numAttachments
operator|,
specifier|const
name|GLenum
operator|*
name|attachments
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InvalidateFramebuffer
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|numAttachments
operator|,
specifier|const
name|GLenum
operator|*
name|attachments
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InvalidateBufferData
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InvalidateBufferSubData
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|length
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InvalidateTexImage
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InvalidateTexSubImage
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_invalidate_subdata
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glInvalidateSubFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glInvalidateFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|;
name|void
name|glInvalidateBufferData
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glInvalidateBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|;
name|void
name|glInvalidateTexImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glInvalidateTexSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glInvalidateSubFramebuffer
specifier|inline
name|void
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|glInvalidateSubFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
block|;
name|d
operator|->
name|InvalidateSubFramebuffer
argument_list|(
name|target
argument_list|,
name|numAttachments
argument_list|,
name|attachments
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glInvalidateFramebuffer
specifier|inline
name|void
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|glInvalidateFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
block|;
name|d
operator|->
name|InvalidateFramebuffer
argument_list|(
name|target
argument_list|,
name|numAttachments
argument_list|,
name|attachments
argument_list|)
block|; }
DECL|function|glInvalidateBufferData
specifier|inline
name|void
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|glInvalidateBufferData
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
block|;
name|d
operator|->
name|InvalidateBufferData
argument_list|(
name|buffer
argument_list|)
block|; }
DECL|function|glInvalidateBufferSubData
specifier|inline
name|void
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|glInvalidateBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
block|;
name|d
operator|->
name|InvalidateBufferSubData
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glInvalidateTexImage
specifier|inline
name|void
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|glInvalidateTexImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
block|;
name|d
operator|->
name|InvalidateTexImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glInvalidateTexSubImage
specifier|inline
name|void
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|glInvalidateTexSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
block|;
name|d
operator|->
name|InvalidateTexSubImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_map_buffer_rangePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FlushMappedBufferRange
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|length
operator|)
block|;
name|GLvoid
operator|*
operator|(
name|QOPENGLF_APIENTRYP
name|MapBufferRange
operator|)
operator|(
name|GLenum
name|target
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|length
operator|,
name|GLbitfield
name|access
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_map_buffer_range
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_map_buffer_range
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFlushMappedBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_map_buffer_range
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFlushMappedBufferRange
specifier|inline
name|void
name|QOpenGLExtension_ARB_map_buffer_range
operator|::
name|glFlushMappedBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_map_buffer_range
argument_list|)
block|;
name|d
operator|->
name|FlushMappedBufferRange
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glMapBufferRange
specifier|inline
name|GLvoid
operator|*
name|QOpenGLExtension_ARB_map_buffer_range
operator|::
name|glMapBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_map_buffer_range
argument_list|)
block|;
return|return
name|d
operator|->
name|MapBufferRange
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_matrix_palettePrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixIndexPointerARB
argument_list|)
operator|(
name|GLint
name|size
expr|,
name|GLenum
name|type
expr|,
name|GLsizei
name|stride
expr|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixIndexuivARB
argument_list|)
operator|(
name|GLint
name|size
expr|,
specifier|const
name|GLuint
operator|*
name|indices
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixIndexusvARB
argument_list|)
operator|(
name|GLint
name|size
expr|,
specifier|const
name|GLushort
operator|*
name|indices
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixIndexubvARB
argument_list|)
operator|(
name|GLint
name|size
expr|,
specifier|const
name|GLubyte
operator|*
name|indices
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CurrentPaletteMatrixARB
argument_list|)
operator|(
name|GLint
name|index
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_matrix_palette
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_matrix_palette
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMatrixIndexPointerARB
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glMatrixIndexuivARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLuint *indices
argument_list|)
block|;
name|void
name|glMatrixIndexusvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLushort *indices
argument_list|)
block|;
name|void
name|glMatrixIndexubvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLubyte *indices
argument_list|)
block|;
name|void
name|glCurrentPaletteMatrixARB
argument_list|(
argument|GLint index
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_matrix_palette
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMatrixIndexPointerARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_matrix_palette
operator|::
name|glMatrixIndexPointerARB
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_matrix_palette
argument_list|)
block|;
name|d
operator|->
name|MatrixIndexPointerARB
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glMatrixIndexuivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_matrix_palette
operator|::
name|glMatrixIndexuivARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLuint *indices
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_matrix_palette
argument_list|)
block|;
name|d
operator|->
name|MatrixIndexuivARB
argument_list|(
name|size
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glMatrixIndexusvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_matrix_palette
operator|::
name|glMatrixIndexusvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLushort *indices
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_matrix_palette
argument_list|)
block|;
name|d
operator|->
name|MatrixIndexusvARB
argument_list|(
name|size
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glMatrixIndexubvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_matrix_palette
operator|::
name|glMatrixIndexubvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLubyte *indices
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_matrix_palette
argument_list|)
block|;
name|d
operator|->
name|MatrixIndexubvARB
argument_list|(
name|size
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glCurrentPaletteMatrixARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_matrix_palette
operator|::
name|glCurrentPaletteMatrixARB
argument_list|(
argument|GLint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_matrix_palette
argument_list|)
block|;
name|d
operator|->
name|CurrentPaletteMatrixARB
argument_list|(
name|index
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_multi_draw_indirectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawElementsIndirect
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|void
operator|*
name|indirect
operator|,
name|GLsizei
name|drawcount
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawArraysIndirect
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|void
operator|*
name|indirect
operator|,
name|GLsizei
name|drawcount
operator|,
name|GLsizei
name|stride
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_multi_draw_indirect
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_multi_draw_indirect
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glMultiDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_multi_draw_indirect
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiDrawElementsIndirect
specifier|inline
name|void
name|QOpenGLExtension_ARB_multi_draw_indirect
operator|::
name|glMultiDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multi_draw_indirect
argument_list|)
block|;
name|d
operator|->
name|MultiDrawElementsIndirect
argument_list|(
name|mode
argument_list|,
name|type
argument_list|,
name|indirect
argument_list|,
name|drawcount
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glMultiDrawArraysIndirect
specifier|inline
name|void
name|QOpenGLExtension_ARB_multi_draw_indirect
operator|::
name|glMultiDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multi_draw_indirect
argument_list|)
block|;
name|d
operator|->
name|MultiDrawArraysIndirect
argument_list|(
name|mode
argument_list|,
name|indirect
argument_list|,
name|drawcount
argument_list|,
name|stride
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SampleCoverageARB
argument_list|)
operator|(
name|GLfloat
name|value
operator|,
name|GLboolean
name|invert
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSampleCoverageARB
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSampleCoverageARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multisample
operator|::
name|glSampleCoverageARB
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multisample
argument_list|)
block|;
name|d
operator|->
name|SampleCoverageARB
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_multitexturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4svARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4sARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLshort
name|s
operator|,
name|GLshort
name|t
operator|,
name|GLshort
name|r
operator|,
name|GLshort
name|q
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4ivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4iARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|s
operator|,
name|GLint
name|t
operator|,
name|GLint
name|r
operator|,
name|GLint
name|q
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4fvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4fARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|r
operator|,
name|GLfloat
name|q
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4dvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4dARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLdouble
name|s
operator|,
name|GLdouble
name|t
operator|,
name|GLdouble
name|r
operator|,
name|GLdouble
name|q
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3svARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3sARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLshort
name|s
operator|,
name|GLshort
name|t
operator|,
name|GLshort
name|r
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3ivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3iARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|s
operator|,
name|GLint
name|t
operator|,
name|GLint
name|r
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3fvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3fARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|r
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3dvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3dARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLdouble
name|s
operator|,
name|GLdouble
name|t
operator|,
name|GLdouble
name|r
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2svARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2sARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLshort
name|s
operator|,
name|GLshort
name|t
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2ivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2iARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|s
operator|,
name|GLint
name|t
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2fvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2fARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2dvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2dARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLdouble
name|s
operator|,
name|GLdouble
name|t
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1svARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1sARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLshort
name|s
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1ivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1iARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|s
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1fvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1fARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLfloat
name|s
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1dvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1dARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLdouble
name|s
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClientActiveTextureARB
argument_list|)
operator|(
name|GLenum
name|texture
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ActiveTextureARB
argument_list|)
operator|(
name|GLenum
name|texture
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_multitexture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_multitexture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiTexCoord4svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|;
name|void
name|glMultiTexCoord4ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|;
name|void
name|glMultiTexCoord4fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|;
name|void
name|glMultiTexCoord4dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|;
name|void
name|glMultiTexCoord3svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|;
name|void
name|glMultiTexCoord3ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|;
name|void
name|glMultiTexCoord3fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|;
name|void
name|glMultiTexCoord3dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|;
name|void
name|glMultiTexCoord2svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|;
name|void
name|glMultiTexCoord2ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|;
name|void
name|glMultiTexCoord2fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|;
name|void
name|glMultiTexCoord2dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|;
name|void
name|glMultiTexCoord1svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|)
block|;
name|void
name|glMultiTexCoord1ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|)
block|;
name|void
name|glMultiTexCoord1fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|)
block|;
name|void
name|glMultiTexCoord1dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|)
block|;
name|void
name|glClientActiveTextureARB
argument_list|(
argument|GLenum texture
argument_list|)
block|;
name|void
name|glActiveTextureARB
argument_list|(
argument|GLenum texture
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_multitexture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiTexCoord4svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4svARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4sARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4ivARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4iARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4fvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4fARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4dvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord4dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4dARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord3svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3svARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3sARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3ivARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3iARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3fvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3fARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3dvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord3dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3dARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord2svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2svARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2sARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2ivARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2iARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2fvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2fARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2dvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord2dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2dARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord1svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1svARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1svARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1sARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1sARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1ivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1ivARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1iARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1iARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1fvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1fARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1dvARB
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glMultiTexCoord1dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1dARB
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glClientActiveTextureARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glClientActiveTextureARB
argument_list|(
argument|GLenum texture
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|ClientActiveTextureARB
argument_list|(
name|texture
argument_list|)
block|; }
DECL|function|glActiveTextureARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_multitexture
operator|::
name|glActiveTextureARB
argument_list|(
argument|GLenum texture
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
block|;
name|d
operator|->
name|ActiveTextureARB
argument_list|(
name|texture
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_occlusion_queryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryObjectuivARB
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryObjectivARB
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndQueryARB
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginQueryARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsQueryARB
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteQueriesARB
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenQueriesARB
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|ids
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_occlusion_query
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_occlusion_query
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetQueryObjectuivARB
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetQueryObjectivARB
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetQueryivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndQueryARB
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glBeginQueryARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|GLboolean
name|glIsQueryARB
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glDeleteQueriesARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glGenQueriesARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetQueryObjectuivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glGetQueryObjectuivARB
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|GetQueryObjectuivARB
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjectivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glGetQueryObjectivARB
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|GetQueryObjectivARB
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glGetQueryivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|GetQueryivARB
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndQueryARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glEndQueryARB
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|EndQueryARB
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glBeginQueryARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glBeginQueryARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|BeginQueryARB
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glIsQueryARB
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glIsQueryARB
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
return|return
name|d
operator|->
name|IsQueryARB
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteQueriesARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glDeleteQueriesARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|DeleteQueriesARB
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glGenQueriesARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|glGenQueriesARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|GenQueriesARB
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_point_parametersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameterfvARB
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameterfARB
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_point_parameters
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_point_parameters
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPointParameterfvARB
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPointParameterfARB
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_point_parameters
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPointParameterfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_point_parameters
operator|::
name|glPointParameterfvARB
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_point_parameters
argument_list|)
block|;
name|d
operator|->
name|PointParameterfvARB
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameterfARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_point_parameters
operator|::
name|glPointParameterfARB
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_point_parameters
argument_list|)
block|;
name|d
operator|->
name|PointParameterfARB
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_program_interface_queryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramResourceLocationIndex
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|programInterface
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramResourceLocation
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|programInterface
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramResourceiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|programInterface
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|propCount
operator|,
specifier|const
name|GLenum
operator|*
name|props
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramResourceName
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|programInterface
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|name
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramResourceIndex
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|programInterface
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramInterfaceiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|programInterface
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_program_interface_query
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_program_interface_query
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLint
name|glGetProgramResourceLocationIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|GLint
name|glGetProgramResourceLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetProgramResourceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei propCount
argument_list|,
argument|const GLenum *props
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramResourceName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|GLuint
name|glGetProgramResourceIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetProgramInterfaceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_program_interface_query
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetProgramResourceLocationIndex
specifier|inline
name|GLint
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|glGetProgramResourceLocationIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_program_interface_query
argument_list|)
block|;
return|return
name|d
operator|->
name|GetProgramResourceLocationIndex
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetProgramResourceLocation
specifier|inline
name|GLint
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|glGetProgramResourceLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_program_interface_query
argument_list|)
block|;
return|return
name|d
operator|->
name|GetProgramResourceLocation
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetProgramResourceiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|glGetProgramResourceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei propCount
argument_list|,
argument|const GLenum *props
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_program_interface_query
argument_list|)
block|;
name|d
operator|->
name|GetProgramResourceiv
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|index
argument_list|,
name|propCount
argument_list|,
name|props
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramResourceName
specifier|inline
name|void
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|glGetProgramResourceName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_program_interface_query
argument_list|)
block|;
name|d
operator|->
name|GetProgramResourceName
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetProgramResourceIndex
specifier|inline
name|GLuint
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|glGetProgramResourceIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_program_interface_query
argument_list|)
block|;
return|return
name|d
operator|->
name|GetProgramResourceIndex
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetProgramInterfaceiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|glGetProgramInterfaceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_program_interface_query
argument_list|)
block|;
name|d
operator|->
name|GetProgramInterfaceiv
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_provoking_vertexPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProvokingVertex
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_provoking_vertex
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_provoking_vertex
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProvokingVertex
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_provoking_vertex
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProvokingVertex
specifier|inline
name|void
name|QOpenGLExtension_ARB_provoking_vertex
operator|::
name|glProvokingVertex
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_provoking_vertex
argument_list|)
block|;
name|d
operator|->
name|ProvokingVertex
argument_list|(
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_robustnessPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnUniformdvARB
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnUniformuivARB
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnUniformivARB
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnUniformfvARB
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnCompressedTexImageARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|lod
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLvoid
operator|*
name|img
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReadnPixelsARB
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnTexImageARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLvoid
operator|*
name|img
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnMinmaxARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLboolean
name|reset
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLvoid
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnHistogramARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLboolean
name|reset
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLvoid
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnSeparableFilterARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|rowBufSize
operator|,
name|GLvoid
operator|*
name|row
operator|,
name|GLsizei
name|columnBufSize
operator|,
name|GLvoid
operator|*
name|column
operator|,
name|GLvoid
operator|*
name|span
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnConvolutionFilterARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLvoid
operator|*
name|image
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnColorTableARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLvoid
operator|*
name|table
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnPolygonStippleARB
argument_list|)
operator|(
name|GLsizei
name|bufSize
operator|,
name|GLubyte
operator|*
name|pattern
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnPixelMapusvARB
argument_list|)
operator|(
name|GLenum
name|map
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLushort
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnPixelMapuivARB
argument_list|)
operator|(
name|GLenum
name|map
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLuint
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnPixelMapfvARB
argument_list|)
operator|(
name|GLenum
name|map
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLfloat
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnMapivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|query
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnMapfvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|query
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnMapdvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|query
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLdouble
operator|*
name|v
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP GetGraphicsResetStatusARB
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_robustness
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_robustness
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetnUniformdvARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetnUniformuivARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetnUniformivARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetnUniformfvARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetnCompressedTexImageARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *img
argument_list|)
block|;
name|void
name|glReadnPixelsARB
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glGetnTexImageARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *img
argument_list|)
block|;
name|void
name|glGetnMinmaxARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *values
argument_list|)
block|;
name|void
name|glGetnHistogramARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *values
argument_list|)
block|;
name|void
name|glGetnSeparableFilterARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei rowBufSize
argument_list|,
argument|GLvoid *row
argument_list|,
argument|GLsizei columnBufSize
argument_list|,
argument|GLvoid *column
argument_list|,
argument|GLvoid *span
argument_list|)
block|;
name|void
name|glGetnConvolutionFilterARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *image
argument_list|)
block|;
name|void
name|glGetnColorTableARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *table
argument_list|)
block|;
name|void
name|glGetnPolygonStippleARB
argument_list|(
argument|GLsizei bufSize
argument_list|,
argument|GLubyte *pattern
argument_list|)
block|;
name|void
name|glGetnPixelMapusvARB
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLushort *values
argument_list|)
block|;
name|void
name|glGetnPixelMapuivARB
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *values
argument_list|)
block|;
name|void
name|glGetnPixelMapfvARB
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *values
argument_list|)
block|;
name|void
name|glGetnMapivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *v
argument_list|)
block|;
name|void
name|glGetnMapfvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *v
argument_list|)
block|;
name|void
name|glGetnMapdvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *v
argument_list|)
block|;
name|GLenum
name|glGetGraphicsResetStatusARB
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_robustness
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetnUniformdvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnUniformdvARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnUniformdvARB
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnUniformuivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnUniformuivARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnUniformuivARB
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnUniformivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnUniformivARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnUniformivARB
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnUniformfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnUniformfvARB
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnUniformfvARB
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnCompressedTexImageARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnCompressedTexImageARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *img
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnCompressedTexImageARB
argument_list|(
name|target
argument_list|,
name|lod
argument_list|,
name|bufSize
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glReadnPixelsARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glReadnPixelsARB
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|ReadnPixelsARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetnTexImageARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnTexImageARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *img
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnTexImageARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glGetnMinmaxARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnMinmaxARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnMinmaxARB
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnHistogramARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnHistogramARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnHistogramARB
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnSeparableFilterARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnSeparableFilterARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei rowBufSize
argument_list|,
argument|GLvoid *row
argument_list|,
argument|GLsizei columnBufSize
argument_list|,
argument|GLvoid *column
argument_list|,
argument|GLvoid *span
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnSeparableFilterARB
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|rowBufSize
argument_list|,
name|row
argument_list|,
name|columnBufSize
argument_list|,
name|column
argument_list|,
name|span
argument_list|)
block|; }
DECL|function|glGetnConvolutionFilterARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnConvolutionFilterARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *image
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnConvolutionFilterARB
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glGetnColorTableARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnColorTableARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLvoid *table
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnColorTableARB
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|table
argument_list|)
block|; }
DECL|function|glGetnPolygonStippleARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnPolygonStippleARB
argument_list|(
argument|GLsizei bufSize
argument_list|,
argument|GLubyte *pattern
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnPolygonStippleARB
argument_list|(
name|bufSize
argument_list|,
name|pattern
argument_list|)
block|; }
DECL|function|glGetnPixelMapusvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnPixelMapusvARB
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLushort *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnPixelMapusvARB
argument_list|(
name|map
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnPixelMapuivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnPixelMapuivARB
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnPixelMapuivARB
argument_list|(
name|map
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnPixelMapfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnPixelMapfvARB
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnPixelMapfvARB
argument_list|(
name|map
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnMapivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnMapivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnMapivARB
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|bufSize
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetnMapfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnMapfvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnMapfvARB
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|bufSize
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetnMapdvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetnMapdvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnMapdvARB
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|bufSize
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetGraphicsResetStatusARB
specifier|inline
name|GLenum
name|QOpenGLExtension_ARB_robustness
operator|::
name|glGetGraphicsResetStatusARB
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
block|;
return|return
name|d
operator|->
name|GetGraphicsResetStatusARB
argument_list|()
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_sample_shadingPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MinSampleShadingARB
argument_list|)
operator|(
name|GLfloat
name|value
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_sample_shading
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_sample_shading
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMinSampleShadingARB
argument_list|(
argument|GLfloat value
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_sample_shading
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMinSampleShadingARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_sample_shading
operator|::
name|glMinSampleShadingARB
argument_list|(
argument|GLfloat value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sample_shading
argument_list|)
block|;
name|d
operator|->
name|MinSampleShadingARB
argument_list|(
name|value
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_sampler_objectsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetSamplerParameterIuiv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetSamplerParameterfv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetSamplerParameterIiv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetSamplerParameteriv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplerParameterIuiv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLuint
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplerParameterIiv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplerParameterfv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplerParameterf
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplerParameteriv
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplerParameteri
argument_list|)
operator|(
name|GLuint
name|sampler
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindSampler
argument_list|)
operator|(
name|GLuint
name|unit
operator|,
name|GLuint
name|sampler
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsSampler
argument_list|)
operator|(
name|GLuint
name|sampler
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteSamplers
argument_list|)
operator|(
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|samplers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenSamplers
argument_list|)
operator|(
name|GLsizei
name|count
operator|,
name|GLuint
operator|*
name|samplers
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_sampler_objects
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_sampler_objects
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *param
argument_list|)
block|;
name|void
name|glSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|;
name|void
name|glSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|;
name|void
name|glSamplerParameterf
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|;
name|void
name|glSamplerParameteri
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glBindSampler
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint sampler
argument_list|)
block|;
name|GLboolean
name|glIsSampler
argument_list|(
argument|GLuint sampler
argument_list|)
block|;
name|void
name|glDeleteSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *samplers
argument_list|)
block|;
name|void
name|glGenSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|GLuint *samplers
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetSamplerParameterIuiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glGetSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|GetSamplerParameterIuiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetSamplerParameterfv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glGetSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|GetSamplerParameterfv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetSamplerParameterIiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glGetSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|GetSamplerParameterIiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetSamplerParameteriv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glGetSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|GetSamplerParameteriv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glSamplerParameterIuiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|SamplerParameterIuiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameterIiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|SamplerParameterIiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameterfv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|SamplerParameterfv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameterf
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glSamplerParameterf
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|SamplerParameterf
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameteriv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|SamplerParameteriv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameteri
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glSamplerParameteri
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|SamplerParameteri
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glBindSampler
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glBindSampler
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint sampler
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|BindSampler
argument_list|(
name|unit
argument_list|,
name|sampler
argument_list|)
block|; }
DECL|function|glIsSampler
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glIsSampler
argument_list|(
argument|GLuint sampler
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|IsSampler
argument_list|(
name|sampler
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteSamplers
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glDeleteSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *samplers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|DeleteSamplers
argument_list|(
name|count
argument_list|,
name|samplers
argument_list|)
block|; }
DECL|function|glGenSamplers
specifier|inline
name|void
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|glGenSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|GLuint *samplers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
block|;
name|d
operator|->
name|GenSamplers
argument_list|(
name|count
argument_list|,
name|samplers
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_separate_shader_objectsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramPipelineInfoLog
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|infoLog
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ValidateProgramPipeline
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x3dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x4dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x2dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x4dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x2dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x3dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x3fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x4fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x2fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x4fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x2fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x3fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4uiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4ui
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|,
name|GLuint
name|v2
operator|,
name|GLuint
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4d
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|v0
operator|,
name|GLdouble
name|v1
operator|,
name|GLdouble
name|v2
operator|,
name|GLdouble
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4f
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|,
name|GLfloat
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4iv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4i
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|,
name|GLint
name|v2
operator|,
name|GLint
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3uiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3ui
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|,
name|GLuint
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3d
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|v0
operator|,
name|GLdouble
name|v1
operator|,
name|GLdouble
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3f
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3iv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3i
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|,
name|GLint
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2uiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2ui
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2d
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|v0
operator|,
name|GLdouble
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2f
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2iv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2i
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1uiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1ui
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1dv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1d
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1fv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1f
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1iv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1i
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramPipelineiv
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsProgramPipeline
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenProgramPipelines
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|pipelines
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteProgramPipelines
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|pipelines
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindProgramPipeline
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP CreateShaderProgramv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLchar
operator|*
specifier|const
operator|*
name|strings
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ActiveShaderProgram
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLuint
name|program
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UseProgramStages
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLbitfield
name|stages
operator|,
name|GLuint
name|program
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_separate_shader_objects
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetProgramPipelineInfoLog
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glValidateProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform4uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform4ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|;
name|void
name|glProgramUniform4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform4d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLdouble v3
argument_list|)
block|;
name|void
name|glProgramUniform4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform4f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|;
name|void
name|glProgramUniform4iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform4i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|;
name|void
name|glProgramUniform3uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform3ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|;
name|void
name|glProgramUniform3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform3d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|;
name|void
name|glProgramUniform3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform3f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glProgramUniform3iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform3i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|;
name|void
name|glProgramUniform2uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform2ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|;
name|void
name|glProgramUniform2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform2d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|)
block|;
name|void
name|glProgramUniform2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform2f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|;
name|void
name|glProgramUniform2iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform2i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|;
name|void
name|glProgramUniform1uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform1ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|;
name|void
name|glProgramUniform1dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform1d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|)
block|;
name|void
name|glProgramUniform1fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform1f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|;
name|void
name|glProgramUniform1iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform1i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|;
name|void
name|glGetProgramPipelineiv
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLboolean
name|glIsProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|void
name|glGenProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|;
name|void
name|glDeleteProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *pipelines
argument_list|)
block|;
name|void
name|glBindProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|GLuint
name|glCreateShaderProgramv
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *strings
argument_list|)
block|;
name|void
name|glActiveShaderProgram
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|void
name|glUseProgramStages
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLbitfield stages
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetProgramPipelineInfoLog
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glGetProgramPipelineInfoLog
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetProgramPipelineInfoLog
argument_list|(
name|pipeline
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glValidateProgramPipeline
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glValidateProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ValidateProgramPipeline
argument_list|(
name|pipeline
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix4x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix3x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix4x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix2x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix3x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix2x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x3fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix4x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x4fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix3x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x2fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix4x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x4fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix2x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x2fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix3x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x3fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix2x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniformMatrix2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4d
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLdouble v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform4fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4f
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform4iv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4i
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform4i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3d
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform3fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3f
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform3iv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3i
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform3i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform2uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2d
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform2fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2f
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform2iv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2i
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform2i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform1uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniform1dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1d
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniform1fv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1f
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniform1iv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1i
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glProgramUniform1i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glGetProgramPipelineiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glGetProgramPipelineiv
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetProgramPipelineiv
argument_list|(
name|pipeline
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glIsProgramPipeline
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glIsProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|IsProgramPipeline
argument_list|(
name|pipeline
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenProgramPipelines
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glGenProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GenProgramPipelines
argument_list|(
name|n
argument_list|,
name|pipelines
argument_list|)
block|; }
DECL|function|glDeleteProgramPipelines
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glDeleteProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *pipelines
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|DeleteProgramPipelines
argument_list|(
name|n
argument_list|,
name|pipelines
argument_list|)
block|; }
DECL|function|glBindProgramPipeline
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glBindProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|BindProgramPipeline
argument_list|(
name|pipeline
argument_list|)
block|; }
DECL|function|glCreateShaderProgramv
specifier|inline
name|GLuint
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glCreateShaderProgramv
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *strings
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|CreateShaderProgramv
argument_list|(
name|type
argument_list|,
name|count
argument_list|,
name|strings
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glActiveShaderProgram
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glActiveShaderProgram
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ActiveShaderProgram
argument_list|(
name|pipeline
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glUseProgramStages
specifier|inline
name|void
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|glUseProgramStages
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLbitfield stages
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|UseProgramStages
argument_list|(
name|pipeline
argument_list|,
name|stages
argument_list|,
name|program
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_shader_atomic_countersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveAtomicCounterBufferiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|bufferIndex
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_shader_atomic_counters
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_shader_atomic_counters
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetActiveAtomicCounterBufferiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint bufferIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_shader_atomic_counters
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetActiveAtomicCounterBufferiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_atomic_counters
operator|::
name|glGetActiveAtomicCounterBufferiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint bufferIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_atomic_counters
argument_list|)
block|;
name|d
operator|->
name|GetActiveAtomicCounterBufferiv
argument_list|(
name|program
argument_list|,
name|bufferIndex
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_shader_image_load_storePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MemoryBarrier
argument_list|)
operator|(
name|GLbitfield
name|barriers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindImageTexture
argument_list|)
operator|(
name|GLuint
name|unit
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLboolean
name|layered
operator|,
name|GLint
name|layer
operator|,
name|GLenum
name|access
operator|,
name|GLenum
name|format
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_shader_image_load_store
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_shader_image_load_store
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMemoryBarrier
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|;
name|void
name|glBindImageTexture
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum access
argument_list|,
argument|GLenum format
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_shader_image_load_store
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMemoryBarrier
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_image_load_store
operator|::
name|glMemoryBarrier
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_image_load_store
argument_list|)
block|;
name|d
operator|->
name|MemoryBarrier
argument_list|(
name|barriers
argument_list|)
block|; }
DECL|function|glBindImageTexture
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_image_load_store
operator|::
name|glBindImageTexture
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum access
argument_list|,
argument|GLenum format
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_image_load_store
argument_list|)
block|;
name|d
operator|->
name|BindImageTexture
argument_list|(
name|unit
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layered
argument_list|,
name|layer
argument_list|,
name|access
argument_list|,
name|format
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_shader_objectsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetShaderSourceARB
argument_list|)
operator|(
name|GLhandleARB
name|obj
operator|,
name|GLsizei
name|maxLength
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLcharARB
operator|*
name|source
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformivARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|,
name|GLint
name|location
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformfvARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|,
name|GLint
name|location
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveUniformARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|maxLength
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLint
operator|*
name|size
operator|,
name|GLenum
operator|*
name|type
operator|,
name|GLcharARB
operator|*
name|name
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformLocationARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|,
specifier|const
name|GLcharARB
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetAttachedObjectsARB
argument_list|)
operator|(
name|GLhandleARB
name|containerObj
operator|,
name|GLsizei
name|maxCount
operator|,
name|GLsizei
operator|*
name|count
operator|,
name|GLhandleARB
operator|*
name|obj
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetInfoLogARB
argument_list|)
operator|(
name|GLhandleARB
name|obj
operator|,
name|GLsizei
name|maxLength
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLcharARB
operator|*
name|infoLog
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectParameterivARB
argument_list|)
operator|(
name|GLhandleARB
name|obj
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectParameterfvARB
argument_list|)
operator|(
name|GLhandleARB
name|obj
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix4fvARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix3fvARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformMatrix2fvARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4ivARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3ivARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2ivARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1ivARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4fvARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3fvARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2fvARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1fvARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4iARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|,
name|GLint
name|v2
operator|,
name|GLint
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3iARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|,
name|GLint
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2iARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1iARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4fARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|,
name|GLfloat
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3fARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2fARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1fARB
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ValidateProgramARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UseProgramObjectARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LinkProgramARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP AttachObjectARB
argument_list|)
operator|(
name|GLhandleARB
name|containerObj
operator|,
name|GLhandleARB
name|obj
operator|)
block|;
name|GLhandleARB
argument_list|(
argument|QOPENGLF_APIENTRYP CreateProgramObjectARB
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompileShaderARB
argument_list|)
operator|(
name|GLhandleARB
name|shaderObj
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ShaderSourceARB
argument_list|)
operator|(
name|GLhandleARB
name|shaderObj
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLcharARB
operator|*
operator|*
name|string
operator|,
specifier|const
name|GLint
operator|*
name|length
operator|)
block|;
name|GLhandleARB
argument_list|(
argument|QOPENGLF_APIENTRYP CreateShaderObjectARB
argument_list|)
operator|(
name|GLenum
name|shaderType
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DetachObjectARB
argument_list|)
operator|(
name|GLhandleARB
name|containerObj
operator|,
name|GLhandleARB
name|attachedObj
operator|)
block|;
name|GLhandleARB
argument_list|(
argument|QOPENGLF_APIENTRYP GetHandleARB
argument_list|)
operator|(
name|GLenum
name|pname
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteObjectARB
argument_list|)
operator|(
name|GLhandleARB
name|obj
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_shader_objects
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_shader_objects
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetShaderSourceARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLcharARB *source
argument_list|)
block|;
name|void
name|glGetUniformivARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetUniformfvARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetActiveUniformARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLcharARB *name
argument_list|)
block|;
name|GLint
name|glGetUniformLocationARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|const GLcharARB *name
argument_list|)
block|;
name|void
name|glGetAttachedObjectsARB
argument_list|(
argument|GLhandleARB containerObj
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLhandleARB *obj
argument_list|)
block|;
name|void
name|glGetInfoLogARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLcharARB *infoLog
argument_list|)
block|;
name|void
name|glGetObjectParameterivARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetObjectParameterfvARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glUniformMatrix4fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform3ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform2ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform1ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform4fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform3fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform2fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform1fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|;
name|void
name|glUniform3iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|;
name|void
name|glUniform2iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|;
name|void
name|glUniform1iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|;
name|void
name|glUniform4fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|;
name|void
name|glUniform3fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glUniform2fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|;
name|void
name|glUniform1fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|;
name|void
name|glValidateProgramARB
argument_list|(
argument|GLhandleARB programObj
argument_list|)
block|;
name|void
name|glUseProgramObjectARB
argument_list|(
argument|GLhandleARB programObj
argument_list|)
block|;
name|void
name|glLinkProgramARB
argument_list|(
argument|GLhandleARB programObj
argument_list|)
block|;
name|void
name|glAttachObjectARB
argument_list|(
argument|GLhandleARB containerObj
argument_list|,
argument|GLhandleARB obj
argument_list|)
block|;
name|GLhandleARB
name|glCreateProgramObjectARB
argument_list|()
block|;
name|void
name|glCompileShaderARB
argument_list|(
argument|GLhandleARB shaderObj
argument_list|)
block|;
name|void
name|glShaderSourceARB
argument_list|(
argument|GLhandleARB shaderObj
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLcharARB* *string
argument_list|,
argument|const GLint *length
argument_list|)
block|;
name|GLhandleARB
name|glCreateShaderObjectARB
argument_list|(
argument|GLenum shaderType
argument_list|)
block|;
name|void
name|glDetachObjectARB
argument_list|(
argument|GLhandleARB containerObj
argument_list|,
argument|GLhandleARB attachedObj
argument_list|)
block|;
name|GLhandleARB
name|glGetHandleARB
argument_list|(
argument|GLenum pname
argument_list|)
block|;
name|void
name|glDeleteObjectARB
argument_list|(
argument|GLhandleARB obj
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetShaderSourceARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetShaderSourceARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLcharARB *source
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetShaderSourceARB
argument_list|(
name|obj
argument_list|,
name|maxLength
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
block|; }
DECL|function|glGetUniformivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetUniformivARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetUniformivARB
argument_list|(
name|programObj
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetUniformfvARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetUniformfvARB
argument_list|(
name|programObj
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetActiveUniformARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetActiveUniformARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLcharARB *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetActiveUniformARB
argument_list|(
name|programObj
argument_list|,
name|index
argument_list|,
name|maxLength
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetUniformLocationARB
specifier|inline
name|GLint
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetUniformLocationARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|const GLcharARB *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|GetUniformLocationARB
argument_list|(
name|programObj
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetAttachedObjectsARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetAttachedObjectsARB
argument_list|(
argument|GLhandleARB containerObj
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLhandleARB *obj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetAttachedObjectsARB
argument_list|(
name|containerObj
argument_list|,
name|maxCount
argument_list|,
name|count
argument_list|,
name|obj
argument_list|)
block|; }
DECL|function|glGetInfoLogARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetInfoLogARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLcharARB *infoLog
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetInfoLogARB
argument_list|(
name|obj
argument_list|,
name|maxLength
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glGetObjectParameterivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetObjectParameterivARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetObjectParameterivARB
argument_list|(
name|obj
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetObjectParameterfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetObjectParameterfvARB
argument_list|(
argument|GLhandleARB obj
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetObjectParameterfvARB
argument_list|(
name|obj
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniformMatrix4fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniformMatrix4fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix4fvARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniformMatrix3fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix3fvARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniformMatrix2fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|UniformMatrix2fvARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform4ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform4ivARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform3ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform3ivARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform2ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform2ivARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform1ivARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform1ivARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform4fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform4fvARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform3fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform3fvARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform2fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform2fvARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform1fvARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform1fvARB
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform4iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform4iARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform3iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform3iARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform2iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform2iARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform1iARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform1iARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glUniform4fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform4fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform4fARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform3fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform3fARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform2fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform2fARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUniform1fARB
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|Uniform1fARB
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glValidateProgramARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glValidateProgramARB
argument_list|(
argument|GLhandleARB programObj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ValidateProgramARB
argument_list|(
name|programObj
argument_list|)
block|; }
DECL|function|glUseProgramObjectARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glUseProgramObjectARB
argument_list|(
argument|GLhandleARB programObj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|UseProgramObjectARB
argument_list|(
name|programObj
argument_list|)
block|; }
DECL|function|glLinkProgramARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glLinkProgramARB
argument_list|(
argument|GLhandleARB programObj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|LinkProgramARB
argument_list|(
name|programObj
argument_list|)
block|; }
DECL|function|glAttachObjectARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glAttachObjectARB
argument_list|(
argument|GLhandleARB containerObj
argument_list|,
argument|GLhandleARB obj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|AttachObjectARB
argument_list|(
name|containerObj
argument_list|,
name|obj
argument_list|)
block|; }
DECL|function|glCreateProgramObjectARB
specifier|inline
name|GLhandleARB
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glCreateProgramObjectARB
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|CreateProgramObjectARB
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCompileShaderARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glCompileShaderARB
argument_list|(
argument|GLhandleARB shaderObj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|CompileShaderARB
argument_list|(
name|shaderObj
argument_list|)
block|; }
DECL|function|glShaderSourceARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glShaderSourceARB
argument_list|(
argument|GLhandleARB shaderObj
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLcharARB* *string
argument_list|,
argument|const GLint *length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ShaderSourceARB
argument_list|(
name|shaderObj
argument_list|,
name|count
argument_list|,
name|string
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glCreateShaderObjectARB
specifier|inline
name|GLhandleARB
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glCreateShaderObjectARB
argument_list|(
argument|GLenum shaderType
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|CreateShaderObjectARB
argument_list|(
name|shaderType
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDetachObjectARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glDetachObjectARB
argument_list|(
argument|GLhandleARB containerObj
argument_list|,
argument|GLhandleARB attachedObj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|DetachObjectARB
argument_list|(
name|containerObj
argument_list|,
name|attachedObj
argument_list|)
block|; }
DECL|function|glGetHandleARB
specifier|inline
name|GLhandleARB
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glGetHandleARB
argument_list|(
argument|GLenum pname
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|GetHandleARB
argument_list|(
name|pname
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteObjectARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|glDeleteObjectARB
argument_list|(
argument|GLhandleARB obj
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
block|;
name|d
operator|->
name|DeleteObjectARB
argument_list|(
name|obj
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_shader_storage_buffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ShaderStorageBlockBinding
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|storageBlockIndex
operator|,
name|GLuint
name|storageBlockBinding
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_shader_storage_buffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_shader_storage_buffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glShaderStorageBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint storageBlockIndex
argument_list|,
argument|GLuint storageBlockBinding
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_shader_storage_buffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glShaderStorageBlockBinding
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_storage_buffer_object
operator|::
name|glShaderStorageBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint storageBlockIndex
argument_list|,
argument|GLuint storageBlockBinding
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_storage_buffer_object
argument_list|)
block|;
name|d
operator|->
name|ShaderStorageBlockBinding
argument_list|(
name|program
argument_list|,
name|storageBlockIndex
argument_list|,
name|storageBlockBinding
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_shader_subroutinePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramStageiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformSubroutineuiv
argument_list|)
operator|(
name|GLenum
name|shadertype
operator|,
name|GLint
name|location
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformSubroutinesuiv
argument_list|)
operator|(
name|GLenum
name|shadertype
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|indices
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveSubroutineName
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|bufsize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveSubroutineUniformName
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|bufsize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveSubroutineUniformiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|values
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GetSubroutineIndex
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetSubroutineUniformLocation
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_shader_subroutine
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetProgramStageiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|void
name|glGetUniformSubroutineuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glUniformSubroutinesuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *indices
argument_list|)
block|;
name|void
name|glGetActiveSubroutineName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glGetActiveSubroutineUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glGetActiveSubroutineUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|GLuint
name|glGetSubroutineIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|GLint
name|glGetSubroutineUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetProgramStageiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glGetProgramStageiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
name|d
operator|->
name|GetProgramStageiv
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|pname
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetUniformSubroutineuiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glGetUniformSubroutineuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
name|d
operator|->
name|GetUniformSubroutineuiv
argument_list|(
name|shadertype
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniformSubroutinesuiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glUniformSubroutinesuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *indices
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
name|d
operator|->
name|UniformSubroutinesuiv
argument_list|(
name|shadertype
argument_list|,
name|count
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glGetActiveSubroutineName
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glGetActiveSubroutineName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
name|d
operator|->
name|GetActiveSubroutineName
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetActiveSubroutineUniformName
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glGetActiveSubroutineUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
name|d
operator|->
name|GetActiveSubroutineUniformName
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetActiveSubroutineUniformiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glGetActiveSubroutineUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
name|d
operator|->
name|GetActiveSubroutineUniformiv
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetSubroutineIndex
specifier|inline
name|GLuint
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glGetSubroutineIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
return|return
name|d
operator|->
name|GetSubroutineIndex
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetSubroutineUniformLocation
specifier|inline
name|GLint
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|glGetSubroutineUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
block|;
return|return
name|d
operator|->
name|GetSubroutineUniformLocation
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_shading_language_includePrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedStringivARB
argument_list|)
operator|(
name|GLint
name|namelen
expr|,
specifier|const
name|GLchar
operator|*
name|name
expr|,
name|GLenum
name|pname
expr|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedStringARB
argument_list|)
operator|(
name|GLint
name|namelen
expr|,
specifier|const
name|GLchar
operator|*
name|name
expr|,
name|GLsizei
name|bufSize
expr|,
name|GLint
operator|*
name|stringlen
expr|,
name|GLchar
operator|*
name|string
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsNamedStringARB
argument_list|)
operator|(
name|GLint
name|namelen
expr|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompileShaderIncludeARB
argument_list|)
operator|(
name|GLuint
name|shader
expr|,
name|GLsizei
name|count
expr|,
specifier|const
name|GLchar
operator|*
operator|*
name|path
expr|,
specifier|const
name|GLint
operator|*
name|length
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteNamedStringARB
argument_list|)
operator|(
name|GLint
name|namelen
expr|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedStringARB
argument_list|)
operator|(
name|GLenum
name|type
expr|,
name|GLint
name|namelen
expr|,
specifier|const
name|GLchar
operator|*
name|name
expr|,
name|GLint
name|stringlen
expr|,
specifier|const
name|GLchar
operator|*
name|string
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_shading_language_include
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_shading_language_include
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetNamedStringivARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetNamedStringARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *stringlen
argument_list|,
argument|GLchar *string
argument_list|)
block|;
name|GLboolean
name|glIsNamedStringARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glCompileShaderIncludeARB
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* *path
argument_list|,
argument|const GLint *length
argument_list|)
block|;
name|void
name|glDeleteNamedStringARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glNamedStringARB
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|,
argument|GLint stringlen
argument_list|,
argument|const GLchar *string
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_shading_language_include
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetNamedStringivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|glGetNamedStringivARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shading_language_include
argument_list|)
block|;
name|d
operator|->
name|GetNamedStringivARB
argument_list|(
name|namelen
argument_list|,
name|name
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedStringARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|glGetNamedStringARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *stringlen
argument_list|,
argument|GLchar *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shading_language_include
argument_list|)
block|;
name|d
operator|->
name|GetNamedStringARB
argument_list|(
name|namelen
argument_list|,
name|name
argument_list|,
name|bufSize
argument_list|,
name|stringlen
argument_list|,
name|string
argument_list|)
block|; }
DECL|function|glIsNamedStringARB
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|glIsNamedStringARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shading_language_include
argument_list|)
block|;
return|return
name|d
operator|->
name|IsNamedStringARB
argument_list|(
name|namelen
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCompileShaderIncludeARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|glCompileShaderIncludeARB
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* *path
argument_list|,
argument|const GLint *length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shading_language_include
argument_list|)
block|;
name|d
operator|->
name|CompileShaderIncludeARB
argument_list|(
name|shader
argument_list|,
name|count
argument_list|,
name|path
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glDeleteNamedStringARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|glDeleteNamedStringARB
argument_list|(
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shading_language_include
argument_list|)
block|;
name|d
operator|->
name|DeleteNamedStringARB
argument_list|(
name|namelen
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glNamedStringARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|glNamedStringARB
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint namelen
argument_list|,
argument|const GLchar *name
argument_list|,
argument|GLint stringlen
argument_list|,
argument|const GLchar *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shading_language_include
argument_list|)
block|;
name|d
operator|->
name|NamedStringARB
argument_list|(
name|type
argument_list|,
name|namelen
argument_list|,
name|name
argument_list|,
name|stringlen
argument_list|,
name|string
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_syncPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetSynciv
argument_list|)
operator|(
name|GLsync
name|sync
operator|,
name|GLenum
name|pname
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLint
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetInteger64v
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint64
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WaitSync
argument_list|)
operator|(
name|GLsync
name|sync
operator|,
name|GLbitfield
name|flags
operator|,
name|GLuint64
name|timeout
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP ClientWaitSync
argument_list|)
operator|(
name|GLsync
name|sync
operator|,
name|GLbitfield
name|flags
operator|,
name|GLuint64
name|timeout
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteSync
argument_list|)
operator|(
name|GLsync
name|sync
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsSync
argument_list|)
operator|(
name|GLsync
name|sync
operator|)
block|;
name|GLsync
argument_list|(
argument|QOPENGLF_APIENTRYP FenceSync
argument_list|)
operator|(
name|GLenum
name|condition
operator|,
name|GLbitfield
name|flags
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_sync
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_sync
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetSynciv
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|void
name|glGetInteger64v
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|;
name|GLenum
name|glClientWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|;
name|void
name|glDeleteSync
argument_list|(
argument|GLsync sync
argument_list|)
block|;
name|GLboolean
name|glIsSync
argument_list|(
argument|GLsync sync
argument_list|)
block|;
name|GLsync
name|glFenceSync
argument_list|(
argument|GLenum condition
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_sync
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetSynciv
specifier|inline
name|void
name|QOpenGLExtension_ARB_sync
operator|::
name|glGetSynciv
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
block|;
name|d
operator|->
name|GetSynciv
argument_list|(
name|sync
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetInteger64v
specifier|inline
name|void
name|QOpenGLExtension_ARB_sync
operator|::
name|glGetInteger64v
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
block|;
name|d
operator|->
name|GetInteger64v
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glWaitSync
specifier|inline
name|void
name|QOpenGLExtension_ARB_sync
operator|::
name|glWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
block|;
name|d
operator|->
name|WaitSync
argument_list|(
name|sync
argument_list|,
name|flags
argument_list|,
name|timeout
argument_list|)
block|; }
DECL|function|glClientWaitSync
specifier|inline
name|GLenum
name|QOpenGLExtension_ARB_sync
operator|::
name|glClientWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
block|;
return|return
name|d
operator|->
name|ClientWaitSync
argument_list|(
name|sync
argument_list|,
name|flags
argument_list|,
name|timeout
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteSync
specifier|inline
name|void
name|QOpenGLExtension_ARB_sync
operator|::
name|glDeleteSync
argument_list|(
argument|GLsync sync
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
block|;
name|d
operator|->
name|DeleteSync
argument_list|(
name|sync
argument_list|)
block|; }
DECL|function|glIsSync
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_sync
operator|::
name|glIsSync
argument_list|(
argument|GLsync sync
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
block|;
return|return
name|d
operator|->
name|IsSync
argument_list|(
name|sync
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glFenceSync
specifier|inline
name|GLsync
name|QOpenGLExtension_ARB_sync
operator|::
name|glFenceSync
argument_list|(
argument|GLenum condition
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
block|;
return|return
name|d
operator|->
name|FenceSync
argument_list|(
name|condition
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_tessellation_shaderPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PatchParameterfv
argument_list|)
operator|(
name|GLenum
name|pname
expr|,
specifier|const
name|GLfloat
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PatchParameteri
argument_list|)
operator|(
name|GLenum
name|pname
expr|,
name|GLint
name|value
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_tessellation_shader
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_tessellation_shader
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPatchParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *values
argument_list|)
block|;
name|void
name|glPatchParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_tessellation_shader
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPatchParameterfv
specifier|inline
name|void
name|QOpenGLExtension_ARB_tessellation_shader
operator|::
name|glPatchParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_tessellation_shader
argument_list|)
block|;
name|d
operator|->
name|PatchParameterfv
argument_list|(
name|pname
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPatchParameteri
specifier|inline
name|void
name|QOpenGLExtension_ARB_tessellation_shader
operator|::
name|glPatchParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_tessellation_shader
argument_list|)
block|;
name|d
operator|->
name|PatchParameteri
argument_list|(
name|pname
argument_list|,
name|value
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_texture_buffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexBufferARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLuint
name|buffer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_texture_buffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_texture_buffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexBufferARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_texture_buffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexBufferARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_buffer_object
operator|::
name|glTexBufferARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_buffer_object
argument_list|)
block|;
name|d
operator|->
name|TexBufferARB
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_texture_buffer_rangePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexBufferRange
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_texture_buffer_range
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_texture_buffer_range
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_texture_buffer_range
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexBufferRange
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_buffer_range
operator|::
name|glTexBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_buffer_range
argument_list|)
block|;
name|d
operator|->
name|TexBufferRange
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_texture_compressionPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCompressedTexImageARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLvoid
operator|*
name|img
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexSubImage1DARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexSubImage2DARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexSubImage3DARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexImage1DARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexImage2DARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexImage3DARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_texture_compression
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_texture_compression
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetCompressedTexImageARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLvoid *img
argument_list|)
block|;
name|void
name|glCompressedTexSubImage1DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage2DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage3DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage1DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage2DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage3DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetCompressedTexImageARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|glGetCompressedTexImageARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLvoid *img
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|;
name|d
operator|->
name|GetCompressedTexImageARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage1DARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|glCompressedTexSubImage1DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|;
name|d
operator|->
name|CompressedTexSubImage1DARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage2DARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|glCompressedTexSubImage2DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|;
name|d
operator|->
name|CompressedTexSubImage2DARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage3DARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|glCompressedTexSubImage3DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|;
name|d
operator|->
name|CompressedTexSubImage3DARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage1DARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|glCompressedTexImage1DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|;
name|d
operator|->
name|CompressedTexImage1DARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage2DARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|glCompressedTexImage2DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|;
name|d
operator|->
name|CompressedTexImage2DARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage3DARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|glCompressedTexImage3DARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
block|;
name|d
operator|->
name|CompressedTexImage3DARB
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_texture_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SampleMaski
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLbitfield
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultisamplefv
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
operator|*
name|val
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexImage3DMultisample
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLint
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLboolean
name|fixedsamplelocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexImage2DMultisample
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLint
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLboolean
name|fixedsamplelocations
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_texture_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_texture_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSampleMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glGetMultisamplefv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|;
name|void
name|glTexImage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTexImage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_texture_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSampleMaski
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_multisample
operator|::
name|glSampleMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLbitfield mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|SampleMaski
argument_list|(
name|index
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glGetMultisamplefv
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_multisample
operator|::
name|glGetMultisamplefv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|GetMultisamplefv
argument_list|(
name|pname
argument_list|,
name|index
argument_list|,
name|val
argument_list|)
block|; }
DECL|function|glTexImage3DMultisample
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_multisample
operator|::
name|glTexImage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TexImage3DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTexImage2DMultisample
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_multisample
operator|::
name|glTexImage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TexImage2DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_texture_storagePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage3D
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage2D
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage1D
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_texture_storage
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_texture_storage
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexStorage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|void
name|glTexStorage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTexStorage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_texture_storage
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexStorage3D
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_storage
operator|::
name|glTexStorage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TexStorage3D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
DECL|function|glTexStorage2D
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_storage
operator|::
name|glTexStorage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TexStorage2D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTexStorage1D
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_storage
operator|::
name|glTexStorage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TexStorage1D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_texture_storage_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage3DMultisample
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLboolean
name|fixedsamplelocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage2DMultisample
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLboolean
name|fixedsamplelocations
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_texture_storage_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_texture_storage_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexStorage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTexStorage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_texture_storage_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexStorage3DMultisample
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_storage_multisample
operator|::
name|glTexStorage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_storage_multisample
argument_list|)
block|;
name|d
operator|->
name|TexStorage3DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTexStorage2DMultisample
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_storage_multisample
operator|::
name|glTexStorage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_storage_multisample
argument_list|)
block|;
name|d
operator|->
name|TexStorage2DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_texture_viewPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureView
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|origtexture
operator|,
name|GLenum
name|internalformat
operator|,
name|GLuint
name|minlevel
operator|,
name|GLuint
name|numlevels
operator|,
name|GLuint
name|minlayer
operator|,
name|GLuint
name|numlayers
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_texture_view
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_texture_view
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTextureView
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint origtexture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint minlevel
argument_list|,
argument|GLuint numlevels
argument_list|,
argument|GLuint minlayer
argument_list|,
argument|GLuint numlayers
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_texture_view
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTextureView
specifier|inline
name|void
name|QOpenGLExtension_ARB_texture_view
operator|::
name|glTextureView
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint origtexture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint minlevel
argument_list|,
argument|GLuint numlevels
argument_list|,
argument|GLuint minlayer
argument_list|,
argument|GLuint numlayers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_view
argument_list|)
block|;
name|d
operator|->
name|TextureView
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|origtexture
argument_list|,
name|internalformat
argument_list|,
name|minlevel
argument_list|,
name|numlevels
argument_list|,
name|minlayer
argument_list|,
name|numlayers
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_timer_queryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryObjectui64v
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLuint64
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryObjecti64v
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLint64
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP QueryCounter
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|target
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_timer_query
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_timer_query
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetQueryObjectui64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64 *params
argument_list|)
block|;
name|void
name|glGetQueryObjecti64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glQueryCounter
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum target
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_timer_query
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetQueryObjectui64v
specifier|inline
name|void
name|QOpenGLExtension_ARB_timer_query
operator|::
name|glGetQueryObjectui64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64 *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_timer_query
argument_list|)
block|;
name|d
operator|->
name|GetQueryObjectui64v
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjecti64v
specifier|inline
name|void
name|QOpenGLExtension_ARB_timer_query
operator|::
name|glGetQueryObjecti64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_timer_query
argument_list|)
block|;
name|d
operator|->
name|GetQueryObjecti64v
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glQueryCounter
specifier|inline
name|void
name|QOpenGLExtension_ARB_timer_query
operator|::
name|glQueryCounter
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_timer_query
argument_list|)
block|;
name|d
operator|->
name|QueryCounter
argument_list|(
name|id
argument_list|,
name|target
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_transform_feedback2Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawTransformFeedback
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ResumeTransformFeedback
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PauseTransformFeedback
argument_list|)
operator|(
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsTransformFeedback
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenTransformFeedbacks
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|ids
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteTransformFeedbacks
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindTransformFeedback
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_transform_feedback2
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawTransformFeedback
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|void
name|glResumeTransformFeedback
argument_list|()
block|;
name|void
name|glPauseTransformFeedback
argument_list|()
block|;
name|GLboolean
name|glIsTransformFeedback
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glGenTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|void
name|glDeleteTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glBindTransformFeedback
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawTransformFeedback
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|glDrawTransformFeedback
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|DrawTransformFeedback
argument_list|(
name|mode
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glResumeTransformFeedback
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|glResumeTransformFeedback
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|ResumeTransformFeedback
argument_list|()
block|; }
DECL|function|glPauseTransformFeedback
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|glPauseTransformFeedback
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|PauseTransformFeedback
argument_list|()
block|; }
DECL|function|glIsTransformFeedback
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|glIsTransformFeedback
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|;
return|return
name|d
operator|->
name|IsTransformFeedback
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenTransformFeedbacks
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|glGenTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|GenTransformFeedbacks
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glDeleteTransformFeedbacks
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|glDeleteTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|DeleteTransformFeedbacks
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glBindTransformFeedback
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|glBindTransformFeedback
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|BindTransformFeedback
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_transform_feedback3Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryIndexediv
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndQueryIndexed
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginQueryIndexed
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawTransformFeedbackStream
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|id
operator|,
name|GLuint
name|stream
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_transform_feedback3
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_transform_feedback3
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetQueryIndexediv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glBeginQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|void
name|glDrawTransformFeedbackStream
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_transform_feedback3
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetQueryIndexediv
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback3
operator|::
name|glGetQueryIndexediv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback3
argument_list|)
block|;
name|d
operator|->
name|GetQueryIndexediv
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndQueryIndexed
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback3
operator|::
name|glEndQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback3
argument_list|)
block|;
name|d
operator|->
name|EndQueryIndexed
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glBeginQueryIndexed
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback3
operator|::
name|glBeginQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback3
argument_list|)
block|;
name|d
operator|->
name|BeginQueryIndexed
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glDrawTransformFeedbackStream
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback3
operator|::
name|glDrawTransformFeedbackStream
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback3
argument_list|)
block|;
name|d
operator|->
name|DrawTransformFeedbackStream
argument_list|(
name|mode
argument_list|,
name|id
argument_list|,
name|stream
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_transform_feedback_instancedPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawTransformFeedbackStreamInstanced
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|id
operator|,
name|GLuint
name|stream
operator|,
name|GLsizei
name|instancecount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawTransformFeedbackInstanced
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|id
operator|,
name|GLsizei
name|instancecount
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_transform_feedback_instanced
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_transform_feedback_instanced
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawTransformFeedbackStreamInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
name|void
name|glDrawTransformFeedbackInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_transform_feedback_instanced
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawTransformFeedbackStreamInstanced
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback_instanced
operator|::
name|glDrawTransformFeedbackStreamInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback_instanced
argument_list|)
block|;
name|d
operator|->
name|DrawTransformFeedbackStreamInstanced
argument_list|(
name|mode
argument_list|,
name|id
argument_list|,
name|stream
argument_list|,
name|instancecount
argument_list|)
block|; }
DECL|function|glDrawTransformFeedbackInstanced
specifier|inline
name|void
name|QOpenGLExtension_ARB_transform_feedback_instanced
operator|::
name|glDrawTransformFeedbackInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback_instanced
argument_list|)
block|;
name|d
operator|->
name|DrawTransformFeedbackInstanced
argument_list|(
name|mode
argument_list|,
name|id
argument_list|,
name|instancecount
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_transpose_matrixPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultTransposeMatrixdARB
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultTransposeMatrixfARB
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LoadTransposeMatrixdARB
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LoadTransposeMatrixfARB
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|m
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_transpose_matrix
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_transpose_matrix
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultTransposeMatrixdARB
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glMultTransposeMatrixfARB
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadTransposeMatrixdARB
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadTransposeMatrixfARB
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_transpose_matrix
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultTransposeMatrixdARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_transpose_matrix
operator|::
name|glMultTransposeMatrixdARB
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transpose_matrix
argument_list|)
block|;
name|d
operator|->
name|MultTransposeMatrixdARB
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMultTransposeMatrixfARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_transpose_matrix
operator|::
name|glMultTransposeMatrixfARB
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transpose_matrix
argument_list|)
block|;
name|d
operator|->
name|MultTransposeMatrixfARB
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadTransposeMatrixdARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_transpose_matrix
operator|::
name|glLoadTransposeMatrixdARB
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transpose_matrix
argument_list|)
block|;
name|d
operator|->
name|LoadTransposeMatrixdARB
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadTransposeMatrixfARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_transpose_matrix
operator|::
name|glLoadTransposeMatrixfARB
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transpose_matrix
argument_list|)
block|;
name|d
operator|->
name|LoadTransposeMatrixfARB
argument_list|(
name|m
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_uniform_buffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformBlockBinding
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|uniformBlockIndex
operator|,
name|GLuint
name|uniformBlockBinding
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveUniformBlockName
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|uniformBlockIndex
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|uniformBlockName
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveUniformBlockiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|uniformBlockIndex
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformBlockIndex
argument_list|)
operator|(
name|GLuint
name|program
operator|,
specifier|const
name|GLchar
operator|*
name|uniformBlockName
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveUniformName
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|uniformIndex
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|uniformName
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveUniformsiv
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLsizei
name|uniformCount
operator|,
specifier|const
name|GLuint
operator|*
name|uniformIndices
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformIndices
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLsizei
name|uniformCount
operator|,
specifier|const
name|GLchar
operator|*
specifier|const
operator|*
name|uniformNames
operator|,
name|GLuint
operator|*
name|uniformIndices
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_uniform_buffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glUniformBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLuint uniformBlockBinding
argument_list|)
block|;
name|void
name|glGetActiveUniformBlockName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformBlockName
argument_list|)
block|;
name|void
name|glGetActiveUniformBlockiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLuint
name|glGetUniformBlockIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *uniformBlockName
argument_list|)
block|;
name|void
name|glGetActiveUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformName
argument_list|)
block|;
name|void
name|glGetActiveUniformsiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLuint *uniformIndices
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetUniformIndices
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLchar* const *uniformNames
argument_list|,
argument|GLuint *uniformIndices
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glUniformBlockBinding
specifier|inline
name|void
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|glUniformBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLuint uniformBlockBinding
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|;
name|d
operator|->
name|UniformBlockBinding
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|uniformBlockBinding
argument_list|)
block|; }
DECL|function|glGetActiveUniformBlockName
specifier|inline
name|void
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|glGetActiveUniformBlockName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformBlockName
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetActiveUniformBlockName
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|uniformBlockName
argument_list|)
block|; }
DECL|function|glGetActiveUniformBlockiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|glGetActiveUniformBlockiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetActiveUniformBlockiv
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformBlockIndex
specifier|inline
name|GLuint
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|glGetUniformBlockIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *uniformBlockName
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|GetUniformBlockIndex
argument_list|(
name|program
argument_list|,
name|uniformBlockName
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetActiveUniformName
specifier|inline
name|void
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|glGetActiveUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformName
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetActiveUniformName
argument_list|(
name|program
argument_list|,
name|uniformIndex
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|uniformName
argument_list|)
block|; }
DECL|function|glGetActiveUniformsiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|glGetActiveUniformsiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLuint *uniformIndices
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetActiveUniformsiv
argument_list|(
name|program
argument_list|,
name|uniformCount
argument_list|,
name|uniformIndices
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformIndices
specifier|inline
name|void
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|glGetUniformIndices
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLchar* const *uniformNames
argument_list|,
argument|GLuint *uniformIndices
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetUniformIndices
argument_list|(
name|program
argument_list|,
name|uniformCount
argument_list|,
name|uniformNames
argument_list|,
name|uniformIndices
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_array_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsVertexArray
argument_list|)
operator|(
name|GLuint
name|array
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenVertexArrays
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|arrays
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteVertexArrays
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|arrays
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindVertexArray
argument_list|)
operator|(
name|GLuint
name|array
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_array_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_array_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glIsVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|void
name|glGenVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|;
name|void
name|glDeleteVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|;
name|void
name|glBindVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_array_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIsVertexArray
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_vertex_array_object
operator|::
name|glIsVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_array_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsVertexArray
argument_list|(
name|array
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenVertexArrays
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_array_object
operator|::
name|glGenVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GenVertexArrays
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glDeleteVertexArrays
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_array_object
operator|::
name|glDeleteVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|DeleteVertexArrays
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glBindVertexArray
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_array_object
operator|::
name|glBindVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|BindVertexArray
argument_list|(
name|array
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_attrib_64bitPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribLdv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribLPointer
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4dv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3dv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2dv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1dv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4d
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3d
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2d
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1d
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_attrib_64bit
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetVertexAttribLdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glVertexAttribLPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glVertexAttribL4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexAttribL3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexAttribL2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexAttribL1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribLdv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glGetVertexAttribLdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribLdv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribLPointer
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribLPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribLPointer
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexAttribL4dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL3dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL2dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL1dv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL4d
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribL3d
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribL2d
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribL1d
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|glVertexAttribL1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1d
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_attrib_bindingPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexBindingDivisor
argument_list|)
operator|(
name|GLuint
name|bindingindex
operator|,
name|GLuint
name|divisor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribBinding
argument_list|)
operator|(
name|GLuint
name|attribindex
operator|,
name|GLuint
name|bindingindex
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribLFormat
argument_list|)
operator|(
name|GLuint
name|attribindex
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|relativeoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribIFormat
argument_list|)
operator|(
name|GLuint
name|attribindex
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|relativeoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribFormat
argument_list|)
operator|(
name|GLuint
name|attribindex
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLuint
name|relativeoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindVertexBuffer
argument_list|)
operator|(
name|GLuint
name|bindingindex
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizei
name|stride
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_attrib_binding
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexBindingDivisor
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|;
name|void
name|glVertexAttribBinding
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|;
name|void
name|glVertexAttribLFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexAttribIFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexAttribFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glBindVertexBuffer
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexBindingDivisor
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|glVertexBindingDivisor
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
block|;
name|d
operator|->
name|VertexBindingDivisor
argument_list|(
name|bindingindex
argument_list|,
name|divisor
argument_list|)
block|; }
DECL|function|glVertexAttribBinding
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|glVertexAttribBinding
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
block|;
name|d
operator|->
name|VertexAttribBinding
argument_list|(
name|attribindex
argument_list|,
name|bindingindex
argument_list|)
block|; }
DECL|function|glVertexAttribLFormat
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|glVertexAttribLFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
block|;
name|d
operator|->
name|VertexAttribLFormat
argument_list|(
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexAttribIFormat
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|glVertexAttribIFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
block|;
name|d
operator|->
name|VertexAttribIFormat
argument_list|(
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexAttribFormat
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|glVertexAttribFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
block|;
name|d
operator|->
name|VertexAttribFormat
argument_list|(
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glBindVertexBuffer
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|glBindVertexBuffer
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
block|;
name|d
operator|->
name|BindVertexBuffer
argument_list|(
name|bindingindex
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|stride
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_blendPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexBlendARB
argument_list|)
operator|(
name|GLint
name|count
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightPointerARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightuivARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLuint
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightusvARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLushort
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightubvARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLubyte
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightdvARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLdouble
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightfvARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLfloat
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightivARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLint
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightsvARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLshort
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightbvARB
argument_list|)
operator|(
name|GLint
name|size
operator|,
specifier|const
name|GLbyte
operator|*
name|weights
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_blend
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_blend
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexBlendARB
argument_list|(
argument|GLint count
argument_list|)
block|;
name|void
name|glWeightPointerARB
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glWeightuivARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLuint *weights
argument_list|)
block|;
name|void
name|glWeightusvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLushort *weights
argument_list|)
block|;
name|void
name|glWeightubvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLubyte *weights
argument_list|)
block|;
name|void
name|glWeightdvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLdouble *weights
argument_list|)
block|;
name|void
name|glWeightfvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLfloat *weights
argument_list|)
block|;
name|void
name|glWeightivARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLint *weights
argument_list|)
block|;
name|void
name|glWeightsvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLshort *weights
argument_list|)
block|;
name|void
name|glWeightbvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLbyte *weights
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexBlendARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glVertexBlendARB
argument_list|(
argument|GLint count
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|VertexBlendARB
argument_list|(
name|count
argument_list|)
block|; }
DECL|function|glWeightPointerARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightPointerARB
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightPointerARB
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glWeightuivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightuivARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLuint *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightuivARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glWeightusvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightusvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLushort *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightusvARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glWeightubvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightubvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLubyte *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightubvARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glWeightdvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightdvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLdouble *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightdvARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glWeightfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightfvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLfloat *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightfvARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glWeightivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightivARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLint *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightivARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glWeightsvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightsvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLshort *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightsvARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glWeightbvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|glWeightbvARB
argument_list|(
argument|GLint size
argument_list|,
argument|const GLbyte *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
block|;
name|d
operator|->
name|WeightbvARB
argument_list|(
name|size
argument_list|,
name|weights
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_buffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetBufferPointervARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetBufferParameterivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP UnmapBufferARB
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|GLvoid
operator|*
operator|(
name|QOPENGLF_APIENTRYP
name|MapBufferARB
operator|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|access
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetBufferSubDataARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLintptrARB
name|offset
operator|,
name|GLsizeiptrARB
name|size
operator|,
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BufferSubDataARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLintptrARB
name|offset
operator|,
name|GLsizeiptrARB
name|size
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BufferDataARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizeiptrARB
name|size
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|,
name|GLenum
name|usage
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsBufferARB
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenBuffersARB
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|buffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteBuffersARB
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|buffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindBufferARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|buffer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_buffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetBufferPointervARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glGetBufferParameterivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLboolean
name|glUnmapBufferARB
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapBufferARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|void
name|glGetBufferSubDataARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptrARB offset
argument_list|,
argument|GLsizeiptrARB size
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glBufferSubDataARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptrARB offset
argument_list|,
argument|GLsizeiptrARB size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glBufferDataARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptrARB size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|GLboolean
name|glIsBufferARB
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGenBuffersARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|;
name|void
name|glDeleteBuffersARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|;
name|void
name|glBindBufferARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetBufferPointervARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glGetBufferPointervARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetBufferPointervARB
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetBufferParameterivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glGetBufferParameterivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetBufferParameterivARB
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUnmapBufferARB
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glUnmapBufferARB
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|UnmapBufferARB
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMapBufferARB
specifier|inline
name|GLvoid
operator|*
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glMapBufferARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|MapBufferARB
argument_list|(
name|target
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetBufferSubDataARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glGetBufferSubDataARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptrARB offset
argument_list|,
argument|GLsizeiptrARB size
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GetBufferSubDataARB
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferSubDataARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glBufferSubDataARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptrARB offset
argument_list|,
argument|GLsizeiptrARB size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|BufferSubDataARB
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferDataARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glBufferDataARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptrARB size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|BufferDataARB
argument_list|(
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|; }
DECL|function|glIsBufferARB
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glIsBufferARB
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsBufferARB
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenBuffersARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glGenBuffersARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|GenBuffersARB
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glDeleteBuffersARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glDeleteBuffersARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|DeleteBuffersARB
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glBindBufferARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|glBindBufferARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
block|;
name|d
operator|->
name|BindBufferARB
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_programPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsProgramARB
argument_list|)
operator|(
name|GLuint
name|program
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribPointervARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribivARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribfvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribdvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramStringARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
name|string
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramivARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramLocalParameterfvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramLocalParameterdvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramEnvParameterfvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramEnvParameterdvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameter4fvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameter4fARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameter4dvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameter4dARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameter4fvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameter4fARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameter4dvARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameter4dARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenProgramsARB
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|programs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteProgramsARB
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|programs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindProgramARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|program
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramStringARB
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLvoid
operator|*
name|string
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DisableVertexAttribArrayARB
argument_list|)
operator|(
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EnableVertexAttribArrayARB
argument_list|)
operator|(
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribPointerARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4usvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLushort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4uivARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLuint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4ubvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLubyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4svARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4sARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|,
name|GLshort
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4ivARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4fvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4fARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4dvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4dARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4bvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLbyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4NusvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLushort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4NuivARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLuint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4NubvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLubyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4NubARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLubyte
name|x
operator|,
name|GLubyte
name|y
operator|,
name|GLubyte
name|z
operator|,
name|GLubyte
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4NsvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4NivARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4NbvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLbyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3svARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3sARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3fvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3fARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3dvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3dARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2svARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2sARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2fvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2fARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2dvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2dARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1svARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1sARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1fvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1fARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1dvARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1dARB
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_program
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_program
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glIsProgramARB
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glGetVertexAttribPointervARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|;
name|void
name|glGetVertexAttribivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribfvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetVertexAttribdvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetProgramStringARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *string
argument_list|)
block|;
name|void
name|glGetProgramivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramLocalParameterfvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetProgramLocalParameterdvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetProgramEnvParameterfvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetProgramEnvParameterdvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glProgramLocalParameter4fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glProgramLocalParameter4fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glProgramLocalParameter4dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *params
argument_list|)
block|;
name|void
name|glProgramLocalParameter4dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glProgramEnvParameter4fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glProgramEnvParameter4fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glProgramEnvParameter4dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *params
argument_list|)
block|;
name|void
name|glProgramEnvParameter4dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glGenProgramsARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *programs
argument_list|)
block|;
name|void
name|glDeleteProgramsARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|)
block|;
name|void
name|glBindProgramARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|void
name|glProgramStringARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLvoid *string
argument_list|)
block|;
name|void
name|glDisableVertexAttribArrayARB
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glEnableVertexAttribArrayARB
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glVertexAttribPointerARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glVertexAttrib4usvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4uivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4ubvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glVertexAttrib4ivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib4fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glVertexAttrib4dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib4dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexAttrib4bvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4NusvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4NuivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4NubvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4NubARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|;
name|void
name|glVertexAttrib4NsvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4NivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4NbvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib3svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib3sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glVertexAttrib3fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib3fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glVertexAttrib3dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib3dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexAttrib2svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib2sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glVertexAttrib2fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib2fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glVertexAttrib2dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib2dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexAttrib1svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib1sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|;
name|void
name|glVertexAttrib1fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib1fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|;
name|void
name|glVertexAttrib1dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib1dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIsProgramARB
specifier|inline
name|GLboolean
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glIsProgramARB
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
return|return
name|d
operator|->
name|IsProgramARB
argument_list|(
name|program
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribPointervARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetVertexAttribPointervARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribPointervARB
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glGetVertexAttribivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetVertexAttribivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribivARB
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetVertexAttribfvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribfvARB
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribdvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetVertexAttribdvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribdvARB
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramStringARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetProgramStringARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramStringARB
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|string
argument_list|)
block|; }
DECL|function|glGetProgramivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetProgramivARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramivARB
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramLocalParameterfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetProgramLocalParameterfvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramLocalParameterfvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramLocalParameterdvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetProgramLocalParameterdvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramLocalParameterdvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramEnvParameterfvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetProgramEnvParameterfvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramEnvParameterfvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramEnvParameterdvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGetProgramEnvParameterdvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramEnvParameterdvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramLocalParameter4fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramLocalParameter4fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameter4fvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramLocalParameter4fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramLocalParameter4fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameter4fARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramLocalParameter4dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramLocalParameter4dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameter4dvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramLocalParameter4dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramLocalParameter4dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameter4dARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramEnvParameter4fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramEnvParameter4fvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameter4fvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParameter4fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramEnvParameter4fARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameter4fARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramEnvParameter4dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramEnvParameter4dvARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameter4dvARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParameter4dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramEnvParameter4dARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameter4dARB
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glGenProgramsARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glGenProgramsARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *programs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GenProgramsARB
argument_list|(
name|n
argument_list|,
name|programs
argument_list|)
block|; }
DECL|function|glDeleteProgramsARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glDeleteProgramsARB
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|DeleteProgramsARB
argument_list|(
name|n
argument_list|,
name|programs
argument_list|)
block|; }
DECL|function|glBindProgramARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glBindProgramARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|BindProgramARB
argument_list|(
name|target
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glProgramStringARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glProgramStringARB
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLvoid *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramStringARB
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|len
argument_list|,
name|string
argument_list|)
block|; }
DECL|function|glDisableVertexAttribArrayARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glDisableVertexAttribArrayARB
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|DisableVertexAttribArrayARB
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glEnableVertexAttribArrayARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glEnableVertexAttribArrayARB
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|EnableVertexAttribArrayARB
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glVertexAttribPointerARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttribPointerARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribPointerARB
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexAttrib4usvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4usvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4usvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4uivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4uivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4uivARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4ubvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4ubvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4ubvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4svARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4sARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4ivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4ivARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4fvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4fARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4dvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4dARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4bvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4bvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4bvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4NusvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4NusvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4NusvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4NuivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4NuivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4NuivARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4NubvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4NubvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4NubvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4NubARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4NubARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4NubARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4NsvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4NsvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4NsvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4NivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4NivARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4NivARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4NbvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib4NbvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4NbvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib3svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3svARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib3sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3sARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib3fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3fvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib3fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3fARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib3dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3dvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib3dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3dARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib2svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib2svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2svARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib2sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2sARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib2fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2fvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib2fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2fARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib2dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2dvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib2dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2dARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib1svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib1svARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1svARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib1sARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1sARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib1fvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1fvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib1fARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1fARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib1dvARB
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1dvARB
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|glVertexAttrib1dARB
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1dARB
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_shaderPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetAttribLocationARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|,
specifier|const
name|GLcharARB
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveAttribARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|maxLength
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLint
operator|*
name|size
operator|,
name|GLenum
operator|*
name|type
operator|,
name|GLcharARB
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindAttribLocationARB
argument_list|)
operator|(
name|GLhandleARB
name|programObj
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLcharARB
operator|*
name|name
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_shader
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_shader
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLint
name|glGetAttribLocationARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|const GLcharARB *name
argument_list|)
block|;
name|void
name|glGetActiveAttribARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLcharARB *name
argument_list|)
block|;
name|void
name|glBindAttribLocationARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLcharARB *name
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_shader
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetAttribLocationARB
specifier|inline
name|GLint
name|QOpenGLExtension_ARB_vertex_shader
operator|::
name|glGetAttribLocationARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|const GLcharARB *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|GetAttribLocationARB
argument_list|(
name|programObj
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetActiveAttribARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_shader
operator|::
name|glGetActiveAttribARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei maxLength
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLcharARB *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetActiveAttribARB
argument_list|(
name|programObj
argument_list|,
name|index
argument_list|,
name|maxLength
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glBindAttribLocationARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_shader
operator|::
name|glBindAttribLocationARB
argument_list|(
argument|GLhandleARB programObj
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLcharARB *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|BindAttribLocationARB
argument_list|(
name|programObj
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_revPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP4uiv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP4ui
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLuint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP3uiv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP3ui
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLuint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP2uiv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP2ui
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLuint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP1uiv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribP1ui
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLuint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColorP3uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|color
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColorP3ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|color
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorP4uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|color
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorP4ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|color
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorP3uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|color
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorP3ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|color
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalP3uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalP3ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP4uiv
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP4ui
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP3uiv
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP3ui
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP2uiv
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP2ui
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP1uiv
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordP1ui
argument_list|)
operator|(
name|GLenum
name|texture
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP4uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP4ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP3uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP3ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP2uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP2ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP1uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordP1ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexP4uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexP4ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexP3uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexP3ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexP2uiv
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexP2ui
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|value
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexAttribP4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP4ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexAttribP3uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP3ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexAttribP2uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP2ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexAttribP1uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP1ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glSecondaryColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|;
name|void
name|glSecondaryColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|;
name|void
name|glColorP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|;
name|void
name|glColorP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|;
name|void
name|glColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|;
name|void
name|glColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|;
name|void
name|glNormalP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glNormalP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP4uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP4ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP3uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP3ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP2uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP2ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP1uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP1ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP1uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP1ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glVertexP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexAttribP4uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP4uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP4ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP4ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP4ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP3uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP3uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP3ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP3ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP2uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP2uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP2uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP2ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP2ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP2ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP1uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP1uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP1uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP1ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexAttribP1ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexAttribP1ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glSecondaryColorP3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glSecondaryColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|SecondaryColorP3uiv
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glSecondaryColorP3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glSecondaryColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|SecondaryColorP3ui
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP4uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glColorP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|ColorP4uiv
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP4ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glColorP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|ColorP4ui
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|ColorP3uiv
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|ColorP3ui
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glNormalP3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glNormalP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|NormalP3uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glNormalP3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glNormalP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|NormalP3ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP4uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP4uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP4uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP4ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP4ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP4ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP3uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP3uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP3ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP3ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP2uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP2uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP2uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP2ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP2ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP2ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP1uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP1uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP1uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP1ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glMultiTexCoordP1ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordP1ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP4uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP4uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP4ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP4ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP3uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP3ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP2uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP2uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP2ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP2ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP1uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP1uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP1uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP1ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glTexCoordP1ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|TexCoordP1ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexP4uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexP4uiv
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP4ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexP4ui
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP3uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexP3uiv
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP3ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexP3ui
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP2uiv
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexP2uiv
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP2ui
specifier|inline
name|void
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|glVertexP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
block|;
name|d
operator|->
name|VertexP2ui
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_viewport_arrayPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetDoublei_v
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFloati_v
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DepthRangeIndexed
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|n
operator|,
name|GLdouble
name|f
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DepthRangeArrayv
argument_list|)
operator|(
name|GLuint
name|first
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ScissorIndexedv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ScissorIndexed
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|left
operator|,
name|GLint
name|bottom
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ScissorArrayv
argument_list|)
operator|(
name|GLuint
name|first
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ViewportIndexedfv
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ViewportIndexedf
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|w
operator|,
name|GLfloat
name|h
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ViewportArrayv
argument_list|)
operator|(
name|GLuint
name|first
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_viewport_array
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_viewport_array
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetDoublei_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *data
argument_list|)
block|;
name|void
name|glGetFloati_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *data
argument_list|)
block|;
name|void
name|glDepthRangeIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble n
argument_list|,
argument|GLdouble f
argument_list|)
block|;
name|void
name|glDepthRangeArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glScissorIndexedv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glScissorIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint left
argument_list|,
argument|GLint bottom
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glScissorArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glViewportIndexedfv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glViewportIndexedf
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat w
argument_list|,
argument|GLfloat h
argument_list|)
block|;
name|void
name|glViewportArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetDoublei_v
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glGetDoublei_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|GetDoublei_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetFloati_v
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glGetFloati_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|GetFloati_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glDepthRangeIndexed
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glDepthRangeIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble n
argument_list|,
argument|GLdouble f
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|DepthRangeIndexed
argument_list|(
name|index
argument_list|,
name|n
argument_list|,
name|f
argument_list|)
block|; }
DECL|function|glDepthRangeArrayv
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glDepthRangeArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|DepthRangeArrayv
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glScissorIndexedv
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glScissorIndexedv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|ScissorIndexedv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glScissorIndexed
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glScissorIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint left
argument_list|,
argument|GLint bottom
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|ScissorIndexed
argument_list|(
name|index
argument_list|,
name|left
argument_list|,
name|bottom
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glScissorArrayv
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glScissorArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|ScissorArrayv
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glViewportIndexedfv
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glViewportIndexedfv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|ViewportIndexedfv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glViewportIndexedf
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glViewportIndexedf
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat w
argument_list|,
argument|GLfloat h
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|ViewportIndexedf
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
block|; }
DECL|function|glViewportArrayv
specifier|inline
name|void
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|glViewportArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
block|;
name|d
operator|->
name|ViewportArrayv
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ARB_window_posPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3svARB
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3sARB
argument_list|)
operator|(
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3ivARB
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3iARB
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3fvARB
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3fARB
argument_list|)
operator|(
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3dvARB
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3dARB
argument_list|)
operator|(
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2svARB
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2sARB
argument_list|)
operator|(
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2ivARB
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2iARB
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2fvARB
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2fARB
argument_list|)
operator|(
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2dvARB
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2dARB
argument_list|)
operator|(
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ARB_window_pos
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ARB_window_pos
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glWindowPos3svARB
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3sARB
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glWindowPos3ivARB
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3iARB
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glWindowPos3fvARB
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3fARB
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glWindowPos3dvARB
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3dARB
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glWindowPos2svARB
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2sARB
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glWindowPos2ivARB
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2iARB
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glWindowPos2fvARB
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2fARB
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glWindowPos2dvARB
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2dARB
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ARB_window_pos
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glWindowPos3svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3svARB
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3svARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3sARB
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3sARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3ivARB
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3ivARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3iARB
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3iARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3fvARB
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3fvARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3fARB
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3fARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3dvARB
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3dvARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos3dARB
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3dARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos2svARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2svARB
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2svARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2sARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2sARB
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2sARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2ivARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2ivARB
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2ivARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2iARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2iARB
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2iARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2fvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2fvARB
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2fvARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2fARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2fARB
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2fARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2dvARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2dvARB
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2dvARB
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2dARB
specifier|inline
name|void
name|QOpenGLExtension_ARB_window_pos
operator|::
name|glWindowPos2dARB
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2dARB
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ATI_draw_buffersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawBuffersATI
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLenum
operator|*
name|bufs
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_draw_buffers
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_draw_buffers
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawBuffersATI
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_draw_buffers
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawBuffersATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_draw_buffers
operator|::
name|glDrawBuffersATI
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_draw_buffers
argument_list|)
block|;
name|d
operator|->
name|DrawBuffersATI
argument_list|(
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ATI_element_arrayPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawRangeElementArrayATI
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|start
operator|,
name|GLuint
name|end
operator|,
name|GLsizei
name|count
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementArrayATI
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ElementPointerATI
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_element_array
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_element_array
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawRangeElementArrayATI
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|)
block|;
name|void
name|glDrawElementArrayATI
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|)
block|;
name|void
name|glElementPointerATI
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_element_array
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawRangeElementArrayATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_element_array
operator|::
name|glDrawRangeElementArrayATI
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_element_array
argument_list|)
block|;
name|d
operator|->
name|DrawRangeElementArrayATI
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|)
block|; }
DECL|function|glDrawElementArrayATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_element_array
operator|::
name|glDrawElementArrayATI
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_element_array
argument_list|)
block|;
name|d
operator|->
name|DrawElementArrayATI
argument_list|(
name|mode
argument_list|,
name|count
argument_list|)
block|; }
DECL|function|glElementPointerATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_element_array
operator|::
name|glElementPointerATI
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_element_array
argument_list|)
block|;
name|d
operator|->
name|ElementPointerATI
argument_list|(
name|type
argument_list|,
name|pointer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ATI_envmap_bumpmapPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTexBumpParameterfvATI
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTexBumpParameterivATI
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexBumpParameterfvATI
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexBumpParameterivATI
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_envmap_bumpmap
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_envmap_bumpmap
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetTexBumpParameterfvATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *param
argument_list|)
block|;
name|void
name|glGetTexBumpParameterivATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|;
name|void
name|glTexBumpParameterfvATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|;
name|void
name|glTexBumpParameterivATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_envmap_bumpmap
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetTexBumpParameterfvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_envmap_bumpmap
operator|::
name|glGetTexBumpParameterfvATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_envmap_bumpmap
argument_list|)
block|;
name|d
operator|->
name|GetTexBumpParameterfvATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glGetTexBumpParameterivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_envmap_bumpmap
operator|::
name|glGetTexBumpParameterivATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_envmap_bumpmap
argument_list|)
block|;
name|d
operator|->
name|GetTexBumpParameterivATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexBumpParameterfvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_envmap_bumpmap
operator|::
name|glTexBumpParameterfvATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_envmap_bumpmap
argument_list|)
block|;
name|d
operator|->
name|TexBumpParameterfvATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexBumpParameterivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_envmap_bumpmap
operator|::
name|glTexBumpParameterivATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_envmap_bumpmap
argument_list|)
block|;
name|d
operator|->
name|TexBumpParameterivATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ATI_fragment_shaderPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SetFragmentShaderConstantATI
argument_list|)
operator|(
name|GLuint
name|dst
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP AlphaFragmentOp3ATI
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|dst
operator|,
name|GLuint
name|dstMod
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg1Rep
operator|,
name|GLuint
name|arg1Mod
operator|,
name|GLuint
name|arg2
operator|,
name|GLuint
name|arg2Rep
operator|,
name|GLuint
name|arg2Mod
operator|,
name|GLuint
name|arg3
operator|,
name|GLuint
name|arg3Rep
operator|,
name|GLuint
name|arg3Mod
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP AlphaFragmentOp2ATI
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|dst
operator|,
name|GLuint
name|dstMod
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg1Rep
operator|,
name|GLuint
name|arg1Mod
operator|,
name|GLuint
name|arg2
operator|,
name|GLuint
name|arg2Rep
operator|,
name|GLuint
name|arg2Mod
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP AlphaFragmentOp1ATI
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|dst
operator|,
name|GLuint
name|dstMod
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg1Rep
operator|,
name|GLuint
name|arg1Mod
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorFragmentOp3ATI
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|dst
operator|,
name|GLuint
name|dstMask
operator|,
name|GLuint
name|dstMod
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg1Rep
operator|,
name|GLuint
name|arg1Mod
operator|,
name|GLuint
name|arg2
operator|,
name|GLuint
name|arg2Rep
operator|,
name|GLuint
name|arg2Mod
operator|,
name|GLuint
name|arg3
operator|,
name|GLuint
name|arg3Rep
operator|,
name|GLuint
name|arg3Mod
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorFragmentOp2ATI
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|dst
operator|,
name|GLuint
name|dstMask
operator|,
name|GLuint
name|dstMod
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg1Rep
operator|,
name|GLuint
name|arg1Mod
operator|,
name|GLuint
name|arg2
operator|,
name|GLuint
name|arg2Rep
operator|,
name|GLuint
name|arg2Mod
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorFragmentOp1ATI
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|dst
operator|,
name|GLuint
name|dstMask
operator|,
name|GLuint
name|dstMod
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg1Rep
operator|,
name|GLuint
name|arg1Mod
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SampleMapATI
argument_list|)
operator|(
name|GLuint
name|dst
operator|,
name|GLuint
name|interp
operator|,
name|GLenum
name|swizzle
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PassTexCoordATI
argument_list|)
operator|(
name|GLuint
name|dst
operator|,
name|GLuint
name|coord
operator|,
name|GLenum
name|swizzle
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndFragmentShaderATI
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginFragmentShaderATI
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteFragmentShaderATI
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindFragmentShaderATI
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GenFragmentShadersATI
argument_list|)
operator|(
name|GLuint
name|range
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_fragment_shader
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_fragment_shader
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSetFragmentShaderConstantATI
argument_list|(
argument|GLuint dst
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glAlphaFragmentOp3ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|,
argument|GLuint arg3
argument_list|,
argument|GLuint arg3Rep
argument_list|,
argument|GLuint arg3Mod
argument_list|)
block|;
name|void
name|glAlphaFragmentOp2ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|)
block|;
name|void
name|glAlphaFragmentOp1ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|)
block|;
name|void
name|glColorFragmentOp3ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMask
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|,
argument|GLuint arg3
argument_list|,
argument|GLuint arg3Rep
argument_list|,
argument|GLuint arg3Mod
argument_list|)
block|;
name|void
name|glColorFragmentOp2ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMask
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|)
block|;
name|void
name|glColorFragmentOp1ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMask
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|)
block|;
name|void
name|glSampleMapATI
argument_list|(
argument|GLuint dst
argument_list|,
argument|GLuint interp
argument_list|,
argument|GLenum swizzle
argument_list|)
block|;
name|void
name|glPassTexCoordATI
argument_list|(
argument|GLuint dst
argument_list|,
argument|GLuint coord
argument_list|,
argument|GLenum swizzle
argument_list|)
block|;
name|void
name|glEndFragmentShaderATI
argument_list|()
block|;
name|void
name|glBeginFragmentShaderATI
argument_list|()
block|;
name|void
name|glDeleteFragmentShaderATI
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glBindFragmentShaderATI
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|GLuint
name|glGenFragmentShadersATI
argument_list|(
argument|GLuint range
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSetFragmentShaderConstantATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glSetFragmentShaderConstantATI
argument_list|(
argument|GLuint dst
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|SetFragmentShaderConstantATI
argument_list|(
name|dst
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glAlphaFragmentOp3ATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glAlphaFragmentOp3ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|,
argument|GLuint arg3
argument_list|,
argument|GLuint arg3Rep
argument_list|,
argument|GLuint arg3Mod
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|AlphaFragmentOp3ATI
argument_list|(
name|op
argument_list|,
name|dst
argument_list|,
name|dstMod
argument_list|,
name|arg1
argument_list|,
name|arg1Rep
argument_list|,
name|arg1Mod
argument_list|,
name|arg2
argument_list|,
name|arg2Rep
argument_list|,
name|arg2Mod
argument_list|,
name|arg3
argument_list|,
name|arg3Rep
argument_list|,
name|arg3Mod
argument_list|)
block|; }
DECL|function|glAlphaFragmentOp2ATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glAlphaFragmentOp2ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|AlphaFragmentOp2ATI
argument_list|(
name|op
argument_list|,
name|dst
argument_list|,
name|dstMod
argument_list|,
name|arg1
argument_list|,
name|arg1Rep
argument_list|,
name|arg1Mod
argument_list|,
name|arg2
argument_list|,
name|arg2Rep
argument_list|,
name|arg2Mod
argument_list|)
block|; }
DECL|function|glAlphaFragmentOp1ATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glAlphaFragmentOp1ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|AlphaFragmentOp1ATI
argument_list|(
name|op
argument_list|,
name|dst
argument_list|,
name|dstMod
argument_list|,
name|arg1
argument_list|,
name|arg1Rep
argument_list|,
name|arg1Mod
argument_list|)
block|; }
DECL|function|glColorFragmentOp3ATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glColorFragmentOp3ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMask
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|,
argument|GLuint arg3
argument_list|,
argument|GLuint arg3Rep
argument_list|,
argument|GLuint arg3Mod
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|ColorFragmentOp3ATI
argument_list|(
name|op
argument_list|,
name|dst
argument_list|,
name|dstMask
argument_list|,
name|dstMod
argument_list|,
name|arg1
argument_list|,
name|arg1Rep
argument_list|,
name|arg1Mod
argument_list|,
name|arg2
argument_list|,
name|arg2Rep
argument_list|,
name|arg2Mod
argument_list|,
name|arg3
argument_list|,
name|arg3Rep
argument_list|,
name|arg3Mod
argument_list|)
block|; }
DECL|function|glColorFragmentOp2ATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glColorFragmentOp2ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMask
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg2Rep
argument_list|,
argument|GLuint arg2Mod
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|ColorFragmentOp2ATI
argument_list|(
name|op
argument_list|,
name|dst
argument_list|,
name|dstMask
argument_list|,
name|dstMod
argument_list|,
name|arg1
argument_list|,
name|arg1Rep
argument_list|,
name|arg1Mod
argument_list|,
name|arg2
argument_list|,
name|arg2Rep
argument_list|,
name|arg2Mod
argument_list|)
block|; }
DECL|function|glColorFragmentOp1ATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glColorFragmentOp1ATI
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint dst
argument_list|,
argument|GLuint dstMask
argument_list|,
argument|GLuint dstMod
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg1Rep
argument_list|,
argument|GLuint arg1Mod
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|ColorFragmentOp1ATI
argument_list|(
name|op
argument_list|,
name|dst
argument_list|,
name|dstMask
argument_list|,
name|dstMod
argument_list|,
name|arg1
argument_list|,
name|arg1Rep
argument_list|,
name|arg1Mod
argument_list|)
block|; }
DECL|function|glSampleMapATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glSampleMapATI
argument_list|(
argument|GLuint dst
argument_list|,
argument|GLuint interp
argument_list|,
argument|GLenum swizzle
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|SampleMapATI
argument_list|(
name|dst
argument_list|,
name|interp
argument_list|,
name|swizzle
argument_list|)
block|; }
DECL|function|glPassTexCoordATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glPassTexCoordATI
argument_list|(
argument|GLuint dst
argument_list|,
argument|GLuint coord
argument_list|,
argument|GLenum swizzle
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|PassTexCoordATI
argument_list|(
name|dst
argument_list|,
name|coord
argument_list|,
name|swizzle
argument_list|)
block|; }
DECL|function|glEndFragmentShaderATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glEndFragmentShaderATI
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|EndFragmentShaderATI
argument_list|()
block|; }
DECL|function|glBeginFragmentShaderATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glBeginFragmentShaderATI
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|BeginFragmentShaderATI
argument_list|()
block|; }
DECL|function|glDeleteFragmentShaderATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glDeleteFragmentShaderATI
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|DeleteFragmentShaderATI
argument_list|(
name|id
argument_list|)
block|; }
DECL|function|glBindFragmentShaderATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glBindFragmentShaderATI
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
name|d
operator|->
name|BindFragmentShaderATI
argument_list|(
name|id
argument_list|)
block|; }
DECL|function|glGenFragmentShadersATI
specifier|inline
name|GLuint
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|glGenFragmentShadersATI
argument_list|(
argument|GLuint range
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|GenFragmentShadersATI
argument_list|(
name|range
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_map_object_bufferPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UnmapObjectBufferATI
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|GLvoid
operator|*
operator|(
name|QOPENGLF_APIENTRYP
name|MapObjectBufferATI
operator|)
operator|(
name|GLuint
name|buffer
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_map_object_buffer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_map_object_buffer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glUnmapObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_map_object_buffer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glUnmapObjectBufferATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_map_object_buffer
operator|::
name|glUnmapObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_map_object_buffer
argument_list|)
block|;
name|d
operator|->
name|UnmapObjectBufferATI
argument_list|(
name|buffer
argument_list|)
block|; }
DECL|function|glMapObjectBufferATI
specifier|inline
name|GLvoid
operator|*
name|QOpenGLExtension_ATI_map_object_buffer
operator|::
name|glMapObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_map_object_buffer
argument_list|)
block|;
return|return
name|d
operator|->
name|MapObjectBufferATI
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_pn_trianglesPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PNTrianglesfATI
argument_list|)
operator|(
name|GLenum
name|pname
expr|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PNTrianglesiATI
argument_list|)
operator|(
name|GLenum
name|pname
expr|,
name|GLint
name|param
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_pn_triangles
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_pn_triangles
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPNTrianglesfATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glPNTrianglesiATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_pn_triangles
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPNTrianglesfATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_pn_triangles
operator|::
name|glPNTrianglesfATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_pn_triangles
argument_list|)
block|;
name|d
operator|->
name|PNTrianglesfATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPNTrianglesiATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_pn_triangles
operator|::
name|glPNTrianglesiATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_pn_triangles
argument_list|)
block|;
name|d
operator|->
name|PNTrianglesiATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ATI_separate_stencilPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilFuncSeparateATI
argument_list|)
operator|(
name|GLenum
name|frontfunc
operator|,
name|GLenum
name|backfunc
operator|,
name|GLint
name|ref
operator|,
name|GLuint
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilOpSeparateATI
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|sfail
operator|,
name|GLenum
name|dpfail
operator|,
name|GLenum
name|dppass
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_separate_stencil
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_separate_stencil
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glStencilFuncSeparateATI
argument_list|(
argument|GLenum frontfunc
argument_list|,
argument|GLenum backfunc
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilOpSeparateATI
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_separate_stencil
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glStencilFuncSeparateATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_separate_stencil
operator|::
name|glStencilFuncSeparateATI
argument_list|(
argument|GLenum frontfunc
argument_list|,
argument|GLenum backfunc
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_separate_stencil
argument_list|)
block|;
name|d
operator|->
name|StencilFuncSeparateATI
argument_list|(
name|frontfunc
argument_list|,
name|backfunc
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilOpSeparateATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_separate_stencil
operator|::
name|glStencilOpSeparateATI
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_separate_stencil
argument_list|)
block|;
name|d
operator|->
name|StencilOpSeparateATI
argument_list|(
name|face
argument_list|,
name|sfail
argument_list|,
name|dpfail
argument_list|,
name|dppass
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ATI_vertex_array_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVariantArrayObjectivATI
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVariantArrayObjectfvATI
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantArrayObjectATI
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLuint
name|buffer
operator|,
name|GLuint
name|offset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetArrayObjectivATI
argument_list|)
operator|(
name|GLenum
name|array
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetArrayObjectfvATI
argument_list|)
operator|(
name|GLenum
name|array
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ArrayObjectATI
argument_list|)
operator|(
name|GLenum
name|array
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLuint
name|buffer
operator|,
name|GLuint
name|offset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FreeObjectBufferATI
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectBufferivATI
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectBufferfvATI
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UpdateObjectBufferATI
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLuint
name|offset
operator|,
name|GLsizei
name|size
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|,
name|GLenum
name|preserve
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsObjectBufferATI
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP NewObjectBufferATI
argument_list|)
operator|(
name|GLsizei
name|size
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|,
name|GLenum
name|usage
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_vertex_array_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetVariantArrayObjectivATI
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVariantArrayObjectfvATI
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glVariantArrayObjectATI
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|)
block|;
name|void
name|glGetArrayObjectivATI
argument_list|(
argument|GLenum array
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetArrayObjectfvATI
argument_list|(
argument|GLenum array
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glArrayObjectATI
argument_list|(
argument|GLenum array
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|)
block|;
name|void
name|glFreeObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGetObjectBufferivATI
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetObjectBufferfvATI
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glUpdateObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|const GLvoid *pointer
argument_list|,
argument|GLenum preserve
argument_list|)
block|;
name|GLboolean
name|glIsObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|GLuint
name|glNewObjectBufferATI
argument_list|(
argument|GLsizei size
argument_list|,
argument|const GLvoid *pointer
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetVariantArrayObjectivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glGetVariantArrayObjectivATI
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GetVariantArrayObjectivATI
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVariantArrayObjectfvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glGetVariantArrayObjectfvATI
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GetVariantArrayObjectfvATI
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVariantArrayObjectATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glVariantArrayObjectATI
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|VariantArrayObjectATI
argument_list|(
name|id
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|)
block|; }
DECL|function|glGetArrayObjectivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glGetArrayObjectivATI
argument_list|(
argument|GLenum array
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GetArrayObjectivATI
argument_list|(
name|array
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetArrayObjectfvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glGetArrayObjectfvATI
argument_list|(
argument|GLenum array
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GetArrayObjectfvATI
argument_list|(
name|array
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glArrayObjectATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glArrayObjectATI
argument_list|(
argument|GLenum array
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|ArrayObjectATI
argument_list|(
name|array
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|)
block|; }
DECL|function|glFreeObjectBufferATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glFreeObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|FreeObjectBufferATI
argument_list|(
name|buffer
argument_list|)
block|; }
DECL|function|glGetObjectBufferivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glGetObjectBufferivATI
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GetObjectBufferivATI
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetObjectBufferfvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glGetObjectBufferfvATI
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GetObjectBufferfvATI
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUpdateObjectBufferATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glUpdateObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|const GLvoid *pointer
argument_list|,
argument|GLenum preserve
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|UpdateObjectBufferATI
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|pointer
argument_list|,
name|preserve
argument_list|)
block|; }
DECL|function|glIsObjectBufferATI
specifier|inline
name|GLboolean
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glIsObjectBufferATI
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsObjectBufferATI
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glNewObjectBufferATI
specifier|inline
name|GLuint
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|glNewObjectBufferATI
argument_list|(
argument|GLsizei size
argument_list|,
argument|const GLvoid *pointer
argument_list|,
argument|GLenum usage
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
block|;
return|return
name|d
operator|->
name|NewObjectBufferATI
argument_list|(
name|size
argument_list|,
name|pointer
argument_list|,
name|usage
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_vertex_attrib_array_objectPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribArrayObjectivATI
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLenum
name|pname
expr|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribArrayObjectfvATI
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLenum
name|pname
expr|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribArrayObjectATI
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLint
name|size
expr|,
name|GLenum
name|type
expr|,
name|GLboolean
name|normalized
expr|,
name|GLsizei
name|stride
expr|,
name|GLuint
name|buffer
expr|,
name|GLuint
name|offset
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_vertex_attrib_array_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_vertex_attrib_array_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetVertexAttribArrayObjectivATI
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribArrayObjectfvATI
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glVertexAttribArrayObjectATI
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_vertex_attrib_array_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribArrayObjectivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_attrib_array_object
operator|::
name|glGetVertexAttribArrayObjectivATI
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_attrib_array_object
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribArrayObjectivATI
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribArrayObjectfvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_attrib_array_object
operator|::
name|glGetVertexAttribArrayObjectfvATI
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_attrib_array_object
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribArrayObjectfvATI
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribArrayObjectATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_attrib_array_object
operator|::
name|glVertexAttribArrayObjectATI
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint offset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_attrib_array_object
argument_list|)
block|;
name|d
operator|->
name|VertexAttribArrayObjectATI
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ATI_vertex_streamsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexBlendEnvfATI
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexBlendEnviATI
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClientActiveVertexStreamATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3dvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLdouble
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3dATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLdouble
name|nx
operator|,
name|GLdouble
name|ny
operator|,
name|GLdouble
name|nz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3fvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLfloat
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3fATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3ivATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3iATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLint
name|nx
operator|,
name|GLint
name|ny
operator|,
name|GLint
name|nz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3svATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLshort
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3sATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLshort
name|nx
operator|,
name|GLshort
name|ny
operator|,
name|GLshort
name|nz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3bvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLbyte
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalStream3bATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLbyte
name|nx
operator|,
name|GLbyte
name|ny
operator|,
name|GLbyte
name|nz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4dvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLdouble
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4dATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4fvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLfloat
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4fATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4ivATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4iATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|,
name|GLint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4svATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLshort
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream4sATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|,
name|GLshort
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3dvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLdouble
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3dATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3fvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLfloat
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3fATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3ivATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3iATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3svATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLshort
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream3sATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2dvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLdouble
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2dATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2fvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLfloat
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2fATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2ivATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2iATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2svATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLshort
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream2sATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1dvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLdouble
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1dATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLdouble
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1fvATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLfloat
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1fATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLfloat
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1ivATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLint
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1iATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLint
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1svATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
specifier|const
name|GLshort
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexStream1sATI
argument_list|)
operator|(
name|GLenum
name|stream
operator|,
name|GLshort
name|x
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ATI_vertex_streams
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ATI_vertex_streams
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexBlendEnvfATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glVertexBlendEnviATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glClientActiveVertexStreamATI
argument_list|(
argument|GLenum stream
argument_list|)
block|;
name|void
name|glNormalStream3dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|;
name|void
name|glNormalStream3dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble nx
argument_list|,
argument|GLdouble ny
argument_list|,
argument|GLdouble nz
argument_list|)
block|;
name|void
name|glNormalStream3fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|;
name|void
name|glNormalStream3fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|)
block|;
name|void
name|glNormalStream3ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|;
name|void
name|glNormalStream3iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint nx
argument_list|,
argument|GLint ny
argument_list|,
argument|GLint nz
argument_list|)
block|;
name|void
name|glNormalStream3svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|;
name|void
name|glNormalStream3sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort nx
argument_list|,
argument|GLshort ny
argument_list|,
argument|GLshort nz
argument_list|)
block|;
name|void
name|glNormalStream3bvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLbyte *coords
argument_list|)
block|;
name|void
name|glNormalStream3bATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLbyte nx
argument_list|,
argument|GLbyte ny
argument_list|,
argument|GLbyte nz
argument_list|)
block|;
name|void
name|glVertexStream4dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|;
name|void
name|glVertexStream4dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexStream4fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|;
name|void
name|glVertexStream4fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glVertexStream4ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|;
name|void
name|glVertexStream4iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glVertexStream4svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|;
name|void
name|glVertexStream4sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glVertexStream3dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|;
name|void
name|glVertexStream3dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexStream3fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|;
name|void
name|glVertexStream3fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glVertexStream3ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|;
name|void
name|glVertexStream3iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glVertexStream3svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|;
name|void
name|glVertexStream3sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glVertexStream2dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|;
name|void
name|glVertexStream2dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexStream2fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|;
name|void
name|glVertexStream2fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glVertexStream2ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|;
name|void
name|glVertexStream2iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glVertexStream2svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|;
name|void
name|glVertexStream2sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glVertexStream1dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|;
name|void
name|glVertexStream1dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|void
name|glVertexStream1fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|;
name|void
name|glVertexStream1fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|)
block|;
name|void
name|glVertexStream1ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|;
name|void
name|glVertexStream1iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|)
block|;
name|void
name|glVertexStream1svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|;
name|void
name|glVertexStream1sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexBlendEnvfATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexBlendEnvfATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexBlendEnvfATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glVertexBlendEnviATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexBlendEnviATI
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexBlendEnviATI
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glClientActiveVertexStreamATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glClientActiveVertexStreamATI
argument_list|(
argument|GLenum stream
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|ClientActiveVertexStreamATI
argument_list|(
name|stream
argument_list|)
block|; }
DECL|function|glNormalStream3dvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3dvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glNormalStream3dATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble nx
argument_list|,
argument|GLdouble ny
argument_list|,
argument|GLdouble nz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3dATI
argument_list|(
name|stream
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormalStream3fvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3fvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glNormalStream3fATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3fATI
argument_list|(
name|stream
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormalStream3ivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3ivATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glNormalStream3iATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint nx
argument_list|,
argument|GLint ny
argument_list|,
argument|GLint nz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3iATI
argument_list|(
name|stream
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormalStream3svATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3svATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glNormalStream3sATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort nx
argument_list|,
argument|GLshort ny
argument_list|,
argument|GLshort nz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3sATI
argument_list|(
name|stream
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormalStream3bvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3bvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLbyte *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3bvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glNormalStream3bATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glNormalStream3bATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLbyte nx
argument_list|,
argument|GLbyte ny
argument_list|,
argument|GLbyte nz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|NormalStream3bATI
argument_list|(
name|stream
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glVertexStream4dvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4dvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream4dATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4dATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexStream4fvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4fvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream4fATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4fATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexStream4ivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4ivATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream4iATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4iATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexStream4svATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4svATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream4sATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream4sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream4sATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexStream3dvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3dvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream3dATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3dATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexStream3fvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3fvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream3fATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3fATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexStream3ivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3ivATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream3iATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3iATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexStream3svATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3svATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream3sATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream3sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream3sATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexStream2dvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2dvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream2dATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2dATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexStream2fvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2fvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream2fATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2fATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexStream2ivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2ivATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream2iATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2iATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexStream2svATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2svATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream2sATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream2sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream2sATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexStream1dvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1dvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLdouble *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1dvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream1dATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1dATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1dATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexStream1fvATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1fvATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLfloat *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1fvATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream1fATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1fATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLfloat x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1fATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexStream1ivATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1ivATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLint *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1ivATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream1iATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1iATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLint x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1iATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexStream1svATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1svATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|const GLshort *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1svATI
argument_list|(
name|stream
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexStream1sATI
specifier|inline
name|void
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|glVertexStream1sATI
argument_list|(
argument|GLenum stream
argument_list|,
argument|GLshort x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
block|;
name|d
operator|->
name|VertexStream1sATI
argument_list|(
name|stream
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_bindable_uniformPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLintptr
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformOffsetEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformBufferSizeEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformBufferEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|buffer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_bindable_uniform
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_bindable_uniform
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLintptr
name|glGetUniformOffsetEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|)
block|;
name|GLint
name|glGetUniformBufferSizeEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|)
block|;
name|void
name|glUniformBufferEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_bindable_uniform
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetUniformOffsetEXT
specifier|inline
name|GLintptr
name|QOpenGLExtension_EXT_bindable_uniform
operator|::
name|glGetUniformOffsetEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_bindable_uniform
argument_list|)
block|;
return|return
name|d
operator|->
name|GetUniformOffsetEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetUniformBufferSizeEXT
specifier|inline
name|GLint
name|QOpenGLExtension_EXT_bindable_uniform
operator|::
name|glGetUniformBufferSizeEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_bindable_uniform
argument_list|)
block|;
return|return
name|d
operator|->
name|GetUniformBufferSizeEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glUniformBufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_bindable_uniform
operator|::
name|glUniformBufferEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_bindable_uniform
argument_list|)
block|;
name|d
operator|->
name|UniformBufferEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|buffer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_blend_colorPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendColorEXT
argument_list|)
operator|(
name|GLfloat
name|red
operator|,
name|GLfloat
name|green
operator|,
name|GLfloat
name|blue
operator|,
name|GLfloat
name|alpha
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_blend_color
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_blend_color
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlendColorEXT
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_blend_color
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlendColorEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_blend_color
operator|::
name|glBlendColorEXT
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_color
argument_list|)
block|;
name|d
operator|->
name|BlendColorEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_blend_equation_separatePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendEquationSeparateEXT
argument_list|)
operator|(
name|GLenum
name|modeRGB
operator|,
name|GLenum
name|modeAlpha
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_blend_equation_separate
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_blend_equation_separate
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlendEquationSeparateEXT
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_blend_equation_separate
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlendEquationSeparateEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_blend_equation_separate
operator|::
name|glBlendEquationSeparateEXT
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_equation_separate
argument_list|)
block|;
name|d
operator|->
name|BlendEquationSeparateEXT
argument_list|(
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_blend_func_separatePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendFuncSeparateEXT
argument_list|)
operator|(
name|GLenum
name|sfactorRGB
operator|,
name|GLenum
name|dfactorRGB
operator|,
name|GLenum
name|sfactorAlpha
operator|,
name|GLenum
name|dfactorAlpha
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_blend_func_separate
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_blend_func_separate
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlendFuncSeparateEXT
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_blend_func_separate
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlendFuncSeparateEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_blend_func_separate
operator|::
name|glBlendFuncSeparateEXT
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_func_separate
argument_list|)
block|;
name|d
operator|->
name|BlendFuncSeparateEXT
argument_list|(
name|sfactorRGB
argument_list|,
name|dfactorRGB
argument_list|,
name|sfactorAlpha
argument_list|,
name|dfactorAlpha
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_blend_minmaxPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendEquationEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_blend_minmax
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_blend_minmax
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlendEquationEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_blend_minmax
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlendEquationEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_blend_minmax
operator|::
name|glBlendEquationEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_minmax
argument_list|)
block|;
name|d
operator|->
name|BlendEquationEXT
argument_list|(
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_color_subtablePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyColorSubTableEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|start
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorSubTableEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|start
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_color_subtable
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_color_subtable
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glCopyColorSubTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glColorSubTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_color_subtable
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCopyColorSubTableEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_color_subtable
operator|::
name|glCopyColorSubTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_color_subtable
argument_list|)
block|;
name|d
operator|->
name|CopyColorSubTableEXT
argument_list|(
name|target
argument_list|,
name|start
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glColorSubTableEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_color_subtable
operator|::
name|glColorSubTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_color_subtable
argument_list|)
block|;
name|d
operator|->
name|ColorSubTableEXT
argument_list|(
name|target
argument_list|,
name|start
argument_list|,
name|count
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_compiled_vertex_arrayPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UnlockArraysEXT
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LockArraysEXT
argument_list|)
operator|(
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_compiled_vertex_array
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_compiled_vertex_array
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glUnlockArraysEXT
argument_list|()
block|;
name|void
name|glLockArraysEXT
argument_list|(
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_compiled_vertex_array
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glUnlockArraysEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_compiled_vertex_array
operator|::
name|glUnlockArraysEXT
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_compiled_vertex_array
argument_list|)
block|;
name|d
operator|->
name|UnlockArraysEXT
argument_list|()
block|; }
DECL|function|glLockArraysEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_compiled_vertex_array
operator|::
name|glLockArraysEXT
argument_list|(
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_compiled_vertex_array
argument_list|)
block|;
name|d
operator|->
name|LockArraysEXT
argument_list|(
name|first
argument_list|,
name|count
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_convolutionPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SeparableFilter2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|row
operator|,
specifier|const
name|GLvoid
operator|*
name|column
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetSeparableFilterEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|row
operator|,
name|GLvoid
operator|*
name|column
operator|,
name|GLvoid
operator|*
name|span
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetConvolutionParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetConvolutionParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetConvolutionFilterEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|image
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyConvolutionFilter2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyConvolutionFilter1DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ConvolutionParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ConvolutionParameteriEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ConvolutionParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ConvolutionParameterfEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ConvolutionFilter2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|image
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ConvolutionFilter1DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|image
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_convolution
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_convolution
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSeparableFilter2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *row
argument_list|,
argument|const GLvoid *column
argument_list|)
block|;
name|void
name|glGetSeparableFilterEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *row
argument_list|,
argument|GLvoid *column
argument_list|,
argument|GLvoid *span
argument_list|)
block|;
name|void
name|glGetConvolutionParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetConvolutionParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetConvolutionFilterEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *image
argument_list|)
block|;
name|void
name|glCopyConvolutionFilter2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyConvolutionFilter1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glConvolutionParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glConvolutionParameteriEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint params
argument_list|)
block|;
name|void
name|glConvolutionParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glConvolutionParameterfEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat params
argument_list|)
block|;
name|void
name|glConvolutionFilter2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|;
name|void
name|glConvolutionFilter1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_convolution
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSeparableFilter2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glSeparableFilter2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *row
argument_list|,
argument|const GLvoid *column
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|SeparableFilter2DEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
block|; }
DECL|function|glGetSeparableFilterEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glGetSeparableFilterEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *row
argument_list|,
argument|GLvoid *column
argument_list|,
argument|GLvoid *span
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|GetSeparableFilterEXT
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|span
argument_list|)
block|; }
DECL|function|glGetConvolutionParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glGetConvolutionParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|GetConvolutionParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetConvolutionParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glGetConvolutionParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|GetConvolutionParameterfvEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetConvolutionFilterEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glGetConvolutionFilterEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *image
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|GetConvolutionFilterEXT
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glCopyConvolutionFilter2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glCopyConvolutionFilter2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|CopyConvolutionFilter2DEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyConvolutionFilter1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glCopyConvolutionFilter1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|CopyConvolutionFilter1DEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glConvolutionParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glConvolutionParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|ConvolutionParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameteriEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glConvolutionParameteriEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|ConvolutionParameteriEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glConvolutionParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|ConvolutionParameterfvEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameterfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glConvolutionParameterfEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|ConvolutionParameterfEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionFilter2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glConvolutionFilter2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|ConvolutionFilter2DEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glConvolutionFilter1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_convolution
operator|::
name|glConvolutionFilter1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
block|;
name|d
operator|->
name|ConvolutionFilter1DEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_coordinate_framePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BinormalPointerEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TangentPointerEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3svEXT
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3sEXT
argument_list|)
operator|(
name|GLshort
name|bx
operator|,
name|GLshort
name|by
operator|,
name|GLshort
name|bz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3ivEXT
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3iEXT
argument_list|)
operator|(
name|GLint
name|bx
operator|,
name|GLint
name|by
operator|,
name|GLint
name|bz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3fvEXT
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3fEXT
argument_list|)
operator|(
name|GLfloat
name|bx
operator|,
name|GLfloat
name|by
operator|,
name|GLfloat
name|bz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3dvEXT
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3dEXT
argument_list|)
operator|(
name|GLdouble
name|bx
operator|,
name|GLdouble
name|by
operator|,
name|GLdouble
name|bz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3bvEXT
argument_list|)
operator|(
specifier|const
name|GLbyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Binormal3bEXT
argument_list|)
operator|(
name|GLbyte
name|bx
operator|,
name|GLbyte
name|by
operator|,
name|GLbyte
name|bz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3svEXT
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3sEXT
argument_list|)
operator|(
name|GLshort
name|tx
operator|,
name|GLshort
name|ty
operator|,
name|GLshort
name|tz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3ivEXT
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3iEXT
argument_list|)
operator|(
name|GLint
name|tx
operator|,
name|GLint
name|ty
operator|,
name|GLint
name|tz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3fvEXT
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3fEXT
argument_list|)
operator|(
name|GLfloat
name|tx
operator|,
name|GLfloat
name|ty
operator|,
name|GLfloat
name|tz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3dvEXT
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3dEXT
argument_list|)
operator|(
name|GLdouble
name|tx
operator|,
name|GLdouble
name|ty
operator|,
name|GLdouble
name|tz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3bvEXT
argument_list|)
operator|(
specifier|const
name|GLbyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Tangent3bEXT
argument_list|)
operator|(
name|GLbyte
name|tx
operator|,
name|GLbyte
name|ty
operator|,
name|GLbyte
name|tz
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_coordinate_frame
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBinormalPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glTangentPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glBinormal3svEXT
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glBinormal3sEXT
argument_list|(
argument|GLshort bx
argument_list|,
argument|GLshort by
argument_list|,
argument|GLshort bz
argument_list|)
block|;
name|void
name|glBinormal3ivEXT
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glBinormal3iEXT
argument_list|(
argument|GLint bx
argument_list|,
argument|GLint by
argument_list|,
argument|GLint bz
argument_list|)
block|;
name|void
name|glBinormal3fvEXT
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glBinormal3fEXT
argument_list|(
argument|GLfloat bx
argument_list|,
argument|GLfloat by
argument_list|,
argument|GLfloat bz
argument_list|)
block|;
name|void
name|glBinormal3dvEXT
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glBinormal3dEXT
argument_list|(
argument|GLdouble bx
argument_list|,
argument|GLdouble by
argument_list|,
argument|GLdouble bz
argument_list|)
block|;
name|void
name|glBinormal3bvEXT
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glBinormal3bEXT
argument_list|(
argument|GLbyte bx
argument_list|,
argument|GLbyte by
argument_list|,
argument|GLbyte bz
argument_list|)
block|;
name|void
name|glTangent3svEXT
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTangent3sEXT
argument_list|(
argument|GLshort tx
argument_list|,
argument|GLshort ty
argument_list|,
argument|GLshort tz
argument_list|)
block|;
name|void
name|glTangent3ivEXT
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTangent3iEXT
argument_list|(
argument|GLint tx
argument_list|,
argument|GLint ty
argument_list|,
argument|GLint tz
argument_list|)
block|;
name|void
name|glTangent3fvEXT
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTangent3fEXT
argument_list|(
argument|GLfloat tx
argument_list|,
argument|GLfloat ty
argument_list|,
argument|GLfloat tz
argument_list|)
block|;
name|void
name|glTangent3dvEXT
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTangent3dEXT
argument_list|(
argument|GLdouble tx
argument_list|,
argument|GLdouble ty
argument_list|,
argument|GLdouble tz
argument_list|)
block|;
name|void
name|glTangent3bvEXT
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glTangent3bEXT
argument_list|(
argument|GLbyte tx
argument_list|,
argument|GLbyte ty
argument_list|,
argument|GLbyte tz
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBinormalPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormalPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|BinormalPointerEXT
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glTangentPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangentPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|TangentPointerEXT
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glBinormal3svEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3svEXT
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3svEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glBinormal3sEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3sEXT
argument_list|(
argument|GLshort bx
argument_list|,
argument|GLshort by
argument_list|,
argument|GLshort bz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3sEXT
argument_list|(
name|bx
argument_list|,
name|by
argument_list|,
name|bz
argument_list|)
block|; }
DECL|function|glBinormal3ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3ivEXT
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3ivEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glBinormal3iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3iEXT
argument_list|(
argument|GLint bx
argument_list|,
argument|GLint by
argument_list|,
argument|GLint bz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3iEXT
argument_list|(
name|bx
argument_list|,
name|by
argument_list|,
name|bz
argument_list|)
block|; }
DECL|function|glBinormal3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3fvEXT
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3fvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glBinormal3fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3fEXT
argument_list|(
argument|GLfloat bx
argument_list|,
argument|GLfloat by
argument_list|,
argument|GLfloat bz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3fEXT
argument_list|(
name|bx
argument_list|,
name|by
argument_list|,
name|bz
argument_list|)
block|; }
DECL|function|glBinormal3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3dvEXT
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3dvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glBinormal3dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3dEXT
argument_list|(
argument|GLdouble bx
argument_list|,
argument|GLdouble by
argument_list|,
argument|GLdouble bz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3dEXT
argument_list|(
name|bx
argument_list|,
name|by
argument_list|,
name|bz
argument_list|)
block|; }
DECL|function|glBinormal3bvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3bvEXT
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3bvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glBinormal3bEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glBinormal3bEXT
argument_list|(
argument|GLbyte bx
argument_list|,
argument|GLbyte by
argument_list|,
argument|GLbyte bz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Binormal3bEXT
argument_list|(
name|bx
argument_list|,
name|by
argument_list|,
name|bz
argument_list|)
block|; }
DECL|function|glTangent3svEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3svEXT
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3svEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTangent3sEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3sEXT
argument_list|(
argument|GLshort tx
argument_list|,
argument|GLshort ty
argument_list|,
argument|GLshort tz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3sEXT
argument_list|(
name|tx
argument_list|,
name|ty
argument_list|,
name|tz
argument_list|)
block|; }
DECL|function|glTangent3ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3ivEXT
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3ivEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTangent3iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3iEXT
argument_list|(
argument|GLint tx
argument_list|,
argument|GLint ty
argument_list|,
argument|GLint tz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3iEXT
argument_list|(
name|tx
argument_list|,
name|ty
argument_list|,
name|tz
argument_list|)
block|; }
DECL|function|glTangent3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3fvEXT
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3fvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTangent3fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3fEXT
argument_list|(
argument|GLfloat tx
argument_list|,
argument|GLfloat ty
argument_list|,
argument|GLfloat tz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3fEXT
argument_list|(
name|tx
argument_list|,
name|ty
argument_list|,
name|tz
argument_list|)
block|; }
DECL|function|glTangent3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3dvEXT
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3dvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTangent3dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3dEXT
argument_list|(
argument|GLdouble tx
argument_list|,
argument|GLdouble ty
argument_list|,
argument|GLdouble tz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3dEXT
argument_list|(
name|tx
argument_list|,
name|ty
argument_list|,
name|tz
argument_list|)
block|; }
DECL|function|glTangent3bvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3bvEXT
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3bvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTangent3bEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|glTangent3bEXT
argument_list|(
argument|GLbyte tx
argument_list|,
argument|GLbyte ty
argument_list|,
argument|GLbyte tz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
block|;
name|d
operator|->
name|Tangent3bEXT
argument_list|(
name|tx
argument_list|,
name|ty
argument_list|,
name|tz
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_copy_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTexSubImage3DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTexSubImage2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTexSubImage1DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTexImage2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTexImage1DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_copy_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_copy_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glCopyTexSubImage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTexSubImage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTexSubImage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCopyTexImage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glCopyTexImage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_copy_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCopyTexSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_copy_texture
operator|::
name|glCopyTexSubImage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_copy_texture
argument_list|)
block|;
name|d
operator|->
name|CopyTexSubImage3DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTexSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_copy_texture
operator|::
name|glCopyTexSubImage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_copy_texture
argument_list|)
block|;
name|d
operator|->
name|CopyTexSubImage2DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTexSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_copy_texture
operator|::
name|glCopyTexSubImage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_copy_texture
argument_list|)
block|;
name|d
operator|->
name|CopyTexSubImage1DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCopyTexImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_copy_texture
operator|::
name|glCopyTexImage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_copy_texture
argument_list|)
block|;
name|d
operator|->
name|CopyTexImage2DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glCopyTexImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_copy_texture
operator|::
name|glCopyTexImage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_copy_texture
argument_list|)
block|;
name|d
operator|->
name|CopyTexImage1DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|border
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_cull_vertexPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CullParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CullParameterdvEXT
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_cull_vertex
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_cull_vertex
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glCullParameterfvEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glCullParameterdvEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_cull_vertex
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCullParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_cull_vertex
operator|::
name|glCullParameterfvEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_cull_vertex
argument_list|)
block|;
name|d
operator|->
name|CullParameterfvEXT
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glCullParameterdvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_cull_vertex
operator|::
name|glCullParameterdvEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_cull_vertex
argument_list|)
block|;
name|d
operator|->
name|CullParameterdvEXT
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_depth_bounds_testPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DepthBoundsEXT
argument_list|)
operator|(
name|GLclampd
name|zmin
operator|,
name|GLclampd
name|zmax
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_depth_bounds_test
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_depth_bounds_test
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDepthBoundsEXT
argument_list|(
argument|GLclampd zmin
argument_list|,
argument|GLclampd zmax
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_depth_bounds_test
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDepthBoundsEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_depth_bounds_test
operator|::
name|glDepthBoundsEXT
argument_list|(
argument|GLclampd zmin
argument_list|,
argument|GLclampd zmax
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_depth_bounds_test
argument_list|)
block|;
name|d
operator|->
name|DepthBoundsEXT
argument_list|(
name|zmin
argument_list|,
name|zmax
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_direct_state_accessPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x3dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x2dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x4dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x2dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x4dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x3dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4dEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3dEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2dEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1dEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLdouble
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexRenderbufferEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureRenderbufferEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferTextureFaceEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|face
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferTextureLayerEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|layer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferTextureEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedRenderbufferStorageMultisampleCoverageEXT
argument_list|)
operator|(
name|GLuint
name|renderbuffer
operator|,
name|GLsizei
name|coverageSamples
operator|,
name|GLsizei
name|colorSamples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedRenderbufferStorageMultisampleEXT
argument_list|)
operator|(
name|GLuint
name|renderbuffer
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFramebufferParameterivEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferReadBufferEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferDrawBuffersEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLenum
operator|*
name|bufs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferDrawBufferEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenerateMultiTexMipmapEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenerateTextureMipmapEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedFramebufferAttachmentParameterivEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferRenderbufferEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|renderbuffertarget
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferTexture3DEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|zoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferTexture2DEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferTexture1DEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP CheckNamedFramebufferStatusEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedRenderbufferParameterivEXT
argument_list|)
operator|(
name|GLuint
name|renderbuffer
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedRenderbufferStorageEXT
argument_list|)
operator|(
name|GLuint
name|renderbuffer
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexBufferEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureBufferEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedBufferSubDataEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|,
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedBufferPointervEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedBufferParameterivEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedCopyBufferSubDataEXT
argument_list|)
operator|(
name|GLuint
name|readBuffer
operator|,
name|GLuint
name|writeBuffer
operator|,
name|GLintptr
name|readOffset
operator|,
name|GLintptr
name|writeOffset
operator|,
name|GLsizeiptr
name|size
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FlushMappedNamedBufferRangeEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|length
operator|)
block|;
name|GLvoid
operator|*
operator|(
name|QOPENGLF_APIENTRYP
name|MapNamedBufferRangeEXT
operator|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|length
operator|,
name|GLbitfield
name|access
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP UnmapNamedBufferEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|GLvoid
operator|*
operator|(
name|QOPENGLF_APIENTRYP
name|MapNamedBufferEXT
operator|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|access
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedBufferSubDataEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedBufferDataEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLsizeiptr
name|size
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|,
name|GLenum
name|usage
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4uivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3uivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2uivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1uivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4uiEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|,
name|GLuint
name|v2
operator|,
name|GLuint
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3uiEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|,
name|GLuint
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2uiEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1uiEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x3fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4x2fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3x2fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2x3fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|,
name|GLint
name|v2
operator|,
name|GLint
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|,
name|GLint
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|,
name|GLint
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|,
name|GLfloat
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|,
name|GLfloat
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|v0
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexParameterIuivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexParameterIivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexParameterIuivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexParameterIivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureParameterIuivEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureParameterIivEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureParameterIuivEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureParameterIivEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedProgramLocalParameterIuivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedProgramLocalParameterIivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParametersI4uivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameterI4uivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameterI4uiEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|x
operator|,
name|GLuint
name|y
operator|,
name|GLuint
name|z
operator|,
name|GLuint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParametersI4ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameterI4ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameterI4iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|,
name|GLint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameters4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedProgramStringEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
name|string
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedProgramivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedProgramLocalParameterfvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedProgramLocalParameterdvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameter4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameter4fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameter4dvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramLocalParameter4dEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedProgramStringEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLvoid
operator|*
name|string
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCompressedMultiTexImageEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|lod
operator|,
name|GLvoid
operator|*
name|img
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedMultiTexSubImage1DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedMultiTexSubImage2DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedMultiTexSubImage3DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedMultiTexImage1DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedMultiTexImage2DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedMultiTexImage3DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCompressedTextureImageEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|lod
operator|,
name|GLvoid
operator|*
name|img
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTextureSubImage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTextureSubImage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTextureSubImage3DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTextureImage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTextureImage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTextureImage3DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|bits
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPointerIndexedvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLvoid
operator|*
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetDoubleIndexedvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFloatIndexedvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexGenivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexGenfvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexGendvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexEnvivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexEnvfvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexGenivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexGeniEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexGenfvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexGenfEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexGendvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexGendEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexEnvivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexEnviEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexEnvfvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexEnvfEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoordPointerEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DisableClientStateIndexedEXT
argument_list|)
operator|(
name|GLenum
name|array
operator|,
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EnableClientStateIndexedEXT
argument_list|)
operator|(
name|GLenum
name|array
operator|,
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindMultiTextureEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|texture
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyMultiTexSubImage3DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexSubImage3DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexImage3DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexLevelParameterivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexLevelParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexParameterivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultiTexImageEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyMultiTexSubImage2DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyMultiTexSubImage1DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyMultiTexImage2DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyMultiTexImage1DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexSubImage2DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexSubImage1DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexImage2DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexImage1DEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexParameterivEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexParameteriEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexParameterfEXT
argument_list|)
operator|(
name|GLenum
name|texunit
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTextureSubImage3DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureSubImage3DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureImage3DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureLevelParameterivEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureLevelParameterfvEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureParameterivEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureParameterfvEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureImageEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTextureSubImage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTextureSubImage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTextureImage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTextureImage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureSubImage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureSubImage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureImage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureImage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureParameterivEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureParameteriEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureParameterfvEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureParameterfEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixMultTransposedEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLdouble
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixMultTransposefEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLfloat
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixLoadTransposedEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLdouble
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixLoadTransposefEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLfloat
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixPushEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixPopEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixOrthoEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLdouble
name|left
operator|,
name|GLdouble
name|right
operator|,
name|GLdouble
name|bottom
operator|,
name|GLdouble
name|top
operator|,
name|GLdouble
name|zNear
operator|,
name|GLdouble
name|zFar
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixFrustumEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLdouble
name|left
operator|,
name|GLdouble
name|right
operator|,
name|GLdouble
name|bottom
operator|,
name|GLdouble
name|top
operator|,
name|GLdouble
name|zNear
operator|,
name|GLdouble
name|zFar
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixTranslatedEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixTranslatefEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixScaledEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixScalefEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixRotatedEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLdouble
name|angle
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixRotatefEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLfloat
name|angle
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixLoadIdentityEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixMultdEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLdouble
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixMultfEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLfloat
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixLoaddEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLdouble
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MatrixLoadfEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLfloat
operator|*
name|m
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PushClientAttribDefaultEXT
argument_list|)
operator|(
name|GLbitfield
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClientAttribDefaultEXT
argument_list|)
operator|(
name|GLbitfield
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage3DMultisampleEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLboolean
name|fixedsamplelocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage2DMultisampleEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLboolean
name|fixedsamplelocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureBufferRangeEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedFramebufferParameterivEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NamedFramebufferParameteriEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayVertexBindingDivisorEXT
argument_list|)
operator|(
name|GLuint
name|vaobj
operator|,
name|GLuint
name|bindingindex
operator|,
name|GLuint
name|divisor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayVertexAttribBindingEXT
argument_list|)
operator|(
name|GLuint
name|vaobj
operator|,
name|GLuint
name|attribindex
operator|,
name|GLuint
name|bindingindex
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayVertexAttribLFormatEXT
argument_list|)
operator|(
name|GLuint
name|vaobj
operator|,
name|GLuint
name|attribindex
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|relativeoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayVertexAttribIFormatEXT
argument_list|)
operator|(
name|GLuint
name|vaobj
operator|,
name|GLuint
name|attribindex
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|relativeoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayVertexAttribFormatEXT
argument_list|)
operator|(
name|GLuint
name|vaobj
operator|,
name|GLuint
name|attribindex
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLuint
name|relativeoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayBindVertexBufferEXT
argument_list|)
operator|(
name|GLuint
name|vaobj
operator|,
name|GLuint
name|bindingindex
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearNamedBufferSubDataEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizeiptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|void
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearNamedBufferDataEXT
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|internalformat
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|void
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage3DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_direct_state_access
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_direct_state_access
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProgramUniformMatrix4x3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform1dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform4dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glProgramUniform3dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glProgramUniform2dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glProgramUniform1dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|void
name|glMultiTexRenderbufferEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glTextureRenderbufferEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glNamedFramebufferTextureFaceEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum face
argument_list|)
block|;
name|void
name|glNamedFramebufferTextureLayerEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|;
name|void
name|glNamedFramebufferTextureEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glNamedRenderbufferStorageMultisampleCoverageEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glNamedRenderbufferStorageMultisampleEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glGetFramebufferParameterivEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFramebufferReadBufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glFramebufferDrawBuffersEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|void
name|glFramebufferDrawBufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glGenerateMultiTexMipmapEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|)
block|;
name|void
name|glGenerateTextureMipmapEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetNamedFramebufferAttachmentParameterivEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glNamedFramebufferRenderbufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glNamedFramebufferTexture3DEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|;
name|void
name|glNamedFramebufferTexture2DEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glNamedFramebufferTexture1DEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|GLenum
name|glCheckNamedFramebufferStatusEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetNamedRenderbufferParameterivEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glNamedRenderbufferStorageEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glMultiTexBufferEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glTextureBufferEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGetNamedBufferSubDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glGetNamedBufferPointervEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glGetNamedBufferParameterivEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glNamedCopyBufferSubDataEXT
argument_list|(
argument|GLuint readBuffer
argument_list|,
argument|GLuint writeBuffer
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glFlushMappedNamedBufferRangeEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapNamedBufferRangeEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|;
name|GLboolean
name|glUnmapNamedBufferEXT
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapNamedBufferEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|void
name|glNamedBufferSubDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glNamedBufferDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|void
name|glProgramUniform4uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform3uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform2uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform1uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform4uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|;
name|void
name|glProgramUniform3uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|;
name|void
name|glProgramUniform2uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|;
name|void
name|glProgramUniform1uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform3ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform2ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform1ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform1fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform4iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|;
name|void
name|glProgramUniform3iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|;
name|void
name|glProgramUniform2iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|;
name|void
name|glProgramUniform1iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|;
name|void
name|glProgramUniform4fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|;
name|void
name|glProgramUniform3fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glProgramUniform2fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|;
name|void
name|glProgramUniform1fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|;
name|void
name|glGetMultiTexParameterIuivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetMultiTexParameterIivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glMultiTexParameterIuivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glMultiTexParameterIivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glGetTextureParameterIuivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetTextureParameterIivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glTextureParameterIuivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glTextureParameterIivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glGetNamedProgramLocalParameterIuivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetNamedProgramLocalParameterIivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParametersI4uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameterI4uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameterI4uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|;
name|void
name|glNamedProgramLocalParametersI4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameterI4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameterI4iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameters4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glGetNamedProgramStringEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *string
argument_list|)
block|;
name|void
name|glGetNamedProgramivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetNamedProgramLocalParameterfvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetNamedProgramLocalParameterdvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameter4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameter4fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameter4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *params
argument_list|)
block|;
name|void
name|glNamedProgramLocalParameter4dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glNamedProgramStringEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLvoid *string
argument_list|)
block|;
name|void
name|glGetCompressedMultiTexImageEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLvoid *img
argument_list|)
block|;
name|void
name|glCompressedMultiTexSubImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedMultiTexSubImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedMultiTexSubImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedMultiTexImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedMultiTexImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedMultiTexImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glGetCompressedTextureImageEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLvoid *img
argument_list|)
block|;
name|void
name|glCompressedTextureSubImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedTextureSubImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedTextureSubImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedTextureImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedTextureImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glCompressedTextureImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|;
name|void
name|glGetPointerIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLvoid* *data
argument_list|)
block|;
name|void
name|glGetDoubleIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *data
argument_list|)
block|;
name|void
name|glGetFloatIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *data
argument_list|)
block|;
name|void
name|glGetMultiTexGenivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMultiTexGenfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMultiTexGendvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetMultiTexEnvivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMultiTexEnvfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glMultiTexGenivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glMultiTexGeniEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glMultiTexGenfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glMultiTexGenfEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glMultiTexGendvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|;
name|void
name|glMultiTexGendEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble param
argument_list|)
block|;
name|void
name|glMultiTexEnvivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glMultiTexEnviEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glMultiTexEnvfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glMultiTexEnvfEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glMultiTexCoordPointerEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glDisableClientStateIndexedEXT
argument_list|(
argument|GLenum array
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glEnableClientStateIndexedEXT
argument_list|(
argument|GLenum array
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glBindMultiTextureEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|;
name|void
name|glCopyMultiTexSubImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glMultiTexSubImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glMultiTexImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glGetMultiTexLevelParameterivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMultiTexLevelParameterfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMultiTexParameterivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMultiTexParameterfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMultiTexImageEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|;
name|void
name|glCopyMultiTexSubImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyMultiTexSubImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCopyMultiTexImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glCopyMultiTexImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glMultiTexSubImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glMultiTexSubImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glMultiTexImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glMultiTexImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glMultiTexParameterivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glMultiTexParameteriEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glMultiTexParameterfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glMultiTexParameterfEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glCopyTextureSubImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTextureSubImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTextureImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glGetTextureLevelParameterivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTextureLevelParameterfvEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTextureParameterivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTextureParameterfvEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTextureImageEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|;
name|void
name|glCopyTextureSubImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTextureSubImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCopyTextureImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glCopyTextureImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glTextureSubImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTextureSubImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTextureImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTextureImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTextureParameterivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTextureParameteriEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTextureParameterfvEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTextureParameterfEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glMatrixMultTransposedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|;
name|void
name|glMatrixMultTransposefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|;
name|void
name|glMatrixLoadTransposedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|;
name|void
name|glMatrixLoadTransposefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|;
name|void
name|glMatrixPushEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glMatrixPopEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glMatrixOrthoEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|;
name|void
name|glMatrixFrustumEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|;
name|void
name|glMatrixTranslatedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glMatrixTranslatefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glMatrixScaledEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glMatrixScalefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glMatrixRotatedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble angle
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glMatrixRotatefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLfloat angle
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glMatrixLoadIdentityEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glMatrixMultdEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|;
name|void
name|glMatrixMultfEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|;
name|void
name|glMatrixLoaddEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|;
name|void
name|glMatrixLoadfEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|;
name|void
name|glPushClientAttribDefaultEXT
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glClientAttribDefaultEXT
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glTextureStorage3DMultisampleEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTextureStorage2DMultisampleEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTextureBufferRangeEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glGetNamedFramebufferParameterivEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glNamedFramebufferParameteriEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glVertexArrayVertexBindingDivisorEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|;
name|void
name|glVertexArrayVertexAttribBindingEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|;
name|void
name|glVertexArrayVertexAttribLFormatEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexArrayVertexAttribIFormatEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexArrayVertexAttribFormatEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexArrayBindVertexBufferEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glClearNamedBufferSubDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizeiptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glClearNamedBufferDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glTextureStorage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|void
name|glTextureStorage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTextureStorage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProgramUniformMatrix4x3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix4x3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x3dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x2dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix4x2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x2dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x4dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix3x4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x4dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x2dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix3x2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x2dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x4dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix2x4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x4dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix2x3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x3dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1dvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4dEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramUniform3dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3dEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glProgramUniform2dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2dEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glProgramUniform1dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1dEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glMultiTexRenderbufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexRenderbufferEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexRenderbufferEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glTextureRenderbufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureRenderbufferEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureRenderbufferEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glNamedFramebufferTextureFaceEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferTextureFaceEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum face
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferTextureFaceEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|face
argument_list|)
block|; }
DECL|function|glNamedFramebufferTextureLayerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferTextureLayerEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferTextureLayerEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layer
argument_list|)
block|; }
DECL|function|glNamedFramebufferTextureEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferTextureEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferTextureEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glNamedRenderbufferStorageMultisampleCoverageEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedRenderbufferStorageMultisampleCoverageEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedRenderbufferStorageMultisampleCoverageEXT
argument_list|(
name|renderbuffer
argument_list|,
name|coverageSamples
argument_list|,
name|colorSamples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glNamedRenderbufferStorageMultisampleEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedRenderbufferStorageMultisampleEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedRenderbufferStorageMultisampleEXT
argument_list|(
name|renderbuffer
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glGetFramebufferParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetFramebufferParameterivEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetFramebufferParameterivEXT
argument_list|(
name|framebuffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFramebufferReadBufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glFramebufferReadBufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|FramebufferReadBufferEXT
argument_list|(
name|framebuffer
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glFramebufferDrawBuffersEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glFramebufferDrawBuffersEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|FramebufferDrawBuffersEXT
argument_list|(
name|framebuffer
argument_list|,
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
DECL|function|glFramebufferDrawBufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glFramebufferDrawBufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|FramebufferDrawBufferEXT
argument_list|(
name|framebuffer
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glGenerateMultiTexMipmapEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGenerateMultiTexMipmapEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GenerateMultiTexMipmapEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|)
block|; }
DECL|function|glGenerateTextureMipmapEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGenerateTextureMipmapEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GenerateTextureMipmapEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|)
block|; }
DECL|function|glGetNamedFramebufferAttachmentParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedFramebufferAttachmentParameterivEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedFramebufferAttachmentParameterivEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedFramebufferRenderbufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferRenderbufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferRenderbufferEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glNamedFramebufferTexture3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferTexture3DEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferTexture3DEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|zoffset
argument_list|)
block|; }
DECL|function|glNamedFramebufferTexture2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferTexture2DEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferTexture2DEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glNamedFramebufferTexture1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferTexture1DEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferTexture1DEXT
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glCheckNamedFramebufferStatusEXT
specifier|inline
name|GLenum
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCheckNamedFramebufferStatusEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
return|return
name|d
operator|->
name|CheckNamedFramebufferStatusEXT
argument_list|(
name|framebuffer
argument_list|,
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetNamedRenderbufferParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedRenderbufferParameterivEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedRenderbufferParameterivEXT
argument_list|(
name|renderbuffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedRenderbufferStorageEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedRenderbufferStorageEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedRenderbufferStorageEXT
argument_list|(
name|renderbuffer
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glMultiTexBufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexBufferEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexBufferEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glTextureBufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureBufferEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureBufferEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glGetNamedBufferSubDataEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedBufferSubDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedBufferSubDataEXT
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetNamedBufferPointervEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedBufferPointervEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedBufferPointervEXT
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedBufferParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedBufferParameterivEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedBufferParameterivEXT
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedCopyBufferSubDataEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedCopyBufferSubDataEXT
argument_list|(
argument|GLuint readBuffer
argument_list|,
argument|GLuint writeBuffer
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedCopyBufferSubDataEXT
argument_list|(
name|readBuffer
argument_list|,
name|writeBuffer
argument_list|,
name|readOffset
argument_list|,
name|writeOffset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glFlushMappedNamedBufferRangeEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glFlushMappedNamedBufferRangeEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|FlushMappedNamedBufferRangeEXT
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glMapNamedBufferRangeEXT
specifier|inline
name|GLvoid
operator|*
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMapNamedBufferRangeEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
return|return
name|d
operator|->
name|MapNamedBufferRangeEXT
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glUnmapNamedBufferEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glUnmapNamedBufferEXT
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
return|return
name|d
operator|->
name|UnmapNamedBufferEXT
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMapNamedBufferEXT
specifier|inline
name|GLvoid
operator|*
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMapNamedBufferEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
return|return
name|d
operator|->
name|MapNamedBufferEXT
argument_list|(
name|buffer
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glNamedBufferSubDataEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedBufferSubDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedBufferSubDataEXT
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glNamedBufferDataEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedBufferDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedBufferDataEXT
argument_list|(
name|buffer
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|; }
DECL|function|glProgramUniform4uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4uivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3uivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2uivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1uivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4uiEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform3uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3uiEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform2uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2uiEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform1uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1uiEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix4x3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x3fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix3x4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x4fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x2fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix4x2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4x2fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix2x4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x4fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x2fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix3x2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3x2fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix2x3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2x3fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniformMatrix2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform3iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform2iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform1iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniform4fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform4fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform3fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform3fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform2fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform2fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform1fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glProgramUniform1fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glGetMultiTexParameterIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexParameterIuivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexParameterIuivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexParameterIivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexParameterIivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexParameterIivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexParameterIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexParameterIuivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexParameterIuivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexParameterIivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexParameterIivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexParameterIivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureParameterIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetTextureParameterIuivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetTextureParameterIuivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureParameterIivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetTextureParameterIivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetTextureParameterIivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTextureParameterIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureParameterIuivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureParameterIuivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTextureParameterIivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureParameterIivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureParameterIivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedProgramLocalParameterIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedProgramLocalParameterIuivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedProgramLocalParameterIuivEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedProgramLocalParameterIivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedProgramLocalParameterIivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedProgramLocalParameterIivEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParametersI4uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParametersI4uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParametersI4uivEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameterI4uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameterI4uivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameterI4uivEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameterI4uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameterI4uiEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameterI4uiEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParametersI4ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParametersI4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParametersI4ivEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameterI4ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameterI4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameterI4ivEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameterI4iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameterI4iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameterI4iEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameters4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameters4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameters4fvEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedProgramStringEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedProgramStringEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedProgramStringEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|string
argument_list|)
block|; }
DECL|function|glGetNamedProgramivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedProgramivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedProgramivEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedProgramLocalParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedProgramLocalParameterfvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedProgramLocalParameterfvEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedProgramLocalParameterdvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedProgramLocalParameterdvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedProgramLocalParameterdvEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameter4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameter4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameter4fvEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameter4fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameter4fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameter4fEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameter4dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameter4dvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameter4dvEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedProgramLocalParameter4dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramLocalParameter4dEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramLocalParameter4dEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glNamedProgramStringEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedProgramStringEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLvoid *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedProgramStringEXT
argument_list|(
name|program
argument_list|,
name|target
argument_list|,
name|format
argument_list|,
name|len
argument_list|,
name|string
argument_list|)
block|; }
DECL|function|glGetCompressedMultiTexImageEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetCompressedMultiTexImageEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLvoid *img
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetCompressedMultiTexImageEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|lod
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glCompressedMultiTexSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedMultiTexSubImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedMultiTexSubImage1DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedMultiTexSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedMultiTexSubImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedMultiTexSubImage2DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedMultiTexSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedMultiTexSubImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedMultiTexSubImage3DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedMultiTexImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedMultiTexImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedMultiTexImage1DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedMultiTexImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedMultiTexImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedMultiTexImage2DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedMultiTexImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedMultiTexImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedMultiTexImage3DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glGetCompressedTextureImageEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetCompressedTextureImageEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLvoid *img
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetCompressedTextureImageEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|lod
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glCompressedTextureSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedTextureSubImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedTextureSubImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedTextureSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedTextureSubImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedTextureSubImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedTextureSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedTextureSubImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedTextureSubImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedTextureImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedTextureImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedTextureImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedTextureImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedTextureImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedTextureImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glCompressedTextureImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCompressedTextureImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *bits
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CompressedTextureImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
block|; }
DECL|function|glGetPointerIndexedvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetPointerIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLvoid* *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetPointerIndexedvEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetDoubleIndexedvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetDoubleIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetDoubleIndexedvEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetFloatIndexedvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetFloatIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetFloatIndexedvEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetMultiTexGenivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexGenivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexGenivEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexGenfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexGenfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexGenfvEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexGendvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexGendvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexGendvEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexEnvivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexEnvivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexEnvivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexEnvfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexEnvfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexEnvfvEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexGenivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexGenivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexGenivEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexGeniEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexGeniEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexGeniEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiTexGenfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexGenfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexGenfvEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexGenfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexGenfEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexGenfEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiTexGendvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexGendvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexGendvEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexGendEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexGendEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexGendEXT
argument_list|(
name|texunit
argument_list|,
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiTexEnvivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexEnvivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexEnvivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexEnviEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexEnviEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexEnviEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiTexEnvfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexEnvfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexEnvfvEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexEnvfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexEnvfEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexEnvfEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiTexCoordPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexCoordPointerEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoordPointerEXT
argument_list|(
name|texunit
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glDisableClientStateIndexedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glDisableClientStateIndexedEXT
argument_list|(
argument|GLenum array
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|DisableClientStateIndexedEXT
argument_list|(
name|array
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glEnableClientStateIndexedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glEnableClientStateIndexedEXT
argument_list|(
argument|GLenum array
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|EnableClientStateIndexedEXT
argument_list|(
name|array
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glBindMultiTextureEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glBindMultiTextureEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|BindMultiTextureEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|texture
argument_list|)
block|; }
DECL|function|glCopyMultiTexSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyMultiTexSubImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyMultiTexSubImage3DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glMultiTexSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexSubImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexSubImage3DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glMultiTexImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexImage3DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexImage3DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetMultiTexLevelParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexLevelParameterivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexLevelParameterivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexLevelParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexLevelParameterfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexLevelParameterfvEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexParameterivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexParameterivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexParameterfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexParameterfvEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMultiTexImageEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetMultiTexImageEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetMultiTexImageEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyMultiTexSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyMultiTexSubImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyMultiTexSubImage2DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyMultiTexSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyMultiTexSubImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyMultiTexSubImage1DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCopyMultiTexImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyMultiTexImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyMultiTexImage2DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glCopyMultiTexImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyMultiTexImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyMultiTexImage1DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glMultiTexSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexSubImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexSubImage2DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glMultiTexSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexSubImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexSubImage1DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glMultiTexImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexImage2DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexImage2DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glMultiTexImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexImage1DEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexImage1DEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glMultiTexParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexParameterivEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexParameterivEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexParameteriEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexParameteriEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexParameteriEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiTexParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexParameterfvEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexParameterfvEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiTexParameterfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMultiTexParameterfEXT
argument_list|(
argument|GLenum texunit
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MultiTexParameterfEXT
argument_list|(
name|texunit
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glCopyTextureSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyTextureSubImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyTextureSubImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTextureSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureSubImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureSubImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureImage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetTextureLevelParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetTextureLevelParameterivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetTextureLevelParameterivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureLevelParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetTextureLevelParameterfvEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetTextureLevelParameterfvEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetTextureParameterivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetTextureParameterivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetTextureParameterfvEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetTextureParameterfvEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureImageEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetTextureImageEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetTextureImageEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyTextureSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyTextureSubImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyTextureSubImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTextureSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyTextureSubImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyTextureSubImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCopyTextureImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyTextureImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyTextureImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glCopyTextureImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glCopyTextureImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|CopyTextureImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glTextureSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureSubImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureSubImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureSubImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureSubImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureImage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureImage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureParameterivEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureParameterivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTextureParameteriEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureParameteriEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureParameteriEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTextureParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureParameterfvEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureParameterfvEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTextureParameterfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureParameterfEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureParameterfEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMatrixMultTransposedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixMultTransposedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixMultTransposedEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glMatrixMultTransposefEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixMultTransposefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixMultTransposefEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glMatrixLoadTransposedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixLoadTransposedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixLoadTransposedEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glMatrixLoadTransposefEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixLoadTransposefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixLoadTransposefEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glMatrixPushEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixPushEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixPushEXT
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glMatrixPopEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixPopEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixPopEXT
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glMatrixOrthoEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixOrthoEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixOrthoEXT
argument_list|(
name|mode
argument_list|,
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
block|; }
DECL|function|glMatrixFrustumEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixFrustumEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixFrustumEXT
argument_list|(
name|mode
argument_list|,
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
block|; }
DECL|function|glMatrixTranslatedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixTranslatedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixTranslatedEXT
argument_list|(
name|mode
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glMatrixTranslatefEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixTranslatefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixTranslatefEXT
argument_list|(
name|mode
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glMatrixScaledEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixScaledEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixScaledEXT
argument_list|(
name|mode
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glMatrixScalefEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixScalefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixScalefEXT
argument_list|(
name|mode
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glMatrixRotatedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixRotatedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLdouble angle
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixRotatedEXT
argument_list|(
name|mode
argument_list|,
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glMatrixRotatefEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixRotatefEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLfloat angle
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixRotatefEXT
argument_list|(
name|mode
argument_list|,
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glMatrixLoadIdentityEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixLoadIdentityEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixLoadIdentityEXT
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glMatrixMultdEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixMultdEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixMultdEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glMatrixMultfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixMultfEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixMultfEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glMatrixLoaddEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixLoaddEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLdouble *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixLoaddEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glMatrixLoadfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glMatrixLoadfEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLfloat *m
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|MatrixLoadfEXT
argument_list|(
name|mode
argument_list|,
name|m
argument_list|)
block|; }
DECL|function|glPushClientAttribDefaultEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glPushClientAttribDefaultEXT
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|PushClientAttribDefaultEXT
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glClientAttribDefaultEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glClientAttribDefaultEXT
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ClientAttribDefaultEXT
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glTextureStorage3DMultisampleEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureStorage3DMultisampleEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureStorage3DMultisampleEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTextureStorage2DMultisampleEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureStorage2DMultisampleEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureStorage2DMultisampleEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTextureBufferRangeEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureBufferRangeEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureBufferRangeEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glGetNamedFramebufferParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glGetNamedFramebufferParameterivEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|GetNamedFramebufferParameterivEXT
argument_list|(
name|framebuffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedFramebufferParameteriEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glNamedFramebufferParameteriEXT
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|NamedFramebufferParameteriEXT
argument_list|(
name|framebuffer
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glVertexArrayVertexBindingDivisorEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glVertexArrayVertexBindingDivisorEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|VertexArrayVertexBindingDivisorEXT
argument_list|(
name|vaobj
argument_list|,
name|bindingindex
argument_list|,
name|divisor
argument_list|)
block|; }
DECL|function|glVertexArrayVertexAttribBindingEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glVertexArrayVertexAttribBindingEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|VertexArrayVertexAttribBindingEXT
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|bindingindex
argument_list|)
block|; }
DECL|function|glVertexArrayVertexAttribLFormatEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glVertexArrayVertexAttribLFormatEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|VertexArrayVertexAttribLFormatEXT
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexArrayVertexAttribIFormatEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glVertexArrayVertexAttribIFormatEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|VertexArrayVertexAttribIFormatEXT
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexArrayVertexAttribFormatEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glVertexArrayVertexAttribFormatEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|VertexArrayVertexAttribFormatEXT
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexArrayBindVertexBufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glVertexArrayBindVertexBufferEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|VertexArrayBindVertexBufferEXT
argument_list|(
name|vaobj
argument_list|,
name|bindingindex
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glClearNamedBufferSubDataEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glClearNamedBufferSubDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizeiptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ClearNamedBufferSubDataEXT
argument_list|(
name|buffer
argument_list|,
name|internalformat
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glClearNamedBufferDataEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glClearNamedBufferDataEXT
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|ClearNamedBufferDataEXT
argument_list|(
name|buffer
argument_list|,
name|internalformat
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glTextureStorage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureStorage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureStorage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
DECL|function|glTextureStorage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureStorage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureStorage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTextureStorage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|glTextureStorage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
block|;
name|d
operator|->
name|TextureStorage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_draw_buffers2Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsEnabledIndexedEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DisableIndexedEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EnableIndexedEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetIntegerIndexedvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLint
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetBooleanIndexedvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLboolean
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorMaskIndexedEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLboolean
name|r
operator|,
name|GLboolean
name|g
operator|,
name|GLboolean
name|b
operator|,
name|GLboolean
name|a
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_draw_buffers2
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glIsEnabledIndexedEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glDisableIndexedEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glEnableIndexedEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glGetIntegerIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *data
argument_list|)
block|;
name|void
name|glGetBooleanIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLboolean *data
argument_list|)
block|;
name|void
name|glColorMaskIndexedEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLboolean r
argument_list|,
argument|GLboolean g
argument_list|,
argument|GLboolean b
argument_list|,
argument|GLboolean a
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIsEnabledIndexedEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|glIsEnabledIndexedEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
block|;
return|return
name|d
operator|->
name|IsEnabledIndexedEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDisableIndexedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|glDisableIndexedEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
block|;
name|d
operator|->
name|DisableIndexedEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glEnableIndexedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|glEnableIndexedEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
block|;
name|d
operator|->
name|EnableIndexedEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glGetIntegerIndexedvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|glGetIntegerIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
block|;
name|d
operator|->
name|GetIntegerIndexedvEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetBooleanIndexedvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|glGetBooleanIndexedvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLboolean *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
block|;
name|d
operator|->
name|GetBooleanIndexedvEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glColorMaskIndexedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|glColorMaskIndexedEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLboolean r
argument_list|,
argument|GLboolean g
argument_list|,
argument|GLboolean b
argument_list|,
argument|GLboolean a
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
block|;
name|d
operator|->
name|ColorMaskIndexedEXT
argument_list|(
name|index
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_draw_instancedPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsInstancedEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawArraysInstancedEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|start
operator|,
name|GLsizei
name|count
operator|,
name|GLsizei
name|primcount
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_draw_instanced
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_draw_instanced
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawElementsInstancedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glDrawArraysInstancedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_draw_instanced
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawElementsInstancedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_instanced
operator|::
name|glDrawElementsInstancedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_instanced
argument_list|)
block|;
name|d
operator|->
name|DrawElementsInstancedEXT
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glDrawArraysInstancedEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_instanced
operator|::
name|glDrawArraysInstancedEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_instanced
argument_list|)
block|;
name|d
operator|->
name|DrawArraysInstancedEXT
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_draw_range_elementsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawRangeElementsEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|start
operator|,
name|GLuint
name|end
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|indices
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_draw_range_elements
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_draw_range_elements
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawRangeElementsEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_draw_range_elements
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawRangeElementsEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_draw_range_elements
operator|::
name|glDrawRangeElementsEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_range_elements
argument_list|)
block|;
name|d
operator|->
name|DrawRangeElementsEXT
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_fog_coordPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoordPointerEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoorddvEXT
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|coord
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoorddEXT
argument_list|)
operator|(
name|GLdouble
name|coord
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoordfvEXT
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|coord
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoordfEXT
argument_list|)
operator|(
name|GLfloat
name|coord
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_fog_coord
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_fog_coord
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFogCoordPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glFogCoorddvEXT
argument_list|(
specifier|const
name|GLdouble
operator|*
name|coord
argument_list|)
block|;
name|void
name|glFogCoorddEXT
argument_list|(
argument|GLdouble coord
argument_list|)
block|;
name|void
name|glFogCoordfvEXT
argument_list|(
specifier|const
name|GLfloat
operator|*
name|coord
argument_list|)
block|;
name|void
name|glFogCoordfEXT
argument_list|(
argument|GLfloat coord
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_fog_coord
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFogCoordPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_fog_coord
operator|::
name|glFogCoordPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_fog_coord
argument_list|)
block|;
name|d
operator|->
name|FogCoordPointerEXT
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glFogCoorddvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_fog_coord
operator|::
name|glFogCoorddvEXT
argument_list|(
argument|const GLdouble *coord
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_fog_coord
argument_list|)
block|;
name|d
operator|->
name|FogCoorddvEXT
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoorddEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_fog_coord
operator|::
name|glFogCoorddEXT
argument_list|(
argument|GLdouble coord
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_fog_coord
argument_list|)
block|;
name|d
operator|->
name|FogCoorddEXT
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_fog_coord
operator|::
name|glFogCoordfvEXT
argument_list|(
argument|const GLfloat *coord
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_fog_coord
argument_list|)
block|;
name|d
operator|->
name|FogCoordfvEXT
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_fog_coord
operator|::
name|glFogCoordfEXT
argument_list|(
argument|GLfloat coord
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_fog_coord
argument_list|)
block|;
name|d
operator|->
name|FogCoordfEXT
argument_list|(
name|coord
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_framebuffer_blitPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlitFramebufferEXT
argument_list|)
operator|(
name|GLint
name|srcX0
operator|,
name|GLint
name|srcY0
operator|,
name|GLint
name|srcX1
operator|,
name|GLint
name|srcY1
operator|,
name|GLint
name|dstX0
operator|,
name|GLint
name|dstY0
operator|,
name|GLint
name|dstX1
operator|,
name|GLint
name|dstY1
operator|,
name|GLbitfield
name|mask
operator|,
name|GLenum
name|filter
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_framebuffer_blit
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_framebuffer_blit
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlitFramebufferEXT
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_framebuffer_blit
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlitFramebufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_blit
operator|::
name|glBlitFramebufferEXT
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_blit
argument_list|)
block|;
name|d
operator|->
name|BlitFramebufferEXT
argument_list|(
name|srcX0
argument_list|,
name|srcY0
argument_list|,
name|srcX1
argument_list|,
name|srcY1
argument_list|,
name|dstX0
argument_list|,
name|dstY0
argument_list|,
name|dstX1
argument_list|,
name|dstY1
argument_list|,
name|mask
argument_list|,
name|filter
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_framebuffer_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisampleEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_framebuffer_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_framebuffer_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glRenderbufferStorageMultisampleEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_framebuffer_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glRenderbufferStorageMultisampleEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_multisample
operator|::
name|glRenderbufferStorageMultisampleEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_multisample
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisampleEXT
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_framebuffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenerateMipmapEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFramebufferAttachmentParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferRenderbufferEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|renderbuffertarget
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture3DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|zoffset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture1DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP CheckFramebufferStatusEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenFramebuffersEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|framebuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteFramebuffersEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|framebuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindFramebufferEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|framebuffer
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsFramebufferEXT
argument_list|)
operator|(
name|GLuint
name|framebuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetRenderbufferParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenRenderbuffersEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|renderbuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteRenderbuffersEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|renderbuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindRenderbufferEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsRenderbufferEXT
argument_list|)
operator|(
name|GLuint
name|renderbuffer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_framebuffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGenerateMipmapEXT
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetFramebufferAttachmentParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFramebufferRenderbufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glFramebufferTexture3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|;
name|void
name|glFramebufferTexture2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glFramebufferTexture1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|GLenum
name|glCheckFramebufferStatusEXT
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGenFramebuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|;
name|void
name|glDeleteFramebuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|;
name|void
name|glBindFramebufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|;
name|GLboolean
name|glIsFramebufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|;
name|void
name|glGetRenderbufferParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glRenderbufferStorageEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glGenRenderbuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glDeleteRenderbuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glBindRenderbufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|GLboolean
name|glIsRenderbufferEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGenerateMipmapEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glGenerateMipmapEXT
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GenerateMipmapEXT
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glGetFramebufferAttachmentParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glGetFramebufferAttachmentParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GetFramebufferAttachmentParameterivEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFramebufferRenderbufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glFramebufferRenderbufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferRenderbufferEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glFramebufferTexture3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glFramebufferTexture3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture3DEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|zoffset
argument_list|)
block|; }
DECL|function|glFramebufferTexture2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glFramebufferTexture2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture2DEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glFramebufferTexture1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glFramebufferTexture1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture1DEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glCheckFramebufferStatusEXT
specifier|inline
name|GLenum
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glCheckFramebufferStatusEXT
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|CheckFramebufferStatusEXT
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenFramebuffersEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glGenFramebuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GenFramebuffersEXT
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glDeleteFramebuffersEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glDeleteFramebuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|DeleteFramebuffersEXT
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glBindFramebufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glBindFramebufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|BindFramebufferEXT
argument_list|(
name|target
argument_list|,
name|framebuffer
argument_list|)
block|; }
DECL|function|glIsFramebufferEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glIsFramebufferEXT
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsFramebufferEXT
argument_list|(
name|framebuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetRenderbufferParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glGetRenderbufferParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GetRenderbufferParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glRenderbufferStorageEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glRenderbufferStorageEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glGenRenderbuffersEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glGenRenderbuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|GenRenderbuffersEXT
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glDeleteRenderbuffersEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glDeleteRenderbuffersEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|DeleteRenderbuffersEXT
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glBindRenderbufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glBindRenderbufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
name|d
operator|->
name|BindRenderbufferEXT
argument_list|(
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glIsRenderbufferEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|glIsRenderbufferEXT
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsRenderbufferEXT
argument_list|(
name|renderbuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_geometry_shader4Private
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameteriEXT
argument_list|)
operator|(
name|GLuint
name|program
expr|,
name|GLenum
name|pname
expr|,
name|GLint
name|value
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_geometry_shader4
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_geometry_shader4
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProgramParameteriEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_geometry_shader4
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProgramParameteriEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_geometry_shader4
operator|::
name|glProgramParameteriEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_geometry_shader4
argument_list|)
block|;
name|d
operator|->
name|ProgramParameteriEXT
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_gpu_program_parametersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameters4fvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameters4fvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_gpu_program_parameters
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_gpu_program_parameters
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProgramLocalParameters4fvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glProgramEnvParameters4fvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_gpu_program_parameters
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProgramLocalParameters4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_program_parameters
operator|::
name|glProgramLocalParameters4fvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_program_parameters
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameters4fvEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParameters4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_program_parameters
operator|::
name|glProgramEnvParameters4fvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_program_parameters
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameters4fvEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_gpu_shader4Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4uivEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3uivEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2uivEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1uivEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4uiEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|,
name|GLuint
name|v2
operator|,
name|GLuint
name|v3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3uiEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|,
name|GLuint
name|v2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2uiEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|,
name|GLuint
name|v1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1uiEXT
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint
name|v0
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetFragDataLocationEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindFragDataLocationEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|color
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformuivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_gpu_shader4
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glUniform4uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform3uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform2uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform1uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform4uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|;
name|void
name|glUniform3uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|;
name|void
name|glUniform2uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|;
name|void
name|glUniform1uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|;
name|GLint
name|glGetFragDataLocationEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glBindFragDataLocationEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint color
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetUniformuivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glUniform4uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform4uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform4uivEXT
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform3uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform3uivEXT
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform2uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform2uivEXT
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform1uivEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform1uivEXT
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform4uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform4uiEXT
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform3uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform3uiEXT
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform2uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform2uiEXT
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glUniform1uiEXT
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|Uniform1uiEXT
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glGetFragDataLocationEXT
specifier|inline
name|GLint
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glGetFragDataLocationEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
return|return
name|d
operator|->
name|GetFragDataLocationEXT
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindFragDataLocationEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glBindFragDataLocationEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint color
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|BindFragDataLocationEXT
argument_list|(
name|program
argument_list|,
name|color
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetUniformuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|glGetUniformuivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
block|;
name|d
operator|->
name|GetUniformuivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_histogramPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ResetMinmaxEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ResetHistogramEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MinmaxEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLboolean
name|sink
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP HistogramEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|internalformat
operator|,
name|GLboolean
name|sink
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMinmaxParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMinmaxParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMinmaxEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLboolean
name|reset
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetHistogramParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetHistogramParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetHistogramEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLboolean
name|reset
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|values
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_histogram
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_histogram
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glResetMinmaxEXT
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glResetHistogramEXT
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glMinmaxEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|;
name|void
name|glHistogramEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|;
name|void
name|glGetMinmaxParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMinmaxParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMinmaxEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|;
name|void
name|glGetHistogramParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetHistogramParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetHistogramEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_histogram
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glResetMinmaxEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glResetMinmaxEXT
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|ResetMinmaxEXT
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glResetHistogramEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glResetHistogramEXT
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|ResetHistogramEXT
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glMinmaxEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glMinmaxEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|MinmaxEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|sink
argument_list|)
block|; }
DECL|function|glHistogramEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glHistogramEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|HistogramEXT
argument_list|(
name|target
argument_list|,
name|width
argument_list|,
name|internalformat
argument_list|,
name|sink
argument_list|)
block|; }
DECL|function|glGetMinmaxParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glGetMinmaxParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|GetMinmaxParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMinmaxParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glGetMinmaxParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|GetMinmaxParameterfvEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMinmaxEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glGetMinmaxEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|GetMinmaxEXT
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetHistogramParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glGetHistogramParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|GetHistogramParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetHistogramParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glGetHistogramParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|GetHistogramParameterfvEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetHistogramEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_histogram
operator|::
name|glGetHistogramEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
block|;
name|d
operator|->
name|GetHistogramEXT
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|values
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_index_funcPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP IndexFuncEXT
argument_list|)
operator|(
name|GLenum
name|func
operator|,
name|GLclampf
name|ref
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_index_func
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_index_func
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glIndexFuncEXT
argument_list|(
argument|GLenum func
argument_list|,
argument|GLclampf ref
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_index_func
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIndexFuncEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_index_func
operator|::
name|glIndexFuncEXT
argument_list|(
argument|GLenum func
argument_list|,
argument|GLclampf ref
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_index_func
argument_list|)
block|;
name|d
operator|->
name|IndexFuncEXT
argument_list|(
name|func
argument_list|,
name|ref
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_index_materialPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP IndexMaterialEXT
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_index_material
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_index_material
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glIndexMaterialEXT
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_index_material
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIndexMaterialEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_index_material
operator|::
name|glIndexMaterialEXT
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_index_material
argument_list|)
block|;
name|d
operator|->
name|IndexMaterialEXT
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_light_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureMaterialEXT
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureLightEXT
argument_list|)
operator|(
name|GLenum
name|pname
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ApplyTextureEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_light_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_light_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTextureMaterialEXT
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glTextureLightEXT
argument_list|(
argument|GLenum pname
argument_list|)
block|;
name|void
name|glApplyTextureEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_light_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTextureMaterialEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_light_texture
operator|::
name|glTextureMaterialEXT
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_light_texture
argument_list|)
block|;
name|d
operator|->
name|TextureMaterialEXT
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glTextureLightEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_light_texture
operator|::
name|glTextureLightEXT
argument_list|(
argument|GLenum pname
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_light_texture
argument_list|)
block|;
name|d
operator|->
name|TextureLightEXT
argument_list|(
name|pname
argument_list|)
block|; }
DECL|function|glApplyTextureEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_light_texture
operator|::
name|glApplyTextureEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_light_texture
argument_list|)
block|;
name|d
operator|->
name|ApplyTextureEXT
argument_list|(
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_multi_draw_arraysPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawElementsEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawArraysEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLint
operator|*
name|first
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLsizei
name|primcount
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_multi_draw_arrays
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiDrawElementsEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glMultiDrawArraysEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiDrawElementsEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|glMultiDrawElementsEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
block|;
name|d
operator|->
name|MultiDrawElementsEXT
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glMultiDrawArraysEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|glMultiDrawArraysEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
block|;
name|d
operator|->
name|MultiDrawArraysEXT
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplePatternEXT
argument_list|)
operator|(
name|GLenum
name|pattern
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SampleMaskEXT
argument_list|)
operator|(
name|GLclampf
name|value
operator|,
name|GLboolean
name|invert
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSamplePatternEXT
argument_list|(
argument|GLenum pattern
argument_list|)
block|;
name|void
name|glSampleMaskEXT
argument_list|(
argument|GLclampf value
argument_list|,
argument|GLboolean invert
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSamplePatternEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multisample
operator|::
name|glSamplePatternEXT
argument_list|(
argument|GLenum pattern
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multisample
argument_list|)
block|;
name|d
operator|->
name|SamplePatternEXT
argument_list|(
name|pattern
argument_list|)
block|; }
DECL|function|glSampleMaskEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multisample
operator|::
name|glSampleMaskEXT
argument_list|(
argument|GLclampf value
argument_list|,
argument|GLboolean invert
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multisample
argument_list|)
block|;
name|d
operator|->
name|SampleMaskEXT
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_paletted_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetColorTableParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetColorTableParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetColorTableEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorTableEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|table
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_paletted_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_paletted_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetColorTableParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetColorTableParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetColorTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glColorTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *table
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_paletted_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetColorTableParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_paletted_texture
operator|::
name|glGetColorTableParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_paletted_texture
argument_list|)
block|;
name|d
operator|->
name|GetColorTableParameterfvEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetColorTableParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_paletted_texture
operator|::
name|glGetColorTableParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_paletted_texture
argument_list|)
block|;
name|d
operator|->
name|GetColorTableParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetColorTableEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_paletted_texture
operator|::
name|glGetColorTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_paletted_texture
argument_list|)
block|;
name|d
operator|->
name|GetColorTableEXT
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glColorTableEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_paletted_texture
operator|::
name|glColorTableEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *table
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_paletted_texture
argument_list|)
block|;
name|d
operator|->
name|ColorTableEXT
argument_list|(
name|target
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|table
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_pixel_transformPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPixelTransformParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPixelTransformParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTransformParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTransformParameterivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTransformParameterfEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTransformParameteriEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_pixel_transform
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_pixel_transform
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetPixelTransformParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetPixelTransformParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glPixelTransformParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPixelTransformParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glPixelTransformParameterfEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glPixelTransformParameteriEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_pixel_transform
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetPixelTransformParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|glGetPixelTransformParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_pixel_transform
argument_list|)
block|;
name|d
operator|->
name|GetPixelTransformParameterfvEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetPixelTransformParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|glGetPixelTransformParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_pixel_transform
argument_list|)
block|;
name|d
operator|->
name|GetPixelTransformParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPixelTransformParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|glPixelTransformParameterfvEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_pixel_transform
argument_list|)
block|;
name|d
operator|->
name|PixelTransformParameterfvEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPixelTransformParameterivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|glPixelTransformParameterivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_pixel_transform
argument_list|)
block|;
name|d
operator|->
name|PixelTransformParameterivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPixelTransformParameterfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|glPixelTransformParameterfEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_pixel_transform
argument_list|)
block|;
name|d
operator|->
name|PixelTransformParameterfEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelTransformParameteriEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|glPixelTransformParameteriEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_pixel_transform
argument_list|)
block|;
name|d
operator|->
name|PixelTransformParameteriEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_point_parametersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameterfvEXT
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameterfEXT
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_point_parameters
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_point_parameters
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPointParameterfvEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPointParameterfEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_point_parameters
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPointParameterfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_point_parameters
operator|::
name|glPointParameterfvEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_point_parameters
argument_list|)
block|;
name|d
operator|->
name|PointParameterfvEXT
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameterfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_point_parameters
operator|::
name|glPointParameterfEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_point_parameters
argument_list|)
block|;
name|d
operator|->
name|PointParameterfEXT
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_polygon_offsetPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PolygonOffsetEXT
argument_list|)
operator|(
name|GLfloat
name|factor
operator|,
name|GLfloat
name|bias
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_polygon_offset
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_polygon_offset
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPolygonOffsetEXT
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat bias
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_polygon_offset
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPolygonOffsetEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_polygon_offset
operator|::
name|glPolygonOffsetEXT
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat bias
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_polygon_offset
argument_list|)
block|;
name|d
operator|->
name|PolygonOffsetEXT
argument_list|(
name|factor
argument_list|,
name|bias
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_provoking_vertexPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProvokingVertexEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_provoking_vertex
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_provoking_vertex
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProvokingVertexEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_provoking_vertex
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProvokingVertexEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_provoking_vertex
operator|::
name|glProvokingVertexEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_provoking_vertex
argument_list|)
block|;
name|d
operator|->
name|ProvokingVertexEXT
argument_list|(
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_secondary_colorPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColorPointerEXT
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3usvEXT
argument_list|)
operator|(
specifier|const
name|GLushort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3usEXT
argument_list|)
operator|(
name|GLushort
name|red
operator|,
name|GLushort
name|green
operator|,
name|GLushort
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3uivEXT
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3uiEXT
argument_list|)
operator|(
name|GLuint
name|red
operator|,
name|GLuint
name|green
operator|,
name|GLuint
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3ubvEXT
argument_list|)
operator|(
specifier|const
name|GLubyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3ubEXT
argument_list|)
operator|(
name|GLubyte
name|red
operator|,
name|GLubyte
name|green
operator|,
name|GLubyte
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3svEXT
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3sEXT
argument_list|)
operator|(
name|GLshort
name|red
operator|,
name|GLshort
name|green
operator|,
name|GLshort
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3ivEXT
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3iEXT
argument_list|)
operator|(
name|GLint
name|red
operator|,
name|GLint
name|green
operator|,
name|GLint
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3fvEXT
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3fEXT
argument_list|)
operator|(
name|GLfloat
name|red
operator|,
name|GLfloat
name|green
operator|,
name|GLfloat
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3dvEXT
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3dEXT
argument_list|)
operator|(
name|GLdouble
name|red
operator|,
name|GLdouble
name|green
operator|,
name|GLdouble
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3bvEXT
argument_list|)
operator|(
specifier|const
name|GLbyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3bEXT
argument_list|)
operator|(
name|GLbyte
name|red
operator|,
name|GLbyte
name|green
operator|,
name|GLbyte
name|blue
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_secondary_color
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_secondary_color
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSecondaryColorPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glSecondaryColor3usvEXT
argument_list|(
specifier|const
name|GLushort
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3usEXT
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|;
name|void
name|glSecondaryColor3uivEXT
argument_list|(
specifier|const
name|GLuint
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3uiEXT
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|;
name|void
name|glSecondaryColor3ubvEXT
argument_list|(
specifier|const
name|GLubyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3ubEXT
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|;
name|void
name|glSecondaryColor3svEXT
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3sEXT
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|;
name|void
name|glSecondaryColor3ivEXT
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3iEXT
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|;
name|void
name|glSecondaryColor3fvEXT
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3fEXT
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|;
name|void
name|glSecondaryColor3dvEXT
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3dEXT
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|;
name|void
name|glSecondaryColor3bvEXT
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3bEXT
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSecondaryColorPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColorPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColorPointerEXT
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glSecondaryColor3usvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3usvEXT
argument_list|(
argument|const GLushort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3usvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3usEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3usEXT
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3usEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3uivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3uivEXT
argument_list|(
argument|const GLuint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3uivEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3uiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3uiEXT
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3uiEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3ubvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3ubvEXT
argument_list|(
argument|const GLubyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3ubvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3ubEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3ubEXT
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3ubEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3svEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3svEXT
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3svEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3sEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3sEXT
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3sEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3ivEXT
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3ivEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3iEXT
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3iEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3fvEXT
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3fvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3fEXT
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3fEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3dvEXT
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3dvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3dEXT
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3dEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3bvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3bvEXT
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3bvEXT
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3bEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|glSecondaryColor3bEXT
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3bEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_separate_shader_objectsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP CreateShaderProgramEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLchar
operator|*
name|string
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ActiveProgramEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UseShaderProgramEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|program
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_separate_shader_objects
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLuint
name|glCreateShaderProgramEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLchar *string
argument_list|)
block|;
name|void
name|glActiveProgramEXT
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glUseShaderProgramEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCreateShaderProgramEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glCreateShaderProgramEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLchar *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|CreateShaderProgramEXT
argument_list|(
name|type
argument_list|,
name|string
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glActiveProgramEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glActiveProgramEXT
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ActiveProgramEXT
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glUseShaderProgramEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glUseShaderProgramEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|UseShaderProgramEXT
argument_list|(
name|type
argument_list|,
name|program
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_shader_image_load_storePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MemoryBarrierEXT
argument_list|)
operator|(
name|GLbitfield
name|barriers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindImageTextureEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLboolean
name|layered
operator|,
name|GLint
name|layer
operator|,
name|GLenum
name|access
operator|,
name|GLint
name|format
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_shader_image_load_store
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_shader_image_load_store
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMemoryBarrierEXT
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|;
name|void
name|glBindImageTextureEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum access
argument_list|,
argument|GLint format
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_shader_image_load_store
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMemoryBarrierEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_shader_image_load_store
operator|::
name|glMemoryBarrierEXT
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_shader_image_load_store
argument_list|)
block|;
name|d
operator|->
name|MemoryBarrierEXT
argument_list|(
name|barriers
argument_list|)
block|; }
DECL|function|glBindImageTextureEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_shader_image_load_store
operator|::
name|glBindImageTextureEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum access
argument_list|,
argument|GLint format
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_shader_image_load_store
argument_list|)
block|;
name|d
operator|->
name|BindImageTextureEXT
argument_list|(
name|index
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layered
argument_list|,
name|layer
argument_list|,
name|access
argument_list|,
name|format
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_stencil_clear_tagPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilClearTagEXT
argument_list|)
operator|(
name|GLsizei
name|stencilTagBits
operator|,
name|GLuint
name|stencilClearTag
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_stencil_clear_tag
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_stencil_clear_tag
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glStencilClearTagEXT
argument_list|(
argument|GLsizei stencilTagBits
argument_list|,
argument|GLuint stencilClearTag
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_stencil_clear_tag
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glStencilClearTagEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_stencil_clear_tag
operator|::
name|glStencilClearTagEXT
argument_list|(
argument|GLsizei stencilTagBits
argument_list|,
argument|GLuint stencilClearTag
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_stencil_clear_tag
argument_list|)
block|;
name|d
operator|->
name|StencilClearTagEXT
argument_list|(
name|stencilTagBits
argument_list|,
name|stencilClearTag
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_stencil_two_sidePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ActiveStencilFaceEXT
argument_list|)
operator|(
name|GLenum
name|face
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_stencil_two_side
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_stencil_two_side
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glActiveStencilFaceEXT
argument_list|(
argument|GLenum face
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_stencil_two_side
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glActiveStencilFaceEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_stencil_two_side
operator|::
name|glActiveStencilFaceEXT
argument_list|(
argument|GLenum face
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_stencil_two_side
argument_list|)
block|;
name|d
operator|->
name|ActiveStencilFaceEXT
argument_list|(
name|face
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_subtexturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexSubImage2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexSubImage1DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_subtexture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_subtexture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexSubImage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexSubImage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_subtexture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexSubImage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_subtexture
operator|::
name|glTexSubImage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_subtexture
argument_list|)
block|;
name|d
operator|->
name|TexSubImage2DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexSubImage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_subtexture
operator|::
name|glTexSubImage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_subtexture
argument_list|)
block|;
name|d
operator|->
name|TexSubImage1DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_texture3DPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexSubImage3DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexImage3DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_texture3D
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_texture3D
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexSubImage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexImage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_texture3D
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexSubImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture3D
operator|::
name|glTexSubImage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture3D
argument_list|)
block|;
name|d
operator|->
name|TexSubImage3DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexImage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture3D
operator|::
name|glTexImage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture3D
argument_list|)
block|;
name|d
operator|->
name|TexImage3DEXT
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_texture_buffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexBufferEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLuint
name|buffer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_texture_buffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_texture_buffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexBufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_texture_buffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexBufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_buffer_object
operator|::
name|glTexBufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_buffer_object
argument_list|)
block|;
name|d
operator|->
name|TexBufferEXT
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_texture_integerPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearColorIuiEXT
argument_list|)
operator|(
name|GLuint
name|red
operator|,
name|GLuint
name|green
operator|,
name|GLuint
name|blue
operator|,
name|GLuint
name|alpha
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearColorIiEXT
argument_list|)
operator|(
name|GLint
name|red
operator|,
name|GLint
name|green
operator|,
name|GLint
name|blue
operator|,
name|GLint
name|alpha
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTexParameterIuivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTexParameterIivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexParameterIuivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexParameterIivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_texture_integer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_texture_integer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glClearColorIuiEXT
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|,
argument|GLuint alpha
argument_list|)
block|;
name|void
name|glClearColorIiEXT
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|,
argument|GLint alpha
argument_list|)
block|;
name|void
name|glGetTexParameterIuivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetTexParameterIivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glTexParameterIuivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glTexParameterIivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_texture_integer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glClearColorIuiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|glClearColorIuiEXT
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|,
argument|GLuint alpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_integer
argument_list|)
block|;
name|d
operator|->
name|ClearColorIuiEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glClearColorIiEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|glClearColorIiEXT
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|,
argument|GLint alpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_integer
argument_list|)
block|;
name|d
operator|->
name|ClearColorIiEXT
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glGetTexParameterIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|glGetTexParameterIuivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_integer
argument_list|)
block|;
name|d
operator|->
name|GetTexParameterIuivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameterIivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|glGetTexParameterIivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_integer
argument_list|)
block|;
name|d
operator|->
name|GetTexParameterIivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|glTexParameterIuivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_integer
argument_list|)
block|;
name|d
operator|->
name|TexParameterIuivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterIivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|glTexParameterIivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_integer
argument_list|)
block|;
name|d
operator|->
name|TexParameterIivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_texture_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PrioritizeTexturesEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|textures
operator|,
specifier|const
name|GLclampf
operator|*
name|priorities
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsTextureEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenTexturesEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|textures
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteTexturesEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|textures
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindTextureEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|texture
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP AreTexturesResidentEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|textures
operator|,
name|GLboolean
operator|*
name|residences
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_texture_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_texture_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPrioritizeTexturesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|const GLclampf *priorities
argument_list|)
block|;
name|GLboolean
name|glIsTextureEXT
argument_list|(
argument|GLuint texture
argument_list|)
block|;
name|void
name|glGenTexturesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|;
name|void
name|glDeleteTexturesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|;
name|void
name|glBindTextureEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|;
name|GLboolean
name|glAreTexturesResidentEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|GLboolean *residences
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_texture_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPrioritizeTexturesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_object
operator|::
name|glPrioritizeTexturesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|const GLclampf *priorities
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_object
argument_list|)
block|;
name|d
operator|->
name|PrioritizeTexturesEXT
argument_list|(
name|n
argument_list|,
name|textures
argument_list|,
name|priorities
argument_list|)
block|; }
DECL|function|glIsTextureEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_texture_object
operator|::
name|glIsTextureEXT
argument_list|(
argument|GLuint texture
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsTextureEXT
argument_list|(
name|texture
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenTexturesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_object
operator|::
name|glGenTexturesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_object
argument_list|)
block|;
name|d
operator|->
name|GenTexturesEXT
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glDeleteTexturesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_object
operator|::
name|glDeleteTexturesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_object
argument_list|)
block|;
name|d
operator|->
name|DeleteTexturesEXT
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glBindTextureEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_object
operator|::
name|glBindTextureEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_object
argument_list|)
block|;
name|d
operator|->
name|BindTextureEXT
argument_list|(
name|target
argument_list|,
name|texture
argument_list|)
block|; }
DECL|function|glAreTexturesResidentEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_texture_object
operator|::
name|glAreTexturesResidentEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|GLboolean *residences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_object
argument_list|)
block|;
return|return
name|d
operator|->
name|AreTexturesResidentEXT
argument_list|(
name|n
argument_list|,
name|textures
argument_list|,
name|residences
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_texture_perturb_normalPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureNormalEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_texture_perturb_normal
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_texture_perturb_normal
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTextureNormalEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_texture_perturb_normal
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTextureNormalEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_perturb_normal
operator|::
name|glTextureNormalEXT
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_perturb_normal
argument_list|)
block|;
name|d
operator|->
name|TextureNormalEXT
argument_list|(
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_timer_queryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryObjectui64vEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLuint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryObjecti64vEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLint64EXT
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_timer_query
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_timer_query
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetQueryObjectui64vEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|;
name|void
name|glGetQueryObjecti64vEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_timer_query
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetQueryObjectui64vEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_timer_query
operator|::
name|glGetQueryObjectui64vEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_timer_query
argument_list|)
block|;
name|d
operator|->
name|GetQueryObjectui64vEXT
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjecti64vEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_timer_query
operator|::
name|glGetQueryObjecti64vEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_timer_query
argument_list|)
block|;
name|d
operator|->
name|GetQueryObjecti64vEXT
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_transform_feedbackPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTransformFeedbackVaryingEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLsizei
operator|*
name|size
operator|,
name|GLenum
operator|*
name|type
operator|,
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TransformFeedbackVaryingsEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLchar
operator|*
operator|*
name|varyings
operator|,
name|GLenum
name|bufferMode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindBufferBaseEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindBufferOffsetEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindBufferRangeEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndTransformFeedbackEXT
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginTransformFeedbackEXT
argument_list|)
operator|(
name|GLenum
name|primitiveMode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_transform_feedback
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_transform_feedback
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetTransformFeedbackVaryingEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glTransformFeedbackVaryingsEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* *varyings
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|;
name|void
name|glBindBufferBaseEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glBindBufferOffsetEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|)
block|;
name|void
name|glBindBufferRangeEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glEndTransformFeedbackEXT
argument_list|()
block|;
name|void
name|glBeginTransformFeedbackEXT
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetTransformFeedbackVaryingEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|glGetTransformFeedbackVaryingEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|GetTransformFeedbackVaryingEXT
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glTransformFeedbackVaryingsEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|glTransformFeedbackVaryingsEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* *varyings
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|TransformFeedbackVaryingsEXT
argument_list|(
name|program
argument_list|,
name|count
argument_list|,
name|varyings
argument_list|,
name|bufferMode
argument_list|)
block|; }
DECL|function|glBindBufferBaseEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|glBindBufferBaseEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BindBufferBaseEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glBindBufferOffsetEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|glBindBufferOffsetEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BindBufferOffsetEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|)
block|; }
DECL|function|glBindBufferRangeEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|glBindBufferRangeEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BindBufferRangeEXT
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glEndTransformFeedbackEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|glEndTransformFeedbackEXT
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|EndTransformFeedbackEXT
argument_list|()
block|; }
DECL|function|glBeginTransformFeedbackEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|glBeginTransformFeedbackEXT
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BeginTransformFeedbackEXT
argument_list|(
name|primitiveMode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_vertex_arrayPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexPointerEXT
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordPointerEXT
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalPointerEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP IndexPointerEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPointervEXT
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EdgeFlagPointerEXT
argument_list|)
operator|(
name|GLsizei
name|stride
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLboolean
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawArraysEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorPointerEXT
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ArrayElementEXT
argument_list|)
operator|(
name|GLint
name|i
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_vertex_array
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_vertex_array
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glTexCoordPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glNormalPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glIndexPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glGetPointervEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glEdgeFlagPointerEXT
argument_list|(
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLboolean *pointer
argument_list|)
block|;
name|void
name|glDrawArraysEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|;
name|void
name|glColorPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glArrayElementEXT
argument_list|(
argument|GLint i
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glVertexPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|VertexPointerEXT
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|count
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glTexCoordPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glTexCoordPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|TexCoordPointerEXT
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|count
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glNormalPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glNormalPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|NormalPointerEXT
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|count
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glIndexPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glIndexPointerEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|IndexPointerEXT
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|count
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glGetPointervEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glGetPointervEXT
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|GetPointervEXT
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEdgeFlagPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glEdgeFlagPointerEXT
argument_list|(
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLboolean *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|EdgeFlagPointerEXT
argument_list|(
name|stride
argument_list|,
name|count
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glDrawArraysEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glDrawArraysEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|DrawArraysEXT
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|)
block|; }
DECL|function|glColorPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glColorPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|ColorPointerEXT
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|count
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glArrayElementEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|glArrayElementEXT
argument_list|(
argument|GLint i
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
block|;
name|d
operator|->
name|ArrayElementEXT
argument_list|(
name|i
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_vertex_attrib_64bitPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayVertexAttribLOffsetEXT
argument_list|)
operator|(
name|GLuint
name|vaobj
operator|,
name|GLuint
name|buffer
operator|,
name|GLuint
name|index
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
name|GLintptr
name|offset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribLdvEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribLPointerEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4dvEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3dvEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2dvEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1dvEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4dEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3dEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2dEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1dEXT
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_vertex_attrib_64bit
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexArrayVertexAttribLOffsetEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLintptr offset
argument_list|)
block|;
name|void
name|glGetVertexAttribLdvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glVertexAttribLPointerEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glVertexAttribL4dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL3dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL2dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL1dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL4dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexAttribL3dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexAttribL2dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexAttribL1dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexArrayVertexAttribLOffsetEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexArrayVertexAttribLOffsetEXT
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLintptr offset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexArrayVertexAttribLOffsetEXT
argument_list|(
name|vaobj
argument_list|,
name|buffer
argument_list|,
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|offset
argument_list|)
block|; }
DECL|function|glGetVertexAttribLdvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glGetVertexAttribLdvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribLdvEXT
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribLPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribLPointerEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribLPointerEXT
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexAttribL4dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL4dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4dvEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL3dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL3dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3dvEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL2dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL2dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2dvEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL1dvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL1dvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1dvEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL4dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL4dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4dEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribL3dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL3dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3dEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribL2dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL2dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2dEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribL1dEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|glVertexAttribL1dEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1dEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_vertex_shaderPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetLocalConstantFloatvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLfloat
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetLocalConstantIntegervEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLint
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetLocalConstantBooleanvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLboolean
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetInvariantFloatvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLfloat
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetInvariantIntegervEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLint
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetInvariantBooleanvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLboolean
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVariantPointervEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLvoid
operator|*
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVariantFloatvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLfloat
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVariantIntegervEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLint
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVariantBooleanvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|value
operator|,
name|GLboolean
operator|*
name|data
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsVariantEnabledEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|cap
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP BindParameterEXT
argument_list|)
operator|(
name|GLenum
name|value
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP BindTextureUnitParameterEXT
argument_list|)
operator|(
name|GLenum
name|unit
operator|,
name|GLenum
name|value
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP BindTexGenParameterEXT
argument_list|)
operator|(
name|GLenum
name|unit
operator|,
name|GLenum
name|coord
operator|,
name|GLenum
name|value
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP BindMaterialParameterEXT
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|value
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP BindLightParameterEXT
argument_list|)
operator|(
name|GLenum
name|light
operator|,
name|GLenum
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DisableVariantClientStateEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EnableVariantClientStateEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantPointerEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantuivEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLuint
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantusvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLushort
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantubvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLubyte
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantdvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLdouble
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantfvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLfloat
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantivEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLint
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantsvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLshort
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VariantbvEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
specifier|const
name|GLbyte
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SetLocalConstantEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|addr
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SetInvariantEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|addr
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GenSymbolsEXT
argument_list|)
operator|(
name|GLenum
name|datatype
operator|,
name|GLenum
name|storagetype
operator|,
name|GLenum
name|range
operator|,
name|GLuint
name|components
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtractComponentEXT
argument_list|)
operator|(
name|GLuint
name|res
operator|,
name|GLuint
name|src
operator|,
name|GLuint
name|num
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InsertComponentEXT
argument_list|)
operator|(
name|GLuint
name|res
operator|,
name|GLuint
name|src
operator|,
name|GLuint
name|num
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WriteMaskEXT
argument_list|)
operator|(
name|GLuint
name|res
operator|,
name|GLuint
name|in
operator|,
name|GLenum
name|outX
operator|,
name|GLenum
name|outY
operator|,
name|GLenum
name|outZ
operator|,
name|GLenum
name|outW
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SwizzleEXT
argument_list|)
operator|(
name|GLuint
name|res
operator|,
name|GLuint
name|in
operator|,
name|GLenum
name|outX
operator|,
name|GLenum
name|outY
operator|,
name|GLenum
name|outZ
operator|,
name|GLenum
name|outW
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ShaderOp3EXT
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|res
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg2
operator|,
name|GLuint
name|arg3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ShaderOp2EXT
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|res
operator|,
name|GLuint
name|arg1
operator|,
name|GLuint
name|arg2
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ShaderOp1EXT
argument_list|)
operator|(
name|GLenum
name|op
operator|,
name|GLuint
name|res
operator|,
name|GLuint
name|arg1
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteVertexShaderEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GenVertexShadersEXT
argument_list|)
operator|(
name|GLuint
name|range
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindVertexShaderEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndVertexShaderEXT
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginVertexShaderEXT
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_vertex_shader
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_vertex_shader
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetLocalConstantFloatvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLfloat *data
argument_list|)
block|;
name|void
name|glGetLocalConstantIntegervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLint *data
argument_list|)
block|;
name|void
name|glGetLocalConstantBooleanvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLboolean *data
argument_list|)
block|;
name|void
name|glGetInvariantFloatvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLfloat *data
argument_list|)
block|;
name|void
name|glGetInvariantIntegervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLint *data
argument_list|)
block|;
name|void
name|glGetInvariantBooleanvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLboolean *data
argument_list|)
block|;
name|void
name|glGetVariantPointervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLvoid* *data
argument_list|)
block|;
name|void
name|glGetVariantFloatvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLfloat *data
argument_list|)
block|;
name|void
name|glGetVariantIntegervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLint *data
argument_list|)
block|;
name|void
name|glGetVariantBooleanvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLboolean *data
argument_list|)
block|;
name|GLboolean
name|glIsVariantEnabledEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum cap
argument_list|)
block|;
name|GLuint
name|glBindParameterEXT
argument_list|(
argument|GLenum value
argument_list|)
block|;
name|GLuint
name|glBindTextureUnitParameterEXT
argument_list|(
argument|GLenum unit
argument_list|,
argument|GLenum value
argument_list|)
block|;
name|GLuint
name|glBindTexGenParameterEXT
argument_list|(
argument|GLenum unit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum value
argument_list|)
block|;
name|GLuint
name|glBindMaterialParameterEXT
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum value
argument_list|)
block|;
name|GLuint
name|glBindLightParameterEXT
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum value
argument_list|)
block|;
name|void
name|glDisableVariantClientStateEXT
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glEnableVariantClientStateEXT
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glVariantPointerEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint stride
argument_list|,
argument|const GLvoid *addr
argument_list|)
block|;
name|void
name|glVariantuivEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLuint *addr
argument_list|)
block|;
name|void
name|glVariantusvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLushort *addr
argument_list|)
block|;
name|void
name|glVariantubvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLubyte *addr
argument_list|)
block|;
name|void
name|glVariantdvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLdouble *addr
argument_list|)
block|;
name|void
name|glVariantfvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLfloat *addr
argument_list|)
block|;
name|void
name|glVariantivEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLint *addr
argument_list|)
block|;
name|void
name|glVariantsvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLshort *addr
argument_list|)
block|;
name|void
name|glVariantbvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLbyte *addr
argument_list|)
block|;
name|void
name|glSetLocalConstantEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *addr
argument_list|)
block|;
name|void
name|glSetInvariantEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *addr
argument_list|)
block|;
name|GLuint
name|glGenSymbolsEXT
argument_list|(
argument|GLenum datatype
argument_list|,
argument|GLenum storagetype
argument_list|,
argument|GLenum range
argument_list|,
argument|GLuint components
argument_list|)
block|;
name|void
name|glExtractComponentEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint src
argument_list|,
argument|GLuint num
argument_list|)
block|;
name|void
name|glInsertComponentEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint src
argument_list|,
argument|GLuint num
argument_list|)
block|;
name|void
name|glWriteMaskEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint in
argument_list|,
argument|GLenum outX
argument_list|,
argument|GLenum outY
argument_list|,
argument|GLenum outZ
argument_list|,
argument|GLenum outW
argument_list|)
block|;
name|void
name|glSwizzleEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint in
argument_list|,
argument|GLenum outX
argument_list|,
argument|GLenum outY
argument_list|,
argument|GLenum outZ
argument_list|,
argument|GLenum outW
argument_list|)
block|;
name|void
name|glShaderOp3EXT
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint res
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg3
argument_list|)
block|;
name|void
name|glShaderOp2EXT
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint res
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg2
argument_list|)
block|;
name|void
name|glShaderOp1EXT
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint res
argument_list|,
argument|GLuint arg1
argument_list|)
block|;
name|void
name|glDeleteVertexShaderEXT
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|GLuint
name|glGenVertexShadersEXT
argument_list|(
argument|GLuint range
argument_list|)
block|;
name|void
name|glBindVertexShaderEXT
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glEndVertexShaderEXT
argument_list|()
block|;
name|void
name|glBeginVertexShaderEXT
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetLocalConstantFloatvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetLocalConstantFloatvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLfloat *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetLocalConstantFloatvEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetLocalConstantIntegervEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetLocalConstantIntegervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLint *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetLocalConstantIntegervEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetLocalConstantBooleanvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetLocalConstantBooleanvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLboolean *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetLocalConstantBooleanvEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetInvariantFloatvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetInvariantFloatvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLfloat *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetInvariantFloatvEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetInvariantIntegervEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetInvariantIntegervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLint *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetInvariantIntegervEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetInvariantBooleanvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetInvariantBooleanvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLboolean *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetInvariantBooleanvEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetVariantPointervEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetVariantPointervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLvoid* *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetVariantPointervEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetVariantFloatvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetVariantFloatvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLfloat *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetVariantFloatvEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetVariantIntegervEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetVariantIntegervEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLint *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetVariantIntegervEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetVariantBooleanvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGetVariantBooleanvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum value
argument_list|,
argument|GLboolean *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|GetVariantBooleanvEXT
argument_list|(
name|id
argument_list|,
name|value
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glIsVariantEnabledEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glIsVariantEnabledEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum cap
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|IsVariantEnabledEXT
argument_list|(
name|id
argument_list|,
name|cap
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindParameterEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glBindParameterEXT
argument_list|(
argument|GLenum value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|BindParameterEXT
argument_list|(
name|value
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindTextureUnitParameterEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glBindTextureUnitParameterEXT
argument_list|(
argument|GLenum unit
argument_list|,
argument|GLenum value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|BindTextureUnitParameterEXT
argument_list|(
name|unit
argument_list|,
name|value
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindTexGenParameterEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glBindTexGenParameterEXT
argument_list|(
argument|GLenum unit
argument_list|,
argument|GLenum coord
argument_list|,
argument|GLenum value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|BindTexGenParameterEXT
argument_list|(
name|unit
argument_list|,
name|coord
argument_list|,
name|value
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindMaterialParameterEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glBindMaterialParameterEXT
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|BindMaterialParameterEXT
argument_list|(
name|face
argument_list|,
name|value
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindLightParameterEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glBindLightParameterEXT
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|BindLightParameterEXT
argument_list|(
name|light
argument_list|,
name|value
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDisableVariantClientStateEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glDisableVariantClientStateEXT
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|DisableVariantClientStateEXT
argument_list|(
name|id
argument_list|)
block|; }
DECL|function|glEnableVariantClientStateEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glEnableVariantClientStateEXT
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|EnableVariantClientStateEXT
argument_list|(
name|id
argument_list|)
block|; }
DECL|function|glVariantPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantPointerEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint stride
argument_list|,
argument|const GLvoid *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantPointerEXT
argument_list|(
name|id
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantuivEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLuint *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantuivEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantusvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantusvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLushort *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantusvEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantubvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantubvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLubyte *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantubvEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantdvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantdvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLdouble *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantdvEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantfvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLfloat *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantfvEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantivEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLint *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantivEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantsvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantsvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLshort *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantsvEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glVariantbvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glVariantbvEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|const GLbyte *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|VariantbvEXT
argument_list|(
name|id
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glSetLocalConstantEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glSetLocalConstantEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|SetLocalConstantEXT
argument_list|(
name|id
argument_list|,
name|type
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glSetInvariantEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glSetInvariantEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *addr
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|SetInvariantEXT
argument_list|(
name|id
argument_list|,
name|type
argument_list|,
name|addr
argument_list|)
block|; }
DECL|function|glGenSymbolsEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGenSymbolsEXT
argument_list|(
argument|GLenum datatype
argument_list|,
argument|GLenum storagetype
argument_list|,
argument|GLenum range
argument_list|,
argument|GLuint components
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|GenSymbolsEXT
argument_list|(
name|datatype
argument_list|,
name|storagetype
argument_list|,
name|range
argument_list|,
name|components
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glExtractComponentEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glExtractComponentEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint src
argument_list|,
argument|GLuint num
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|ExtractComponentEXT
argument_list|(
name|res
argument_list|,
name|src
argument_list|,
name|num
argument_list|)
block|; }
DECL|function|glInsertComponentEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glInsertComponentEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint src
argument_list|,
argument|GLuint num
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|InsertComponentEXT
argument_list|(
name|res
argument_list|,
name|src
argument_list|,
name|num
argument_list|)
block|; }
DECL|function|glWriteMaskEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glWriteMaskEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint in
argument_list|,
argument|GLenum outX
argument_list|,
argument|GLenum outY
argument_list|,
argument|GLenum outZ
argument_list|,
argument|GLenum outW
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|WriteMaskEXT
argument_list|(
name|res
argument_list|,
name|in
argument_list|,
name|outX
argument_list|,
name|outY
argument_list|,
name|outZ
argument_list|,
name|outW
argument_list|)
block|; }
DECL|function|glSwizzleEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glSwizzleEXT
argument_list|(
argument|GLuint res
argument_list|,
argument|GLuint in
argument_list|,
argument|GLenum outX
argument_list|,
argument|GLenum outY
argument_list|,
argument|GLenum outZ
argument_list|,
argument|GLenum outW
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|SwizzleEXT
argument_list|(
name|res
argument_list|,
name|in
argument_list|,
name|outX
argument_list|,
name|outY
argument_list|,
name|outZ
argument_list|,
name|outW
argument_list|)
block|; }
DECL|function|glShaderOp3EXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glShaderOp3EXT
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint res
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg2
argument_list|,
argument|GLuint arg3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|ShaderOp3EXT
argument_list|(
name|op
argument_list|,
name|res
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|,
name|arg3
argument_list|)
block|; }
DECL|function|glShaderOp2EXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glShaderOp2EXT
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint res
argument_list|,
argument|GLuint arg1
argument_list|,
argument|GLuint arg2
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|ShaderOp2EXT
argument_list|(
name|op
argument_list|,
name|res
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
block|; }
DECL|function|glShaderOp1EXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glShaderOp1EXT
argument_list|(
argument|GLenum op
argument_list|,
argument|GLuint res
argument_list|,
argument|GLuint arg1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|ShaderOp1EXT
argument_list|(
name|op
argument_list|,
name|res
argument_list|,
name|arg1
argument_list|)
block|; }
DECL|function|glDeleteVertexShaderEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glDeleteVertexShaderEXT
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|DeleteVertexShaderEXT
argument_list|(
name|id
argument_list|)
block|; }
DECL|function|glGenVertexShadersEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glGenVertexShadersEXT
argument_list|(
argument|GLuint range
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
return|return
name|d
operator|->
name|GenVertexShadersEXT
argument_list|(
name|range
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindVertexShaderEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glBindVertexShaderEXT
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|BindVertexShaderEXT
argument_list|(
name|id
argument_list|)
block|; }
DECL|function|glEndVertexShaderEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glEndVertexShaderEXT
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|EndVertexShaderEXT
argument_list|()
block|; }
DECL|function|glBeginVertexShaderEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|glBeginVertexShaderEXT
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
block|;
name|d
operator|->
name|BeginVertexShaderEXT
argument_list|()
block|; }
name|class
name|QOpenGLExtension_EXT_vertex_weightingPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexWeightPointerEXT
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexWeightfvEXT
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|weight
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexWeightfEXT
argument_list|)
operator|(
name|GLfloat
name|weight
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_vertex_weighting
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_vertex_weighting
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexWeightPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glVertexWeightfvEXT
argument_list|(
specifier|const
name|GLfloat
operator|*
name|weight
argument_list|)
block|;
name|void
name|glVertexWeightfEXT
argument_list|(
argument|GLfloat weight
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_vertex_weighting
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexWeightPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_weighting
operator|::
name|glVertexWeightPointerEXT
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_weighting
argument_list|)
block|;
name|d
operator|->
name|VertexWeightPointerEXT
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexWeightfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_weighting
operator|::
name|glVertexWeightfvEXT
argument_list|(
argument|const GLfloat *weight
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_weighting
argument_list|)
block|;
name|d
operator|->
name|VertexWeightfvEXT
argument_list|(
name|weight
argument_list|)
block|; }
DECL|function|glVertexWeightfEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_vertex_weighting
operator|::
name|glVertexWeightfEXT
argument_list|(
argument|GLfloat weight
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_weighting
argument_list|)
block|;
name|d
operator|->
name|VertexWeightfEXT
argument_list|(
name|weight
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_x11_sync_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLsync
argument_list|(
argument|QOPENGLF_APIENTRYP ImportSyncEXT
argument_list|)
operator|(
name|GLenum
name|external_sync_type
operator|,
name|GLintptr
name|external_sync
operator|,
name|GLbitfield
name|flags
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_x11_sync_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_x11_sync_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLsync
name|glImportSyncEXT
argument_list|(
argument|GLenum external_sync_type
argument_list|,
argument|GLintptr external_sync
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_x11_sync_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glImportSyncEXT
specifier|inline
name|GLsync
name|QOpenGLExtension_EXT_x11_sync_object
operator|::
name|glImportSyncEXT
argument_list|(
argument|GLenum external_sync_type
argument_list|,
argument|GLintptr external_sync
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_x11_sync_object
argument_list|)
block|;
return|return
name|d
operator|->
name|ImportSyncEXT
argument_list|(
name|external_sync_type
argument_list|,
name|external_sync
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_GREMEDY_frame_terminatorPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FrameTerminatorGREMEDY
argument_list|)
operator|(
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_GREMEDY_frame_terminator
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_GREMEDY_frame_terminator
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFrameTerminatorGREMEDY
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_GREMEDY_frame_terminator
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFrameTerminatorGREMEDY
specifier|inline
name|void
name|QOpenGLExtension_GREMEDY_frame_terminator
operator|::
name|glFrameTerminatorGREMEDY
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_GREMEDY_frame_terminator
argument_list|)
block|;
name|d
operator|->
name|FrameTerminatorGREMEDY
argument_list|()
block|; }
name|class
name|QOpenGLExtension_GREMEDY_string_markerPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StringMarkerGREMEDY
argument_list|)
operator|(
name|GLsizei
name|len
operator|,
specifier|const
name|GLvoid
operator|*
name|string
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_GREMEDY_string_marker
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_GREMEDY_string_marker
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glStringMarkerGREMEDY
argument_list|(
argument|GLsizei len
argument_list|,
argument|const GLvoid *string
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_GREMEDY_string_marker
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glStringMarkerGREMEDY
specifier|inline
name|void
name|QOpenGLExtension_GREMEDY_string_marker
operator|::
name|glStringMarkerGREMEDY
argument_list|(
argument|GLsizei len
argument_list|,
argument|const GLvoid *string
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_GREMEDY_string_marker
argument_list|)
block|;
name|d
operator|->
name|StringMarkerGREMEDY
argument_list|(
name|len
argument_list|,
name|string
argument_list|)
block|; }
name|class
name|QOpenGLExtension_HP_image_transformPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetImageTransformParameterfvHP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetImageTransformParameterivHP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ImageTransformParameterfvHP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ImageTransformParameterivHP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ImageTransformParameterfHP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ImageTransformParameteriHP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_HP_image_transform
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_HP_image_transform
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetImageTransformParameterfvHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetImageTransformParameterivHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glImageTransformParameterfvHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glImageTransformParameterivHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glImageTransformParameterfHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glImageTransformParameteriHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_HP_image_transform
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetImageTransformParameterfvHP
specifier|inline
name|void
name|QOpenGLExtension_HP_image_transform
operator|::
name|glGetImageTransformParameterfvHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_HP_image_transform
argument_list|)
block|;
name|d
operator|->
name|GetImageTransformParameterfvHP
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetImageTransformParameterivHP
specifier|inline
name|void
name|QOpenGLExtension_HP_image_transform
operator|::
name|glGetImageTransformParameterivHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_HP_image_transform
argument_list|)
block|;
name|d
operator|->
name|GetImageTransformParameterivHP
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glImageTransformParameterfvHP
specifier|inline
name|void
name|QOpenGLExtension_HP_image_transform
operator|::
name|glImageTransformParameterfvHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_HP_image_transform
argument_list|)
block|;
name|d
operator|->
name|ImageTransformParameterfvHP
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glImageTransformParameterivHP
specifier|inline
name|void
name|QOpenGLExtension_HP_image_transform
operator|::
name|glImageTransformParameterivHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_HP_image_transform
argument_list|)
block|;
name|d
operator|->
name|ImageTransformParameterivHP
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glImageTransformParameterfHP
specifier|inline
name|void
name|QOpenGLExtension_HP_image_transform
operator|::
name|glImageTransformParameterfHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_HP_image_transform
argument_list|)
block|;
name|d
operator|->
name|ImageTransformParameterfHP
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glImageTransformParameteriHP
specifier|inline
name|void
name|QOpenGLExtension_HP_image_transform
operator|::
name|glImageTransformParameteriHP
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_HP_image_transform
argument_list|)
block|;
name|d
operator|->
name|ImageTransformParameteriHP
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_IBM_multimode_draw_arraysPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiModeDrawElementsIBM
argument_list|)
operator|(
specifier|const
name|GLenum
operator|*
name|mode
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
specifier|const
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|,
name|GLint
name|modestride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiModeDrawArraysIBM
argument_list|)
operator|(
specifier|const
name|GLenum
operator|*
name|mode
operator|,
specifier|const
name|GLint
operator|*
name|first
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLsizei
name|primcount
operator|,
name|GLint
name|modestride
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_IBM_multimode_draw_arrays
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_IBM_multimode_draw_arrays
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiModeDrawElementsIBM
argument_list|(
argument|const GLenum *mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLint modestride
argument_list|)
block|;
name|void
name|glMultiModeDrawArraysIBM
argument_list|(
argument|const GLenum *mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLint modestride
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_IBM_multimode_draw_arrays
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiModeDrawElementsIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_multimode_draw_arrays
operator|::
name|glMultiModeDrawElementsIBM
argument_list|(
argument|const GLenum *mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLint modestride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_multimode_draw_arrays
argument_list|)
block|;
name|d
operator|->
name|MultiModeDrawElementsIBM
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|primcount
argument_list|,
name|modestride
argument_list|)
block|; }
DECL|function|glMultiModeDrawArraysIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_multimode_draw_arrays
operator|::
name|glMultiModeDrawArraysIBM
argument_list|(
argument|const GLenum *mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|,
argument|GLint modestride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_multimode_draw_arrays
argument_list|)
block|;
name|d
operator|->
name|MultiModeDrawArraysIBM
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|,
name|modestride
argument_list|)
block|; }
name|class
name|QOpenGLExtension_IBM_vertex_array_listsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexPointerListIBM
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordPointerListIBM
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalPointerListIBM
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP IndexPointerListIBM
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoordPointerListIBM
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EdgeFlagPointerListIBM
argument_list|)
operator|(
name|GLint
name|stride
operator|,
specifier|const
name|GLboolean
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColorPointerListIBM
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorPointerListIBM
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLint
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|,
name|GLint
name|ptrstride
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_IBM_vertex_array_lists
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|void
name|glTexCoordPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|void
name|glNormalPointerListIBM
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|void
name|glIndexPointerListIBM
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|void
name|glFogCoordPointerListIBM
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|void
name|glEdgeFlagPointerListIBM
argument_list|(
argument|GLint stride
argument_list|,
argument|const GLboolean* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|void
name|glSecondaryColorPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|void
name|glColorPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glVertexPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|VertexPointerListIBM
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
DECL|function|glTexCoordPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glTexCoordPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|TexCoordPointerListIBM
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
DECL|function|glNormalPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glNormalPointerListIBM
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|NormalPointerListIBM
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
DECL|function|glIndexPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glIndexPointerListIBM
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|IndexPointerListIBM
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
DECL|function|glFogCoordPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glFogCoordPointerListIBM
argument_list|(
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|FogCoordPointerListIBM
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
DECL|function|glEdgeFlagPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glEdgeFlagPointerListIBM
argument_list|(
argument|GLint stride
argument_list|,
argument|const GLboolean* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|EdgeFlagPointerListIBM
argument_list|(
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
DECL|function|glSecondaryColorPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glSecondaryColorPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|SecondaryColorPointerListIBM
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
DECL|function|glColorPointerListIBM
specifier|inline
name|void
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|glColorPointerListIBM
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLint stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|,
argument|GLint ptrstride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
block|;
name|d
operator|->
name|ColorPointerListIBM
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|,
name|ptrstride
argument_list|)
block|; }
name|class
name|QOpenGLExtension_INGR_blend_func_separatePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlendFuncSeparateINGR
argument_list|)
operator|(
name|GLenum
name|sfactorRGB
operator|,
name|GLenum
name|dfactorRGB
operator|,
name|GLenum
name|sfactorAlpha
operator|,
name|GLenum
name|dfactorAlpha
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_INGR_blend_func_separate
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_INGR_blend_func_separate
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlendFuncSeparateINGR
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_INGR_blend_func_separate
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlendFuncSeparateINGR
specifier|inline
name|void
name|QOpenGLExtension_INGR_blend_func_separate
operator|::
name|glBlendFuncSeparateINGR
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_INGR_blend_func_separate
argument_list|)
block|;
name|d
operator|->
name|BlendFuncSeparateINGR
argument_list|(
name|sfactorRGB
argument_list|,
name|dfactorRGB
argument_list|,
name|sfactorAlpha
argument_list|,
name|dfactorAlpha
argument_list|)
block|; }
name|class
name|QOpenGLExtension_INTEL_parallel_arraysPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordPointervINTEL
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorPointervINTEL
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalPointervINTEL
argument_list|)
operator|(
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexPointervINTEL
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_INTEL_parallel_arrays
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_INTEL_parallel_arrays
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexCoordPointervINTEL
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|;
name|void
name|glColorPointervINTEL
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|;
name|void
name|glNormalPointervINTEL
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|;
name|void
name|glVertexPointervINTEL
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_INTEL_parallel_arrays
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexCoordPointervINTEL
specifier|inline
name|void
name|QOpenGLExtension_INTEL_parallel_arrays
operator|::
name|glTexCoordPointervINTEL
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_INTEL_parallel_arrays
argument_list|)
block|;
name|d
operator|->
name|TexCoordPointervINTEL
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glColorPointervINTEL
specifier|inline
name|void
name|QOpenGLExtension_INTEL_parallel_arrays
operator|::
name|glColorPointervINTEL
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_INTEL_parallel_arrays
argument_list|)
block|;
name|d
operator|->
name|ColorPointervINTEL
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glNormalPointervINTEL
specifier|inline
name|void
name|QOpenGLExtension_INTEL_parallel_arrays
operator|::
name|glNormalPointervINTEL
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_INTEL_parallel_arrays
argument_list|)
block|;
name|d
operator|->
name|NormalPointervINTEL
argument_list|(
name|type
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexPointervINTEL
specifier|inline
name|void
name|QOpenGLExtension_INTEL_parallel_arrays
operator|::
name|glVertexPointervINTEL
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_INTEL_parallel_arrays
argument_list|)
block|;
name|d
operator|->
name|VertexPointervINTEL
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|pointer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_KHR_debugPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectPtrLabel
argument_list|)
operator|(
specifier|const
name|void
operator|*
name|ptr
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|label
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ObjectPtrLabel
argument_list|)
operator|(
specifier|const
name|void
operator|*
name|ptr
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|label
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectLabel
argument_list|)
operator|(
name|GLenum
name|identifier
operator|,
name|GLuint
name|name
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|label
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ObjectLabel
argument_list|)
operator|(
name|GLenum
name|identifier
operator|,
name|GLuint
name|name
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|label
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PopDebugGroup
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PushDebugGroup
argument_list|)
operator|(
name|GLenum
name|source
operator|,
name|GLuint
name|id
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|message
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GetDebugMessageLog
argument_list|)
operator|(
name|GLuint
name|count
operator|,
name|GLsizei
name|bufsize
operator|,
name|GLenum
operator|*
name|sources
operator|,
name|GLenum
operator|*
name|types
operator|,
name|GLuint
operator|*
name|ids
operator|,
name|GLenum
operator|*
name|severities
operator|,
name|GLsizei
operator|*
name|lengths
operator|,
name|GLchar
operator|*
name|messageLog
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageCallback
argument_list|)
operator|(
name|GLDEBUGPROC
name|callback
operator|,
specifier|const
name|void
operator|*
name|userParam
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageInsert
argument_list|)
operator|(
name|GLenum
name|source
operator|,
name|GLenum
name|type
operator|,
name|GLuint
name|id
operator|,
name|GLenum
name|severity
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|buf
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DebugMessageControl
argument_list|)
operator|(
name|GLenum
name|source
operator|,
name|GLenum
name|type
operator|,
name|GLenum
name|severity
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|,
name|GLboolean
name|enabled
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_KHR_debug
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_KHR_debug
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|;
name|void
name|glObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|;
name|void
name|glGetObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|;
name|void
name|glObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|;
name|void
name|glPopDebugGroup
argument_list|()
block|;
name|void
name|glPushDebugGroup
argument_list|(
argument|GLenum source
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *message
argument_list|)
block|;
name|GLuint
name|glGetDebugMessageLog
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLenum *sources
argument_list|,
argument|GLenum *types
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLenum *severities
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *messageLog
argument_list|)
block|;
name|void
name|glDebugMessageCallback
argument_list|(
argument|GLDEBUGPROC callback
argument_list|,
argument|const void *userParam
argument_list|)
block|;
name|void
name|glDebugMessageInsert
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint id
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|;
name|void
name|glDebugMessageControl
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_KHR_debug
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetObjectPtrLabel
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glGetObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|GetObjectPtrLabel
argument_list|(
name|ptr
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glObjectPtrLabel
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|ObjectPtrLabel
argument_list|(
name|ptr
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glGetObjectLabel
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glGetObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|GetObjectLabel
argument_list|(
name|identifier
argument_list|,
name|name
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glObjectLabel
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|ObjectLabel
argument_list|(
name|identifier
argument_list|,
name|name
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glPopDebugGroup
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glPopDebugGroup
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|PopDebugGroup
argument_list|()
block|; }
DECL|function|glPushDebugGroup
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glPushDebugGroup
argument_list|(
argument|GLenum source
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *message
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|PushDebugGroup
argument_list|(
name|source
argument_list|,
name|id
argument_list|,
name|length
argument_list|,
name|message
argument_list|)
block|; }
DECL|function|glGetDebugMessageLog
specifier|inline
name|GLuint
name|QOpenGLExtension_KHR_debug
operator|::
name|glGetDebugMessageLog
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLenum *sources
argument_list|,
argument|GLenum *types
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLenum *severities
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *messageLog
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
return|return
name|d
operator|->
name|GetDebugMessageLog
argument_list|(
name|count
argument_list|,
name|bufsize
argument_list|,
name|sources
argument_list|,
name|types
argument_list|,
name|ids
argument_list|,
name|severities
argument_list|,
name|lengths
argument_list|,
name|messageLog
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDebugMessageCallback
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glDebugMessageCallback
argument_list|(
argument|GLDEBUGPROC callback
argument_list|,
argument|const void *userParam
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|DebugMessageCallback
argument_list|(
name|callback
argument_list|,
name|userParam
argument_list|)
block|; }
DECL|function|glDebugMessageInsert
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glDebugMessageInsert
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint id
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|DebugMessageInsert
argument_list|(
name|source
argument_list|,
name|type
argument_list|,
name|id
argument_list|,
name|severity
argument_list|,
name|length
argument_list|,
name|buf
argument_list|)
block|; }
DECL|function|glDebugMessageControl
specifier|inline
name|void
name|QOpenGLExtension_KHR_debug
operator|::
name|glDebugMessageControl
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
block|;
name|d
operator|->
name|DebugMessageControl
argument_list|(
name|source
argument_list|,
name|type
argument_list|,
name|severity
argument_list|,
name|count
argument_list|,
name|ids
argument_list|,
name|enabled
argument_list|)
block|; }
name|class
name|QOpenGLExtension_MESA_resize_buffersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ResizeBuffersMESA
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_MESA_resize_buffers
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_MESA_resize_buffers
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glResizeBuffersMESA
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_MESA_resize_buffers
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glResizeBuffersMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_resize_buffers
operator|::
name|glResizeBuffersMESA
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_resize_buffers
argument_list|)
block|;
name|d
operator|->
name|ResizeBuffersMESA
argument_list|()
block|; }
name|class
name|QOpenGLExtension_MESA_window_posPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4svMESA
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4sMESA
argument_list|)
operator|(
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|,
name|GLshort
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4ivMESA
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4iMESA
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|,
name|GLint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4fvMESA
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4fMESA
argument_list|)
operator|(
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4dvMESA
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos4dMESA
argument_list|)
operator|(
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3svMESA
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3sMESA
argument_list|)
operator|(
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3ivMESA
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3iMESA
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3fvMESA
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3fMESA
argument_list|)
operator|(
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3dvMESA
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos3dMESA
argument_list|)
operator|(
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2svMESA
argument_list|)
operator|(
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2sMESA
argument_list|)
operator|(
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2ivMESA
argument_list|)
operator|(
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2iMESA
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2fvMESA
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2fMESA
argument_list|)
operator|(
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2dvMESA
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WindowPos2dMESA
argument_list|)
operator|(
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_MESA_window_pos
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_MESA_window_pos
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glWindowPos4svMESA
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos4sMESA
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glWindowPos4ivMESA
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos4iMESA
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glWindowPos4fvMESA
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos4fMESA
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glWindowPos4dvMESA
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos4dMESA
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glWindowPos3svMESA
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3sMESA
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glWindowPos3ivMESA
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3iMESA
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glWindowPos3fvMESA
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3fMESA
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glWindowPos3dvMESA
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3dMESA
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glWindowPos2svMESA
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2sMESA
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glWindowPos2ivMESA
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2iMESA
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glWindowPos2fvMESA
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2fMESA
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glWindowPos2dvMESA
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2dMESA
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_MESA_window_pos
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glWindowPos4svMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4svMESA
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4svMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos4sMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4sMESA
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4sMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glWindowPos4ivMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4ivMESA
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4ivMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos4iMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4iMESA
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4iMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glWindowPos4fvMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4fvMESA
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4fvMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos4fMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4fMESA
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4fMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glWindowPos4dvMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4dvMESA
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4dvMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos4dMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos4dMESA
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos4dMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glWindowPos3svMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3svMESA
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3svMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3sMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3sMESA
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3sMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3ivMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3ivMESA
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3ivMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3iMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3iMESA
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3iMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3fvMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3fvMESA
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3fvMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3fMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3fMESA
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3fMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3dvMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3dvMESA
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3dvMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3dMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos3dMESA
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos3dMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos2svMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2svMESA
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2svMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2sMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2sMESA
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2sMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2ivMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2ivMESA
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2ivMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2iMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2iMESA
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2iMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2fvMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2fvMESA
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2fvMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2fMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2fMESA
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2fMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2dvMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2dvMESA
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2dvMESA
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2dMESA
specifier|inline
name|void
name|QOpenGLExtension_MESA_window_pos
operator|::
name|glWindowPos2dMESA
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
block|;
name|d
operator|->
name|WindowPos2dMESA
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_bindless_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsImageHandleResidentNV
argument_list|)
operator|(
name|GLuint64
name|handle
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsTextureHandleResidentNV
argument_list|)
operator|(
name|GLuint64
name|handle
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformHandleui64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformHandleui64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint64
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformHandleui64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UniformHandleui64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint64
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeImageHandleNonResidentNV
argument_list|)
operator|(
name|GLuint64
name|handle
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeImageHandleResidentNV
argument_list|)
operator|(
name|GLuint64
name|handle
operator|,
name|GLenum
name|access
operator|)
block|;
name|GLuint64
argument_list|(
argument|QOPENGLF_APIENTRYP GetImageHandleNV
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLboolean
name|layered
operator|,
name|GLint
name|layer
operator|,
name|GLenum
name|format
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeTextureHandleNonResidentNV
argument_list|)
operator|(
name|GLuint64
name|handle
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeTextureHandleResidentNV
argument_list|)
operator|(
name|GLuint64
name|handle
operator|)
block|;
name|GLuint64
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureSamplerHandleNV
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLuint
name|sampler
operator|)
block|;
name|GLuint64
argument_list|(
argument|QOPENGLF_APIENTRYP GetTextureHandleNV
argument_list|)
operator|(
name|GLuint
name|texture
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_bindless_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_bindless_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glIsImageHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|;
name|GLboolean
name|glIsTextureHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|;
name|void
name|glProgramUniformHandleui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64 *values
argument_list|)
block|;
name|void
name|glProgramUniformHandleui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64 value
argument_list|)
block|;
name|void
name|glUniformHandleui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64 *value
argument_list|)
block|;
name|void
name|glUniformHandleui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64 value
argument_list|)
block|;
name|void
name|glMakeImageHandleNonResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|;
name|void
name|glMakeImageHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|GLuint64
name|glGetImageHandleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum format
argument_list|)
block|;
name|void
name|glMakeTextureHandleNonResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|;
name|void
name|glMakeTextureHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|;
name|GLuint64
name|glGetTextureSamplerHandleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLuint sampler
argument_list|)
block|;
name|GLuint64
name|glGetTextureHandleNV
argument_list|(
argument|GLuint texture
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIsImageHandleResidentNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glIsImageHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
return|return
name|d
operator|->
name|IsImageHandleResidentNV
argument_list|(
name|handle
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsTextureHandleResidentNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glIsTextureHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
return|return
name|d
operator|->
name|IsTextureHandleResidentNV
argument_list|(
name|handle
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glProgramUniformHandleui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glProgramUniformHandleui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64 *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformHandleui64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glProgramUniformHandleui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glProgramUniformHandleui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64 value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformHandleui64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformHandleui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glUniformHandleui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64 *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|UniformHandleui64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformHandleui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glUniformHandleui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64 value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|UniformHandleui64NV
argument_list|(
name|location
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glMakeImageHandleNonResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glMakeImageHandleNonResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|MakeImageHandleNonResidentNV
argument_list|(
name|handle
argument_list|)
block|; }
DECL|function|glMakeImageHandleResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glMakeImageHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|MakeImageHandleResidentNV
argument_list|(
name|handle
argument_list|,
name|access
argument_list|)
block|; }
DECL|function|glGetImageHandleNV
specifier|inline
name|GLuint64
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glGetImageHandleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum format
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
return|return
name|d
operator|->
name|GetImageHandleNV
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|layered
argument_list|,
name|layer
argument_list|,
name|format
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMakeTextureHandleNonResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glMakeTextureHandleNonResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|MakeTextureHandleNonResidentNV
argument_list|(
name|handle
argument_list|)
block|; }
DECL|function|glMakeTextureHandleResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glMakeTextureHandleResidentNV
argument_list|(
argument|GLuint64 handle
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
name|d
operator|->
name|MakeTextureHandleResidentNV
argument_list|(
name|handle
argument_list|)
block|; }
DECL|function|glGetTextureSamplerHandleNV
specifier|inline
name|GLuint64
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glGetTextureSamplerHandleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLuint sampler
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
return|return
name|d
operator|->
name|GetTextureSamplerHandleNV
argument_list|(
name|texture
argument_list|,
name|sampler
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetTextureHandleNV
specifier|inline
name|GLuint64
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|glGetTextureHandleNV
argument_list|(
argument|GLuint texture
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
block|;
return|return
name|d
operator|->
name|GetTextureHandleNV
argument_list|(
name|texture
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_conditional_renderPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndConditionalRenderNV
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginConditionalRenderNV
argument_list|)
operator|(
name|GLuint
name|id
expr|,
name|GLenum
name|mode
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_conditional_render
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_conditional_render
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glEndConditionalRenderNV
argument_list|()
block|;
name|void
name|glBeginConditionalRenderNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_conditional_render
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glEndConditionalRenderNV
specifier|inline
name|void
name|QOpenGLExtension_NV_conditional_render
operator|::
name|glEndConditionalRenderNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_conditional_render
argument_list|)
block|;
name|d
operator|->
name|EndConditionalRenderNV
argument_list|()
block|; }
DECL|function|glBeginConditionalRenderNV
specifier|inline
name|void
name|QOpenGLExtension_NV_conditional_render
operator|::
name|glBeginConditionalRenderNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_conditional_render
argument_list|)
block|;
name|d
operator|->
name|BeginConditionalRenderNV
argument_list|(
name|id
argument_list|,
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_copy_imagePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyImageSubDataNV
argument_list|)
operator|(
name|GLuint
name|srcName
operator|,
name|GLenum
name|srcTarget
operator|,
name|GLint
name|srcLevel
operator|,
name|GLint
name|srcX
operator|,
name|GLint
name|srcY
operator|,
name|GLint
name|srcZ
operator|,
name|GLuint
name|dstName
operator|,
name|GLenum
name|dstTarget
operator|,
name|GLint
name|dstLevel
operator|,
name|GLint
name|dstX
operator|,
name|GLint
name|dstY
operator|,
name|GLint
name|dstZ
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_copy_image
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_copy_image
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glCopyImageSubDataNV
argument_list|(
argument|GLuint srcName
argument_list|,
argument|GLenum srcTarget
argument_list|,
argument|GLint srcLevel
argument_list|,
argument|GLint srcX
argument_list|,
argument|GLint srcY
argument_list|,
argument|GLint srcZ
argument_list|,
argument|GLuint dstName
argument_list|,
argument|GLenum dstTarget
argument_list|,
argument|GLint dstLevel
argument_list|,
argument|GLint dstX
argument_list|,
argument|GLint dstY
argument_list|,
argument|GLint dstZ
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_copy_image
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCopyImageSubDataNV
specifier|inline
name|void
name|QOpenGLExtension_NV_copy_image
operator|::
name|glCopyImageSubDataNV
argument_list|(
argument|GLuint srcName
argument_list|,
argument|GLenum srcTarget
argument_list|,
argument|GLint srcLevel
argument_list|,
argument|GLint srcX
argument_list|,
argument|GLint srcY
argument_list|,
argument|GLint srcZ
argument_list|,
argument|GLuint dstName
argument_list|,
argument|GLenum dstTarget
argument_list|,
argument|GLint dstLevel
argument_list|,
argument|GLint dstX
argument_list|,
argument|GLint dstY
argument_list|,
argument|GLint dstZ
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_copy_image
argument_list|)
block|;
name|d
operator|->
name|CopyImageSubDataNV
argument_list|(
name|srcName
argument_list|,
name|srcTarget
argument_list|,
name|srcLevel
argument_list|,
name|srcX
argument_list|,
name|srcY
argument_list|,
name|srcZ
argument_list|,
name|dstName
argument_list|,
name|dstTarget
argument_list|,
name|dstLevel
argument_list|,
name|dstX
argument_list|,
name|dstY
argument_list|,
name|dstZ
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_depth_buffer_floatPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DepthBoundsdNV
argument_list|)
operator|(
name|GLdouble
name|zmin
operator|,
name|GLdouble
name|zmax
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ClearDepthdNV
argument_list|)
operator|(
name|GLdouble
name|depth
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DepthRangedNV
argument_list|)
operator|(
name|GLdouble
name|zNear
operator|,
name|GLdouble
name|zFar
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_depth_buffer_float
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_depth_buffer_float
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDepthBoundsdNV
argument_list|(
argument|GLdouble zmin
argument_list|,
argument|GLdouble zmax
argument_list|)
block|;
name|void
name|glClearDepthdNV
argument_list|(
argument|GLdouble depth
argument_list|)
block|;
name|void
name|glDepthRangedNV
argument_list|(
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_depth_buffer_float
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDepthBoundsdNV
specifier|inline
name|void
name|QOpenGLExtension_NV_depth_buffer_float
operator|::
name|glDepthBoundsdNV
argument_list|(
argument|GLdouble zmin
argument_list|,
argument|GLdouble zmax
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_depth_buffer_float
argument_list|)
block|;
name|d
operator|->
name|DepthBoundsdNV
argument_list|(
name|zmin
argument_list|,
name|zmax
argument_list|)
block|; }
DECL|function|glClearDepthdNV
specifier|inline
name|void
name|QOpenGLExtension_NV_depth_buffer_float
operator|::
name|glClearDepthdNV
argument_list|(
argument|GLdouble depth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_depth_buffer_float
argument_list|)
block|;
name|d
operator|->
name|ClearDepthdNV
argument_list|(
name|depth
argument_list|)
block|; }
DECL|function|glDepthRangedNV
specifier|inline
name|void
name|QOpenGLExtension_NV_depth_buffer_float
operator|::
name|glDepthRangedNV
argument_list|(
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_depth_buffer_float
argument_list|)
block|;
name|d
operator|->
name|DepthRangedNV
argument_list|(
name|zNear
argument_list|,
name|zFar
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_evaluatorsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EvalMapsNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|mode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMapAttribParameterfvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMapAttribParameterivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMapParameterfvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMapParameterivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMapControlPointsNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|ustride
operator|,
name|GLsizei
name|vstride
operator|,
name|GLboolean
name|packed
operator|,
name|GLvoid
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MapParameterfvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MapParameterivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MapControlPointsNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|ustride
operator|,
name|GLsizei
name|vstride
operator|,
name|GLint
name|uorder
operator|,
name|GLint
name|vorder
operator|,
name|GLboolean
name|packed
operator|,
specifier|const
name|GLvoid
operator|*
name|points
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_evaluators
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_evaluators
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glEvalMapsNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glGetMapAttribParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMapAttribParameterivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMapParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMapParameterivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMapControlPointsNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei ustride
argument_list|,
argument|GLsizei vstride
argument_list|,
argument|GLboolean packed
argument_list|,
argument|GLvoid *points
argument_list|)
block|;
name|void
name|glMapParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glMapParameterivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glMapControlPointsNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei ustride
argument_list|,
argument|GLsizei vstride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLint vorder
argument_list|,
argument|GLboolean packed
argument_list|,
argument|const GLvoid *points
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_evaluators
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glEvalMapsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glEvalMapsNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|EvalMapsNV
argument_list|(
name|target
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glGetMapAttribParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glGetMapAttribParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|GetMapAttribParameterfvNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMapAttribParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glGetMapAttribParameterivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|GetMapAttribParameterivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMapParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glGetMapParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|GetMapParameterfvNV
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMapParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glGetMapParameterivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|GetMapParameterivNV
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMapControlPointsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glGetMapControlPointsNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei ustride
argument_list|,
argument|GLsizei vstride
argument_list|,
argument|GLboolean packed
argument_list|,
argument|GLvoid *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|GetMapControlPointsNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|type
argument_list|,
name|ustride
argument_list|,
name|vstride
argument_list|,
name|packed
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMapParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glMapParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|MapParameterfvNV
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMapParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glMapParameterivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|MapParameterivNV
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMapControlPointsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_evaluators
operator|::
name|glMapControlPointsNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei ustride
argument_list|,
argument|GLsizei vstride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLint vorder
argument_list|,
argument|GLboolean packed
argument_list|,
argument|const GLvoid *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
block|;
name|d
operator|->
name|MapControlPointsNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|type
argument_list|,
name|ustride
argument_list|,
name|vstride
argument_list|,
name|uorder
argument_list|,
name|vorder
argument_list|,
name|packed
argument_list|,
name|points
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_explicit_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexRenderbufferNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|renderbuffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SampleMaskIndexedNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLbitfield
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetMultisamplefvNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
operator|*
name|val
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_explicit_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_explicit_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexRenderbufferNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glSampleMaskIndexedNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glGetMultisamplefvNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_explicit_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexRenderbufferNV
specifier|inline
name|void
name|QOpenGLExtension_NV_explicit_multisample
operator|::
name|glTexRenderbufferNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_explicit_multisample
argument_list|)
block|;
name|d
operator|->
name|TexRenderbufferNV
argument_list|(
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glSampleMaskIndexedNV
specifier|inline
name|void
name|QOpenGLExtension_NV_explicit_multisample
operator|::
name|glSampleMaskIndexedNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLbitfield mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_explicit_multisample
argument_list|)
block|;
name|d
operator|->
name|SampleMaskIndexedNV
argument_list|(
name|index
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glGetMultisamplefvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_explicit_multisample
operator|::
name|glGetMultisamplefvNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_explicit_multisample
argument_list|)
block|;
name|d
operator|->
name|GetMultisamplefvNV
argument_list|(
name|pname
argument_list|,
name|index
argument_list|,
name|val
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_fencePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SetFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|,
name|GLenum
name|condition
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FinishFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFenceivNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP TestFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenFencesNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|fences
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteFencesNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|fences
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_fence
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_fence
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSetFenceNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum condition
argument_list|)
block|;
name|void
name|glFinishFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|void
name|glGetFenceivNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLboolean
name|glTestFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|GLboolean
name|glIsFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|void
name|glGenFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *fences
argument_list|)
block|;
name|void
name|glDeleteFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *fences
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_fence
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSetFenceNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glSetFenceNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum condition
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|SetFenceNV
argument_list|(
name|fence
argument_list|,
name|condition
argument_list|)
block|; }
DECL|function|glFinishFenceNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glFinishFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|FinishFenceNV
argument_list|(
name|fence
argument_list|)
block|; }
DECL|function|glGetFenceivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glGetFenceivNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|GetFenceivNV
argument_list|(
name|fence
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTestFenceNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_fence
operator|::
name|glTestFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
return|return
name|d
operator|->
name|TestFenceNV
argument_list|(
name|fence
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsFenceNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_fence
operator|::
name|glIsFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
return|return
name|d
operator|->
name|IsFenceNV
argument_list|(
name|fence
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenFencesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glGenFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *fences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|GenFencesNV
argument_list|(
name|n
argument_list|,
name|fences
argument_list|)
block|; }
DECL|function|glDeleteFencesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glDeleteFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *fences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|DeleteFencesNV
argument_list|(
name|n
argument_list|,
name|fences
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_fragment_programPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramNamedParameterdvNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLubyte
operator|*
name|name
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramNamedParameterfvNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLubyte
operator|*
name|name
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramNamedParameter4dvNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLubyte
operator|*
name|name
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramNamedParameter4fvNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLubyte
operator|*
name|name
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramNamedParameter4dNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLubyte
operator|*
name|name
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramNamedParameter4fNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLubyte
operator|*
name|name
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_fragment_program
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_fragment_program
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetProgramNamedParameterdvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetProgramNamedParameterfvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glProgramNamedParameter4dvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glProgramNamedParameter4fvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glProgramNamedParameter4dNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glProgramNamedParameter4fNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_fragment_program
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetProgramNamedParameterdvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fragment_program
operator|::
name|glGetProgramNamedParameterdvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fragment_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramNamedParameterdvNV
argument_list|(
name|id
argument_list|,
name|len
argument_list|,
name|name
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramNamedParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fragment_program
operator|::
name|glGetProgramNamedParameterfvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fragment_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramNamedParameterfvNV
argument_list|(
name|id
argument_list|,
name|len
argument_list|,
name|name
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramNamedParameter4dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fragment_program
operator|::
name|glProgramNamedParameter4dvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fragment_program
argument_list|)
block|;
name|d
operator|->
name|ProgramNamedParameter4dvNV
argument_list|(
name|id
argument_list|,
name|len
argument_list|,
name|name
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glProgramNamedParameter4fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fragment_program
operator|::
name|glProgramNamedParameter4fvNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fragment_program
argument_list|)
block|;
name|d
operator|->
name|ProgramNamedParameter4fvNV
argument_list|(
name|id
argument_list|,
name|len
argument_list|,
name|name
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glProgramNamedParameter4dNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fragment_program
operator|::
name|glProgramNamedParameter4dNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fragment_program
argument_list|)
block|;
name|d
operator|->
name|ProgramNamedParameter4dNV
argument_list|(
name|id
argument_list|,
name|len
argument_list|,
name|name
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramNamedParameter4fNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fragment_program
operator|::
name|glProgramNamedParameter4fNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *name
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fragment_program
argument_list|)
block|;
name|d
operator|->
name|ProgramNamedParameter4fNV
argument_list|(
name|id
argument_list|,
name|len
argument_list|,
name|name
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_framebuffer_multisample_coveragePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisampleCoverageNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|coverageSamples
operator|,
name|GLsizei
name|colorSamples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glRenderbufferStorageMultisampleCoverageNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_framebuffer_multisample_coverage
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glRenderbufferStorageMultisampleCoverageNV
specifier|inline
name|void
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
operator|::
name|glRenderbufferStorageMultisampleCoverageNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisampleCoverageNV
argument_list|(
name|target
argument_list|,
name|coverageSamples
argument_list|,
name|colorSamples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_geometry_program4Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTextureFaceEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|face
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTextureLayerEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|layer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTextureEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramVertexLimitNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|limit
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_geometry_program4
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_geometry_program4
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFramebufferTextureFaceEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum face
argument_list|)
block|;
name|void
name|glFramebufferTextureLayerEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|;
name|void
name|glFramebufferTextureEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glProgramVertexLimitNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint limit
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_geometry_program4
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFramebufferTextureFaceEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_geometry_program4
operator|::
name|glFramebufferTextureFaceEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum face
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_geometry_program4
argument_list|)
block|;
name|d
operator|->
name|FramebufferTextureFaceEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|face
argument_list|)
block|; }
DECL|function|glFramebufferTextureLayerEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_geometry_program4
operator|::
name|glFramebufferTextureLayerEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_geometry_program4
argument_list|)
block|;
name|d
operator|->
name|FramebufferTextureLayerEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layer
argument_list|)
block|; }
DECL|function|glFramebufferTextureEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_geometry_program4
operator|::
name|glFramebufferTextureEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_geometry_program4
argument_list|)
block|;
name|d
operator|->
name|FramebufferTextureEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glProgramVertexLimitNV
specifier|inline
name|void
name|QOpenGLExtension_NV_geometry_program4
operator|::
name|glProgramVertexLimitNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint limit
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_geometry_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramVertexLimitNV
argument_list|(
name|target
argument_list|,
name|limit
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_gpu_program4Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramEnvParameterIuivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramEnvParameterIivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramLocalParameterIuivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramLocalParameterIivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParametersI4uivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameterI4uivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameterI4uiNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|x
operator|,
name|GLuint
name|y
operator|,
name|GLuint
name|z
operator|,
name|GLuint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParametersI4ivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameterI4ivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramEnvParameterI4iNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|,
name|GLint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParametersI4uivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameterI4uivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameterI4uiNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|x
operator|,
name|GLuint
name|y
operator|,
name|GLuint
name|z
operator|,
name|GLuint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParametersI4ivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameterI4ivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramLocalParameterI4iNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|,
name|GLint
name|w
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_gpu_program4
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_gpu_program4
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetProgramEnvParameterIuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetProgramEnvParameterIivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramLocalParameterIuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetProgramLocalParameterIivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glProgramEnvParametersI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glProgramEnvParameterI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glProgramEnvParameterI4uiNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|;
name|void
name|glProgramEnvParametersI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glProgramEnvParameterI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glProgramEnvParameterI4iNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glProgramLocalParametersI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glProgramLocalParameterI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glProgramLocalParameterI4uiNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|;
name|void
name|glProgramLocalParametersI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glProgramLocalParameterI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glProgramLocalParameterI4iNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetProgramEnvParameterIuivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glGetProgramEnvParameterIuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|GetProgramEnvParameterIuivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramEnvParameterIivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glGetProgramEnvParameterIivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|GetProgramEnvParameterIivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramLocalParameterIuivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glGetProgramLocalParameterIuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|GetProgramLocalParameterIuivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramLocalParameterIivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glGetProgramLocalParameterIivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|GetProgramLocalParameterIivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParametersI4uivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramEnvParametersI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParametersI4uivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParameterI4uivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramEnvParameterI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameterI4uivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParameterI4uiNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramEnvParameterI4uiNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameterI4uiNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramEnvParametersI4ivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramEnvParametersI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParametersI4ivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParameterI4ivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramEnvParameterI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameterI4ivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramEnvParameterI4iNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramEnvParameterI4iNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramEnvParameterI4iNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramLocalParametersI4uivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramLocalParametersI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParametersI4uivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramLocalParameterI4uivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramLocalParameterI4uivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameterI4uivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramLocalParameterI4uiNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramLocalParameterI4uiNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameterI4uiNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramLocalParametersI4ivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramLocalParametersI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParametersI4ivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramLocalParameterI4ivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramLocalParameterI4ivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameterI4ivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramLocalParameterI4iNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|glProgramLocalParameterI4iNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
block|;
name|d
operator|->
name|ProgramLocalParameterI4iNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_gpu_program5Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramSubroutineParameteruivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
operator|*
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramSubroutineParametersuivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_gpu_program5
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_gpu_program5
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetProgramSubroutineParameteruivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *param
argument_list|)
block|;
name|void
name|glProgramSubroutineParametersuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_gpu_program5
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetProgramSubroutineParameteruivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program5
operator|::
name|glGetProgramSubroutineParameteruivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint *param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program5
argument_list|)
block|;
name|d
operator|->
name|GetProgramSubroutineParameteruivNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glProgramSubroutineParametersuivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_program5
operator|::
name|glProgramSubroutineParametersuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program5
argument_list|)
block|;
name|d
operator|->
name|ProgramSubroutineParametersuivNV
argument_list|(
name|target
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_gpu_shader5Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4ui64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3ui64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2ui64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1ui64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4ui64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|,
name|GLuint64EXT
name|z
operator|,
name|GLuint64EXT
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3ui64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|,
name|GLuint64EXT
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2ui64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1ui64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4i64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3i64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2i64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1i64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4i64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|,
name|GLint64EXT
name|z
operator|,
name|GLint64EXT
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3i64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|,
name|GLint64EXT
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2i64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1i64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformi64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4ui64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3ui64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2ui64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1ui64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4ui64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|,
name|GLuint64EXT
name|z
operator|,
name|GLuint64EXT
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3ui64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|,
name|GLuint64EXT
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2ui64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1ui64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint64EXT
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4i64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3i64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2i64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1i64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform4i64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|,
name|GLint64EXT
name|z
operator|,
name|GLint64EXT
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform3i64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|,
name|GLint64EXT
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform2i64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniform1i64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLint64EXT
name|x
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_gpu_shader5
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_gpu_shader5
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProgramUniform4ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform3ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform2ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform1ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform4ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|,
argument|GLuint64EXT w
argument_list|)
block|;
name|void
name|glProgramUniform3ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|)
block|;
name|void
name|glProgramUniform2ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|)
block|;
name|void
name|glProgramUniform1ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|)
block|;
name|void
name|glProgramUniform4i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform3i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform2i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform1i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniform4i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|,
argument|GLint64EXT w
argument_list|)
block|;
name|void
name|glProgramUniform3i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|)
block|;
name|void
name|glProgramUniform2i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|)
block|;
name|void
name|glProgramUniform1i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|)
block|;
name|void
name|glGetUniformi64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|;
name|void
name|glUniform4ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glUniform3ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glUniform2ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glUniform1ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glUniform4ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|,
argument|GLuint64EXT w
argument_list|)
block|;
name|void
name|glUniform3ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|)
block|;
name|void
name|glUniform2ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|)
block|;
name|void
name|glUniform1ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|)
block|;
name|void
name|glUniform4i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glUniform3i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glUniform2i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glUniform1i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|;
name|void
name|glUniform4i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|,
argument|GLint64EXT w
argument_list|)
block|;
name|void
name|glUniform3i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|)
block|;
name|void
name|glUniform2i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|)
block|;
name|void
name|glUniform1i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProgramUniform4ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform4ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4ui64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform3ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3ui64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform2ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2ui64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform1ui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1ui64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform4ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|,
argument|GLuint64EXT w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4ui64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramUniform3ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform3ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3ui64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glProgramUniform2ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform2ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2ui64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glProgramUniform1ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform1ui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1ui64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glProgramUniform4i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform4i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4i64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform3i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3i64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform2i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2i64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform1i64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1i64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform4i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|,
argument|GLint64EXT w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4i64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramUniform3i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform3i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3i64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glProgramUniform2i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform2i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2i64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glProgramUniform1i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glProgramUniform1i64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1i64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glGetUniformi64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glGetUniformi64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|GetUniformi64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniform4ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform4ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform4ui64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform3ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform3ui64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform2ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform2ui64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform1ui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform1ui64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform4ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|,
argument|GLuint64EXT w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform4ui64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glUniform3ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform3ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform3ui64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glUniform2ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform2ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform2ui64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glUniform1ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform1ui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform1ui64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glUniform4i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform4i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform4i64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform3i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform3i64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform2i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform2i64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform1i64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform1i64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform4i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|,
argument|GLint64EXT w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform4i64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glUniform3i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform3i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform3i64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glUniform2i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform2i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform2i64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glUniform1i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|glUniform1i64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLint64EXT x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
block|;
name|d
operator|->
name|Uniform1i64NV
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_half_floatPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs4hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs3hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs2hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs1hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4hNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLhalfNV
name|x
operator|,
name|GLhalfNV
name|y
operator|,
name|GLhalfNV
name|z
operator|,
name|GLhalfNV
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3hNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLhalfNV
name|x
operator|,
name|GLhalfNV
name|y
operator|,
name|GLhalfNV
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2hNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLhalfNV
name|x
operator|,
name|GLhalfNV
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1hvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1hNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLhalfNV
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexWeighthvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|weight
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexWeighthNV
argument_list|)
operator|(
name|GLhalfNV
name|weight
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColor3hNV
argument_list|)
operator|(
name|GLhalfNV
name|red
operator|,
name|GLhalfNV
name|green
operator|,
name|GLhalfNV
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoordhvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|fog
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoordhNV
argument_list|)
operator|(
name|GLhalfNV
name|fog
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4hvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord4hNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLhalfNV
name|s
operator|,
name|GLhalfNV
name|t
operator|,
name|GLhalfNV
name|r
operator|,
name|GLhalfNV
name|q
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3hvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord3hNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLhalfNV
name|s
operator|,
name|GLhalfNV
name|t
operator|,
name|GLhalfNV
name|r
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2hvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord2hNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLhalfNV
name|s
operator|,
name|GLhalfNV
name|t
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1hvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiTexCoord1hNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLhalfNV
name|s
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord4hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord4hNV
argument_list|)
operator|(
name|GLhalfNV
name|s
operator|,
name|GLhalfNV
name|t
operator|,
name|GLhalfNV
name|r
operator|,
name|GLhalfNV
name|q
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord3hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord3hNV
argument_list|)
operator|(
name|GLhalfNV
name|s
operator|,
name|GLhalfNV
name|t
operator|,
name|GLhalfNV
name|r
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2hNV
argument_list|)
operator|(
name|GLhalfNV
name|s
operator|,
name|GLhalfNV
name|t
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord1hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord1hNV
argument_list|)
operator|(
name|GLhalfNV
name|s
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4hNV
argument_list|)
operator|(
name|GLhalfNV
name|red
operator|,
name|GLhalfNV
name|green
operator|,
name|GLhalfNV
name|blue
operator|,
name|GLhalfNV
name|alpha
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color3hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color3hNV
argument_list|)
operator|(
name|GLhalfNV
name|red
operator|,
name|GLhalfNV
name|green
operator|,
name|GLhalfNV
name|blue
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Normal3hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Normal3hNV
argument_list|)
operator|(
name|GLhalfNV
name|nx
operator|,
name|GLhalfNV
name|ny
operator|,
name|GLhalfNV
name|nz
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Vertex4hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Vertex4hNV
argument_list|)
operator|(
name|GLhalfNV
name|x
operator|,
name|GLhalfNV
name|y
operator|,
name|GLhalfNV
name|z
operator|,
name|GLhalfNV
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Vertex3hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Vertex3hNV
argument_list|)
operator|(
name|GLhalfNV
name|x
operator|,
name|GLhalfNV
name|y
operator|,
name|GLhalfNV
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Vertex2hvNV
argument_list|)
operator|(
specifier|const
name|GLhalfNV
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Vertex2hNV
argument_list|)
operator|(
name|GLhalfNV
name|x
operator|,
name|GLhalfNV
name|y
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_half_float
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_half_float
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexAttribs4hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttribs3hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttribs2hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttribs1hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttrib4hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttrib4hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|,
argument|GLhalfNV w
argument_list|)
block|;
name|void
name|glVertexAttrib3hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttrib3hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|)
block|;
name|void
name|glVertexAttrib2hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttrib2hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|)
block|;
name|void
name|glVertexAttrib1hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glVertexAttrib1hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|)
block|;
name|void
name|glVertexWeighthvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|weight
argument_list|)
block|;
name|void
name|glVertexWeighthNV
argument_list|(
argument|GLhalfNV weight
argument_list|)
block|;
name|void
name|glSecondaryColor3hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3hNV
argument_list|(
argument|GLhalfNV red
argument_list|,
argument|GLhalfNV green
argument_list|,
argument|GLhalfNV blue
argument_list|)
block|;
name|void
name|glFogCoordhvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|fog
argument_list|)
block|;
name|void
name|glFogCoordhNV
argument_list|(
argument|GLhalfNV fog
argument_list|)
block|;
name|void
name|glMultiTexCoord4hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|,
argument|GLhalfNV q
argument_list|)
block|;
name|void
name|glMultiTexCoord3hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|)
block|;
name|void
name|glMultiTexCoord2hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|)
block|;
name|void
name|glMultiTexCoord1hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|)
block|;
name|void
name|glTexCoord4hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4hNV
argument_list|(
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|,
argument|GLhalfNV q
argument_list|)
block|;
name|void
name|glTexCoord3hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3hNV
argument_list|(
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|)
block|;
name|void
name|glTexCoord2hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2hNV
argument_list|(
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|)
block|;
name|void
name|glTexCoord1hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1hNV
argument_list|(
argument|GLhalfNV s
argument_list|)
block|;
name|void
name|glColor4hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4hNV
argument_list|(
argument|GLhalfNV red
argument_list|,
argument|GLhalfNV green
argument_list|,
argument|GLhalfNV blue
argument_list|,
argument|GLhalfNV alpha
argument_list|)
block|;
name|void
name|glColor3hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3hNV
argument_list|(
argument|GLhalfNV red
argument_list|,
argument|GLhalfNV green
argument_list|,
argument|GLhalfNV blue
argument_list|)
block|;
name|void
name|glNormal3hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3hNV
argument_list|(
argument|GLhalfNV nx
argument_list|,
argument|GLhalfNV ny
argument_list|,
argument|GLhalfNV nz
argument_list|)
block|;
name|void
name|glVertex4hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4hNV
argument_list|(
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|,
argument|GLhalfNV w
argument_list|)
block|;
name|void
name|glVertex3hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3hNV
argument_list|(
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|)
block|;
name|void
name|glVertex2hvNV
argument_list|(
specifier|const
name|GLhalfNV
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2hNV
argument_list|(
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_half_float
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexAttribs4hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttribs4hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs4hvNV
argument_list|(
name|index
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttribs3hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs3hvNV
argument_list|(
name|index
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs2hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttribs2hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs2hvNV
argument_list|(
name|index
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs1hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttribs1hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs1hvNV
argument_list|(
name|index
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib4hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4hvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib4hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|,
argument|GLhalfNV w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4hNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib3hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3hvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib3hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3hNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib2hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib2hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2hvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib2hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2hNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib1hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib1hvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1hvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexAttrib1hNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLhalfNV x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1hNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexWeighthvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexWeighthvNV
argument_list|(
argument|const GLhalfNV *weight
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexWeighthvNV
argument_list|(
name|weight
argument_list|)
block|; }
DECL|function|glVertexWeighthNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertexWeighthNV
argument_list|(
argument|GLhalfNV weight
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|VertexWeighthNV
argument_list|(
name|weight
argument_list|)
block|; }
DECL|function|glSecondaryColor3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glSecondaryColor3hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glSecondaryColor3hNV
argument_list|(
argument|GLhalfNV red
argument_list|,
argument|GLhalfNV green
argument_list|,
argument|GLhalfNV blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|SecondaryColor3hNV
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glFogCoordhvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glFogCoordhvNV
argument_list|(
argument|const GLhalfNV *fog
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|FogCoordhvNV
argument_list|(
name|fog
argument_list|)
block|; }
DECL|function|glFogCoordhNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glFogCoordhNV
argument_list|(
argument|GLhalfNV fog
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|FogCoordhNV
argument_list|(
name|fog
argument_list|)
block|; }
DECL|function|glMultiTexCoord4hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord4hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4hvNV
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord4hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|,
argument|GLhalfNV q
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord4hNV
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord3hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3hvNV
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord3hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord3hNV
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord2hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord2hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2hvNV
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord2hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord2hNV
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord1hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord1hvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1hvNV
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glMultiTexCoord1hNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLhalfNV s
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|MultiTexCoord1hNV
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glTexCoord4hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord4hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord4hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord4hNV
argument_list|(
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|,
argument|GLhalfNV q
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord4hNV
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord3hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord3hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord3hNV
argument_list|(
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|,
argument|GLhalfNV r
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord3hNV
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord2hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord2hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord2hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord2hNV
argument_list|(
argument|GLhalfNV s
argument_list|,
argument|GLhalfNV t
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord2hNV
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord1hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord1hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord1hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glTexCoord1hNV
argument_list|(
argument|GLhalfNV s
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|TexCoord1hNV
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glColor4hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glColor4hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Color4hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glColor4hNV
argument_list|(
argument|GLhalfNV red
argument_list|,
argument|GLhalfNV green
argument_list|,
argument|GLhalfNV blue
argument_list|,
argument|GLhalfNV alpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Color4hNV
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glColor3hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Color3hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glColor3hNV
argument_list|(
argument|GLhalfNV red
argument_list|,
argument|GLhalfNV green
argument_list|,
argument|GLhalfNV blue
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Color3hNV
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glNormal3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glNormal3hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Normal3hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glNormal3hNV
argument_list|(
argument|GLhalfNV nx
argument_list|,
argument|GLhalfNV ny
argument_list|,
argument|GLhalfNV nz
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Normal3hNV
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glVertex4hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertex4hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Vertex4hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertex4hNV
argument_list|(
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|,
argument|GLhalfNV w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Vertex4hNV
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex3hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertex3hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Vertex3hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertex3hNV
argument_list|(
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|,
argument|GLhalfNV z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Vertex3hNV
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex2hvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertex2hvNV
argument_list|(
argument|const GLhalfNV *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Vertex2hvNV
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2hNV
specifier|inline
name|void
name|QOpenGLExtension_NV_half_float
operator|::
name|glVertex2hNV
argument_list|(
argument|GLhalfNV x
argument_list|,
argument|GLhalfNV y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
block|;
name|d
operator|->
name|Vertex2hNV
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_occlusion_queryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetOcclusionQueryuivNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetOcclusionQueryivNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndOcclusionQueryNV
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginOcclusionQueryNV
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsOcclusionQueryNV
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteOcclusionQueriesNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenOcclusionQueriesNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|ids
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_occlusion_query
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_occlusion_query
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetOcclusionQueryuivNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetOcclusionQueryivNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndOcclusionQueryNV
argument_list|()
block|;
name|void
name|glBeginOcclusionQueryNV
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|GLboolean
name|glIsOcclusionQueryNV
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glDeleteOcclusionQueriesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glGenOcclusionQueriesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetOcclusionQueryuivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|glGetOcclusionQueryuivNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|GetOcclusionQueryuivNV
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetOcclusionQueryivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|glGetOcclusionQueryivNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|GetOcclusionQueryivNV
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndOcclusionQueryNV
specifier|inline
name|void
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|glEndOcclusionQueryNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|EndOcclusionQueryNV
argument_list|()
block|; }
DECL|function|glBeginOcclusionQueryNV
specifier|inline
name|void
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|glBeginOcclusionQueryNV
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|BeginOcclusionQueryNV
argument_list|(
name|id
argument_list|)
block|; }
DECL|function|glIsOcclusionQueryNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|glIsOcclusionQueryNV
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|;
return|return
name|d
operator|->
name|IsOcclusionQueryNV
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteOcclusionQueriesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|glDeleteOcclusionQueriesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|DeleteOcclusionQueriesNV
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glGenOcclusionQueriesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|glGenOcclusionQueriesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
block|;
name|d
operator|->
name|GenOcclusionQueriesNV
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_parameter_buffer_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramBufferParametersIuivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|buffer
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramBufferParametersIivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|buffer
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramBufferParametersfvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|buffer
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_parameter_buffer_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_parameter_buffer_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProgramBufferParametersIuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glProgramBufferParametersIivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glProgramBufferParametersfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_parameter_buffer_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProgramBufferParametersIuivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_parameter_buffer_object
operator|::
name|glProgramBufferParametersIuivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_parameter_buffer_object
argument_list|)
block|;
name|d
operator|->
name|ProgramBufferParametersIuivNV
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramBufferParametersIivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_parameter_buffer_object
operator|::
name|glProgramBufferParametersIivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_parameter_buffer_object
argument_list|)
block|;
name|d
operator|->
name|ProgramBufferParametersIivNV
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramBufferParametersfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_parameter_buffer_object
operator|::
name|glProgramBufferParametersfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_parameter_buffer_object
argument_list|)
block|;
name|d
operator|->
name|ProgramBufferParametersfvNV
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_path_renderingPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP PointAlongPathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|startSegment
operator|,
name|GLsizei
name|numSegments
operator|,
name|GLfloat
name|distance
operator|,
name|GLfloat
operator|*
name|x
operator|,
name|GLfloat
operator|*
name|y
operator|,
name|GLfloat
operator|*
name|tangentX
operator|,
name|GLfloat
operator|*
name|tangentY
operator|)
block|;
name|GLfloat
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathLengthNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|startSegment
operator|,
name|GLsizei
name|numSegments
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsPointInStrokePathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsPointInFillPathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLuint
name|mask
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathTexGenfvNV
argument_list|)
operator|(
name|GLenum
name|texCoordSet
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathTexGenivNV
argument_list|)
operator|(
name|GLenum
name|texCoordSet
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathColorGenfvNV
argument_list|)
operator|(
name|GLenum
name|color
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathColorGenivNV
argument_list|)
operator|(
name|GLenum
name|color
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathSpacingNV
argument_list|)
operator|(
name|GLenum
name|pathListMode
operator|,
name|GLsizei
name|numPaths
operator|,
name|GLenum
name|pathNameType
operator|,
specifier|const
name|GLvoid
operator|*
name|paths
operator|,
name|GLuint
name|pathBase
operator|,
name|GLfloat
name|advanceScale
operator|,
name|GLfloat
name|kerningScale
operator|,
name|GLenum
name|transformType
operator|,
name|GLfloat
operator|*
name|returnedSpacing
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathMetricRangeNV
argument_list|)
operator|(
name|GLbitfield
name|metricQueryMask
operator|,
name|GLuint
name|firstPathName
operator|,
name|GLsizei
name|numPaths
operator|,
name|GLsizei
name|stride
operator|,
name|GLfloat
operator|*
name|metrics
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathMetricsNV
argument_list|)
operator|(
name|GLbitfield
name|metricQueryMask
operator|,
name|GLsizei
name|numPaths
operator|,
name|GLenum
name|pathNameType
operator|,
specifier|const
name|GLvoid
operator|*
name|paths
operator|,
name|GLuint
name|pathBase
operator|,
name|GLsizei
name|stride
operator|,
name|GLfloat
operator|*
name|metrics
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathDashArrayNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLfloat
operator|*
name|dashArray
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathCoordsNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLfloat
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathCommandsNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLubyte
operator|*
name|commands
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathParameterfvNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPathParameterivNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CoverStrokePathInstancedNV
argument_list|)
operator|(
name|GLsizei
name|numPaths
operator|,
name|GLenum
name|pathNameType
operator|,
specifier|const
name|GLvoid
operator|*
name|paths
operator|,
name|GLuint
name|pathBase
operator|,
name|GLenum
name|coverMode
operator|,
name|GLenum
name|transformType
operator|,
specifier|const
name|GLfloat
operator|*
name|transformValues
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CoverFillPathInstancedNV
argument_list|)
operator|(
name|GLsizei
name|numPaths
operator|,
name|GLenum
name|pathNameType
operator|,
specifier|const
name|GLvoid
operator|*
name|paths
operator|,
name|GLuint
name|pathBase
operator|,
name|GLenum
name|coverMode
operator|,
name|GLenum
name|transformType
operator|,
specifier|const
name|GLfloat
operator|*
name|transformValues
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CoverStrokePathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|coverMode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CoverFillPathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|coverMode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathFogGenNV
argument_list|)
operator|(
name|GLenum
name|genMode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathTexGenNV
argument_list|)
operator|(
name|GLenum
name|texCoordSet
operator|,
name|GLenum
name|genMode
operator|,
name|GLint
name|components
operator|,
specifier|const
name|GLfloat
operator|*
name|coeffs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathColorGenNV
argument_list|)
operator|(
name|GLenum
name|color
operator|,
name|GLenum
name|genMode
operator|,
name|GLenum
name|colorFormat
operator|,
specifier|const
name|GLfloat
operator|*
name|coeffs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathCoverDepthFuncNV
argument_list|)
operator|(
name|GLenum
name|func
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilStrokePathInstancedNV
argument_list|)
operator|(
name|GLsizei
name|numPaths
operator|,
name|GLenum
name|pathNameType
operator|,
specifier|const
name|GLvoid
operator|*
name|paths
operator|,
name|GLuint
name|pathBase
operator|,
name|GLint
name|reference
operator|,
name|GLuint
name|mask
operator|,
name|GLenum
name|transformType
operator|,
specifier|const
name|GLfloat
operator|*
name|transformValues
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilFillPathInstancedNV
argument_list|)
operator|(
name|GLsizei
name|numPaths
operator|,
name|GLenum
name|pathNameType
operator|,
specifier|const
name|GLvoid
operator|*
name|paths
operator|,
name|GLuint
name|pathBase
operator|,
name|GLenum
name|fillMode
operator|,
name|GLuint
name|mask
operator|,
name|GLenum
name|transformType
operator|,
specifier|const
name|GLfloat
operator|*
name|transformValues
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilStrokePathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLint
name|reference
operator|,
name|GLuint
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StencilFillPathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|fillMode
operator|,
name|GLuint
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathStencilDepthOffsetNV
argument_list|)
operator|(
name|GLfloat
name|factor
operator|,
name|GLfloat
name|units
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathStencilFuncNV
argument_list|)
operator|(
name|GLenum
name|func
operator|,
name|GLint
name|ref
operator|,
name|GLuint
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathDashArrayNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|dashCount
operator|,
specifier|const
name|GLfloat
operator|*
name|dashArray
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathParameterfNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathParameterfvNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathParameteriNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathParameterivNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TransformPathNV
argument_list|)
operator|(
name|GLuint
name|resultPath
operator|,
name|GLuint
name|srcPath
operator|,
name|GLenum
name|transformType
operator|,
specifier|const
name|GLfloat
operator|*
name|transformValues
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InterpolatePathsNV
argument_list|)
operator|(
name|GLuint
name|resultPath
operator|,
name|GLuint
name|pathA
operator|,
name|GLuint
name|pathB
operator|,
name|GLfloat
name|weight
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyPathNV
argument_list|)
operator|(
name|GLuint
name|resultPath
operator|,
name|GLuint
name|srcPath
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP WeightPathsNV
argument_list|)
operator|(
name|GLuint
name|resultPath
operator|,
name|GLsizei
name|numPaths
operator|,
specifier|const
name|GLuint
operator|*
name|paths
operator|,
specifier|const
name|GLfloat
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathGlyphRangeNV
argument_list|)
operator|(
name|GLuint
name|firstPathName
operator|,
name|GLenum
name|fontTarget
operator|,
specifier|const
name|GLvoid
operator|*
name|fontName
operator|,
name|GLbitfield
name|fontStyle
operator|,
name|GLuint
name|firstGlyph
operator|,
name|GLsizei
name|numGlyphs
operator|,
name|GLenum
name|handleMissingGlyphs
operator|,
name|GLuint
name|pathParameterTemplate
operator|,
name|GLfloat
name|emScale
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathGlyphsNV
argument_list|)
operator|(
name|GLuint
name|firstPathName
operator|,
name|GLenum
name|fontTarget
operator|,
specifier|const
name|GLvoid
operator|*
name|fontName
operator|,
name|GLbitfield
name|fontStyle
operator|,
name|GLsizei
name|numGlyphs
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|charcodes
operator|,
name|GLenum
name|handleMissingGlyphs
operator|,
name|GLuint
name|pathParameterTemplate
operator|,
name|GLfloat
name|emScale
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathStringNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLvoid
operator|*
name|pathString
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathSubCoordsNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|coordStart
operator|,
name|GLsizei
name|numCoords
operator|,
name|GLenum
name|coordType
operator|,
specifier|const
name|GLvoid
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathSubCommandsNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|commandStart
operator|,
name|GLsizei
name|commandsToDelete
operator|,
name|GLsizei
name|numCommands
operator|,
specifier|const
name|GLubyte
operator|*
name|commands
operator|,
name|GLsizei
name|numCoords
operator|,
name|GLenum
name|coordType
operator|,
specifier|const
name|GLvoid
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathCoordsNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|numCoords
operator|,
name|GLenum
name|coordType
operator|,
specifier|const
name|GLvoid
operator|*
name|coords
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PathCommandsNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|numCommands
operator|,
specifier|const
name|GLubyte
operator|*
name|commands
operator|,
name|GLsizei
name|numCoords
operator|,
name|GLenum
name|coordType
operator|,
specifier|const
name|GLvoid
operator|*
name|coords
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsPathNV
argument_list|)
operator|(
name|GLuint
name|path
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeletePathsNV
argument_list|)
operator|(
name|GLuint
name|path
operator|,
name|GLsizei
name|range
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GenPathsNV
argument_list|)
operator|(
name|GLsizei
name|range
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_path_rendering
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_path_rendering
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glPointAlongPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei startSegment
argument_list|,
argument|GLsizei numSegments
argument_list|,
argument|GLfloat distance
argument_list|,
argument|GLfloat *x
argument_list|,
argument|GLfloat *y
argument_list|,
argument|GLfloat *tangentX
argument_list|,
argument|GLfloat *tangentY
argument_list|)
block|;
name|GLfloat
name|glGetPathLengthNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei startSegment
argument_list|,
argument|GLsizei numSegments
argument_list|)
block|;
name|GLboolean
name|glIsPointInStrokePathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|GLboolean
name|glIsPointInFillPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLuint mask
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glGetPathTexGenfvNV
argument_list|(
argument|GLenum texCoordSet
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *value
argument_list|)
block|;
name|void
name|glGetPathTexGenivNV
argument_list|(
argument|GLenum texCoordSet
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *value
argument_list|)
block|;
name|void
name|glGetPathColorGenfvNV
argument_list|(
argument|GLenum color
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *value
argument_list|)
block|;
name|void
name|glGetPathColorGenivNV
argument_list|(
argument|GLenum color
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *value
argument_list|)
block|;
name|void
name|glGetPathSpacingNV
argument_list|(
argument|GLenum pathListMode
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLfloat advanceScale
argument_list|,
argument|GLfloat kerningScale
argument_list|,
argument|GLenum transformType
argument_list|,
argument|GLfloat *returnedSpacing
argument_list|)
block|;
name|void
name|glGetPathMetricRangeNV
argument_list|(
argument|GLbitfield metricQueryMask
argument_list|,
argument|GLuint firstPathName
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLfloat *metrics
argument_list|)
block|;
name|void
name|glGetPathMetricsNV
argument_list|(
argument|GLbitfield metricQueryMask
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLfloat *metrics
argument_list|)
block|;
name|void
name|glGetPathDashArrayNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLfloat *dashArray
argument_list|)
block|;
name|void
name|glGetPathCoordsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLfloat *coords
argument_list|)
block|;
name|void
name|glGetPathCommandsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLubyte *commands
argument_list|)
block|;
name|void
name|glGetPathParameterfvNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *value
argument_list|)
block|;
name|void
name|glGetPathParameterivNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *value
argument_list|)
block|;
name|void
name|glCoverStrokePathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLenum coverMode
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|;
name|void
name|glCoverFillPathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLenum coverMode
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|;
name|void
name|glCoverStrokePathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum coverMode
argument_list|)
block|;
name|void
name|glCoverFillPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum coverMode
argument_list|)
block|;
name|void
name|glPathFogGenNV
argument_list|(
argument|GLenum genMode
argument_list|)
block|;
name|void
name|glPathTexGenNV
argument_list|(
argument|GLenum texCoordSet
argument_list|,
argument|GLenum genMode
argument_list|,
argument|GLint components
argument_list|,
argument|const GLfloat *coeffs
argument_list|)
block|;
name|void
name|glPathColorGenNV
argument_list|(
argument|GLenum color
argument_list|,
argument|GLenum genMode
argument_list|,
argument|GLenum colorFormat
argument_list|,
argument|const GLfloat *coeffs
argument_list|)
block|;
name|void
name|glPathCoverDepthFuncNV
argument_list|(
argument|GLenum func
argument_list|)
block|;
name|void
name|glStencilStrokePathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLint reference
argument_list|,
argument|GLuint mask
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|;
name|void
name|glStencilFillPathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLenum fillMode
argument_list|,
argument|GLuint mask
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|;
name|void
name|glStencilStrokePathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLint reference
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilFillPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum fillMode
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glPathStencilDepthOffsetNV
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|;
name|void
name|glPathStencilFuncNV
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glPathDashArrayNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei dashCount
argument_list|,
argument|const GLfloat *dashArray
argument_list|)
block|;
name|void
name|glPathParameterfNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat value
argument_list|)
block|;
name|void
name|glPathParameterfvNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glPathParameteriNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|void
name|glPathParameterivNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glTransformPathNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLuint srcPath
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|;
name|void
name|glInterpolatePathsNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLuint pathA
argument_list|,
argument|GLuint pathB
argument_list|,
argument|GLfloat weight
argument_list|)
block|;
name|void
name|glCopyPathNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLuint srcPath
argument_list|)
block|;
name|void
name|glWeightPathsNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|const GLuint *paths
argument_list|,
argument|const GLfloat *weights
argument_list|)
block|;
name|void
name|glPathGlyphRangeNV
argument_list|(
argument|GLuint firstPathName
argument_list|,
argument|GLenum fontTarget
argument_list|,
argument|const GLvoid *fontName
argument_list|,
argument|GLbitfield fontStyle
argument_list|,
argument|GLuint firstGlyph
argument_list|,
argument|GLsizei numGlyphs
argument_list|,
argument|GLenum handleMissingGlyphs
argument_list|,
argument|GLuint pathParameterTemplate
argument_list|,
argument|GLfloat emScale
argument_list|)
block|;
name|void
name|glPathGlyphsNV
argument_list|(
argument|GLuint firstPathName
argument_list|,
argument|GLenum fontTarget
argument_list|,
argument|const GLvoid *fontName
argument_list|,
argument|GLbitfield fontStyle
argument_list|,
argument|GLsizei numGlyphs
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *charcodes
argument_list|,
argument|GLenum handleMissingGlyphs
argument_list|,
argument|GLuint pathParameterTemplate
argument_list|,
argument|GLfloat emScale
argument_list|)
block|;
name|void
name|glPathStringNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLvoid *pathString
argument_list|)
block|;
name|void
name|glPathSubCoordsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei coordStart
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|;
name|void
name|glPathSubCommandsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei commandStart
argument_list|,
argument|GLsizei commandsToDelete
argument_list|,
argument|GLsizei numCommands
argument_list|,
argument|const GLubyte *commands
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|;
name|void
name|glPathCoordsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|;
name|void
name|glPathCommandsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei numCommands
argument_list|,
argument|const GLubyte *commands
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|;
name|GLboolean
name|glIsPathNV
argument_list|(
argument|GLuint path
argument_list|)
block|;
name|void
name|glDeletePathsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei range
argument_list|)
block|;
name|GLuint
name|glGenPathsNV
argument_list|(
argument|GLsizei range
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_path_rendering
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPointAlongPathNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPointAlongPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei startSegment
argument_list|,
argument|GLsizei numSegments
argument_list|,
argument|GLfloat distance
argument_list|,
argument|GLfloat *x
argument_list|,
argument|GLfloat *y
argument_list|,
argument|GLfloat *tangentX
argument_list|,
argument|GLfloat *tangentY
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
return|return
name|d
operator|->
name|PointAlongPathNV
argument_list|(
name|path
argument_list|,
name|startSegment
argument_list|,
name|numSegments
argument_list|,
name|distance
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|tangentX
argument_list|,
name|tangentY
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetPathLengthNV
specifier|inline
name|GLfloat
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathLengthNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei startSegment
argument_list|,
argument|GLsizei numSegments
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
return|return
name|d
operator|->
name|GetPathLengthNV
argument_list|(
name|path
argument_list|,
name|startSegment
argument_list|,
name|numSegments
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsPointInStrokePathNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glIsPointInStrokePathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
return|return
name|d
operator|->
name|IsPointInStrokePathNV
argument_list|(
name|path
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsPointInFillPathNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glIsPointInFillPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLuint mask
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
return|return
name|d
operator|->
name|IsPointInFillPathNV
argument_list|(
name|path
argument_list|,
name|mask
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetPathTexGenfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathTexGenfvNV
argument_list|(
argument|GLenum texCoordSet
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathTexGenfvNV
argument_list|(
name|texCoordSet
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetPathTexGenivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathTexGenivNV
argument_list|(
argument|GLenum texCoordSet
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathTexGenivNV
argument_list|(
name|texCoordSet
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetPathColorGenfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathColorGenfvNV
argument_list|(
argument|GLenum color
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathColorGenfvNV
argument_list|(
name|color
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetPathColorGenivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathColorGenivNV
argument_list|(
argument|GLenum color
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathColorGenivNV
argument_list|(
name|color
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetPathSpacingNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathSpacingNV
argument_list|(
argument|GLenum pathListMode
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLfloat advanceScale
argument_list|,
argument|GLfloat kerningScale
argument_list|,
argument|GLenum transformType
argument_list|,
argument|GLfloat *returnedSpacing
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathSpacingNV
argument_list|(
name|pathListMode
argument_list|,
name|numPaths
argument_list|,
name|pathNameType
argument_list|,
name|paths
argument_list|,
name|pathBase
argument_list|,
name|advanceScale
argument_list|,
name|kerningScale
argument_list|,
name|transformType
argument_list|,
name|returnedSpacing
argument_list|)
block|; }
DECL|function|glGetPathMetricRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathMetricRangeNV
argument_list|(
argument|GLbitfield metricQueryMask
argument_list|,
argument|GLuint firstPathName
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLfloat *metrics
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathMetricRangeNV
argument_list|(
name|metricQueryMask
argument_list|,
name|firstPathName
argument_list|,
name|numPaths
argument_list|,
name|stride
argument_list|,
name|metrics
argument_list|)
block|; }
DECL|function|glGetPathMetricsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathMetricsNV
argument_list|(
argument|GLbitfield metricQueryMask
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLsizei stride
argument_list|,
argument|GLfloat *metrics
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathMetricsNV
argument_list|(
name|metricQueryMask
argument_list|,
name|numPaths
argument_list|,
name|pathNameType
argument_list|,
name|paths
argument_list|,
name|pathBase
argument_list|,
name|stride
argument_list|,
name|metrics
argument_list|)
block|; }
DECL|function|glGetPathDashArrayNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathDashArrayNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLfloat *dashArray
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathDashArrayNV
argument_list|(
name|path
argument_list|,
name|dashArray
argument_list|)
block|; }
DECL|function|glGetPathCoordsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathCoordsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLfloat *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathCoordsNV
argument_list|(
name|path
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glGetPathCommandsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathCommandsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLubyte *commands
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathCommandsNV
argument_list|(
name|path
argument_list|,
name|commands
argument_list|)
block|; }
DECL|function|glGetPathParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathParameterfvNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathParameterfvNV
argument_list|(
name|path
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetPathParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGetPathParameterivNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|GetPathParameterivNV
argument_list|(
name|path
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glCoverStrokePathInstancedNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glCoverStrokePathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLenum coverMode
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|CoverStrokePathInstancedNV
argument_list|(
name|numPaths
argument_list|,
name|pathNameType
argument_list|,
name|paths
argument_list|,
name|pathBase
argument_list|,
name|coverMode
argument_list|,
name|transformType
argument_list|,
name|transformValues
argument_list|)
block|; }
DECL|function|glCoverFillPathInstancedNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glCoverFillPathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLenum coverMode
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|CoverFillPathInstancedNV
argument_list|(
name|numPaths
argument_list|,
name|pathNameType
argument_list|,
name|paths
argument_list|,
name|pathBase
argument_list|,
name|coverMode
argument_list|,
name|transformType
argument_list|,
name|transformValues
argument_list|)
block|; }
DECL|function|glCoverStrokePathNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glCoverStrokePathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum coverMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|CoverStrokePathNV
argument_list|(
name|path
argument_list|,
name|coverMode
argument_list|)
block|; }
DECL|function|glCoverFillPathNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glCoverFillPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum coverMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|CoverFillPathNV
argument_list|(
name|path
argument_list|,
name|coverMode
argument_list|)
block|; }
DECL|function|glPathFogGenNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathFogGenNV
argument_list|(
argument|GLenum genMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathFogGenNV
argument_list|(
name|genMode
argument_list|)
block|; }
DECL|function|glPathTexGenNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathTexGenNV
argument_list|(
argument|GLenum texCoordSet
argument_list|,
argument|GLenum genMode
argument_list|,
argument|GLint components
argument_list|,
argument|const GLfloat *coeffs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathTexGenNV
argument_list|(
name|texCoordSet
argument_list|,
name|genMode
argument_list|,
name|components
argument_list|,
name|coeffs
argument_list|)
block|; }
DECL|function|glPathColorGenNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathColorGenNV
argument_list|(
argument|GLenum color
argument_list|,
argument|GLenum genMode
argument_list|,
argument|GLenum colorFormat
argument_list|,
argument|const GLfloat *coeffs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathColorGenNV
argument_list|(
name|color
argument_list|,
name|genMode
argument_list|,
name|colorFormat
argument_list|,
name|coeffs
argument_list|)
block|; }
DECL|function|glPathCoverDepthFuncNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathCoverDepthFuncNV
argument_list|(
argument|GLenum func
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathCoverDepthFuncNV
argument_list|(
name|func
argument_list|)
block|; }
DECL|function|glStencilStrokePathInstancedNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glStencilStrokePathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLint reference
argument_list|,
argument|GLuint mask
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|StencilStrokePathInstancedNV
argument_list|(
name|numPaths
argument_list|,
name|pathNameType
argument_list|,
name|paths
argument_list|,
name|pathBase
argument_list|,
name|reference
argument_list|,
name|mask
argument_list|,
name|transformType
argument_list|,
name|transformValues
argument_list|)
block|; }
DECL|function|glStencilFillPathInstancedNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glStencilFillPathInstancedNV
argument_list|(
argument|GLsizei numPaths
argument_list|,
argument|GLenum pathNameType
argument_list|,
argument|const GLvoid *paths
argument_list|,
argument|GLuint pathBase
argument_list|,
argument|GLenum fillMode
argument_list|,
argument|GLuint mask
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|StencilFillPathInstancedNV
argument_list|(
name|numPaths
argument_list|,
name|pathNameType
argument_list|,
name|paths
argument_list|,
name|pathBase
argument_list|,
name|fillMode
argument_list|,
name|mask
argument_list|,
name|transformType
argument_list|,
name|transformValues
argument_list|)
block|; }
DECL|function|glStencilStrokePathNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glStencilStrokePathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLint reference
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|StencilStrokePathNV
argument_list|(
name|path
argument_list|,
name|reference
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilFillPathNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glStencilFillPathNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum fillMode
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|StencilFillPathNV
argument_list|(
name|path
argument_list|,
name|fillMode
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glPathStencilDepthOffsetNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathStencilDepthOffsetNV
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathStencilDepthOffsetNV
argument_list|(
name|factor
argument_list|,
name|units
argument_list|)
block|; }
DECL|function|glPathStencilFuncNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathStencilFuncNV
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathStencilFuncNV
argument_list|(
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glPathDashArrayNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathDashArrayNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei dashCount
argument_list|,
argument|const GLfloat *dashArray
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathDashArrayNV
argument_list|(
name|path
argument_list|,
name|dashCount
argument_list|,
name|dashArray
argument_list|)
block|; }
DECL|function|glPathParameterfNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathParameterfNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathParameterfNV
argument_list|(
name|path
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glPathParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathParameterfvNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathParameterfvNV
argument_list|(
name|path
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glPathParameteriNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathParameteriNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathParameteriNV
argument_list|(
name|path
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glPathParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathParameterivNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathParameterivNV
argument_list|(
name|path
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glTransformPathNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glTransformPathNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLuint srcPath
argument_list|,
argument|GLenum transformType
argument_list|,
argument|const GLfloat *transformValues
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|TransformPathNV
argument_list|(
name|resultPath
argument_list|,
name|srcPath
argument_list|,
name|transformType
argument_list|,
name|transformValues
argument_list|)
block|; }
DECL|function|glInterpolatePathsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glInterpolatePathsNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLuint pathA
argument_list|,
argument|GLuint pathB
argument_list|,
argument|GLfloat weight
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|InterpolatePathsNV
argument_list|(
name|resultPath
argument_list|,
name|pathA
argument_list|,
name|pathB
argument_list|,
name|weight
argument_list|)
block|; }
DECL|function|glCopyPathNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glCopyPathNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLuint srcPath
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|CopyPathNV
argument_list|(
name|resultPath
argument_list|,
name|srcPath
argument_list|)
block|; }
DECL|function|glWeightPathsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glWeightPathsNV
argument_list|(
argument|GLuint resultPath
argument_list|,
argument|GLsizei numPaths
argument_list|,
argument|const GLuint *paths
argument_list|,
argument|const GLfloat *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|WeightPathsNV
argument_list|(
name|resultPath
argument_list|,
name|numPaths
argument_list|,
name|paths
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glPathGlyphRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathGlyphRangeNV
argument_list|(
argument|GLuint firstPathName
argument_list|,
argument|GLenum fontTarget
argument_list|,
argument|const GLvoid *fontName
argument_list|,
argument|GLbitfield fontStyle
argument_list|,
argument|GLuint firstGlyph
argument_list|,
argument|GLsizei numGlyphs
argument_list|,
argument|GLenum handleMissingGlyphs
argument_list|,
argument|GLuint pathParameterTemplate
argument_list|,
argument|GLfloat emScale
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathGlyphRangeNV
argument_list|(
name|firstPathName
argument_list|,
name|fontTarget
argument_list|,
name|fontName
argument_list|,
name|fontStyle
argument_list|,
name|firstGlyph
argument_list|,
name|numGlyphs
argument_list|,
name|handleMissingGlyphs
argument_list|,
name|pathParameterTemplate
argument_list|,
name|emScale
argument_list|)
block|; }
DECL|function|glPathGlyphsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathGlyphsNV
argument_list|(
argument|GLuint firstPathName
argument_list|,
argument|GLenum fontTarget
argument_list|,
argument|const GLvoid *fontName
argument_list|,
argument|GLbitfield fontStyle
argument_list|,
argument|GLsizei numGlyphs
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *charcodes
argument_list|,
argument|GLenum handleMissingGlyphs
argument_list|,
argument|GLuint pathParameterTemplate
argument_list|,
argument|GLfloat emScale
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathGlyphsNV
argument_list|(
name|firstPathName
argument_list|,
name|fontTarget
argument_list|,
name|fontName
argument_list|,
name|fontStyle
argument_list|,
name|numGlyphs
argument_list|,
name|type
argument_list|,
name|charcodes
argument_list|,
name|handleMissingGlyphs
argument_list|,
name|pathParameterTemplate
argument_list|,
name|emScale
argument_list|)
block|; }
DECL|function|glPathStringNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathStringNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLvoid *pathString
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathStringNV
argument_list|(
name|path
argument_list|,
name|format
argument_list|,
name|length
argument_list|,
name|pathString
argument_list|)
block|; }
DECL|function|glPathSubCoordsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathSubCoordsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei coordStart
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathSubCoordsNV
argument_list|(
name|path
argument_list|,
name|coordStart
argument_list|,
name|numCoords
argument_list|,
name|coordType
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glPathSubCommandsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathSubCommandsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei commandStart
argument_list|,
argument|GLsizei commandsToDelete
argument_list|,
argument|GLsizei numCommands
argument_list|,
argument|const GLubyte *commands
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathSubCommandsNV
argument_list|(
name|path
argument_list|,
name|commandStart
argument_list|,
name|commandsToDelete
argument_list|,
name|numCommands
argument_list|,
name|commands
argument_list|,
name|numCoords
argument_list|,
name|coordType
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glPathCoordsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathCoordsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathCoordsNV
argument_list|(
name|path
argument_list|,
name|numCoords
argument_list|,
name|coordType
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glPathCommandsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glPathCommandsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei numCommands
argument_list|,
argument|const GLubyte *commands
argument_list|,
argument|GLsizei numCoords
argument_list|,
argument|GLenum coordType
argument_list|,
argument|const GLvoid *coords
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|PathCommandsNV
argument_list|(
name|path
argument_list|,
name|numCommands
argument_list|,
name|commands
argument_list|,
name|numCoords
argument_list|,
name|coordType
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glIsPathNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glIsPathNV
argument_list|(
argument|GLuint path
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
return|return
name|d
operator|->
name|IsPathNV
argument_list|(
name|path
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeletePathsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glDeletePathsNV
argument_list|(
argument|GLuint path
argument_list|,
argument|GLsizei range
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
name|d
operator|->
name|DeletePathsNV
argument_list|(
name|path
argument_list|,
name|range
argument_list|)
block|; }
DECL|function|glGenPathsNV
specifier|inline
name|GLuint
name|QOpenGLExtension_NV_path_rendering
operator|::
name|glGenPathsNV
argument_list|(
argument|GLsizei range
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
block|;
return|return
name|d
operator|->
name|GenPathsNV
argument_list|(
name|range
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_pixel_data_rangePrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FlushPixelDataRangeNV
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelDataRangeNV
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLsizei
name|length
expr|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_pixel_data_range
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_pixel_data_range
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFlushPixelDataRangeNV
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glPixelDataRangeNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_pixel_data_range
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFlushPixelDataRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_pixel_data_range
operator|::
name|glFlushPixelDataRangeNV
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_pixel_data_range
argument_list|)
block|;
name|d
operator|->
name|FlushPixelDataRangeNV
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glPixelDataRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_pixel_data_range
operator|::
name|glPixelDataRangeNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_pixel_data_range
argument_list|)
block|;
name|d
operator|->
name|PixelDataRangeNV
argument_list|(
name|target
argument_list|,
name|length
argument_list|,
name|pointer
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_point_spritePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameterivNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameteriNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_point_sprite
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_point_sprite
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPointParameterivNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glPointParameteriNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_point_sprite
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPointParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_point_sprite
operator|::
name|glPointParameterivNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_point_sprite
argument_list|)
block|;
name|d
operator|->
name|PointParameterivNV
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameteriNV
specifier|inline
name|void
name|QOpenGLExtension_NV_point_sprite
operator|::
name|glPointParameteriNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_point_sprite
argument_list|)
block|;
name|d
operator|->
name|PointParameteriNV
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_present_videoPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideoui64vNV
argument_list|)
operator|(
name|GLuint
name|video_slot
operator|,
name|GLenum
name|pname
operator|,
name|GLuint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideoi64vNV
argument_list|)
operator|(
name|GLuint
name|video_slot
operator|,
name|GLenum
name|pname
operator|,
name|GLint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideouivNV
argument_list|)
operator|(
name|GLuint
name|video_slot
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideoivNV
argument_list|)
operator|(
name|GLuint
name|video_slot
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PresentFrameDualFillNV
argument_list|)
operator|(
name|GLuint
name|video_slot
operator|,
name|GLuint64EXT
name|minPresentTime
operator|,
name|GLuint
name|beginPresentTimeId
operator|,
name|GLuint
name|presentDurationId
operator|,
name|GLenum
name|type
operator|,
name|GLenum
name|target0
operator|,
name|GLuint
name|fill0
operator|,
name|GLenum
name|target1
operator|,
name|GLuint
name|fill1
operator|,
name|GLenum
name|target2
operator|,
name|GLuint
name|fill2
operator|,
name|GLenum
name|target3
operator|,
name|GLuint
name|fill3
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PresentFrameKeyedNV
argument_list|)
operator|(
name|GLuint
name|video_slot
operator|,
name|GLuint64EXT
name|minPresentTime
operator|,
name|GLuint
name|beginPresentTimeId
operator|,
name|GLuint
name|presentDurationId
operator|,
name|GLenum
name|type
operator|,
name|GLenum
name|target0
operator|,
name|GLuint
name|fill0
operator|,
name|GLuint
name|key0
operator|,
name|GLenum
name|target1
operator|,
name|GLuint
name|fill1
operator|,
name|GLuint
name|key1
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_present_video
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_present_video
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetVideoui64vNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|;
name|void
name|glGetVideoi64vNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|;
name|void
name|glGetVideouivNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetVideoivNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glPresentFrameDualFillNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLuint64EXT minPresentTime
argument_list|,
argument|GLuint beginPresentTimeId
argument_list|,
argument|GLuint presentDurationId
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum target0
argument_list|,
argument|GLuint fill0
argument_list|,
argument|GLenum target1
argument_list|,
argument|GLuint fill1
argument_list|,
argument|GLenum target2
argument_list|,
argument|GLuint fill2
argument_list|,
argument|GLenum target3
argument_list|,
argument|GLuint fill3
argument_list|)
block|;
name|void
name|glPresentFrameKeyedNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLuint64EXT minPresentTime
argument_list|,
argument|GLuint beginPresentTimeId
argument_list|,
argument|GLuint presentDurationId
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum target0
argument_list|,
argument|GLuint fill0
argument_list|,
argument|GLuint key0
argument_list|,
argument|GLenum target1
argument_list|,
argument|GLuint fill1
argument_list|,
argument|GLuint key1
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_present_video
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetVideoui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_present_video
operator|::
name|glGetVideoui64vNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_present_video
argument_list|)
block|;
name|d
operator|->
name|GetVideoui64vNV
argument_list|(
name|video_slot
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVideoi64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_present_video
operator|::
name|glGetVideoi64vNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_present_video
argument_list|)
block|;
name|d
operator|->
name|GetVideoi64vNV
argument_list|(
name|video_slot
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVideouivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_present_video
operator|::
name|glGetVideouivNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_present_video
argument_list|)
block|;
name|d
operator|->
name|GetVideouivNV
argument_list|(
name|video_slot
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVideoivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_present_video
operator|::
name|glGetVideoivNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_present_video
argument_list|)
block|;
name|d
operator|->
name|GetVideoivNV
argument_list|(
name|video_slot
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPresentFrameDualFillNV
specifier|inline
name|void
name|QOpenGLExtension_NV_present_video
operator|::
name|glPresentFrameDualFillNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLuint64EXT minPresentTime
argument_list|,
argument|GLuint beginPresentTimeId
argument_list|,
argument|GLuint presentDurationId
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum target0
argument_list|,
argument|GLuint fill0
argument_list|,
argument|GLenum target1
argument_list|,
argument|GLuint fill1
argument_list|,
argument|GLenum target2
argument_list|,
argument|GLuint fill2
argument_list|,
argument|GLenum target3
argument_list|,
argument|GLuint fill3
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_present_video
argument_list|)
block|;
name|d
operator|->
name|PresentFrameDualFillNV
argument_list|(
name|video_slot
argument_list|,
name|minPresentTime
argument_list|,
name|beginPresentTimeId
argument_list|,
name|presentDurationId
argument_list|,
name|type
argument_list|,
name|target0
argument_list|,
name|fill0
argument_list|,
name|target1
argument_list|,
name|fill1
argument_list|,
name|target2
argument_list|,
name|fill2
argument_list|,
name|target3
argument_list|,
name|fill3
argument_list|)
block|; }
DECL|function|glPresentFrameKeyedNV
specifier|inline
name|void
name|QOpenGLExtension_NV_present_video
operator|::
name|glPresentFrameKeyedNV
argument_list|(
argument|GLuint video_slot
argument_list|,
argument|GLuint64EXT minPresentTime
argument_list|,
argument|GLuint beginPresentTimeId
argument_list|,
argument|GLuint presentDurationId
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum target0
argument_list|,
argument|GLuint fill0
argument_list|,
argument|GLuint key0
argument_list|,
argument|GLenum target1
argument_list|,
argument|GLuint fill1
argument_list|,
argument|GLuint key1
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_present_video
argument_list|)
block|;
name|d
operator|->
name|PresentFrameKeyedNV
argument_list|(
name|video_slot
argument_list|,
name|minPresentTime
argument_list|,
name|beginPresentTimeId
argument_list|,
name|presentDurationId
argument_list|,
name|type
argument_list|,
name|target0
argument_list|,
name|fill0
argument_list|,
name|key0
argument_list|,
name|target1
argument_list|,
name|fill1
argument_list|,
name|key1
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_primitive_restartPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PrimitiveRestartIndexNV
argument_list|)
operator|(
name|GLuint
name|index
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PrimitiveRestartNV
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_primitive_restart
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_primitive_restart
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPrimitiveRestartIndexNV
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glPrimitiveRestartNV
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_primitive_restart
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPrimitiveRestartIndexNV
specifier|inline
name|void
name|QOpenGLExtension_NV_primitive_restart
operator|::
name|glPrimitiveRestartIndexNV
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_primitive_restart
argument_list|)
block|;
name|d
operator|->
name|PrimitiveRestartIndexNV
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glPrimitiveRestartNV
specifier|inline
name|void
name|QOpenGLExtension_NV_primitive_restart
operator|::
name|glPrimitiveRestartNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_primitive_restart
argument_list|)
block|;
name|d
operator|->
name|PrimitiveRestartNV
argument_list|()
block|; }
name|class
name|QOpenGLExtension_NV_register_combinersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFinalCombinerInputParameterivNV
argument_list|)
operator|(
name|GLenum
name|variable
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFinalCombinerInputParameterfvNV
argument_list|)
operator|(
name|GLenum
name|variable
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCombinerOutputParameterivNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|portion
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCombinerOutputParameterfvNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|portion
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCombinerInputParameterivNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|portion
operator|,
name|GLenum
name|variable
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCombinerInputParameterfvNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|portion
operator|,
name|GLenum
name|variable
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FinalCombinerInputNV
argument_list|)
operator|(
name|GLenum
name|variable
operator|,
name|GLenum
name|input
operator|,
name|GLenum
name|mapping
operator|,
name|GLenum
name|componentUsage
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CombinerOutputNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|portion
operator|,
name|GLenum
name|abOutput
operator|,
name|GLenum
name|cdOutput
operator|,
name|GLenum
name|sumOutput
operator|,
name|GLenum
name|scale
operator|,
name|GLenum
name|bias
operator|,
name|GLboolean
name|abDotProduct
operator|,
name|GLboolean
name|cdDotProduct
operator|,
name|GLboolean
name|muxSum
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CombinerInputNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|portion
operator|,
name|GLenum
name|variable
operator|,
name|GLenum
name|input
operator|,
name|GLenum
name|mapping
operator|,
name|GLenum
name|componentUsage
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CombinerParameteriNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CombinerParameterivNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CombinerParameterfNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CombinerParameterfvNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_register_combiners
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_register_combiners
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetFinalCombinerInputParameterivNV
argument_list|(
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetFinalCombinerInputParameterfvNV
argument_list|(
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetCombinerOutputParameterivNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetCombinerOutputParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetCombinerInputParameterivNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetCombinerInputParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glFinalCombinerInputNV
argument_list|(
argument|GLenum variable
argument_list|,
argument|GLenum input
argument_list|,
argument|GLenum mapping
argument_list|,
argument|GLenum componentUsage
argument_list|)
block|;
name|void
name|glCombinerOutputNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum abOutput
argument_list|,
argument|GLenum cdOutput
argument_list|,
argument|GLenum sumOutput
argument_list|,
argument|GLenum scale
argument_list|,
argument|GLenum bias
argument_list|,
argument|GLboolean abDotProduct
argument_list|,
argument|GLboolean cdDotProduct
argument_list|,
argument|GLboolean muxSum
argument_list|)
block|;
name|void
name|glCombinerInputNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum variable
argument_list|,
argument|GLenum input
argument_list|,
argument|GLenum mapping
argument_list|,
argument|GLenum componentUsage
argument_list|)
block|;
name|void
name|glCombinerParameteriNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glCombinerParameterivNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glCombinerParameterfNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glCombinerParameterfvNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_register_combiners
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetFinalCombinerInputParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glGetFinalCombinerInputParameterivNV
argument_list|(
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|GetFinalCombinerInputParameterivNV
argument_list|(
name|variable
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetFinalCombinerInputParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glGetFinalCombinerInputParameterfvNV
argument_list|(
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|GetFinalCombinerInputParameterfvNV
argument_list|(
name|variable
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetCombinerOutputParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glGetCombinerOutputParameterivNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|GetCombinerOutputParameterivNV
argument_list|(
name|stage
argument_list|,
name|portion
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetCombinerOutputParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glGetCombinerOutputParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|GetCombinerOutputParameterfvNV
argument_list|(
name|stage
argument_list|,
name|portion
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetCombinerInputParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glGetCombinerInputParameterivNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|GetCombinerInputParameterivNV
argument_list|(
name|stage
argument_list|,
name|portion
argument_list|,
name|variable
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetCombinerInputParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glGetCombinerInputParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum variable
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|GetCombinerInputParameterfvNV
argument_list|(
name|stage
argument_list|,
name|portion
argument_list|,
name|variable
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFinalCombinerInputNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glFinalCombinerInputNV
argument_list|(
argument|GLenum variable
argument_list|,
argument|GLenum input
argument_list|,
argument|GLenum mapping
argument_list|,
argument|GLenum componentUsage
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|FinalCombinerInputNV
argument_list|(
name|variable
argument_list|,
name|input
argument_list|,
name|mapping
argument_list|,
name|componentUsage
argument_list|)
block|; }
DECL|function|glCombinerOutputNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glCombinerOutputNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum abOutput
argument_list|,
argument|GLenum cdOutput
argument_list|,
argument|GLenum sumOutput
argument_list|,
argument|GLenum scale
argument_list|,
argument|GLenum bias
argument_list|,
argument|GLboolean abDotProduct
argument_list|,
argument|GLboolean cdDotProduct
argument_list|,
argument|GLboolean muxSum
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|CombinerOutputNV
argument_list|(
name|stage
argument_list|,
name|portion
argument_list|,
name|abOutput
argument_list|,
name|cdOutput
argument_list|,
name|sumOutput
argument_list|,
name|scale
argument_list|,
name|bias
argument_list|,
name|abDotProduct
argument_list|,
name|cdDotProduct
argument_list|,
name|muxSum
argument_list|)
block|; }
DECL|function|glCombinerInputNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glCombinerInputNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum portion
argument_list|,
argument|GLenum variable
argument_list|,
argument|GLenum input
argument_list|,
argument|GLenum mapping
argument_list|,
argument|GLenum componentUsage
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|CombinerInputNV
argument_list|(
name|stage
argument_list|,
name|portion
argument_list|,
name|variable
argument_list|,
name|input
argument_list|,
name|mapping
argument_list|,
name|componentUsage
argument_list|)
block|; }
DECL|function|glCombinerParameteriNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glCombinerParameteriNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|CombinerParameteriNV
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glCombinerParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glCombinerParameterivNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|CombinerParameterivNV
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glCombinerParameterfNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glCombinerParameterfNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|CombinerParameterfNV
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glCombinerParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners
operator|::
name|glCombinerParameterfvNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
block|;
name|d
operator|->
name|CombinerParameterfvNV
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_register_combiners2Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetCombinerStageParameterfvNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CombinerStageParameterfvNV
argument_list|)
operator|(
name|GLenum
name|stage
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_register_combiners2
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_register_combiners2
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetCombinerStageParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glCombinerStageParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_register_combiners2
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetCombinerStageParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners2
operator|::
name|glGetCombinerStageParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners2
argument_list|)
block|;
name|d
operator|->
name|GetCombinerStageParameterfvNV
argument_list|(
name|stage
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glCombinerStageParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_register_combiners2
operator|::
name|glCombinerStageParameterfvNV
argument_list|(
argument|GLenum stage
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners2
argument_list|)
block|;
name|d
operator|->
name|CombinerStageParameterfvNV
argument_list|(
name|stage
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_shader_buffer_loadPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformui64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformui64NV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint64EXT
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetUniformui64vNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLuint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniformui64vNV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Uniformui64NV
argument_list|)
operator|(
name|GLint
name|location
operator|,
name|GLuint64EXT
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetIntegerui64vNV
argument_list|)
operator|(
name|GLenum
name|value
operator|,
name|GLuint64EXT
operator|*
name|result
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetNamedBufferParameterui64vNV
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|pname
operator|,
name|GLuint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetBufferParameterui64vNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLuint64EXT
operator|*
name|params
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsNamedBufferResidentNV
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeNamedBufferNonResidentNV
argument_list|)
operator|(
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeNamedBufferResidentNV
argument_list|)
operator|(
name|GLuint
name|buffer
operator|,
name|GLenum
name|access
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsBufferResidentNV
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeBufferNonResidentNV
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MakeBufferResidentNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|access
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_shader_buffer_load
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glProgramUniformui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glProgramUniformui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT value
argument_list|)
block|;
name|void
name|glGetUniformui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|;
name|void
name|glUniformui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|;
name|void
name|glUniformui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT value
argument_list|)
block|;
name|void
name|glGetIntegerui64vNV
argument_list|(
argument|GLenum value
argument_list|,
argument|GLuint64EXT *result
argument_list|)
block|;
name|void
name|glGetNamedBufferParameterui64vNV
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|;
name|void
name|glGetBufferParameterui64vNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|;
name|GLboolean
name|glIsNamedBufferResidentNV
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glMakeNamedBufferNonResidentNV
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glMakeNamedBufferResidentNV
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|GLboolean
name|glIsBufferResidentNV
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glMakeBufferNonResidentNV
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glMakeBufferResidentNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glProgramUniformui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glProgramUniformui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformui64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glProgramUniformui64NV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformui64NV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetUniformui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glGetUniformui64vNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|GetUniformui64vNV
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniformui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glUniformui64vNV
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint64EXT *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|Uniformui64vNV
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glUniformui64NV
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint64EXT value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|Uniformui64NV
argument_list|(
name|location
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetIntegerui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glGetIntegerui64vNV
argument_list|(
argument|GLenum value
argument_list|,
argument|GLuint64EXT *result
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|GetIntegerui64vNV
argument_list|(
name|value
argument_list|,
name|result
argument_list|)
block|; }
DECL|function|glGetNamedBufferParameterui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glGetNamedBufferParameterui64vNV
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|GetNamedBufferParameterui64vNV
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetBufferParameterui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glGetBufferParameterui64vNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|GetBufferParameterui64vNV
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glIsNamedBufferResidentNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glIsNamedBufferResidentNV
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
return|return
name|d
operator|->
name|IsNamedBufferResidentNV
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMakeNamedBufferNonResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glMakeNamedBufferNonResidentNV
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|MakeNamedBufferNonResidentNV
argument_list|(
name|buffer
argument_list|)
block|; }
DECL|function|glMakeNamedBufferResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glMakeNamedBufferResidentNV
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|MakeNamedBufferResidentNV
argument_list|(
name|buffer
argument_list|,
name|access
argument_list|)
block|; }
DECL|function|glIsBufferResidentNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glIsBufferResidentNV
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
return|return
name|d
operator|->
name|IsBufferResidentNV
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMakeBufferNonResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glMakeBufferNonResidentNV
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|MakeBufferNonResidentNV
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glMakeBufferResidentNV
specifier|inline
name|void
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|glMakeBufferResidentNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
block|;
name|d
operator|->
name|MakeBufferResidentNV
argument_list|(
name|target
argument_list|,
name|access
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_texture_barrierPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureBarrierNV
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_texture_barrier
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_texture_barrier
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTextureBarrierNV
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_texture_barrier
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTextureBarrierNV
specifier|inline
name|void
name|QOpenGLExtension_NV_texture_barrier
operator|::
name|glTextureBarrierNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_barrier
argument_list|)
block|;
name|d
operator|->
name|TextureBarrierNV
argument_list|()
block|; }
name|class
name|QOpenGLExtension_NV_texture_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureImage3DMultisampleCoverageNV
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|coverageSamples
operator|,
name|GLsizei
name|colorSamples
operator|,
name|GLint
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLboolean
name|fixedSampleLocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureImage2DMultisampleCoverageNV
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|coverageSamples
operator|,
name|GLsizei
name|colorSamples
operator|,
name|GLint
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLboolean
name|fixedSampleLocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureImage3DMultisampleNV
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLint
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLboolean
name|fixedSampleLocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureImage2DMultisampleNV
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLint
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLboolean
name|fixedSampleLocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexImage3DMultisampleCoverageNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|coverageSamples
operator|,
name|GLsizei
name|colorSamples
operator|,
name|GLint
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLboolean
name|fixedSampleLocations
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexImage2DMultisampleCoverageNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|coverageSamples
operator|,
name|GLsizei
name|colorSamples
operator|,
name|GLint
name|internalFormat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLboolean
name|fixedSampleLocations
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_texture_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_texture_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTextureImage3DMultisampleCoverageNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|;
name|void
name|glTextureImage2DMultisampleCoverageNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|;
name|void
name|glTextureImage3DMultisampleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|;
name|void
name|glTextureImage2DMultisampleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|;
name|void
name|glTexImage3DMultisampleCoverageNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|;
name|void
name|glTexImage2DMultisampleCoverageNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_texture_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTextureImage3DMultisampleCoverageNV
specifier|inline
name|void
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|glTextureImage3DMultisampleCoverageNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TextureImage3DMultisampleCoverageNV
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|coverageSamples
argument_list|,
name|colorSamples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedSampleLocations
argument_list|)
block|; }
DECL|function|glTextureImage2DMultisampleCoverageNV
specifier|inline
name|void
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|glTextureImage2DMultisampleCoverageNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TextureImage2DMultisampleCoverageNV
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|coverageSamples
argument_list|,
name|colorSamples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedSampleLocations
argument_list|)
block|; }
DECL|function|glTextureImage3DMultisampleNV
specifier|inline
name|void
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|glTextureImage3DMultisampleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TextureImage3DMultisampleNV
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedSampleLocations
argument_list|)
block|; }
DECL|function|glTextureImage2DMultisampleNV
specifier|inline
name|void
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|glTextureImage2DMultisampleNV
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TextureImage2DMultisampleNV
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedSampleLocations
argument_list|)
block|; }
DECL|function|glTexImage3DMultisampleCoverageNV
specifier|inline
name|void
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|glTexImage3DMultisampleCoverageNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TexImage3DMultisampleCoverageNV
argument_list|(
name|target
argument_list|,
name|coverageSamples
argument_list|,
name|colorSamples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedSampleLocations
argument_list|)
block|; }
DECL|function|glTexImage2DMultisampleCoverageNV
specifier|inline
name|void
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|glTexImage2DMultisampleCoverageNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei coverageSamples
argument_list|,
argument|GLsizei colorSamples
argument_list|,
argument|GLint internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedSampleLocations
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_multisample
argument_list|)
block|;
name|d
operator|->
name|TexImage2DMultisampleCoverageNV
argument_list|(
name|target
argument_list|,
name|coverageSamples
argument_list|,
name|colorSamples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedSampleLocations
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_transform_feedbackPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TransformFeedbackStreamAttribsNV
argument_list|)
operator|(
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|attribs
operator|,
name|GLsizei
name|nbuffers
operator|,
specifier|const
name|GLint
operator|*
name|bufstreams
operator|,
name|GLenum
name|bufferMode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTransformFeedbackVaryingNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|index
operator|,
name|GLint
operator|*
name|location
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetActiveVaryingNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLsizei
operator|*
name|size
operator|,
name|GLenum
operator|*
name|type
operator|,
name|GLchar
operator|*
name|name
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetVaryingLocationNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ActiveVaryingNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
specifier|const
name|GLchar
operator|*
name|name
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TransformFeedbackVaryingsNV
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|locations
operator|,
name|GLenum
name|bufferMode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindBufferBaseNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|buffer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindBufferOffsetNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindBufferRangeNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLuint
name|buffer
operator|,
name|GLintptr
name|offset
operator|,
name|GLsizeiptr
name|size
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TransformFeedbackAttribsNV
argument_list|)
operator|(
name|GLuint
name|count
operator|,
specifier|const
name|GLint
operator|*
name|attribs
operator|,
name|GLenum
name|bufferMode
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndTransformFeedbackNV
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginTransformFeedbackNV
argument_list|)
operator|(
name|GLenum
name|primitiveMode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_transform_feedback
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_transform_feedback
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTransformFeedbackStreamAttribsNV
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLint *attribs
argument_list|,
argument|GLsizei nbuffers
argument_list|,
argument|const GLint *bufstreams
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|;
name|void
name|glGetTransformFeedbackVaryingNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *location
argument_list|)
block|;
name|void
name|glGetActiveVaryingNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|GLint
name|glGetVaryingLocationNV
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glActiveVaryingNV
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glTransformFeedbackVaryingsNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *locations
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|;
name|void
name|glBindBufferBaseNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glBindBufferOffsetNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|)
block|;
name|void
name|glBindBufferRangeNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glTransformFeedbackAttribsNV
argument_list|(
argument|GLuint count
argument_list|,
argument|const GLint *attribs
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|;
name|void
name|glEndTransformFeedbackNV
argument_list|()
block|;
name|void
name|glBeginTransformFeedbackNV
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTransformFeedbackStreamAttribsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glTransformFeedbackStreamAttribsNV
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLint *attribs
argument_list|,
argument|GLsizei nbuffers
argument_list|,
argument|const GLint *bufstreams
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|TransformFeedbackStreamAttribsNV
argument_list|(
name|count
argument_list|,
name|attribs
argument_list|,
name|nbuffers
argument_list|,
name|bufstreams
argument_list|,
name|bufferMode
argument_list|)
block|; }
DECL|function|glGetTransformFeedbackVaryingNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glGetTransformFeedbackVaryingNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *location
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|GetTransformFeedbackVaryingNV
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|location
argument_list|)
block|; }
DECL|function|glGetActiveVaryingNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glGetActiveVaryingNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|GetActiveVaryingNV
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetVaryingLocationNV
specifier|inline
name|GLint
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glGetVaryingLocationNV
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
return|return
name|d
operator|->
name|GetVaryingLocationNV
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glActiveVaryingNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glActiveVaryingNV
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|ActiveVaryingNV
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glTransformFeedbackVaryingsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glTransformFeedbackVaryingsNV
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *locations
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|TransformFeedbackVaryingsNV
argument_list|(
name|program
argument_list|,
name|count
argument_list|,
name|locations
argument_list|,
name|bufferMode
argument_list|)
block|; }
DECL|function|glBindBufferBaseNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glBindBufferBaseNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BindBufferBaseNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glBindBufferOffsetNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glBindBufferOffsetNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BindBufferOffsetNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|)
block|; }
DECL|function|glBindBufferRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glBindBufferRangeNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BindBufferRangeNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glTransformFeedbackAttribsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glTransformFeedbackAttribsNV
argument_list|(
argument|GLuint count
argument_list|,
argument|const GLint *attribs
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|TransformFeedbackAttribsNV
argument_list|(
name|count
argument_list|,
name|attribs
argument_list|,
name|bufferMode
argument_list|)
block|; }
DECL|function|glEndTransformFeedbackNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glEndTransformFeedbackNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|EndTransformFeedbackNV
argument_list|()
block|; }
DECL|function|glBeginTransformFeedbackNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|glBeginTransformFeedbackNV
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
block|;
name|d
operator|->
name|BeginTransformFeedbackNV
argument_list|(
name|primitiveMode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_transform_feedback2Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawTransformFeedbackNV
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ResumeTransformFeedbackNV
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PauseTransformFeedbackNV
argument_list|)
operator|(
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsTransformFeedbackNV
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenTransformFeedbacksNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|ids
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteTransformFeedbacksNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindTransformFeedbackNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_transform_feedback2
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_transform_feedback2
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawTransformFeedbackNV
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|void
name|glResumeTransformFeedbackNV
argument_list|()
block|;
name|void
name|glPauseTransformFeedbackNV
argument_list|()
block|;
name|GLboolean
name|glIsTransformFeedbackNV
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glGenTransformFeedbacksNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|void
name|glDeleteTransformFeedbacksNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glBindTransformFeedbackNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawTransformFeedbackNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|glDrawTransformFeedbackNV
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|DrawTransformFeedbackNV
argument_list|(
name|mode
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glResumeTransformFeedbackNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|glResumeTransformFeedbackNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|ResumeTransformFeedbackNV
argument_list|()
block|; }
DECL|function|glPauseTransformFeedbackNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|glPauseTransformFeedbackNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|PauseTransformFeedbackNV
argument_list|()
block|; }
DECL|function|glIsTransformFeedbackNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|glIsTransformFeedbackNV
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|;
return|return
name|d
operator|->
name|IsTransformFeedbackNV
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenTransformFeedbacksNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|glGenTransformFeedbacksNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|GenTransformFeedbacksNV
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glDeleteTransformFeedbacksNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|glDeleteTransformFeedbacksNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|DeleteTransformFeedbacksNV
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glBindTransformFeedbackNV
specifier|inline
name|void
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|glBindTransformFeedbackNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
block|;
name|d
operator|->
name|BindTransformFeedbackNV
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_vdpau_interopPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUUnmapSurfacesNV
argument_list|)
operator|(
name|GLsizei
name|numSurface
operator|,
specifier|const
name|GLvdpauSurfaceNV
operator|*
name|surfaces
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUMapSurfacesNV
argument_list|)
operator|(
name|GLsizei
name|numSurfaces
operator|,
specifier|const
name|GLvdpauSurfaceNV
operator|*
name|surfaces
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUSurfaceAccessNV
argument_list|)
operator|(
name|GLvdpauSurfaceNV
name|surface
operator|,
name|GLenum
name|access
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUGetSurfaceivNV
argument_list|)
operator|(
name|GLvdpauSurfaceNV
name|surface
operator|,
name|GLenum
name|pname
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLint
operator|*
name|values
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUUnregisterSurfaceNV
argument_list|)
operator|(
name|GLvdpauSurfaceNV
name|surface
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUIsSurfaceNV
argument_list|)
operator|(
name|GLvdpauSurfaceNV
name|surface
operator|)
block|;
name|GLvdpauSurfaceNV
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAURegisterOutputSurfaceNV
argument_list|)
operator|(
name|GLvoid
operator|*
name|vdpSurface
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|numTextureNames
operator|,
specifier|const
name|GLuint
operator|*
name|textureNames
operator|)
block|;
name|GLvdpauSurfaceNV
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAURegisterVideoSurfaceNV
argument_list|)
operator|(
specifier|const
name|GLvoid
operator|*
name|vdpSurface
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|numTextureNames
operator|,
specifier|const
name|GLuint
operator|*
name|textureNames
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUFiniNV
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VDPAUInitNV
argument_list|)
operator|(
specifier|const
name|GLvoid
operator|*
name|vdpDevice
operator|,
specifier|const
name|GLvoid
operator|*
name|getProcAddress
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_vdpau_interop
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_vdpau_interop
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVDPAUUnmapSurfacesNV
argument_list|(
argument|GLsizei numSurface
argument_list|,
argument|const GLvdpauSurfaceNV *surfaces
argument_list|)
block|;
name|void
name|glVDPAUMapSurfacesNV
argument_list|(
argument|GLsizei numSurfaces
argument_list|,
argument|const GLvdpauSurfaceNV *surfaces
argument_list|)
block|;
name|void
name|glVDPAUSurfaceAccessNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|void
name|glVDPAUGetSurfaceivNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|void
name|glVDPAUUnregisterSurfaceNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|)
block|;
name|void
name|glVDPAUIsSurfaceNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|)
block|;
name|GLvdpauSurfaceNV
name|glVDPAURegisterOutputSurfaceNV
argument_list|(
argument|GLvoid *vdpSurface
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei numTextureNames
argument_list|,
argument|const GLuint *textureNames
argument_list|)
block|;
name|GLvdpauSurfaceNV
name|glVDPAURegisterVideoSurfaceNV
argument_list|(
argument|const GLvoid *vdpSurface
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei numTextureNames
argument_list|,
argument|const GLuint *textureNames
argument_list|)
block|;
name|void
name|glVDPAUFiniNV
argument_list|()
block|;
name|void
name|glVDPAUInitNV
argument_list|(
specifier|const
name|GLvoid
operator|*
name|vdpDevice
argument_list|,
specifier|const
name|GLvoid
operator|*
name|getProcAddress
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVDPAUUnmapSurfacesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUUnmapSurfacesNV
argument_list|(
argument|GLsizei numSurface
argument_list|,
argument|const GLvdpauSurfaceNV *surfaces
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUUnmapSurfacesNV
argument_list|(
name|numSurface
argument_list|,
name|surfaces
argument_list|)
block|; }
DECL|function|glVDPAUMapSurfacesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUMapSurfacesNV
argument_list|(
argument|GLsizei numSurfaces
argument_list|,
argument|const GLvdpauSurfaceNV *surfaces
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUMapSurfacesNV
argument_list|(
name|numSurfaces
argument_list|,
name|surfaces
argument_list|)
block|; }
DECL|function|glVDPAUSurfaceAccessNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUSurfaceAccessNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUSurfaceAccessNV
argument_list|(
name|surface
argument_list|,
name|access
argument_list|)
block|; }
DECL|function|glVDPAUGetSurfaceivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUGetSurfaceivNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUGetSurfaceivNV
argument_list|(
name|surface
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glVDPAUUnregisterSurfaceNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUUnregisterSurfaceNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUUnregisterSurfaceNV
argument_list|(
name|surface
argument_list|)
block|; }
DECL|function|glVDPAUIsSurfaceNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUIsSurfaceNV
argument_list|(
argument|GLvdpauSurfaceNV surface
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUIsSurfaceNV
argument_list|(
name|surface
argument_list|)
block|; }
DECL|function|glVDPAURegisterOutputSurfaceNV
specifier|inline
name|GLvdpauSurfaceNV
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAURegisterOutputSurfaceNV
argument_list|(
argument|GLvoid *vdpSurface
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei numTextureNames
argument_list|,
argument|const GLuint *textureNames
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
return|return
name|d
operator|->
name|VDPAURegisterOutputSurfaceNV
argument_list|(
name|vdpSurface
argument_list|,
name|target
argument_list|,
name|numTextureNames
argument_list|,
name|textureNames
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glVDPAURegisterVideoSurfaceNV
specifier|inline
name|GLvdpauSurfaceNV
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAURegisterVideoSurfaceNV
argument_list|(
argument|const GLvoid *vdpSurface
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei numTextureNames
argument_list|,
argument|const GLuint *textureNames
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
return|return
name|d
operator|->
name|VDPAURegisterVideoSurfaceNV
argument_list|(
name|vdpSurface
argument_list|,
name|target
argument_list|,
name|numTextureNames
argument_list|,
name|textureNames
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glVDPAUFiniNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUFiniNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUFiniNV
argument_list|()
block|; }
DECL|function|glVDPAUInitNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|glVDPAUInitNV
argument_list|(
argument|const GLvoid *vdpDevice
argument_list|,
argument|const GLvoid *getProcAddress
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
block|;
name|d
operator|->
name|VDPAUInitNV
argument_list|(
name|vdpDevice
argument_list|,
name|getProcAddress
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_vertex_array_rangePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexArrayRangeNV
argument_list|)
operator|(
name|GLsizei
name|length
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FlushVertexArrayRangeNV
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_vertex_array_range
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_vertex_array_range
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexArrayRangeNV
argument_list|(
argument|GLsizei length
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glFlushVertexArrayRangeNV
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_vertex_array_range
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexArrayRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_array_range
operator|::
name|glVertexArrayRangeNV
argument_list|(
argument|GLsizei length
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_array_range
argument_list|)
block|;
name|d
operator|->
name|VertexArrayRangeNV
argument_list|(
name|length
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glFlushVertexArrayRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_array_range
operator|::
name|glFlushVertexArrayRangeNV
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_array_range
argument_list|)
block|;
name|d
operator|->
name|FlushVertexArrayRangeNV
argument_list|()
block|; }
name|class
name|QOpenGLExtension_NV_vertex_attrib_integer_64bitPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribLFormatNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribLui64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLuint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribLi64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLint64EXT
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4ui64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3ui64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2ui64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1ui64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLuint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4ui64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|,
name|GLuint64EXT
name|z
operator|,
name|GLuint64EXT
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3ui64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|,
name|GLuint64EXT
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2ui64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint64EXT
name|x
operator|,
name|GLuint64EXT
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1ui64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint64EXT
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4i64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3i64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2i64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1i64vNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLint64EXT
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL4i64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|,
name|GLint64EXT
name|z
operator|,
name|GLint64EXT
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL3i64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|,
name|GLint64EXT
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL2i64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint64EXT
name|x
operator|,
name|GLint64EXT
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribL1i64NV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint64EXT
name|x
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexAttribLFormatNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glGetVertexAttribLui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|;
name|void
name|glGetVertexAttribLi64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|;
name|void
name|glVertexAttribL4ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL3ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL2ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL1ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL4ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|,
argument|GLuint64EXT w
argument_list|)
block|;
name|void
name|glVertexAttribL3ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|)
block|;
name|void
name|glVertexAttribL2ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|)
block|;
name|void
name|glVertexAttribL1ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|)
block|;
name|void
name|glVertexAttribL4i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL3i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL2i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL1i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|;
name|void
name|glVertexAttribL4i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|,
argument|GLint64EXT w
argument_list|)
block|;
name|void
name|glVertexAttribL3i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|)
block|;
name|void
name|glVertexAttribL2i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|)
block|;
name|void
name|glVertexAttribL1i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexAttribLFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribLFormatNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribLFormatNV
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glGetVertexAttribLui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glGetVertexAttribLui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribLui64vNV
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribLi64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glGetVertexAttribLi64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64EXT *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribLi64vNV
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribL4ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL4ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4ui64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL3ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL3ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3ui64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL2ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL2ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2ui64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL1ui64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL1ui64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1ui64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL4ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL4ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|,
argument|GLuint64EXT w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4ui64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribL3ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL3ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|,
argument|GLuint64EXT z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3ui64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribL2ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL2ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|,
argument|GLuint64EXT y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2ui64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribL1ui64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL1ui64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint64EXT x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1ui64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttribL4i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL4i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4i64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL3i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL3i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3i64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL2i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL2i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2i64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL1i64vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL1i64vNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint64EXT *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1i64vNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL4i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL4i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|,
argument|GLint64EXT w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL4i64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribL3i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL3i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|,
argument|GLint64EXT z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL3i64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribL2i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL2i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|,
argument|GLint64EXT y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL2i64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribL1i64NV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|glVertexAttribL1i64NV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint64EXT x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
block|;
name|d
operator|->
name|VertexAttribL1i64NV
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_vertex_buffer_unified_memoryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetIntegerui64i_vNV
argument_list|)
operator|(
name|GLenum
name|value
operator|,
name|GLuint
name|index
operator|,
name|GLuint64EXT
operator|*
name|result
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribIFormatNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribFormatNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLboolean
name|normalized
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogCoordFormatNV
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SecondaryColorFormatNV
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EdgeFlagFormatNV
argument_list|)
operator|(
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoordFormatNV
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP IndexFormatNV
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorFormatNV
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP NormalFormatNV
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexFormatNV
argument_list|)
operator|(
name|GLint
name|size
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BufferAddressRangeNV
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLuint
name|index
operator|,
name|GLuint64EXT
name|address
operator|,
name|GLsizeiptr
name|length
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetIntegerui64i_vNV
argument_list|(
argument|GLenum value
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint64EXT *result
argument_list|)
block|;
name|void
name|glVertexAttribIFormatNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glVertexAttribFormatNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glFogCoordFormatNV
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glSecondaryColorFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glEdgeFlagFormatNV
argument_list|(
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glTexCoordFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glIndexFormatNV
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glColorFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glNormalFormatNV
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glVertexFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glBufferAddressRangeNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint64EXT address
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetIntegerui64i_vNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glGetIntegerui64i_vNV
argument_list|(
argument|GLenum value
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint64EXT *result
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|GetIntegerui64i_vNV
argument_list|(
name|value
argument_list|,
name|index
argument_list|,
name|result
argument_list|)
block|; }
DECL|function|glVertexAttribIFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glVertexAttribIFormatNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|VertexAttribIFormatNV
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glVertexAttribFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glVertexAttribFormatNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|VertexAttribFormatNV
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glFogCoordFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glFogCoordFormatNV
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|FogCoordFormatNV
argument_list|(
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glSecondaryColorFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glSecondaryColorFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|SecondaryColorFormatNV
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glEdgeFlagFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glEdgeFlagFormatNV
argument_list|(
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|EdgeFlagFormatNV
argument_list|(
name|stride
argument_list|)
block|; }
DECL|function|glTexCoordFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glTexCoordFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|TexCoordFormatNV
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glIndexFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glIndexFormatNV
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|IndexFormatNV
argument_list|(
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glColorFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glColorFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|ColorFormatNV
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glNormalFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glNormalFormatNV
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|NormalFormatNV
argument_list|(
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glVertexFormatNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glVertexFormatNV
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|VertexFormatNV
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glBufferAddressRangeNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|glBufferAddressRangeNV
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint64EXT address
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
block|;
name|d
operator|->
name|BufferAddressRangeNV
argument_list|(
name|pname
argument_list|,
name|index
argument_list|,
name|address
argument_list|,
name|length
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_vertex_programPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs4ubvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLubyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs4svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs4fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs4dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs3svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs3fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs3dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs2svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs2fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs2dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs1svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs1fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribs1dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4ubvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLubyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4ubNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLubyte
name|x
operator|,
name|GLubyte
name|y
operator|,
name|GLubyte
name|z
operator|,
name|GLubyte
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4sNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|,
name|GLshort
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4fNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib4dNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3sNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|,
name|GLshort
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3fNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib3dNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2sNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|,
name|GLshort
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2fNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib2dNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1svNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1sNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLshort
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1fvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1fNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1dvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttrib1dNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribPointerNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLint
name|fsize
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TrackMatrixNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|address
operator|,
name|GLenum
name|matrix
operator|,
name|GLenum
name|transform
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RequestResidentProgramsNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|programs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameters4fvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameters4dvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameter4fvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameter4fNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameter4dvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
specifier|const
name|GLdouble
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameter4dNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLdouble
name|x
operator|,
name|GLdouble
name|y
operator|,
name|GLdouble
name|z
operator|,
name|GLdouble
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LoadProgramNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|,
name|GLsizei
name|len
operator|,
specifier|const
name|GLubyte
operator|*
name|program
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsProgramNV
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribPointervNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribivNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribfvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribdvNV
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTrackMatrixivNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|address
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramStringNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLubyte
operator|*
name|program
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramivNV
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramParameterfvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramParameterdvNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|index
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenProgramsNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|programs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExecuteProgramNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteProgramsNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|programs
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindProgramNV
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP AreProgramsResidentNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|programs
operator|,
name|GLboolean
operator|*
name|residences
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_vertex_program
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_vertex_program
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVertexAttribs4ubvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttribs4svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttribs4fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttribs4dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribs3svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttribs3fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttribs3dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribs2svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttribs2fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttribs2dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribs1svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttribs1fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttribs1dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib4ubvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4ubNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|;
name|void
name|glVertexAttrib4svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glVertexAttrib4fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib4fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glVertexAttrib4dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib4dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexAttrib3svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib3sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glVertexAttrib3fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib3fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glVertexAttrib3dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib3dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexAttrib2svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib2sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glVertexAttrib2fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib2fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glVertexAttrib2dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib2dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexAttrib1svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib1sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|;
name|void
name|glVertexAttrib1fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib1fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|;
name|void
name|glVertexAttrib1dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib1dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|void
name|glVertexAttribPointerNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint fsize
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glTrackMatrixNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint address
argument_list|,
argument|GLenum matrix
argument_list|,
argument|GLenum transform
argument_list|)
block|;
name|void
name|glRequestResidentProgramsNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|)
block|;
name|void
name|glProgramParameters4fvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glProgramParameters4dvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glProgramParameter4fvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glProgramParameter4fNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glProgramParameter4dvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glProgramParameter4dNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glLoadProgramNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *program
argument_list|)
block|;
name|GLboolean
name|glIsProgramNV
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glGetVertexAttribPointervNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|;
name|void
name|glGetVertexAttribivNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribfvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetVertexAttribdvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetTrackMatrixivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint address
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramStringNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLubyte *program
argument_list|)
block|;
name|void
name|glGetProgramivNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetProgramParameterdvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGenProgramsNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *programs
argument_list|)
block|;
name|void
name|glExecuteProgramNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glDeleteProgramsNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|)
block|;
name|void
name|glBindProgramNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|GLboolean
name|glAreProgramsResidentNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|,
argument|GLboolean *residences
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_vertex_program
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVertexAttribs4ubvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs4ubvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs4ubvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs4svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs4svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs4svNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs4fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs4fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs4fvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs4dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs4dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs4dvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs3svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs3svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs3svNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs3fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs3fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs3fvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs3dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs3dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs3dvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs2svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs2svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs2svNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs2fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs2fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs2fvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs2dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs2dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs2dvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs1svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs1svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs1svNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs1fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs1fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs1fvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribs1dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribs1dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribs1dvNV
argument_list|(
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4ubvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4ubvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4ubvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4ubNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4ubNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4ubNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4svNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4sNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4sNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4fvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4fNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4fNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4dvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4dNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib4dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib4dNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib3svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib3svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3svNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3sNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib3sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3sNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib3fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3fvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3fNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib3fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3fNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib3dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3dvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3dNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib3dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib3dNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib2svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib2svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2svNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2sNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib2sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2sNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib2fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2fvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2fNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib2fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2fNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib2dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2dvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2dNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib2dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib2dNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib1svNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib1svNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1svNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1sNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib1sNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1sNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib1fvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1fvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1fNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib1fNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1fNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib1dvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1dvNV
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1dNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttrib1dNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttrib1dNV
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttribPointerNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glVertexAttribPointerNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint fsize
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|VertexAttribPointerNV
argument_list|(
name|index
argument_list|,
name|fsize
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glTrackMatrixNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glTrackMatrixNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint address
argument_list|,
argument|GLenum matrix
argument_list|,
argument|GLenum transform
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|TrackMatrixNV
argument_list|(
name|target
argument_list|,
name|address
argument_list|,
name|matrix
argument_list|,
name|transform
argument_list|)
block|; }
DECL|function|glRequestResidentProgramsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glRequestResidentProgramsNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|RequestResidentProgramsNV
argument_list|(
name|n
argument_list|,
name|programs
argument_list|)
block|; }
DECL|function|glProgramParameters4fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glProgramParameters4fvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramParameters4fvNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glProgramParameters4dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glProgramParameters4dvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramParameters4dvNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glProgramParameter4fvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glProgramParameter4fvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramParameter4fvNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glProgramParameter4fNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glProgramParameter4fNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramParameter4fNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramParameter4dvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glProgramParameter4dvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramParameter4dvNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glProgramParameter4dNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glProgramParameter4dNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ProgramParameter4dNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glLoadProgramNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glLoadProgramNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei len
argument_list|,
argument|const GLubyte *program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|LoadProgramNV
argument_list|(
name|target
argument_list|,
name|id
argument_list|,
name|len
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glIsProgramNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glIsProgramNV
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
return|return
name|d
operator|->
name|IsProgramNV
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribPointervNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetVertexAttribPointervNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribPointervNV
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glGetVertexAttribivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetVertexAttribivNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribivNV
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetVertexAttribfvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribfvNV
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribdvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetVertexAttribdvNV
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribdvNV
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTrackMatrixivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetTrackMatrixivNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint address
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetTrackMatrixivNV
argument_list|(
name|target
argument_list|,
name|address
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramStringNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetProgramStringNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLubyte *program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramStringNV
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glGetProgramivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetProgramivNV
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramivNV
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetProgramParameterfvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramParameterfvNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramParameterdvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGetProgramParameterdvNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GetProgramParameterdvNV
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGenProgramsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glGenProgramsNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *programs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|GenProgramsNV
argument_list|(
name|n
argument_list|,
name|programs
argument_list|)
block|; }
DECL|function|glExecuteProgramNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glExecuteProgramNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|ExecuteProgramNV
argument_list|(
name|target
argument_list|,
name|id
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glDeleteProgramsNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glDeleteProgramsNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|DeleteProgramsNV
argument_list|(
name|n
argument_list|,
name|programs
argument_list|)
block|; }
DECL|function|glBindProgramNV
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glBindProgramNV
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
name|d
operator|->
name|BindProgramNV
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glAreProgramsResidentNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_vertex_program
operator|::
name|glAreProgramsResidentNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *programs
argument_list|,
argument|GLboolean *residences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
block|;
return|return
name|d
operator|->
name|AreProgramsResidentNV
argument_list|(
name|n
argument_list|,
name|programs
argument_list|,
name|residences
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_vertex_program4Private
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribIuivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLenum
name|pname
expr|,
name|GLuint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVertexAttribIivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLenum
name|pname
expr|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribIPointerEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLint
name|size
expr|,
name|GLenum
name|type
expr|,
name|GLsizei
name|stride
expr|,
specifier|const
name|GLvoid
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4usvEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLushort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4ubvEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLubyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4svEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLshort
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4bvEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLbyte
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4uivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLuint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI3uivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLuint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI2uivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLuint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI1uivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLuint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4ivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI3ivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI2ivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI1ivEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
specifier|const
name|GLint
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4uiEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLuint
name|x
expr|,
name|GLuint
name|y
expr|,
name|GLuint
name|z
expr|,
name|GLuint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI3uiEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLuint
name|x
expr|,
name|GLuint
name|y
expr|,
name|GLuint
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI2uiEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLuint
name|x
expr|,
name|GLuint
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI1uiEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLuint
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI4iEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLint
name|x
expr|,
name|GLint
name|y
expr|,
name|GLint
name|z
expr|,
name|GLint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI3iEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLint
name|x
expr|,
name|GLint
name|y
expr|,
name|GLint
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI2iEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLint
name|x
expr|,
name|GLint
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribI1iEXT
argument_list|)
operator|(
name|GLuint
name|index
expr|,
name|GLint
name|x
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_vertex_program4
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_vertex_program4
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetVertexAttribIuivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribIivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glVertexAttribIPointerEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glVertexAttribI4usvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttribI4ubvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttribI4svEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttribI4bvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttribI4uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI3uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI2uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI1uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI4ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI3ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI2ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI1ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI4uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|;
name|void
name|glVertexAttribI3uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|)
block|;
name|void
name|glVertexAttribI2uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|)
block|;
name|void
name|glVertexAttribI1uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|)
block|;
name|void
name|glVertexAttribI4iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glVertexAttribI3iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glVertexAttribI2iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glVertexAttribI1iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribIuivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glGetVertexAttribIuivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribIuivEXT
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribIivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glGetVertexAttribIivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|GetVertexAttribIivEXT
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribIPointerEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribIPointerEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribIPointerEXT
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexAttribI4usvEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4usvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4usvEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4ubvEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4ubvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4ubvEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4svEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4svEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4svEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4bvEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4bvEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4bvEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4uivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4uivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI3uivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI3uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI3uivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI2uivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI2uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI2uivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI1uivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI1uivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI1uivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4ivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4ivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI3ivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI3ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI3ivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI2ivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI2ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI2ivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI1ivEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI1ivEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI1ivEXT
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4uiEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4uiEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribI3uiEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI3uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI3uiEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribI2uiEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI2uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI2uiEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribI1uiEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI1uiEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI1uiEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttribI4iEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI4iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI4iEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribI3iEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI3iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI3iEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribI2iEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI2iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI2iEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribI1iEXT
specifier|inline
name|void
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|glVertexAttribI1iEXT
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
block|;
name|d
operator|->
name|VertexAttribI1iEXT
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_video_capturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VideoCaptureStreamParameterdvNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VideoCaptureStreamParameterfvNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VideoCaptureStreamParameterivNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP VideoCaptureNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
operator|*
name|sequence_num
operator|,
name|GLuint64EXT
operator|*
name|capture_time
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideoCaptureStreamdvNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|pname
operator|,
name|GLdouble
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideoCaptureStreamfvNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideoCaptureStreamivNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetVideoCaptureivNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndVideoCaptureNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindVideoCaptureStreamTextureNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|frame_region
operator|,
name|GLenum
name|target
operator|,
name|GLuint
name|texture
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindVideoCaptureStreamBufferNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|,
name|GLuint
name|stream
operator|,
name|GLenum
name|frame_region
operator|,
name|GLintptrARB
name|offset
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginVideoCaptureNV
argument_list|)
operator|(
name|GLuint
name|video_capture_slot
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_video_capture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_video_capture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glVideoCaptureStreamParameterdvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|;
name|void
name|glVideoCaptureStreamParameterfvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glVideoCaptureStreamParameterivNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|GLenum
name|glVideoCaptureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint *sequence_num
argument_list|,
argument|GLuint64EXT *capture_time
argument_list|)
block|;
name|void
name|glGetVideoCaptureStreamdvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetVideoCaptureStreamfvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetVideoCaptureStreamivNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVideoCaptureivNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndVideoCaptureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|)
block|;
name|void
name|glBindVideoCaptureStreamTextureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum frame_region
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|;
name|void
name|glBindVideoCaptureStreamBufferNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum frame_region
argument_list|,
argument|GLintptrARB offset
argument_list|)
block|;
name|void
name|glBeginVideoCaptureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_video_capture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glVideoCaptureStreamParameterdvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glVideoCaptureStreamParameterdvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|VideoCaptureStreamParameterdvNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVideoCaptureStreamParameterfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glVideoCaptureStreamParameterfvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|VideoCaptureStreamParameterfvNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVideoCaptureStreamParameterivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glVideoCaptureStreamParameterivNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|VideoCaptureStreamParameterivNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVideoCaptureNV
specifier|inline
name|GLenum
name|QOpenGLExtension_NV_video_capture
operator|::
name|glVideoCaptureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint *sequence_num
argument_list|,
argument|GLuint64EXT *capture_time
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
return|return
name|d
operator|->
name|VideoCaptureNV
argument_list|(
name|video_capture_slot
argument_list|,
name|sequence_num
argument_list|,
name|capture_time
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetVideoCaptureStreamdvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glGetVideoCaptureStreamdvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|GetVideoCaptureStreamdvNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVideoCaptureStreamfvNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glGetVideoCaptureStreamfvNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|GetVideoCaptureStreamfvNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVideoCaptureStreamivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glGetVideoCaptureStreamivNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|GetVideoCaptureStreamivNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVideoCaptureivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glGetVideoCaptureivNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|GetVideoCaptureivNV
argument_list|(
name|video_capture_slot
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndVideoCaptureNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glEndVideoCaptureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|EndVideoCaptureNV
argument_list|(
name|video_capture_slot
argument_list|)
block|; }
DECL|function|glBindVideoCaptureStreamTextureNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glBindVideoCaptureStreamTextureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum frame_region
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|BindVideoCaptureStreamTextureNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|frame_region
argument_list|,
name|target
argument_list|,
name|texture
argument_list|)
block|; }
DECL|function|glBindVideoCaptureStreamBufferNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glBindVideoCaptureStreamBufferNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLenum frame_region
argument_list|,
argument|GLintptrARB offset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|BindVideoCaptureStreamBufferNV
argument_list|(
name|video_capture_slot
argument_list|,
name|stream
argument_list|,
name|frame_region
argument_list|,
name|offset
argument_list|)
block|; }
DECL|function|glBeginVideoCaptureNV
specifier|inline
name|void
name|QOpenGLExtension_NV_video_capture
operator|::
name|glBeginVideoCaptureNV
argument_list|(
argument|GLuint video_capture_slot
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
block|;
name|d
operator|->
name|BeginVideoCaptureNV
argument_list|(
name|video_capture_slot
argument_list|)
block|; }
name|class
name|QOpenGLExtension_PGI_misc_hintsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP HintPGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_PGI_misc_hints
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_PGI_misc_hints
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glHintPGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_PGI_misc_hints
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glHintPGI
specifier|inline
name|void
name|QOpenGLExtension_PGI_misc_hints
operator|::
name|glHintPGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_PGI_misc_hints
argument_list|)
block|;
name|d
operator|->
name|HintPGI
argument_list|(
name|target
argument_list|,
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_detail_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetDetailTexFuncSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLfloat
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DetailTexFuncSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|points
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_detail_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_detail_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetDetailTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat *points
argument_list|)
block|;
name|void
name|glDetailTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_detail_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetDetailTexFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_detail_texture
operator|::
name|glGetDetailTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_detail_texture
argument_list|)
block|;
name|d
operator|->
name|GetDetailTexFuncSGIS
argument_list|(
name|target
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glDetailTexFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_detail_texture
operator|::
name|glDetailTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_detail_texture
argument_list|)
block|;
name|d
operator|->
name|DetailTexFuncSGIS
argument_list|(
name|target
argument_list|,
name|n
argument_list|,
name|points
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_fog_functionPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFogFuncSGIS
argument_list|)
operator|(
name|GLfloat
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FogFuncSGIS
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|points
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_fog_function
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_fog_function
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetFogFuncSGIS
argument_list|(
name|GLfloat
operator|*
name|points
argument_list|)
block|;
name|void
name|glFogFuncSGIS
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_fog_function
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetFogFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_fog_function
operator|::
name|glGetFogFuncSGIS
argument_list|(
argument|GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_fog_function
argument_list|)
block|;
name|d
operator|->
name|GetFogFuncSGIS
argument_list|(
name|points
argument_list|)
block|; }
DECL|function|glFogFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_fog_function
operator|::
name|glFogFuncSGIS
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_fog_function
argument_list|)
block|;
name|d
operator|->
name|FogFuncSGIS
argument_list|(
name|n
argument_list|,
name|points
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SamplePatternSGIS
argument_list|)
operator|(
name|GLenum
name|pattern
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SampleMaskSGIS
argument_list|)
operator|(
name|GLclampf
name|value
operator|,
name|GLboolean
name|invert
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSamplePatternSGIS
argument_list|(
argument|GLenum pattern
argument_list|)
block|;
name|void
name|glSampleMaskSGIS
argument_list|(
argument|GLclampf value
argument_list|,
argument|GLboolean invert
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSamplePatternSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_multisample
operator|::
name|glSamplePatternSGIS
argument_list|(
argument|GLenum pattern
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_multisample
argument_list|)
block|;
name|d
operator|->
name|SamplePatternSGIS
argument_list|(
name|pattern
argument_list|)
block|; }
DECL|function|glSampleMaskSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_multisample
operator|::
name|glSampleMaskSGIS
argument_list|(
argument|GLclampf value
argument_list|,
argument|GLboolean invert
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_multisample
argument_list|)
block|;
name|d
operator|->
name|SampleMaskSGIS
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_pixel_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPixelTexGenParameterfvSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPixelTexGenParameterivSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTexGenParameterfvSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTexGenParameterfSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTexGenParameterivSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTexGenParameteriSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_pixel_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetPixelTexGenParameterfvSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetPixelTexGenParameterivSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glPixelTexGenParameterfvSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPixelTexGenParameterfSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glPixelTexGenParameterivSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glPixelTexGenParameteriSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetPixelTexGenParameterfvSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|glGetPixelTexGenParameterfvSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
block|;
name|d
operator|->
name|GetPixelTexGenParameterfvSGIS
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetPixelTexGenParameterivSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|glGetPixelTexGenParameterivSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
block|;
name|d
operator|->
name|GetPixelTexGenParameterivSGIS
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPixelTexGenParameterfvSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|glPixelTexGenParameterfvSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
block|;
name|d
operator|->
name|PixelTexGenParameterfvSGIS
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPixelTexGenParameterfSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|glPixelTexGenParameterfSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
block|;
name|d
operator|->
name|PixelTexGenParameterfSGIS
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelTexGenParameterivSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|glPixelTexGenParameterivSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
block|;
name|d
operator|->
name|PixelTexGenParameterivSGIS
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPixelTexGenParameteriSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|glPixelTexGenParameteriSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
block|;
name|d
operator|->
name|PixelTexGenParameteriSGIS
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_point_parametersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameterfvSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PointParameterfSGIS
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_point_parameters
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_point_parameters
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPointParameterfvSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPointParameterfSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_point_parameters
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPointParameterfvSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_point_parameters
operator|::
name|glPointParameterfvSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_point_parameters
argument_list|)
block|;
name|d
operator|->
name|PointParameterfvSGIS
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameterfSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_point_parameters
operator|::
name|glPointParameterfSGIS
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_point_parameters
argument_list|)
block|;
name|d
operator|->
name|PointParameterfSGIS
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_sharpen_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetSharpenTexFuncSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLfloat
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SharpenTexFuncSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|points
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_sharpen_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_sharpen_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetSharpenTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat *points
argument_list|)
block|;
name|void
name|glSharpenTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_sharpen_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetSharpenTexFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_sharpen_texture
operator|::
name|glGetSharpenTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_sharpen_texture
argument_list|)
block|;
name|d
operator|->
name|GetSharpenTexFuncSGIS
argument_list|(
name|target
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glSharpenTexFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_sharpen_texture
operator|::
name|glSharpenTexFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_sharpen_texture
argument_list|)
block|;
name|d
operator|->
name|SharpenTexFuncSGIS
argument_list|(
name|target
argument_list|,
name|n
argument_list|,
name|points
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_texture4DPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexSubImage4DSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLint
name|woffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLsizei
name|size4d
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexImage4DSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLsizei
name|size4d
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_texture4D
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_texture4D
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexSubImage4DSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint woffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei size4d
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexImage4DSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei size4d
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_texture4D
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexSubImage4DSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_texture4D
operator|::
name|glTexSubImage4DSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint woffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei size4d
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture4D
argument_list|)
block|;
name|d
operator|->
name|TexSubImage4DSGIS
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|woffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|size4d
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexImage4DSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_texture4D
operator|::
name|glTexImage4DSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei size4d
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture4D
argument_list|)
block|;
name|d
operator|->
name|TexImage4DSGIS
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|size4d
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_texture_color_maskPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureColorMaskSGIS
argument_list|)
operator|(
name|GLboolean
name|red
operator|,
name|GLboolean
name|green
operator|,
name|GLboolean
name|blue
operator|,
name|GLboolean
name|alpha
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_texture_color_mask
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_texture_color_mask
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTextureColorMaskSGIS
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_texture_color_mask
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTextureColorMaskSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_texture_color_mask
operator|::
name|glTextureColorMaskSGIS
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture_color_mask
argument_list|)
block|;
name|d
operator|->
name|TextureColorMaskSGIS
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIS_texture_filter4Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexFilterFuncSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|filter
operator|,
name|GLsizei
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|weights
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTexFilterFuncSGIS
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|filter
operator|,
name|GLfloat
operator|*
name|weights
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIS_texture_filter4
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIS_texture_filter4
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexFilterFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum filter
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLfloat *weights
argument_list|)
block|;
name|void
name|glGetTexFilterFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum filter
argument_list|,
argument|GLfloat *weights
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIS_texture_filter4
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexFilterFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_texture_filter4
operator|::
name|glTexFilterFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum filter
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLfloat *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture_filter4
argument_list|)
block|;
name|d
operator|->
name|TexFilterFuncSGIS
argument_list|(
name|target
argument_list|,
name|filter
argument_list|,
name|n
argument_list|,
name|weights
argument_list|)
block|; }
DECL|function|glGetTexFilterFuncSGIS
specifier|inline
name|void
name|QOpenGLExtension_SGIS_texture_filter4
operator|::
name|glGetTexFilterFuncSGIS
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum filter
argument_list|,
argument|GLfloat *weights
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture_filter4
argument_list|)
block|;
name|d
operator|->
name|GetTexFilterFuncSGIS
argument_list|(
name|target
argument_list|,
name|filter
argument_list|,
name|weights
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_asyncPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsAsyncMarkerSGIX
argument_list|)
operator|(
name|GLuint
name|marker
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteAsyncMarkersSGIX
argument_list|)
operator|(
name|GLuint
name|marker
operator|,
name|GLsizei
name|range
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP GenAsyncMarkersSGIX
argument_list|)
operator|(
name|GLsizei
name|range
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP PollAsyncSGIX
argument_list|)
operator|(
name|GLuint
operator|*
name|markerp
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP FinishAsyncSGIX
argument_list|)
operator|(
name|GLuint
operator|*
name|markerp
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP AsyncMarkerSGIX
argument_list|)
operator|(
name|GLuint
name|marker
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_async
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_async
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLboolean
name|glIsAsyncMarkerSGIX
argument_list|(
argument|GLuint marker
argument_list|)
block|;
name|void
name|glDeleteAsyncMarkersSGIX
argument_list|(
argument|GLuint marker
argument_list|,
argument|GLsizei range
argument_list|)
block|;
name|GLuint
name|glGenAsyncMarkersSGIX
argument_list|(
argument|GLsizei range
argument_list|)
block|;
name|GLint
name|glPollAsyncSGIX
argument_list|(
name|GLuint
operator|*
name|markerp
argument_list|)
block|;
name|GLint
name|glFinishAsyncSGIX
argument_list|(
name|GLuint
operator|*
name|markerp
argument_list|)
block|;
name|void
name|glAsyncMarkerSGIX
argument_list|(
argument|GLuint marker
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_async
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIsAsyncMarkerSGIX
specifier|inline
name|GLboolean
name|QOpenGLExtension_SGIX_async
operator|::
name|glIsAsyncMarkerSGIX
argument_list|(
argument|GLuint marker
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_async
argument_list|)
block|;
return|return
name|d
operator|->
name|IsAsyncMarkerSGIX
argument_list|(
name|marker
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteAsyncMarkersSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_async
operator|::
name|glDeleteAsyncMarkersSGIX
argument_list|(
argument|GLuint marker
argument_list|,
argument|GLsizei range
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_async
argument_list|)
block|;
name|d
operator|->
name|DeleteAsyncMarkersSGIX
argument_list|(
name|marker
argument_list|,
name|range
argument_list|)
block|; }
DECL|function|glGenAsyncMarkersSGIX
specifier|inline
name|GLuint
name|QOpenGLExtension_SGIX_async
operator|::
name|glGenAsyncMarkersSGIX
argument_list|(
argument|GLsizei range
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_async
argument_list|)
block|;
return|return
name|d
operator|->
name|GenAsyncMarkersSGIX
argument_list|(
name|range
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glPollAsyncSGIX
specifier|inline
name|GLint
name|QOpenGLExtension_SGIX_async
operator|::
name|glPollAsyncSGIX
argument_list|(
argument|GLuint *markerp
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_async
argument_list|)
block|;
return|return
name|d
operator|->
name|PollAsyncSGIX
argument_list|(
name|markerp
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glFinishAsyncSGIX
specifier|inline
name|GLint
name|QOpenGLExtension_SGIX_async
operator|::
name|glFinishAsyncSGIX
argument_list|(
argument|GLuint *markerp
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_async
argument_list|)
block|;
return|return
name|d
operator|->
name|FinishAsyncSGIX
argument_list|(
name|markerp
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glAsyncMarkerSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_async
operator|::
name|glAsyncMarkerSGIX
argument_list|(
argument|GLuint marker
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_async
argument_list|)
block|;
name|d
operator|->
name|AsyncMarkerSGIX
argument_list|(
name|marker
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_flush_rasterPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FlushRasterSGIX
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_flush_raster
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_flush_raster
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFlushRasterSGIX
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_flush_raster
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFlushRasterSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_flush_raster
operator|::
name|glFlushRasterSGIX
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_flush_raster
argument_list|)
block|;
name|d
operator|->
name|FlushRasterSGIX
argument_list|()
block|; }
name|class
name|QOpenGLExtension_SGIX_fragment_lightingPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LightEnviSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFragmentMaterialivSGIX
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFragmentMaterialfvSGIX
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFragmentLightivSGIX
argument_list|)
operator|(
name|GLenum
name|light
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFragmentLightfvSGIX
argument_list|)
operator|(
name|GLenum
name|light
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentMaterialivSGIX
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentMaterialiSGIX
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentMaterialfvSGIX
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentMaterialfSGIX
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightModelivSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightModeliSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightModelfvSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightModelfSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightivSGIX
argument_list|)
operator|(
name|GLenum
name|light
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightiSGIX
argument_list|)
operator|(
name|GLenum
name|light
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightfvSGIX
argument_list|)
operator|(
name|GLenum
name|light
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentLightfSGIX
argument_list|)
operator|(
name|GLenum
name|light
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FragmentColorMaterialSGIX
argument_list|)
operator|(
name|GLenum
name|face
operator|,
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_fragment_lighting
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glLightEnviSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glGetFragmentMaterialivSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetFragmentMaterialfvSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetFragmentLightivSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetFragmentLightfvSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glFragmentMaterialivSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glFragmentMaterialiSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glFragmentMaterialfvSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glFragmentMaterialfSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glFragmentLightModelivSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glFragmentLightModeliSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glFragmentLightModelfvSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glFragmentLightModelfSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glFragmentLightivSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glFragmentLightiSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glFragmentLightfvSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glFragmentLightfSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glFragmentColorMaterialSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glLightEnviSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glLightEnviSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|LightEnviSGIX
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glGetFragmentMaterialivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glGetFragmentMaterialivSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|GetFragmentMaterialivSGIX
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetFragmentMaterialfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glGetFragmentMaterialfvSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|GetFragmentMaterialfvSGIX
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetFragmentLightivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glGetFragmentLightivSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|GetFragmentLightivSGIX
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetFragmentLightfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glGetFragmentLightfvSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|GetFragmentLightfvSGIX
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFragmentMaterialivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentMaterialivSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentMaterialivSGIX
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFragmentMaterialiSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentMaterialiSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentMaterialiSGIX
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFragmentMaterialfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentMaterialfvSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentMaterialfvSGIX
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFragmentMaterialfSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentMaterialfSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentMaterialfSGIX
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFragmentLightModelivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightModelivSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightModelivSGIX
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFragmentLightModeliSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightModeliSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightModeliSGIX
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFragmentLightModelfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightModelfvSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightModelfvSGIX
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFragmentLightModelfSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightModelfSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightModelfSGIX
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFragmentLightivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightivSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightivSGIX
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFragmentLightiSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightiSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightiSGIX
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFragmentLightfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightfvSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightfvSGIX
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFragmentLightfSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentLightfSGIX
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentLightfSGIX
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFragmentColorMaterialSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|glFragmentColorMaterialSGIX
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
block|;
name|d
operator|->
name|FragmentColorMaterialSGIX
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_framezoomPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FrameZoomSGIX
argument_list|)
operator|(
name|GLint
name|factor
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_framezoom
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_framezoom
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFrameZoomSGIX
argument_list|(
argument|GLint factor
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_framezoom
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFrameZoomSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_framezoom
operator|::
name|glFrameZoomSGIX
argument_list|(
argument|GLint factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_framezoom
argument_list|)
block|;
name|d
operator|->
name|FrameZoomSGIX
argument_list|(
name|factor
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_igloo_interfacePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP IglooInterfaceSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLvoid
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_igloo_interface
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_igloo_interface
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glIglooInterfaceSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLvoid *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_igloo_interface
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glIglooInterfaceSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_igloo_interface
operator|::
name|glIglooInterfaceSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLvoid *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_igloo_interface
argument_list|)
block|;
name|d
operator|->
name|IglooInterfaceSGIX
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_instrumentsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StopInstrumentsSGIX
argument_list|)
operator|(
name|GLint
name|marker
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StartInstrumentsSGIX
argument_list|)
operator|(
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReadInstrumentsSGIX
argument_list|)
operator|(
name|GLint
name|marker
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP PollInstrumentsSGIX
argument_list|)
operator|(
name|GLint
operator|*
name|marker_p
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InstrumentsBufferSGIX
argument_list|)
operator|(
name|GLsizei
name|size
operator|,
name|GLint
operator|*
name|buffer
operator|)
block|;
name|GLint
argument_list|(
argument|QOPENGLF_APIENTRYP GetInstrumentsSGIX
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_instruments
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_instruments
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glStopInstrumentsSGIX
argument_list|(
argument|GLint marker
argument_list|)
block|;
name|void
name|glStartInstrumentsSGIX
argument_list|()
block|;
name|void
name|glReadInstrumentsSGIX
argument_list|(
argument|GLint marker
argument_list|)
block|;
name|GLint
name|glPollInstrumentsSGIX
argument_list|(
name|GLint
operator|*
name|marker_p
argument_list|)
block|;
name|void
name|glInstrumentsBufferSGIX
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLint *buffer
argument_list|)
block|;
name|GLint
name|glGetInstrumentsSGIX
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_instruments
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glStopInstrumentsSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_instruments
operator|::
name|glStopInstrumentsSGIX
argument_list|(
argument|GLint marker
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_instruments
argument_list|)
block|;
name|d
operator|->
name|StopInstrumentsSGIX
argument_list|(
name|marker
argument_list|)
block|; }
DECL|function|glStartInstrumentsSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_instruments
operator|::
name|glStartInstrumentsSGIX
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_instruments
argument_list|)
block|;
name|d
operator|->
name|StartInstrumentsSGIX
argument_list|()
block|; }
DECL|function|glReadInstrumentsSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_instruments
operator|::
name|glReadInstrumentsSGIX
argument_list|(
argument|GLint marker
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_instruments
argument_list|)
block|;
name|d
operator|->
name|ReadInstrumentsSGIX
argument_list|(
name|marker
argument_list|)
block|; }
DECL|function|glPollInstrumentsSGIX
specifier|inline
name|GLint
name|QOpenGLExtension_SGIX_instruments
operator|::
name|glPollInstrumentsSGIX
argument_list|(
argument|GLint *marker_p
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_instruments
argument_list|)
block|;
return|return
name|d
operator|->
name|PollInstrumentsSGIX
argument_list|(
name|marker_p
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glInstrumentsBufferSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_instruments
operator|::
name|glInstrumentsBufferSGIX
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLint *buffer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_instruments
argument_list|)
block|;
name|d
operator|->
name|InstrumentsBufferSGIX
argument_list|(
name|size
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glGetInstrumentsSGIX
specifier|inline
name|GLint
name|QOpenGLExtension_SGIX_instruments
operator|::
name|glGetInstrumentsSGIX
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_instruments
argument_list|)
block|;
return|return
name|d
operator|->
name|GetInstrumentsSGIX
argument_list|()
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_list_priorityPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ListParameterivSGIX
argument_list|)
operator|(
name|GLuint
name|list
expr|,
name|GLenum
name|pname
expr|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ListParameteriSGIX
argument_list|)
operator|(
name|GLuint
name|list
expr|,
name|GLenum
name|pname
expr|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ListParameterfvSGIX
argument_list|)
operator|(
name|GLuint
name|list
expr|,
name|GLenum
name|pname
expr|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ListParameterfSGIX
argument_list|)
operator|(
name|GLuint
name|list
expr|,
name|GLenum
name|pname
expr|,
name|GLfloat
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetListParameterivSGIX
argument_list|)
operator|(
name|GLuint
name|list
expr|,
name|GLenum
name|pname
expr|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetListParameterfvSGIX
argument_list|)
operator|(
name|GLuint
name|list
expr|,
name|GLenum
name|pname
expr|,
name|GLfloat
operator|*
name|params
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_list_priority
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_list_priority
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glListParameterivSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glListParameteriSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glListParameterfvSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glListParameterfSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glGetListParameterivSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetListParameterfvSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_list_priority
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glListParameterivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|glListParameterivSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_list_priority
argument_list|)
block|;
name|d
operator|->
name|ListParameterivSGIX
argument_list|(
name|list
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glListParameteriSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|glListParameteriSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_list_priority
argument_list|)
block|;
name|d
operator|->
name|ListParameteriSGIX
argument_list|(
name|list
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glListParameterfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|glListParameterfvSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_list_priority
argument_list|)
block|;
name|d
operator|->
name|ListParameterfvSGIX
argument_list|(
name|list
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glListParameterfSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|glListParameterfSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_list_priority
argument_list|)
block|;
name|d
operator|->
name|ListParameterfSGIX
argument_list|(
name|list
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glGetListParameterivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|glGetListParameterivSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_list_priority
argument_list|)
block|;
name|d
operator|->
name|GetListParameterivSGIX
argument_list|(
name|list
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetListParameterfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|glGetListParameterfvSGIX
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_list_priority
argument_list|)
block|;
name|d
operator|->
name|GetListParameterfvSGIX
argument_list|(
name|list
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_pixel_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PixelTexGenSGIX
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_pixel_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_pixel_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glPixelTexGenSGIX
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_pixel_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glPixelTexGenSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_pixel_texture
operator|::
name|glPixelTexGenSGIX
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_pixel_texture
argument_list|)
block|;
name|d
operator|->
name|PixelTexGenSGIX
argument_list|(
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_polynomial_ffdPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LoadIdentityDeformationMapSGIX
argument_list|)
operator|(
name|GLbitfield
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeformSGIX
argument_list|)
operator|(
name|GLbitfield
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeformationMap3fSGIX
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLfloat
name|u1
operator|,
name|GLfloat
name|u2
operator|,
name|GLint
name|ustride
operator|,
name|GLint
name|uorder
operator|,
name|GLfloat
name|v1
operator|,
name|GLfloat
name|v2
operator|,
name|GLint
name|vstride
operator|,
name|GLint
name|vorder
operator|,
name|GLfloat
name|w1
operator|,
name|GLfloat
name|w2
operator|,
name|GLint
name|wstride
operator|,
name|GLint
name|worder
operator|,
specifier|const
name|GLfloat
operator|*
name|points
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeformationMap3dSGIX
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLdouble
name|u1
operator|,
name|GLdouble
name|u2
operator|,
name|GLint
name|ustride
operator|,
name|GLint
name|uorder
operator|,
name|GLdouble
name|v1
operator|,
name|GLdouble
name|v2
operator|,
name|GLint
name|vstride
operator|,
name|GLint
name|vorder
operator|,
name|GLdouble
name|w1
operator|,
name|GLdouble
name|w2
operator|,
name|GLint
name|wstride
operator|,
name|GLint
name|worder
operator|,
specifier|const
name|GLdouble
operator|*
name|points
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_polynomial_ffd
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_polynomial_ffd
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glLoadIdentityDeformationMapSGIX
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glDeformSGIX
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glDeformationMap3fSGIX
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|GLfloat w1
argument_list|,
argument|GLfloat w2
argument_list|,
argument|GLint wstride
argument_list|,
argument|GLint worder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|void
name|glDeformationMap3dSGIX
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|GLdouble w1
argument_list|,
argument|GLdouble w2
argument_list|,
argument|GLint wstride
argument_list|,
argument|GLint worder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_polynomial_ffd
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glLoadIdentityDeformationMapSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_polynomial_ffd
operator|::
name|glLoadIdentityDeformationMapSGIX
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_polynomial_ffd
argument_list|)
block|;
name|d
operator|->
name|LoadIdentityDeformationMapSGIX
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glDeformSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_polynomial_ffd
operator|::
name|glDeformSGIX
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_polynomial_ffd
argument_list|)
block|;
name|d
operator|->
name|DeformSGIX
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glDeformationMap3fSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_polynomial_ffd
operator|::
name|glDeformationMap3fSGIX
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|GLfloat w1
argument_list|,
argument|GLfloat w2
argument_list|,
argument|GLint wstride
argument_list|,
argument|GLint worder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_polynomial_ffd
argument_list|)
block|;
name|d
operator|->
name|DeformationMap3fSGIX
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|w1
argument_list|,
name|w2
argument_list|,
name|wstride
argument_list|,
name|worder
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glDeformationMap3dSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_polynomial_ffd
operator|::
name|glDeformationMap3dSGIX
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|GLdouble w1
argument_list|,
argument|GLdouble w2
argument_list|,
argument|GLint wstride
argument_list|,
argument|GLint worder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_polynomial_ffd
argument_list|)
block|;
name|d
operator|->
name|DeformationMap3dSGIX
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|w1
argument_list|,
name|w2
argument_list|,
name|wstride
argument_list|,
name|worder
argument_list|,
name|points
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_reference_planePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReferencePlaneSGIX
argument_list|)
operator|(
specifier|const
name|GLdouble
operator|*
name|equation
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_reference_plane
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_reference_plane
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glReferencePlaneSGIX
argument_list|(
specifier|const
name|GLdouble
operator|*
name|equation
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_reference_plane
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glReferencePlaneSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_reference_plane
operator|::
name|glReferencePlaneSGIX
argument_list|(
argument|const GLdouble *equation
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_reference_plane
argument_list|)
block|;
name|d
operator|->
name|ReferencePlaneSGIX
argument_list|(
name|equation
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_spritePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SpriteParameterivSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SpriteParameteriSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SpriteParameterfvSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SpriteParameterfSGIX
argument_list|)
operator|(
name|GLenum
name|pname
operator|,
name|GLfloat
name|param
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_sprite
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_sprite
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glSpriteParameterivSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glSpriteParameteriSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glSpriteParameterfvSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glSpriteParameterfSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_sprite
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glSpriteParameterivSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_sprite
operator|::
name|glSpriteParameterivSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_sprite
argument_list|)
block|;
name|d
operator|->
name|SpriteParameterivSGIX
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glSpriteParameteriSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_sprite
operator|::
name|glSpriteParameteriSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_sprite
argument_list|)
block|;
name|d
operator|->
name|SpriteParameteriSGIX
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSpriteParameterfvSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_sprite
operator|::
name|glSpriteParameterfvSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_sprite
argument_list|)
block|;
name|d
operator|->
name|SpriteParameterfvSGIX
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glSpriteParameterfSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_sprite
operator|::
name|glSpriteParameterfSGIX
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_sprite
argument_list|)
block|;
name|d
operator|->
name|SpriteParameterfSGIX
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SGIX_tag_sample_bufferPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TagSampleBufferSGIX
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGIX_tag_sample_buffer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGIX_tag_sample_buffer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTagSampleBufferSGIX
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGIX_tag_sample_buffer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTagSampleBufferSGIX
specifier|inline
name|void
name|QOpenGLExtension_SGIX_tag_sample_buffer
operator|::
name|glTagSampleBufferSGIX
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_tag_sample_buffer
argument_list|)
block|;
name|d
operator|->
name|TagSampleBufferSGIX
argument_list|()
block|; }
name|class
name|QOpenGLExtension_SGI_color_tablePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetColorTableParameterivSGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetColorTableParameterfvSGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetColorTableSGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|table
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyColorTableSGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorTableParameterivSGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorTableParameterfvSGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
specifier|const
name|GLfloat
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ColorTableSGI
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|table
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SGI_color_table
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SGI_color_table
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetColorTableParameterivSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetColorTableParameterfvSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetColorTableSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *table
argument_list|)
block|;
name|void
name|glCopyColorTableSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glColorTableParameterivSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glColorTableParameterfvSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glColorTableSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *table
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SGI_color_table
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetColorTableParameterivSGI
specifier|inline
name|void
name|QOpenGLExtension_SGI_color_table
operator|::
name|glGetColorTableParameterivSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
block|;
name|d
operator|->
name|GetColorTableParameterivSGI
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetColorTableParameterfvSGI
specifier|inline
name|void
name|QOpenGLExtension_SGI_color_table
operator|::
name|glGetColorTableParameterfvSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
block|;
name|d
operator|->
name|GetColorTableParameterfvSGI
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetColorTableSGI
specifier|inline
name|void
name|QOpenGLExtension_SGI_color_table
operator|::
name|glGetColorTableSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *table
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
block|;
name|d
operator|->
name|GetColorTableSGI
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|table
argument_list|)
block|; }
DECL|function|glCopyColorTableSGI
specifier|inline
name|void
name|QOpenGLExtension_SGI_color_table
operator|::
name|glCopyColorTableSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
block|;
name|d
operator|->
name|CopyColorTableSGI
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glColorTableParameterivSGI
specifier|inline
name|void
name|QOpenGLExtension_SGI_color_table
operator|::
name|glColorTableParameterivSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
block|;
name|d
operator|->
name|ColorTableParameterivSGI
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glColorTableParameterfvSGI
specifier|inline
name|void
name|QOpenGLExtension_SGI_color_table
operator|::
name|glColorTableParameterfvSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
block|;
name|d
operator|->
name|ColorTableParameterfvSGI
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glColorTableSGI
specifier|inline
name|void
name|QOpenGLExtension_SGI_color_table
operator|::
name|glColorTableSGI
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *table
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
block|;
name|d
operator|->
name|ColorTableSGI
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|table
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SUNX_constant_dataPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FinishTextureSUNX
argument_list|)
operator|(
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SUNX_constant_data
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SUNX_constant_data
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glFinishTextureSUNX
argument_list|()
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SUNX_constant_data
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glFinishTextureSUNX
specifier|inline
name|void
name|QOpenGLExtension_SUNX_constant_data
operator|::
name|glFinishTextureSUNX
argument_list|()
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUNX_constant_data
argument_list|)
block|;
name|d
operator|->
name|FinishTextureSUNX
argument_list|()
block|; }
name|class
name|QOpenGLExtension_SUN_global_alphaPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactoruiSUN
argument_list|)
operator|(
name|GLuint
name|factor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactorusSUN
argument_list|)
operator|(
name|GLushort
name|factor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactorubSUN
argument_list|)
operator|(
name|GLubyte
name|factor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactordSUN
argument_list|)
operator|(
name|GLdouble
name|factor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactorfSUN
argument_list|)
operator|(
name|GLfloat
name|factor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactoriSUN
argument_list|)
operator|(
name|GLint
name|factor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactorsSUN
argument_list|)
operator|(
name|GLshort
name|factor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GlobalAlphaFactorbSUN
argument_list|)
operator|(
name|GLbyte
name|factor
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SUN_global_alpha
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SUN_global_alpha
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGlobalAlphaFactoruiSUN
argument_list|(
argument|GLuint factor
argument_list|)
block|;
name|void
name|glGlobalAlphaFactorusSUN
argument_list|(
argument|GLushort factor
argument_list|)
block|;
name|void
name|glGlobalAlphaFactorubSUN
argument_list|(
argument|GLubyte factor
argument_list|)
block|;
name|void
name|glGlobalAlphaFactordSUN
argument_list|(
argument|GLdouble factor
argument_list|)
block|;
name|void
name|glGlobalAlphaFactorfSUN
argument_list|(
argument|GLfloat factor
argument_list|)
block|;
name|void
name|glGlobalAlphaFactoriSUN
argument_list|(
argument|GLint factor
argument_list|)
block|;
name|void
name|glGlobalAlphaFactorsSUN
argument_list|(
argument|GLshort factor
argument_list|)
block|;
name|void
name|glGlobalAlphaFactorbSUN
argument_list|(
argument|GLbyte factor
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGlobalAlphaFactoruiSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactoruiSUN
argument_list|(
argument|GLuint factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactoruiSUN
argument_list|(
name|factor
argument_list|)
block|; }
DECL|function|glGlobalAlphaFactorusSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactorusSUN
argument_list|(
argument|GLushort factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactorusSUN
argument_list|(
name|factor
argument_list|)
block|; }
DECL|function|glGlobalAlphaFactorubSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactorubSUN
argument_list|(
argument|GLubyte factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactorubSUN
argument_list|(
name|factor
argument_list|)
block|; }
DECL|function|glGlobalAlphaFactordSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactordSUN
argument_list|(
argument|GLdouble factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactordSUN
argument_list|(
name|factor
argument_list|)
block|; }
DECL|function|glGlobalAlphaFactorfSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactorfSUN
argument_list|(
argument|GLfloat factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactorfSUN
argument_list|(
name|factor
argument_list|)
block|; }
DECL|function|glGlobalAlphaFactoriSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactoriSUN
argument_list|(
argument|GLint factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactoriSUN
argument_list|(
name|factor
argument_list|)
block|; }
DECL|function|glGlobalAlphaFactorsSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactorsSUN
argument_list|(
argument|GLshort factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactorsSUN
argument_list|(
name|factor
argument_list|)
block|; }
DECL|function|glGlobalAlphaFactorbSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|glGlobalAlphaFactorbSUN
argument_list|(
argument|GLbyte factor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
block|;
name|d
operator|->
name|GlobalAlphaFactorbSUN
argument_list|(
name|factor
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SUN_mesh_arrayPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawMeshArraysSUN
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|,
name|GLsizei
name|width
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SUN_mesh_array
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SUN_mesh_array
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawMeshArraysSUN
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SUN_mesh_array
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawMeshArraysSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_mesh_array
operator|::
name|glDrawMeshArraysSUN
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_mesh_array
argument_list|)
block|;
name|d
operator|->
name|DrawMeshArraysSUN
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|width
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SUN_triangle_listPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodePointerSUN
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|stride
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|pointer
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeubvSUN
argument_list|)
operator|(
specifier|const
name|GLubyte
operator|*
name|code
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeusvSUN
argument_list|)
operator|(
specifier|const
name|GLushort
operator|*
name|code
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuivSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|code
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeubSUN
argument_list|)
operator|(
name|GLubyte
name|code
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeusSUN
argument_list|)
operator|(
name|GLushort
name|code
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiSUN
argument_list|)
operator|(
name|GLuint
name|code
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SUN_triangle_list
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SUN_triangle_list
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glReplacementCodePointerSUN
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|;
name|void
name|glReplacementCodeubvSUN
argument_list|(
specifier|const
name|GLubyte
operator|*
name|code
argument_list|)
block|;
name|void
name|glReplacementCodeusvSUN
argument_list|(
specifier|const
name|GLushort
operator|*
name|code
argument_list|)
block|;
name|void
name|glReplacementCodeuivSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|code
argument_list|)
block|;
name|void
name|glReplacementCodeubSUN
argument_list|(
argument|GLubyte code
argument_list|)
block|;
name|void
name|glReplacementCodeusSUN
argument_list|(
argument|GLushort code
argument_list|)
block|;
name|void
name|glReplacementCodeuiSUN
argument_list|(
argument|GLuint code
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glReplacementCodePointerSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|glReplacementCodePointerSUN
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid* *pointer
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodePointerSUN
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glReplacementCodeubvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|glReplacementCodeubvSUN
argument_list|(
argument|const GLubyte *code
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeubvSUN
argument_list|(
name|code
argument_list|)
block|; }
DECL|function|glReplacementCodeusvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|glReplacementCodeusvSUN
argument_list|(
argument|const GLushort *code
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeusvSUN
argument_list|(
name|code
argument_list|)
block|; }
DECL|function|glReplacementCodeuivSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|glReplacementCodeuivSUN
argument_list|(
argument|const GLuint *code
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuivSUN
argument_list|(
name|code
argument_list|)
block|; }
DECL|function|glReplacementCodeubSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|glReplacementCodeubSUN
argument_list|(
argument|GLubyte code
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeubSUN
argument_list|(
name|code
argument_list|)
block|; }
DECL|function|glReplacementCodeusSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|glReplacementCodeusSUN
argument_list|(
argument|GLushort code
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeusSUN
argument_list|(
name|code
argument_list|)
block|; }
DECL|function|glReplacementCodeuiSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|glReplacementCodeuiSUN
argument_list|(
argument|GLuint code
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiSUN
argument_list|(
name|code
argument_list|)
block|; }
name|class
name|QOpenGLExtension_SUN_vertexPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|a
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiTexCoord2fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiTexCoord2fVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiColor4fNormal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiColor4fNormal3fVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|a
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiNormal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiNormal3fVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiColor3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiColor3fVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiColor4ubVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLubyte
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiColor4ubVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLubyte
name|r
operator|,
name|GLubyte
name|g
operator|,
name|GLubyte
name|b
operator|,
name|GLubyte
name|a
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLuint
operator|*
name|rc
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReplacementCodeuiVertex3fSUN
argument_list|)
operator|(
name|GLuint
name|rc
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord4fColor4fNormal3fVertex4fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord4fColor4fNormal3fVertex4fSUN
argument_list|)
operator|(
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|p
operator|,
name|GLfloat
name|q
operator|,
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|a
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fColor4fNormal3fVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|a
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fNormal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fNormal3fVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fColor3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fColor3fVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fColor4ubVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLubyte
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fColor4ubVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLubyte
name|r
operator|,
name|GLubyte
name|g
operator|,
name|GLubyte
name|b
operator|,
name|GLubyte
name|a
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord4fVertex4fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord4fVertex4fSUN
argument_list|)
operator|(
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|p
operator|,
name|GLfloat
name|q
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|tc
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexCoord2fVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|s
operator|,
name|GLfloat
name|t
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4fNormal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4fNormal3fVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|a
operator|,
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Normal3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|n
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Normal3fVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|nx
operator|,
name|GLfloat
name|ny
operator|,
name|GLfloat
name|nz
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color3fVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLfloat
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color3fVertex3fSUN
argument_list|)
operator|(
name|GLfloat
name|r
operator|,
name|GLfloat
name|g
operator|,
name|GLfloat
name|b
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4ubVertex3fvSUN
argument_list|)
operator|(
specifier|const
name|GLubyte
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4ubVertex3fSUN
argument_list|)
operator|(
name|GLubyte
name|r
operator|,
name|GLubyte
name|g
operator|,
name|GLubyte
name|b
operator|,
name|GLubyte
name|a
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4ubVertex2fvSUN
argument_list|)
operator|(
specifier|const
name|GLubyte
operator|*
name|c
operator|,
specifier|const
name|GLfloat
operator|*
name|v
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP Color4ubVertex2fSUN
argument_list|)
operator|(
name|GLubyte
name|r
operator|,
name|GLubyte
name|g
operator|,
name|GLubyte
name|b
operator|,
name|GLubyte
name|a
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_SUN_vertex
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_SUN_vertex
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glReplacementCodeuiTexCoord2fVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiTexCoord2fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glReplacementCodeuiColor4fNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glReplacementCodeuiNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glReplacementCodeuiColor3fVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiColor3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glReplacementCodeuiColor4ubVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLubyte
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiColor4ubVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glReplacementCodeuiVertex3fvSUN
argument_list|(
specifier|const
name|GLuint
operator|*
name|rc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glReplacementCodeuiVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glTexCoord4fColor4fNormal3fVertex4fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4fColor4fNormal3fVertex4fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat p
argument_list|,
argument|GLfloat q
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glTexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2fColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glTexCoord2fNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2fNormal3fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glTexCoord2fColor3fVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2fColor3fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glTexCoord2fColor4ubVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLubyte
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2fColor4ubVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glTexCoord4fVertex4fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4fVertex4fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat p
argument_list|,
argument|GLfloat q
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glTexCoord2fVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|tc
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glColor4fNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glNormal3fVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|n
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3fVertex3fSUN
argument_list|(
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glColor3fVertex3fvSUN
argument_list|(
specifier|const
name|GLfloat
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3fVertex3fSUN
argument_list|(
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glColor4ubVertex3fvSUN
argument_list|(
specifier|const
name|GLubyte
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4ubVertex3fSUN
argument_list|(
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glColor4ubVertex2fvSUN
argument_list|(
specifier|const
name|GLubyte
operator|*
name|c
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4ubVertex2fSUN
argument_list|(
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_SUN_vertex
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|tc
argument_list|,
name|c
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|tc
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glReplacementCodeuiTexCoord2fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiTexCoord2fVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|tc
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiTexCoord2fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiTexCoord2fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glReplacementCodeuiColor4fNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiColor4fNormal3fVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiColor4fNormal3fVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|c
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiColor4fNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiColor4fNormal3fVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glReplacementCodeuiNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiNormal3fVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiNormal3fVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiNormal3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiNormal3fVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glReplacementCodeuiColor3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiColor3fVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiColor3fVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|c
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiColor3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiColor3fVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiColor3fVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glReplacementCodeuiColor4ubVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiColor4ubVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLubyte *c
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiColor4ubVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|c
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiColor4ubVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiColor4ubVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiColor4ubVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glReplacementCodeuiVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiVertex3fvSUN
argument_list|(
argument|const GLuint *rc
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiVertex3fvSUN
argument_list|(
name|rc
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glReplacementCodeuiVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glReplacementCodeuiVertex3fSUN
argument_list|(
argument|GLuint rc
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|ReplacementCodeuiVertex3fSUN
argument_list|(
name|rc
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glTexCoord4fColor4fNormal3fVertex4fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord4fColor4fNormal3fVertex4fvSUN
argument_list|(
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord4fColor4fNormal3fVertex4fvSUN
argument_list|(
name|tc
argument_list|,
name|c
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4fColor4fNormal3fVertex4fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord4fColor4fNormal3fVertex4fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat p
argument_list|,
argument|GLfloat q
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord4fColor4fNormal3fVertex4fSUN
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|p
argument_list|,
name|q
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glTexCoord2fColor4fNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|(
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fColor4fNormal3fVertex3fvSUN
argument_list|(
name|tc
argument_list|,
name|c
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2fColor4fNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fColor4fNormal3fVertex3fSUN
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glTexCoord2fNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fNormal3fVertex3fvSUN
argument_list|(
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fNormal3fVertex3fvSUN
argument_list|(
name|tc
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2fNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fNormal3fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fNormal3fVertex3fSUN
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glTexCoord2fColor3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fColor3fVertex3fvSUN
argument_list|(
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fColor3fVertex3fvSUN
argument_list|(
name|tc
argument_list|,
name|c
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2fColor3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fColor3fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fColor3fVertex3fSUN
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glTexCoord2fColor4ubVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fColor4ubVertex3fvSUN
argument_list|(
argument|const GLfloat *tc
argument_list|,
argument|const GLubyte *c
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fColor4ubVertex3fvSUN
argument_list|(
name|tc
argument_list|,
name|c
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2fColor4ubVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fColor4ubVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fColor4ubVertex3fSUN
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glTexCoord4fVertex4fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord4fVertex4fvSUN
argument_list|(
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord4fVertex4fvSUN
argument_list|(
name|tc
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4fVertex4fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord4fVertex4fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat p
argument_list|,
argument|GLfloat q
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord4fVertex4fSUN
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|p
argument_list|,
name|q
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glTexCoord2fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fVertex3fvSUN
argument_list|(
argument|const GLfloat *tc
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fVertex3fvSUN
argument_list|(
name|tc
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glTexCoord2fVertex3fSUN
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|TexCoord2fVertex3fSUN
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glColor4fNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor4fNormal3fVertex3fvSUN
argument_list|(
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color4fNormal3fVertex3fvSUN
argument_list|(
name|c
argument_list|,
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glColor4fNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor4fNormal3fVertex3fSUN
argument_list|(
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat a
argument_list|,
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color4fNormal3fVertex3fSUN
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glNormal3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glNormal3fVertex3fvSUN
argument_list|(
argument|const GLfloat *n
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Normal3fVertex3fvSUN
argument_list|(
name|n
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glNormal3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glNormal3fVertex3fSUN
argument_list|(
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Normal3fVertex3fSUN
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glColor3fVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor3fVertex3fvSUN
argument_list|(
argument|const GLfloat *c
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color3fVertex3fvSUN
argument_list|(
name|c
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glColor3fVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor3fVertex3fSUN
argument_list|(
argument|GLfloat r
argument_list|,
argument|GLfloat g
argument_list|,
argument|GLfloat b
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color3fVertex3fSUN
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glColor4ubVertex3fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor4ubVertex3fvSUN
argument_list|(
argument|const GLubyte *c
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color4ubVertex3fvSUN
argument_list|(
name|c
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glColor4ubVertex3fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor4ubVertex3fSUN
argument_list|(
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color4ubVertex3fSUN
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glColor4ubVertex2fvSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor4ubVertex2fvSUN
argument_list|(
argument|const GLubyte *c
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color4ubVertex2fvSUN
argument_list|(
name|c
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glColor4ubVertex2fSUN
specifier|inline
name|void
name|QOpenGLExtension_SUN_vertex
operator|::
name|glColor4ubVertex2fSUN
argument_list|(
argument|GLubyte r
argument_list|,
argument|GLubyte g
argument_list|,
argument|GLubyte b
argument_list|,
argument|GLubyte a
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
block|;
name|d
operator|->
name|Color4ubVertex2fSUN
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
else|#
directive|else
name|class
name|QOpenGLExtension_OES_EGL_imagePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EGLImageTargetTexture2DOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLeglImageOES
name|image
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EGLImageTargetRenderbufferStorageOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLeglImageOES
name|image
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_OES_EGL_image
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_OES_EGL_image
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glEGLImageTargetTexture2DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLeglImageOES image
argument_list|)
block|;
name|void
name|glEGLImageTargetRenderbufferStorageOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLeglImageOES image
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_OES_EGL_image
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glEGLImageTargetTexture2DOES
specifier|inline
name|void
name|QOpenGLExtension_OES_EGL_image
operator|::
name|glEGLImageTargetTexture2DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLeglImageOES image
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_EGL_image
argument_list|)
block|;
name|d
operator|->
name|EGLImageTargetTexture2DOES
argument_list|(
name|target
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glEGLImageTargetRenderbufferStorageOES
specifier|inline
name|void
name|QOpenGLExtension_OES_EGL_image
operator|::
name|glEGLImageTargetRenderbufferStorageOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLeglImageOES image
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_EGL_image
argument_list|)
block|;
name|d
operator|->
name|EGLImageTargetRenderbufferStorageOES
argument_list|(
name|target
argument_list|,
name|image
argument_list|)
block|; }
name|class
name|QOpenGLExtension_OES_get_program_binaryPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramBinaryOES
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLenum
operator|*
name|binaryFormat
operator|,
name|GLvoid
operator|*
name|binary
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramBinaryOES
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|binaryFormat
operator|,
specifier|const
name|GLvoid
operator|*
name|binary
operator|,
name|GLint
name|length
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_OES_get_program_binary
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_OES_get_program_binary
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetProgramBinaryOES
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLenum *binaryFormat
argument_list|,
argument|GLvoid *binary
argument_list|)
block|;
name|void
name|glProgramBinaryOES
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum binaryFormat
argument_list|,
argument|const GLvoid *binary
argument_list|,
argument|GLint length
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_OES_get_program_binary
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetProgramBinaryOES
specifier|inline
name|void
name|QOpenGLExtension_OES_get_program_binary
operator|::
name|glGetProgramBinaryOES
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLenum *binaryFormat
argument_list|,
argument|GLvoid *binary
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_get_program_binary
argument_list|)
block|;
name|d
operator|->
name|GetProgramBinaryOES
argument_list|(
name|program
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|binaryFormat
argument_list|,
name|binary
argument_list|)
block|; }
DECL|function|glProgramBinaryOES
specifier|inline
name|void
name|QOpenGLExtension_OES_get_program_binary
operator|::
name|glProgramBinaryOES
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum binaryFormat
argument_list|,
argument|const GLvoid *binary
argument_list|,
argument|GLint length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_get_program_binary
argument_list|)
block|;
name|d
operator|->
name|ProgramBinaryOES
argument_list|(
name|program
argument_list|,
name|binaryFormat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
block|; }
name|class
name|QOpenGLExtension_OES_mapbufferPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
operator|*
operator|(
name|QOPENGLF_APIENTRYP
name|MapBufferOES
operator|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|access
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP UnmapBufferOES
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetBufferPointervOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_OES_mapbuffer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_OES_mapbuffer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
operator|*
name|glMapBufferOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|GLboolean
name|glUnmapBufferOES
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetBufferPointervOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid** params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_OES_mapbuffer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMapBufferOES
specifier|inline
name|void
operator|*
name|QOpenGLExtension_OES_mapbuffer
operator|::
name|glMapBufferOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_mapbuffer
argument_list|)
block|;
return|return
name|d
operator|->
name|MapBufferOES
argument_list|(
name|target
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glUnmapBufferOES
specifier|inline
name|GLboolean
name|QOpenGLExtension_OES_mapbuffer
operator|::
name|glUnmapBufferOES
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_mapbuffer
argument_list|)
block|;
return|return
name|d
operator|->
name|UnmapBufferOES
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetBufferPointervOES
specifier|inline
name|void
name|QOpenGLExtension_OES_mapbuffer
operator|::
name|glGetBufferPointervOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid** params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_mapbuffer
argument_list|)
block|;
name|d
operator|->
name|GetBufferPointervOES
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_OES_texture_3DPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexImage3DOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexSubImage3DOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CopyTexSubImage3DOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexImage3DOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CompressedTexSubImage3DOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture3DOES
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|zoffset
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_OES_texture_3D
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_OES_texture_3D
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* pixels
argument_list|)
block|;
name|void
name|glTexSubImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* pixels
argument_list|)
block|;
name|void
name|glCopyTexSubImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCompressedTexImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid* data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid* data
argument_list|)
block|;
name|void
name|glFramebufferTexture3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_OES_texture_3D
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexImage3DOES
specifier|inline
name|void
name|QOpenGLExtension_OES_texture_3D
operator|::
name|glTexImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_texture_3D
argument_list|)
block|;
name|d
operator|->
name|TexImage3DOES
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexSubImage3DOES
specifier|inline
name|void
name|QOpenGLExtension_OES_texture_3D
operator|::
name|glTexSubImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* pixels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_texture_3D
argument_list|)
block|;
name|d
operator|->
name|TexSubImage3DOES
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyTexSubImage3DOES
specifier|inline
name|void
name|QOpenGLExtension_OES_texture_3D
operator|::
name|glCopyTexSubImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_texture_3D
argument_list|)
block|;
name|d
operator|->
name|CopyTexSubImage3DOES
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCompressedTexImage3DOES
specifier|inline
name|void
name|QOpenGLExtension_OES_texture_3D
operator|::
name|glCompressedTexImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid* data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_texture_3D
argument_list|)
block|;
name|d
operator|->
name|CompressedTexImage3DOES
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage3DOES
specifier|inline
name|void
name|QOpenGLExtension_OES_texture_3D
operator|::
name|glCompressedTexSubImage3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid* data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_texture_3D
argument_list|)
block|;
name|d
operator|->
name|CompressedTexSubImage3DOES
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glFramebufferTexture3DOES
specifier|inline
name|void
name|QOpenGLExtension_OES_texture_3D
operator|::
name|glFramebufferTexture3DOES
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_texture_3D
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture3DOES
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|zoffset
argument_list|)
block|; }
name|class
name|QOpenGLExtension_OES_vertex_array_objectPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindVertexArrayOES
argument_list|)
operator|(
name|GLuint
name|array
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteVertexArraysOES
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|arrays
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenVertexArraysOES
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|arrays
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsVertexArrayOES
argument_list|)
operator|(
name|GLuint
name|array
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_OES_vertex_array_object
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_OES_vertex_array_object
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBindVertexArrayOES
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|void
name|glDeleteVertexArraysOES
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|;
name|void
name|glGenVertexArraysOES
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|;
name|GLboolean
name|glIsVertexArrayOES
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_OES_vertex_array_object
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBindVertexArrayOES
specifier|inline
name|void
name|QOpenGLExtension_OES_vertex_array_object
operator|::
name|glBindVertexArrayOES
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|BindVertexArrayOES
argument_list|(
name|array
argument_list|)
block|; }
DECL|function|glDeleteVertexArraysOES
specifier|inline
name|void
name|QOpenGLExtension_OES_vertex_array_object
operator|::
name|glDeleteVertexArraysOES
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|DeleteVertexArraysOES
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glGenVertexArraysOES
specifier|inline
name|void
name|QOpenGLExtension_OES_vertex_array_object
operator|::
name|glGenVertexArraysOES
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_vertex_array_object
argument_list|)
block|;
name|d
operator|->
name|GenVertexArraysOES
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glIsVertexArrayOES
specifier|inline
name|GLboolean
name|QOpenGLExtension_OES_vertex_array_object
operator|::
name|glIsVertexArrayOES
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_vertex_array_object
argument_list|)
block|;
return|return
name|d
operator|->
name|IsVertexArrayOES
argument_list|(
name|array
argument_list|)
return|;
block|}
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_performance_monitorPrivate
range|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorGroupsAMD
argument_list|)
operator|(
name|GLint
operator|*
name|numGroups
expr|,
name|GLsizei
name|groupsSize
expr|,
name|GLuint
operator|*
name|groups
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCountersAMD
argument_list|)
operator|(
name|GLuint
name|group
expr|,
name|GLint
operator|*
name|numCounters
expr|,
name|GLint
operator|*
name|maxActiveCounters
expr|,
name|GLsizei
name|counterSize
expr|,
name|GLuint
operator|*
name|counters
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorGroupStringAMD
argument_list|)
operator|(
name|GLuint
name|group
expr|,
name|GLsizei
name|bufSize
expr|,
name|GLsizei
operator|*
name|length
expr|,
name|GLchar
operator|*
name|groupString
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCounterStringAMD
argument_list|)
operator|(
name|GLuint
name|group
expr|,
name|GLuint
name|counter
expr|,
name|GLsizei
name|bufSize
expr|,
name|GLsizei
operator|*
name|length
expr|,
name|GLchar
operator|*
name|counterString
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCounterInfoAMD
argument_list|)
operator|(
name|GLuint
name|group
expr|,
name|GLuint
name|counter
expr|,
name|GLenum
name|pname
expr|,
name|GLvoid
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenPerfMonitorsAMD
argument_list|)
operator|(
name|GLsizei
name|n
expr|,
name|GLuint
operator|*
name|monitors
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeletePerfMonitorsAMD
argument_list|)
operator|(
name|GLsizei
name|n
expr|,
name|GLuint
operator|*
name|monitors
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SelectPerfMonitorCountersAMD
argument_list|)
operator|(
name|GLuint
name|monitor
expr|,
name|GLboolean
name|enable
expr|,
name|GLuint
name|group
expr|,
name|GLint
name|numCounters
expr|,
name|GLuint
operator|*
name|countersList
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginPerfMonitorAMD
argument_list|)
operator|(
name|GLuint
name|monitor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndPerfMonitorAMD
argument_list|)
operator|(
name|GLuint
name|monitor
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetPerfMonitorCounterDataAMD
argument_list|)
operator|(
name|GLuint
name|monitor
expr|,
name|GLenum
name|pname
expr|,
name|GLsizei
name|dataSize
expr|,
name|GLuint
operator|*
name|data
expr|,
name|GLint
operator|*
name|bytesWritten
operator|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_AMD_performance_monitor
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_AMD_performance_monitor
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetPerfMonitorGroupsAMD
argument_list|(
argument|GLint *numGroups
argument_list|,
argument|GLsizei groupsSize
argument_list|,
argument|GLuint *groups
argument_list|)
block|;
name|void
name|glGetPerfMonitorCountersAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLint *numCounters
argument_list|,
argument|GLint *maxActiveCounters
argument_list|,
argument|GLsizei counterSize
argument_list|,
argument|GLuint *counters
argument_list|)
block|;
name|void
name|glGetPerfMonitorGroupStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *groupString
argument_list|)
block|;
name|void
name|glGetPerfMonitorCounterStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *counterString
argument_list|)
block|;
name|void
name|glGetPerfMonitorCounterInfoAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glGenPerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|;
name|void
name|glDeletePerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|;
name|void
name|glSelectPerfMonitorCountersAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLboolean enable
argument_list|,
argument|GLuint group
argument_list|,
argument|GLint numCounters
argument_list|,
argument|GLuint *countersList
argument_list|)
block|;
name|void
name|glBeginPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|;
name|void
name|glEndPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|;
name|void
name|glGetPerfMonitorCounterDataAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei dataSize
argument_list|,
argument|GLuint *data
argument_list|,
argument|GLint *bytesWritten
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetPerfMonitorGroupsAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorGroupsAMD
argument_list|(
argument|GLint *numGroups
argument_list|,
argument|GLsizei groupsSize
argument_list|,
argument|GLuint *groups
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorGroupsAMD
argument_list|(
name|numGroups
argument_list|,
name|groupsSize
argument_list|,
name|groups
argument_list|)
block|; }
DECL|function|glGetPerfMonitorCountersAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCountersAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLint *numCounters
argument_list|,
argument|GLint *maxActiveCounters
argument_list|,
argument|GLsizei counterSize
argument_list|,
argument|GLuint *counters
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCountersAMD
argument_list|(
name|group
argument_list|,
name|numCounters
argument_list|,
name|maxActiveCounters
argument_list|,
name|counterSize
argument_list|,
name|counters
argument_list|)
block|; }
DECL|function|glGetPerfMonitorGroupStringAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorGroupStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *groupString
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorGroupStringAMD
argument_list|(
name|group
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|groupString
argument_list|)
block|; }
DECL|function|glGetPerfMonitorCounterStringAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCounterStringAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *counterString
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCounterStringAMD
argument_list|(
name|group
argument_list|,
name|counter
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|counterString
argument_list|)
block|; }
DECL|function|glGetPerfMonitorCounterInfoAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCounterInfoAMD
argument_list|(
argument|GLuint group
argument_list|,
argument|GLuint counter
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCounterInfoAMD
argument_list|(
name|group
argument_list|,
name|counter
argument_list|,
name|pname
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGenPerfMonitorsAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGenPerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GenPerfMonitorsAMD
argument_list|(
name|n
argument_list|,
name|monitors
argument_list|)
block|; }
DECL|function|glDeletePerfMonitorsAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glDeletePerfMonitorsAMD
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *monitors
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|DeletePerfMonitorsAMD
argument_list|(
name|n
argument_list|,
name|monitors
argument_list|)
block|; }
DECL|function|glSelectPerfMonitorCountersAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glSelectPerfMonitorCountersAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLboolean enable
argument_list|,
argument|GLuint group
argument_list|,
argument|GLint numCounters
argument_list|,
argument|GLuint *countersList
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|SelectPerfMonitorCountersAMD
argument_list|(
name|monitor
argument_list|,
name|enable
argument_list|,
name|group
argument_list|,
name|numCounters
argument_list|,
name|countersList
argument_list|)
block|; }
DECL|function|glBeginPerfMonitorAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glBeginPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|BeginPerfMonitorAMD
argument_list|(
name|monitor
argument_list|)
block|; }
DECL|function|glEndPerfMonitorAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glEndPerfMonitorAMD
argument_list|(
argument|GLuint monitor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|EndPerfMonitorAMD
argument_list|(
name|monitor
argument_list|)
block|; }
DECL|function|glGetPerfMonitorCounterDataAMD
specifier|inline
name|void
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|glGetPerfMonitorCounterDataAMD
argument_list|(
argument|GLuint monitor
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei dataSize
argument_list|,
argument|GLuint *data
argument_list|,
argument|GLint *bytesWritten
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
block|;
name|d
operator|->
name|GetPerfMonitorCounterDataAMD
argument_list|(
name|monitor
argument_list|,
name|pname
argument_list|,
name|dataSize
argument_list|,
name|data
argument_list|,
name|bytesWritten
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ANGLE_framebuffer_blitPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlitFramebufferANGLE
argument_list|)
operator|(
name|GLint
name|srcX0
operator|,
name|GLint
name|srcY0
operator|,
name|GLint
name|srcX1
operator|,
name|GLint
name|srcY1
operator|,
name|GLint
name|dstX0
operator|,
name|GLint
name|dstY0
operator|,
name|GLint
name|dstX1
operator|,
name|GLint
name|dstY1
operator|,
name|GLbitfield
name|mask
operator|,
name|GLenum
name|filter
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ANGLE_framebuffer_blit
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ANGLE_framebuffer_blit
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glBlitFramebufferANGLE
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ANGLE_framebuffer_blit
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glBlitFramebufferANGLE
specifier|inline
name|void
name|QOpenGLExtension_ANGLE_framebuffer_blit
operator|::
name|glBlitFramebufferANGLE
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_framebuffer_blit
argument_list|)
block|;
name|d
operator|->
name|BlitFramebufferANGLE
argument_list|(
name|srcX0
argument_list|,
name|srcY0
argument_list|,
name|srcX1
argument_list|,
name|srcY1
argument_list|,
name|dstX0
argument_list|,
name|dstY0
argument_list|,
name|dstX1
argument_list|,
name|dstY1
argument_list|,
name|mask
argument_list|,
name|filter
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ANGLE_framebuffer_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisampleANGLE
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ANGLE_framebuffer_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ANGLE_framebuffer_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glRenderbufferStorageMultisampleANGLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ANGLE_framebuffer_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glRenderbufferStorageMultisampleANGLE
specifier|inline
name|void
name|QOpenGLExtension_ANGLE_framebuffer_multisample
operator|::
name|glRenderbufferStorageMultisampleANGLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_framebuffer_multisample
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisampleANGLE
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ANGLE_instanced_arraysPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawArraysInstancedANGLE
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawElementsInstancedANGLE
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|void
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP VertexAttribDivisorANGLE
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|divisor
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ANGLE_instanced_arrays
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ANGLE_instanced_arrays
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawArraysInstancedANGLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glDrawElementsInstancedANGLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glVertexAttribDivisorANGLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint divisor
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ANGLE_instanced_arrays
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawArraysInstancedANGLE
specifier|inline
name|void
name|QOpenGLExtension_ANGLE_instanced_arrays
operator|::
name|glDrawArraysInstancedANGLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_instanced_arrays
argument_list|)
block|;
name|d
operator|->
name|DrawArraysInstancedANGLE
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glDrawElementsInstancedANGLE
specifier|inline
name|void
name|QOpenGLExtension_ANGLE_instanced_arrays
operator|::
name|glDrawElementsInstancedANGLE
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_instanced_arrays
argument_list|)
block|;
name|d
operator|->
name|DrawElementsInstancedANGLE
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glVertexAttribDivisorANGLE
specifier|inline
name|void
name|QOpenGLExtension_ANGLE_instanced_arrays
operator|::
name|glVertexAttribDivisorANGLE
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint divisor
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_instanced_arrays
argument_list|)
block|;
name|d
operator|->
name|VertexAttribDivisorANGLE
argument_list|(
name|index
argument_list|,
name|divisor
argument_list|)
block|; }
name|class
name|QOpenGLExtension_ANGLE_translated_shader_sourcePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetTranslatedShaderSourceANGLE
argument_list|)
operator|(
name|GLuint
name|shader
operator|,
name|GLsizei
name|bufsize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|source
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_ANGLE_translated_shader_source
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_ANGLE_translated_shader_source
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetTranslatedShaderSourceANGLE
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_ANGLE_translated_shader_source
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetTranslatedShaderSourceANGLE
specifier|inline
name|void
name|QOpenGLExtension_ANGLE_translated_shader_source
operator|::
name|glGetTranslatedShaderSourceANGLE
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_translated_shader_source
argument_list|)
block|;
name|d
operator|->
name|GetTranslatedShaderSourceANGLE
argument_list|(
name|shader
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
block|; }
name|class
name|QOpenGLExtension_APPLE_framebuffer_multisamplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisampleAPPLE
argument_list|)
operator|(
name|GLenum
operator|,
name|GLsizei
operator|,
name|GLenum
operator|,
name|GLsizei
operator|,
name|GLsizei
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ResolveMultisampleFramebufferAPPLE
argument_list|)
operator|(
name|void
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_APPLE_framebuffer_multisample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_APPLE_framebuffer_multisample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glRenderbufferStorageMultisampleAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glResolveMultisampleFramebufferAPPLE
argument_list|(
name|void
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_APPLE_framebuffer_multisample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glRenderbufferStorageMultisampleAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_framebuffer_multisample
operator|::
name|glRenderbufferStorageMultisampleAPPLE
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_framebuffer_multisample
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisampleAPPLE
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glResolveMultisampleFramebufferAPPLE
specifier|inline
name|void
name|QOpenGLExtension_APPLE_framebuffer_multisample
operator|::
name|glResolveMultisampleFramebufferAPPLE
argument_list|(
argument|void
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_framebuffer_multisample
argument_list|)
block|;
name|d
operator|->
name|ResolveMultisampleFramebufferAPPLE
argument_list|()
block|; }
name|class
name|QOpenGLExtension_EXT_debug_labelPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP LabelObjectEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|object
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|label
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetObjectLabelEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|object
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|label
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_debug_label
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_debug_label
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glLabelObjectEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint object
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|;
name|void
name|glGetObjectLabelEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint object
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_debug_label
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glLabelObjectEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_debug_label
operator|::
name|glLabelObjectEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint object
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_debug_label
argument_list|)
block|;
name|d
operator|->
name|LabelObjectEXT
argument_list|(
name|type
argument_list|,
name|object
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glGetObjectLabelEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_debug_label
operator|::
name|glGetObjectLabelEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint object
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_debug_label
argument_list|)
block|;
name|d
operator|->
name|GetObjectLabelEXT
argument_list|(
name|type
argument_list|,
name|object
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_debug_markerPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP InsertEventMarkerEXT
argument_list|)
operator|(
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|marker
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PushGroupMarkerEXT
argument_list|)
operator|(
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|marker
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP PopGroupMarkerEXT
argument_list|)
operator|(
name|void
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_debug_marker
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_debug_marker
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glInsertEventMarkerEXT
argument_list|(
argument|GLsizei length
argument_list|,
argument|const GLchar *marker
argument_list|)
block|;
name|void
name|glPushGroupMarkerEXT
argument_list|(
argument|GLsizei length
argument_list|,
argument|const GLchar *marker
argument_list|)
block|;
name|void
name|glPopGroupMarkerEXT
argument_list|(
name|void
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_debug_marker
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glInsertEventMarkerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_debug_marker
operator|::
name|glInsertEventMarkerEXT
argument_list|(
argument|GLsizei length
argument_list|,
argument|const GLchar *marker
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_debug_marker
argument_list|)
block|;
name|d
operator|->
name|InsertEventMarkerEXT
argument_list|(
name|length
argument_list|,
name|marker
argument_list|)
block|; }
DECL|function|glPushGroupMarkerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_debug_marker
operator|::
name|glPushGroupMarkerEXT
argument_list|(
argument|GLsizei length
argument_list|,
argument|const GLchar *marker
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_debug_marker
argument_list|)
block|;
name|d
operator|->
name|PushGroupMarkerEXT
argument_list|(
name|length
argument_list|,
name|marker
argument_list|)
block|; }
DECL|function|glPopGroupMarkerEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_debug_marker
operator|::
name|glPopGroupMarkerEXT
argument_list|(
argument|void
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_debug_marker
argument_list|)
block|;
name|d
operator|->
name|PopGroupMarkerEXT
argument_list|()
block|; }
name|class
name|QOpenGLExtension_EXT_discard_framebufferPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DiscardFramebufferEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|numAttachments
operator|,
specifier|const
name|GLenum
operator|*
name|attachments
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_discard_framebuffer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_discard_framebuffer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDiscardFramebufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_discard_framebuffer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDiscardFramebufferEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_discard_framebuffer
operator|::
name|glDiscardFramebufferEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_discard_framebuffer
argument_list|)
block|;
name|d
operator|->
name|DiscardFramebufferEXT
argument_list|(
name|target
argument_list|,
name|numAttachments
argument_list|,
name|attachments
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_multisampled_render_to_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisampleEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture2DMultisampleEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLsizei
name|samples
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_multisampled_render_to_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_multisampled_render_to_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glRenderbufferStorageMultisampleEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glFramebufferTexture2DMultisampleEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLsizei samples
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_multisampled_render_to_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glRenderbufferStorageMultisampleEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multisampled_render_to_texture
operator|::
name|glRenderbufferStorageMultisampleEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multisampled_render_to_texture
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisampleEXT
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glFramebufferTexture2DMultisampleEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multisampled_render_to_texture
operator|::
name|glFramebufferTexture2DMultisampleEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLsizei samples
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multisampled_render_to_texture
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture2DMultisampleEXT
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|samples
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_multi_draw_arraysPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawArraysEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
operator|*
name|first
operator|,
name|GLsizei
operator|*
name|count
operator|,
name|GLsizei
name|primcount
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP MultiDrawElementsEXT
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_multi_draw_arrays
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glMultiDrawArraysEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint *first
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|void
name|glMultiDrawElementsEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glMultiDrawArraysEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|glMultiDrawArraysEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint *first
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
block|;
name|d
operator|->
name|MultiDrawArraysEXT
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|primcount
argument_list|)
block|; }
DECL|function|glMultiDrawElementsEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|glMultiDrawElementsEXT
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* *indices
argument_list|,
argument|GLsizei primcount
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
block|;
name|d
operator|->
name|MultiDrawElementsEXT
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|primcount
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_occlusion_query_booleanPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenQueriesEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|ids
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteQueriesEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsQueryEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BeginQueryEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndQueryEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryivEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetQueryObjectuivEXT
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_occlusion_query_boolean
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGenQueriesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|void
name|glDeleteQueriesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|GLboolean
name|glIsQueryEXT
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glBeginQueryEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|void
name|glEndQueryEXT
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetQueryivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetQueryObjectuivEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGenQueriesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|glGenQueriesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|;
name|d
operator|->
name|GenQueriesEXT
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glDeleteQueriesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|glDeleteQueriesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|;
name|d
operator|->
name|DeleteQueriesEXT
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glIsQueryEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|glIsQueryEXT
argument_list|(
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|;
return|return
name|d
operator|->
name|IsQueryEXT
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBeginQueryEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|glBeginQueryEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|;
name|d
operator|->
name|BeginQueryEXT
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glEndQueryEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|glEndQueryEXT
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|;
name|d
operator|->
name|EndQueryEXT
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glGetQueryivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|glGetQueryivEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|;
name|d
operator|->
name|GetQueryivEXT
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjectuivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|glGetQueryObjectuivEXT
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
block|;
name|d
operator|->
name|GetQueryObjectuivEXT
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_robustnessPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|GLenum
argument_list|(
argument|QOPENGLF_APIENTRYP GetGraphicsResetStatusEXT
argument_list|)
operator|(
name|void
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReadnPixelsEXT
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|void
operator|*
name|data
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnUniformfvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|float
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetnUniformivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLint
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_robustness
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_robustness
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|GLenum
name|glGetGraphicsResetStatusEXT
argument_list|(
name|void
argument_list|)
block|;
name|void
name|glReadnPixelsEXT
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *data
argument_list|)
block|;
name|void
name|glGetnUniformfvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|float *params
argument_list|)
block|;
name|void
name|glGetnUniformivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_robustness
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetGraphicsResetStatusEXT
specifier|inline
name|GLenum
name|QOpenGLExtension_EXT_robustness
operator|::
name|glGetGraphicsResetStatusEXT
argument_list|(
argument|void
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_robustness
argument_list|)
block|;
return|return
name|d
operator|->
name|GetGraphicsResetStatusEXT
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glReadnPixelsEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_robustness
operator|::
name|glReadnPixelsEXT
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_robustness
argument_list|)
block|;
name|d
operator|->
name|ReadnPixelsEXT
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetnUniformfvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_robustness
operator|::
name|glGetnUniformfvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|float *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnUniformfvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnUniformivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_robustness
operator|::
name|glGetnUniformivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_robustness
argument_list|)
block|;
name|d
operator|->
name|GetnUniformivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_separate_shader_objectsPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP UseProgramStagesEXT
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLbitfield
name|stages
operator|,
name|GLuint
name|program
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ActiveShaderProgramEXT
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLuint
name|program
operator|)
block|;
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP CreateShaderProgramvEXT
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLchar
operator|*
operator|*
name|strings
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BindProgramPipelineEXT
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteProgramPipelinesEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|pipelines
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenProgramPipelinesEXT
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|pipelines
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsProgramPipelineEXT
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramParameteriEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramPipelineivEXT
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4iEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|,
name|GLint
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4fEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4ivEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform1fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform2fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform3fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniform4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix2fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix3fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ProgramUniformMatrix4fvEXT
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ValidateProgramPipelineEXT
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetProgramPipelineInfoLogEXT
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|infoLog
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_separate_shader_objects
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glUseProgramStagesEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLbitfield stages
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|void
name|glActiveShaderProgramEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|GLuint
name|glCreateShaderProgramvEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar **strings
argument_list|)
block|;
name|void
name|glBindProgramPipelineEXT
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|void
name|glDeleteProgramPipelinesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *pipelines
argument_list|)
block|;
name|void
name|glGenProgramPipelinesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|;
name|GLboolean
name|glIsProgramPipelineEXT
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|void
name|glProgramParameteriEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|void
name|glGetProgramPipelineivEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glProgramUniform1iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|)
block|;
name|void
name|glProgramUniform2iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glProgramUniform3iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glProgramUniform4iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glProgramUniform1fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|)
block|;
name|void
name|glProgramUniform2fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glProgramUniform3fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glProgramUniform4fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glProgramUniform1ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform2ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform3ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform1fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glValidateProgramPipelineEXT
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|void
name|glGetProgramPipelineInfoLogEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glUseProgramStagesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glUseProgramStagesEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLbitfield stages
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|UseProgramStagesEXT
argument_list|(
name|pipeline
argument_list|,
name|stages
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glActiveShaderProgramEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glActiveShaderProgramEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ActiveShaderProgramEXT
argument_list|(
name|pipeline
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glCreateShaderProgramvEXT
specifier|inline
name|GLuint
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glCreateShaderProgramvEXT
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar **strings
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|CreateShaderProgramvEXT
argument_list|(
name|type
argument_list|,
name|count
argument_list|,
name|strings
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindProgramPipelineEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glBindProgramPipelineEXT
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|BindProgramPipelineEXT
argument_list|(
name|pipeline
argument_list|)
block|; }
DECL|function|glDeleteProgramPipelinesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glDeleteProgramPipelinesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *pipelines
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|DeleteProgramPipelinesEXT
argument_list|(
name|n
argument_list|,
name|pipelines
argument_list|)
block|; }
DECL|function|glGenProgramPipelinesEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glGenProgramPipelinesEXT
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GenProgramPipelinesEXT
argument_list|(
name|n
argument_list|,
name|pipelines
argument_list|)
block|; }
DECL|function|glIsProgramPipelineEXT
specifier|inline
name|GLboolean
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glIsProgramPipelineEXT
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
return|return
name|d
operator|->
name|IsProgramPipelineEXT
argument_list|(
name|pipeline
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glProgramParameteriEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramParameteriEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramParameteriEXT
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetProgramPipelineivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glGetProgramPipelineivEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetProgramPipelineivEXT
argument_list|(
name|pipeline
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glProgramUniform1iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform1iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glProgramUniform2iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform2iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glProgramUniform3iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform3iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glProgramUniform4iEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform4iEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4iEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramUniform1fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform1fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glProgramUniform2fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform2fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glProgramUniform3fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform3fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glProgramUniform4fEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform4fEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4fEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glProgramUniform1ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform1ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform2ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform3ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4ivEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform4ivEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4ivEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform1fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform1fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform2fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform3fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniform4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniform4fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniformMatrix2fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix2fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniformMatrix3fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix3fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4fvEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glProgramUniformMatrix4fvEXT
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ProgramUniformMatrix4fvEXT
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glValidateProgramPipelineEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glValidateProgramPipelineEXT
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|ValidateProgramPipelineEXT
argument_list|(
name|pipeline
argument_list|)
block|; }
DECL|function|glGetProgramPipelineInfoLogEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|glGetProgramPipelineInfoLogEXT
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
block|;
name|d
operator|->
name|GetProgramPipelineInfoLogEXT
argument_list|(
name|pipeline
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
name|class
name|QOpenGLExtension_EXT_texture_storagePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage1DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage2DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TexStorage3DEXT
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage1DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage2DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP TextureStorage3DEXT
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_EXT_texture_storage
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_EXT_texture_storage
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glTexStorage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glTexStorage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTexStorage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|void
name|glTextureStorage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glTextureStorage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTextureStorage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_EXT_texture_storage
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glTexStorage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|glTexStorage1DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TexStorage1DEXT
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glTexStorage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|glTexStorage2DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TexStorage2DEXT
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTexStorage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|glTexStorage3DEXT
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TexStorage3DEXT
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
DECL|function|glTextureStorage1DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|glTextureStorage1DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TextureStorage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glTextureStorage2DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|glTextureStorage2DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TextureStorage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTextureStorage3DEXT
specifier|inline
name|void
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|glTextureStorage3DEXT
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_storage
argument_list|)
block|;
name|d
operator|->
name|TextureStorage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
name|class
name|QOpenGLExtension_IMG_multisampled_render_to_texturePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisampleIMG
argument_list|)
operator|(
name|GLenum
operator|,
name|GLsizei
operator|,
name|GLenum
operator|,
name|GLsizei
operator|,
name|GLsizei
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FramebufferTexture2DMultisampleIMG
argument_list|)
operator|(
name|GLenum
operator|,
name|GLenum
operator|,
name|GLenum
operator|,
name|GLuint
operator|,
name|GLint
operator|,
name|GLsizei
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_IMG_multisampled_render_to_texture
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_IMG_multisampled_render_to_texture
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glRenderbufferStorageMultisampleIMG
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glFramebufferTexture2DMultisampleIMG
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLsizei samples
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_IMG_multisampled_render_to_texture
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glRenderbufferStorageMultisampleIMG
specifier|inline
name|void
name|QOpenGLExtension_IMG_multisampled_render_to_texture
operator|::
name|glRenderbufferStorageMultisampleIMG
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IMG_multisampled_render_to_texture
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisampleIMG
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glFramebufferTexture2DMultisampleIMG
specifier|inline
name|void
name|QOpenGLExtension_IMG_multisampled_render_to_texture
operator|::
name|glFramebufferTexture2DMultisampleIMG
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLsizei samples
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_IMG_multisampled_render_to_texture
argument_list|)
block|;
name|d
operator|->
name|FramebufferTexture2DMultisampleIMG
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|samples
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_coverage_samplePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CoverageMaskNV
argument_list|)
operator|(
name|GLboolean
name|mask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP CoverageOperationNV
argument_list|)
operator|(
name|GLenum
name|operation
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_coverage_sample
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_coverage_sample
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glCoverageMaskNV
argument_list|(
argument|GLboolean mask
argument_list|)
block|;
name|void
name|glCoverageOperationNV
argument_list|(
argument|GLenum operation
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_coverage_sample
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glCoverageMaskNV
specifier|inline
name|void
name|QOpenGLExtension_NV_coverage_sample
operator|::
name|glCoverageMaskNV
argument_list|(
argument|GLboolean mask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_coverage_sample
argument_list|)
block|;
name|d
operator|->
name|CoverageMaskNV
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glCoverageOperationNV
specifier|inline
name|void
name|QOpenGLExtension_NV_coverage_sample
operator|::
name|glCoverageOperationNV
argument_list|(
argument|GLenum operation
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_coverage_sample
argument_list|)
block|;
name|d
operator|->
name|CoverageOperationNV
argument_list|(
name|operation
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_draw_buffersPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DrawBuffersNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLenum
operator|*
name|bufs
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_draw_buffers
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_draw_buffers
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDrawBuffersNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_draw_buffers
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDrawBuffersNV
specifier|inline
name|void
name|QOpenGLExtension_NV_draw_buffers
operator|::
name|glDrawBuffersNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_draw_buffers
argument_list|)
block|;
name|d
operator|->
name|DrawBuffersNV
argument_list|(
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_fencePrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DeleteFencesNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|fences
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GenFencesNV
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|fences
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP IsFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP TestFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetFenceivNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP FinishFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP SetFenceNV
argument_list|)
operator|(
name|GLuint
name|fence
operator|,
name|GLenum
name|condition
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_fence
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_fence
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glDeleteFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *fences
argument_list|)
block|;
name|void
name|glGenFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *fences
argument_list|)
block|;
name|GLboolean
name|glIsFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|GLboolean
name|glTestFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|void
name|glGetFenceivNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFinishFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|;
name|void
name|glSetFenceNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum condition
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_fence
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glDeleteFencesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glDeleteFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *fences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|DeleteFencesNV
argument_list|(
name|n
argument_list|,
name|fences
argument_list|)
block|; }
DECL|function|glGenFencesNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glGenFencesNV
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *fences
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|GenFencesNV
argument_list|(
name|n
argument_list|,
name|fences
argument_list|)
block|; }
DECL|function|glIsFenceNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_fence
operator|::
name|glIsFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
return|return
name|d
operator|->
name|IsFenceNV
argument_list|(
name|fence
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glTestFenceNV
specifier|inline
name|GLboolean
name|QOpenGLExtension_NV_fence
operator|::
name|glTestFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
return|return
name|d
operator|->
name|TestFenceNV
argument_list|(
name|fence
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetFenceivNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glGetFenceivNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|GetFenceivNV
argument_list|(
name|fence
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFinishFenceNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glFinishFenceNV
argument_list|(
argument|GLuint fence
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|FinishFenceNV
argument_list|(
name|fence
argument_list|)
block|; }
DECL|function|glSetFenceNV
specifier|inline
name|void
name|QOpenGLExtension_NV_fence
operator|::
name|glSetFenceNV
argument_list|(
argument|GLuint fence
argument_list|,
argument|GLenum condition
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
block|;
name|d
operator|->
name|SetFenceNV
argument_list|(
name|fence
argument_list|,
name|condition
argument_list|)
block|; }
name|class
name|QOpenGLExtension_NV_read_bufferPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ReadBufferNV
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_NV_read_buffer
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_NV_read_buffer
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glReadBufferNV
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_NV_read_buffer
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glReadBufferNV
specifier|inline
name|void
name|QOpenGLExtension_NV_read_buffer
operator|::
name|glReadBufferNV
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_read_buffer
argument_list|)
block|;
name|d
operator|->
name|ReadBufferNV
argument_list|(
name|mode
argument_list|)
block|; }
name|class
name|QOpenGLExtension_QCOM_alpha_testPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP AlphaFuncQCOM
argument_list|)
operator|(
name|GLenum
name|func
operator|,
name|GLclampf
name|ref
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_QCOM_alpha_test
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_QCOM_alpha_test
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glAlphaFuncQCOM
argument_list|(
argument|GLenum func
argument_list|,
argument|GLclampf ref
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_QCOM_alpha_test
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glAlphaFuncQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_alpha_test
operator|::
name|glAlphaFuncQCOM
argument_list|(
argument|GLenum func
argument_list|,
argument|GLclampf ref
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_alpha_test
argument_list|)
block|;
name|d
operator|->
name|AlphaFuncQCOM
argument_list|(
name|func
argument_list|,
name|ref
argument_list|)
block|; }
name|class
name|QOpenGLExtension_QCOM_driver_controlPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetDriverControlsQCOM
argument_list|)
operator|(
name|GLint
operator|*
name|num
operator|,
name|GLsizei
name|size
operator|,
name|GLuint
operator|*
name|driverControls
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetDriverControlStringQCOM
argument_list|)
operator|(
name|GLuint
name|driverControl
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|driverControlString
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EnableDriverControlQCOM
argument_list|)
operator|(
name|GLuint
name|driverControl
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP DisableDriverControlQCOM
argument_list|)
operator|(
name|GLuint
name|driverControl
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_QCOM_driver_control
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_QCOM_driver_control
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glGetDriverControlsQCOM
argument_list|(
argument|GLint *num
argument_list|,
argument|GLsizei size
argument_list|,
argument|GLuint *driverControls
argument_list|)
block|;
name|void
name|glGetDriverControlStringQCOM
argument_list|(
argument|GLuint driverControl
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *driverControlString
argument_list|)
block|;
name|void
name|glEnableDriverControlQCOM
argument_list|(
argument|GLuint driverControl
argument_list|)
block|;
name|void
name|glDisableDriverControlQCOM
argument_list|(
argument|GLuint driverControl
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_QCOM_driver_control
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glGetDriverControlsQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_driver_control
operator|::
name|glGetDriverControlsQCOM
argument_list|(
argument|GLint *num
argument_list|,
argument|GLsizei size
argument_list|,
argument|GLuint *driverControls
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_driver_control
argument_list|)
block|;
name|d
operator|->
name|GetDriverControlsQCOM
argument_list|(
name|num
argument_list|,
name|size
argument_list|,
name|driverControls
argument_list|)
block|; }
DECL|function|glGetDriverControlStringQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_driver_control
operator|::
name|glGetDriverControlStringQCOM
argument_list|(
argument|GLuint driverControl
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *driverControlString
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_driver_control
argument_list|)
block|;
name|d
operator|->
name|GetDriverControlStringQCOM
argument_list|(
name|driverControl
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|driverControlString
argument_list|)
block|; }
DECL|function|glEnableDriverControlQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_driver_control
operator|::
name|glEnableDriverControlQCOM
argument_list|(
argument|GLuint driverControl
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_driver_control
argument_list|)
block|;
name|d
operator|->
name|EnableDriverControlQCOM
argument_list|(
name|driverControl
argument_list|)
block|; }
DECL|function|glDisableDriverControlQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_driver_control
operator|::
name|glDisableDriverControlQCOM
argument_list|(
argument|GLuint driverControl
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_driver_control
argument_list|)
block|;
name|d
operator|->
name|DisableDriverControlQCOM
argument_list|(
name|driverControl
argument_list|)
block|; }
name|class
name|QOpenGLExtension_QCOM_extended_getPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetTexturesQCOM
argument_list|)
operator|(
name|GLuint
operator|*
name|textures
operator|,
name|GLint
name|maxTextures
operator|,
name|GLint
operator|*
name|numTextures
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetBuffersQCOM
argument_list|)
operator|(
name|GLuint
operator|*
name|buffers
operator|,
name|GLint
name|maxBuffers
operator|,
name|GLint
operator|*
name|numBuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetRenderbuffersQCOM
argument_list|)
operator|(
name|GLuint
operator|*
name|renderbuffers
operator|,
name|GLint
name|maxRenderbuffers
operator|,
name|GLint
operator|*
name|numRenderbuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetFramebuffersQCOM
argument_list|)
operator|(
name|GLuint
operator|*
name|framebuffers
operator|,
name|GLint
name|maxFramebuffers
operator|,
name|GLint
operator|*
name|numFramebuffers
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetTexLevelParameterivQCOM
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|face
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtTexObjectStateOverrideiQCOM
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetTexSubImageQCOM
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|texels
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetBufferPointervQCOM
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_QCOM_extended_get
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_QCOM_extended_get
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glExtGetTexturesQCOM
argument_list|(
argument|GLuint *textures
argument_list|,
argument|GLint maxTextures
argument_list|,
argument|GLint *numTextures
argument_list|)
block|;
name|void
name|glExtGetBuffersQCOM
argument_list|(
argument|GLuint *buffers
argument_list|,
argument|GLint maxBuffers
argument_list|,
argument|GLint *numBuffers
argument_list|)
block|;
name|void
name|glExtGetRenderbuffersQCOM
argument_list|(
argument|GLuint *renderbuffers
argument_list|,
argument|GLint maxRenderbuffers
argument_list|,
argument|GLint *numRenderbuffers
argument_list|)
block|;
name|void
name|glExtGetFramebuffersQCOM
argument_list|(
argument|GLuint *framebuffers
argument_list|,
argument|GLint maxFramebuffers
argument_list|,
argument|GLint *numFramebuffers
argument_list|)
block|;
name|void
name|glExtGetTexLevelParameterivQCOM
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum face
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glExtTexObjectStateOverrideiQCOM
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glExtGetTexSubImageQCOM
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *texels
argument_list|)
block|;
name|void
name|glExtGetBufferPointervQCOM
argument_list|(
argument|GLenum target
argument_list|,
argument|GLvoid **params
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glExtGetTexturesQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtGetTexturesQCOM
argument_list|(
argument|GLuint *textures
argument_list|,
argument|GLint maxTextures
argument_list|,
argument|GLint *numTextures
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtGetTexturesQCOM
argument_list|(
name|textures
argument_list|,
name|maxTextures
argument_list|,
name|numTextures
argument_list|)
block|; }
DECL|function|glExtGetBuffersQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtGetBuffersQCOM
argument_list|(
argument|GLuint *buffers
argument_list|,
argument|GLint maxBuffers
argument_list|,
argument|GLint *numBuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtGetBuffersQCOM
argument_list|(
name|buffers
argument_list|,
name|maxBuffers
argument_list|,
name|numBuffers
argument_list|)
block|; }
DECL|function|glExtGetRenderbuffersQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtGetRenderbuffersQCOM
argument_list|(
argument|GLuint *renderbuffers
argument_list|,
argument|GLint maxRenderbuffers
argument_list|,
argument|GLint *numRenderbuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtGetRenderbuffersQCOM
argument_list|(
name|renderbuffers
argument_list|,
name|maxRenderbuffers
argument_list|,
name|numRenderbuffers
argument_list|)
block|; }
DECL|function|glExtGetFramebuffersQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtGetFramebuffersQCOM
argument_list|(
argument|GLuint *framebuffers
argument_list|,
argument|GLint maxFramebuffers
argument_list|,
argument|GLint *numFramebuffers
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtGetFramebuffersQCOM
argument_list|(
name|framebuffers
argument_list|,
name|maxFramebuffers
argument_list|,
name|numFramebuffers
argument_list|)
block|; }
DECL|function|glExtGetTexLevelParameterivQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtGetTexLevelParameterivQCOM
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum face
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtGetTexLevelParameterivQCOM
argument_list|(
name|texture
argument_list|,
name|face
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glExtTexObjectStateOverrideiQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtTexObjectStateOverrideiQCOM
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtTexObjectStateOverrideiQCOM
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glExtGetTexSubImageQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtGetTexSubImageQCOM
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *texels
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtGetTexSubImageQCOM
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|texels
argument_list|)
block|; }
DECL|function|glExtGetBufferPointervQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|glExtGetBufferPointervQCOM
argument_list|(
argument|GLenum target
argument_list|,
argument|GLvoid **params
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
block|;
name|d
operator|->
name|ExtGetBufferPointervQCOM
argument_list|(
name|target
argument_list|,
name|params
argument_list|)
block|; }
name|class
name|QOpenGLExtension_QCOM_extended_get2Private
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetShadersQCOM
argument_list|)
operator|(
name|GLuint
operator|*
name|shaders
operator|,
name|GLint
name|maxShaders
operator|,
name|GLint
operator|*
name|numShaders
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetProgramsQCOM
argument_list|)
operator|(
name|GLuint
operator|*
name|programs
operator|,
name|GLint
name|maxPrograms
operator|,
name|GLint
operator|*
name|numPrograms
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP ExtIsProgramBinaryQCOM
argument_list|)
operator|(
name|GLuint
name|program
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP ExtGetProgramBinarySourceQCOM
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
name|GLchar
operator|*
name|source
operator|,
name|GLint
operator|*
name|length
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_QCOM_extended_get2
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_QCOM_extended_get2
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glExtGetShadersQCOM
argument_list|(
argument|GLuint *shaders
argument_list|,
argument|GLint maxShaders
argument_list|,
argument|GLint *numShaders
argument_list|)
block|;
name|void
name|glExtGetProgramsQCOM
argument_list|(
argument|GLuint *programs
argument_list|,
argument|GLint maxPrograms
argument_list|,
argument|GLint *numPrograms
argument_list|)
block|;
name|GLboolean
name|glExtIsProgramBinaryQCOM
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glExtGetProgramBinarySourceQCOM
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLchar *source
argument_list|,
argument|GLint *length
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_QCOM_extended_get2
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glExtGetShadersQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get2
operator|::
name|glExtGetShadersQCOM
argument_list|(
argument|GLuint *shaders
argument_list|,
argument|GLint maxShaders
argument_list|,
argument|GLint *numShaders
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get2
argument_list|)
block|;
name|d
operator|->
name|ExtGetShadersQCOM
argument_list|(
name|shaders
argument_list|,
name|maxShaders
argument_list|,
name|numShaders
argument_list|)
block|; }
DECL|function|glExtGetProgramsQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get2
operator|::
name|glExtGetProgramsQCOM
argument_list|(
argument|GLuint *programs
argument_list|,
argument|GLint maxPrograms
argument_list|,
argument|GLint *numPrograms
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get2
argument_list|)
block|;
name|d
operator|->
name|ExtGetProgramsQCOM
argument_list|(
name|programs
argument_list|,
name|maxPrograms
argument_list|,
name|numPrograms
argument_list|)
block|; }
DECL|function|glExtIsProgramBinaryQCOM
specifier|inline
name|GLboolean
name|QOpenGLExtension_QCOM_extended_get2
operator|::
name|glExtIsProgramBinaryQCOM
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get2
argument_list|)
block|;
return|return
name|d
operator|->
name|ExtIsProgramBinaryQCOM
argument_list|(
name|program
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glExtGetProgramBinarySourceQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_extended_get2
operator|::
name|glExtGetProgramBinarySourceQCOM
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLchar *source
argument_list|,
argument|GLint *length
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get2
argument_list|)
block|;
name|d
operator|->
name|ExtGetProgramBinarySourceQCOM
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|source
argument_list|,
name|length
argument_list|)
block|; }
name|class
name|QOpenGLExtension_QCOM_tiled_renderingPrivate
operator|:
name|public
name|QAbstractOpenGLExtensionPrivate
block|{
name|public
operator|:
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP StartTilingQCOM
argument_list|)
operator|(
name|GLuint
name|x
operator|,
name|GLuint
name|y
operator|,
name|GLuint
name|width
operator|,
name|GLuint
name|height
operator|,
name|GLbitfield
name|preserveMask
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP EndTilingQCOM
argument_list|)
operator|(
name|GLbitfield
name|preserveMask
operator|)
block|; }
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|class
name|QOpenGLExtension_QCOM_tiled_rendering
range|:
name|public
name|QAbstractOpenGLExtension
block|{
name|public
operator|:
name|QOpenGLExtension_QCOM_tiled_rendering
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_FINAL
block|;
name|void
name|glStartTilingQCOM
argument_list|(
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint width
argument_list|,
argument|GLuint height
argument_list|,
argument|GLbitfield preserveMask
argument_list|)
block|;
name|void
name|glEndTilingQCOM
argument_list|(
argument|GLbitfield preserveMask
argument_list|)
block|;
name|protected
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtension_QCOM_tiled_rendering
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_expr_stmt
DECL|function|glStartTilingQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_tiled_rendering
operator|::
name|glStartTilingQCOM
argument_list|(
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint width
argument_list|,
argument|GLuint height
argument_list|,
argument|GLbitfield preserveMask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_tiled_rendering
argument_list|)
block|;
name|d
operator|->
name|StartTilingQCOM
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|preserveMask
argument_list|)
block|; }
DECL|function|glEndTilingQCOM
specifier|inline
name|void
name|QOpenGLExtension_QCOM_tiled_rendering
operator|::
name|glEndTilingQCOM
argument_list|(
argument|GLbitfield preserveMask
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_tiled_rendering
argument_list|)
block|;
name|d
operator|->
name|EndTilingQCOM
argument_list|(
name|preserveMask
argument_list|)
block|; }
endif|#
directive|endif
name|QT_END_NAMESPACE
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_OPENGL
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
