begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ** ** This file was generated by glgen version 0.1 ** Command line was: glgen ** ** glgen is Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** ** This is an auto-generated file. ** Do not edit! All changes made to it will be lost. ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qopenglextensions.h"
end_include
begin_include
include|#
directive|include
file|<QtGui/qopenglcontext.h>
end_include
begin_expr_stmt
name|QT_BEGIN_NAMESPACE
DECL|function|~QAbstractOpenGLExtension
name|QAbstractOpenGLExtension
operator|::
name|~
name|QAbstractOpenGLExtension
operator|(
operator|)
block|{
if|if
condition|(
name|d_ptr
condition|)
operator|delete
name|d_ptr
expr_stmt|;
block|}
end_expr_stmt
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
name|Q_D
argument_list|(
name|QAbstractOpenGLExtension
argument_list|)
expr_stmt|;
name|d
operator|->
name|initialized
operator|=
literal|true
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|isInitialized
name|bool
name|QAbstractOpenGLExtension
operator|::
name|isInitialized
parameter_list|()
specifier|const
block|{
name|Q_D
argument_list|(
specifier|const
name|QAbstractOpenGLExtension
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|initialized
return|;
block|}
end_function
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_constructor
DECL|function|QOpenGLExtension_3DFX_tbuffer
name|QOpenGLExtension_3DFX_tbuffer
operator|::
name|QOpenGLExtension_3DFX_tbuffer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_3DFX_tbufferPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_3DFX_tbuffer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_3DFX_tbuffer
argument_list|)
expr_stmt|;
name|d
operator|->
name|TbufferMask3DFX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTbufferMask3DFX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_debug_output
name|QOpenGLExtension_AMD_debug_output
operator|::
name|QOpenGLExtension_AMD_debug_output
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_debug_outputPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_debug_output
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_debug_output
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetDebugMessageLogAMD
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLuint
operator|*
argument_list|,
name|GLuint
operator|*
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDebugMessageLogAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageCallbackAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLDEBUGPROCAMD
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageCallbackAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageInsertAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageInsertAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageEnableAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageEnableAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_draw_buffers_blend
name|QOpenGLExtension_AMD_draw_buffers_blend
operator|::
name|QOpenGLExtension_AMD_draw_buffers_blend
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_draw_buffers_blendPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_draw_buffers_blend
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_draw_buffers_blend
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlendEquationSeparateIndexedAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendEquationSeparateIndexedAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BlendEquationIndexedAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendEquationIndexedAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BlendFuncSeparateIndexedAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendFuncSeparateIndexedAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BlendFuncIndexedAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendFuncIndexedAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_multi_draw_indirect
name|QOpenGLExtension_AMD_multi_draw_indirect
operator|::
name|QOpenGLExtension_AMD_multi_draw_indirect
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_multi_draw_indirectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_multi_draw_indirect
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_multi_draw_indirect
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiDrawElementsIndirectAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawElementsIndirectAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiDrawArraysIndirectAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawArraysIndirectAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_name_gen_delete
name|QOpenGLExtension_AMD_name_gen_delete
operator|::
name|QOpenGLExtension_AMD_name_gen_delete
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_name_gen_deletePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_name_gen_delete
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_name_gen_delete
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsNameAMD
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsNameAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteNamesAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteNamesAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenNamesAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenNamesAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_performance_monitor
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|QOpenGLExtension_AMD_performance_monitor
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_performance_monitorPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCounterDataAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCounterDataAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndPerfMonitorAMD
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndPerfMonitorAMD"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginPerfMonitorAMD
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginPerfMonitorAMD"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SelectPerfMonitorCountersAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLboolean
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSelectPerfMonitorCountersAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeletePerfMonitorsAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeletePerfMonitorsAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenPerfMonitorsAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenPerfMonitorsAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCounterInfoAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCounterInfoAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCounterStringAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCounterStringAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorGroupStringAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorGroupStringAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCountersAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCountersAMD"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorGroupsAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorGroupsAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_sample_positions
name|QOpenGLExtension_AMD_sample_positions
operator|::
name|QOpenGLExtension_AMD_sample_positions
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_sample_positionsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_sample_positions
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_sample_positions
argument_list|)
expr_stmt|;
name|d
operator|->
name|SetMultisamplefvAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSetMultisamplefvAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_sparse_texture
name|QOpenGLExtension_AMD_sparse_texture
operator|::
name|QOpenGLExtension_AMD_sparse_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_sparse_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_sparse_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_sparse_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexStorageSparseAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorageSparseAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_stencil_operation_extended
name|QOpenGLExtension_AMD_stencil_operation_extended
operator|::
name|QOpenGLExtension_AMD_stencil_operation_extended
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_stencil_operation_extendedPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_stencil_operation_extended
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_stencil_operation_extended
argument_list|)
expr_stmt|;
name|d
operator|->
name|StencilOpValueAMD
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilOpValueAMD"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_vertex_shader_tesselator
name|QOpenGLExtension_AMD_vertex_shader_tesselator
operator|::
name|QOpenGLExtension_AMD_vertex_shader_tesselator
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_vertex_shader_tesselatorPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_vertex_shader_tesselator
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_vertex_shader_tesselator
argument_list|)
expr_stmt|;
name|d
operator|->
name|TessellationModeAMD
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTessellationModeAMD"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TessellationFactorAMD
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTessellationFactorAMD"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_element_array
name|QOpenGLExtension_APPLE_element_array
operator|::
name|QOpenGLExtension_APPLE_element_array
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_element_arrayPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_element_array
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_element_array
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiDrawRangeElementArrayAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
specifier|const
name|GLsizei
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawRangeElementArrayAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiDrawElementArrayAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
specifier|const
name|GLsizei
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawElementArrayAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawRangeElementArrayAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawRangeElementArrayAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawElementArrayAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementArrayAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ElementPointerAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glElementPointerAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_fence
name|QOpenGLExtension_APPLE_fence
operator|::
name|QOpenGLExtension_APPLE_fence
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_fencePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_fence
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_fence
argument_list|)
expr_stmt|;
name|d
operator|->
name|FinishObjectAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFinishObjectAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TestObjectAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTestObjectAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FinishFenceAPPLE
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFinishFenceAPPLE"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TestFenceAPPLE
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTestFenceAPPLE"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsFenceAPPLE
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsFenceAPPLE"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SetFenceAPPLE
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSetFenceAPPLE"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteFencesAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteFencesAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenFencesAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenFencesAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_flush_buffer_range
name|QOpenGLExtension_APPLE_flush_buffer_range
operator|::
name|QOpenGLExtension_APPLE_flush_buffer_range
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_flush_buffer_rangePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_flush_buffer_range
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_flush_buffer_range
argument_list|)
expr_stmt|;
name|d
operator|->
name|FlushMappedBufferRangeAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFlushMappedBufferRangeAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BufferParameteriAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBufferParameteriAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_object_purgeable
name|QOpenGLExtension_APPLE_object_purgeable
operator|::
name|QOpenGLExtension_APPLE_object_purgeable
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_object_purgeablePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_object_purgeable
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_object_purgeable
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetObjectParameterivAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectParameterivAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ObjectUnpurgeableAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|GLenum
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glObjectUnpurgeableAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ObjectPurgeableAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|GLenum
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glObjectPurgeableAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_texture_range
name|QOpenGLExtension_APPLE_texture_range
operator|::
name|QOpenGLExtension_APPLE_texture_range
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_texture_rangePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_texture_range
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_texture_range
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetTexParameterPointervAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTexParameterPointervAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureRangeAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureRangeAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_vertex_array_object
name|QOpenGLExtension_APPLE_vertex_array_object
operator|::
name|QOpenGLExtension_APPLE_vertex_array_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_vertex_array_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_vertex_array_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsVertexArrayAPPLE
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsVertexArrayAPPLE"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenVertexArraysAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenVertexArraysAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteVertexArraysAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteVertexArraysAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindVertexArrayAPPLE
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindVertexArrayAPPLE"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_vertex_array_range
name|QOpenGLExtension_APPLE_vertex_array_range
operator|::
name|QOpenGLExtension_APPLE_vertex_array_range
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_vertex_array_rangePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_vertex_array_range
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_array_range
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexArrayParameteriAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayParameteriAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FlushVertexArrayRangeAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFlushVertexArrayRangeAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexArrayRangeAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayRangeAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_vertex_program_evaluators
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|QOpenGLExtension_APPLE_vertex_program_evaluators
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_vertex_program_evaluatorsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_vertex_program_evaluators
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_vertex_program_evaluators
argument_list|)
expr_stmt|;
name|d
operator|->
name|MapVertexAttrib2fAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapVertexAttrib2fAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapVertexAttrib2dAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapVertexAttrib2dAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapVertexAttrib1fAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapVertexAttrib1fAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapVertexAttrib1dAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapVertexAttrib1dAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsVertexAttribEnabledAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsVertexAttribEnabledAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DisableVertexAttribAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDisableVertexAttribAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EnableVertexAttribAPPLE
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEnableVertexAttribAPPLE"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_ES2_compatibility
name|QOpenGLExtension_ARB_ES2_compatibility
operator|::
name|QOpenGLExtension_ARB_ES2_compatibility
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_ES2_compatibilityPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_ES2_compatibility
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_ES2_compatibility
argument_list|)
expr_stmt|;
name|d
operator|->
name|ClearDepthf
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearDepthf"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DepthRangef
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDepthRangef"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetShaderPrecisionFormat
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetShaderPrecisionFormat"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ShaderBinary
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glShaderBinary"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReleaseShaderCompiler
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReleaseShaderCompiler"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_base_instance
name|QOpenGLExtension_ARB_base_instance
operator|::
name|QOpenGLExtension_ARB_base_instance
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_base_instancePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_base_instance
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_base_instance
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawElementsInstancedBaseVertexBaseInstance
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsInstancedBaseVertexBaseInstance"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawElementsInstancedBaseInstance
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsInstancedBaseInstance"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawArraysInstancedBaseInstance
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawArraysInstancedBaseInstance"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_blend_func_extended
name|QOpenGLExtension_ARB_blend_func_extended
operator|::
name|QOpenGLExtension_ARB_blend_func_extended
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_blend_func_extendedPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_blend_func_extended
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_blend_func_extended
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFragDataIndex
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFragDataIndex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindFragDataLocationIndexed
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindFragDataLocationIndexed"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_cl_event
name|QOpenGLExtension_ARB_cl_event
operator|::
name|QOpenGLExtension_ARB_cl_event
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_cl_eventPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_cl_event
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_cl_event
argument_list|)
expr_stmt|;
name|d
operator|->
name|CreateSyncFromCLeventARB
operator|=
expr|reinterpret_cast
operator|<
name|GLsync
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
expr|struct
name|_cl_context
operator|*
argument_list|,
expr|struct
name|_cl_event
operator|*
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCreateSyncFromCLeventARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_clear_buffer_object
name|QOpenGLExtension_ARB_clear_buffer_object
operator|::
name|QOpenGLExtension_ARB_clear_buffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_clear_buffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_clear_buffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_clear_buffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|ClearBufferSubData
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearBufferSubData"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClearBufferData
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearBufferData"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_color_buffer_float
name|QOpenGLExtension_ARB_color_buffer_float
operator|::
name|QOpenGLExtension_ARB_color_buffer_float
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_color_buffer_floatPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_color_buffer_float
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_color_buffer_float
argument_list|)
expr_stmt|;
name|d
operator|->
name|ClampColorARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClampColorARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_compute_shader
name|QOpenGLExtension_ARB_compute_shader
operator|::
name|QOpenGLExtension_ARB_compute_shader
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_compute_shaderPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_compute_shader
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_compute_shader
argument_list|)
expr_stmt|;
name|d
operator|->
name|DispatchComputeIndirect
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLintptr
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDispatchComputeIndirect"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DispatchCompute
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDispatchCompute"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_copy_buffer
name|QOpenGLExtension_ARB_copy_buffer
operator|::
name|QOpenGLExtension_ARB_copy_buffer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_copy_bufferPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_copy_buffer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_copy_buffer
argument_list|)
expr_stmt|;
name|d
operator|->
name|CopyBufferSubData
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLintptr
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyBufferSubData"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_copy_image
name|QOpenGLExtension_ARB_copy_image
operator|::
name|QOpenGLExtension_ARB_copy_image
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_copy_imagePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_copy_image
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_copy_image
argument_list|)
expr_stmt|;
name|d
operator|->
name|CopyImageSubData
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyImageSubData"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_debug_output
name|QOpenGLExtension_ARB_debug_output
operator|::
name|QOpenGLExtension_ARB_debug_output
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_debug_outputPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_debug_output
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_debug_output
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetDebugMessageLogARB
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLuint
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDebugMessageLogARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageCallbackARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLDEBUGPROCARB
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageCallbackARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageInsertARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageInsertARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageControlARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageControlARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_draw_buffers
name|QOpenGLExtension_ARB_draw_buffers
operator|::
name|QOpenGLExtension_ARB_draw_buffers
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_draw_buffersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_draw_buffers
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_buffers
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawBuffersARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLenum
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawBuffersARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_draw_buffers_blend
name|QOpenGLExtension_ARB_draw_buffers_blend
operator|::
name|QOpenGLExtension_ARB_draw_buffers_blend
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_draw_buffers_blendPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_draw_buffers_blend
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_buffers_blend
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlendFuncSeparateiARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendFuncSeparateiARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BlendFunciARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendFunciARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BlendEquationSeparateiARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendEquationSeparateiARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BlendEquationiARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendEquationiARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_draw_elements_base_vertex
name|QOpenGLExtension_ARB_draw_elements_base_vertex
operator|::
name|QOpenGLExtension_ARB_draw_elements_base_vertex
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_draw_elements_base_vertexPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_draw_elements_base_vertex
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_elements_base_vertex
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiDrawElementsBaseVertex
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLsizei
operator|*
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
specifier|const
operator|*
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawElementsBaseVertex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawElementsInstancedBaseVertex
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsInstancedBaseVertex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawRangeElementsBaseVertex
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawRangeElementsBaseVertex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawElementsBaseVertex
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsBaseVertex"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_draw_indirect
name|QOpenGLExtension_ARB_draw_indirect
operator|::
name|QOpenGLExtension_ARB_draw_indirect
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_draw_indirectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_draw_indirect
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_indirect
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawElementsIndirect
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsIndirect"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawArraysIndirect
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawArraysIndirect"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_draw_instanced
name|QOpenGLExtension_ARB_draw_instanced
operator|::
name|QOpenGLExtension_ARB_draw_instanced
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_draw_instancedPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_draw_instanced
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_draw_instanced
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawElementsInstancedARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsInstancedARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawArraysInstancedARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawArraysInstancedARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_framebuffer_no_attachments
name|QOpenGLExtension_ARB_framebuffer_no_attachments
operator|::
name|QOpenGLExtension_ARB_framebuffer_no_attachments
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_framebuffer_no_attachmentsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_framebuffer_no_attachments
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_no_attachments
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFramebufferParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFramebufferParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferParameteri
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferParameteri"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_framebuffer_object
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|QOpenGLExtension_ARB_framebuffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_framebuffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_framebuffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_framebuffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|FramebufferTextureLayer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTextureLayer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageMultisample"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BlitFramebuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLbitfield
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlitFramebuffer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenerateMipmap
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenerateMipmap"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFramebufferAttachmentParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFramebufferAttachmentParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferRenderbuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferRenderbuffer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture3D"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture2D"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture1D"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CheckFramebufferStatus
operator|=
cast|reinterpret_cast
argument_list|<
name|GLenum
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCheckFramebufferStatus"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenFramebuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenFramebuffers"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteFramebuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteFramebuffers"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindFramebuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindFramebuffer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsFramebuffer
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsFramebuffer"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetRenderbufferParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetRenderbufferParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorage
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorage"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenRenderbuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenRenderbuffers"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteRenderbuffers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteRenderbuffers"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindRenderbuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindRenderbuffer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsRenderbuffer
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsRenderbuffer"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_geometry_shader4
name|QOpenGLExtension_ARB_geometry_shader4
operator|::
name|QOpenGLExtension_ARB_geometry_shader4
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_geometry_shader4Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_geometry_shader4
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_geometry_shader4
argument_list|)
expr_stmt|;
name|d
operator|->
name|FramebufferTextureFaceARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTextureFaceARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTextureLayerARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTextureLayerARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTextureARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTextureARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramParameteriARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameteriARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_get_program_binary
name|QOpenGLExtension_ARB_get_program_binary
operator|::
name|QOpenGLExtension_ARB_get_program_binary
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_get_program_binaryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_get_program_binary
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_get_program_binary
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramParameteri
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameteri"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramBinary
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramBinary"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramBinary
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramBinary"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_gpu_shader_fp64
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|QOpenGLExtension_ARB_gpu_shader_fp64
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_gpu_shader_fp64Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_gpu_shader_fp64
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_gpu_shader_fp64
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetUniformdv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformdv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix4x3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix4x3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix4x2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix4x2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix3x4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix3x4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix3x2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix3x2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix2x4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix2x4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix2x3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix2x3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1d"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_instanced_arrays
name|QOpenGLExtension_ARB_instanced_arrays
operator|::
name|QOpenGLExtension_ARB_instanced_arrays
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_instanced_arraysPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_instanced_arrays
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_instanced_arrays
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexAttribDivisorARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribDivisorARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_internalformat_query
name|QOpenGLExtension_ARB_internalformat_query
operator|::
name|QOpenGLExtension_ARB_internalformat_query
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_internalformat_queryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_internalformat_query
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_internalformat_query
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetInternalformativ
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInternalformativ"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_internalformat_query2
name|QOpenGLExtension_ARB_internalformat_query2
operator|::
name|QOpenGLExtension_ARB_internalformat_query2
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_internalformat_query2Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_internalformat_query2
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_internalformat_query2
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetInternalformati64v
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint64
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInternalformati64v"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_invalidate_subdata
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|QOpenGLExtension_ARB_invalidate_subdata
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_invalidate_subdataPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_invalidate_subdata
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_invalidate_subdata
argument_list|)
expr_stmt|;
name|d
operator|->
name|InvalidateSubFramebuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLenum
operator|*
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInvalidateSubFramebuffer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|InvalidateFramebuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLenum
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInvalidateFramebuffer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|InvalidateBufferData
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInvalidateBufferData"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|InvalidateBufferSubData
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInvalidateBufferSubData"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|InvalidateTexImage
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInvalidateTexImage"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|InvalidateTexSubImage
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInvalidateTexSubImage"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_map_buffer_range
name|QOpenGLExtension_ARB_map_buffer_range
operator|::
name|QOpenGLExtension_ARB_map_buffer_range
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_map_buffer_rangePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_map_buffer_range
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_map_buffer_range
argument_list|)
expr_stmt|;
name|d
operator|->
name|FlushMappedBufferRange
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFlushMappedBufferRange"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapBufferRange
operator|=
expr|reinterpret_cast
operator|<
name|GLvoid
operator|*
call|(
name|QOPENGLF_APIENTRYP
call|)
argument_list|(
name|GLenum
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapBufferRange"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_matrix_palette
name|QOpenGLExtension_ARB_matrix_palette
operator|::
name|QOpenGLExtension_ARB_matrix_palette
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_matrix_palettePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_matrix_palette
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_matrix_palette
argument_list|)
expr_stmt|;
name|d
operator|->
name|MatrixIndexPointerARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixIndexPointerARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixIndexuivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixIndexuivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixIndexusvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixIndexusvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixIndexubvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixIndexubvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CurrentPaletteMatrixARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCurrentPaletteMatrixARB"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_multi_draw_indirect
name|QOpenGLExtension_ARB_multi_draw_indirect
operator|::
name|QOpenGLExtension_ARB_multi_draw_indirect
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_multi_draw_indirectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_multi_draw_indirect
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multi_draw_indirect
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiDrawElementsIndirect
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawElementsIndirect"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiDrawArraysIndirect
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawArraysIndirect"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_multisample
name|QOpenGLExtension_ARB_multisample
operator|::
name|QOpenGLExtension_ARB_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|SampleCoverageARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSampleCoverageARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_multitexture
name|QOpenGLExtension_ARB_multitexture
operator|::
name|QOpenGLExtension_ARB_multitexture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_multitexturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_multitexture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_multitexture
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClientActiveTextureARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClientActiveTextureARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ActiveTextureARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glActiveTextureARB"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_occlusion_query
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|QOpenGLExtension_ARB_occlusion_query
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_occlusion_queryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_occlusion_query
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_occlusion_query
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetQueryObjectuivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryObjectuivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetQueryObjectivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryObjectivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetQueryivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndQueryARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndQueryARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginQueryARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginQueryARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsQueryARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsQueryARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteQueriesARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteQueriesARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenQueriesARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenQueriesARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_point_parameters
name|QOpenGLExtension_ARB_point_parameters
operator|::
name|QOpenGLExtension_ARB_point_parameters
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_point_parametersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_point_parameters
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_point_parameters
argument_list|)
expr_stmt|;
name|d
operator|->
name|PointParameterfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameterfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PointParameterfARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameterfARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_program_interface_query
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|QOpenGLExtension_ARB_program_interface_query
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_program_interface_queryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_program_interface_query
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_program_interface_query
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramResourceLocationIndex
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramResourceLocationIndex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramResourceLocation
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramResourceLocation"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramResourceiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLenum
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramResourceiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramResourceName
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramResourceName"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramResourceIndex
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramResourceIndex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramInterfaceiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramInterfaceiv"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_provoking_vertex
name|QOpenGLExtension_ARB_provoking_vertex
operator|::
name|QOpenGLExtension_ARB_provoking_vertex
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_provoking_vertexPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_provoking_vertex
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_provoking_vertex
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProvokingVertex
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProvokingVertex"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_robustness
name|QOpenGLExtension_ARB_robustness
operator|::
name|QOpenGLExtension_ARB_robustness
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_robustnessPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_robustness
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_robustness
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetnUniformdvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnUniformdvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnUniformuivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnUniformuivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnUniformivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnUniformivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnUniformfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnUniformfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnCompressedTexImageARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnCompressedTexImageARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReadnPixelsARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReadnPixelsARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnTexImageARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnTexImageARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnMinmaxARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnMinmaxARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnHistogramARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnHistogramARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnSeparableFilterARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnSeparableFilterARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnConvolutionFilterARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnConvolutionFilterARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnColorTableARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnColorTableARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnPolygonStippleARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnPolygonStippleARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnPixelMapusvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnPixelMapusvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnPixelMapuivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnPixelMapuivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnPixelMapfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnPixelMapfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnMapivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnMapivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnMapfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnMapfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetnMapdvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnMapdvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetGraphicsResetStatusARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLenum
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetGraphicsResetStatusARB"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_sample_shading
name|QOpenGLExtension_ARB_sample_shading
operator|::
name|QOpenGLExtension_ARB_sample_shading
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_sample_shadingPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_sample_shading
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sample_shading
argument_list|)
expr_stmt|;
name|d
operator|->
name|MinSampleShadingARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMinSampleShadingARB"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_sampler_objects
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|QOpenGLExtension_ARB_sampler_objects
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_sampler_objectsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_sampler_objects
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sampler_objects
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetSamplerParameterIuiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSamplerParameterIuiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetSamplerParameterfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSamplerParameterfv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetSamplerParameterIiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSamplerParameterIiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetSamplerParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSamplerParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SamplerParameterIuiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplerParameterIuiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SamplerParameterIiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplerParameterIiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SamplerParameterfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplerParameterfv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SamplerParameterf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplerParameterf"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SamplerParameteriv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplerParameteriv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SamplerParameteri
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplerParameteri"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindSampler
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindSampler"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsSampler
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsSampler"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteSamplers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteSamplers"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenSamplers
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenSamplers"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_separate_shader_objects
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|QOpenGLExtension_ARB_separate_shader_objects
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_separate_shader_objectsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_separate_shader_objects
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_separate_shader_objects
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramPipelineInfoLog
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramPipelineInfoLog"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ValidateProgramPipeline
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glValidateProgramPipeline"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x3fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x3fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x4fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x4fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x2fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x2fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x4fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x4fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x2fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x2fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x3fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x3fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4f"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4iv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4i"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3f"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3iv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3i"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2f"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2iv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2i"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1fv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1fv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1f
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1f"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1iv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1iv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1i
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1i"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramPipelineiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramPipelineiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsProgramPipeline
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsProgramPipeline"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenProgramPipelines
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenProgramPipelines"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteProgramPipelines
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteProgramPipelines"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindProgramPipeline
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindProgramPipeline"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|CreateShaderProgramv
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
specifier|const
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCreateShaderProgramv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ActiveShaderProgram
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glActiveShaderProgram"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UseProgramStages
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLbitfield
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUseProgramStages"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_shader_atomic_counters
name|QOpenGLExtension_ARB_shader_atomic_counters
operator|::
name|QOpenGLExtension_ARB_shader_atomic_counters
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_shader_atomic_countersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_shader_atomic_counters
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_atomic_counters
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetActiveAtomicCounterBufferiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveAtomicCounterBufferiv"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_shader_image_load_store
name|QOpenGLExtension_ARB_shader_image_load_store
operator|::
name|QOpenGLExtension_ARB_shader_image_load_store
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_shader_image_load_storePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_shader_image_load_store
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_image_load_store
argument_list|)
expr_stmt|;
name|d
operator|->
name|MemoryBarrier
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMemoryBarrier"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindImageTexture
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLboolean
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindImageTexture"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_shader_objects
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|QOpenGLExtension_ARB_shader_objects
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_shader_objectsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_shader_objects
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_objects
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetShaderSourceARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLcharARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetShaderSourceARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLint
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveUniformARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLcharARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveUniformARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformLocationARB
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
specifier|const
name|GLcharARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformLocationARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetAttachedObjectsARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLhandleARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetAttachedObjectsARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetInfoLogARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLcharARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInfoLogARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetObjectParameterivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectParameterivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetObjectParameterfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectParameterfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix4fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix4fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix3fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix3fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformMatrix2fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformMatrix2fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ValidateProgramARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhandleARB
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glValidateProgramARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|UseProgramObjectARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhandleARB
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUseProgramObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|LinkProgramARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhandleARB
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLinkProgramARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|AttachObjectARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLhandleARB
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAttachObjectARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CreateProgramObjectARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLhandleARB
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCreateProgramObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|CompileShaderARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhandleARB
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompileShaderARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ShaderSourceARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLcharARB
operator|*
operator|*
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glShaderSourceARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CreateShaderObjectARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLhandleARB
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCreateShaderObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DetachObjectARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLhandleARB
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDetachObjectARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetHandleARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLhandleARB
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetHandleARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteObjectARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhandleARB
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteObjectARB"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_shader_storage_buffer_object
name|QOpenGLExtension_ARB_shader_storage_buffer_object
operator|::
name|QOpenGLExtension_ARB_shader_storage_buffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_shader_storage_buffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_shader_storage_buffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_storage_buffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|ShaderStorageBlockBinding
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glShaderStorageBlockBinding"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_shader_subroutine
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|QOpenGLExtension_ARB_shader_subroutine
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_shader_subroutinePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_shader_subroutine
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shader_subroutine
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramStageiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramStageiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformSubroutineuiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformSubroutineuiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformSubroutinesuiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformSubroutinesuiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveSubroutineName
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveSubroutineName"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveSubroutineUniformName
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveSubroutineUniformName"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveSubroutineUniformiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveSubroutineUniformiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetSubroutineIndex
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSubroutineIndex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetSubroutineUniformLocation
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSubroutineUniformLocation"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_shading_language_include
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|QOpenGLExtension_ARB_shading_language_include
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_shading_language_includePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_shading_language_include
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_shading_language_include
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetNamedStringivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedStringivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedStringARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedStringARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsNamedStringARB
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsNamedStringARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompileShaderIncludeARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
operator|*
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompileShaderIncludeARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteNamedStringARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteNamedStringARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedStringARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedStringARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_sync
name|QOpenGLExtension_ARB_sync
operator|::
name|QOpenGLExtension_ARB_sync
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_syncPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_sync
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_sync
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetSynciv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsync
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSynciv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetInteger64v
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint64
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInteger64v"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WaitSync
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsync
argument_list|,
name|GLbitfield
argument_list|,
name|GLuint64
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWaitSync"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClientWaitSync
operator|=
expr|reinterpret_cast
operator|<
name|GLenum
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsync
argument_list|,
name|GLbitfield
argument_list|,
name|GLuint64
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClientWaitSync"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteSync
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLsync
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteSync"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsSync
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLsync
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsSync"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|FenceSync
operator|=
expr|reinterpret_cast
operator|<
name|GLsync
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFenceSync"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_tessellation_shader
name|QOpenGLExtension_ARB_tessellation_shader
operator|::
name|QOpenGLExtension_ARB_tessellation_shader
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_tessellation_shaderPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_tessellation_shader
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_tessellation_shader
argument_list|)
expr_stmt|;
name|d
operator|->
name|PatchParameterfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPatchParameterfv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PatchParameteri
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPatchParameteri"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_texture_buffer_object
name|QOpenGLExtension_ARB_texture_buffer_object
operator|::
name|QOpenGLExtension_ARB_texture_buffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_texture_buffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_texture_buffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_buffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexBufferARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexBufferARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_texture_buffer_range
name|QOpenGLExtension_ARB_texture_buffer_range
operator|::
name|QOpenGLExtension_ARB_texture_buffer_range
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_texture_buffer_rangePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_texture_buffer_range
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_buffer_range
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexBufferRange
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexBufferRange"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_texture_compression
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|QOpenGLExtension_ARB_texture_compression
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_texture_compressionPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_texture_compression
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_compression
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetCompressedTexImageARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCompressedTexImageARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTexSubImage1DARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage1DARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTexSubImage2DARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage2DARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTexSubImage3DARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage3DARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTexImage1DARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage1DARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTexImage2DARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage2DARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTexImage3DARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage3DARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_texture_multisample
name|QOpenGLExtension_ARB_texture_multisample
operator|::
name|QOpenGLExtension_ARB_texture_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_texture_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_texture_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|SampleMaski
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSampleMaski"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultisamplefv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultisamplefv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexImage3DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage3DMultisample"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexImage2DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage2DMultisample"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_texture_storage
name|QOpenGLExtension_ARB_texture_storage
operator|::
name|QOpenGLExtension_ARB_texture_storage
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_texture_storagePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_texture_storage
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_storage
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexStorage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage3D"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexStorage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage2D"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexStorage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage1D"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_texture_storage_multisample
name|QOpenGLExtension_ARB_texture_storage_multisample
operator|::
name|QOpenGLExtension_ARB_texture_storage_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_texture_storage_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_texture_storage_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_storage_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexStorage3DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage3DMultisample"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexStorage2DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage2DMultisample"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_texture_view
name|QOpenGLExtension_ARB_texture_view
operator|::
name|QOpenGLExtension_ARB_texture_view
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_texture_viewPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_texture_view
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_texture_view
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureView
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureView"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_timer_query
name|QOpenGLExtension_ARB_timer_query
operator|::
name|QOpenGLExtension_ARB_timer_query
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_timer_queryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_timer_query
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_timer_query
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetQueryObjectui64v
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint64
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryObjectui64v"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetQueryObjecti64v
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint64
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryObjecti64v"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|QueryCounter
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glQueryCounter"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_transform_feedback2
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|QOpenGLExtension_ARB_transform_feedback2
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_transform_feedback2Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_transform_feedback2
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback2
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawTransformFeedback
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawTransformFeedback"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ResumeTransformFeedback
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glResumeTransformFeedback"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PauseTransformFeedback
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPauseTransformFeedback"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsTransformFeedback
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsTransformFeedback"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenTransformFeedbacks
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenTransformFeedbacks"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteTransformFeedbacks
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteTransformFeedbacks"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindTransformFeedback
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindTransformFeedback"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_transform_feedback3
name|QOpenGLExtension_ARB_transform_feedback3
operator|::
name|QOpenGLExtension_ARB_transform_feedback3
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_transform_feedback3Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_transform_feedback3
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback3
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetQueryIndexediv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryIndexediv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndQueryIndexed
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndQueryIndexed"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BeginQueryIndexed
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginQueryIndexed"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawTransformFeedbackStream
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawTransformFeedbackStream"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_transform_feedback_instanced
name|QOpenGLExtension_ARB_transform_feedback_instanced
operator|::
name|QOpenGLExtension_ARB_transform_feedback_instanced
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_transform_feedback_instancedPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_transform_feedback_instanced
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transform_feedback_instanced
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawTransformFeedbackStreamInstanced
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawTransformFeedbackStreamInstanced"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawTransformFeedbackInstanced
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawTransformFeedbackInstanced"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_transpose_matrix
name|QOpenGLExtension_ARB_transpose_matrix
operator|::
name|QOpenGLExtension_ARB_transpose_matrix
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_transpose_matrixPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_transpose_matrix
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_transpose_matrix
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultTransposeMatrixdARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultTransposeMatrixdARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultTransposeMatrixfARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultTransposeMatrixfARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|LoadTransposeMatrixdARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLoadTransposeMatrixdARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|LoadTransposeMatrixfARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLoadTransposeMatrixfARB"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_uniform_buffer_object
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|QOpenGLExtension_ARB_uniform_buffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_uniform_buffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_uniform_buffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_uniform_buffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|UniformBlockBinding
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformBlockBinding"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveUniformBlockName
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveUniformBlockName"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveUniformBlockiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveUniformBlockiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformBlockIndex
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformBlockIndex"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveUniformName
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveUniformName"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveUniformsiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveUniformsiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformIndices
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
specifier|const
operator|*
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformIndices"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_array_object
name|QOpenGLExtension_ARB_vertex_array_object
operator|::
name|QOpenGLExtension_ARB_vertex_array_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_array_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_array_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_array_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsVertexArray
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsVertexArray"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenVertexArrays
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenVertexArrays"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteVertexArrays
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteVertexArrays"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindVertexArray
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindVertexArray"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_attrib_64bit
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|QOpenGLExtension_ARB_vertex_attrib_64bit
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_attrib_64bitPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_attrib_64bit
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_64bit
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribLdv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribLdv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribLPointer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribLPointer"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1dv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1dv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2d"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1d
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1d"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_attrib_binding
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|QOpenGLExtension_ARB_vertex_attrib_binding
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_attrib_bindingPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_attrib_binding
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_attrib_binding
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexBindingDivisor
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexBindingDivisor"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribBinding
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribBinding"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribLFormat
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribLFormat"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribIFormat
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribIFormat"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribFormat
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribFormat"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindVertexBuffer
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindVertexBuffer"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_blend
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|QOpenGLExtension_ARB_vertex_blend
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_blendPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_blend
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_blend
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexBlendARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexBlendARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WeightPointerARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightPointerARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightuivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightuivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightusvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightusvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightubvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightubvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightdvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightdvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightsvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightsvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightbvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLbyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightbvARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_buffer_object
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|QOpenGLExtension_ARB_vertex_buffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_buffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_buffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_buffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetBufferPointervARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetBufferPointervARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetBufferParameterivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetBufferParameterivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UnmapBufferARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUnmapBufferARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MapBufferARB
operator|=
expr|reinterpret_cast
operator|<
name|GLvoid
operator|*
call|(
name|QOPENGLF_APIENTRYP
call|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapBufferARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetBufferSubDataARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLintptrARB
argument_list|,
name|GLsizeiptrARB
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetBufferSubDataARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BufferSubDataARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLintptrARB
argument_list|,
name|GLsizeiptrARB
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBufferSubDataARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BufferDataARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizeiptrARB
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBufferDataARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsBufferARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsBufferARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenBuffersARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenBuffersARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteBuffersARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteBuffersARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindBufferARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindBufferARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_program
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|QOpenGLExtension_ARB_vertex_program
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_programPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_program
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_program
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsProgramARB
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsProgramARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribPointervARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribPointervARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribdvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribdvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramStringARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramStringARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramLocalParameterfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramLocalParameterfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramLocalParameterdvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramLocalParameterdvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramEnvParameterfvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramEnvParameterfvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramEnvParameterdvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramEnvParameterdvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameter4fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameter4fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameter4fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameter4fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameter4dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameter4dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameter4dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameter4dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameter4fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameter4fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameter4fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameter4fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameter4dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameter4dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameter4dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameter4dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenProgramsARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenProgramsARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteProgramsARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteProgramsARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindProgramARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindProgramARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramStringARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramStringARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DisableVertexAttribArrayARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDisableVertexAttribArrayARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|EnableVertexAttribArrayARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEnableVertexAttribArrayARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexAttribPointerARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribPointerARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4usvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4usvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4uivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4uivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4ubvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4ubvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4ivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4ivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4bvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLbyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4bvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4NusvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4NusvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4NuivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4NuivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4NubvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4NubvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4NubARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4NubARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4NsvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4NsvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4NivARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4NivARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4NbvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLbyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4NbvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1svARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1svARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1fvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1fvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1dvARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1dvARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1dARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_shader
name|QOpenGLExtension_ARB_vertex_shader
operator|::
name|QOpenGLExtension_ARB_vertex_shader
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_shaderPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_shader
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_shader
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetAttribLocationARB
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
specifier|const
name|GLcharARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetAttribLocationARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveAttribARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLint
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLcharARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveAttribARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindAttribLocationARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhandleARB
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLcharARB
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindAttribLocationARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_revPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_vertex_type_2_10_10_10_rev
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP4uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP4uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP4ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP4ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP2uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP2uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP2ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP2ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP1uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP1uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribP1ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribP1ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColorP3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColorP3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColorP3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColorP3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorP4uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorP4uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorP4ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorP4ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorP3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorP3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorP3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorP3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalP3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalP3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalP3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalP3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP4uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP4uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP4ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP4ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP2uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP2uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP2ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP2ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP1uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP1uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordP1ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordP1ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP4uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP4uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP4ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP4ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP2uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP2uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP2ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP2ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP1uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP1uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordP1ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordP1ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexP4uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexP4uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexP4ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexP4ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexP3uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexP3uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexP3ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexP3ui"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexP2uiv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexP2uiv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexP2ui
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexP2ui"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_viewport_array
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|QOpenGLExtension_ARB_viewport_array
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_viewport_arrayPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_viewport_array
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_viewport_array
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetDoublei_v
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDoublei_v"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFloati_v
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFloati_v"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DepthRangeIndexed
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDepthRangeIndexed"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DepthRangeArrayv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDepthRangeArrayv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ScissorIndexedv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glScissorIndexedv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ScissorIndexed
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glScissorIndexed"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ScissorArrayv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glScissorArrayv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ViewportIndexedfv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glViewportIndexedfv"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ViewportIndexedf
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glViewportIndexedf"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ViewportArrayv
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glViewportArrayv"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ARB_window_pos
name|QOpenGLExtension_ARB_window_pos
operator|::
name|QOpenGLExtension_ARB_window_pos
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ARB_window_posPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ARB_window_pos
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ARB_window_pos
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3svARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3svARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos3ivARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3ivARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos3fvARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos3dvARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3dvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3dARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2svARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2svARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2sARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2sARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2ivARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2ivARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2iARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2iARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2fvARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2fvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2fARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2fARB"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2dvARB
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2dvARB"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2dARB
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2dARB"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_draw_buffers
name|QOpenGLExtension_ATI_draw_buffers
operator|::
name|QOpenGLExtension_ATI_draw_buffers
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_draw_buffersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_draw_buffers
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_draw_buffers
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawBuffersATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLenum
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawBuffersATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_element_array
name|QOpenGLExtension_ATI_element_array
operator|::
name|QOpenGLExtension_ATI_element_array
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_element_arrayPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_element_array
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_element_array
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawRangeElementArrayATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawRangeElementArrayATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawElementArrayATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementArrayATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ElementPointerATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glElementPointerATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_envmap_bumpmap
name|QOpenGLExtension_ATI_envmap_bumpmap
operator|::
name|QOpenGLExtension_ATI_envmap_bumpmap
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_envmap_bumpmapPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_envmap_bumpmap
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_envmap_bumpmap
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetTexBumpParameterfvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTexBumpParameterfvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTexBumpParameterivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTexBumpParameterivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexBumpParameterfvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexBumpParameterfvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexBumpParameterivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexBumpParameterivATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_fragment_shader
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|QOpenGLExtension_ATI_fragment_shader
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_fragment_shaderPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_fragment_shader
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_fragment_shader
argument_list|)
expr_stmt|;
name|d
operator|->
name|SetFragmentShaderConstantATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSetFragmentShaderConstantATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|AlphaFragmentOp3ATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAlphaFragmentOp3ATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|AlphaFragmentOp2ATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAlphaFragmentOp2ATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|AlphaFragmentOp1ATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAlphaFragmentOp1ATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorFragmentOp3ATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorFragmentOp3ATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorFragmentOp2ATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorFragmentOp2ATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorFragmentOp1ATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorFragmentOp1ATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SampleMapATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSampleMapATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PassTexCoordATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPassTexCoordATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndFragmentShaderATI
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndFragmentShaderATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginFragmentShaderATI
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginFragmentShaderATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteFragmentShaderATI
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteFragmentShaderATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindFragmentShaderATI
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindFragmentShaderATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenFragmentShadersATI
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenFragmentShadersATI"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_map_object_buffer
name|QOpenGLExtension_ATI_map_object_buffer
operator|::
name|QOpenGLExtension_ATI_map_object_buffer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_map_object_bufferPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_map_object_buffer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_map_object_buffer
argument_list|)
expr_stmt|;
name|d
operator|->
name|UnmapObjectBufferATI
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUnmapObjectBufferATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MapObjectBufferATI
operator|=
cast|reinterpret_cast
argument_list|<
name|GLvoid
operator|*
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapObjectBufferATI"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_pn_triangles
name|QOpenGLExtension_ATI_pn_triangles
operator|::
name|QOpenGLExtension_ATI_pn_triangles
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_pn_trianglesPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_pn_triangles
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_pn_triangles
argument_list|)
expr_stmt|;
name|d
operator|->
name|PNTrianglesfATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPNTrianglesfATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PNTrianglesiATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPNTrianglesiATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_separate_stencil
name|QOpenGLExtension_ATI_separate_stencil
operator|::
name|QOpenGLExtension_ATI_separate_stencil
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_separate_stencilPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_separate_stencil
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_separate_stencil
argument_list|)
expr_stmt|;
name|d
operator|->
name|StencilFuncSeparateATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilFuncSeparateATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|StencilOpSeparateATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilOpSeparateATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_vertex_array_object
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|QOpenGLExtension_ATI_vertex_array_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_vertex_array_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_vertex_array_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_array_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetVariantArrayObjectivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVariantArrayObjectivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVariantArrayObjectfvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVariantArrayObjectfvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantArrayObjectATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantArrayObjectATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetArrayObjectivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetArrayObjectivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetArrayObjectfvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetArrayObjectfvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ArrayObjectATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glArrayObjectATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FreeObjectBufferATI
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFreeObjectBufferATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetObjectBufferivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectBufferivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetObjectBufferfvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectBufferfvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UpdateObjectBufferATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUpdateObjectBufferATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsObjectBufferATI
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsObjectBufferATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|NewObjectBufferATI
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNewObjectBufferATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_vertex_attrib_array_object
name|QOpenGLExtension_ATI_vertex_attrib_array_object
operator|::
name|QOpenGLExtension_ATI_vertex_attrib_array_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_vertex_attrib_array_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_vertex_attrib_array_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_attrib_array_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribArrayObjectivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribArrayObjectivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribArrayObjectfvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribArrayObjectfvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribArrayObjectATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLsizei
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribArrayObjectATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ATI_vertex_streams
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|QOpenGLExtension_ATI_vertex_streams
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ATI_vertex_streamsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ATI_vertex_streams
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ATI_vertex_streams
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexBlendEnvfATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexBlendEnvfATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexBlendEnviATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexBlendEnviATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClientActiveVertexStreamATI
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClientActiveVertexStreamATI"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|NormalStream3dvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3dvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3dATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3dATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3fvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3fvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3fATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3fATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3ivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3ivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3iATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3iATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3svATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3svATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3sATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3sATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3bvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLbyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3bvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalStream3bATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalStream3bATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4dvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4dvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4dATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4dATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4fvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4fvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4fATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4fATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4ivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4ivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4iATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4iATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4svATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4svATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream4sATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream4sATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3dvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3dvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3dATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3dATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3fvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3fvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3fATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3fATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3ivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3ivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3iATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3iATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3svATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3svATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream3sATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream3sATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2dvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2dvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2dATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2dATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2fvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2fvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2fATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2fATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2ivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2ivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2iATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2iATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2svATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2svATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream2sATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream2sATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1dvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1dvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1dATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1dATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1fvATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1fvATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1fATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1fATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1ivATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1ivATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1iATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1iATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1svATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1svATI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexStream1sATI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexStream1sATI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_bindable_uniform
name|QOpenGLExtension_EXT_bindable_uniform
operator|::
name|QOpenGLExtension_EXT_bindable_uniform
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_bindable_uniformPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_bindable_uniform
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_bindable_uniform
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetUniformOffsetEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLintptr
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformOffsetEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformBufferSizeEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformBufferSizeEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_blend_color
name|QOpenGLExtension_EXT_blend_color
operator|::
name|QOpenGLExtension_EXT_blend_color
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_blend_colorPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_blend_color
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_color
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlendColorEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendColorEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_blend_equation_separate
name|QOpenGLExtension_EXT_blend_equation_separate
operator|::
name|QOpenGLExtension_EXT_blend_equation_separate
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_blend_equation_separatePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_blend_equation_separate
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_equation_separate
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlendEquationSeparateEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendEquationSeparateEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_blend_func_separate
name|QOpenGLExtension_EXT_blend_func_separate
operator|::
name|QOpenGLExtension_EXT_blend_func_separate
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_blend_func_separatePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_blend_func_separate
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_func_separate
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlendFuncSeparateEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendFuncSeparateEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_blend_minmax
name|QOpenGLExtension_EXT_blend_minmax
operator|::
name|QOpenGLExtension_EXT_blend_minmax
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_blend_minmaxPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_blend_minmax
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_blend_minmax
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlendEquationEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendEquationEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_color_subtable
name|QOpenGLExtension_EXT_color_subtable
operator|::
name|QOpenGLExtension_EXT_color_subtable
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_color_subtablePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_color_subtable
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_color_subtable
argument_list|)
expr_stmt|;
name|d
operator|->
name|CopyColorSubTableEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyColorSubTableEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorSubTableEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorSubTableEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_compiled_vertex_array
name|QOpenGLExtension_EXT_compiled_vertex_array
operator|::
name|QOpenGLExtension_EXT_compiled_vertex_array
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_compiled_vertex_arrayPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_compiled_vertex_array
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_compiled_vertex_array
argument_list|)
expr_stmt|;
name|d
operator|->
name|UnlockArraysEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUnlockArraysEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|LockArraysEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLockArraysEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_convolution
name|QOpenGLExtension_EXT_convolution
operator|::
name|QOpenGLExtension_EXT_convolution
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_convolutionPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_convolution
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_convolution
argument_list|)
expr_stmt|;
name|d
operator|->
name|SeparableFilter2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSeparableFilter2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetSeparableFilterEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|,
name|GLvoid
operator|*
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSeparableFilterEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetConvolutionParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetConvolutionParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetConvolutionParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetConvolutionParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetConvolutionFilterEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetConvolutionFilterEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyConvolutionFilter2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyConvolutionFilter2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyConvolutionFilter1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyConvolutionFilter1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ConvolutionParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glConvolutionParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ConvolutionParameteriEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glConvolutionParameteriEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ConvolutionParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glConvolutionParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ConvolutionParameterfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glConvolutionParameterfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ConvolutionFilter2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glConvolutionFilter2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ConvolutionFilter1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glConvolutionFilter1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_coordinate_frame
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|QOpenGLExtension_EXT_coordinate_frame
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_coordinate_framePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_coordinate_frame
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_coordinate_frame
argument_list|)
expr_stmt|;
name|d
operator|->
name|BinormalPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormalPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TangentPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangentPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Binormal3svEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3svEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Binormal3sEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3sEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Binormal3ivEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3ivEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Binormal3iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Binormal3fvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3fvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Binormal3fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Binormal3dvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3dvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Binormal3dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Binormal3bvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLbyte
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3bvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Binormal3bEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBinormal3bEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Tangent3svEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3svEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Tangent3sEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3sEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Tangent3ivEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3ivEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Tangent3iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Tangent3fvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3fvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Tangent3fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Tangent3dvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3dvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Tangent3dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Tangent3bvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLbyte
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3bvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Tangent3bEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTangent3bEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_copy_texture
name|QOpenGLExtension_EXT_copy_texture
operator|::
name|QOpenGLExtension_EXT_copy_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_copy_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_copy_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_copy_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|CopyTexSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTexSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTexSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTexSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTexSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTexSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTexImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTexImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTexImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTexImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_cull_vertex
name|QOpenGLExtension_EXT_cull_vertex
operator|::
name|QOpenGLExtension_EXT_cull_vertex
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_cull_vertexPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_cull_vertex
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_cull_vertex
argument_list|)
expr_stmt|;
name|d
operator|->
name|CullParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCullParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CullParameterdvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCullParameterdvEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_depth_bounds_test
name|QOpenGLExtension_EXT_depth_bounds_test
operator|::
name|QOpenGLExtension_EXT_depth_bounds_test
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_depth_bounds_testPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_depth_bounds_test
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_depth_bounds_test
argument_list|)
expr_stmt|;
name|d
operator|->
name|DepthBoundsEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLclampd
argument_list|,
name|GLclampd
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDepthBoundsEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_direct_state_access
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|QOpenGLExtension_EXT_direct_state_access
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_direct_state_accessPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_direct_state_access
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_direct_state_access
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x3dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x3dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x2dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x2dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x4dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x4dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x2dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x2dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x4dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x4dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x3dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x3dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexRenderbufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexRenderbufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureRenderbufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureRenderbufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferTextureFaceEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferTextureFaceEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferTextureLayerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferTextureLayerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferTextureEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferTextureEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedRenderbufferStorageMultisampleCoverageEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedRenderbufferStorageMultisampleCoverageEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedRenderbufferStorageMultisampleEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedRenderbufferStorageMultisampleEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFramebufferParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFramebufferParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferReadBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferReadBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferDrawBuffersEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLenum
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferDrawBuffersEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferDrawBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferDrawBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenerateMultiTexMipmapEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenerateMultiTexMipmapEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenerateTextureMipmapEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenerateTextureMipmapEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedFramebufferAttachmentParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedFramebufferAttachmentParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferRenderbufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferRenderbufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferTexture3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferTexture3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferTexture2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferTexture2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferTexture1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferTexture1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CheckNamedFramebufferStatusEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLenum
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCheckNamedFramebufferStatusEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedRenderbufferParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedRenderbufferParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedRenderbufferStorageEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedRenderbufferStorageEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedBufferSubDataEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedBufferSubDataEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedBufferPointervEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedBufferPointervEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedBufferParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedBufferParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedCopyBufferSubDataEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedCopyBufferSubDataEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FlushMappedNamedBufferRangeEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFlushMappedNamedBufferRangeEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapNamedBufferRangeEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLvoid
operator|*
call|(
name|QOPENGLF_APIENTRYP
call|)
argument_list|(
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapNamedBufferRangeEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UnmapNamedBufferEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUnmapNamedBufferEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MapNamedBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLvoid
operator|*
call|(
name|QOPENGLF_APIENTRYP
call|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapNamedBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedBufferSubDataEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedBufferSubDataEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedBufferDataEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizeiptr
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedBufferDataEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x3fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x3fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4x2fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4x2fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3x2fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3x2fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2x3fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2x3fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexParameterIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexParameterIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexParameterIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexParameterIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexParameterIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexParameterIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexParameterIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexParameterIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureParameterIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureParameterIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureParameterIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureParameterIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureParameterIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureParameterIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedProgramLocalParameterIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedProgramLocalParameterIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedProgramLocalParameterIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedProgramLocalParameterIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParametersI4uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParametersI4uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameterI4uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameterI4uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameterI4uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameterI4uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParametersI4ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParametersI4ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameterI4ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameterI4ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameterI4iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameterI4iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameters4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameters4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedProgramStringEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedProgramStringEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedProgramivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedProgramivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedProgramLocalParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedProgramLocalParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedProgramLocalParameterdvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedProgramLocalParameterdvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameter4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameter4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameter4fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameter4fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameter4dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameter4dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramLocalParameter4dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramLocalParameter4dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedProgramStringEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedProgramStringEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetCompressedMultiTexImageEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCompressedMultiTexImageEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedMultiTexSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedMultiTexSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedMultiTexSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedMultiTexSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedMultiTexSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedMultiTexSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedMultiTexImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedMultiTexImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedMultiTexImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedMultiTexImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedMultiTexImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedMultiTexImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetCompressedTextureImageEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCompressedTextureImageEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTextureSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTextureSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTextureSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTextureImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTextureImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CompressedTextureImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPointerIndexedvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPointerIndexedvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetDoubleIndexedvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDoubleIndexedvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFloatIndexedvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFloatIndexedvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexGenivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexGenivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexGenfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexGenfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexGendvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexGendvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexEnvivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexEnvivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexEnvfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexEnvfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexGenivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexGenivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexGeniEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexGeniEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexGenfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexGenfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexGenfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexGenfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexGendvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexGendvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexGendEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexGendEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexEnvivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexEnvivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexEnviEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexEnviEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexEnvfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexEnvfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexEnvfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexEnvfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoordPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoordPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DisableClientStateIndexedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDisableClientStateIndexedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EnableClientStateIndexedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEnableClientStateIndexedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindMultiTextureEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindMultiTextureEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyMultiTexSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyMultiTexSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexLevelParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexLevelParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexLevelParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexLevelParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultiTexImageEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultiTexImageEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyMultiTexSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyMultiTexSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyMultiTexSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyMultiTexSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyMultiTexImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyMultiTexImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyMultiTexImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyMultiTexImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexParameteriEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexParameteriEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexParameterfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexParameterfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTextureSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTextureSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureLevelParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureLevelParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureLevelParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureLevelParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureImageEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureImageEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTextureSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTextureSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTextureSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTextureSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTextureImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTextureImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyTextureImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTextureImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureParameteriEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameteriEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureParameterfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixMultTransposedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixMultTransposedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixMultTransposefEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixMultTransposefEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixLoadTransposedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixLoadTransposedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixLoadTransposefEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixLoadTransposefEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixPushEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixPushEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MatrixPopEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixPopEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MatrixOrthoEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixOrthoEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixFrustumEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixFrustumEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixTranslatedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixTranslatedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixTranslatefEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixTranslatefEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixScaledEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixScaledEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixScalefEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixScalefEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixRotatedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixRotatedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixRotatefEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixRotatefEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixLoadIdentityEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixLoadIdentityEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MatrixMultdEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixMultdEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixMultfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixMultfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixLoaddEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixLoaddEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MatrixLoadfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMatrixLoadfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PushClientAttribDefaultEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPushClientAttribDefaultEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ClientAttribDefaultEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClientAttribDefaultEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureStorage3DMultisampleEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage3DMultisampleEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureStorage2DMultisampleEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage2DMultisampleEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureBufferRangeEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureBufferRangeEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedFramebufferParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedFramebufferParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NamedFramebufferParameteriEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNamedFramebufferParameteriEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexArrayVertexBindingDivisorEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayVertexBindingDivisorEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexArrayVertexAttribBindingEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayVertexAttribBindingEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexArrayVertexAttribLFormatEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayVertexAttribLFormatEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexArrayVertexAttribIFormatEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayVertexAttribIFormatEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexArrayVertexAttribFormatEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayVertexAttribFormatEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexArrayBindVertexBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayBindVertexBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClearNamedBufferSubDataEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizeiptr
argument_list|,
name|GLsizeiptr
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearNamedBufferSubDataEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClearNamedBufferDataEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|void
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearNamedBufferDataEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureStorage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureStorage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureStorage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_draw_buffers2
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|QOpenGLExtension_EXT_draw_buffers2
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_draw_buffers2Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_draw_buffers2
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_buffers2
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsEnabledIndexedEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsEnabledIndexedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DisableIndexedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDisableIndexedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EnableIndexedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEnableIndexedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetIntegerIndexedvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetIntegerIndexedvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetBooleanIndexedvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetBooleanIndexedvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorMaskIndexedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorMaskIndexedEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_draw_instanced
name|QOpenGLExtension_EXT_draw_instanced
operator|::
name|QOpenGLExtension_EXT_draw_instanced
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_draw_instancedPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_draw_instanced
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_instanced
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawElementsInstancedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsInstancedEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawArraysInstancedEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawArraysInstancedEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_draw_range_elements
name|QOpenGLExtension_EXT_draw_range_elements
operator|::
name|QOpenGLExtension_EXT_draw_range_elements
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_draw_range_elementsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_draw_range_elements
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_draw_range_elements
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawRangeElementsEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawRangeElementsEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_fog_coord
name|QOpenGLExtension_EXT_fog_coord
operator|::
name|QOpenGLExtension_EXT_fog_coord
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_fog_coordPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_fog_coord
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_fog_coord
argument_list|)
expr_stmt|;
name|d
operator|->
name|FogCoordPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoordPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FogCoorddvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoorddvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|FogCoorddEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLdouble
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoorddEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|FogCoordfvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoordfvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|FogCoordfEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoordfEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_framebuffer_blit
name|QOpenGLExtension_EXT_framebuffer_blit
operator|::
name|QOpenGLExtension_EXT_framebuffer_blit
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_framebuffer_blitPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_framebuffer_blit
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_blit
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlitFramebufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLbitfield
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlitFramebufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_framebuffer_multisample
name|QOpenGLExtension_EXT_framebuffer_multisample
operator|::
name|QOpenGLExtension_EXT_framebuffer_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_framebuffer_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_framebuffer_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageMultisampleEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageMultisampleEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_framebuffer_object
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|QOpenGLExtension_EXT_framebuffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_framebuffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_framebuffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_framebuffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenerateMipmapEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenerateMipmapEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFramebufferAttachmentParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFramebufferAttachmentParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferRenderbufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferRenderbufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CheckFramebufferStatusEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|GLenum
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCheckFramebufferStatusEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenFramebuffersEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenFramebuffersEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteFramebuffersEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteFramebuffersEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindFramebufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindFramebufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsFramebufferEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsFramebufferEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetRenderbufferParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetRenderbufferParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenRenderbuffersEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenRenderbuffersEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteRenderbuffersEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteRenderbuffersEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindRenderbufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindRenderbufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsRenderbufferEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsRenderbufferEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_geometry_shader4
name|QOpenGLExtension_EXT_geometry_shader4
operator|::
name|QOpenGLExtension_EXT_geometry_shader4
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_geometry_shader4Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_geometry_shader4
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_geometry_shader4
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramParameteriEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameteriEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_gpu_program_parameters
name|QOpenGLExtension_EXT_gpu_program_parameters
operator|::
name|QOpenGLExtension_EXT_gpu_program_parameters
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_gpu_program_parametersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_gpu_program_parameters
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_program_parameters
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameters4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameters4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameters4fvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameters4fvEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_gpu_shader4
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|QOpenGLExtension_EXT_gpu_shader4
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_gpu_shader4Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_gpu_shader4
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_gpu_shader4
argument_list|)
expr_stmt|;
name|d
operator|->
name|Uniform4uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFragDataLocationEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFragDataLocationEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindFragDataLocationEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindFragDataLocationEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_histogram
name|QOpenGLExtension_EXT_histogram
operator|::
name|QOpenGLExtension_EXT_histogram
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_histogramPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_histogram
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_histogram
argument_list|)
expr_stmt|;
name|d
operator|->
name|ResetMinmaxEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glResetMinmaxEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ResetHistogramEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glResetHistogramEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MinmaxEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMinmaxEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|HistogramEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glHistogramEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMinmaxParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMinmaxParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMinmaxParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMinmaxParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMinmaxEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMinmaxEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetHistogramParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetHistogramParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetHistogramParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetHistogramParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetHistogramEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetHistogramEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_index_func
name|QOpenGLExtension_EXT_index_func
operator|::
name|QOpenGLExtension_EXT_index_func
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_index_funcPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_index_func
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_index_func
argument_list|)
expr_stmt|;
name|d
operator|->
name|IndexFuncEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLclampf
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIndexFuncEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_index_material
name|QOpenGLExtension_EXT_index_material
operator|::
name|QOpenGLExtension_EXT_index_material
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_index_materialPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_index_material
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_index_material
argument_list|)
expr_stmt|;
name|d
operator|->
name|IndexMaterialEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIndexMaterialEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_light_texture
name|QOpenGLExtension_EXT_light_texture
operator|::
name|QOpenGLExtension_EXT_light_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_light_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_light_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_light_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureMaterialEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureMaterialEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureLightEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureLightEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ApplyTextureEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glApplyTextureEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_multi_draw_arrays
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|QOpenGLExtension_EXT_multi_draw_arrays
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_multi_draw_arraysPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiDrawElementsEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLsizei
operator|*
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawElementsEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiDrawArraysEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
specifier|const
name|GLsizei
operator|*
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawArraysEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_multisample
name|QOpenGLExtension_EXT_multisample
operator|::
name|QOpenGLExtension_EXT_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|SamplePatternEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplePatternEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SampleMaskEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLclampf
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSampleMaskEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_paletted_texture
name|QOpenGLExtension_EXT_paletted_texture
operator|::
name|QOpenGLExtension_EXT_paletted_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_paletted_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_paletted_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_paletted_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetColorTableParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetColorTableParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetColorTableParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetColorTableParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetColorTableEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetColorTableEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorTableEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorTableEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_pixel_transform
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|QOpenGLExtension_EXT_pixel_transform
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_pixel_transformPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_pixel_transform
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_pixel_transform
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPixelTransformParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPixelTransformParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPixelTransformParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPixelTransformParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTransformParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTransformParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTransformParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTransformParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTransformParameterfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTransformParameterfEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTransformParameteriEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTransformParameteriEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_point_parameters
name|QOpenGLExtension_EXT_point_parameters
operator|::
name|QOpenGLExtension_EXT_point_parameters
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_point_parametersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_point_parameters
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_point_parameters
argument_list|)
expr_stmt|;
name|d
operator|->
name|PointParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PointParameterfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameterfEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_polygon_offset
name|QOpenGLExtension_EXT_polygon_offset
operator|::
name|QOpenGLExtension_EXT_polygon_offset
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_polygon_offsetPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_polygon_offset
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_polygon_offset
argument_list|)
expr_stmt|;
name|d
operator|->
name|PolygonOffsetEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPolygonOffsetEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_provoking_vertex
name|QOpenGLExtension_EXT_provoking_vertex
operator|::
name|QOpenGLExtension_EXT_provoking_vertex
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_provoking_vertexPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_provoking_vertex
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_provoking_vertex
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProvokingVertexEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProvokingVertexEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_secondary_color
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|QOpenGLExtension_EXT_secondary_color
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_secondary_colorPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_secondary_color
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_secondary_color
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColorPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColorPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3usvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLushort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3usvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3usEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLushort
argument_list|,
name|GLushort
argument_list|,
name|GLushort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3usEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3uivEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLuint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3uivEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3ubvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLubyte
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3ubvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3ubEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3ubEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3svEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3svEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3sEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3sEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3ivEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3ivEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3fvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3fvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3fEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3fEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3dvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3dvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3bvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLbyte
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3bvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3bEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLbyte
argument_list|,
name|GLbyte
argument_list|,
name|GLbyte
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3bEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_separate_shader_objects
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|QOpenGLExtension_EXT_separate_shader_objects
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_separate_shader_objectsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
expr_stmt|;
name|d
operator|->
name|CreateShaderProgramEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCreateShaderProgramEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ActiveProgramEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glActiveProgramEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|UseShaderProgramEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUseShaderProgramEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_shader_image_load_store
name|QOpenGLExtension_EXT_shader_image_load_store
operator|::
name|QOpenGLExtension_EXT_shader_image_load_store
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_shader_image_load_storePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_shader_image_load_store
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_shader_image_load_store
argument_list|)
expr_stmt|;
name|d
operator|->
name|MemoryBarrierEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMemoryBarrierEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindImageTextureEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLboolean
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindImageTextureEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_stencil_clear_tag
name|QOpenGLExtension_EXT_stencil_clear_tag
operator|::
name|QOpenGLExtension_EXT_stencil_clear_tag
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_stencil_clear_tagPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_stencil_clear_tag
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_stencil_clear_tag
argument_list|)
expr_stmt|;
name|d
operator|->
name|StencilClearTagEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilClearTagEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_stencil_two_side
name|QOpenGLExtension_EXT_stencil_two_side
operator|::
name|QOpenGLExtension_EXT_stencil_two_side
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_stencil_two_sidePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_stencil_two_side
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_stencil_two_side
argument_list|)
expr_stmt|;
name|d
operator|->
name|ActiveStencilFaceEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glActiveStencilFaceEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_subtexture
name|QOpenGLExtension_EXT_subtexture
operator|::
name|QOpenGLExtension_EXT_subtexture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_subtexturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_subtexture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_subtexture
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_texture3D
name|QOpenGLExtension_EXT_texture3D
operator|::
name|QOpenGLExtension_EXT_texture3D
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_texture3DPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_texture3D
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture3D
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_texture_buffer_object
name|QOpenGLExtension_EXT_texture_buffer_object
operator|::
name|QOpenGLExtension_EXT_texture_buffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_texture_buffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_texture_buffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_buffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexBufferEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexBufferEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_texture_integer
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|QOpenGLExtension_EXT_texture_integer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_texture_integerPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_texture_integer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_integer
argument_list|)
expr_stmt|;
name|d
operator|->
name|ClearColorIuiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearColorIuiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClearColorIiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearColorIiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTexParameterIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTexParameterIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTexParameterIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTexParameterIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexParameterIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexParameterIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexParameterIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexParameterIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_texture_object
name|QOpenGLExtension_EXT_texture_object
operator|::
name|QOpenGLExtension_EXT_texture_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_texture_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_texture_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|PrioritizeTexturesEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLclampf
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPrioritizeTexturesEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsTextureEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsTextureEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenTexturesEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenTexturesEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteTexturesEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteTexturesEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindTextureEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindTextureEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|AreTexturesResidentEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAreTexturesResidentEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_texture_perturb_normal
name|QOpenGLExtension_EXT_texture_perturb_normal
operator|::
name|QOpenGLExtension_EXT_texture_perturb_normal
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_texture_perturb_normalPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_texture_perturb_normal
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_perturb_normal
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureNormalEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureNormalEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_timer_query
name|QOpenGLExtension_EXT_timer_query
operator|::
name|QOpenGLExtension_EXT_timer_query
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_timer_queryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_timer_query
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_timer_query
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetQueryObjectui64vEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryObjectui64vEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetQueryObjecti64vEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryObjecti64vEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_transform_feedback
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|QOpenGLExtension_EXT_transform_feedback
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_transform_feedbackPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_transform_feedback
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_transform_feedback
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetTransformFeedbackVaryingEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTransformFeedbackVaryingEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TransformFeedbackVaryingsEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTransformFeedbackVaryingsEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindBufferBaseEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindBufferBaseEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindBufferOffsetEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindBufferOffsetEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindBufferRangeEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindBufferRangeEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndTransformFeedbackEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndTransformFeedbackEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginTransformFeedbackEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginTransformFeedbackEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_vertex_array
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|QOpenGLExtension_EXT_vertex_array
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_vertex_arrayPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_vertex_array
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_array
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IndexPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIndexPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPointervEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPointervEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EdgeFlagPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEdgeFlagPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DrawArraysEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawArraysEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ArrayElementEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glArrayElementEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_vertex_attrib_64bit
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|QOpenGLExtension_EXT_vertex_attrib_64bit
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_vertex_attrib_64bitPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_vertex_attrib_64bit
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_attrib_64bit
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexArrayVertexAttribLOffsetEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLintptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayVertexAttribLOffsetEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribLdvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribLdvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribLPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribLPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1dvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1dvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2dEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1dEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1dEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_vertex_shader
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|QOpenGLExtension_EXT_vertex_shader
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_vertex_shaderPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_vertex_shader
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_shader
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetLocalConstantFloatvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetLocalConstantFloatvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetLocalConstantIntegervEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetLocalConstantIntegervEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetLocalConstantBooleanvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetLocalConstantBooleanvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetInvariantFloatvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInvariantFloatvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetInvariantIntegervEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInvariantIntegervEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetInvariantBooleanvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInvariantBooleanvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVariantPointervEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVariantPointervEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVariantFloatvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVariantFloatvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVariantIntegervEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVariantIntegervEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVariantBooleanvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVariantBooleanvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsVariantEnabledEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsVariantEnabledEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindParameterEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindParameterEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindTextureUnitParameterEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindTextureUnitParameterEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindTexGenParameterEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindTexGenParameterEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindMaterialParameterEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindMaterialParameterEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindLightParameterEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindLightParameterEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DisableVariantClientStateEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDisableVariantClientStateEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|EnableVariantClientStateEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEnableVariantClientStateEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|VariantPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantusvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantusvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantubvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantubvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantdvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantdvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantsvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantsvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VariantbvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLbyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVariantbvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SetLocalConstantEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSetLocalConstantEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SetInvariantEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSetInvariantEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenSymbolsEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenSymbolsEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ExtractComponentEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtractComponentEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|InsertComponentEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInsertComponentEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WriteMaskEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWriteMaskEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SwizzleEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSwizzleEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ShaderOp3EXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glShaderOp3EXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ShaderOp2EXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glShaderOp2EXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ShaderOp1EXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glShaderOp1EXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteVertexShaderEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteVertexShaderEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenVertexShadersEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenVertexShadersEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindVertexShaderEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindVertexShaderEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|EndVertexShaderEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndVertexShaderEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginVertexShaderEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginVertexShaderEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_vertex_weighting
name|QOpenGLExtension_EXT_vertex_weighting
operator|::
name|QOpenGLExtension_EXT_vertex_weighting
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_vertex_weightingPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_vertex_weighting
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_vertex_weighting
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexWeightPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexWeightPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexWeightfvEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexWeightfvEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexWeightfEXT
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexWeightfEXT"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_x11_sync_object
name|QOpenGLExtension_EXT_x11_sync_object
operator|::
name|QOpenGLExtension_EXT_x11_sync_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_x11_sync_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_x11_sync_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_x11_sync_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|ImportSyncEXT
operator|=
expr|reinterpret_cast
operator|<
name|GLsync
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLintptr
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glImportSyncEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_GREMEDY_frame_terminator
name|QOpenGLExtension_GREMEDY_frame_terminator
operator|::
name|QOpenGLExtension_GREMEDY_frame_terminator
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_GREMEDY_frame_terminatorPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_GREMEDY_frame_terminator
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_GREMEDY_frame_terminator
argument_list|)
expr_stmt|;
name|d
operator|->
name|FrameTerminatorGREMEDY
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFrameTerminatorGREMEDY"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_GREMEDY_string_marker
name|QOpenGLExtension_GREMEDY_string_marker
operator|::
name|QOpenGLExtension_GREMEDY_string_marker
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_GREMEDY_string_markerPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_GREMEDY_string_marker
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_GREMEDY_string_marker
argument_list|)
expr_stmt|;
name|d
operator|->
name|StringMarkerGREMEDY
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStringMarkerGREMEDY"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_HP_image_transform
name|QOpenGLExtension_HP_image_transform
operator|::
name|QOpenGLExtension_HP_image_transform
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_HP_image_transformPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_HP_image_transform
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_HP_image_transform
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetImageTransformParameterfvHP
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetImageTransformParameterfvHP"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetImageTransformParameterivHP
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetImageTransformParameterivHP"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ImageTransformParameterfvHP
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glImageTransformParameterfvHP"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ImageTransformParameterivHP
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glImageTransformParameterivHP"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ImageTransformParameterfHP
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glImageTransformParameterfHP"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ImageTransformParameteriHP
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glImageTransformParameteriHP"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_IBM_multimode_draw_arrays
name|QOpenGLExtension_IBM_multimode_draw_arrays
operator|::
name|QOpenGLExtension_IBM_multimode_draw_arrays
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_IBM_multimode_draw_arraysPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_IBM_multimode_draw_arrays
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_multimode_draw_arrays
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiModeDrawElementsIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLenum
operator|*
argument_list|,
specifier|const
name|GLsizei
operator|*
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
specifier|const
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiModeDrawElementsIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiModeDrawArraysIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLenum
operator|*
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
specifier|const
name|GLsizei
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiModeDrawArraysIBM"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_IBM_vertex_array_lists
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|QOpenGLExtension_IBM_vertex_array_lists
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_IBM_vertex_array_listsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_IBM_vertex_array_lists
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_IBM_vertex_array_lists
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoordPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IndexPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIndexPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FogCoordPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoordPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EdgeFlagPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
specifier|const
name|GLboolean
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEdgeFlagPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColorPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColorPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorPointerListIBM
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorPointerListIBM"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_INGR_blend_func_separate
name|QOpenGLExtension_INGR_blend_func_separate
operator|::
name|QOpenGLExtension_INGR_blend_func_separate
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_INGR_blend_func_separatePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_INGR_blend_func_separate
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_INGR_blend_func_separate
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlendFuncSeparateINGR
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlendFuncSeparateINGR"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_INTEL_parallel_arrays
name|QOpenGLExtension_INTEL_parallel_arrays
operator|::
name|QOpenGLExtension_INTEL_parallel_arrays
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_INTEL_parallel_arraysPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_INTEL_parallel_arrays
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_INTEL_parallel_arrays
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexCoordPointervINTEL
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordPointervINTEL"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorPointervINTEL
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorPointervINTEL"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalPointervINTEL
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalPointervINTEL"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexPointervINTEL
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexPointervINTEL"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_KHR_debug
name|QOpenGLExtension_KHR_debug
operator|::
name|QOpenGLExtension_KHR_debug
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_KHR_debugPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_KHR_debug
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_KHR_debug
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetObjectPtrLabel
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|void
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectPtrLabel"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ObjectPtrLabel
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|void
operator|*
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glObjectPtrLabel"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetObjectLabel
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectLabel"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ObjectLabel
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glObjectLabel"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PopDebugGroup
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPopDebugGroup"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PushDebugGroup
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPushDebugGroup"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetDebugMessageLog
operator|=
expr|reinterpret_cast
operator|<
name|GLuint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLuint
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDebugMessageLog"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageCallback
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLDEBUGPROC
argument_list|,
specifier|const
name|void
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageCallback"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageInsert
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageInsert"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DebugMessageControl
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDebugMessageControl"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_MESA_resize_buffers
name|QOpenGLExtension_MESA_resize_buffers
operator|::
name|QOpenGLExtension_MESA_resize_buffers
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_MESA_resize_buffersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_MESA_resize_buffers
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_resize_buffers
argument_list|)
expr_stmt|;
name|d
operator|->
name|ResizeBuffersMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glResizeBuffersMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_MESA_window_pos
name|QOpenGLExtension_MESA_window_pos
operator|::
name|QOpenGLExtension_MESA_window_pos
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_MESA_window_posPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_MESA_window_pos
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_MESA_window_pos
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos4svMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4svMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos4sMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4sMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos4ivMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4ivMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos4iMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4iMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos4fvMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4fvMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos4fMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4fMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos4dvMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4dvMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos4dMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos4dMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos3svMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3svMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3sMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3sMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos3ivMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3ivMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3iMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3iMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos3fvMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3fvMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3fMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3fMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos3dvMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3dvMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos3dMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos3dMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2svMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLshort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2svMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2sMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2sMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2ivMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2ivMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2iMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2iMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2fvMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2fvMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2fMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2fMESA"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WindowPos2dvMESA
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2dvMESA"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|WindowPos2dMESA
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWindowPos2dMESA"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_bindless_texture
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|QOpenGLExtension_NV_bindless_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_bindless_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_bindless_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_bindless_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsImageHandleResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint64
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsImageHandleResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsTextureHandleResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint64
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsTextureHandleResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformHandleui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformHandleui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformHandleui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint64
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformHandleui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformHandleui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformHandleui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|UniformHandleui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint64
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformHandleui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MakeImageHandleNonResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint64
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeImageHandleNonResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MakeImageHandleResidentNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint64
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeImageHandleResidentNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetImageHandleNV
operator|=
expr|reinterpret_cast
operator|<
name|GLuint64
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLboolean
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetImageHandleNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MakeTextureHandleNonResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint64
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeTextureHandleNonResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MakeTextureHandleResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint64
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeTextureHandleResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetTextureSamplerHandleNV
operator|=
expr|reinterpret_cast
operator|<
name|GLuint64
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureSamplerHandleNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTextureHandleNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint64
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTextureHandleNV"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_conditional_render
name|QOpenGLExtension_NV_conditional_render
operator|::
name|QOpenGLExtension_NV_conditional_render
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_conditional_renderPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_conditional_render
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_conditional_render
argument_list|)
expr_stmt|;
name|d
operator|->
name|EndConditionalRenderNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndConditionalRenderNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginConditionalRenderNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginConditionalRenderNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_copy_image
name|QOpenGLExtension_NV_copy_image
operator|::
name|QOpenGLExtension_NV_copy_image
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_copy_imagePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_copy_image
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_copy_image
argument_list|)
expr_stmt|;
name|d
operator|->
name|CopyImageSubDataNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyImageSubDataNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_depth_buffer_float
name|QOpenGLExtension_NV_depth_buffer_float
operator|::
name|QOpenGLExtension_NV_depth_buffer_float
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_depth_buffer_floatPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_depth_buffer_float
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_depth_buffer_float
argument_list|)
expr_stmt|;
name|d
operator|->
name|DepthBoundsdNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDepthBoundsdNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ClearDepthdNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLdouble
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glClearDepthdNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DepthRangedNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDepthRangedNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_evaluators
name|QOpenGLExtension_NV_evaluators
operator|::
name|QOpenGLExtension_NV_evaluators
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_evaluatorsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_evaluators
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_evaluators
argument_list|)
expr_stmt|;
name|d
operator|->
name|EvalMapsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEvalMapsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMapAttribParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMapAttribParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMapAttribParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMapAttribParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMapParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMapParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMapParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMapParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMapControlPointsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMapControlPointsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MapControlPointsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLboolean
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapControlPointsNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_explicit_multisample
name|QOpenGLExtension_NV_explicit_multisample
operator|::
name|QOpenGLExtension_NV_explicit_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_explicit_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_explicit_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_explicit_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexRenderbufferNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexRenderbufferNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SampleMaskIndexedNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLbitfield
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSampleMaskIndexedNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetMultisamplefvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetMultisamplefvNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_fence
name|QOpenGLExtension_NV_fence
operator|::
name|QOpenGLExtension_NV_fence
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_fencePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_fence
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
expr_stmt|;
name|d
operator|->
name|SetFenceNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSetFenceNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FinishFenceNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFinishFenceNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFenceivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFenceivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TestFenceNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTestFenceNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsFenceNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsFenceNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenFencesNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenFencesNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteFencesNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteFencesNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_fragment_program
name|QOpenGLExtension_NV_fragment_program
operator|::
name|QOpenGLExtension_NV_fragment_program
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_fragment_programPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_fragment_program
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fragment_program
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramNamedParameterdvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramNamedParameterdvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramNamedParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramNamedParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramNamedParameter4dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramNamedParameter4dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramNamedParameter4fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramNamedParameter4fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramNamedParameter4dNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramNamedParameter4dNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramNamedParameter4fNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramNamedParameter4fNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_framebuffer_multisample_coverage
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
operator|::
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_framebuffer_multisample_coveragePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_framebuffer_multisample_coverage
argument_list|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageMultisampleCoverageNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageMultisampleCoverageNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_geometry_program4
name|QOpenGLExtension_NV_geometry_program4
operator|::
name|QOpenGLExtension_NV_geometry_program4
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_geometry_program4Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_geometry_program4
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_geometry_program4
argument_list|)
expr_stmt|;
name|d
operator|->
name|FramebufferTextureFaceEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTextureFaceEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTextureLayerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTextureLayerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FramebufferTextureEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTextureEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramVertexLimitNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramVertexLimitNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_gpu_program4
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|QOpenGLExtension_NV_gpu_program4
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_gpu_program4Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_gpu_program4
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program4
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramEnvParameterIuivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramEnvParameterIuivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramEnvParameterIivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramEnvParameterIivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramLocalParameterIuivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramLocalParameterIuivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramLocalParameterIivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramLocalParameterIivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParametersI4uivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParametersI4uivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameterI4uivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameterI4uivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameterI4uiNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameterI4uiNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParametersI4ivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParametersI4ivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameterI4ivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameterI4ivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramEnvParameterI4iNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramEnvParameterI4iNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParametersI4uivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParametersI4uivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameterI4uivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameterI4uivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameterI4uiNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameterI4uiNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParametersI4ivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParametersI4ivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameterI4ivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameterI4ivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramLocalParameterI4iNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramLocalParameterI4iNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_gpu_program5
name|QOpenGLExtension_NV_gpu_program5
operator|::
name|QOpenGLExtension_NV_gpu_program5
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_gpu_program5Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_gpu_program5
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_program5
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramSubroutineParameteruivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramSubroutineParameteruivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramSubroutineParametersuivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramSubroutineParametersuivNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_gpu_shader5
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|QOpenGLExtension_NV_gpu_shader5
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_gpu_shader5Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_gpu_shader5
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_gpu_shader5
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformi64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformi64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform4i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform4i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform3i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform3i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform2i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform2i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniform1i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniform1i64NV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_half_float
name|QOpenGLExtension_NV_half_float
operator|::
name|QOpenGLExtension_NV_half_float
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_half_floatPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_half_float
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_half_float
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs4hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs4hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs3hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs3hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs2hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs2hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs1hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs1hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexWeighthvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexWeighthvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexWeighthNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhalfNV
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexWeighthNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SecondaryColor3hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColor3hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FogCoordhvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoordhvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|FogCoordhNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhalfNV
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoordhNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord4hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord4hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord3hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord3hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord2hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord2hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1hvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLhalfNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1hvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|MultiTexCoord1hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiTexCoord1hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord4hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord4hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexCoord4hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord4hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord3hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord3hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexCoord3hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord3hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexCoord2hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord1hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord1hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexCoord1hNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLhalfNV
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord1hNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Color4hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Color4hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color3hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor3hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Color3hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor3hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Normal3hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormal3hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Normal3hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormal3hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Vertex4hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertex4hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Vertex4hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertex4hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Vertex3hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertex3hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Vertex3hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertex3hNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Vertex2hvNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLhalfNV
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertex2hvNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|Vertex2hNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLhalfNV
argument_list|,
name|GLhalfNV
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertex2hNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_occlusion_query
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|QOpenGLExtension_NV_occlusion_query
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_occlusion_queryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_occlusion_query
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_occlusion_query
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetOcclusionQueryuivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetOcclusionQueryuivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetOcclusionQueryivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetOcclusionQueryivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndOcclusionQueryNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndOcclusionQueryNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginOcclusionQueryNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginOcclusionQueryNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsOcclusionQueryNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsOcclusionQueryNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteOcclusionQueriesNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteOcclusionQueriesNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenOcclusionQueriesNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenOcclusionQueriesNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_parameter_buffer_object
name|QOpenGLExtension_NV_parameter_buffer_object
operator|::
name|QOpenGLExtension_NV_parameter_buffer_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_parameter_buffer_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_parameter_buffer_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_parameter_buffer_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramBufferParametersIuivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramBufferParametersIuivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramBufferParametersIivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramBufferParametersIivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramBufferParametersfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramBufferParametersfvNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_path_rendering
name|QOpenGLExtension_NV_path_rendering
operator|::
name|QOpenGLExtension_NV_path_rendering
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_path_renderingPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_path_rendering
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_path_rendering
argument_list|)
expr_stmt|;
name|d
operator|->
name|PointAlongPathNV
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
operator|*
argument_list|,
name|GLfloat
operator|*
argument_list|,
name|GLfloat
operator|*
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointAlongPathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathLengthNV
operator|=
expr|reinterpret_cast
operator|<
name|GLfloat
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathLengthNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsPointInStrokePathNV
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsPointInStrokePathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsPointInFillPathNV
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsPointInFillPathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathTexGenfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathTexGenfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathTexGenivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathTexGenivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathColorGenfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathColorGenfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathColorGenivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathColorGenivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathSpacingNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathSpacingNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathMetricRangeNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLbitfield
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathMetricRangeNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathMetricsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLbitfield
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathMetricsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathDashArrayNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathDashArrayNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathCoordsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathCoordsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathCommandsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathCommandsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPathParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPathParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CoverStrokePathInstancedNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCoverStrokePathInstancedNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CoverFillPathInstancedNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCoverFillPathInstancedNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CoverStrokePathNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCoverStrokePathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CoverFillPathNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCoverFillPathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathFogGenNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathFogGenNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PathTexGenNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathTexGenNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathColorGenNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathColorGenNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathCoverDepthFuncNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathCoverDepthFuncNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|StencilStrokePathInstancedNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilStrokePathInstancedNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|StencilFillPathInstancedNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilFillPathInstancedNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|StencilStrokePathNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilStrokePathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|StencilFillPathNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStencilFillPathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathStencilDepthOffsetNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathStencilDepthOffsetNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathStencilFuncNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathStencilFuncNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathDashArrayNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathDashArrayNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathParameterfNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathParameterfNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathParameteriNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathParameteriNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TransformPathNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTransformPathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|InterpolatePathsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInterpolatePathsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyPathNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyPathNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|WeightPathsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glWeightPathsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathGlyphRangeNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLbitfield
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathGlyphRangeNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathGlyphsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLbitfield
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathGlyphsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathStringNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathStringNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathSubCoordsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathSubCoordsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathSubCommandsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathSubCommandsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathCoordsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathCoordsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PathCommandsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPathCommandsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsPathNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsPathNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeletePathsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeletePathsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenPathsNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLsizei
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenPathsNV"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_pixel_data_range
name|QOpenGLExtension_NV_pixel_data_range
operator|::
name|QOpenGLExtension_NV_pixel_data_range
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_pixel_data_rangePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_pixel_data_range
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_pixel_data_range
argument_list|)
expr_stmt|;
name|d
operator|->
name|FlushPixelDataRangeNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFlushPixelDataRangeNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PixelDataRangeNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelDataRangeNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_point_sprite
name|QOpenGLExtension_NV_point_sprite
operator|::
name|QOpenGLExtension_NV_point_sprite
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_point_spritePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_point_sprite
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_point_sprite
argument_list|)
expr_stmt|;
name|d
operator|->
name|PointParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PointParameteriNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameteriNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_present_video
name|QOpenGLExtension_NV_present_video
operator|::
name|QOpenGLExtension_NV_present_video
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_present_videoPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_present_video
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_present_video
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetVideoui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideoui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVideoi64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideoi64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVideouivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideouivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVideoivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideoivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PresentFrameDualFillNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPresentFrameDualFillNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PresentFrameKeyedNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPresentFrameKeyedNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_primitive_restart
name|QOpenGLExtension_NV_primitive_restart
operator|::
name|QOpenGLExtension_NV_primitive_restart
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_primitive_restartPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_primitive_restart
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_primitive_restart
argument_list|)
expr_stmt|;
name|d
operator|->
name|PrimitiveRestartIndexNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPrimitiveRestartIndexNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PrimitiveRestartNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPrimitiveRestartNV"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_register_combiners
name|QOpenGLExtension_NV_register_combiners
operator|::
name|QOpenGLExtension_NV_register_combiners
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_register_combinersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_register_combiners
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFinalCombinerInputParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFinalCombinerInputParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFinalCombinerInputParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFinalCombinerInputParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetCombinerOutputParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCombinerOutputParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetCombinerOutputParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCombinerOutputParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetCombinerInputParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCombinerInputParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetCombinerInputParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCombinerInputParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FinalCombinerInputNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFinalCombinerInputNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CombinerOutputNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCombinerOutputNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CombinerInputNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCombinerInputNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CombinerParameteriNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCombinerParameteriNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CombinerParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCombinerParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CombinerParameterfNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCombinerParameterfNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CombinerParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCombinerParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_register_combiners2
name|QOpenGLExtension_NV_register_combiners2
operator|::
name|QOpenGLExtension_NV_register_combiners2
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_register_combiners2Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_register_combiners2
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_register_combiners2
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetCombinerStageParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCombinerStageParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CombinerStageParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCombinerStageParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_shader_buffer_load
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|QOpenGLExtension_NV_shader_buffer_load
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_shader_buffer_loadPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_shader_buffer_load
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_shader_buffer_load
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetUniformui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetUniformui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniformui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Uniformui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUniformui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetIntegerui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetIntegerui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetNamedBufferParameterui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetNamedBufferParameterui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetBufferParameterui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetBufferParameterui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsNamedBufferResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsNamedBufferResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MakeNamedBufferNonResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeNamedBufferNonResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MakeNamedBufferResidentNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeNamedBufferResidentNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsBufferResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsBufferResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MakeBufferNonResidentNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeBufferNonResidentNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|MakeBufferResidentNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMakeBufferResidentNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_texture_barrier
name|QOpenGLExtension_NV_texture_barrier
operator|::
name|QOpenGLExtension_NV_texture_barrier
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_texture_barrierPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_texture_barrier
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_barrier
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureBarrierNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureBarrierNV"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_texture_multisample
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|QOpenGLExtension_NV_texture_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_texture_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_texture_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_texture_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureImage3DMultisampleCoverageNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage3DMultisampleCoverageNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureImage2DMultisampleCoverageNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage2DMultisampleCoverageNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureImage3DMultisampleNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage3DMultisampleNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TextureImage2DMultisampleNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage2DMultisampleNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexImage3DMultisampleCoverageNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage3DMultisampleCoverageNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexImage2DMultisampleCoverageNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage2DMultisampleCoverageNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_transform_feedback
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|QOpenGLExtension_NV_transform_feedback
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_transform_feedbackPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_transform_feedback
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback
argument_list|)
expr_stmt|;
name|d
operator|->
name|TransformFeedbackStreamAttribsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTransformFeedbackStreamAttribsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTransformFeedbackVaryingNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTransformFeedbackVaryingNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetActiveVaryingNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLenum
operator|*
argument_list|,
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetActiveVaryingNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVaryingLocationNV
operator|=
expr|reinterpret_cast
operator|<
name|GLint
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVaryingLocationNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ActiveVaryingNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLchar
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glActiveVaryingNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TransformFeedbackVaryingsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTransformFeedbackVaryingsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindBufferBaseNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindBufferBaseNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindBufferOffsetNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindBufferOffsetNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindBufferRangeNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindBufferRangeNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TransformFeedbackAttribsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTransformFeedbackAttribsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndTransformFeedbackNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndTransformFeedbackNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginTransformFeedbackNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginTransformFeedbackNV"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_transform_feedback2
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|QOpenGLExtension_NV_transform_feedback2
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_transform_feedback2Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_transform_feedback2
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_transform_feedback2
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawTransformFeedbackNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawTransformFeedbackNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ResumeTransformFeedbackNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glResumeTransformFeedbackNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PauseTransformFeedbackNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPauseTransformFeedbackNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsTransformFeedbackNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsTransformFeedbackNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenTransformFeedbacksNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenTransformFeedbacksNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteTransformFeedbacksNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteTransformFeedbacksNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindTransformFeedbackNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindTransformFeedbackNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_vdpau_interop
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|QOpenGLExtension_NV_vdpau_interop
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_vdpau_interopPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_vdpau_interop
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vdpau_interop
argument_list|)
expr_stmt|;
name|d
operator|->
name|VDPAUUnmapSurfacesNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLvdpauSurfaceNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUUnmapSurfacesNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VDPAUMapSurfacesNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLvdpauSurfaceNV
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUMapSurfacesNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VDPAUSurfaceAccessNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLvdpauSurfaceNV
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUSurfaceAccessNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VDPAUGetSurfaceivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLvdpauSurfaceNV
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
operator|*
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUGetSurfaceivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VDPAUUnregisterSurfaceNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLvdpauSurfaceNV
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUUnregisterSurfaceNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|VDPAUIsSurfaceNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLvdpauSurfaceNV
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUIsSurfaceNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|VDPAURegisterOutputSurfaceNV
operator|=
expr|reinterpret_cast
operator|<
name|GLvdpauSurfaceNV
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAURegisterOutputSurfaceNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VDPAURegisterVideoSurfaceNV
operator|=
expr|reinterpret_cast
operator|<
name|GLvdpauSurfaceNV
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLvoid
operator|*
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAURegisterVideoSurfaceNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VDPAUFiniNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUFiniNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|VDPAUInitNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLvoid
operator|*
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVDPAUInitNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_vertex_array_range
name|QOpenGLExtension_NV_vertex_array_range
operator|::
name|QOpenGLExtension_NV_vertex_array_range
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_vertex_array_rangePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_vertex_array_range
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_array_range
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexArrayRangeNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexArrayRangeNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FlushVertexArrayRangeNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFlushVertexArrayRangeNV"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_vertex_attrib_integer_64bit
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_vertex_attrib_integer_64bitPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_attrib_integer_64bit
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexAttribLFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribLFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribLui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribLui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribLi64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribLi64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1ui64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1ui64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1ui64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1ui64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1i64vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1i64vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL4i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL4i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL3i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL3i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL2i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint64EXT
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL2i64NV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribL1i64NV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint64EXT
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribL1i64NV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_vertex_buffer_unified_memory
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_vertex_buffer_unified_memoryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_buffer_unified_memory
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetIntegerui64i_vNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetIntegerui64i_vNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribIFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribIFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLboolean
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FogCoordFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogCoordFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SecondaryColorFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSecondaryColorFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EdgeFlagFormatNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLsizei
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEdgeFlagFormatNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexCoordFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoordFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IndexFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIndexFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|NormalFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormalFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexFormatNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexFormatNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BufferAddressRangeNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint64EXT
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBufferAddressRangeNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_vertex_program
name|QOpenGLExtension_NV_vertex_program
operator|::
name|QOpenGLExtension_NV_vertex_program
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_vertex_programPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_vertex_program
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs4ubvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs4ubvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs4svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs4svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs4fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs4fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs4dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs4dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs3svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs3svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs3fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs3fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs3dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs3dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs2svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs2svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs2fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs2fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs2dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs2dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs1svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs1svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs1fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs1fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribs1dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribs1dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4ubvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4ubvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4ubNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4ubNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4sNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4sNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4fNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4fNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib4dNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib4dNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3sNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3sNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3fNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3fNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib3dNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib3dNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2sNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2sNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2fNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2fNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib2dNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib2dNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1svNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1svNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1sNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLshort
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1sNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1fNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1fNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttrib1dNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttrib1dNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribPointerNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribPointerNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TrackMatrixNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTrackMatrixNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|RequestResidentProgramsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRequestResidentProgramsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramParameters4fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameters4fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramParameters4dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameters4dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramParameter4fvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameter4fvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramParameter4fNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameter4fNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramParameter4dvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameter4dvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ProgramParameter4dNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameter4dNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|LoadProgramNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLoadProgramNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|IsProgramNV
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsProgramNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribPointervNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribPointervNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribdvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribdvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTrackMatrixivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTrackMatrixivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramStringNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramStringNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetProgramParameterdvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramParameterdvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenProgramsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenProgramsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ExecuteProgramNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExecuteProgramNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeleteProgramsNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteProgramsNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindProgramNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindProgramNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|AreProgramsResidentNV
operator|=
expr|reinterpret_cast
operator|<
name|GLboolean
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|,
name|GLboolean
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAreProgramsResidentNV"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_vertex_program4
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|QOpenGLExtension_NV_vertex_program4
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_vertex_program4Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_vertex_program4
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_vertex_program4
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribIuivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribIuivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVertexAttribIivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVertexAttribIivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribIPointerEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribIPointerEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4usvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLushort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4usvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4ubvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4ubvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4svEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLshort
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4svEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4bvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLbyte
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4bvEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI3uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI3uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI2uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI2uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI1uivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLuint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI1uivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI3ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI3ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI2ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI2ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI1ivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI1ivEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI3uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI3uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI2uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI2uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI1uiEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI1uiEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI4iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI4iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI3iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI3iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI2iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI2iEXT"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VertexAttribI1iEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribI1iEXT"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_video_capture
name|QOpenGLExtension_NV_video_capture
operator|::
name|QOpenGLExtension_NV_video_capture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_video_capturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_video_capture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_video_capture
argument_list|)
expr_stmt|;
name|d
operator|->
name|VideoCaptureStreamParameterdvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVideoCaptureStreamParameterdvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VideoCaptureStreamParameterfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVideoCaptureStreamParameterfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VideoCaptureStreamParameterivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVideoCaptureStreamParameterivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|VideoCaptureNV
operator|=
expr|reinterpret_cast
operator|<
name|GLenum
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
operator|*
argument_list|,
name|GLuint64EXT
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVideoCaptureNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVideoCaptureStreamdvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideoCaptureStreamdvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVideoCaptureStreamfvNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideoCaptureStreamfvNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVideoCaptureStreamivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideoCaptureStreamivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetVideoCaptureivNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetVideoCaptureivNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|EndVideoCaptureNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndVideoCaptureNV"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindVideoCaptureStreamTextureNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindVideoCaptureStreamTextureNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BindVideoCaptureStreamBufferNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLintptrARB
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindVideoCaptureStreamBufferNV"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|BeginVideoCaptureNV
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginVideoCaptureNV"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_PGI_misc_hints
name|QOpenGLExtension_PGI_misc_hints
operator|::
name|QOpenGLExtension_PGI_misc_hints
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_PGI_misc_hintsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_PGI_misc_hints
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_PGI_misc_hints
argument_list|)
expr_stmt|;
name|d
operator|->
name|HintPGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glHintPGI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_detail_texture
name|QOpenGLExtension_SGIS_detail_texture
operator|::
name|QOpenGLExtension_SGIS_detail_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_detail_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_detail_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_detail_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetDetailTexFuncSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDetailTexFuncSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DetailTexFuncSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDetailTexFuncSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_fog_function
name|QOpenGLExtension_SGIS_fog_function
operator|::
name|QOpenGLExtension_SGIS_fog_function
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_fog_functionPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_fog_function
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_fog_function
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFogFuncSGIS
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLfloat
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFogFuncSGIS"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|FogFuncSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFogFuncSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_multisample
name|QOpenGLExtension_SGIS_multisample
operator|::
name|QOpenGLExtension_SGIS_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|SamplePatternSGIS
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSamplePatternSGIS"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|SampleMaskSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLclampf
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSampleMaskSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_pixel_texture
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|QOpenGLExtension_SGIS_pixel_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_pixel_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_pixel_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_pixel_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPixelTexGenParameterfvSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPixelTexGenParameterfvSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetPixelTexGenParameterivSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPixelTexGenParameterivSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTexGenParameterfvSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTexGenParameterfvSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTexGenParameterfSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTexGenParameterfSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTexGenParameterivSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTexGenParameterivSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PixelTexGenParameteriSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTexGenParameteriSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_point_parameters
name|QOpenGLExtension_SGIS_point_parameters
operator|::
name|QOpenGLExtension_SGIS_point_parameters
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_point_parametersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_point_parameters
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_point_parameters
argument_list|)
expr_stmt|;
name|d
operator|->
name|PointParameterfvSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameterfvSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|PointParameterfSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPointParameterfSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_sharpen_texture
name|QOpenGLExtension_SGIS_sharpen_texture
operator|::
name|QOpenGLExtension_SGIS_sharpen_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_sharpen_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_sharpen_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_sharpen_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetSharpenTexFuncSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetSharpenTexFuncSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SharpenTexFuncSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSharpenTexFuncSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_texture4D
name|QOpenGLExtension_SGIS_texture4D
operator|::
name|QOpenGLExtension_SGIS_texture4D
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_texture4DPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_texture4D
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture4D
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexSubImage4DSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage4DSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexImage4DSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage4DSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_texture_color_mask
name|QOpenGLExtension_SGIS_texture_color_mask
operator|::
name|QOpenGLExtension_SGIS_texture_color_mask
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_texture_color_maskPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_texture_color_mask
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture_color_mask
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureColorMaskSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLboolean
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureColorMaskSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIS_texture_filter4
name|QOpenGLExtension_SGIS_texture_filter4
operator|::
name|QOpenGLExtension_SGIS_texture_filter4
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIS_texture_filter4Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIS_texture_filter4
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIS_texture_filter4
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexFilterFuncSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexFilterFuncSGIS"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetTexFilterFuncSGIS
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTexFilterFuncSGIS"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_async
name|QOpenGLExtension_SGIX_async
operator|::
name|QOpenGLExtension_SGIX_async
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_asyncPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_async
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_async
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsAsyncMarkerSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|GLboolean
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsAsyncMarkerSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteAsyncMarkersSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteAsyncMarkersSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GenAsyncMarkersSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|GLuint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLsizei
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenAsyncMarkersSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PollAsyncSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|GLint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPollAsyncSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|FinishAsyncSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|GLint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFinishAsyncSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|AsyncMarkerSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAsyncMarkerSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_flush_raster
name|QOpenGLExtension_SGIX_flush_raster
operator|::
name|QOpenGLExtension_SGIX_flush_raster
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_flush_rasterPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_flush_raster
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_flush_raster
argument_list|)
expr_stmt|;
name|d
operator|->
name|FlushRasterSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFlushRasterSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_fragment_lighting
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|QOpenGLExtension_SGIX_fragment_lighting
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_fragment_lightingPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_fragment_lighting
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_fragment_lighting
argument_list|)
expr_stmt|;
name|d
operator|->
name|LightEnviSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLightEnviSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFragmentMaterialivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFragmentMaterialivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFragmentMaterialfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFragmentMaterialfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFragmentLightivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFragmentLightivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetFragmentLightfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFragmentLightfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentMaterialivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentMaterialivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentMaterialiSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentMaterialiSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentMaterialfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentMaterialfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentMaterialfSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentMaterialfSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightModelivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightModelivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightModeliSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightModeliSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightModelfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightModelfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightModelfSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightModelfSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightiSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightiSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentLightfSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentLightfSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|FragmentColorMaterialSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFragmentColorMaterialSGIX"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_framezoom
name|QOpenGLExtension_SGIX_framezoom
operator|::
name|QOpenGLExtension_SGIX_framezoom
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_framezoomPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_framezoom
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_framezoom
argument_list|)
expr_stmt|;
name|d
operator|->
name|FrameZoomSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFrameZoomSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_igloo_interface
name|QOpenGLExtension_SGIX_igloo_interface
operator|::
name|QOpenGLExtension_SGIX_igloo_interface
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_igloo_interfacePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_igloo_interface
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_igloo_interface
argument_list|)
expr_stmt|;
name|d
operator|->
name|IglooInterfaceSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIglooInterfaceSGIX"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_instruments
name|QOpenGLExtension_SGIX_instruments
operator|::
name|QOpenGLExtension_SGIX_instruments
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_instrumentsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_instruments
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_instruments
argument_list|)
expr_stmt|;
name|d
operator|->
name|StopInstrumentsSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStopInstrumentsSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|StartInstrumentsSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStartInstrumentsSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReadInstrumentsSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReadInstrumentsSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|PollInstrumentsSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|GLint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPollInstrumentsSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|InstrumentsBufferSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLsizei
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInstrumentsBufferSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetInstrumentsSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|GLint
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetInstrumentsSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_list_priority
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|QOpenGLExtension_SGIX_list_priority
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_list_priorityPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_list_priority
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_list_priority
argument_list|)
expr_stmt|;
name|d
operator|->
name|ListParameterivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glListParameterivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ListParameteriSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glListParameteriSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ListParameterfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glListParameterfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ListParameterfSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glListParameterfSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetListParameterivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetListParameterivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetListParameterfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetListParameterfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_pixel_texture
name|QOpenGLExtension_SGIX_pixel_texture
operator|::
name|QOpenGLExtension_SGIX_pixel_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_pixel_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_pixel_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_pixel_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|PixelTexGenSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPixelTexGenSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_polynomial_ffd
name|QOpenGLExtension_SGIX_polynomial_ffd
operator|::
name|QOpenGLExtension_SGIX_polynomial_ffd
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_polynomial_ffdPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_polynomial_ffd
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_polynomial_ffd
argument_list|)
expr_stmt|;
name|d
operator|->
name|LoadIdentityDeformationMapSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLoadIdentityDeformationMapSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeformSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLbitfield
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeformSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeformationMap3fSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeformationMap3fSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|DeformationMap3dSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLdouble
argument_list|,
name|GLdouble
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
specifier|const
name|GLdouble
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeformationMap3dSGIX"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_reference_plane
name|QOpenGLExtension_SGIX_reference_plane
operator|::
name|QOpenGLExtension_SGIX_reference_plane
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_reference_planePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_reference_plane
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_reference_plane
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReferencePlaneSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLdouble
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReferencePlaneSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_sprite
name|QOpenGLExtension_SGIX_sprite
operator|::
name|QOpenGLExtension_SGIX_sprite
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_spritePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_sprite
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_sprite
argument_list|)
expr_stmt|;
name|d
operator|->
name|SpriteParameterivSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSpriteParameterivSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SpriteParameteriSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSpriteParameteriSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SpriteParameterfvSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSpriteParameterfvSGIX"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|SpriteParameterfSGIX
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSpriteParameterfSGIX"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGIX_tag_sample_buffer
name|QOpenGLExtension_SGIX_tag_sample_buffer
operator|::
name|QOpenGLExtension_SGIX_tag_sample_buffer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGIX_tag_sample_bufferPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGIX_tag_sample_buffer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGIX_tag_sample_buffer
argument_list|)
expr_stmt|;
name|d
operator|->
name|TagSampleBufferSGIX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTagSampleBufferSGIX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SGI_color_table
name|QOpenGLExtension_SGI_color_table
operator|::
name|QOpenGLExtension_SGI_color_table
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SGI_color_tablePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SGI_color_table
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SGI_color_table
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetColorTableParameterivSGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetColorTableParameterivSGI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetColorTableParameterfvSGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetColorTableParameterfvSGI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|GetColorTableSGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetColorTableSGI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|CopyColorTableSGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyColorTableSGI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorTableParameterivSGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorTableParameterivSGI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorTableParameterfvSGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorTableParameterfvSGI"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ColorTableSGI
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColorTableSGI"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SUNX_constant_data
name|QOpenGLExtension_SUNX_constant_data
operator|::
name|QOpenGLExtension_SUNX_constant_data
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SUNX_constant_dataPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SUNX_constant_data
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SUNX_constant_data
argument_list|)
expr_stmt|;
name|d
operator|->
name|FinishTextureSUNX
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFinishTextureSUNX"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SUN_global_alpha
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|QOpenGLExtension_SUN_global_alpha
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SUN_global_alphaPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SUN_global_alpha
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_global_alpha
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactoruiSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactoruiSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactorusSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLushort
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactorusSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactorubSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLubyte
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactorubSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactordSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLdouble
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactordSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactorfSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLfloat
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactorfSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactoriSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactoriSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactorsSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLshort
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactorsSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|GlobalAlphaFactorbSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLbyte
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGlobalAlphaFactorbSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SUN_mesh_array
name|QOpenGLExtension_SUN_mesh_array
operator|::
name|QOpenGLExtension_SUN_mesh_array
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SUN_mesh_arrayPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SUN_mesh_array
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_mesh_array
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawMeshArraysSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawMeshArraysSUN"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SUN_triangle_list
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|QOpenGLExtension_SUN_triangle_list
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SUN_triangle_listPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SUN_triangle_list
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_triangle_list
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodePointerSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodePointerSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeubvSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLubyte
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeubvSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeusvSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLushort
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeusvSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuivSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
specifier|const
name|GLuint
operator|*
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuivSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeubSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLubyte
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeubSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeusSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLushort
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeusSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiSUN
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLuint
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiSUN"
argument_list|)
argument_list|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_SUN_vertex
name|QOpenGLExtension_SUN_vertex
operator|::
name|QOpenGLExtension_SUN_vertex
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_SUN_vertexPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_SUN_vertex
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_SUN_vertex
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiTexCoord2fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiTexCoord2fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiTexCoord2fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiColor4fNormal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiColor4fNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiColor4fNormal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiColor4fNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiNormal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiNormal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiColor3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiColor3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiColor3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiColor3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiColor4ubVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiColor4ubVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiColor4ubVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiColor4ubVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLuint
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|ReplacementCodeuiVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReplacementCodeuiVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord4fColor4fNormal3fVertex4fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord4fColor4fNormal3fVertex4fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord4fColor4fNormal3fVertex4fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord4fColor4fNormal3fVertex4fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fColor4fNormal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fColor4fNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fColor4fNormal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fColor4fNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fNormal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fNormal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fColor3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fColor3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fColor3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fColor3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fColor4ubVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLubyte
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fColor4ubVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fColor4ubVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fColor4ubVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord4fVertex4fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord4fVertex4fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord4fVertex4fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord4fVertex4fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|TexCoord2fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexCoord2fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color4fNormal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4fNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color4fNormal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4fNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Normal3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormal3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Normal3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glNormal3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color3fVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLfloat
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor3fVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color3fVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor3fVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color4ubVertex3fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLubyte
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4ubVertex3fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color4ubVertex3fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4ubVertex3fSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color4ubVertex2fvSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
specifier|const
name|GLubyte
operator|*
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4ubVertex2fvSUN"
argument_list|)
operator|)
expr_stmt|;
name|d
operator|->
name|Color4ubVertex2fSUN
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLubyte
argument_list|,
name|GLfloat
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glColor4ubVertex2fSUN"
argument_list|)
operator|)
expr_stmt|;
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_else
else|#
directive|else
end_else
begin_constructor
DECL|function|QOpenGLExtension_OES_EGL_image
name|QOpenGLExtension_OES_EGL_image
operator|::
name|QOpenGLExtension_OES_EGL_image
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_OES_EGL_imagePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_OES_EGL_image
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_EGL_image
argument_list|)
expr_stmt|;
name|d
operator|->
name|EGLImageTargetTexture2DOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLeglImageOES
name|image
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEGLImageTargetTexture2DOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|EGLImageTargetRenderbufferStorageOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLeglImageOES
name|image
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEGLImageTargetRenderbufferStorageOESs"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_OES_get_program_binary
name|QOpenGLExtension_OES_get_program_binary
operator|::
name|QOpenGLExtension_OES_get_program_binary
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_OES_get_program_binaryPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_OES_get_program_binary
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_get_program_binary
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramBinaryOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLenum
operator|*
name|binaryFormat
operator|,
name|GLvoid
operator|*
name|binary
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramBinaryOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramBinaryOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|binaryFormat
operator|,
specifier|const
name|GLvoid
operator|*
name|binary
operator|,
name|GLint
name|length
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramBinaryOES"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_OES_mapbuffer
name|QOpenGLExtension_OES_mapbuffer
operator|::
name|QOpenGLExtension_OES_mapbuffer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_OES_mapbufferPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_OES_mapbuffer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_mapbuffer
argument_list|)
expr_stmt|;
name|d
operator|->
name|MapBufferOES
operator|=
operator|(
name|void
operator|*
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|access
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMapBufferOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|UnmapBufferOES
operator|=
operator|(
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUnmapBufferOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetBufferPointervOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetBufferPointervOES"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_OES_texture_3D
name|QOpenGLExtension_OES_texture_3D
operator|::
name|QOpenGLExtension_OES_texture_3D
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_OES_texture_3DPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_OES_texture_3D
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_texture_3D
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexImage3DOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage3DOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexSubImage3DOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
name|pixels
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage3DOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|CopyTexSubImage3DOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCopyTexSubImage3DOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|CompressedTexImage3DOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLint
name|border
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage3DOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|CompressedTexSubImage3DOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLsizei
name|imageSize
operator|,
specifier|const
name|GLvoid
operator|*
name|data
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage3DOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture3DOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLint
name|zoffset
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture3DOES"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_OES_vertex_array_object
name|QOpenGLExtension_OES_vertex_array_object
operator|::
name|QOpenGLExtension_OES_vertex_array_object
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_OES_vertex_array_objectPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_OES_vertex_array_object
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_OES_vertex_array_object
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindVertexArrayOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|array
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindVertexArrayOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteVertexArraysOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|arrays
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteVertexArraysOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenVertexArraysOES
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|arrays
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenVertexArraysOES"
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsVertexArrayOES
operator|=
operator|(
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|array
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsVertexArrayOES"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_AMD_performance_monitor
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|QOpenGLExtension_AMD_performance_monitor
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_AMD_performance_monitorPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_AMD_performance_monitor
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_AMD_performance_monitor
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorGroupsAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLint
operator|*
name|numGroups
operator|,
name|GLsizei
name|groupsSize
operator|,
name|GLuint
operator|*
name|groups
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorGroupsAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCountersAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLint
operator|*
name|numCounters
operator|,
name|GLint
operator|*
name|maxActiveCounters
operator|,
name|GLsizei
name|counterSize
operator|,
name|GLuint
operator|*
name|counters
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCountersAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorGroupStringAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|groupString
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorGroupStringAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCounterStringAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLuint
name|counter
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|counterString
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCounterStringAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCounterInfoAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|group
operator|,
name|GLuint
name|counter
operator|,
name|GLenum
name|pname
operator|,
name|GLvoid
operator|*
name|data
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCounterInfoAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenPerfMonitorsAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|monitors
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenPerfMonitorsAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeletePerfMonitorsAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|monitors
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeletePerfMonitorsAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|SelectPerfMonitorCountersAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|monitor
operator|,
name|GLboolean
name|enable
operator|,
name|GLuint
name|group
operator|,
name|GLint
name|numCounters
operator|,
name|GLuint
operator|*
name|countersList
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSelectPerfMonitorCountersAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginPerfMonitorAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|monitor
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginPerfMonitorAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|EndPerfMonitorAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|monitor
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndPerfMonitorAMD"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetPerfMonitorCounterDataAMD
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|monitor
operator|,
name|GLenum
name|pname
operator|,
name|GLsizei
name|dataSize
operator|,
name|GLuint
operator|*
name|data
operator|,
name|GLint
operator|*
name|bytesWritten
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetPerfMonitorCounterDataAMD"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ANGLE_framebuffer_blit
name|QOpenGLExtension_ANGLE_framebuffer_blit
operator|::
name|QOpenGLExtension_ANGLE_framebuffer_blit
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ANGLE_framebuffer_blitPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ANGLE_framebuffer_blit
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_framebuffer_blit
argument_list|)
expr_stmt|;
name|d
operator|->
name|BlitFramebufferANGLE
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLint
name|srcX0
operator|,
name|GLint
name|srcY0
operator|,
name|GLint
name|srcX1
operator|,
name|GLint
name|srcY1
operator|,
name|GLint
name|dstX0
operator|,
name|GLint
name|dstY0
operator|,
name|GLint
name|dstX1
operator|,
name|GLint
name|dstY1
operator|,
name|GLbitfield
name|mask
operator|,
name|GLenum
name|filter
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBlitFramebufferANGLE"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ANGLE_framebuffer_multisample
name|QOpenGLExtension_ANGLE_framebuffer_multisample
operator|::
name|QOpenGLExtension_ANGLE_framebuffer_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ANGLE_framebuffer_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ANGLE_framebuffer_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_framebuffer_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageMultisampleANGLE
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageMultisampleANGLE"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ANGLE_instanced_arrays
name|QOpenGLExtension_ANGLE_instanced_arrays
operator|::
name|QOpenGLExtension_ANGLE_instanced_arrays
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ANGLE_instanced_arraysPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ANGLE_instanced_arrays
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_instanced_arrays
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawArraysInstancedANGLE
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
name|first
operator|,
name|GLsizei
name|count
operator|,
name|GLsizei
name|primcount
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawArraysInstancedANGLE"
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawElementsInstancedANGLE
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLsizei
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|void
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawElementsInstancedANGLE"
argument_list|)
expr_stmt|;
name|d
operator|->
name|VertexAttribDivisorANGLE
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|index
operator|,
name|GLuint
name|divisor
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glVertexAttribDivisorANGLE"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_ANGLE_translated_shader_source
name|QOpenGLExtension_ANGLE_translated_shader_source
operator|::
name|QOpenGLExtension_ANGLE_translated_shader_source
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_ANGLE_translated_shader_sourcePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_ANGLE_translated_shader_source
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_ANGLE_translated_shader_source
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetTranslatedShaderSourceANGLE
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|shader
operator|,
name|GLsizei
name|bufsize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|source
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetTranslatedShaderSourceANGLE"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_APPLE_framebuffer_multisample
name|QOpenGLExtension_APPLE_framebuffer_multisample
operator|::
name|QOpenGLExtension_APPLE_framebuffer_multisample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_APPLE_framebuffer_multisamplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_APPLE_framebuffer_multisample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_APPLE_framebuffer_multisample
argument_list|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageMultisampleAPPLE
operator|=
operator|(
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageMultisampleAPPLE"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ResolveMultisampleFramebufferAPPLE
operator|=
operator|(
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|void
argument_list|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glResolveMultisampleFramebufferAPPLE"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_debug_label
name|QOpenGLExtension_EXT_debug_label
operator|::
name|QOpenGLExtension_EXT_debug_label
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_debug_labelPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_debug_label
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_debug_label
argument_list|)
expr_stmt|;
name|d
operator|->
name|LabelObjectEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|object
operator|,
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|label
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glLabelObjectEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetObjectLabelEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLuint
name|object
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|label
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetObjectLabelEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_debug_marker
name|QOpenGLExtension_EXT_debug_marker
operator|::
name|QOpenGLExtension_EXT_debug_marker
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_debug_markerPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_debug_marker
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_debug_marker
argument_list|)
expr_stmt|;
name|d
operator|->
name|InsertEventMarkerEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|marker
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glInsertEventMarkerEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|PushGroupMarkerEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|length
operator|,
specifier|const
name|GLchar
operator|*
name|marker
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPushGroupMarkerEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|PopGroupMarkerEXT
operator|=
operator|(
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|void
argument_list|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glPopGroupMarkerEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_discard_framebuffer
name|QOpenGLExtension_EXT_discard_framebuffer
operator|::
name|QOpenGLExtension_EXT_discard_framebuffer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_discard_framebufferPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_discard_framebuffer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_discard_framebuffer
argument_list|)
expr_stmt|;
name|d
operator|->
name|DiscardFramebufferEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|numAttachments
operator|,
specifier|const
name|GLenum
operator|*
name|attachments
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDiscardFramebufferEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_multisampled_render_to_texture
name|QOpenGLExtension_EXT_multisampled_render_to_texture
operator|::
name|QOpenGLExtension_EXT_multisampled_render_to_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_multisampled_render_to_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_multisampled_render_to_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multisampled_render_to_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageMultisampleEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|samples
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageMultisampleEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture2DMultisampleEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|attachment
operator|,
name|GLenum
name|textarget
operator|,
name|GLuint
name|texture
operator|,
name|GLint
name|level
operator|,
name|GLsizei
name|samples
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture2DMultisampleEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_multi_draw_arrays
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|QOpenGLExtension_EXT_multi_draw_arrays
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_multi_draw_arraysPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_multi_draw_arrays
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_multi_draw_arrays
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiDrawArraysEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
name|GLint
operator|*
name|first
operator|,
name|GLsizei
operator|*
name|count
operator|,
name|GLsizei
name|primcount
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawArraysEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|MultiDrawElementsEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|mode
operator|,
specifier|const
name|GLsizei
operator|*
name|count
operator|,
name|GLenum
name|type
operator|,
specifier|const
name|GLvoid
operator|*
operator|*
name|indices
operator|,
name|GLsizei
name|primcount
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glMultiDrawElementsEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_occlusion_query_boolean
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|QOpenGLExtension_EXT_occlusion_query_boolean
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_occlusion_query_booleanPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_occlusion_query_boolean
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_occlusion_query_boolean
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenQueriesEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|ids
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenQueriesEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteQueriesEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|ids
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteQueriesEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsQueryEXT
operator|=
operator|(
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|id
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsQueryEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|BeginQueryEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLuint
name|id
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBeginQueryEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|EndQueryEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndQueryEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetQueryivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryivEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetQueryObjectuivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|id
operator|,
name|GLenum
name|pname
operator|,
name|GLuint
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetQueryObjectuivEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_robustness
name|QOpenGLExtension_EXT_robustness
operator|::
name|QOpenGLExtension_EXT_robustness
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_robustnessPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_robustness
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_robustness
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetGraphicsResetStatusEXT
operator|=
operator|(
name|GLenum
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|void
argument_list|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetGraphicsResetStatusEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReadnPixelsEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLsizei
name|bufSize
operator|,
name|void
operator|*
name|data
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReadnPixelsEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetnUniformfvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|float
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnUniformfvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetnUniformivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLint
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetnUniformivEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_separate_shader_objects
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|QOpenGLExtension_EXT_separate_shader_objects
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_separate_shader_objectsPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_separate_shader_objects
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_separate_shader_objects
argument_list|)
expr_stmt|;
name|d
operator|->
name|UseProgramStagesEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLbitfield
name|stages
operator|,
name|GLuint
name|program
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glUseProgramStagesEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ActiveShaderProgramEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLuint
name|program
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glActiveShaderProgramEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|CreateShaderProgramvEXT
operator|=
operator|(
name|GLuint
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|type
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLchar
operator|*
operator|*
name|strings
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCreateShaderProgramvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|BindProgramPipelineEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glBindProgramPipelineEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteProgramPipelinesEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|pipelines
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteProgramPipelinesEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenProgramPipelinesEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|pipelines
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenProgramPipelinesEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsProgramPipelineEXT
operator|=
operator|(
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsProgramPipelineEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramParameteriEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramParameteriEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramPipelineivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramPipelineivEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1iEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1iEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2iEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2iEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3iEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3iEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4iEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLint
name|x
operator|,
name|GLint
name|y
operator|,
name|GLint
name|z
operator|,
name|GLint
name|w
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4iEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1fEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1fEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2fEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2fEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3fEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3fEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4fEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLfloat
name|x
operator|,
name|GLfloat
name|y
operator|,
name|GLfloat
name|z
operator|,
name|GLfloat
name|w
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4fEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1ivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1ivEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2ivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2ivEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3ivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3ivEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4ivEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLint
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4ivEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform1fvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform1fvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform2fvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform2fvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform3fvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform3fvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniform4fvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniform4fvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix2fvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix2fvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix3fvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix3fvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ProgramUniformMatrix4fvEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLint
name|location
operator|,
name|GLsizei
name|count
operator|,
name|GLboolean
name|transpose
operator|,
specifier|const
name|GLfloat
operator|*
name|value
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glProgramUniformMatrix4fvEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ValidateProgramPipelineEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glValidateProgramPipelineEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetProgramPipelineInfoLogEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|pipeline
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|infoLog
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetProgramPipelineInfoLogEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_EXT_texture_storage
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|QOpenGLExtension_EXT_texture_storage
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_EXT_texture_storagePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_EXT_texture_storage
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_EXT_texture_storage
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexStorage1DEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage1DEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexStorage2DEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage2DEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|TexStorage3DEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage3DEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureStorage1DEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage1DEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureStorage2DEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage2DEXT"
argument_list|)
expr_stmt|;
name|d
operator|->
name|TextureStorage3DEXT
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|target
operator|,
name|GLsizei
name|levels
operator|,
name|GLenum
name|internalformat
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage3DEXT"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_IMG_multisampled_render_to_texture
name|QOpenGLExtension_IMG_multisampled_render_to_texture
operator|::
name|QOpenGLExtension_IMG_multisampled_render_to_texture
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_IMG_multisampled_render_to_texturePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_IMG_multisampled_render_to_texture
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_IMG_multisampled_render_to_texture
argument_list|)
expr_stmt|;
name|d
operator|->
name|RenderbufferStorageMultisampleIMG
operator|=
operator|(
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glRenderbufferStorageMultisampleIMG"
argument_list|)
expr_stmt|;
name|d
operator|->
name|FramebufferTexture2DMultisampleIMG
operator|=
operator|(
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFramebufferTexture2DMultisampleIMG"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_coverage_sample
name|QOpenGLExtension_NV_coverage_sample
operator|::
name|QOpenGLExtension_NV_coverage_sample
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_coverage_samplePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_coverage_sample
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_coverage_sample
argument_list|)
expr_stmt|;
name|d
operator|->
name|CoverageMaskNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLboolean
name|mask
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCoverageMaskNV"
argument_list|)
expr_stmt|;
name|d
operator|->
name|CoverageOperationNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|operation
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCoverageOperationNV"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_draw_buffers
name|QOpenGLExtension_NV_draw_buffers
operator|::
name|QOpenGLExtension_NV_draw_buffers
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_draw_buffersPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_draw_buffers
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_draw_buffers
argument_list|)
expr_stmt|;
name|d
operator|->
name|DrawBuffersNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLenum
operator|*
name|bufs
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDrawBuffersNV"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_fence
name|QOpenGLExtension_NV_fence
operator|::
name|QOpenGLExtension_NV_fence
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_fencePrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_fence
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_fence
argument_list|)
expr_stmt|;
name|d
operator|->
name|DeleteFencesNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
specifier|const
name|GLuint
operator|*
name|fences
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDeleteFencesNV"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GenFencesNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLsizei
name|n
operator|,
name|GLuint
operator|*
name|fences
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenFencesNV"
argument_list|)
expr_stmt|;
name|d
operator|->
name|IsFenceNV
operator|=
operator|(
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glIsFenceNV"
argument_list|)
expr_stmt|;
name|d
operator|->
name|TestFenceNV
operator|=
operator|(
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTestFenceNV"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetFenceivNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|fence
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetFenceivNV"
argument_list|)
expr_stmt|;
name|d
operator|->
name|FinishFenceNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|fence
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glFinishFenceNV"
argument_list|)
expr_stmt|;
name|d
operator|->
name|SetFenceNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|fence
operator|,
name|GLenum
name|condition
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glSetFenceNV"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_NV_read_buffer
name|QOpenGLExtension_NV_read_buffer
operator|::
name|QOpenGLExtension_NV_read_buffer
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_NV_read_bufferPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_NV_read_buffer
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_NV_read_buffer
argument_list|)
expr_stmt|;
name|d
operator|->
name|ReadBufferNV
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|mode
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glReadBufferNV"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_QCOM_alpha_test
name|QOpenGLExtension_QCOM_alpha_test
operator|::
name|QOpenGLExtension_QCOM_alpha_test
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_QCOM_alpha_testPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_QCOM_alpha_test
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_alpha_test
argument_list|)
expr_stmt|;
name|d
operator|->
name|AlphaFuncQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|func
operator|,
name|GLclampf
name|ref
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glAlphaFuncQCOM"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_QCOM_driver_control
name|QOpenGLExtension_QCOM_driver_control
operator|::
name|QOpenGLExtension_QCOM_driver_control
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_QCOM_driver_controlPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_QCOM_driver_control
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_driver_control
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetDriverControlsQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLint
operator|*
name|num
operator|,
name|GLsizei
name|size
operator|,
name|GLuint
operator|*
name|driverControls
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDriverControlsQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|GetDriverControlStringQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|driverControl
operator|,
name|GLsizei
name|bufSize
operator|,
name|GLsizei
operator|*
name|length
operator|,
name|GLchar
operator|*
name|driverControlString
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetDriverControlStringQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|EnableDriverControlQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|driverControl
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEnableDriverControlQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|DisableDriverControlQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|driverControl
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glDisableDriverControlQCOM"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_QCOM_extended_get
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|QOpenGLExtension_QCOM_extended_get
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_QCOM_extended_getPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_QCOM_extended_get
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetTexturesQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
operator|*
name|textures
operator|,
name|GLint
name|maxTextures
operator|,
name|GLint
operator|*
name|numTextures
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetTexturesQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetBuffersQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
operator|*
name|buffers
operator|,
name|GLint
name|maxBuffers
operator|,
name|GLint
operator|*
name|numBuffers
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetBuffersQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetRenderbuffersQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
operator|*
name|renderbuffers
operator|,
name|GLint
name|maxRenderbuffers
operator|,
name|GLint
operator|*
name|numRenderbuffers
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetRenderbuffersQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetFramebuffersQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
operator|*
name|framebuffers
operator|,
name|GLint
name|maxFramebuffers
operator|,
name|GLint
operator|*
name|numFramebuffers
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetFramebuffersQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetTexLevelParameterivQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|texture
operator|,
name|GLenum
name|face
operator|,
name|GLint
name|level
operator|,
name|GLenum
name|pname
operator|,
name|GLint
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetTexLevelParameterivQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtTexObjectStateOverrideiQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLenum
name|pname
operator|,
name|GLint
name|param
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtTexObjectStateOverrideiQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetTexSubImageQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLint
name|level
operator|,
name|GLint
name|xoffset
operator|,
name|GLint
name|yoffset
operator|,
name|GLint
name|zoffset
operator|,
name|GLsizei
name|width
operator|,
name|GLsizei
name|height
operator|,
name|GLsizei
name|depth
operator|,
name|GLenum
name|format
operator|,
name|GLenum
name|type
operator|,
name|GLvoid
operator|*
name|texels
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetTexSubImageQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetBufferPointervQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLenum
name|target
operator|,
name|GLvoid
operator|*
operator|*
name|params
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetBufferPointervQCOM"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_QCOM_extended_get2
name|QOpenGLExtension_QCOM_extended_get2
operator|::
name|QOpenGLExtension_QCOM_extended_get2
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_QCOM_extended_get2Private
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_QCOM_extended_get2
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_extended_get2
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetShadersQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
operator|*
name|shaders
operator|,
name|GLint
name|maxShaders
operator|,
name|GLint
operator|*
name|numShaders
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetShadersQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetProgramsQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
operator|*
name|programs
operator|,
name|GLint
name|maxPrograms
operator|,
name|GLint
operator|*
name|numPrograms
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetProgramsQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtIsProgramBinaryQCOM
operator|=
operator|(
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtIsProgramBinaryQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|ExtGetProgramBinarySourceQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|program
operator|,
name|GLenum
name|shadertype
operator|,
name|GLchar
operator|*
name|source
operator|,
name|GLint
operator|*
name|length
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glExtGetProgramBinarySourceQCOM"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_constructor
DECL|function|QOpenGLExtension_QCOM_tiled_rendering
name|QOpenGLExtension_QCOM_tiled_rendering
operator|::
name|QOpenGLExtension_QCOM_tiled_rendering
parameter_list|()
member_init_list|:
name|QAbstractOpenGLExtension
argument_list|(
operator|*
operator|(
operator|new
name|QOpenGLExtension_QCOM_tiled_renderingPrivate
operator|)
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|initializeOpenGLFunctions
name|bool
name|QOpenGLExtension_QCOM_tiled_rendering
operator|::
name|initializeOpenGLFunctions
parameter_list|()
block|{
if|if
condition|(
name|isInitialized
argument_list|()
condition|)
return|return
literal|true
return|;
name|QOpenGLContext
modifier|*
name|context
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|context
condition|)
block|{
name|qWarning
argument_list|(
literal|"A current OpenGL context is required to resolve OpenGL extension functions"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
comment|// Resolve the functions
name|Q_D
argument_list|(
name|QOpenGLExtension_QCOM_tiled_rendering
argument_list|)
expr_stmt|;
name|d
operator|->
name|StartTilingQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLuint
name|x
operator|,
name|GLuint
name|y
operator|,
name|GLuint
name|width
operator|,
name|GLuint
name|height
operator|,
name|GLbitfield
name|preserveMask
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glStartTilingQCOM"
argument_list|)
expr_stmt|;
name|d
operator|->
name|EndTilingQCOM
operator|=
operator|(
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP
argument_list|)
operator|(
name|GLbitfield
name|preserveMask
operator|)
operator|)
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glEndTilingQCOM"
argument_list|)
expr_stmt|;
return|return
name|QAbstractOpenGLExtension
operator|::
name|initializeOpenGLFunctions
argument_list|()
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
