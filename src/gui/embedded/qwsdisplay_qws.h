begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWSDISPLAY_QWS_H
end_ifndef
begin_define
DECL|macro|QWSDISPLAY_QWS_H
define|#
directive|define
name|QWSDISPLAY_QWS_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qbytearray.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qregion.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qimage.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qwindowdefs.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qlist.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Gui
parameter_list|)
name|class
name|QWSEvent
decl_stmt|;
DECL|variable|QWSMouseEvent
name|class
name|QWSMouseEvent
decl_stmt|;
DECL|variable|QWSQCopMessageEvent
name|class
name|QWSQCopMessageEvent
decl_stmt|;
DECL|variable|QVariant
name|class
name|QVariant
decl_stmt|;
DECL|variable|QLock
name|class
name|QLock
decl_stmt|;
name|class
name|QWSWindowInfo
decl_stmt|{  public:      int winid;
end_function
begin_decl_stmt
name|unsigned
name|int
name|clientid
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QString
name|name
decl_stmt|;
end_decl_stmt
begin_define
DECL|macro|QT_QWS_PROPERTY_CONVERTSELECTION
unit|};
define|#
directive|define
name|QT_QWS_PROPERTY_CONVERTSELECTION
value|999
end_define
begin_define
DECL|macro|QT_QWS_PROPERTY_WINDOWNAME
define|#
directive|define
name|QT_QWS_PROPERTY_WINDOWNAME
value|998
end_define
begin_define
DECL|macro|QT_QWS_PROPERTY_MARKEDTEXT
define|#
directive|define
name|QT_QWS_PROPERTY_MARKEDTEXT
value|997
end_define
begin_decl_stmt
DECL|variable|QWSDisplay
name|class
name|QWSDisplay
decl_stmt|;
end_decl_stmt
begin_decl_stmt
specifier|extern
name|Q_GUI_EXPORT
name|QWSDisplay
modifier|*
name|qt_fbdpy
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QWSDisplay
block|{
name|public
label|:
name|QWSDisplay
argument_list|()
expr_stmt|;
operator|~
name|QWSDisplay
argument_list|()
expr_stmt|;
specifier|static
name|QWSDisplay
modifier|*
name|instance
parameter_list|()
block|{
return|return
name|qt_fbdpy
return|;
block|}
name|bool
name|eventPending
argument_list|()
specifier|const
expr_stmt|;
name|QWSEvent
modifier|*
name|getEvent
parameter_list|()
function_decl|;
comment|//    QWSRegionManager *regionManager() const;
name|uchar
operator|*
name|frameBuffer
argument_list|()
specifier|const
expr_stmt|;
name|int
name|width
argument_list|()
specifier|const
expr_stmt|;
name|int
name|height
argument_list|()
specifier|const
expr_stmt|;
name|int
name|depth
argument_list|()
specifier|const
expr_stmt|;
name|int
name|pixmapDepth
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|supportsDepth
argument_list|(
name|int
argument_list|)
decl|const
decl_stmt|;
name|uchar
operator|*
name|sharedRam
argument_list|()
specifier|const
expr_stmt|;
name|int
name|sharedRamSize
argument_list|()
specifier|const
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_QWS_PROPERTIES
name|void
name|addProperty
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|property
parameter_list|)
function_decl|;
name|void
name|setProperty
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|property
parameter_list|,
name|int
name|mode
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|data
parameter_list|)
function_decl|;
name|void
name|setProperty
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|property
parameter_list|,
name|int
name|mode
parameter_list|,
specifier|const
name|char
modifier|*
name|data
parameter_list|)
function_decl|;
name|void
name|removeProperty
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|property
parameter_list|)
function_decl|;
name|bool
name|getProperty
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|property
parameter_list|,
name|char
modifier|*
modifier|&
name|data
parameter_list|,
name|int
modifier|&
name|len
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|// QT_NO_QWS_PROPERTIES
name|QList
operator|<
name|QWSWindowInfo
operator|>
name|windowList
argument_list|()
expr_stmt|;
name|int
name|windowAt
parameter_list|(
specifier|const
name|QPoint
modifier|&
parameter_list|)
function_decl|;
name|void
name|setIdentity
parameter_list|(
specifier|const
name|QString
modifier|&
name|appName
parameter_list|)
function_decl|;
name|void
name|nameRegion
parameter_list|(
name|int
name|winId
parameter_list|,
specifier|const
name|QString
modifier|&
name|n
parameter_list|,
specifier|const
name|QString
modifier|&
name|c
parameter_list|)
function_decl|;
name|void
name|requestRegion
parameter_list|(
name|int
name|winId
parameter_list|,
specifier|const
name|QString
modifier|&
name|surfacekey
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|surfaceData
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|)
function_decl|;
name|void
name|repaintRegion
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|windowFlags
parameter_list|,
name|bool
name|opaque
parameter_list|,
name|QRegion
parameter_list|)
function_decl|;
name|void
name|moveRegion
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|)
function_decl|;
name|void
name|destroyRegion
parameter_list|(
name|int
name|winId
parameter_list|)
function_decl|;
name|void
name|requestFocus
parameter_list|(
name|int
name|winId
parameter_list|,
name|bool
name|get
parameter_list|)
function_decl|;
name|void
name|setAltitude
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|altitude
parameter_list|,
name|bool
name|fixed
init|=
name|false
parameter_list|)
function_decl|;
name|void
name|setOpacity
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|opacity
parameter_list|)
function_decl|;
name|int
name|takeId
parameter_list|()
function_decl|;
name|void
name|setSelectionOwner
parameter_list|(
name|int
name|winId
parameter_list|,
specifier|const
name|QTime
modifier|&
name|time
parameter_list|)
function_decl|;
name|void
name|convertSelection
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|selectionProperty
parameter_list|,
specifier|const
name|QString
modifier|&
name|mimeTypes
parameter_list|)
function_decl|;
name|void
name|defineCursor
parameter_list|(
name|int
name|id
parameter_list|,
specifier|const
name|QBitmap
modifier|&
name|curs
parameter_list|,
specifier|const
name|QBitmap
modifier|&
name|mask
parameter_list|,
name|int
name|hotX
parameter_list|,
name|int
name|hotY
parameter_list|)
function_decl|;
name|void
name|destroyCursor
parameter_list|(
name|int
name|id
parameter_list|)
function_decl|;
name|void
name|selectCursor
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
name|unsigned
name|int
name|id
parameter_list|)
function_decl|;
name|void
name|setCursorPosition
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
function_decl|;
name|void
name|grabMouse
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
name|bool
name|grab
parameter_list|)
function_decl|;
name|void
name|grabKeyboard
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
name|bool
name|grab
parameter_list|)
function_decl|;
name|void
name|playSoundFile
parameter_list|(
specifier|const
name|QString
modifier|&
parameter_list|)
function_decl|;
name|void
name|registerChannel
parameter_list|(
specifier|const
name|QString
modifier|&
name|channel
parameter_list|)
function_decl|;
name|void
name|sendMessage
parameter_list|(
specifier|const
name|QString
modifier|&
name|channel
parameter_list|,
specifier|const
name|QString
modifier|&
name|msg
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|data
parameter_list|)
function_decl|;
name|void
name|flushCommands
parameter_list|()
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_QWS_INPUTMETHODS
name|void
name|sendIMUpdate
parameter_list|(
name|int
name|type
parameter_list|,
name|int
name|winId
parameter_list|,
name|int
name|widgetid
parameter_list|)
function_decl|;
name|void
name|resetIM
parameter_list|()
function_decl|;
name|void
name|sendIMResponse
parameter_list|(
name|int
name|winId
parameter_list|,
name|int
name|property
parameter_list|,
specifier|const
name|QVariant
modifier|&
name|result
parameter_list|)
function_decl|;
name|void
name|sendIMMouseEvent
parameter_list|(
name|int
name|index
parameter_list|,
name|bool
name|isPress
parameter_list|)
function_decl|;
endif|#
directive|endif
name|QWSQCopMessageEvent
modifier|*
name|waitForQCopResponse
parameter_list|()
function_decl|;
name|void
name|sendFontCommand
parameter_list|(
name|int
name|type
parameter_list|,
specifier|const
name|QByteArray
modifier|&
name|fontName
parameter_list|)
function_decl|;
name|void
name|setWindowCaption
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
specifier|const
name|QString
modifier|&
parameter_list|)
function_decl|;
comment|// Lock display for access only by this process
specifier|static
name|bool
name|initLock
parameter_list|(
specifier|const
name|QString
modifier|&
name|filename
parameter_list|,
name|bool
name|create
init|=
name|false
parameter_list|)
function_decl|;
specifier|static
name|bool
name|grabbed
parameter_list|()
function_decl|;
specifier|static
name|void
name|grab
parameter_list|()
function_decl|;
specifier|static
name|void
name|grab
parameter_list|(
name|bool
name|write
parameter_list|)
function_decl|;
specifier|static
name|void
name|ungrab
parameter_list|()
function_decl|;
specifier|static
name|void
name|setTransformation
parameter_list|(
name|int
name|transformation
parameter_list|,
name|int
name|screenNo
init|=
operator|-
literal|1
parameter_list|)
function_decl|;
specifier|static
name|void
name|setRawMouseEventFilter
parameter_list|(
name|void
function_decl|(
modifier|*
name|filter
function_decl|)
parameter_list|(
name|QWSMouseEvent
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
name|private
label|:
name|friend
name|int
name|qt_fork_qapplication
parameter_list|()
function_decl|;
name|friend
name|void
name|qt_app_reinit
parameter_list|(
specifier|const
name|QString
modifier|&
name|newAppName
parameter_list|)
function_decl|;
name|friend
name|class
name|QApplication
decl_stmt|;
name|friend
name|class
name|QCopChannel
decl_stmt|;
name|friend
name|class
name|QWSEmbedWidget
decl_stmt|;
name|friend
name|class
name|QWSEmbedWidgetPrivate
decl_stmt|;
name|class
name|Data
decl_stmt|;
name|friend
name|class
name|Data
decl_stmt|;
name|Data
modifier|*
name|d
decl_stmt|;
name|friend
name|class
name|QWSMemorySurface
decl_stmt|;
name|friend
name|class
name|QWSOnScreenSurface
decl_stmt|;
name|friend
name|class
name|QWSDirectPainterSurface
decl_stmt|;
name|int
name|getPropertyLen
decl_stmt|;
name|char
modifier|*
name|getPropertyData
decl_stmt|;
specifier|static
name|QLock
modifier|*
name|lock
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWSDISPLAY_QWS_H
end_comment
end_unit
