begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QDIRECTPAINTER_QWS_H
end_ifndef
begin_define
DECL|macro|QDIRECTPAINTER_QWS_H
define|#
directive|define
name|QDIRECTPAINTER_QWS_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qregion.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_DIRECTPAINTER
name|class
name|QDirectPainterPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWSEmbedEvent
name|class
name|QWSEmbedEvent
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QDirectPainter
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QDirectPainter
argument_list|)
name|public
operator|:
expr|enum
name|SurfaceFlag
block|{
name|NonReserved
operator|=
literal|0
block|,
name|Reserved
operator|=
literal|1
block|,
name|ReservedSynchronous
operator|=
literal|3
block|}
block|;
name|explicit
name|QDirectPainter
argument_list|(
argument|QObject *parentObject =
literal|0
argument_list|,
argument|SurfaceFlag flag = NonReserved
argument_list|)
block|;
operator|~
name|QDirectPainter
argument_list|()
block|;
name|void
name|setRegion
argument_list|(
specifier|const
name|QRegion
operator|&
argument_list|)
block|;
name|QRegion
name|requestedRegion
argument_list|()
specifier|const
block|;
name|QRegion
name|allocatedRegion
argument_list|()
specifier|const
block|;
name|void
name|setGeometry
argument_list|(
specifier|const
name|QRect
operator|&
argument_list|)
block|;
name|QRect
name|geometry
argument_list|()
specifier|const
block|;
name|WId
name|winId
argument_list|()
specifier|const
block|;
name|virtual
name|void
name|regionChanged
argument_list|(
specifier|const
name|QRegion
operator|&
name|exposedRegion
argument_list|)
block|;
name|void
name|startPainting
argument_list|(
argument|bool lockDisplay = true
argument_list|)
block|;
name|void
name|endPainting
argument_list|()
block|;
name|void
name|endPainting
argument_list|(
specifier|const
name|QRegion
operator|&
name|region
argument_list|)
block|;
name|void
name|flush
argument_list|(
specifier|const
name|QRegion
operator|&
name|region
argument_list|)
block|;
name|void
name|raise
argument_list|()
block|;
name|void
name|lower
argument_list|()
block|;
specifier|static
name|QRegion
name|reserveRegion
argument_list|(
specifier|const
name|QRegion
operator|&
argument_list|)
block|;
specifier|static
name|QRegion
name|reservedRegion
argument_list|()
block|;
specifier|static
name|QRegion
name|region
argument_list|()
block|{
return|return
name|reservedRegion
argument_list|()
return|;
block|}
specifier|static
name|uchar
operator|*
name|frameBuffer
argument_list|()
block|;
specifier|static
name|int
name|screenDepth
argument_list|()
block|;
specifier|static
name|int
name|screenWidth
argument_list|()
block|;
specifier|static
name|int
name|screenHeight
argument_list|()
block|;
specifier|static
name|int
name|linestep
argument_list|()
block|;
specifier|static
name|void
name|lock
argument_list|()
block|;
specifier|static
name|void
name|unlock
argument_list|()
block|;
name|private
operator|:
name|friend
name|void
name|qt_directpainter_region
argument_list|(
argument|QDirectPainter *dp
argument_list|,
argument|const QRegion&alloc
argument_list|,
argument|int type
argument_list|)
block|;
name|friend
name|void
name|qt_directpainter_embedevent
argument_list|(
name|QDirectPainter
operator|*
argument_list|,
specifier|const
name|QWSEmbedEvent
operator|*
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QDIRECTPAINTER_QWS_H
end_comment
end_unit
