begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWSPROTOCOLITEM_QWS_H
end_ifndef
begin_define
DECL|macro|QWSPROTOCOLITEM_QWS_H
define|#
directive|define
name|QWSPROTOCOLITEM_QWS_H
end_define
begin_comment
comment|/*********************************************************************  *  * QWSCommand base class - only use derived classes from that  *  *********************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
name|class
name|QIODevice
decl_stmt|;
end_decl_stmt
begin_struct
DECL|struct|QWSProtocolItem
struct|struct
name|QWSProtocolItem
block|{
comment|// ctor - dtor
DECL|function|QWSProtocolItem
name|QWSProtocolItem
argument_list|(
argument|int t
argument_list|,
argument|int len
argument_list|,
argument|char *ptr
argument_list|)
block|:
name|type
argument_list|(
name|t
argument_list|)
operator|,
name|simpleLen
argument_list|(
name|len
argument_list|)
operator|,
name|rawLen
argument_list|(
operator|-
literal|1
argument_list|)
operator|,
name|deleteRaw
argument_list|(
name|false
argument_list|)
operator|,
name|simpleDataPtr
argument_list|(
name|ptr
argument_list|)
operator|,
name|rawDataPtr
argument_list|(
literal|0
argument_list|)
operator|,
name|bytesRead
argument_list|(
literal|0
argument_list|)
block|{ }
name|virtual
operator|~
name|QWSProtocolItem
argument_list|()
expr_stmt|;
comment|// data
DECL|member|type
name|int
name|type
decl_stmt|;
DECL|member|simpleLen
name|int
name|simpleLen
decl_stmt|;
DECL|member|rawLen
name|int
name|rawLen
decl_stmt|;
DECL|member|deleteRaw
name|bool
name|deleteRaw
decl_stmt|;
comment|// functions
ifndef|#
directive|ifndef
name|QT_NO_QWS_MULTIPROCESS
name|void
name|write
parameter_list|(
name|QIODevice
modifier|*
name|s
parameter_list|)
function_decl|;
name|bool
name|read
parameter_list|(
name|QIODevice
modifier|*
name|s
parameter_list|)
function_decl|;
endif|#
directive|endif
name|void
name|copyFrom
parameter_list|(
specifier|const
name|QWSProtocolItem
modifier|*
name|item
parameter_list|)
function_decl|;
name|virtual
name|void
name|setData
parameter_list|(
specifier|const
name|char
modifier|*
name|data
parameter_list|,
name|int
name|len
parameter_list|,
name|bool
name|allocateMem
init|=
name|true
parameter_list|)
function_decl|;
DECL|member|simpleDataPtr
name|char
modifier|*
name|simpleDataPtr
decl_stmt|;
DECL|member|rawDataPtr
name|char
modifier|*
name|rawDataPtr
decl_stmt|;
comment|// temp variables
DECL|member|bytesRead
name|int
name|bytesRead
decl_stmt|;
block|}
struct|;
end_struct
begin_comment
comment|// This should probably be a method on QWSProtocolItem, but this way avoids
end_comment
begin_comment
comment|// changing the API of this apparently public header
end_comment
begin_comment
comment|// size = (int)type + (int)rawLenSize + simpleLen + rawLen
end_comment
begin_define
DECL|macro|QWS_PROTOCOL_ITEM_SIZE
define|#
directive|define
name|QWS_PROTOCOL_ITEM_SIZE
parameter_list|(
name|item
parameter_list|)
define|\
value|(2 * sizeof(int)) + ((item).simpleDataPtr ? (item).simpleLen : 0) + ((item).rawDataPtr ? (item).rawLen : 0)
end_define
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWSPROTOCOLITEM_QWS_H
end_comment
end_unit
