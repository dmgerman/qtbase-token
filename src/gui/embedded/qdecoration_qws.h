begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QDECORATION_QWS_H
end_ifndef
begin_define
DECL|macro|QDECORATION_QWS_H
define|#
directive|define
name|QDECORATION_QWS_H
end_define
begin_include
include|#
directive|include
file|<QtGui/qregion.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qwidget.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qaction.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
name|class
name|QPopupMenu
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMenu
name|class
name|QMenu
decl_stmt|;
end_decl_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_ACTION
end_ifndef
begin_decl_stmt
name|class
name|QDecorationAction
range|:
name|public
name|QAction
block|{
name|public
operator|:
name|QDecorationAction
argument_list|(
argument|const QString&text
argument_list|,
argument|QObject* parent
argument_list|,
argument|int region
argument_list|)
operator|:
name|QAction
argument_list|(
name|text
argument_list|,
name|parent
argument_list|)
block|,
name|reg
argument_list|(
argument|region
argument_list|)
block|{}
name|int
name|reg
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_ACTION
end_comment
begin_comment
comment|/*  Implements decoration styles */
end_comment
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QDecoration
block|{
name|public
label|:
name|QDecoration
argument_list|()
block|{}
name|virtual
operator|~
name|QDecoration
argument_list|()
block|{}
comment|/* AABBBBBBBBBBCC   Items in DecorationRegion:        AijjjjjjjklmnC        A            C   A = TopLeft      B = Top        C = TopRight        D            E   D = Left                        E = Right        D            E   F = BottomLeft   H = Bottom     G = BottomRight        F            G   i = Menu         j = Title      k = Help        FFHHHHHHHHHHGG   l = Minimize     m = Maximize   n = Close      */
expr|enum
name|DecorationRegion
block|{
name|None
operator|=
literal|0x0000000000
block|,
name|All
operator|=
literal|0x7fffffff
block|,
name|TopLeft
operator|=
literal|0x0000000001
block|,
name|Top
operator|=
literal|0x0000000002
block|,
name|TopRight
operator|=
literal|0x0000000004
block|,
name|Left
operator|=
literal|0x0000000008
block|,
name|Right
operator|=
literal|0x0000000010
block|,
name|BottomLeft
operator|=
literal|0x0000000020
block|,
name|Bottom
operator|=
literal|0x0000000040
block|,
name|BottomRight
operator|=
literal|0x0000000080
block|,
name|Borders
operator|=
literal|0x00000000ff
block|,
name|Menu
operator|=
literal|0x0000000100
block|,
name|Title
operator|=
literal|0x0000000200
block|,
name|Help
operator|=
literal|0x0000000400
block|,
name|Minimize
operator|=
literal|0x0000000800
block|,
name|Maximize
operator|=
literal|0x0000001000
block|,
name|Normalize
operator|=
literal|0x0000002000
block|,
name|Close
operator|=
literal|0x0000004000
block|,
name|Move
operator|=
literal|0x0000008000
block|,
name|Resize
operator|=
literal|0x0000010000
block|}
expr_stmt|;
enum|enum
name|DecorationState
block|{
name|Normal
init|=
literal|0x04
block|,
name|Disabled
init|=
literal|0x08
block|,
name|Hover
init|=
literal|0x01
block|,
name|Pressed
init|=
literal|0x02
block|}
enum|;
name|virtual
name|QRegion
name|region
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|int
name|decorationRegion
init|=
name|All
parameter_list|)
init|=
literal|0
function_decl|;
name|QRegion
name|region
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|,
name|int
name|decorationRegion
init|=
name|All
parameter_list|)
block|{
return|return
name|region
argument_list|(
name|w
argument_list|,
name|w
operator|->
name|rect
argument_list|()
argument_list|,
name|decorationRegion
argument_list|)
return|;
block|}
name|virtual
name|int
name|regionAt
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|point
parameter_list|)
function_decl|;
name|virtual
name|void
name|regionClicked
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|int
name|region
parameter_list|)
function_decl|;
name|virtual
name|void
name|regionDoubleClicked
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|int
name|region
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_MENU
name|virtual
name|void
name|buildSysMenu
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QMenu
modifier|*
name|menu
parameter_list|)
function_decl|;
name|void
name|menuTriggered
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|QAction
modifier|*
name|action
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|static
name|void
name|startMove
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
specifier|static
name|void
name|startResize
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
name|virtual
name|bool
name|paint
parameter_list|(
name|QPainter
modifier|*
name|p
parameter_list|,
specifier|const
name|QWidget
modifier|*
name|w
parameter_list|,
name|int
name|decorationRegion
init|=
name|All
parameter_list|,
name|DecorationState
name|state
init|=
name|Normal
parameter_list|)
init|=
literal|0
function_decl|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QDECORATION_QWS_H
end_comment
end_unit
