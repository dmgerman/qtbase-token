begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QVFBHDR_H
end_ifndef
begin_define
DECL|macro|QVFBHDR_H
define|#
directive|define
name|QVFBHDR_H
end_define
begin_include
include|#
directive|include
file|<QtGui/qcolor.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qwindowdefs.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qrect.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|function|QT_MODULE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
ifndef|#
directive|ifndef
name|QT_QWS_TEMP_DIR
DECL|macro|QT_QWS_TEMP_DIR
define|#
directive|define
name|QT_QWS_TEMP_DIR
value|QLatin1String("/tmp")
endif|#
directive|endif
ifdef|#
directive|ifdef
name|QT_PRIVATE_QWS
DECL|macro|QT_VFB_DATADIR
define|#
directive|define
name|QT_VFB_DATADIR
parameter_list|(
name|DISPLAY
parameter_list|)
value|QString::fromLatin1("%1/qtembedded-%2-%3") \                                       .arg(QT_QWS_TEMP_DIR).arg(getuid()).arg(DISPLAY)
DECL|macro|QT_VFB_MOUSE_PIPE
define|#
directive|define
name|QT_VFB_MOUSE_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QT_VFB_DATADIR(DISPLAY) \                                       .append(QLatin1String("/qtvfb_mouse"))
DECL|macro|QT_VFB_KEYBOARD_PIPE
define|#
directive|define
name|QT_VFB_KEYBOARD_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QT_VFB_DATADIR(DISPLAY) \                                       .append(QLatin1String("/qtvfb_keyboard"))
DECL|macro|QT_VFB_MAP
define|#
directive|define
name|QT_VFB_MAP
parameter_list|(
name|DISPLAY
parameter_list|)
value|QT_VFB_DATADIR(DISPLAY) \                                       .append(QLatin1String("/qtvfb_map"))
DECL|macro|QT_VFB_SOUND_PIPE
define|#
directive|define
name|QT_VFB_SOUND_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QT_VFB_DATADIR(DISPLAY) \                                       .append(QLatin1String("/qt_soundserver"))
DECL|macro|QTE_PIPE
define|#
directive|define
name|QTE_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QT_VFB_DATADIR(DISPLAY) \                                       .append(QLatin1String("/QtEmbedded"))
DECL|macro|QTE_PIPE_QVFB
define|#
directive|define
name|QTE_PIPE_QVFB
parameter_list|(
name|DISPLAY
parameter_list|)
value|QTE_PIPE(DISPLAY)
else|#
directive|else
define|#
directive|define
name|QT_VFB_DATADIR
parameter_list|(
name|DISPLAY
parameter_list|)
value|QString::fromLatin1("%1/qtembedded-%2") \                                       .arg(QT_QWS_TEMP_DIR).arg(DISPLAY)
define|#
directive|define
name|QT_VFB_MOUSE_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QString::fromLatin1("%1/.qtvfb_mouse-%2") \                                       .arg(QT_QWS_TEMP_DIR).arg(DISPLAY)
define|#
directive|define
name|QT_VFB_KEYBOARD_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QString::fromLatin1("%1/.qtvfb_keyboard-%2") \                                       .arg(QT_QWS_TEMP_DIR).arg(DISPLAY)
define|#
directive|define
name|QT_VFB_MAP
parameter_list|(
name|DISPLAY
parameter_list|)
value|QString::fromLatin1("%1/.qtvfb_map-%2") \                                       .arg(QT_QWS_TEMP_DIR).arg(DISPLAY)
define|#
directive|define
name|QT_VFB_SOUND_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QString::fromLatin1("%1/.qt_soundserver-%2") \                                       .arg(QT_QWS_TEMP_DIR).arg(DISPLAY)
define|#
directive|define
name|QTE_PIPE
parameter_list|(
name|DISPLAY
parameter_list|)
value|QT_VFB_DATADIR(DISPLAY) \                                       .append(QLatin1String("/QtEmbedded-%1")).arg(DISPLAY)
define|#
directive|define
name|QTE_PIPE_QVFB
parameter_list|(
name|DISPLAY
parameter_list|)
value|QTE_PIPE(DISPLAY)
endif|#
directive|endif
decl|struct
name|QVFbHeader
block|{
name|int
name|width
decl_stmt|;
name|int
name|height
decl_stmt|;
name|int
name|depth
decl_stmt|;
name|int
name|linestep
decl_stmt|;
name|int
name|dataoffset
decl_stmt|;
name|QRect
name|update
decl_stmt|;
name|bool
name|dirty
decl_stmt|;
name|int
name|numcols
decl_stmt|;
name|QRgb
name|clut
index|[
literal|256
index|]
decl_stmt|;
name|int
name|viewerVersion
decl_stmt|;
name|int
name|serverVersion
decl_stmt|;
name|int
name|brightness
decl_stmt|;
comment|// since 4.4.0
name|WId
name|windowId
decl_stmt|;
comment|// since 4.5.0
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_struct
DECL|struct|QVFbKeyData
struct|struct
name|QVFbKeyData
block|{
DECL|member|keycode
name|unsigned
name|int
name|keycode
decl_stmt|;
DECL|member|modifiers
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
expr_stmt|;
DECL|member|unicode
name|unsigned
name|short
name|int
name|unicode
decl_stmt|;
DECL|member|press
name|bool
name|press
decl_stmt|;
DECL|member|repeat
name|bool
name|repeat
decl_stmt|;
block|}
struct|;
end_struct
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QVFBHDR_H
end_comment
end_unit
