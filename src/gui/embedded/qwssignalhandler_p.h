begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWSSIGNALHANDLER_P_H
end_ifndef
begin_define
DECL|macro|QWSSIGNALHANDLER_P_H
define|#
directive|define
name|QWSSIGNALHANDLER_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QLibrary class.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_QWS_SIGNALHANDLER
end_ifndef
begin_include
include|#
directive|include
file|<QtCore/qmap.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qvector.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qobjectcleanuphandler.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_typedef
DECL|typedef|qt_sighandler_t
typedef|typedef
name|void
function_decl|(
modifier|*
name|qt_sighandler_t
function_decl|)
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_typedef
begin_decl_stmt
DECL|variable|QWSSignalHandlerPrivate
name|class
name|QWSSignalHandlerPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QWSSignalHandler
block|{
name|public
label|:
specifier|static
name|QWSSignalHandler
modifier|*
name|instance
parameter_list|()
function_decl|;
operator|~
name|QWSSignalHandler
argument_list|()
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_QWS_MULTIPROCESS
specifier|inline
name|void
name|addSemaphore
parameter_list|(
name|int
name|semno
parameter_list|)
block|{
name|semaphores
operator|.
name|append
argument_list|(
name|semno
argument_list|)
expr_stmt|;
block|}
name|void
name|removeSemaphore
parameter_list|(
name|int
name|semno
parameter_list|)
function_decl|;
endif|#
directive|endif
specifier|inline
name|void
name|addObject
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|)
block|{
operator|(
name|void
operator|)
name|objects
operator|.
name|add
argument_list|(
name|object
argument_list|)
expr_stmt|;
block|}
name|private
label|:
name|QWSSignalHandler
argument_list|()
expr_stmt|;
specifier|static
name|void
name|handleSignal
parameter_list|(
name|int
name|signal
parameter_list|)
function_decl|;
name|QMap
operator|<
name|int
operator|,
name|qt_sighandler_t
operator|>
name|oldHandlers
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_QWS_MULTIPROCESS
name|QVector
operator|<
name|int
operator|>
name|semaphores
expr_stmt|;
endif|#
directive|endif
name|QObjectCleanupHandler
name|objects
decl_stmt|;
name|friend
name|class
name|QWSSignalHandlerPrivate
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_QWS_SIGNALHANDLER
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWSSIGNALHANDLER_P_H
end_comment
end_unit
