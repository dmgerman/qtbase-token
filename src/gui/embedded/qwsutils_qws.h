begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWSUTILS_QWS_H
end_ifndef
begin_define
DECL|macro|QWSUTILS_QWS_H
define|#
directive|define
name|QWSUTILS_QWS_H
end_define
begin_include
include|#
directive|include
file|<QtCore/QIODevice>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
ifndef|#
directive|ifndef
name|QT_NO_SXE
DECL|macro|QWS_SOCK_BASE
define|#
directive|define
name|QWS_SOCK_BASE
value|QUnixSocket
DECL|macro|QWS_SOCK_SERVER_BASE
define|#
directive|define
name|QWS_SOCK_SERVER_BASE
value|QUnixSocketServer
name|class
name|QUnixSocket
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QUnixSocketServer
name|class
name|QUnixSocketServer
decl_stmt|;
end_decl_stmt
begin_else
else|#
directive|else
end_else
begin_define
define|#
directive|define
name|QWS_SOCK_BASE
value|QTcpSocket
end_define
begin_define
define|#
directive|define
name|QWS_SOCK_SERVER_BASE
value|QTcpServer
end_define
begin_decl_stmt
name|class
name|QTcpSocket
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|QTcpServer
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
DECL|variable|QWSSocket
name|class
name|QWSSocket
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWSServerSocket
name|class
name|QWSServerSocket
decl_stmt|;
end_decl_stmt
begin_comment
comment|/********************************************************************  *  * Convenient socket functions  *  ********************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_QWS_MULTIPROCESS
end_ifndef
begin_function
DECL|function|qws_read_uint
specifier|inline
name|int
name|qws_read_uint
parameter_list|(
name|QIODevice
modifier|*
name|socket
parameter_list|)
block|{
if|if
condition|(
operator|!
name|socket
operator|||
name|socket
operator|->
name|bytesAvailable
argument_list|()
operator|<
operator|(
name|int
operator|)
sizeof|sizeof
argument_list|(
name|int
argument_list|)
condition|)
return|return
operator|-
literal|1
return|;
name|int
name|i
decl_stmt|;
name|socket
operator|->
name|read
argument_list|(
name|reinterpret_cast
operator|<
name|char
operator|*
operator|>
operator|(
operator|&
name|i
operator|)
argument_list|,
sizeof|sizeof
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|i
return|;
block|}
end_function
begin_function
DECL|function|qws_write_uint
specifier|inline
name|void
name|qws_write_uint
parameter_list|(
name|QIODevice
modifier|*
name|socket
parameter_list|,
name|int
name|i
parameter_list|)
block|{
if|if
condition|(
operator|!
name|socket
condition|)
return|return;
name|socket
operator|->
name|write
argument_list|(
name|reinterpret_cast
operator|<
name|char
operator|*
operator|>
operator|(
operator|&
name|i
operator|)
argument_list|,
sizeof|sizeof
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_QWS_MULTIPROCESS
end_comment
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWSUTILS_QWS_H
end_comment
end_unit
