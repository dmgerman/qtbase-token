begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QKBD_QWS_H
end_ifndef
begin_define
DECL|macro|QKBD_QWS_H
define|#
directive|define
name|QKBD_QWS_H
end_define
begin_include
include|#
directive|include
file|<QtGui/qapplication.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Gui
parameter_list|)
ifndef|#
directive|ifndef
name|QT_NO_QWS_KEYBOARD
name|class
name|QWSKbPrivate
decl_stmt|;
name|class
name|Q_GUI_EXPORT
name|QWSKeyboardHandler
decl_stmt|{ public:     QWSKeyboardHandler(
end_function
begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QWSKeyboardHandler
argument_list|(
specifier|const
name|QString
operator|&
name|device
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|virtual
operator|~
name|QWSKeyboardHandler
argument_list|()
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|virtual
name|void
name|processKeyEvent
argument_list|(
name|int
name|unicode
argument_list|,
name|int
name|keycode
argument_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|,
name|bool
name|isPress
argument_list|,
name|bool
name|autoRepeat
argument_list|)
decl_stmt|;
end_decl_stmt
begin_enum
enum|enum
name|KeycodeAction
block|{
name|None
init|=
literal|0
block|,
name|CapsLockOff
init|=
literal|0x01000000
block|,
name|CapsLockOn
init|=
literal|0x01000001
block|,
name|NumLockOff
init|=
literal|0x02000000
block|,
name|NumLockOn
init|=
literal|0x02000001
block|,
name|ScrollLockOff
init|=
literal|0x03000000
block|,
name|ScrollLockOn
init|=
literal|0x03000001
block|,
name|Reboot
init|=
literal|0x04000000
block|,
name|PreviousConsole
init|=
literal|0x05000000
block|,
name|NextConsole
init|=
literal|0x05000001
block|,
name|SwitchConsoleFirst
init|=
literal|0x06000000
block|,
name|SwitchConsoleLast
init|=
literal|0x0600007f
block|,
name|SwitchConsoleMask
init|=
literal|0x0000007f
block|,     }
enum|;
end_enum
begin_function_decl
name|KeycodeAction
name|processKeycode
parameter_list|(
name|quint16
name|keycode
parameter_list|,
name|bool
name|pressed
parameter_list|,
name|bool
name|autorepeat
parameter_list|)
function_decl|;
end_function_decl
begin_label
name|protected
label|:
end_label
begin_function_decl
name|int
name|transformDirKey
parameter_list|(
name|int
name|key
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|void
name|beginAutoRepeat
argument_list|(
name|int
name|uni
argument_list|,
name|int
name|code
argument_list|,
name|Qt
operator|::
name|KeyboardModifiers
name|mod
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|void
name|endAutoRepeat
parameter_list|()
function_decl|;
end_function_decl
begin_label
name|private
label|:
end_label
begin_decl_stmt
name|QWSKbPrivate
modifier|*
name|d
decl_stmt|;
end_decl_stmt
begin_endif
unit|};
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_QWS_KEYBOARD
end_comment
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QKBD_QWS_H
end_comment
end_unit
