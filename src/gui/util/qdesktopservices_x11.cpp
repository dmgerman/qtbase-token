begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qdesktopservices.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DESKTOPSERVICES
end_ifndef
begin_include
include|#
directive|include
file|<qprocess.h>
end_include
begin_include
include|#
directive|include
file|<qurl.h>
end_include
begin_include
include|#
directive|include
file|<qdir.h>
end_include
begin_include
include|#
directive|include
file|<qfile.h>
end_include
begin_include
include|#
directive|include
file|<qtextstream.h>
end_include
begin_include
include|#
directive|include
file|<private/qt_x11_p.h>
end_include
begin_include
include|#
directive|include
file|<qcoreapplication.h>
end_include
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|launch
specifier|inline
specifier|static
name|bool
name|launch
parameter_list|(
specifier|const
name|QUrl
modifier|&
name|url
parameter_list|,
specifier|const
name|QString
modifier|&
name|client
parameter_list|)
block|{
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_PROCESS
argument_list|)
return|return
operator|(
name|QProcess
operator|::
name|startDetached
argument_list|(
name|client
operator|+
name|QLatin1Char
argument_list|(
literal|' '
argument_list|)
operator|+
name|QString
operator|::
name|fromLatin1
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
argument_list|)
operator|)
return|;
else|#
directive|else
return|return
operator|(
operator|::
name|system
argument_list|(
operator|(
name|client
operator|+
name|QLatin1Char
argument_list|(
literal|' '
argument_list|)
operator|+
name|QString
operator|::
name|fromLatin1
argument_list|(
name|url
operator|.
name|toEncoded
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
operator|)
operator|.
name|toLocal8Bit
argument_list|()
operator|.
name|constData
argument_list|()
argument_list|)
operator|!=
operator|-
literal|1
operator|)
return|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|openDocument
specifier|static
name|bool
name|openDocument
parameter_list|(
specifier|const
name|QUrl
modifier|&
name|url
parameter_list|)
block|{
if|if
condition|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"xdg-open"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
comment|// Use the X11->desktopEnvironment value if X11 is non-NULL,
comment|//  otherwise just attempt to launch command regardless of the desktop environment
if|if
condition|(
operator|(
operator|!
name|X11
operator|||
operator|(
name|X11
operator|&&
name|X11
operator|->
name|desktopEnvironment
operator|==
name|DE_GNOME
operator|)
operator|)
operator|&&
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"gnome-open"
argument_list|)
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
else|else
block|{
if|if
condition|(
operator|(
operator|!
name|X11
operator|||
operator|(
name|X11
operator|&&
name|X11
operator|->
name|desktopEnvironment
operator|==
name|DE_KDE
operator|)
operator|)
operator|&&
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"kfmclient exec"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"firefox"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"mozilla"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"netscape"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"opera"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|launchWebBrowser
specifier|static
name|bool
name|launchWebBrowser
parameter_list|(
specifier|const
name|QUrl
modifier|&
name|url
parameter_list|)
block|{
if|if
condition|(
operator|!
name|url
operator|.
name|isValid
argument_list|()
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|url
operator|.
name|scheme
argument_list|()
operator|==
name|QLatin1String
argument_list|(
literal|"mailto"
argument_list|)
condition|)
return|return
name|openDocument
argument_list|(
name|url
argument_list|)
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"xdg-open"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
name|getenv
argument_list|(
literal|"DEFAULT_BROWSER"
argument_list|)
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QString
operator|::
name|fromLocal8Bit
argument_list|(
name|getenv
argument_list|(
literal|"BROWSER"
argument_list|)
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
comment|// Use the X11->desktopEnvironment value if X11 is non-NULL,
comment|//  otherwise just attempt to launch command regardless of the desktop environment
if|if
condition|(
operator|(
operator|!
name|X11
operator|||
operator|(
name|X11
operator|&&
name|X11
operator|->
name|desktopEnvironment
operator|==
name|DE_GNOME
operator|)
operator|)
operator|&&
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"gnome-open"
argument_list|)
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
else|else
block|{
if|if
condition|(
operator|(
operator|!
name|X11
operator|||
operator|(
name|X11
operator|&&
name|X11
operator|->
name|desktopEnvironment
operator|==
name|DE_KDE
operator|)
operator|)
operator|&&
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"kfmclient openURL"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
block|}
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"firefox"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"mozilla"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"netscape"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|launch
argument_list|(
name|url
argument_list|,
name|QLatin1String
argument_list|(
literal|"opera"
argument_list|)
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_DESKTOPSERVICES
end_comment
end_unit
