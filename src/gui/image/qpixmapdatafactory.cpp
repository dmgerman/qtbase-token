begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qpixmapdatafactory_p.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_QWS
end_ifdef
begin_include
include|#
directive|include
file|<QtGui/qscreen_qws.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_X11
end_ifdef
begin_include
include|#
directive|include
file|<private/qpixmap_x11_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
end_if
begin_include
include|#
directive|include
file|<private/qpixmap_raster_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_MAC
end_ifdef
begin_include
include|#
directive|include
file|<private/qpixmap_mac_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_WS_QPA
end_ifdef
begin_include
include|#
directive|include
file|<private/qpixmap_raster_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_SYMBIAN
end_ifdef
begin_include
include|#
directive|include
file|<private/qpixmap_s60_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|"private/qguiapplication_qpa_p.h"
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|Q_WS_QWS
argument_list|)
end_if
begin_class
DECL|class|QSimplePixmapDataFactory
class|class
name|QSimplePixmapDataFactory
super|:
specifier|public
name|QPixmapDataFactory
block|{
public|public:
DECL|function|~QSimplePixmapDataFactory
name|~
name|QSimplePixmapDataFactory
parameter_list|()
block|{}
name|QPixmapData
modifier|*
name|create
parameter_list|(
name|QPixmapData
operator|::
name|PixelType
name|type
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_function
DECL|function|create
name|QPixmapData
modifier|*
name|QSimplePixmapDataFactory
operator|::
name|create
parameter_list|(
name|QPixmapData
operator|::
name|PixelType
name|type
parameter_list|)
block|{
comment|// ### should we always use Raster instead?
return|return
name|QGuiApplicationPrivate
operator|::
name|platformIntegration
argument_list|()
operator|->
name|createPixmapData
argument_list|(
name|type
argument_list|)
return|;
block|}
end_function
begin_macro
name|Q_GLOBAL_STATIC
argument_list|(
argument|QSimplePixmapDataFactory
argument_list|,
argument|factory
argument_list|)
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// !defined(Q_WS_QWS)
end_comment
begin_destructor
DECL|function|~QPixmapDataFactory
name|QPixmapDataFactory
operator|::
name|~
name|QPixmapDataFactory
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|instance
name|QPixmapDataFactory
modifier|*
name|QPixmapDataFactory
operator|::
name|instance
parameter_list|(
name|int
name|screen
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|screen
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_WS_QWS
return|return
name|QScreen
operator|::
name|instance
argument_list|()
operator|->
name|pixmapDataFactory
argument_list|()
return|;
else|#
directive|else
return|return
name|factory
argument_list|()
return|;
endif|#
directive|endif
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
