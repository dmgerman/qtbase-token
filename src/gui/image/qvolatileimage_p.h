begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QVOLATILEIMAGE_P_H
end_ifndef
begin_define
DECL|macro|QVOLATILEIMAGE_P_H
define|#
directive|define
name|QVOLATILEIMAGE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtGui/qimage.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qshareddata.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QVolatileImageData
name|class
name|QVolatileImageData
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QVolatileImage
block|{
name|public
label|:
name|QVolatileImage
argument_list|()
expr_stmt|;
name|QVolatileImage
argument_list|(
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|QImage::Format format
argument_list|)
empty_stmt|;
name|explicit
name|QVolatileImage
parameter_list|(
specifier|const
name|QImage
modifier|&
name|sourceImage
parameter_list|)
function_decl|;
name|explicit
name|QVolatileImage
parameter_list|(
name|void
modifier|*
name|nativeImage
parameter_list|,
name|void
modifier|*
name|nativeMask
init|=
literal|0
parameter_list|)
function_decl|;
name|QVolatileImage
argument_list|(
specifier|const
name|QVolatileImage
operator|&
name|other
argument_list|)
expr_stmt|;
operator|~
name|QVolatileImage
argument_list|()
expr_stmt|;
name|QVolatileImage
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QVolatileImage
operator|&
name|rhs
operator|)
decl_stmt|;
name|bool
name|isNull
argument_list|()
specifier|const
expr_stmt|;
name|QImage
operator|::
name|Format
name|format
argument_list|()
specifier|const
expr_stmt|;
name|int
name|width
argument_list|()
specifier|const
expr_stmt|;
name|int
name|height
argument_list|()
specifier|const
expr_stmt|;
name|int
name|bytesPerLine
argument_list|()
specifier|const
expr_stmt|;
name|int
name|byteCount
argument_list|()
specifier|const
expr_stmt|;
name|int
name|depth
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasAlphaChannel
argument_list|()
specifier|const
expr_stmt|;
name|void
name|beginDataAccess
argument_list|()
specifier|const
expr_stmt|;
name|void
name|endDataAccess
argument_list|(
name|bool
name|readOnly
operator|=
name|false
argument_list|)
decl|const
decl_stmt|;
name|uchar
modifier|*
name|bits
parameter_list|()
function_decl|;
specifier|const
name|uchar
operator|*
name|constBits
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|ensureFormat
argument_list|(
name|QImage
operator|::
name|Format
name|format
argument_list|)
decl_stmt|;
name|QImage
name|toImage
argument_list|()
specifier|const
expr_stmt|;
name|QImage
modifier|&
name|imageRef
parameter_list|()
function_decl|;
name|QPaintEngine
modifier|*
name|paintEngine
parameter_list|()
function_decl|;
name|void
name|setAlphaChannel
parameter_list|(
specifier|const
name|QPixmap
modifier|&
name|alphaChannel
parameter_list|)
function_decl|;
name|void
name|fill
parameter_list|(
name|uint
name|pixelValue
parameter_list|)
function_decl|;
name|void
operator|*
name|duplicateNativeImage
argument_list|()
specifier|const
expr_stmt|;
name|void
name|copyFrom
parameter_list|(
name|QVolatileImage
modifier|*
name|source
parameter_list|,
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
name|private
label|:
name|QSharedDataPointer
operator|<
name|QVolatileImageData
operator|>
name|d
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QVOLATILEIMAGE_P_H
end_comment
end_unit
