begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Imagination Technologies Limited, www.imgtec.com ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qimage.h"
end_include
begin_include
include|#
directive|include
file|<private/qimage_p.h>
end_include
begin_expr_stmt
name|QT_BEGIN_NAMESPACE
comment|// Defined in qimage_mips_dspr2_asm.S
comment|//
specifier|extern
literal|"C"
name|void
name|premultiply_argb_inplace_mips_asm
argument_list|(
name|void
operator|*
argument_list|,
name|unsigned
argument_list|,
name|unsigned
argument_list|,
name|int
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function
DECL|function|convert_ARGB_to_ARGB_PM_inplace_mips_dspr2
name|bool
name|convert_ARGB_to_ARGB_PM_inplace_mips_dspr2
parameter_list|(
name|QImageData
modifier|*
name|data
parameter_list|,
name|Qt
operator|::
name|ImageConversionFlags
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|data
operator|->
name|format
operator|==
name|QImage
operator|::
name|Format_ARGB32
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|data
operator|->
name|width
operator|||
operator|!
name|data
operator|->
name|height
condition|)
return|return
literal|true
return|;
name|Q_ASSERT
argument_list|(
operator|(
name|data
operator|->
name|bytes_per_line
operator|-
operator|(
name|data
operator|->
name|width
operator|<<
literal|2
operator|)
operator|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|premultiply_argb_inplace_mips_asm
argument_list|(
name|data
operator|->
name|data
argument_list|,
name|data
operator|->
name|height
argument_list|,
name|data
operator|->
name|width
argument_list|,
name|data
operator|->
name|bytes_per_line
operator|-
operator|(
name|data
operator|->
name|width
operator|<<
literal|2
operator|)
argument_list|)
expr_stmt|;
name|data
operator|->
name|format
operator|=
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_extern
extern|extern
literal|"C"
name|void
name|qt_convert_rgb888_to_rgb32_mips_dspr2_asm
parameter_list|(
name|uint
modifier|*
name|dst
parameter_list|,
specifier|const
name|uchar
modifier|*
name|src
parameter_list|,
name|int
name|len
parameter_list|)
function_decl|;
end_extern
begin_function
DECL|function|convert_RGB888_to_RGB32_mips_dspr2
name|void
name|convert_RGB888_to_RGB32_mips_dspr2
parameter_list|(
name|QImageData
modifier|*
name|dest
parameter_list|,
specifier|const
name|QImageData
modifier|*
name|src
parameter_list|,
name|Qt
operator|::
name|ImageConversionFlags
parameter_list|)
block|{
name|Q_ASSERT
argument_list|(
name|src
operator|->
name|format
operator|==
name|QImage
operator|::
name|Format_RGB888
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|dest
operator|->
name|format
operator|==
name|QImage
operator|::
name|Format_RGB32
operator|||
name|dest
operator|->
name|format
operator|==
name|QImage
operator|::
name|Format_ARGB32
operator|||
name|dest
operator|->
name|format
operator|==
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|src
operator|->
name|width
operator|==
name|dest
operator|->
name|width
argument_list|)
expr_stmt|;
name|Q_ASSERT
argument_list|(
name|src
operator|->
name|height
operator|==
name|dest
operator|->
name|height
argument_list|)
expr_stmt|;
specifier|const
name|uchar
modifier|*
name|src_data
init|=
operator|(
specifier|const
name|uchar
operator|*
operator|)
name|src
operator|->
name|data
decl_stmt|;
name|quint32
modifier|*
name|dest_data
init|=
operator|(
name|quint32
operator|*
operator|)
name|dest
operator|->
name|data
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|src
operator|->
name|height
condition|;
operator|++
name|i
control|)
block|{
name|qt_convert_rgb888_to_rgb32_mips_dspr2_asm
argument_list|(
name|dest_data
argument_list|,
name|src_data
argument_list|,
name|src
operator|->
name|width
argument_list|)
expr_stmt|;
name|src_data
operator|+=
name|src
operator|->
name|bytes_per_line
expr_stmt|;
name|dest_data
operator|=
operator|(
name|quint32
operator|*
operator|)
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dest_data
operator|+
name|dest
operator|->
name|bytes_per_line
operator|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
