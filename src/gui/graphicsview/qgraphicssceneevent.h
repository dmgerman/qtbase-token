begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QGRAPHICSSCENEEVENT_H
end_ifndef
begin_define
DECL|macro|QGRAPHICSSCENEEVENT_H
define|#
directive|define
name|QGRAPHICSSCENEEVENT_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qcoreevent.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qpoint.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qscopedpointer.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qrect.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpolygon.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qset.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qhash.h>
end_include
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
argument_list|(
name|Gui
argument_list|)
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_GRAPHICSVIEW
argument_list|)
operator|||
operator|(
name|QT_EDITION
operator|&
name|QT_MODULE_GRAPHICSVIEW
operator|)
operator|!=
name|QT_MODULE_GRAPHICSVIEW
name|class
name|QMimeData
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPointF
name|class
name|QPointF
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QSizeF
name|class
name|QSizeF
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWidget
name|class
name|QWidget
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneEventPrivate
name|class
name|QGraphicsSceneEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneEvent
range|:
name|public
name|QEvent
block|{
name|public
operator|:
name|QGraphicsSceneEvent
argument_list|(
argument|Type type
argument_list|)
block|;
operator|~
name|QGraphicsSceneEvent
argument_list|()
block|;
name|QWidget
operator|*
name|widget
argument_list|()
specifier|const
block|;
name|void
name|setWidget
argument_list|(
name|QWidget
operator|*
name|widget
argument_list|)
block|;
name|protected
operator|:
name|QGraphicsSceneEvent
argument_list|(
argument|QGraphicsSceneEventPrivate&dd
argument_list|,
argument|Type type = None
argument_list|)
block|;
name|QScopedPointer
operator|<
name|QGraphicsSceneEventPrivate
operator|>
name|d_ptr
block|;
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneEvent
argument_list|)
name|private
operator|:
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneEvent
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneMouseEventPrivate
name|class
name|QGraphicsSceneMouseEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneMouseEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|public
operator|:
name|QGraphicsSceneMouseEvent
argument_list|(
argument|Type type = None
argument_list|)
block|;
operator|~
name|QGraphicsSceneMouseEvent
argument_list|()
block|;
name|QPointF
name|pos
argument_list|()
specifier|const
block|;
name|void
name|setPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|scenePos
argument_list|()
specifier|const
block|;
name|void
name|setScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|screenPos
argument_list|()
specifier|const
block|;
name|void
name|setScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|buttonDownPos
argument_list|(
argument|Qt::MouseButton button
argument_list|)
specifier|const
block|;
name|void
name|setButtonDownPos
argument_list|(
argument|Qt::MouseButton button
argument_list|,
argument|const QPointF&pos
argument_list|)
block|;
name|QPointF
name|buttonDownScenePos
argument_list|(
argument|Qt::MouseButton button
argument_list|)
specifier|const
block|;
name|void
name|setButtonDownScenePos
argument_list|(
argument|Qt::MouseButton button
argument_list|,
argument|const QPointF&pos
argument_list|)
block|;
name|QPoint
name|buttonDownScreenPos
argument_list|(
argument|Qt::MouseButton button
argument_list|)
specifier|const
block|;
name|void
name|setButtonDownScreenPos
argument_list|(
argument|Qt::MouseButton button
argument_list|,
argument|const QPoint&pos
argument_list|)
block|;
name|QPointF
name|lastPos
argument_list|()
specifier|const
block|;
name|void
name|setLastPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|lastScenePos
argument_list|()
specifier|const
block|;
name|void
name|setLastScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|lastScreenPos
argument_list|()
specifier|const
block|;
name|void
name|setLastScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|Qt
operator|::
name|MouseButtons
name|buttons
argument_list|()
specifier|const
block|;
name|void
name|setButtons
argument_list|(
argument|Qt::MouseButtons buttons
argument_list|)
block|;
name|Qt
operator|::
name|MouseButton
name|button
argument_list|()
specifier|const
block|;
name|void
name|setButton
argument_list|(
argument|Qt::MouseButton button
argument_list|)
block|;
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|()
specifier|const
block|;
name|void
name|setModifiers
argument_list|(
argument|Qt::KeyboardModifiers modifiers
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneMouseEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneMouseEvent
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneWheelEventPrivate
name|class
name|QGraphicsSceneWheelEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneWheelEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|public
operator|:
name|QGraphicsSceneWheelEvent
argument_list|(
argument|Type type = None
argument_list|)
block|;
operator|~
name|QGraphicsSceneWheelEvent
argument_list|()
block|;
name|QPointF
name|pos
argument_list|()
specifier|const
block|;
name|void
name|setPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|scenePos
argument_list|()
specifier|const
block|;
name|void
name|setScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|screenPos
argument_list|()
specifier|const
block|;
name|void
name|setScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|Qt
operator|::
name|MouseButtons
name|buttons
argument_list|()
specifier|const
block|;
name|void
name|setButtons
argument_list|(
argument|Qt::MouseButtons buttons
argument_list|)
block|;
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|()
specifier|const
block|;
name|void
name|setModifiers
argument_list|(
argument|Qt::KeyboardModifiers modifiers
argument_list|)
block|;
name|int
name|delta
argument_list|()
specifier|const
block|;
name|void
name|setDelta
argument_list|(
argument|int delta
argument_list|)
block|;
name|Qt
operator|::
name|Orientation
name|orientation
argument_list|()
specifier|const
block|;
name|void
name|setOrientation
argument_list|(
argument|Qt::Orientation orientation
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneWheelEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneWheelEvent
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneContextMenuEventPrivate
name|class
name|QGraphicsSceneContextMenuEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneContextMenuEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|public
operator|:
expr|enum
name|Reason
block|{
name|Mouse
block|,
name|Keyboard
block|,
name|Other
block|}
block|;
name|QGraphicsSceneContextMenuEvent
argument_list|(
argument|Type type = None
argument_list|)
block|;
operator|~
name|QGraphicsSceneContextMenuEvent
argument_list|()
block|;
name|QPointF
name|pos
argument_list|()
specifier|const
block|;
name|void
name|setPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|scenePos
argument_list|()
specifier|const
block|;
name|void
name|setScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|screenPos
argument_list|()
specifier|const
block|;
name|void
name|setScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|()
specifier|const
block|;
name|void
name|setModifiers
argument_list|(
argument|Qt::KeyboardModifiers modifiers
argument_list|)
block|;
name|Reason
name|reason
argument_list|()
specifier|const
block|;
name|void
name|setReason
argument_list|(
argument|Reason reason
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneContextMenuEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneContextMenuEvent
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneHoverEventPrivate
name|class
name|QGraphicsSceneHoverEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneHoverEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|public
operator|:
name|QGraphicsSceneHoverEvent
argument_list|(
argument|Type type = None
argument_list|)
block|;
operator|~
name|QGraphicsSceneHoverEvent
argument_list|()
block|;
name|QPointF
name|pos
argument_list|()
specifier|const
block|;
name|void
name|setPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|scenePos
argument_list|()
specifier|const
block|;
name|void
name|setScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|screenPos
argument_list|()
specifier|const
block|;
name|void
name|setScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|lastPos
argument_list|()
specifier|const
block|;
name|void
name|setLastPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|lastScenePos
argument_list|()
specifier|const
block|;
name|void
name|setLastScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|lastScreenPos
argument_list|()
specifier|const
block|;
name|void
name|setLastScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|()
specifier|const
block|;
name|void
name|setModifiers
argument_list|(
argument|Qt::KeyboardModifiers modifiers
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneHoverEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneHoverEvent
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneHelpEventPrivate
name|class
name|QGraphicsSceneHelpEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneHelpEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|public
operator|:
name|QGraphicsSceneHelpEvent
argument_list|(
argument|Type type = None
argument_list|)
block|;
operator|~
name|QGraphicsSceneHelpEvent
argument_list|()
block|;
name|QPointF
name|scenePos
argument_list|()
specifier|const
block|;
name|void
name|setScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|screenPos
argument_list|()
specifier|const
block|;
name|void
name|setScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneHelpEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneHelpEvent
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneDragDropEventPrivate
name|class
name|QGraphicsSceneDragDropEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneDragDropEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|public
operator|:
name|QGraphicsSceneDragDropEvent
argument_list|(
argument|Type type = None
argument_list|)
block|;
operator|~
name|QGraphicsSceneDragDropEvent
argument_list|()
block|;
name|QPointF
name|pos
argument_list|()
specifier|const
block|;
name|void
name|setPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|scenePos
argument_list|()
specifier|const
block|;
name|void
name|setScenePos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPoint
name|screenPos
argument_list|()
specifier|const
block|;
name|void
name|setScreenPos
argument_list|(
specifier|const
name|QPoint
operator|&
name|pos
argument_list|)
block|;
name|Qt
operator|::
name|MouseButtons
name|buttons
argument_list|()
specifier|const
block|;
name|void
name|setButtons
argument_list|(
argument|Qt::MouseButtons buttons
argument_list|)
block|;
name|Qt
operator|::
name|KeyboardModifiers
name|modifiers
argument_list|()
specifier|const
block|;
name|void
name|setModifiers
argument_list|(
argument|Qt::KeyboardModifiers modifiers
argument_list|)
block|;
name|Qt
operator|::
name|DropActions
name|possibleActions
argument_list|()
specifier|const
block|;
name|void
name|setPossibleActions
argument_list|(
argument|Qt::DropActions actions
argument_list|)
block|;
name|Qt
operator|::
name|DropAction
name|proposedAction
argument_list|()
specifier|const
block|;
name|void
name|setProposedAction
argument_list|(
argument|Qt::DropAction action
argument_list|)
block|;
name|void
name|acceptProposedAction
argument_list|()
block|;
name|Qt
operator|::
name|DropAction
name|dropAction
argument_list|()
specifier|const
block|;
name|void
name|setDropAction
argument_list|(
argument|Qt::DropAction action
argument_list|)
block|;
name|QWidget
operator|*
name|source
argument_list|()
specifier|const
block|;
name|void
name|setSource
argument_list|(
name|QWidget
operator|*
name|source
argument_list|)
block|;
specifier|const
name|QMimeData
operator|*
name|mimeData
argument_list|()
specifier|const
block|;
name|void
name|setMimeData
argument_list|(
specifier|const
name|QMimeData
operator|*
name|data
argument_list|)
block|;
name|private
operator|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneDragDropEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneDragDropEvent
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneResizeEventPrivate
name|class
name|QGraphicsSceneResizeEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneResizeEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneResizeEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneResizeEvent
argument_list|)
name|public
operator|:
name|QGraphicsSceneResizeEvent
argument_list|()
block|;
operator|~
name|QGraphicsSceneResizeEvent
argument_list|()
block|;
name|QSizeF
name|oldSize
argument_list|()
specifier|const
block|;
name|void
name|setOldSize
argument_list|(
specifier|const
name|QSizeF
operator|&
name|size
argument_list|)
block|;
name|QSizeF
name|newSize
argument_list|()
specifier|const
block|;
name|void
name|setNewSize
argument_list|(
specifier|const
name|QSizeF
operator|&
name|size
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGraphicsSceneMoveEventPrivate
name|class
name|QGraphicsSceneMoveEventPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QGraphicsSceneMoveEvent
range|:
name|public
name|QGraphicsSceneEvent
block|{
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QGraphicsSceneMoveEvent
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QGraphicsSceneMoveEvent
argument_list|)
name|public
operator|:
name|QGraphicsSceneMoveEvent
argument_list|()
block|;
operator|~
name|QGraphicsSceneMoveEvent
argument_list|()
block|;
name|QPointF
name|oldPos
argument_list|()
specifier|const
block|;
name|void
name|setOldPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|;
name|QPointF
name|newPos
argument_list|()
specifier|const
block|;
name|void
name|setNewPos
argument_list|(
specifier|const
name|QPointF
operator|&
name|pos
argument_list|)
block|; }
decl_stmt|;
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_GRAPHICSVIEW
end_comment
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
