begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names **     of its contributors may be used to endorse or promote products derived **     from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|"clipwindow.h"
end_include
begin_constructor
DECL|function|ClipWindow
name|ClipWindow
operator|::
name|ClipWindow
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
block|{
name|clipboard
operator|=
name|QApplication
operator|::
name|clipboard
argument_list|()
expr_stmt|;
name|QWidget
modifier|*
name|centralWidget
init|=
operator|new
name|QWidget
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QWidget
modifier|*
name|currentItem
init|=
operator|new
name|QWidget
argument_list|(
name|centralWidget
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|mimeTypeLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"MIME types:"
argument_list|)
argument_list|,
name|currentItem
argument_list|)
decl_stmt|;
name|mimeTypeCombo
operator|=
operator|new
name|QComboBox
argument_list|(
name|currentItem
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|dataLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Data:"
argument_list|)
argument_list|,
name|currentItem
argument_list|)
decl_stmt|;
name|dataInfoLabel
operator|=
operator|new
name|QLabel
argument_list|(
literal|""
argument_list|,
name|currentItem
argument_list|)
expr_stmt|;
name|previousItems
operator|=
operator|new
name|QListWidget
argument_list|(
name|centralWidget
argument_list|)
expr_stmt|;
comment|//! [0]
name|connect
argument_list|(
name|clipboard
argument_list|,
name|SIGNAL
argument_list|(
name|dataChanged
argument_list|()
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateClipboard
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//! [0]
name|connect
argument_list|(
name|mimeTypeCombo
argument_list|,
name|SIGNAL
argument_list|(
name|activated
argument_list|(
specifier|const
name|QString
operator|&
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|updateData
argument_list|(
specifier|const
name|QString
operator|&
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|currentLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|currentItem
argument_list|)
decl_stmt|;
name|currentLayout
operator|->
name|addWidget
argument_list|(
name|mimeTypeLabel
argument_list|)
expr_stmt|;
name|currentLayout
operator|->
name|addWidget
argument_list|(
name|mimeTypeCombo
argument_list|)
expr_stmt|;
name|currentLayout
operator|->
name|addWidget
argument_list|(
name|dataLabel
argument_list|)
expr_stmt|;
name|currentLayout
operator|->
name|addWidget
argument_list|(
name|dataInfoLabel
argument_list|)
expr_stmt|;
name|currentLayout
operator|->
name|addStretch
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QHBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QHBoxLayout
argument_list|(
name|centralWidget
argument_list|)
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|currentItem
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|previousItems
argument_list|)
expr_stmt|;
name|setCentralWidget
argument_list|(
name|centralWidget
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Clipboard"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|updateClipboard
name|void
name|ClipWindow
operator|::
name|updateClipboard
parameter_list|()
block|{
name|QStringList
name|formats
init|=
name|clipboard
operator|->
name|mimeData
argument_list|()
operator|->
name|formats
argument_list|()
decl_stmt|;
name|QByteArray
name|data
init|=
name|clipboard
operator|->
name|mimeData
argument_list|()
operator|->
name|data
argument_list|(
name|format
argument_list|)
decl_stmt|;
comment|//! [1]
name|mimeTypeCombo
operator|->
name|clear
argument_list|()
expr_stmt|;
name|mimeTypeCombo
operator|->
name|insertStringList
argument_list|(
name|formats
argument_list|)
expr_stmt|;
name|int
name|size
init|=
name|clipboard
operator|->
name|mimeData
argument_list|()
operator|->
name|data
argument_list|(
name|formats
index|[
literal|0
index|]
argument_list|)
operator|.
name|size
argument_list|()
decl_stmt|;
name|QListWidgetItem
modifier|*
name|newItem
init|=
operator|new
name|QListWidgetItem
argument_list|(
name|previousItems
argument_list|)
decl_stmt|;
name|newItem
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"%1 (%2 bytes)"
argument_list|)
operator|.
name|arg
argument_list|(
name|formats
index|[
literal|0
index|]
argument_list|)
operator|.
name|arg
argument_list|(
name|size
argument_list|)
argument_list|)
expr_stmt|;
name|updateData
argument_list|(
name|formats
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
comment|//! [2]
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|updateData
name|void
name|ClipWindow
operator|::
name|updateData
parameter_list|(
specifier|const
name|QString
modifier|&
name|format
parameter_list|)
block|{
name|QByteArray
name|data
init|=
name|clipboard
operator|->
name|mimeData
argument_list|()
operator|->
name|data
argument_list|(
name|format
argument_list|)
decl_stmt|;
name|dataInfoLabel
operator|->
name|setText
argument_list|(
name|tr
argument_list|(
literal|"%1 bytes"
argument_list|)
operator|.
name|arg
argument_list|(
name|data
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
