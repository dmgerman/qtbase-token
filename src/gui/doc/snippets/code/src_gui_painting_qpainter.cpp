begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_comment
comment|//! [0]
end_comment
begin_function
DECL|function|paintEvent
name|void
name|SimpleExampleWidget
operator|::
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|painter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|painter
operator|.
name|setPen
argument_list|(
name|Qt
operator|::
name|blue
argument_list|)
expr_stmt|;
name|painter
operator|.
name|setFont
argument_list|(
name|QFont
argument_list|(
literal|"Arial"
argument_list|,
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|painter
operator|.
name|drawText
argument_list|(
name|rect
argument_list|()
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
literal|"Qt"
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [0]
end_comment
begin_comment
comment|//! [1]
end_comment
begin_function
DECL|function|paintEvent
name|void
name|MyWidget
operator|::
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|p
decl_stmt|;
name|p
operator|.
name|begin
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
operator|...
argument_list|)
expr_stmt|;
comment|// drawing code
name|p
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [1]
end_comment
begin_comment
comment|//! [2]
end_comment
begin_function
DECL|function|paintEvent
name|void
name|MyWidget
operator|::
name|paintEvent
parameter_list|(
name|QPaintEvent
modifier|*
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|p
operator|.
name|drawLine
argument_list|(
operator|...
argument_list|)
expr_stmt|;
comment|// drawing code
block|}
end_function
begin_comment
comment|//! [2]
end_comment
begin_comment
comment|//! [3]
end_comment
begin_expr_stmt
name|painter
operator|->
name|begin
argument_list|(
literal|0
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// impossible - paint device cannot be 0
end_comment
begin_decl_stmt
name|QPixmap
name|image
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|painter
operator|->
name|begin
argument_list|(
operator|&
name|image
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// impossible - image.isNull() == true;
end_comment
begin_expr_stmt
name|painter
operator|->
name|begin
argument_list|(
name|myWidget
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|painter2
operator|->
name|begin
argument_list|(
name|myWidget
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|// impossible - only one painter at a time
end_comment
begin_comment
comment|//! [3]
end_comment
begin_comment
comment|//! [4]
end_comment
begin_function
DECL|function|rotate
name|void
name|QPainter
operator|::
name|rotate
parameter_list|(
name|qreal
name|angle
parameter_list|)
block|{
name|QMatrix
name|matrix
decl_stmt|;
name|matrix
operator|.
name|rotate
argument_list|(
name|angle
argument_list|)
expr_stmt|;
name|setWorldMatrix
argument_list|(
name|matrix
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|//! [4]
end_comment
begin_comment
comment|//! [5]
end_comment
begin_decl_stmt
DECL|variable|path
name|QPainterPath
name|path
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|path
operator|.
name|moveTo
argument_list|(
literal|20
argument_list|,
literal|80
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|path
operator|.
name|lineTo
argument_list|(
literal|20
argument_list|,
literal|30
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|path
operator|.
name|cubicTo
argument_list|(
literal|80
argument_list|,
literal|0
argument_list|,
literal|50
argument_list|,
literal|50
argument_list|,
literal|80
argument_list|,
literal|80
argument_list|)
expr_stmt|;
end_expr_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [5]
end_comment
begin_comment
comment|//! [6]
end_comment
begin_decl_stmt
name|QLineF
name|line
argument_list|(
literal|10.0
argument_list|,
literal|80.0
argument_list|,
literal|90.0
argument_list|,
literal|20.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QPainter
argument_list|(
name|this
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|painter
operator|.
name|drawLine
argument_list|(
name|line
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [6]
end_comment
begin_comment
comment|//! [7]
end_comment
begin_decl_stmt
name|QRectF
name|rectangle
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawRect
argument_list|(
name|rectangle
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [7]
end_comment
begin_comment
comment|//! [8]
end_comment
begin_decl_stmt
name|QRectF
name|rectangle
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawRoundedRect
argument_list|(
name|rectangle
argument_list|,
literal|20.0
argument_list|,
literal|15.0
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [8]
end_comment
begin_comment
comment|//! [9]
end_comment
begin_decl_stmt
name|QRectF
name|rectangle
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawEllipse
argument_list|(
name|rectangle
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [9]
end_comment
begin_comment
comment|//! [10]
end_comment
begin_decl_stmt
name|QRectF
name|rectangle
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|startAngle
name|int
name|startAngle
init|=
literal|30
operator|*
literal|16
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|spanAngle
name|int
name|spanAngle
init|=
literal|120
operator|*
literal|16
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawArc
argument_list|(
name|rectangle
argument_list|,
name|startAngle
argument_list|,
name|spanAngle
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [10]
end_comment
begin_comment
comment|//! [11]
end_comment
begin_decl_stmt
name|QRectF
name|rectangle
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|startAngle
name|int
name|startAngle
init|=
literal|30
operator|*
literal|16
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|spanAngle
name|int
name|spanAngle
init|=
literal|120
operator|*
literal|16
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawPie
argument_list|(
name|rectangle
argument_list|,
name|startAngle
argument_list|,
name|spanAngle
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [11]
end_comment
begin_comment
comment|//! [12]
end_comment
begin_decl_stmt
name|QRectF
name|rectangle
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|startAngle
name|int
name|startAngle
init|=
literal|30
operator|*
literal|16
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|spanAngle
name|int
name|spanAngle
init|=
literal|120
operator|*
literal|16
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawChord
argument_list|(
name|rect
argument_list|,
name|startAngle
argument_list|,
name|spanAngle
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [12]
end_comment
begin_comment
comment|//! [13]
end_comment
begin_decl_stmt
DECL|variable|points
specifier|static
specifier|const
name|QPointF
name|points
index|[
literal|3
index|]
init|=
block|{
name|QPointF
argument_list|(
literal|10.0
argument_list|,
literal|80.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|20.0
argument_list|,
literal|10.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|80.0
argument_list|,
literal|30.0
argument_list|)
block|, }
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawPolyline
argument_list|(
name|points
argument_list|,
literal|3
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [13]
end_comment
begin_comment
comment|//! [14]
end_comment
begin_decl_stmt
DECL|variable|points
specifier|static
specifier|const
name|QPointF
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPointF
argument_list|(
literal|10.0
argument_list|,
literal|80.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|20.0
argument_list|,
literal|10.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|80.0
argument_list|,
literal|30.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|90.0
argument_list|,
literal|70.0
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawPolygon
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [14]
end_comment
begin_comment
comment|//! [15]
end_comment
begin_decl_stmt
DECL|variable|points
specifier|static
specifier|const
name|QPointF
name|points
index|[
literal|4
index|]
init|=
block|{
name|QPointF
argument_list|(
literal|10.0
argument_list|,
literal|80.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|20.0
argument_list|,
literal|10.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|80.0
argument_list|,
literal|30.0
argument_list|)
block|,
name|QPointF
argument_list|(
literal|90.0
argument_list|,
literal|70.0
argument_list|)
block|}
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawConvexPolygon
argument_list|(
name|points
argument_list|,
literal|4
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [15]
end_comment
begin_comment
comment|//! [16]
end_comment
begin_decl_stmt
name|QRectF
name|target
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QRectF
name|source
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|70.0
argument_list|,
literal|40.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QPixmap
name|pixmap
argument_list|(
literal|":myPixmap.png"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QPainter
argument_list|(
name|this
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|painter
operator|.
name|drawPixmap
argument_list|(
name|target
argument_list|,
name|pixmap
argument_list|,
name|source
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [16]
end_comment
begin_comment
comment|//! [17]
end_comment
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawText
argument_list|(
name|rect
argument_list|,
name|Qt
operator|::
name|AlignCenter
argument_list|,
name|tr
argument_list|(
literal|"Qt\nProject"
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [17]
end_comment
begin_comment
comment|//! [18]
end_comment
begin_decl_stmt
DECL|variable|picture
name|QPicture
name|picture
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QPointF
name|point
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|)
name|picture
operator|.
name|load
argument_list|(
literal|"drawing.pic"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawPicture
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|picture
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [18]
end_comment
begin_comment
comment|//! [19]
end_comment
begin_expr_stmt
name|fillRect
argument_list|(
name|rectangle
argument_list|,
name|background
argument_list|()
argument_list|)
operator|.
comment|//! [19]
comment|//! [20]
name|QRectF
name|target
argument_list|(
literal|10.0
argument_list|,
literal|20.0
argument_list|,
literal|80.0
argument_list|,
literal|60.0
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QRectF
name|source
argument_list|(
literal|0.0
argument_list|,
literal|0.0
argument_list|,
literal|70.0
argument_list|,
literal|40.0
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|QImage
name|image
argument_list|(
literal|":/images/myImage.png"
argument_list|)
decl_stmt|;
end_decl_stmt
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|drawImage
argument_list|(
name|target
argument_list|,
name|image
argument_list|,
name|source
argument_list|)
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [20]
end_comment
begin_comment
comment|//! [21]
end_comment
begin_function_decl
name|QPainter
name|painter
parameter_list|(
name|this
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|painter
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|128
argument_list|,
literal|128
argument_list|,
name|Qt
operator|::
name|green
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|painter
operator|.
name|beginNativePainting
argument_list|()
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|GL_SCISSOR_TEST
name|glEnable
argument_list|(
name|GL_SCISSOR_TEST
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|glScissor
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|64
argument_list|,
literal|64
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|glClearColor
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|GL_COLOR_BUFFER_BIT
name|glClear
argument_list|(
name|GL_COLOR_BUFFER_BIT
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|variable|GL_SCISSOR_TEST
name|glDisable
argument_list|(
name|GL_SCISSOR_TEST
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|painter
operator|.
name|endNativePainting
argument_list|()
expr_stmt|;
end_expr_stmt
begin_comment
comment|//! [21]
end_comment
end_unit
