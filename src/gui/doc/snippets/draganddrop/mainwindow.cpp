begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the documentation of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** You may use this file under the terms of the BSD license as follows: ** ** "Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: **   * Redistributions of source code must retain the above copyright **     notice, this list of conditions and the following disclaimer. **   * Redistributions in binary form must reproduce the above copyright **     notice, this list of conditions and the following disclaimer in **     the documentation and/or other materials provided with the **     distribution. **   * Neither the name of The Qt Company Ltd and its Subsidiary(-ies) nor the **     names of its contributors may be used to endorse or promote products **     derived from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<QtGui>
end_include
begin_include
include|#
directive|include
file|"dragwidget.h"
end_include
begin_include
include|#
directive|include
file|"mainwindow.h"
end_include
begin_constructor
DECL|function|MainWindow
name|MainWindow
operator|::
name|MainWindow
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QMainWindow
argument_list|(
name|parent
argument_list|)
block|{
name|QFrame
modifier|*
name|centralWidget
init|=
operator|new
name|QFrame
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|QLabel
modifier|*
name|mimeTypeLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"MIME types:"
argument_list|)
argument_list|,
name|centralWidget
argument_list|)
decl_stmt|;
name|mimeTypeCombo
operator|=
operator|new
name|QComboBox
argument_list|(
name|centralWidget
argument_list|)
expr_stmt|;
name|QLabel
modifier|*
name|dataLabel
init|=
operator|new
name|QLabel
argument_list|(
name|tr
argument_list|(
literal|"Amount of data (bytes):"
argument_list|)
argument_list|,
name|centralWidget
argument_list|)
decl_stmt|;
name|dragWidget
operator|=
operator|new
name|DragWidget
argument_list|(
name|centralWidget
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|dragWidget
argument_list|,
name|SIGNAL
argument_list|(
name|mimeTypes
argument_list|(
name|QStringList
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setMimeTypes
argument_list|(
name|QStringList
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|connect
argument_list|(
name|dragWidget
argument_list|,
name|SIGNAL
argument_list|(
name|dragResult
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|this
argument_list|,
name|SLOT
argument_list|(
name|setDragResult
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|QVBoxLayout
modifier|*
name|mainLayout
init|=
operator|new
name|QVBoxLayout
argument_list|(
name|centralWidget
argument_list|)
decl_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|mimeTypeLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|mimeTypeCombo
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addSpacing
argument_list|(
literal|32
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|dataLabel
argument_list|)
expr_stmt|;
name|mainLayout
operator|->
name|addWidget
argument_list|(
name|dragWidget
argument_list|)
expr_stmt|;
name|statusBar
argument_list|()
expr_stmt|;
name|dragWidget
operator|->
name|setData
argument_list|(
name|QString
argument_list|(
literal|"text/plain"
argument_list|)
argument_list|,
name|QByteArray
argument_list|(
literal|"Hello world"
argument_list|)
argument_list|)
expr_stmt|;
name|setCentralWidget
argument_list|(
name|centralWidget
argument_list|)
expr_stmt|;
name|setWindowTitle
argument_list|(
name|tr
argument_list|(
literal|"Drag and Drop"
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_constructor
begin_function
DECL|function|setDragResult
name|void
name|MainWindow
operator|::
name|setDragResult
parameter_list|(
specifier|const
name|QString
modifier|&
name|actionText
parameter_list|)
block|{
name|statusBar
argument_list|()
operator|->
name|showMessage
argument_list|(
name|actionText
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setMimeTypes
name|void
name|MainWindow
operator|::
name|setMimeTypes
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|types
parameter_list|)
block|{
name|mimeTypeCombo
operator|->
name|clear
argument_list|()
expr_stmt|;
name|mimeTypeCombo
operator|->
name|addItems
argument_list|(
name|types
argument_list|)
expr_stmt|;
block|}
end_function
end_unit
