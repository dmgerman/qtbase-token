begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QABSTRACTFONTENGINE_QWS_H
end_ifndef
begin_define
DECL|macro|QABSTRACTFONTENGINE_QWS_H
define|#
directive|define
name|QABSTRACTFONTENGINE_QWS_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qobject.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qhash.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qvariant.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qfactoryinterface.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpaintengine.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qfontdatabase.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Gui
parameter_list|)
name|class
name|QFontEngineInfoPrivate
decl_stmt|;
name|class
name|Q_GUI_EXPORT
name|QFontEngineInfo
decl_stmt|{ public:     QDOC_PROPERTY(QString family READ family WRITE setFamily
end_function
begin_macro
unit|)
name|QDOC_PROPERTY
argument_list|(
argument|qreal pixelSize READ pixelSize WRITE setPixelSize
argument_list|)
end_macro
begin_macro
name|QDOC_PROPERTY
argument_list|(
argument|int weight READ weight WRITE setWeight
argument_list|)
end_macro
begin_macro
name|QDOC_PROPERTY
argument_list|(
argument|QFont::Style style READ style WRITE setStyle
argument_list|)
end_macro
begin_macro
name|QDOC_PROPERTY
argument_list|(
argument|QList<QFontDatabase::WritingSystem> writingSystems READ writingSystems WRITE setWritingSystems
argument_list|)
end_macro
begin_expr_stmt
name|QFontEngineInfo
argument_list|()
expr_stmt|;
end_expr_stmt
begin_function_decl
name|explicit
name|QFontEngineInfo
parameter_list|(
specifier|const
name|QString
modifier|&
name|family
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|QFontEngineInfo
argument_list|(
specifier|const
name|QFontEngineInfo
operator|&
name|other
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QFontEngineInfo
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QFontEngineInfo
operator|&
name|other
operator|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|~
name|QFontEngineInfo
argument_list|()
expr_stmt|;
end_expr_stmt
begin_function_decl
name|void
name|setFamily
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|QString
name|family
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_function_decl
name|void
name|setPixelSize
parameter_list|(
name|qreal
name|size
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|qreal
name|pixelSize
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_function_decl
name|void
name|setWeight
parameter_list|(
name|int
name|weight
parameter_list|)
function_decl|;
end_function_decl
begin_expr_stmt
name|int
name|weight
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|void
name|setStyle
argument_list|(
name|QFont
operator|::
name|Style
name|style
argument_list|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|QFont
operator|::
name|Style
name|style
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|QList
operator|<
name|QFontDatabase
operator|::
name|WritingSystem
operator|>
name|writingSystems
argument_list|()
specifier|const
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|void
name|setWritingSystems
argument_list|(
specifier|const
name|QList
operator|<
name|QFontDatabase
operator|::
name|WritingSystem
operator|>
operator|&
name|writingSystems
argument_list|)
decl_stmt|;
end_decl_stmt
begin_label
name|private
label|:
end_label
begin_decl_stmt
name|QFontEngineInfoPrivate
modifier|*
name|d
decl_stmt|;
end_decl_stmt
begin_decl_stmt
unit|};
DECL|variable|QAbstractFontEngine
name|class
name|QAbstractFontEngine
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|struct|QFactoryInterface
name|struct
name|Q_GUI_EXPORT
name|QFontEngineFactoryInterface
range|:
name|public
name|QFactoryInterface
block|{
DECL|member|info
name|virtual
name|QAbstractFontEngine
operator|*
name|create
argument_list|(
specifier|const
name|QFontEngineInfo
operator|&
name|info
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|QList
operator|<
name|QFontEngineInfo
operator|>
name|availableFontEngines
argument_list|()
specifier|const
operator|=
literal|0
block|; }
decl_stmt|;
end_decl_stmt
begin_define
DECL|macro|QFontEngineFactoryInterface_iid
define|#
directive|define
name|QFontEngineFactoryInterface_iid
value|"com.trolltech.Qt.QFontEngineFactoryInterface"
end_define
begin_macro
DECL|function|Q_DECLARE_INTERFACE
name|Q_DECLARE_INTERFACE
argument_list|(
argument|QFontEngineFactoryInterface
argument_list|,
argument|QFontEngineFactoryInterface_iid
argument_list|)
end_macro
begin_decl_stmt
name|class
name|QFontEnginePluginPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QFontEnginePlugin
range|:
name|public
name|QObject
decl_stmt|,
name|public
name|QFontEngineFactoryInterface
block|{
name|Q_OBJECT
name|Q_INTERFACES
argument_list|(
name|QFontEngineFactoryInterface
operator|:
name|QFactoryInterface
argument_list|)
name|public
range|:
name|QFontEnginePlugin
argument_list|(
specifier|const
name|QString
operator|&
name|foundry
argument_list|,
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
decl_stmt|;
operator|~
name|QFontEnginePlugin
argument_list|()
expr_stmt|;
name|virtual
name|QStringList
name|keys
argument_list|()
specifier|const
expr_stmt|;
name|virtual
name|QAbstractFontEngine
modifier|*
name|create
parameter_list|(
specifier|const
name|QFontEngineInfo
modifier|&
name|info
parameter_list|)
init|=
literal|0
function_decl|;
name|virtual
name|QList
operator|<
name|QFontEngineInfo
operator|>
name|availableFontEngines
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
name|private
label|:
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QFontEnginePlugin
argument_list|)
name|Q_DISABLE_COPY
argument_list|(
argument|QFontEnginePlugin
argument_list|)
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
DECL|variable|QAbstractFontEnginePrivate
name|class
name|QAbstractFontEnginePrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QAbstractFontEngine
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
expr|enum
name|Capability
block|{
name|CanOutlineGlyphs
operator|=
literal|1
block|,
name|CanRenderGlyphs_Mono
operator|=
literal|2
block|,
name|CanRenderGlyphs_Gray
operator|=
literal|4
block|,
name|CanRenderGlyphs
operator|=
name|CanRenderGlyphs_Mono
operator||
name|CanRenderGlyphs_Gray
block|}
block|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|Capabilities
argument_list|,
argument|Capability
argument_list|)
name|explicit
name|QAbstractFontEngine
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
operator|~
name|QAbstractFontEngine
argument_list|()
block|;
typedef|typedef
name|int
name|Fixed
typedef|;
comment|// 26.6
block|struct
name|FixedPoint
block|{
name|Fixed
name|x
block|;
name|Fixed
name|y
block|;     }
decl_stmt|;
end_decl_stmt
begin_struct
struct|struct
name|GlyphMetrics
block|{
specifier|inline
name|GlyphMetrics
argument_list|()
operator|:
name|x
argument_list|(
literal|0
argument_list|)
operator|,
name|y
argument_list|(
literal|0
argument_list|)
operator|,
name|width
argument_list|(
literal|0
argument_list|)
operator|,
name|height
argument_list|(
literal|0
argument_list|)
operator|,
name|advance
argument_list|(
literal|0
argument_list|)
block|{}
name|Fixed
name|x
expr_stmt|;
name|Fixed
name|y
decl_stmt|;
name|Fixed
name|width
decl_stmt|;
name|Fixed
name|height
decl_stmt|;
name|Fixed
name|advance
decl_stmt|;
block|}
struct|;
end_struct
begin_enum
enum|enum
name|FontProperty
block|{
name|Ascent
block|,
name|Descent
block|,
name|Leading
block|,
name|XHeight
block|,
name|AverageCharWidth
block|,
name|LineThickness
block|,
name|UnderlinePosition
block|,
name|MaxCharWidth
block|,
name|MinLeftBearing
block|,
name|MinRightBearing
block|,
name|GlyphCount
block|,
comment|// hints
name|CacheGlyphsHint
block|,
name|OutlineGlyphsHint
block|}
enum|;
end_enum
begin_comment
comment|// keep in sync with QTextEngine::ShaperFlag!!
end_comment
begin_enum
enum|enum
name|TextShapingFlag
block|{
name|RightToLeft
init|=
literal|0x0001
block|,
name|ReturnDesignMetrics
init|=
literal|0x0002
block|}
enum|;
end_enum
begin_macro
name|Q_DECLARE_FLAGS
argument_list|(
argument|TextShapingFlags
argument_list|,
argument|TextShapingFlag
argument_list|)
end_macro
begin_expr_stmt
name|virtual
name|Capabilities
name|capabilities
argument_list|()
specifier|const
operator|=
literal|0
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|virtual
name|QVariant
name|fontProperty
argument_list|(
name|FontProperty
name|property
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|virtual
name|bool
name|convertStringToGlyphIndices
argument_list|(
specifier|const
name|QChar
operator|*
name|string
argument_list|,
name|int
name|length
argument_list|,
name|uint
operator|*
name|glyphs
argument_list|,
name|int
operator|*
name|numGlyphs
argument_list|,
name|TextShapingFlags
name|flags
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|virtual
name|void
name|getGlyphAdvances
argument_list|(
specifier|const
name|uint
operator|*
name|glyphs
argument_list|,
name|int
name|numGlyphs
argument_list|,
name|Fixed
operator|*
name|advances
argument_list|,
name|TextShapingFlags
name|flags
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|virtual
name|GlyphMetrics
name|glyphMetrics
argument_list|(
name|uint
name|glyph
argument_list|)
decl|const
init|=
literal|0
decl_stmt|;
end_decl_stmt
begin_function_decl
name|virtual
name|bool
name|renderGlyph
parameter_list|(
name|uint
name|glyph
parameter_list|,
name|int
name|depth
parameter_list|,
name|int
name|bytesPerLine
parameter_list|,
name|int
name|height
parameter_list|,
name|uchar
modifier|*
name|buffer
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|virtual
name|void
name|addGlyphOutlinesToPath
parameter_list|(
name|uint
modifier|*
name|glyphs
parameter_list|,
name|int
name|numGlyphs
parameter_list|,
name|FixedPoint
modifier|*
name|positions
parameter_list|,
name|QPainterPath
modifier|*
name|path
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|/*     enum Extension {         GetTrueTypeTable     };      virtual bool supportsExtension(Extension extension) const;     virtual QVariant extension(Extension extension, const QVariant&argument = QVariant());     */
end_comment
begin_label
name|private
label|:
end_label
begin_macro
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QAbstractFontEngine
argument_list|)
end_macro
begin_macro
name|Q_DISABLE_COPY
argument_list|(
argument|QAbstractFontEngine
argument_list|)
end_macro
begin_macro
unit|};
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QAbstractFontEngine::Capabilities
argument_list|)
end_macro
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QAbstractFontEngine::TextShapingFlags
argument_list|)
end_macro
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
end_unit
