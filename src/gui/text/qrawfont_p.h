begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QRAWFONTPRIVATE_P_H
end_ifndef
begin_define
DECL|macro|QRAWFONTPRIVATE_P_H
define|#
directive|define
name|QRAWFONTPRIVATE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qrawfont.h"
end_include
begin_include
include|#
directive|include
file|"qfontengine_p.h"
end_include
begin_include
include|#
directive|include
file|<QtCore/qthread.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qthreadstorage.h>
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_RAWFONT
argument_list|)
end_if
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|namespace
block|{
name|class
name|CustomFontFileLoader
decl_stmt|;
block|}
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QRawFontPrivate
block|{
name|public
label|:
name|QRawFontPrivate
argument_list|()
operator|:
name|fontEngine
argument_list|(
literal|0
argument_list|)
operator|,
name|hintingPreference
argument_list|(
name|QFont
operator|::
name|PreferDefaultHinting
argument_list|)
operator|,
name|thread
argument_list|(
literal|0
argument_list|)
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|,
name|fontHandle
argument_list|(
name|NULL
argument_list|)
operator|,
name|ptrAddFontMemResourceEx
argument_list|(
name|NULL
argument_list|)
operator|,
name|ptrRemoveFontMemResourceEx
argument_list|(
argument|NULL
argument_list|)
endif|#
directive|endif
block|{}
name|QRawFontPrivate
argument_list|(
specifier|const
name|QRawFontPrivate
operator|&
name|other
argument_list|)
operator|:
name|hintingPreference
argument_list|(
name|other
operator|.
name|hintingPreference
argument_list|)
operator|,
name|thread
argument_list|(
name|other
operator|.
name|thread
argument_list|)
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
operator|,
name|fontHandle
argument_list|(
name|NULL
argument_list|)
operator|,
name|ptrAddFontMemResourceEx
argument_list|(
name|other
operator|.
name|ptrAddFontMemResourceEx
argument_list|)
operator|,
name|ptrRemoveFontMemResourceEx
argument_list|(
argument|other.ptrRemoveFontMemResourceEx
argument_list|)
endif|#
directive|endif
block|{
name|fontEngine
operator|=
name|other
operator|.
name|fontEngine
block|;
if|if
condition|(
name|fontEngine
operator|!=
literal|0
condition|)
name|fontEngine
operator|->
name|ref
operator|.
name|ref
argument_list|()
expr_stmt|;
block|}
operator|~
name|QRawFontPrivate
argument_list|()
block|{
name|Q_ASSERT
argument_list|(
name|ref
operator|==
literal|0
argument_list|)
block|;
name|cleanUp
argument_list|()
block|;     }
specifier|inline
name|bool
name|isValid
argument_list|()
specifier|const
block|{
name|Q_ASSERT
argument_list|(
name|thread
operator|==
literal|0
operator|||
name|thread
operator|==
name|QThread
operator|::
name|currentThread
argument_list|()
argument_list|)
block|;
return|return
name|fontEngine
operator|!=
literal|0
return|;
block|}
name|void
name|cleanUp
parameter_list|()
function_decl|;
name|void
name|platformCleanUp
parameter_list|()
function_decl|;
name|void
name|platformLoadFromData
argument_list|(
specifier|const
name|QByteArray
operator|&
name|fontData
argument_list|,
name|qreal
name|pixelSize
argument_list|,
name|QFont
operator|::
name|HintingPreference
name|hintingPreference
argument_list|)
decl_stmt|;
specifier|static
name|QRawFontPrivate
modifier|*
name|get
parameter_list|(
specifier|const
name|QRawFont
modifier|&
name|font
parameter_list|)
block|{
return|return
name|font
operator|.
name|d
operator|.
name|data
argument_list|()
return|;
block|}
name|QFontEngine
modifier|*
name|fontEngine
decl_stmt|;
name|QFont
operator|::
name|HintingPreference
name|hintingPreference
expr_stmt|;
name|QThread
modifier|*
name|thread
decl_stmt|;
name|QAtomicInt
name|ref
decl_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|Q_WS_WIN
argument_list|)
name|HANDLE
name|fontHandle
decl_stmt|;
typedef|typedef
name|HANDLE
function_decl|(
name|WINAPI
modifier|*
name|PtrAddFontMemResourceEx
function_decl|)
parameter_list|(
name|PVOID
parameter_list|,
name|DWORD
parameter_list|,
name|PVOID
parameter_list|,
name|DWORD
modifier|*
parameter_list|)
function_decl|;
typedef|typedef
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|PtrRemoveFontMemResourceEx
function_decl|)
parameter_list|(
name|HANDLE
parameter_list|)
function_decl|;
name|PtrAddFontMemResourceEx
name|ptrAddFontMemResourceEx
decl_stmt|;
name|PtrRemoveFontMemResourceEx
name|ptrRemoveFontMemResourceEx
decl_stmt|;
endif|#
directive|endif
comment|// Q_WS_WIN
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_RAWFONT
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QRAWFONTPRIVATE_P_H
end_comment
end_unit
