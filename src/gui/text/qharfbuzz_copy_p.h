begin_unit
begin_comment
comment|/*  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies)  * Copyright (C) 2007  Red Hat, Inc.  *  * This code is a modified version of some part of HarfBuzz,  * an OpenType Layout engine library.  *  * Permission is hereby granted, without written agreement and without  * license or royalty fees, to use, copy, modify, and distribute this  * software and its documentation for any purpose, provided that the  * above copyright notice and the following two paragraphs appear in  * all copies of this software.  *  * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR  * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES  * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN  * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH  * DAMAGE.  *  * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,  * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND  * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS  * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO  * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.  *  * Red Hat Author(s): Behdad Esfahbod  */
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QHARFBUZZ_COPY_P_H
end_ifndef
begin_define
DECL|macro|QHARFBUZZ_COPY_P_H
define|#
directive|define
name|QHARFBUZZ_COPY_P_H
end_define
begin_comment
comment|/*   The purpose of this header file is to allow inclusion of the private   headers for font and text classes without having to pull in the full   harfbuzz library under QTDIR/src/3rdparty/harfbuzz/src */
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_BUILD_GUI_LIB
argument_list|)
operator|||
name|defined
argument_list|(
name|QT_COMPILES_IN_HARFBUZZ
argument_list|)
end_if
begin_include
include|#
directive|include
file|<private/qharfbuzz_p.h>
end_include
begin_else
else|#
directive|else
end_else
begin_extern
extern|extern
literal|"C"
block|{
ifdef|#
directive|ifdef
name|__xlC__
DECL|typedef|hb_bitfield
typedef|typedef
name|unsigned
name|hb_bitfield
typedef|;
else|#
directive|else
DECL|typedef|hb_bitfield
typedef|typedef
name|QT_PREPEND_NAMESPACE
argument_list|(
argument|quint8
argument_list|)
name|hb_bitfield
expr_stmt|;
endif|#
directive|endif
typedef|typedef
enum|enum
block|{
comment|/* no error */
DECL|enumerator|HB_Err_Ok
name|HB_Err_Ok
init|=
literal|0x0000
block|,
DECL|enumerator|HB_Err_Not_Covered
name|HB_Err_Not_Covered
init|=
literal|0xFFFF
block|,
comment|/* _hb_err() is called whenever returning the following errors,    * and in a couple places for HB_Err_Not_Covered too. */
comment|/* programmer error */
DECL|enumerator|HB_Err_Invalid_Argument
name|HB_Err_Invalid_Argument
init|=
literal|0x1A66
block|,
comment|/* font error */
DECL|enumerator|HB_Err_Invalid_SubTable_Format
name|HB_Err_Invalid_SubTable_Format
init|=
literal|0x157F
block|,
DECL|enumerator|HB_Err_Invalid_SubTable
name|HB_Err_Invalid_SubTable
init|=
literal|0x1570
block|,
DECL|enumerator|HB_Err_Read_Error
name|HB_Err_Read_Error
init|=
literal|0x6EAD
block|,
comment|/* system error */
DECL|enumerator|HB_Err_Out_Of_Memory
name|HB_Err_Out_Of_Memory
init|=
literal|0xDEAD
block|}
DECL|typedef|HB_Error
name|HB_Error
typedef|;
DECL|typedef|HB_Glyph
typedef|typedef
name|QT_PREPEND_NAMESPACE
argument_list|(
argument|quint32
argument_list|)
name|HB_Glyph
expr_stmt|;
DECL|typedef|HB_Font
typedef|typedef
name|void
modifier|*
name|HB_Font
typedef|;
DECL|typedef|HB_Face
typedef|typedef
name|void
modifier|*
name|HB_Face
typedef|;
DECL|typedef|HB_FontRec
typedef|typedef
name|void
modifier|*
name|HB_FontRec
typedef|;
DECL|typedef|hb_uint32
typedef|typedef
name|QT_PREPEND_NAMESPACE
argument_list|(
argument|quint32
argument_list|)
name|hb_uint32
expr_stmt|;
DECL|typedef|HB_Fixed
typedef|typedef
name|QT_PREPEND_NAMESPACE
argument_list|(
argument|qint32
argument_list|)
name|HB_Fixed
expr_stmt|;
typedef|typedef
struct|struct
block|{
DECL|member|x
name|HB_Fixed
name|x
decl_stmt|;
DECL|member|y
name|HB_Fixed
name|y
decl_stmt|;
block|}
DECL|typedef|HB_FixedPoint
name|HB_FixedPoint
typedef|;
comment|// The GlyphAttrbutes class is used inline so it needs to be complete.
typedef|typedef
struct|struct
block|{
DECL|member|justification
name|hb_bitfield
name|justification
range|:
literal|4
decl_stmt|;
comment|/* Justification class */
DECL|member|clusterStart
name|hb_bitfield
name|clusterStart
range|:
literal|1
decl_stmt|;
comment|/* First glyph of representation of cluster */
DECL|member|mark
name|hb_bitfield
name|mark
range|:
literal|1
decl_stmt|;
comment|/* needs to be positioned around base char */
DECL|member|zeroWidth
name|hb_bitfield
name|zeroWidth
range|:
literal|1
decl_stmt|;
comment|/* ZWJ, ZWNJ etc, with no width */
DECL|member|dontPrint
name|hb_bitfield
name|dontPrint
range|:
literal|1
decl_stmt|;
DECL|member|combiningClass
name|hb_bitfield
name|combiningClass
range|:
literal|8
decl_stmt|;
block|}
DECL|typedef|HB_GlyphAttributes
name|HB_GlyphAttributes
typedef|;
comment|// This struct is strictly not needed, but we replicate it completely in
comment|// case the compiler tries to get clever with padding.
typedef|typedef
struct|struct
block|{
DECL|member|lineBreakType
comment|/*HB_LineBreakType*/
name|hb_bitfield
name|lineBreakType
range|:
literal|2
decl_stmt|;
DECL|member|whiteSpace
comment|/*HB_Bool*/
name|hb_bitfield
name|whiteSpace
range|:
literal|1
decl_stmt|;
comment|/* A unicode whitespace character, except NBSP, ZWNBSP */
DECL|member|charStop
comment|/*HB_Bool*/
name|hb_bitfield
name|charStop
range|:
literal|1
decl_stmt|;
comment|/* Valid cursor position (for left/right arrow) */
DECL|member|wordBoundary
comment|/*HB_Bool*/
name|hb_bitfield
name|wordBoundary
range|:
literal|1
decl_stmt|;
DECL|member|sentenceBoundary
comment|/*HB_Bool*/
name|hb_bitfield
name|sentenceBoundary
range|:
literal|1
decl_stmt|;
DECL|member|unused
name|hb_bitfield
name|unused
range|:
literal|2
decl_stmt|;
block|}
DECL|typedef|HB_CharAttributes
name|HB_CharAttributes
typedef|;
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// ifdef QT_BUILD_GUI_LIB
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QHARFBUZZ_COPY_P_H
end_comment
end_unit
