begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QPLATFORMFONTDATABASE_QPA_H
end_ifndef
begin_define
DECL|macro|QPLATFORMFONTDATABASE_QPA_H
define|#
directive|define
name|QPLATFORMFONTDATABASE_QPA_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qconfig.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/QString>
end_include
begin_include
include|#
directive|include
file|<QtCore/QStringList>
end_include
begin_include
include|#
directive|include
file|<QtCore/QList>
end_include
begin_include
include|#
directive|include
file|<QtCore/QHash>
end_include
begin_include
include|#
directive|include
file|<QtGui/QFontDatabase>
end_include
begin_include
include|#
directive|include
file|<QtGui/private/qfont_p.h>
end_include
begin_function
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
name|QT_MODULE
parameter_list|(
name|Gui
parameter_list|)
name|class
name|QWritingSystemsPrivate
decl_stmt|;
name|class
name|Q_GUI_EXPORT
name|QSupportedWritingSystems
decl_stmt|{ public:      QSupportedWritingSystems(
end_function
begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QSupportedWritingSystems
argument_list|(
specifier|const
name|QSupportedWritingSystems
operator|&
name|other
argument_list|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|QSupportedWritingSystems
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QSupportedWritingSystems
operator|&
name|other
operator|)
decl_stmt|;
end_decl_stmt
begin_expr_stmt
operator|~
name|QSupportedWritingSystems
argument_list|()
expr_stmt|;
end_expr_stmt
begin_decl_stmt
name|void
name|setSupported
argument_list|(
name|QFontDatabase
operator|::
name|WritingSystem
argument_list|,
name|bool
name|supported
operator|=
name|true
argument_list|)
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|bool
name|supported
argument_list|(
name|QFontDatabase
operator|::
name|WritingSystem
argument_list|)
decl|const
decl_stmt|;
end_decl_stmt
begin_label
name|private
label|:
end_label
begin_function_decl
name|void
name|detach
parameter_list|()
function_decl|;
end_function_decl
begin_decl_stmt
name|QWritingSystemsPrivate
modifier|*
name|d
decl_stmt|;
end_decl_stmt
begin_expr_stmt
name|friend
name|Q_GUI_EXPORT
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QSupportedWritingSystems
operator|&
operator|,
specifier|const
name|QSupportedWritingSystems
operator|&
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|friend
name|Q_GUI_EXPORT
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|QSupportedWritingSystems
operator|&
operator|,
specifier|const
name|QSupportedWritingSystems
operator|&
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
unit|};
name|Q_GUI_EXPORT
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QSupportedWritingSystems
operator|&
operator|,
specifier|const
name|QSupportedWritingSystems
operator|&
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_GUI_EXPORT
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|QSupportedWritingSystems
operator|&
operator|,
specifier|const
name|QSupportedWritingSystems
operator|&
operator|)
expr_stmt|;
end_expr_stmt
begin_decl_stmt
DECL|variable|QFontRequestPrivate
name|class
name|QFontRequestPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QPlatformFontDatabase
block|{
name|public
label|:
name|virtual
name|void
name|populateFontDatabase
parameter_list|()
function_decl|;
name|virtual
name|QFontEngine
modifier|*
name|fontEngine
argument_list|(
specifier|const
name|QFontDef
operator|&
name|fontDef
argument_list|,
name|QUnicodeTables
operator|::
name|Script
name|script
argument_list|,
name|void
operator|*
name|handle
argument_list|)
decl_stmt|;
name|virtual
name|QStringList
name|fallbacksForFamily
argument_list|(
specifier|const
name|QString
name|family
argument_list|,
specifier|const
name|QFont
operator|::
name|Style
operator|&
name|style
argument_list|,
specifier|const
name|QFont
operator|::
name|StyleHint
operator|&
name|styleHint
argument_list|,
specifier|const
name|QUnicodeTables
operator|::
name|Script
operator|&
name|script
argument_list|)
decl|const
decl_stmt|;
name|virtual
name|QStringList
name|addApplicationFont
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|fontData
parameter_list|,
specifier|const
name|QString
modifier|&
name|fileName
parameter_list|)
function_decl|;
name|virtual
name|void
name|releaseHandle
parameter_list|(
name|void
modifier|*
name|handle
parameter_list|)
function_decl|;
name|virtual
name|QFontEngine
modifier|*
name|fontEngine
argument_list|(
specifier|const
name|QByteArray
operator|&
name|fontData
argument_list|,
name|qreal
name|pixelSize
argument_list|,
name|QFont
operator|::
name|HintingPreference
name|hintingPreference
argument_list|)
decl_stmt|;
name|virtual
name|QString
name|fontDir
argument_list|()
specifier|const
expr_stmt|;
name|virtual
name|QFont
name|defaultFont
argument_list|()
specifier|const
expr_stmt|;
name|virtual
name|QHash
operator|<
name|QByteArray
operator|,
name|QFont
operator|>
name|defaultFonts
argument_list|()
specifier|const
expr_stmt|;
name|virtual
name|QString
name|resolveFontFamilyAlias
argument_list|(
specifier|const
name|QString
operator|&
name|family
argument_list|)
decl|const
decl_stmt|;
comment|//callback
specifier|static
name|void
name|registerQPF2Font
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|dataArray
parameter_list|,
name|void
modifier|*
name|handle
parameter_list|)
function_decl|;
specifier|static
name|void
name|registerFont
argument_list|(
specifier|const
name|QString
operator|&
name|familyname
argument_list|,
specifier|const
name|QString
operator|&
name|foundryname
argument_list|,
name|QFont
operator|::
name|Weight
name|weight
argument_list|,
name|QFont
operator|::
name|Style
name|style
argument_list|,
name|QFont
operator|::
name|Stretch
name|stretch
argument_list|,
name|bool
name|antialiased
argument_list|,
name|bool
name|scalable
argument_list|,
name|int
name|pixelSize
argument_list|,
name|bool
name|fixedPitch
argument_list|,
specifier|const
name|QSupportedWritingSystems
operator|&
name|writingSystems
argument_list|,
name|void
operator|*
name|handle
argument_list|)
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QPLATFORMFONTDATABASE_QPA_H
end_comment
end_unit
