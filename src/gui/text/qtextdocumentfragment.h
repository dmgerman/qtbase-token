begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTEXTDOCUMENTFRAGMENT_H
end_ifndef
begin_define
DECL|macro|QTEXTDOCUMENTFRAGMENT_H
define|#
directive|define
name|QTEXTDOCUMENTFRAGMENT_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QTextStream
name|class
name|QTextStream
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTextDocument
name|class
name|QTextDocument
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTextDocumentFragmentPrivate
name|class
name|QTextDocumentFragmentPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTextCursor
name|class
name|QTextCursor
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QTextDocumentFragment
block|{
name|public
label|:
name|QTextDocumentFragment
argument_list|()
expr_stmt|;
name|explicit
name|QTextDocumentFragment
parameter_list|(
specifier|const
name|QTextDocument
modifier|*
name|document
parameter_list|)
function_decl|;
name|explicit
name|QTextDocumentFragment
parameter_list|(
specifier|const
name|QTextCursor
modifier|&
name|range
parameter_list|)
function_decl|;
name|QTextDocumentFragment
argument_list|(
specifier|const
name|QTextDocumentFragment
operator|&
name|rhs
argument_list|)
expr_stmt|;
name|QTextDocumentFragment
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QTextDocumentFragment
operator|&
name|rhs
operator|)
decl_stmt|;
operator|~
name|QTextDocumentFragment
argument_list|()
expr_stmt|;
name|bool
name|isEmpty
argument_list|()
specifier|const
expr_stmt|;
name|QString
name|toPlainText
argument_list|()
specifier|const
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_TEXTHTMLPARSER
name|QString
name|toHtml
argument_list|(
specifier|const
name|QByteArray
operator|&
name|encoding
operator|=
name|QByteArray
argument_list|()
argument_list|)
decl|const
decl_stmt|;
endif|#
directive|endif
comment|// QT_NO_TEXTHTMLPARSER
specifier|static
name|QTextDocumentFragment
name|fromPlainText
parameter_list|(
specifier|const
name|QString
modifier|&
name|plainText
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_TEXTHTMLPARSER
specifier|static
name|QTextDocumentFragment
name|fromHtml
parameter_list|(
specifier|const
name|QString
modifier|&
name|html
parameter_list|)
function_decl|;
specifier|static
name|QTextDocumentFragment
name|fromHtml
parameter_list|(
specifier|const
name|QString
modifier|&
name|html
parameter_list|,
specifier|const
name|QTextDocument
modifier|*
name|resourceProvider
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|// QT_NO_TEXTHTMLPARSER
name|private
label|:
name|QTextDocumentFragmentPrivate
modifier|*
name|d
decl_stmt|;
name|friend
name|class
name|QTextCursor
decl_stmt|;
name|friend
name|class
name|QTextDocumentWriter
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QTEXTDOCUMENTFRAGMENT_H
end_comment
end_unit
