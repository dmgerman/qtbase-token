begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QZIPREADER_H
end_ifndef
begin_define
DECL|macro|QZIPREADER_H
define|#
directive|define
name|QZIPREADER_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_TEXTODFWRITER
end_ifndef
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the QZipReader class.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qdatetime.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qfile.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QZipReaderPrivate
name|class
name|QZipReaderPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QZipReader
block|{
name|public
label|:
name|explicit
name|QZipReader
argument_list|(
specifier|const
name|QString
operator|&
name|fileName
argument_list|,
name|QIODevice
operator|::
name|OpenMode
name|mode
operator|=
name|QIODevice
operator|::
name|ReadOnly
argument_list|)
decl_stmt|;
name|explicit
name|QZipReader
parameter_list|(
name|QIODevice
modifier|*
name|device
parameter_list|)
function_decl|;
operator|~
name|QZipReader
argument_list|()
expr_stmt|;
name|QIODevice
operator|*
name|device
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|isReadable
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|exists
argument_list|()
specifier|const
decl_stmt|;
struct|struct
name|FileInfo
block|{
name|FileInfo
argument_list|()
name|Q_DECL_NOTHROW
label|:
name|isDir
argument_list|(
name|false
argument_list|)
operator|,
name|isFile
argument_list|(
name|false
argument_list|)
operator|,
name|isSymLink
argument_list|(
name|false
argument_list|)
operator|,
name|crc
argument_list|(
literal|0
argument_list|)
operator|,
name|size
argument_list|(
literal|0
argument_list|)
block|{}
name|bool
name|isValid
argument_list|()
specifier|const
name|Q_DECL_NOTHROW
block|{
return|return
name|isDir
operator|||
name|isFile
operator|||
name|isSymLink
return|;
block|}
name|QString
name|filePath
decl_stmt|;
name|uint
name|isDir
range|:
literal|1
decl_stmt|;
name|uint
name|isFile
range|:
literal|1
decl_stmt|;
name|uint
name|isSymLink
range|:
literal|1
decl_stmt|;
name|QFile
operator|::
name|Permissions
name|permissions
expr_stmt|;
name|uint
name|crc
decl_stmt|;
name|qint64
name|size
decl_stmt|;
name|QDateTime
name|lastModified
decl_stmt|;
block|}
struct|;
name|QList
operator|<
name|FileInfo
operator|>
name|fileInfoList
argument_list|()
specifier|const
expr_stmt|;
name|int
name|count
argument_list|()
specifier|const
expr_stmt|;
name|FileInfo
name|entryInfoAt
argument_list|(
name|int
name|index
argument_list|)
decl|const
decl_stmt|;
name|QByteArray
name|fileData
argument_list|(
specifier|const
name|QString
operator|&
name|fileName
argument_list|)
decl|const
decl_stmt|;
name|bool
name|extractAll
argument_list|(
specifier|const
name|QString
operator|&
name|destinationDir
argument_list|)
decl|const
decl_stmt|;
enum|enum
name|Status
block|{
name|NoError
block|,
name|FileReadError
block|,
name|FileOpenError
block|,
name|FilePermissionsError
block|,
name|FileError
block|}
enum|;
name|Status
name|status
argument_list|()
specifier|const
expr_stmt|;
name|void
name|close
parameter_list|()
function_decl|;
name|private
label|:
name|QZipReaderPrivate
modifier|*
name|d
decl_stmt|;
name|Q_DISABLE_COPY
argument_list|(
argument|QZipReader
argument_list|)
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|QZipReader
operator|::
name|FileInfo
argument_list|,
name|Q_MOVABLE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|QZipReader
operator|::
name|Status
argument_list|,
name|Q_PRIMITIVE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TEXTODFWRITER
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QZIPREADER_H
end_comment
end_unit
