begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qplatformdefs.h"
end_include
begin_include
include|#
directive|include
file|<private/qabstractprintdialog_p.h>
end_include
begin_include
include|#
directive|include
file|"qprintdialog.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_PRINTDIALOG
end_ifndef
begin_include
include|#
directive|include
file|"qapplication.h"
end_include
begin_include
include|#
directive|include
file|"qbuttongroup.h"
end_include
begin_include
include|#
directive|include
file|"qradiobutton.h"
end_include
begin_include
include|#
directive|include
file|"qcombobox.h"
end_include
begin_include
include|#
directive|include
file|"qspinbox.h"
end_include
begin_include
include|#
directive|include
file|"qprinter.h"
end_include
begin_include
include|#
directive|include
file|"qlineedit.h"
end_include
begin_include
include|#
directive|include
file|"qdir.h"
end_include
begin_include
include|#
directive|include
file|"qmessagebox.h"
end_include
begin_include
include|#
directive|include
file|"qinputdialog.h"
end_include
begin_include
include|#
directive|include
file|"qlayout.h"
end_include
begin_include
include|#
directive|include
file|"qlabel.h"
end_include
begin_include
include|#
directive|include
file|"qlibrary.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_NIS
end_ifndef
begin_ifndef
ifndef|#
directive|ifndef
name|BOOL_DEFINED
end_ifndef
begin_define
DECL|macro|BOOL_DEFINED
define|#
directive|define
name|BOOL_DEFINED
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<rpcsvc/ypclnt.h>
end_include
begin_include
include|#
directive|include
file|<rpcsvc/yp_prot.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QT_NO_NIS
end_comment
begin_include
include|#
directive|include
file|<ctype.h>
end_include
begin_include
include|#
directive|include
file|<stdlib.h>
end_include
begin_include
include|#
directive|include
file|<qdebug.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_typedef
DECL|typedef|QPrintDialogCreator
typedef|typedef
name|void
function_decl|(
modifier|*
name|QPrintDialogCreator
function_decl|)
parameter_list|(
name|QPrintDialog
modifier|*
name|parent
parameter_list|)
function_decl|;
end_typedef
begin_decl_stmt
DECL|variable|_qt_print_dialog_creator
name|Q_GUI_EXPORT
name|QPrintDialogCreator
name|_qt_print_dialog_creator
decl_stmt|;
end_decl_stmt
begin_class
DECL|class|QPrintDialogPrivate
class|class
name|QPrintDialogPrivate
super|:
specifier|public
name|QAbstractPrintDialogPrivate
block|{
name|Q_DECLARE_PUBLIC
parameter_list|(
name|QPrintDialog
parameter_list|)
specifier|public
private|:
DECL|member|printerOrFile
name|QButtonGroup
modifier|*
name|printerOrFile
decl_stmt|;
DECL|member|outputToFile
name|bool
name|outputToFile
decl_stmt|;
DECL|member|printToPrinterButton
name|QRadioButton
modifier|*
name|printToPrinterButton
decl_stmt|;
DECL|member|printToFileButton
name|QRadioButton
modifier|*
name|printToFileButton
decl_stmt|;
DECL|member|fileName
name|QLineEdit
modifier|*
name|fileName
decl_stmt|;
DECL|member|colorMode
name|QButtonGroup
modifier|*
name|colorMode
decl_stmt|;
DECL|member|printColor
name|QRadioButton
modifier|*
name|printColor
decl_stmt|;
DECL|member|printGray
name|QRadioButton
modifier|*
name|printGray
decl_stmt|;
DECL|member|colorMode2
name|QPrinter
operator|::
name|ColorMode
name|colorMode2
decl_stmt|;
DECL|member|orientationCombo
DECL|member|sizeCombo
name|QComboBox
modifier|*
name|orientationCombo
decl_stmt|,
modifier|*
name|sizeCombo
decl_stmt|;
DECL|member|pageSize
name|QPrinter
operator|::
name|PaperSize
name|pageSize
decl_stmt|;
DECL|member|orientation
name|QPrinter
operator|::
name|Orientation
name|orientation
decl_stmt|;
DECL|member|copies
name|QSpinBox
modifier|*
name|copies
decl_stmt|;
DECL|member|numCopies
name|int
name|numCopies
decl_stmt|;
DECL|member|indexToPaperSize
name|QPrinter
operator|::
name|PaperSize
name|indexToPaperSize
index|[
name|QPrinter
operator|::
name|NPaperSize
index|]
decl_stmt|;
DECL|member|rangeCombo
name|QComboBox
modifier|*
name|rangeCombo
decl_stmt|;
DECL|member|firstPage
name|QSpinBox
modifier|*
name|firstPage
decl_stmt|;
DECL|member|lastPage
name|QSpinBox
modifier|*
name|lastPage
decl_stmt|;
DECL|member|pageOrderCombo
name|QComboBox
modifier|*
name|pageOrderCombo
decl_stmt|;
DECL|member|pageOrder2
name|QPrinter
operator|::
name|PageOrder
name|pageOrder2
decl_stmt|;
DECL|member|faxNum
name|QString
name|faxNum
decl_stmt|;
name|void
name|init
parameter_list|()
function_decl|;
name|void
name|_q_okClicked
parameter_list|()
function_decl|;
name|void
name|_q_printerOrFileSelected
parameter_list|(
name|QAbstractButton
modifier|*
name|b
parameter_list|)
function_decl|;
name|void
name|_q_paperSizeSelected
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|_q_orientSelected
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|_q_pageOrderSelected
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|_q_colorModeSelected
parameter_list|(
name|QAbstractButton
modifier|*
parameter_list|)
function_decl|;
name|void
name|_q_setNumCopies
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|_q_printRangeSelected
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|_q_setFirstPage
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|_q_setLastPage
parameter_list|(
name|int
parameter_list|)
function_decl|;
name|void
name|_q_fileNameEditChanged
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
function_decl|;
name|void
name|setupDestination
parameter_list|()
function_decl|;
name|void
name|setupPrinterSettings
parameter_list|()
function_decl|;
name|void
name|setupPaper
parameter_list|()
function_decl|;
name|void
name|setupOptions
parameter_list|()
function_decl|;
name|void
name|setPrinter
parameter_list|(
name|QPrinter
modifier|*
name|p
parameter_list|,
name|bool
name|pickUpSettings
parameter_list|)
function_decl|;
block|}
class|;
end_class
begin_function_decl
specifier|static
name|void
name|isc
parameter_list|(
name|QPrintDialogPrivate
modifier|*
name|d
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|QPrinter
operator|::
name|PaperSize
name|ps
parameter_list|)
function_decl|;
end_function_decl
begin_function
DECL|function|_q_okClicked
name|void
name|QPrintDialogPrivate
operator|::
name|_q_okClicked
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_MESSAGEBOX
if|if
condition|(
name|outputToFile
operator|&&
name|fileName
operator|->
name|isModified
argument_list|()
operator|&&
name|QFileInfo
argument_list|(
name|fileName
operator|->
name|text
argument_list|()
argument_list|)
operator|.
name|exists
argument_list|()
condition|)
block|{
name|int
name|confirm
init|=
name|QMessageBox
operator|::
name|warning
argument_list|(
name|q
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"File exists"
argument_list|)
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"<qt>Do you want to overwrite it?</qt>"
argument_list|)
argument_list|,
name|QMessageBox
operator|::
name|Yes
argument_list|,
name|QMessageBox
operator|::
name|No
argument_list|)
decl_stmt|;
if|if
condition|(
name|confirm
operator|==
name|QMessageBox
operator|::
name|No
condition|)
return|return;
block|}
endif|#
directive|endif
comment|// QT_NO_MESSAGEBOX
name|lastPage
operator|->
name|interpretText
argument_list|()
expr_stmt|;
name|firstPage
operator|->
name|interpretText
argument_list|()
expr_stmt|;
name|copies
operator|->
name|interpretText
argument_list|()
expr_stmt|;
if|if
condition|(
name|outputToFile
condition|)
block|{
name|printer
operator|->
name|setOutputFileName
argument_list|(
name|fileName
operator|->
name|text
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|printer
operator|->
name|setOrientation
argument_list|(
name|orientation
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setPaperSize
argument_list|(
name|pageSize
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setPageOrder
argument_list|(
name|pageOrder2
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setColorMode
argument_list|(
name|colorMode2
argument_list|)
expr_stmt|;
name|printer
operator|->
name|setCopyCount
argument_list|(
name|numCopies
argument_list|)
expr_stmt|;
switch|switch
condition|(
operator|(
name|rangeCombo
operator|->
name|itemData
argument_list|(
name|rangeCombo
operator|->
name|currentIndex
argument_list|()
argument_list|)
operator|)
operator|.
name|toInt
argument_list|()
condition|)
block|{
case|case
operator|(
name|int
operator|)
name|QPrintDialog
operator|::
name|AllPages
case|:
name|q
operator|->
name|setPrintRange
argument_list|(
name|QPrintDialog
operator|::
name|AllPages
argument_list|)
expr_stmt|;
name|q
operator|->
name|setFromTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
operator|(
name|int
operator|)
name|QPrintDialog
operator|::
name|Selection
case|:
name|q
operator|->
name|setPrintRange
argument_list|(
name|QPrintDialog
operator|::
name|Selection
argument_list|)
expr_stmt|;
name|q
operator|->
name|setFromTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
case|case
operator|(
name|int
operator|)
name|QPrintDialog
operator|::
name|PageRange
case|:
name|q
operator|->
name|setPrintRange
argument_list|(
name|QPrintDialog
operator|::
name|PageRange
argument_list|)
expr_stmt|;
name|q
operator|->
name|setFromTo
argument_list|(
name|firstPage
operator|->
name|value
argument_list|()
argument_list|,
name|lastPage
operator|->
name|value
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
operator|(
name|int
operator|)
name|QPrintDialog
operator|::
name|CurrentPage
case|:
name|q
operator|->
name|setPrintRange
argument_list|(
name|QPrintDialog
operator|::
name|CurrentPage
argument_list|)
expr_stmt|;
name|q
operator|->
name|setFromTo
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
break|break;
block|}
name|q
operator|->
name|accept
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_printerOrFileSelected
name|void
name|QPrintDialogPrivate
operator|::
name|_q_printerOrFileSelected
parameter_list|(
name|QAbstractButton
modifier|*
name|b
parameter_list|)
block|{
name|outputToFile
operator|=
operator|(
name|b
operator|==
name|printToFileButton
operator|)
expr_stmt|;
if|if
condition|(
name|outputToFile
condition|)
block|{
name|_q_fileNameEditChanged
argument_list|(
name|fileName
operator|->
name|text
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fileName
operator|->
name|isModified
argument_list|()
operator|&&
name|fileName
operator|->
name|text
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|QString
name|file
init|=
literal|"print.tiff"
decl_stmt|;
name|fileName
operator|->
name|setText
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|fileName
operator|->
name|setCursorPosition
argument_list|(
name|file
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|fileName
operator|->
name|selectAll
argument_list|()
expr_stmt|;
name|fileName
operator|->
name|setModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// confirm overwrite when OK clicked
block|}
name|fileName
operator|->
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|fileName
operator|->
name|setFocus
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileName
operator|->
name|setText
argument_list|(
name|QString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|fileName
operator|->
name|isEnabled
argument_list|()
condition|)
name|fileName
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|_q_paperSizeSelected
name|void
name|QPrintDialogPrivate
operator|::
name|_q_paperSizeSelected
parameter_list|(
name|int
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|<
name|QPrinter
operator|::
name|NPaperSize
condition|)
name|pageSize
operator|=
name|QPrinter
operator|::
name|PaperSize
argument_list|(
name|indexToPaperSize
index|[
name|id
index|]
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_orientSelected
name|void
name|QPrintDialogPrivate
operator|::
name|_q_orientSelected
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|orientation
operator|=
operator|(
name|QPrinter
operator|::
name|Orientation
operator|)
name|id
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_pageOrderSelected
name|void
name|QPrintDialogPrivate
operator|::
name|_q_pageOrderSelected
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|pageOrder2
operator|=
operator|(
name|QPrinter
operator|::
name|PageOrder
operator|)
name|id
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_colorModeSelected
name|void
name|QPrintDialogPrivate
operator|::
name|_q_colorModeSelected
parameter_list|(
name|QAbstractButton
modifier|*
name|b
parameter_list|)
block|{
name|colorMode2
operator|=
operator|(
name|b
operator|==
name|printColor
operator|)
condition|?
name|QPrinter
operator|::
name|Color
else|:
name|QPrinter
operator|::
name|GrayScale
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_setNumCopies
name|void
name|QPrintDialogPrivate
operator|::
name|_q_setNumCopies
parameter_list|(
name|int
name|copies
parameter_list|)
block|{
name|numCopies
operator|=
name|copies
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_printRangeSelected
name|void
name|QPrintDialogPrivate
operator|::
name|_q_printRangeSelected
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|bool
name|enable
init|=
operator|(
name|rangeCombo
operator|->
name|itemData
argument_list|(
name|id
argument_list|)
operator|.
name|toInt
argument_list|()
operator|==
operator|(
name|int
operator|)
name|QPrintDialog
operator|::
name|PageRange
operator|)
decl_stmt|;
name|firstPage
operator|->
name|setEnabled
argument_list|(
name|enable
argument_list|)
expr_stmt|;
name|lastPage
operator|->
name|setEnabled
argument_list|(
name|enable
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|_q_setFirstPage
name|void
name|QPrintDialogPrivate
operator|::
name|_q_setFirstPage
parameter_list|(
name|int
name|fp
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|printer
condition|)
block|{
name|lastPage
operator|->
name|setMinimum
argument_list|(
name|fp
argument_list|)
expr_stmt|;
name|lastPage
operator|->
name|setMaximum
argument_list|(
name|qMax
argument_list|(
name|fp
argument_list|,
name|q
operator|->
name|maxPage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|_q_setLastPage
name|void
name|QPrintDialogPrivate
operator|::
name|_q_setLastPage
parameter_list|(
name|int
name|lp
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
if|if
condition|(
name|printer
condition|)
block|{
name|firstPage
operator|->
name|setMinimum
argument_list|(
name|qMin
argument_list|(
name|lp
argument_list|,
name|q
operator|->
name|minPage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|firstPage
operator|->
name|setMaximum
argument_list|(
name|lp
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|_q_fileNameEditChanged
name|void
name|QPrintDialogPrivate
operator|::
name|_q_fileNameEditChanged
parameter_list|(
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupDestination
name|void
name|QPrintDialogPrivate
operator|::
name|setupDestination
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
comment|// print destinations
name|printerOrFile
operator|=
operator|new
name|QButtonGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|printerOrFile
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_printerOrFileSelected
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|printToPrinterButton
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
literal|"printToPrinterButton"
argument_list|)
expr_stmt|;
name|printerOrFile
operator|->
name|addButton
argument_list|(
name|printToPrinterButton
argument_list|)
expr_stmt|;
name|printToFileButton
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
literal|"printToFileButton"
argument_list|)
expr_stmt|;
name|printerOrFile
operator|->
name|addButton
argument_list|(
name|printToFileButton
argument_list|)
expr_stmt|;
comment|// file name
name|fileName
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QLineEdit
operator|*
argument_list|>
argument_list|(
literal|"fileName"
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|fileName
argument_list|,
name|SIGNAL
argument_list|(
name|textChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_fileNameEditChanged
argument_list|(
name|QString
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|outputToFile
operator|=
literal|false
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupPrinterSettings
name|void
name|QPrintDialogPrivate
operator|::
name|setupPrinterSettings
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
comment|// color mode
name|colorMode
operator|=
operator|new
name|QButtonGroup
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|colorMode
argument_list|,
name|SIGNAL
argument_list|(
name|buttonClicked
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_colorModeSelected
argument_list|(
name|QAbstractButton
operator|*
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|printColor
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
literal|"printColor"
argument_list|)
expr_stmt|;
name|colorMode
operator|->
name|addButton
argument_list|(
name|printColor
argument_list|)
expr_stmt|;
name|printGray
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QRadioButton
operator|*
argument_list|>
argument_list|(
literal|"printGray"
argument_list|)
expr_stmt|;
name|colorMode
operator|->
name|addButton
argument_list|(
name|printGray
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|isc
name|void
name|isc
parameter_list|(
name|QPrintDialogPrivate
modifier|*
name|ptr
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|QPrinter
operator|::
name|PaperSize
name|ps
parameter_list|)
block|{
if|if
condition|(
name|ptr
operator|&&
operator|!
name|text
operator|.
name|isEmpty
argument_list|()
operator|&&
name|ps
operator|<
name|QPrinter
operator|::
name|NPaperSize
condition|)
block|{
name|ptr
operator|->
name|sizeCombo
operator|->
name|addItem
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|int
name|index
init|=
name|ptr
operator|->
name|sizeCombo
operator|->
name|count
argument_list|()
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|index
operator|>=
literal|0
operator|&&
name|index
operator|<
name|QPrinter
operator|::
name|NPaperSize
condition|)
name|ptr
operator|->
name|indexToPaperSize
index|[
name|index
index|]
operator|=
name|ps
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|setupPaper
name|void
name|QPrintDialogPrivate
operator|::
name|setupPaper
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|pageSize
operator|=
name|QPrinter
operator|::
name|A4
expr_stmt|;
comment|// paper orientation
name|orientationCombo
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"orientationCombo"
argument_list|)
expr_stmt|;
name|orientation
operator|=
name|QPrinter
operator|::
name|Portrait
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|orientationCombo
argument_list|,
name|SIGNAL
argument_list|(
name|activated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_orientSelected
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// paper size
name|sizeCombo
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"sizeCombo"
argument_list|)
expr_stmt|;
name|int
name|n
decl_stmt|;
for|for
control|(
name|n
operator|=
literal|0
init|;
name|n
operator|<
name|QPrinter
operator|::
name|NPaperSize
condition|;
name|n
operator|++
control|)
name|indexToPaperSize
index|[
name|n
index|]
operator|=
name|QPrinter
operator|::
name|A4
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A0 (841 x 1189 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A0
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A1 (594 x 841 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A1
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A2 (420 x 594 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A2
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A3 (297 x 420 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A3
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A4 (210 x 297 mm, 8.26 x 11.7 inches)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A4
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A5 (148 x 210 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A5
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A6 (105 x 148 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A6
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A7 (74 x 105 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A7
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A8 (52 x 74 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A8
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"A9 (37 x 52 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|A9
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B0 (1000 x 1414 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B0
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B1 (707 x 1000 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B1
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B2 (500 x 707 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B2
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B3 (353 x 500 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B3
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B4 (250 x 353 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B4
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B5 (176 x 250 mm, 6.93 x 9.84 inches)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B5
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B6 (125 x 176 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B6
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B7 (88 x 125 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B7
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B8 (62 x 88 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B8
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B9 (44 x 62 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B9
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"B10 (31 x 44 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|B10
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"C5E (163 x 229 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|C5E
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"DLE (110 x 220 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|DLE
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Executive (7.5 x 10 inches, 191 x 254 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|Executive
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Folio (210 x 330 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|Folio
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Ledger (432 x 279 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|Ledger
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Legal (8.5 x 14 inches, 216 x 356 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|Legal
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Letter (8.5 x 11 inches, 216 x 279 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|Letter
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Tabloid (279 x 432 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|Tabloid
argument_list|)
expr_stmt|;
name|isc
argument_list|(
name|this
argument_list|,
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"US Common #10 Envelope (105 x 241 mm)"
argument_list|)
argument_list|,
name|QPrinter
operator|::
name|Comm10E
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|sizeCombo
argument_list|,
name|SIGNAL
argument_list|(
name|activated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_paperSizeSelected
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setupOptions
name|void
name|QPrintDialogPrivate
operator|::
name|setupOptions
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
comment|// no. of copies
name|copies
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QSpinBox
operator|*
argument_list|>
argument_list|(
literal|"copies"
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|copies
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_setNumCopies
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// print range
name|rangeCombo
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"rangeCombo"
argument_list|)
expr_stmt|;
name|rangeCombo
operator|->
name|addItem
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Print all"
argument_list|)
argument_list|,
name|QPrintDialog
operator|::
name|AllPages
argument_list|)
expr_stmt|;
name|rangeCombo
operator|->
name|addItem
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Print selection"
argument_list|)
argument_list|,
name|QPrintDialog
operator|::
name|Selection
argument_list|)
expr_stmt|;
name|rangeCombo
operator|->
name|addItem
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Print range"
argument_list|)
argument_list|,
name|QPrintDialog
operator|::
name|PageRange
argument_list|)
expr_stmt|;
name|rangeCombo
operator|->
name|addItem
argument_list|(
name|QPrintDialog
operator|::
name|tr
argument_list|(
literal|"Print current page"
argument_list|)
argument_list|,
name|QPrintDialog
operator|::
name|CurrentPage
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|rangeCombo
argument_list|,
name|SIGNAL
argument_list|(
name|activated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_printRangeSelected
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// page range
name|firstPage
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QSpinBox
operator|*
argument_list|>
argument_list|(
literal|"firstPage"
argument_list|)
expr_stmt|;
name|firstPage
operator|->
name|setRange
argument_list|(
literal|1
argument_list|,
literal|9999
argument_list|)
expr_stmt|;
name|firstPage
operator|->
name|setValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|firstPage
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_setFirstPage
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|lastPage
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QSpinBox
operator|*
argument_list|>
argument_list|(
literal|"lastPage"
argument_list|)
expr_stmt|;
name|lastPage
operator|->
name|setRange
argument_list|(
literal|1
argument_list|,
literal|9999
argument_list|)
expr_stmt|;
name|lastPage
operator|->
name|setValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|lastPage
argument_list|,
name|SIGNAL
argument_list|(
name|valueChanged
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_setLastPage
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// print order
name|pageOrderCombo
operator|=
name|q
operator|->
name|findChild
argument_list|<
name|QComboBox
operator|*
argument_list|>
argument_list|(
literal|"pageOrderCombo"
argument_list|)
expr_stmt|;
name|QObject
operator|::
name|connect
argument_list|(
name|pageOrderCombo
argument_list|,
name|SIGNAL
argument_list|(
name|activated
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|,
name|q
argument_list|,
name|SLOT
argument_list|(
name|_q_pageOrderSelected
argument_list|(
name|int
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|eventFilter
name|bool
name|QPrintDialog
operator|::
name|eventFilter
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|,
name|QEvent
modifier|*
name|e
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|e
operator|->
name|type
argument_list|()
condition|)
block|{
case|case
name|QEvent
operator|::
name|KeyPress
case|:
switch|switch
condition|(
cast|static_cast
argument_list|<
name|QKeyEvent
operator|*
argument_list|>
argument_list|(
name|e
argument_list|)
operator|->
name|key
argument_list|()
condition|)
block|{
case|case
name|Qt
operator|::
name|Key_Back
case|:
name|d
operator|->
name|_q_okClicked
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
break|break;
default|default:
break|break;
block|}
return|return
literal|false
return|;
block|}
end_function
begin_constructor
DECL|function|QPrintDialog
name|QPrintDialog
operator|::
name|QPrintDialog
parameter_list|(
name|QPrinter
modifier|*
name|printer
parameter_list|,
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QAbstractPrintDialog
argument_list|(
operator|*
operator|(
operator|new
name|QPrintDialogPrivate
operator|)
argument_list|,
name|printer
argument_list|,
name|parent
argument_list|)
block|{
name|d_func
argument_list|()
operator|->
name|init
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_constructor
DECL|function|QPrintDialog
name|QPrintDialog
operator|::
name|QPrintDialog
parameter_list|(
name|QWidget
modifier|*
name|parent
parameter_list|)
member_init_list|:
name|QAbstractPrintDialog
argument_list|(
operator|*
operator|(
operator|new
name|QPrintDialogPrivate
operator|)
argument_list|,
literal|0
argument_list|,
name|parent
argument_list|)
block|{
name|d_func
argument_list|()
operator|->
name|init
argument_list|()
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QPrintDialog
name|QPrintDialog
operator|::
name|~
name|QPrintDialog
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|setPrinter
name|void
name|QPrintDialogPrivate
operator|::
name|setPrinter
parameter_list|(
name|QPrinter
modifier|*
name|p
parameter_list|,
name|bool
name|pickUpSettings
parameter_list|)
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|printer
operator|=
name|p
expr_stmt|;
if|if
condition|(
name|p
operator|&&
name|pickUpSettings
condition|)
block|{
comment|// top to bottom in the old dialog.
comment|// printer or file
name|outputToFile
operator|=
operator|!
name|p
operator|->
name|outputFileName
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|&&
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintToFile
argument_list|)
expr_stmt|;
if|if
condition|(
name|outputToFile
condition|)
name|printToFileButton
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|printToPrinterButton
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|fileName
operator|->
name|setEnabled
argument_list|(
name|outputToFile
argument_list|)
expr_stmt|;
comment|// file name
if|if
condition|(
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintToFile
argument_list|)
condition|)
block|{
name|fileName
operator|->
name|setText
argument_list|(
name|p
operator|->
name|outputFileName
argument_list|()
argument_list|)
expr_stmt|;
name|fileName
operator|->
name|setModified
argument_list|(
operator|!
name|fileName
operator|->
name|text
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printToFileButton
operator|->
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
comment|// orientation
name|orientationCombo
operator|->
name|setCurrentIndex
argument_list|(
operator|(
name|int
operator|)
name|p
operator|->
name|orientation
argument_list|()
argument_list|)
expr_stmt|;
name|_q_orientSelected
argument_list|(
name|p
operator|->
name|orientation
argument_list|()
argument_list|)
expr_stmt|;
comment|// page size
name|int
name|n
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|n
operator|<
name|QPrinter
operator|::
name|NPaperSize
operator|&&
name|indexToPaperSize
index|[
name|n
index|]
operator|!=
name|p
operator|->
name|pageSize
argument_list|()
condition|)
name|n
operator|++
expr_stmt|;
name|sizeCombo
operator|->
name|setCurrentIndex
argument_list|(
name|n
argument_list|)
expr_stmt|;
name|_q_paperSizeSelected
argument_list|(
name|n
argument_list|)
expr_stmt|;
comment|// page order
name|pageOrder2
operator|=
name|p
operator|->
name|pageOrder
argument_list|()
expr_stmt|;
name|pageOrderCombo
operator|->
name|setCurrentIndex
argument_list|(
operator|(
name|int
operator|)
name|pageOrder2
argument_list|)
expr_stmt|;
comment|// color mode
name|colorMode2
operator|=
name|p
operator|->
name|colorMode
argument_list|()
expr_stmt|;
if|if
condition|(
name|colorMode2
operator|==
name|QPrinter
operator|::
name|Color
condition|)
name|printColor
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|printGray
operator|->
name|setChecked
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// number of copies
name|copies
operator|->
name|setValue
argument_list|(
name|p
operator|->
name|copyCount
argument_list|()
argument_list|)
expr_stmt|;
name|_q_setNumCopies
argument_list|(
name|p
operator|->
name|copyCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|p
condition|)
block|{
if|if
condition|(
operator|!
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintSelection
argument_list|)
operator|&&
name|rangeCombo
operator|->
name|findData
argument_list|(
name|QPrintDialog
operator|::
name|Selection
argument_list|)
operator|>
literal|0
condition|)
name|rangeCombo
operator|->
name|removeItem
argument_list|(
name|rangeCombo
operator|->
name|findData
argument_list|(
name|QPrintDialog
operator|::
name|Selection
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintPageRange
argument_list|)
operator|&&
name|rangeCombo
operator|->
name|findData
argument_list|(
name|QPrintDialog
operator|::
name|PageRange
argument_list|)
operator|>
literal|0
condition|)
name|rangeCombo
operator|->
name|removeItem
argument_list|(
name|rangeCombo
operator|->
name|findData
argument_list|(
name|QPrintDialog
operator|::
name|PageRange
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|q
operator|->
name|isOptionEnabled
argument_list|(
name|QPrintDialog
operator|::
name|PrintCurrentPage
argument_list|)
operator|&&
name|rangeCombo
operator|->
name|findData
argument_list|(
name|QPrintDialog
operator|::
name|CurrentPage
argument_list|)
operator|>
literal|0
condition|)
name|rangeCombo
operator|->
name|removeItem
argument_list|(
name|rangeCombo
operator|->
name|findData
argument_list|(
name|QPrintDialog
operator|::
name|CurrentPage
argument_list|)
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|q
operator|->
name|printRange
argument_list|()
condition|)
block|{
case|case
name|QPrintDialog
operator|::
name|AllPages
case|:
name|rangeCombo
operator|->
name|setCurrentIndex
argument_list|(
call|(
name|int
call|)
argument_list|(
name|QPrintDialog
operator|::
name|AllPages
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrintDialog
operator|::
name|Selection
case|:
name|rangeCombo
operator|->
name|setCurrentIndex
argument_list|(
call|(
name|int
call|)
argument_list|(
name|QPrintDialog
operator|::
name|Selection
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrintDialog
operator|::
name|PageRange
case|:
name|rangeCombo
operator|->
name|setCurrentIndex
argument_list|(
call|(
name|int
call|)
argument_list|(
name|QPrintDialog
operator|::
name|PageRange
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
name|QPrintDialog
operator|::
name|CurrentPage
case|:
name|rangeCombo
operator|->
name|setCurrentIndex
argument_list|(
call|(
name|int
call|)
argument_list|(
name|QPrintDialog
operator|::
name|CurrentPage
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|p
operator|&&
name|q
operator|->
name|maxPage
argument_list|()
condition|)
block|{
name|int
name|from
init|=
name|q
operator|->
name|minPage
argument_list|()
decl_stmt|;
name|int
name|to
init|=
name|q
operator|->
name|maxPage
argument_list|()
decl_stmt|;
if|if
condition|(
name|q
operator|->
name|printRange
argument_list|()
operator|==
name|QPrintDialog
operator|::
name|PageRange
condition|)
block|{
name|from
operator|=
name|q
operator|->
name|fromPage
argument_list|()
expr_stmt|;
name|to
operator|=
name|q
operator|->
name|toPage
argument_list|()
expr_stmt|;
block|}
name|firstPage
operator|->
name|setRange
argument_list|(
name|q
operator|->
name|minPage
argument_list|()
argument_list|,
name|to
argument_list|)
expr_stmt|;
name|lastPage
operator|->
name|setRange
argument_list|(
name|from
argument_list|,
name|q
operator|->
name|maxPage
argument_list|()
argument_list|)
expr_stmt|;
name|firstPage
operator|->
name|setValue
argument_list|(
name|from
argument_list|)
expr_stmt|;
name|lastPage
operator|->
name|setValue
argument_list|(
name|to
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|exec
name|int
name|QPrintDialog
operator|::
name|exec
parameter_list|()
block|{
name|Q_D
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|d
operator|->
name|setPrinter
argument_list|(
name|d
operator|->
name|printer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|QDialog
operator|::
name|exec
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|init
name|void
name|QPrintDialogPrivate
operator|::
name|init
parameter_list|()
block|{
name|Q_Q
argument_list|(
name|QPrintDialog
argument_list|)
expr_stmt|;
name|numCopies
operator|=
literal|1
expr_stmt|;
if|if
condition|(
name|_qt_print_dialog_creator
condition|)
call|(
modifier|*
name|_qt_print_dialog_creator
call|)
argument_list|(
name|q
argument_list|)
expr_stmt|;
name|setupDestination
argument_list|()
expr_stmt|;
name|setupPrinterSettings
argument_list|()
expr_stmt|;
name|setupPaper
argument_list|()
expr_stmt|;
name|setupOptions
argument_list|()
expr_stmt|;
name|setPrinter
argument_list|(
name|printer
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|q
operator|->
name|installEventFilter
argument_list|(
name|q
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setVisible
name|void
name|QPrintDialog
operator|::
name|setVisible
parameter_list|(
name|bool
name|visible
parameter_list|)
block|{
name|QAbstractPrintDialog
operator|::
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_include
include|#
directive|include
file|"moc_qprintdialog.cpp"
end_include
begin_include
include|#
directive|include
file|"qrc_qprintdialog.cpp"
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_PRINTDIALOG
end_comment
end_unit
