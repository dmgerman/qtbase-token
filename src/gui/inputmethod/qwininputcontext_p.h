begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QWININPUTCONTEXT_P_H
end_ifndef
begin_define
DECL|macro|QWININPUTCONTEXT_P_H
define|#
directive|define
name|QWININPUTCONTEXT_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of qinputcontext.cpp.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"QtGui/qinputcontext.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qt_windows.h"
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|IMR_RECONVERTSTRING
argument_list|)
end_if
begin_typedef
DECL|struct|tagRECONVERTSTRING
typedef|typedef
struct|struct
name|tagRECONVERTSTRING
block|{
DECL|member|dwSize
name|DWORD
name|dwSize
decl_stmt|;
DECL|member|dwVersion
name|DWORD
name|dwVersion
decl_stmt|;
DECL|member|dwStrLen
name|DWORD
name|dwStrLen
decl_stmt|;
DECL|member|dwStrOffset
name|DWORD
name|dwStrOffset
decl_stmt|;
DECL|member|dwCompStrLen
name|DWORD
name|dwCompStrLen
decl_stmt|;
DECL|member|dwCompStrOffset
name|DWORD
name|dwCompStrOffset
decl_stmt|;
DECL|member|dwTargetStrLen
name|DWORD
name|dwTargetStrLen
decl_stmt|;
DECL|member|dwTargetStrOffset
name|DWORD
name|dwTargetStrOffset
decl_stmt|;
block|}
DECL|typedef|RECONVERTSTRING
DECL|typedef|PRECONVERTSTRING
name|RECONVERTSTRING
operator|,
typedef|*
name|PRECONVERTSTRING
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|QWinInputContext
range|:
name|public
name|QInputContext
block|{
name|Q_OBJECT
name|public
operator|:
name|explicit
name|QWinInputContext
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
block|;
name|virtual
operator|~
name|QWinInputContext
argument_list|()
block|;
name|virtual
name|QString
name|identifierName
argument_list|()
block|{
return|return
name|QLatin1String
argument_list|(
literal|"win"
argument_list|)
return|;
block|}
name|virtual
name|QString
name|language
argument_list|()
block|;
name|virtual
name|void
name|reset
argument_list|()
block|;
name|virtual
name|void
name|update
argument_list|()
block|;
name|virtual
name|void
name|mouseHandler
argument_list|(
argument|int x
argument_list|,
argument|QMouseEvent *event
argument_list|)
block|;
name|virtual
name|bool
name|isComposing
argument_list|()
specifier|const
block|;
name|virtual
name|void
name|setFocusWidget
argument_list|(
name|QWidget
operator|*
name|w
argument_list|)
block|;
name|bool
name|startComposition
argument_list|()
block|;
name|bool
name|endComposition
argument_list|()
block|;
name|bool
name|composition
argument_list|(
argument|LPARAM lparam
argument_list|)
block|;
name|int
name|reconvertString
argument_list|(
name|RECONVERTSTRING
operator|*
name|reconv
argument_list|)
block|;
specifier|static
name|void
name|TranslateMessage
argument_list|(
specifier|const
name|MSG
operator|*
name|msg
argument_list|)
block|;
specifier|static
name|LRESULT
name|DefWindowProc
argument_list|(
argument|HWND hwnd
argument_list|,
argument|UINT msg
argument_list|,
argument|WPARAM wParam
argument_list|,
argument|LPARAM lParam
argument_list|)
block|;
specifier|static
name|void
name|updateImeStatus
argument_list|(
argument|QWidget *w
argument_list|,
argument|bool hasFocus
argument_list|)
block|;
specifier|static
name|void
name|enablePopupChild
argument_list|(
argument|QWidget *w
argument_list|,
argument|bool e
argument_list|)
block|;
specifier|static
name|void
name|enable
argument_list|(
argument|QWidget *w
argument_list|,
argument|bool e
argument_list|)
block|;
name|private
operator|:
name|void
name|init
argument_list|()
block|;
name|bool
name|recursionGuard
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QWININPUTCONTEXT_P_H
end_comment
end_unit
