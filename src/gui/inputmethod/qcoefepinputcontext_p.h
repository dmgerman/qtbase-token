begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QCOEFEPINPUTCONTEXT_P_H
end_ifndef
begin_define
DECL|macro|QCOEFEPINPUTCONTEXT_P_H
define|#
directive|define
name|QCOEFEPINPUTCONTEXT_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_IM
end_ifndef
begin_include
include|#
directive|include
file|"qinputcontext.h"
end_include
begin_include
include|#
directive|include
file|<qhash.h>
end_include
begin_include
include|#
directive|include
file|<qtimer.h>
end_include
begin_include
include|#
directive|include
file|<private/qcore_symbian_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qt_s60_p.h>
end_include
begin_include
include|#
directive|include
file|<fepbase.h>
end_include
begin_include
include|#
directive|include
file|<aknedsts.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QInputContext
name|class
name|Q_AUTOTEST_EXPORT
name|QCoeFepInputContext
range|:
name|public
name|QInputContext
decl_stmt|,
DECL|variable|MCoeFepAwareTextEditor
name|public
name|MCoeFepAwareTextEditor
decl_stmt|,
DECL|variable|MCoeFepAwareTextEditor_Extension1
name|public
name|MCoeFepAwareTextEditor_Extension1
decl_stmt|,
name|public
name|MObjectProvider
block|{
name|Q_OBJECT
name|public
range|:
name|QCoeFepInputContext
argument_list|(
name|QObject
operator|*
name|parent
operator|=
literal|0
argument_list|)
decl_stmt|;
operator|~
name|QCoeFepInputContext
argument_list|()
expr_stmt|;
name|QString
name|identifierName
parameter_list|()
block|{
return|return
name|QLatin1String
argument_list|(
literal|"coefep"
argument_list|)
return|;
block|}
name|QString
name|language
parameter_list|()
function_decl|;
name|void
name|reset
parameter_list|()
function_decl|;
name|void
name|update
parameter_list|()
function_decl|;
name|bool
name|filterEvent
parameter_list|(
specifier|const
name|QEvent
modifier|*
name|event
parameter_list|)
function_decl|;
name|bool
name|symbianFilterEvent
parameter_list|(
name|QWidget
modifier|*
name|keyWidget
parameter_list|,
specifier|const
name|QSymbianEvent
modifier|*
name|event
parameter_list|)
function_decl|;
name|void
name|mouseHandler
parameter_list|(
name|int
name|x
parameter_list|,
name|QMouseEvent
modifier|*
name|event
parameter_list|)
function_decl|;
name|bool
name|isComposing
argument_list|()
specifier|const
block|{
return|return
operator|!
name|m_preeditString
operator|.
name|isEmpty
argument_list|()
return|;
block|}
name|void
name|setFocusWidget
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
function_decl|;
name|void
name|widgetDestroyed
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|)
function_decl|;
name|TCoeInputCapabilities
name|inputCapabilities
parameter_list|()
function_decl|;
name|void
name|resetSplitViewWidget
parameter_list|(
name|bool
name|keepInputWidget
init|=
name|false
parameter_list|)
function_decl|;
name|void
name|ensureFocusWidgetVisible
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
function_decl|;
name|protected
label|:
name|void
name|timerEvent
parameter_list|(
name|QTimerEvent
modifier|*
name|timerEvent
parameter_list|)
function_decl|;
name|private
label|:
name|void
name|commitCurrentString
parameter_list|(
name|bool
name|cancelFepTransaction
parameter_list|)
function_decl|;
name|void
name|updateHints
parameter_list|(
name|bool
name|mustUpdateInputCapabilities
parameter_list|)
function_decl|;
name|void
name|applyHints
argument_list|(
name|Qt
operator|::
name|InputMethodHints
name|hints
argument_list|)
decl_stmt|;
name|void
name|applyFormat
argument_list|(
name|QList
operator|<
name|QInputMethodEvent
operator|::
name|Attribute
operator|>
operator|*
name|attributes
argument_list|)
decl_stmt|;
name|void
name|queueInputCapabilitiesChanged
parameter_list|()
function_decl|;
name|bool
name|needsInputPanel
parameter_list|()
function_decl|;
name|void
name|commitTemporaryPreeditString
parameter_list|()
function_decl|;
name|bool
name|isWidgetVisible
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|int
name|offset
init|=
literal|0
parameter_list|)
function_decl|;
name|private
name|Q_SLOTS
range|:
name|void
name|ensureInputCapabilitiesChanged
argument_list|()
decl_stmt|;
name|void
name|translateInputWidget
parameter_list|()
function_decl|;
comment|// From MCoeFepAwareTextEditor
name|public
label|:
name|void
name|StartFepInlineEditL
parameter_list|(
specifier|const
name|TDesC
modifier|&
name|aInitialInlineText
parameter_list|,
name|TInt
name|aPositionOfInsertionPointInInlineText
parameter_list|,
name|TBool
name|aCursorVisibility
parameter_list|,
specifier|const
name|MFormCustomDraw
modifier|*
name|aCustomDraw
parameter_list|,
name|MFepInlineTextFormatRetriever
modifier|&
name|aInlineTextFormatRetriever
parameter_list|,
name|MFepPointerEventHandlerDuringInlineEdit
modifier|&
name|aPointerEventHandlerDuringInlineEdit
parameter_list|)
function_decl|;
name|void
name|UpdateFepInlineTextL
parameter_list|(
specifier|const
name|TDesC
modifier|&
name|aNewInlineText
parameter_list|,
name|TInt
name|aPositionOfInsertionPointInInlineText
parameter_list|)
function_decl|;
name|void
name|SetInlineEditingCursorVisibilityL
parameter_list|(
name|TBool
name|aCursorVisibility
parameter_list|)
function_decl|;
name|void
name|CancelFepInlineEdit
parameter_list|()
function_decl|;
name|TInt
name|DocumentLengthForFep
argument_list|()
specifier|const
expr_stmt|;
name|TInt
name|DocumentMaximumLengthForFep
argument_list|()
specifier|const
expr_stmt|;
name|void
name|SetCursorSelectionForFepL
parameter_list|(
specifier|const
name|TCursorSelection
modifier|&
name|aCursorSelection
parameter_list|)
function_decl|;
name|void
name|GetCursorSelectionForFep
argument_list|(
name|TCursorSelection
operator|&
name|aCursorSelection
argument_list|)
decl|const
decl_stmt|;
name|void
name|GetEditorContentForFep
argument_list|(
name|TDes
operator|&
name|aEditorContent
argument_list|,
name|TInt
name|aDocumentPosition
argument_list|,
name|TInt
name|aLengthToRetrieve
argument_list|)
decl|const
decl_stmt|;
name|void
name|GetFormatForFep
argument_list|(
name|TCharFormat
operator|&
name|aFormat
argument_list|,
name|TInt
name|aDocumentPosition
argument_list|)
decl|const
decl_stmt|;
name|void
name|GetScreenCoordinatesForFepL
argument_list|(
name|TPoint
operator|&
name|aLeftSideOfBaseLine
argument_list|,
name|TInt
operator|&
name|aHeight
argument_list|,
name|TInt
operator|&
name|aAscent
argument_list|,
name|TInt
name|aDocumentPosition
argument_list|)
decl|const
decl_stmt|;
name|private
label|:
name|void
name|DoCommitFepInlineEditL
parameter_list|()
function_decl|;
name|MCoeFepAwareTextEditor_Extension1
modifier|*
name|Extension1
parameter_list|(
name|TBool
modifier|&
name|aSetToTrue
parameter_list|)
function_decl|;
name|void
name|ReportAknEdStateEvent
argument_list|(
name|MAknEdStateObserver
operator|::
name|EAknEdwinStateEvent
name|aEventType
argument_list|)
decl_stmt|;
comment|// From MCoeFepAwareTextEditor_Extension1
name|public
label|:
name|void
name|SetStateTransferingOwnershipL
argument_list|(
name|MCoeFepAwareTextEditor_Extension1
operator|::
name|CState
operator|*
name|aState
argument_list|,
name|TUid
name|aTypeSafetyUid
argument_list|)
decl_stmt|;
name|MCoeFepAwareTextEditor_Extension1
operator|::
name|CState
operator|*
name|State
argument_list|(
argument|TUid aTypeSafetyUid
argument_list|)
expr_stmt|;
comment|// From MObjectProvider
name|public
label|:
name|TTypeUid
operator|::
name|Ptr
name|MopSupplyObject
argument_list|(
argument|TTypeUid id
argument_list|)
expr_stmt|;
name|MObjectProvider
modifier|*
name|MopNext
parameter_list|()
function_decl|;
name|private
label|:
name|QSymbianControl
modifier|*
name|m_parent
decl_stmt|;
name|CAknEdwinState
modifier|*
name|m_fepState
decl_stmt|;
name|QString
name|m_preeditString
decl_stmt|;
name|Qt
operator|::
name|InputMethodHints
name|m_lastImHints
expr_stmt|;
name|TUint
name|m_textCapabilities
decl_stmt|;
name|bool
name|m_inDestruction
decl_stmt|;
name|bool
name|m_pendingInputCapabilitiesChanged
decl_stmt|;
name|int
name|m_cursorVisibility
decl_stmt|;
name|int
name|m_inlinePosition
decl_stmt|;
name|MFepInlineTextFormatRetriever
modifier|*
name|m_formatRetriever
decl_stmt|;
name|MFepPointerEventHandlerDuringInlineEdit
modifier|*
name|m_pointerHandler
decl_stmt|;
name|QBasicTimer
name|m_tempPreeditStringTimeout
decl_stmt|;
name|bool
name|m_hasTempPreeditString
decl_stmt|;
name|int
name|m_splitViewResizeBy
decl_stmt|;
name|Qt
operator|::
name|WindowStates
name|m_splitViewPreviousWindowStates
expr_stmt|;
name|QRectF
name|m_transformation
decl_stmt|;
name|friend
name|class
name|tst_QInputContext
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_function_decl
name|Q_GUI_EXPORT
name|void
name|qt_s60_setPartialScreenInputMode
parameter_list|(
name|bool
name|enable
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_IM
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QCOEFEPINPUTCONTEXT_P_H
end_comment
end_unit
