begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qmenudata.h"
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT3_SUPPORT
end_ifdef
begin_include
include|#
directive|include
file|<qaction.h>
end_include
begin_include
include|#
directive|include
file|<private/qaction_p.h>
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_comment
comment|/*!     \class QMenuItem     \brief The QMenuItem class represents an item in a menu.      \compat      Use QAction instead. */
end_comment
begin_comment
comment|/*!     \compat     Constructs a new menu item. */
end_comment
begin_constructor
DECL|function|QMenuItem
name|QMenuItem
operator|::
name|QMenuItem
parameter_list|()
member_init_list|:
name|QAction
argument_list|(
operator|(
name|QWidget
operator|*
operator|)
literal|0
argument_list|)
block|{ }
end_constructor
begin_function
DECL|function|setId
name|void
name|QMenuItem
operator|::
name|setId
parameter_list|(
name|int
name|id
parameter_list|)
block|{
name|d_func
argument_list|()
operator|->
name|param
operator|=
name|d_func
argument_list|()
operator|->
name|id
operator|=
name|id
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \compat     Returns the menu item's ID. */
end_comment
begin_function
DECL|function|id
name|int
name|QMenuItem
operator|::
name|id
parameter_list|()
specifier|const
block|{
return|return
name|d_func
argument_list|()
operator|->
name|id
return|;
block|}
end_function
begin_function
DECL|function|setSignalValue
name|void
name|QMenuItem
operator|::
name|setSignalValue
parameter_list|(
name|int
name|param
parameter_list|)
block|{
name|d_func
argument_list|()
operator|->
name|param
operator|=
name|param
expr_stmt|;
block|}
end_function
begin_comment
comment|/*!     \compat     Returns the signal value for the menu item. */
end_comment
begin_function
DECL|function|signalValue
name|int
name|QMenuItem
operator|::
name|signalValue
parameter_list|()
specifier|const
block|{
return|return
name|d_func
argument_list|()
operator|->
name|param
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
