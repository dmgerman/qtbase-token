begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qmenubar_x11_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_MENUBAR
end_ifndef
begin_include
include|#
directive|include
file|"qapplication.h"
end_include
begin_include
include|#
directive|include
file|"qdebug.h"
end_include
begin_include
include|#
directive|include
file|"qevent.h"
end_include
begin_include
include|#
directive|include
file|"qmenu.h"
end_include
begin_include
include|#
directive|include
file|"qmenubar.h"
end_include
begin_expr_stmt
name|QT_BEGIN_NAMESPACE
DECL|function|~QX11MenuBar
name|QX11MenuBar
operator|::
name|~
name|QX11MenuBar
operator|(
operator|)
block|{ }
DECL|function|init
name|void
name|QX11MenuBar
operator|::
name|init
operator|(
name|QMenuBar
operator|*
name|_menuBar
operator|)
block|{
name|nativeMenuBar
operator|=
operator|-
literal|1
block|;
name|menuBar
operator|=
name|_menuBar
block|; }
DECL|function|setVisible
name|void
name|QX11MenuBar
operator|::
name|setVisible
operator|(
name|bool
name|visible
operator|)
block|{
name|menuBar
operator|->
name|QWidget
operator|::
name|setVisible
argument_list|(
name|visible
argument_list|)
block|; }
DECL|function|actionEvent
name|void
name|QX11MenuBar
operator|::
name|actionEvent
operator|(
name|QActionEvent
operator|*
name|e
operator|)
block|{
name|Q_UNUSED
argument_list|(
name|e
argument_list|)
block|; }
DECL|function|handleReparent
name|void
name|QX11MenuBar
operator|::
name|handleReparent
operator|(
name|QWidget
operator|*
name|oldParent
operator|,
name|QWidget
operator|*
name|newParent
operator|,
name|QWidget
operator|*
name|oldWindow
operator|,
name|QWidget
operator|*
name|newWindow
operator|)
block|{
name|Q_UNUSED
argument_list|(
argument|oldParent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|newParent
argument_list|)
name|Q_UNUSED
argument_list|(
argument|oldWindow
argument_list|)
name|Q_UNUSED
argument_list|(
argument|newWindow
argument_list|)
block|}
DECL|function|allowCornerWidgets
name|bool
name|QX11MenuBar
operator|::
name|allowCornerWidgets
operator|(
operator|)
specifier|const
block|{
return|return
literal|true
return|;
block|}
end_expr_stmt
begin_function
DECL|function|popupAction
name|void
name|QX11MenuBar
operator|::
name|popupAction
parameter_list|(
name|QAction
modifier|*
parameter_list|)
block|{ }
end_function
begin_function
DECL|function|setNativeMenuBar
name|void
name|QX11MenuBar
operator|::
name|setNativeMenuBar
parameter_list|(
name|bool
name|value
parameter_list|)
block|{
if|if
condition|(
name|nativeMenuBar
operator|==
operator|-
literal|1
operator|||
operator|(
name|value
operator|!=
name|bool
argument_list|(
name|nativeMenuBar
argument_list|)
operator|)
condition|)
block|{
name|nativeMenuBar
operator|=
name|value
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|isNativeMenuBar
name|bool
name|QX11MenuBar
operator|::
name|isNativeMenuBar
parameter_list|()
specifier|const
block|{
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|shortcutsHandledByNativeMenuBar
name|bool
name|QX11MenuBar
operator|::
name|shortcutsHandledByNativeMenuBar
parameter_list|()
specifier|const
block|{
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|menuBarEventFilter
name|bool
name|QX11MenuBar
operator|::
name|menuBarEventFilter
parameter_list|(
name|QObject
modifier|*
parameter_list|,
name|QEvent
modifier|*
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_MENUBAR
end_comment
end_unit
