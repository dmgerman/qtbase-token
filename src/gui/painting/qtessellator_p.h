begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QTESSELATOR_P_H
end_ifndef
begin_define
DECL|macro|QTESSELATOR_P_H
define|#
directive|define
name|QTESSELATOR_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of other Qt classes.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<qpoint.h>
end_include
begin_include
include|#
directive|include
file|<qrect.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QTessellatorPrivate
name|class
name|QTessellatorPrivate
decl_stmt|;
end_decl_stmt
begin_typedef
DECL|typedef|Q27Dot5
typedef|typedef
name|int
name|Q27Dot5
typedef|;
end_typedef
begin_define
DECL|macro|Q27Dot5ToDouble
define|#
directive|define
name|Q27Dot5ToDouble
parameter_list|(
name|i
parameter_list|)
value|((i)/32.)
end_define
begin_define
DECL|macro|FloatToQ27Dot5
define|#
directive|define
name|FloatToQ27Dot5
parameter_list|(
name|i
parameter_list|)
value|(int)((i) * 32)
end_define
begin_define
DECL|macro|IntToQ27Dot5
define|#
directive|define
name|IntToQ27Dot5
parameter_list|(
name|i
parameter_list|)
value|((i)<< 5)
end_define
begin_define
DECL|macro|Q27Dot5ToXFixed
define|#
directive|define
name|Q27Dot5ToXFixed
parameter_list|(
name|i
parameter_list|)
value|((i)<< 11)
end_define
begin_define
DECL|macro|Q27Dot5Factor
define|#
directive|define
name|Q27Dot5Factor
value|32
end_define
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QTessellator
block|{
name|public
label|:
name|QTessellator
argument_list|()
expr_stmt|;
name|virtual
operator|~
name|QTessellator
argument_list|()
expr_stmt|;
name|QRectF
name|tessellate
parameter_list|(
specifier|const
name|QPointF
modifier|*
name|points
parameter_list|,
name|int
name|nPoints
parameter_list|)
function_decl|;
name|void
name|tessellateConvex
parameter_list|(
specifier|const
name|QPointF
modifier|*
name|points
parameter_list|,
name|int
name|nPoints
parameter_list|)
function_decl|;
name|void
name|tessellateRect
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|a
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|b
parameter_list|,
name|qreal
name|width
parameter_list|)
function_decl|;
name|void
name|setWinding
parameter_list|(
name|bool
name|w
parameter_list|)
function_decl|;
struct|struct
name|Vertex
block|{
name|Q27Dot5
name|x
decl_stmt|;
name|Q27Dot5
name|y
decl_stmt|;
block|}
struct|;
struct|struct
name|Trapezoid
block|{
name|Q27Dot5
name|top
decl_stmt|;
name|Q27Dot5
name|bottom
decl_stmt|;
specifier|const
name|Vertex
modifier|*
name|topLeft
decl_stmt|;
specifier|const
name|Vertex
modifier|*
name|bottomLeft
decl_stmt|;
specifier|const
name|Vertex
modifier|*
name|topRight
decl_stmt|;
specifier|const
name|Vertex
modifier|*
name|bottomRight
decl_stmt|;
block|}
struct|;
name|virtual
name|void
name|addTrap
parameter_list|(
specifier|const
name|Trapezoid
modifier|&
name|trap
parameter_list|)
init|=
literal|0
function_decl|;
name|private
label|:
name|friend
name|class
name|QTessellatorPrivate
decl_stmt|;
name|QTessellatorPrivate
modifier|*
name|d
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
