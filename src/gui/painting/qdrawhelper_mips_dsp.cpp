begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Imagination Technologies Limited, www.imgtec.com ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<private/qdrawhelper_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qdrawhelper_mips_dsp_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qpaintengine_raster_p.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|qt_blend_argb32_on_argb32_mips_dsp
name|void
name|qt_blend_argb32_on_argb32_mips_dsp
parameter_list|(
name|uchar
modifier|*
name|destPixels
parameter_list|,
name|int
name|dbpl
parameter_list|,
specifier|const
name|uchar
modifier|*
name|srcPixels
parameter_list|,
name|int
name|sbpl
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|const_alpha
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|QT_DEBUG_DRAW
name|fprintf
argument_list|(
name|stdout
argument_list|,
literal|"qt_blend_argb32_on_argb32: dst=(%p, %d), src=(%p, %d), dim=(%d, %d) alpha=%d\n"
argument_list|,
name|destPixels
argument_list|,
name|dbpl
argument_list|,
name|srcPixels
argument_list|,
name|sbpl
argument_list|,
name|w
argument_list|,
name|h
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
name|fflush
argument_list|(
name|stdout
argument_list|)
expr_stmt|;
endif|#
directive|endif
specifier|const
name|uint
modifier|*
name|src
init|=
operator|(
specifier|const
name|uint
operator|*
operator|)
name|srcPixels
decl_stmt|;
name|uint
modifier|*
name|dst
init|=
operator|(
name|uint
operator|*
operator|)
name|destPixels
decl_stmt|;
if|if
condition|(
name|const_alpha
operator|==
literal|256
condition|)
block|{
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
operator|++
name|y
control|)
block|{
name|qt_blend_argb32_on_argb32_const_alpha_256_mips_dsp_asm
argument_list|(
name|dst
argument_list|,
name|src
argument_list|,
name|w
argument_list|)
expr_stmt|;
name|dst
operator|=
operator|(
name|quint32
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dst
operator|)
operator|+
name|dbpl
operator|)
expr_stmt|;
name|src
operator|=
operator|(
specifier|const
name|quint32
operator|*
operator|)
operator|(
operator|(
operator|(
specifier|const
name|uchar
operator|*
operator|)
name|src
operator|)
operator|+
name|sbpl
operator|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|const_alpha
operator|!=
literal|0
condition|)
block|{
name|const_alpha
operator|=
operator|(
name|const_alpha
operator|*
literal|255
operator|)
operator|>>
literal|8
expr_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
operator|++
name|y
control|)
block|{
if|if
condition|(
name|h
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|uint
name|s
init|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|dst
index|[
literal|0
index|]
operator|=
name|s
operator|+
name|BYTE_MUL
argument_list|(
name|dst
index|[
literal|0
index|]
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|s
argument_list|)
argument_list|)
expr_stmt|;
name|h
operator|--
expr_stmt|;
name|dst
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|qt_blend_argb32_on_argb32_mips_dsp_asm_x2
argument_list|(
name|dst
argument_list|,
name|src
argument_list|,
name|h
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
name|dst
operator|=
operator|(
name|quint32
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dst
operator|)
operator|+
name|dbpl
operator|)
expr_stmt|;
name|src
operator|=
operator|(
specifier|const
name|quint32
operator|*
operator|)
operator|(
operator|(
operator|(
specifier|const
name|uchar
operator|*
operator|)
name|src
operator|)
operator|+
name|sbpl
operator|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|qt_blend_rgb32_on_rgb32_mips_dsp
name|void
name|qt_blend_rgb32_on_rgb32_mips_dsp
parameter_list|(
name|uchar
modifier|*
name|destPixels
parameter_list|,
name|int
name|dbpl
parameter_list|,
specifier|const
name|uchar
modifier|*
name|srcPixels
parameter_list|,
name|int
name|sbpl
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|const_alpha
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|QT_DEBUG_DRAW
name|fprintf
argument_list|(
name|stdout
argument_list|,
literal|"qt_blend_rgb32_on_rgb32: dst=(%p, %d), src=(%p, %d), dim=(%d, %d) alpha=%d\n"
argument_list|,
name|destPixels
argument_list|,
name|dbpl
argument_list|,
name|srcPixels
argument_list|,
name|sbpl
argument_list|,
name|w
argument_list|,
name|h
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
name|fflush
argument_list|(
name|stdout
argument_list|)
expr_stmt|;
endif|#
directive|endif
if|if
condition|(
name|const_alpha
operator|!=
literal|256
condition|)
block|{
name|qt_blend_argb32_on_argb32_mips_dsp
argument_list|(
name|destPixels
argument_list|,
name|dbpl
argument_list|,
name|srcPixels
argument_list|,
name|sbpl
argument_list|,
name|w
argument_list|,
name|h
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|const
name|uint
modifier|*
name|src
init|=
operator|(
specifier|const
name|uint
operator|*
operator|)
name|srcPixels
decl_stmt|;
name|uint
modifier|*
name|dst
init|=
operator|(
name|uint
operator|*
operator|)
name|destPixels
decl_stmt|;
name|int
name|len
init|=
name|w
operator|*
literal|4
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
operator|++
name|y
control|)
block|{
name|memcpy
argument_list|(
name|dst
argument_list|,
name|src
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|dst
operator|=
operator|(
name|quint32
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dst
operator|)
operator|+
name|dbpl
operator|)
expr_stmt|;
name|src
operator|=
operator|(
specifier|const
name|quint32
operator|*
operator|)
operator|(
operator|(
operator|(
specifier|const
name|uchar
operator|*
operator|)
name|src
operator|)
operator|+
name|sbpl
operator|)
expr_stmt|;
block|}
block|}
end_function
begin_if
if|#
directive|if
name|defined
name|QT_COMPILER_SUPPORTS_MIPS_DSPR2
end_if
begin_function
DECL|function|qt_blend_rgb16_on_rgb16_mips_dspr2
name|void
name|qt_blend_rgb16_on_rgb16_mips_dspr2
parameter_list|(
name|uchar
modifier|*
name|destPixels
parameter_list|,
name|int
name|dbpl
parameter_list|,
specifier|const
name|uchar
modifier|*
name|srcPixels
parameter_list|,
name|int
name|sbpl
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|256
condition|)
block|{
if|if
condition|(
name|w
operator|<
literal|256
condition|)
block|{
specifier|const
name|quint16
modifier|*
name|src
init|=
operator|(
specifier|const
name|quint16
operator|*
operator|)
name|srcPixels
decl_stmt|;
name|quint16
modifier|*
name|dst
init|=
operator|(
name|quint16
operator|*
operator|)
name|destPixels
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
operator|++
name|y
control|)
block|{
name|qt_blend_rgb16_on_rgb16_const_alpha_256_mips_dsp_asm
argument_list|(
name|dst
argument_list|,
name|src
argument_list|,
name|w
argument_list|)
expr_stmt|;
name|dst
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dst
operator|)
operator|+
name|dbpl
operator|)
expr_stmt|;
name|src
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|src
operator|)
operator|+
name|sbpl
operator|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|int
name|length
init|=
name|w
operator|<<
literal|1
decl_stmt|;
while|while
condition|(
name|h
operator|--
condition|)
block|{
name|memcpy
argument_list|(
name|destPixels
argument_list|,
name|srcPixels
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|destPixels
operator|+=
name|dbpl
expr_stmt|;
name|srcPixels
operator|+=
name|sbpl
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|const_alpha
operator|!=
literal|0
condition|)
block|{
specifier|const
name|quint16
modifier|*
name|src
init|=
operator|(
specifier|const
name|quint16
operator|*
operator|)
name|srcPixels
decl_stmt|;
name|quint16
modifier|*
name|dst
init|=
operator|(
name|quint16
operator|*
operator|)
name|destPixels
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
operator|++
name|y
control|)
block|{
name|qt_blend_rgb16_on_rgb16_mips_dspr2_asm
argument_list|(
name|dst
argument_list|,
name|src
argument_list|,
name|w
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
name|dst
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dst
operator|)
operator|+
name|dbpl
operator|)
expr_stmt|;
name|src
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|src
operator|)
operator|+
name|sbpl
operator|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_else
else|#
directive|else
end_else
begin_function
DECL|function|qt_blend_rgb16_on_rgb16_mips_dsp
name|void
name|qt_blend_rgb16_on_rgb16_mips_dsp
parameter_list|(
name|uchar
modifier|*
name|destPixels
parameter_list|,
name|int
name|dbpl
parameter_list|,
specifier|const
name|uchar
modifier|*
name|srcPixels
parameter_list|,
name|int
name|sbpl
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|256
condition|)
block|{
if|if
condition|(
name|w
operator|<
literal|256
condition|)
block|{
specifier|const
name|quint16
modifier|*
name|src
init|=
operator|(
specifier|const
name|quint16
operator|*
operator|)
name|srcPixels
decl_stmt|;
name|quint16
modifier|*
name|dst
init|=
operator|(
name|quint16
operator|*
operator|)
name|destPixels
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
operator|++
name|y
control|)
block|{
name|qt_blend_rgb16_on_rgb16_const_alpha_256_mips_dsp_asm
argument_list|(
name|dst
argument_list|,
name|src
argument_list|,
name|w
argument_list|)
expr_stmt|;
name|dst
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dst
operator|)
operator|+
name|dbpl
operator|)
expr_stmt|;
name|src
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|src
operator|)
operator|+
name|sbpl
operator|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|int
name|length
init|=
name|w
operator|<<
literal|1
decl_stmt|;
while|while
condition|(
name|h
operator|--
condition|)
block|{
name|memcpy
argument_list|(
name|destPixels
argument_list|,
name|srcPixels
argument_list|,
name|length
argument_list|)
expr_stmt|;
name|destPixels
operator|+=
name|dbpl
expr_stmt|;
name|srcPixels
operator|+=
name|sbpl
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|const_alpha
operator|!=
literal|0
condition|)
block|{
specifier|const
name|quint16
modifier|*
name|src
init|=
operator|(
specifier|const
name|quint16
operator|*
operator|)
name|srcPixels
decl_stmt|;
name|quint16
modifier|*
name|dst
init|=
operator|(
name|quint16
operator|*
operator|)
name|destPixels
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|h
condition|;
operator|++
name|y
control|)
block|{
name|qt_blend_rgb16_on_rgb16_mips_dsp_asm
argument_list|(
name|dst
argument_list|,
name|src
argument_list|,
name|w
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
name|dst
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|dst
operator|)
operator|+
name|dbpl
operator|)
expr_stmt|;
name|src
operator|=
operator|(
name|quint16
operator|*
operator|)
operator|(
operator|(
operator|(
name|uchar
operator|*
operator|)
name|src
operator|)
operator|+
name|sbpl
operator|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|comp_func_Source_mips_dsp
name|void
name|comp_func_Source_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
operator|::
name|memcpy
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
operator|*
sizeof|sizeof
argument_list|(
name|uint
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|ialpha
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|,
name|dest
index|[
literal|0
index|]
argument_list|,
name|ialpha
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_Source_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|qt_destFetchARGB32_mips_dsp
name|uint
modifier|*
name|QT_FASTCALL
name|qt_destFetchARGB32_mips_dsp
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
name|QRasterBuffer
modifier|*
name|rasterBuffer
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|length
parameter_list|)
block|{
specifier|const
name|uint
modifier|*
name|data
init|=
operator|(
specifier|const
name|uint
operator|*
operator|)
name|rasterBuffer
operator|->
name|scanLine
argument_list|(
name|y
argument_list|)
operator|+
name|x
decl_stmt|;
name|buffer
operator|=
name|destfetchARGB32_asm_mips_dsp
argument_list|(
name|buffer
argument_list|,
name|data
argument_list|,
name|length
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_function
DECL|function|qt_destStoreARGB32_mips_dsp
name|void
name|QT_FASTCALL
name|qt_destStoreARGB32_mips_dsp
parameter_list|(
name|QRasterBuffer
modifier|*
name|rasterBuffer
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
specifier|const
name|uint
modifier|*
name|buffer
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|uint
modifier|*
name|data
init|=
operator|(
name|uint
operator|*
operator|)
name|rasterBuffer
operator|->
name|scanLine
argument_list|(
name|y
argument_list|)
operator|+
name|x
decl_stmt|;
name|qt_destStoreARGB32_asm_mips_dsp
argument_list|(
name|data
argument_list|,
name|buffer
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_SourceOver_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_SourceOver_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|const_alpha
operator|!=
literal|255
condition|)
name|color
operator|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|color
operator|+
name|BYTE_MUL
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|color
argument_list|)
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_Source_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|color
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|color
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_DestinationOver_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_DestinationOver_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|const_alpha
operator|!=
literal|255
condition|)
name|color
operator|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|d
operator|+
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_DestinationOver_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|color
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_DestinationOver_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_DestinationOver_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|d
operator|+
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|uint
name|s
init|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|d
operator|+
name|BYTE_MUL
argument_list|(
name|s
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_DestinationOver_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_SourceIn_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_SourceIn_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|qAlpha
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|uint
name|tmp_color
init|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|uint
name|cia
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|tmp_color
argument_list|,
name|qAlpha
argument_list|(
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|cia
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_SourceIn_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|color
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_SourceIn_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_SourceIn_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|qAlpha
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|uint
name|cia
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|uint
name|s
init|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|s
argument_list|,
name|qAlpha
argument_list|(
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|cia
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_SourceIn_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_DestinationIn_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_DestinationIn_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
name|uint
name|a
init|=
name|qAlpha
argument_list|(
name|color
argument_list|)
decl_stmt|;
if|if
condition|(
name|const_alpha
operator|!=
literal|255
condition|)
block|{
name|a
operator|=
name|BYTE_MUL
argument_list|(
name|a
argument_list|,
name|const_alpha
argument_list|)
operator|+
literal|255
operator|-
name|const_alpha
expr_stmt|;
block|}
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_DestinationIn_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_DestinationIn_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_DestinationIn_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|,
name|qAlpha
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|cia
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
name|uint
name|a
init|=
name|BYTE_MUL
argument_list|(
name|qAlpha
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|const_alpha
argument_list|)
operator|+
name|cia
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|src
operator|++
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_DestinationIn_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_DestinationOut_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_DestinationOut_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
name|uint
name|a
init|=
name|qAlpha
argument_list|(
operator|~
name|color
argument_list|)
decl_stmt|;
if|if
condition|(
name|const_alpha
operator|!=
literal|255
condition|)
block|{
name|a
operator|=
name|BYTE_MUL
argument_list|(
name|a
argument_list|,
name|const_alpha
argument_list|)
operator|+
literal|255
operator|-
name|const_alpha
expr_stmt|;
block|}
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_DestinationIn_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_DestinationOut_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_DestinationOut_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|src
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|cia
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
name|uint
name|sia
init|=
name|BYTE_MUL
argument_list|(
name|qAlpha
argument_list|(
operator|~
name|src
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|const_alpha
argument_list|)
operator|+
name|cia
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|,
name|sia
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_DestinationOut_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_SourceAtop_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_SourceAtop_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|const_alpha
operator|!=
literal|255
condition|)
block|{
name|color
operator|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
name|uint
name|sia
init|=
name|qAlpha
argument_list|(
operator|~
name|color
argument_list|)
decl_stmt|;
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|color
argument_list|,
name|qAlpha
argument_list|(
name|dest
index|[
literal|0
index|]
argument_list|)
argument_list|,
name|dest
index|[
literal|0
index|]
argument_list|,
name|sia
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_SourceAtop_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|color
argument_list|,
name|sia
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_SourceAtop_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_SourceAtop_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|uint
name|s
init|=
name|src
index|[
literal|0
index|]
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|s
argument_list|,
name|qAlpha
argument_list|(
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|uint
name|s
init|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|s
argument_list|,
name|qAlpha
argument_list|(
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_SourceAtop_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_DestinationAtop_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_DestinationAtop_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
name|uint
name|a
init|=
name|qAlpha
argument_list|(
name|color
argument_list|)
decl_stmt|;
if|if
condition|(
name|const_alpha
operator|!=
literal|255
condition|)
block|{
name|color
operator|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
name|a
operator|=
name|qAlpha
argument_list|(
name|color
argument_list|)
operator|+
literal|255
operator|-
name|const_alpha
expr_stmt|;
block|}
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|d
argument_list|,
name|a
argument_list|,
name|color
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_DestinationAtop_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|color
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_DestinationAtop_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_DestinationAtop_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|uint
name|s
init|=
name|src
index|[
literal|0
index|]
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|d
argument_list|,
name|qAlpha
argument_list|(
name|s
argument_list|)
argument_list|,
name|s
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|cia
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
name|uint
name|s
init|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|uint
name|a
init|=
name|qAlpha
argument_list|(
name|s
argument_list|)
operator|+
name|cia
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|d
argument_list|,
name|a
argument_list|,
name|s
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_DestinationAtop_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_XOR_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_XOR_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|const_alpha
operator|!=
literal|255
condition|)
name|color
operator|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
name|uint
name|sia
init|=
name|qAlpha
argument_list|(
operator|~
name|color
argument_list|)
decl_stmt|;
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|color
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|sia
argument_list|)
expr_stmt|;
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_XOR_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|color
argument_list|,
name|sia
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_XOR_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_XOR_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|uint
name|s
init|=
name|src
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|s
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|uint
name|s
init|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|s
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|s
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_XOR_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_solid_SourceOut_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_solid_SourceOut_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|color
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|dest
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|uint
name|tmp_color
init|=
name|BYTE_MUL
argument_list|(
name|color
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|int
name|cia
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|tmp_color
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|cia
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
block|}
name|comp_func_solid_SourceOut_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|length
argument_list|,
name|color
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|comp_func_SourceOut_mips_dsp
name|void
name|QT_FASTCALL
name|comp_func_SourceOut_mips_dsp
parameter_list|(
name|uint
modifier|*
name|dest
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|length
parameter_list|,
name|uint
name|const_alpha
parameter_list|)
block|{
if|if
condition|(
name|length
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|const_alpha
operator|==
literal|255
condition|)
block|{
name|dest
index|[
literal|0
index|]
operator|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|dest
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|int
name|cia
init|=
literal|255
operator|-
name|const_alpha
decl_stmt|;
name|uint
name|s
init|=
name|BYTE_MUL
argument_list|(
name|src
index|[
literal|0
index|]
argument_list|,
name|const_alpha
argument_list|)
decl_stmt|;
name|uint
name|d
init|=
name|dest
index|[
literal|0
index|]
decl_stmt|;
name|dest
index|[
literal|0
index|]
operator|=
name|INTERPOLATE_PIXEL_255
argument_list|(
name|s
argument_list|,
name|qAlpha
argument_list|(
operator|~
name|d
argument_list|)
argument_list|,
name|d
argument_list|,
name|cia
argument_list|)
expr_stmt|;
block|}
name|length
operator|--
expr_stmt|;
name|dest
operator|++
expr_stmt|;
name|src
operator|++
expr_stmt|;
block|}
name|comp_func_SourceOut_dsp_asm_x2
argument_list|(
name|dest
argument_list|,
name|src
argument_list|,
name|length
argument_list|,
name|const_alpha
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_fetchUntransformed_888_mips_dsp
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|qt_fetchUntransformed_888_mips_dsp
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|Operator
modifier|*
parameter_list|,
specifier|const
name|QSpanData
modifier|*
name|data
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|length
parameter_list|)
block|{
specifier|const
name|uchar
modifier|*
name|line
init|=
name|data
operator|->
name|texture
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
operator|+
name|x
operator|*
literal|3
decl_stmt|;
name|fetchUntransformed_888_asm_mips_dsp
argument_list|(
name|buffer
argument_list|,
name|line
argument_list|,
name|length
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_function
DECL|function|qt_fetchUntransformed_444_mips_dsp
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|qt_fetchUntransformed_444_mips_dsp
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|Operator
modifier|*
parameter_list|,
specifier|const
name|QSpanData
modifier|*
name|data
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|length
parameter_list|)
block|{
specifier|const
name|uchar
modifier|*
name|line
init|=
name|data
operator|->
name|texture
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
operator|+
name|x
operator|*
literal|2
decl_stmt|;
name|fetchUntransformed_444_asm_mips_dsp
argument_list|(
name|buffer
argument_list|,
name|line
argument_list|,
name|length
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_function
DECL|function|qt_fetchUntransformed_argb8565_premultiplied_mips_dsp
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|qt_fetchUntransformed_argb8565_premultiplied_mips_dsp
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|Operator
modifier|*
parameter_list|,
specifier|const
name|QSpanData
modifier|*
name|data
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|length
parameter_list|)
block|{
specifier|const
name|uchar
modifier|*
name|line
init|=
name|data
operator|->
name|texture
operator|.
name|scanLine
argument_list|(
name|y
argument_list|)
operator|+
name|x
operator|*
literal|3
decl_stmt|;
name|fetchUntransformed_argb8565_premultiplied_asm_mips_dsp
argument_list|(
name|buffer
argument_list|,
name|line
argument_list|,
name|length
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
