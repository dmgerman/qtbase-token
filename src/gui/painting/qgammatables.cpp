begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<private/qdrawhelper_p.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|QDrawHelperGammaTables
name|QDrawHelperGammaTables
operator|::
name|QDrawHelperGammaTables
parameter_list|(
name|qreal
name|smoothing
parameter_list|)
block|{
specifier|const
name|qreal
name|gray_gamma
init|=
literal|2.31
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|256
condition|;
operator|++
name|i
control|)
name|qt_pow_gamma
index|[
name|i
index|]
operator|=
name|uint
argument_list|(
name|qRound
argument_list|(
name|qPow
argument_list|(
name|i
operator|/
name|qreal
argument_list|(
literal|255.
argument_list|)
argument_list|,
name|gray_gamma
argument_list|)
operator|*
literal|2047
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2048
condition|;
operator|++
name|i
control|)
name|qt_pow_invgamma
index|[
name|i
index|]
operator|=
name|uchar
argument_list|(
name|qRound
argument_list|(
name|qPow
argument_list|(
name|i
operator|/
name|qreal
argument_list|(
literal|2047.0
argument_list|)
argument_list|,
literal|1
operator|/
name|gray_gamma
argument_list|)
operator|*
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|refresh
argument_list|(
name|smoothing
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|refresh
name|void
name|QDrawHelperGammaTables
operator|::
name|refresh
parameter_list|(
name|qreal
name|smoothing
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|256
condition|;
operator|++
name|i
control|)
block|{
name|qt_pow_rgb_gamma
index|[
name|i
index|]
operator|=
name|uchar
argument_list|(
name|qRound
argument_list|(
name|qPow
argument_list|(
name|i
operator|/
name|qreal
argument_list|(
literal|255.0
argument_list|)
argument_list|,
name|smoothing
argument_list|)
operator|*
literal|255
argument_list|)
argument_list|)
expr_stmt|;
name|qt_pow_rgb_invgamma
index|[
name|i
index|]
operator|=
name|uchar
argument_list|(
name|qRound
argument_list|(
name|qPow
argument_list|(
name|i
operator|/
name|qreal
argument_list|(
literal|255.
argument_list|)
argument_list|,
literal|1
operator|/
name|smoothing
argument_list|)
operator|*
literal|255
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
