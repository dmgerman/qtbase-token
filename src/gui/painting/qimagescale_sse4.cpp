begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qimagescale_p.h"
end_include
begin_include
include|#
directive|include
file|"qimage.h"
end_include
begin_include
include|#
directive|include
file|<private/qsimd_p.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_COMPILER_SUPPORTS_SSE4_1
argument_list|)
end_if
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_using
using|using
namespace|namespace
name|QImageScale
namespace|;
end_using
begin_function
DECL|function|qt_qimageScaleAARGBA_helper
specifier|inline
specifier|static
name|__m128i
name|qt_qimageScaleAARGBA_helper
parameter_list|(
specifier|const
name|unsigned
name|int
modifier|*
name|pix
parameter_list|,
name|int
name|xyap
parameter_list|,
name|int
name|Cxy
parameter_list|,
name|int
name|step
parameter_list|,
specifier|const
name|__m128i
name|vxyap
parameter_list|,
specifier|const
name|__m128i
name|vCxy
parameter_list|)
block|{
name|__m128i
name|vpix
init|=
name|_mm_cvtepu8_epi32
argument_list|(
name|_mm_cvtsi32_si128
argument_list|(
operator|*
name|pix
argument_list|)
argument_list|)
decl_stmt|;
name|__m128i
name|vx
init|=
name|_mm_mullo_epi32
argument_list|(
name|vpix
argument_list|,
name|vxyap
argument_list|)
decl_stmt|;
name|int
name|i
decl_stmt|;
for|for
control|(
name|i
operator|=
operator|(
literal|1
operator|<<
literal|14
operator|)
operator|-
name|xyap
init|;
name|i
operator|>
name|Cxy
condition|;
name|i
operator|-=
name|Cxy
control|)
block|{
name|pix
operator|+=
name|step
expr_stmt|;
name|vpix
operator|=
name|_mm_cvtepu8_epi32
argument_list|(
name|_mm_cvtsi32_si128
argument_list|(
operator|*
name|pix
argument_list|)
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_add_epi32
argument_list|(
name|vx
argument_list|,
name|_mm_mullo_epi32
argument_list|(
name|vpix
argument_list|,
name|vCxy
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|pix
operator|+=
name|step
expr_stmt|;
name|vpix
operator|=
name|_mm_cvtepu8_epi32
argument_list|(
name|_mm_cvtsi32_si128
argument_list|(
operator|*
name|pix
argument_list|)
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_add_epi32
argument_list|(
name|vx
argument_list|,
name|_mm_mullo_epi32
argument_list|(
name|vpix
argument_list|,
name|_mm_set1_epi32
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|vx
return|;
block|}
end_function
begin_function
template|template
parameter_list|<
name|bool
name|RGB
parameter_list|>
DECL|function|qt_qimageScaleAARGBA_up_x_down_y_sse4
name|void
name|qt_qimageScaleAARGBA_up_x_down_y_sse4
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
modifier|*
modifier|*
name|ypoints
init|=
name|isi
operator|->
name|ypoints
decl_stmt|;
name|int
modifier|*
name|xpoints
init|=
name|isi
operator|->
name|xpoints
decl_stmt|;
name|int
modifier|*
name|xapoints
init|=
name|isi
operator|->
name|xapoints
decl_stmt|;
name|int
modifier|*
name|yapoints
init|=
name|isi
operator|->
name|yapoints
decl_stmt|;
name|int
name|end
init|=
name|dxx
operator|+
name|dw
decl_stmt|;
specifier|const
name|__m128i
name|v256
init|=
name|_mm_set1_epi32
argument_list|(
literal|256
argument_list|)
decl_stmt|;
comment|/* go through every scanline in the output buffer */
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|dh
condition|;
name|y
operator|++
control|)
block|{
name|int
name|Cy
init|=
operator|(
name|yapoints
index|[
name|dyy
operator|+
name|y
index|]
operator|)
operator|>>
literal|16
decl_stmt|;
name|int
name|yap
init|=
operator|(
name|yapoints
index|[
name|dyy
operator|+
name|y
index|]
operator|)
operator|&
literal|0xffff
decl_stmt|;
specifier|const
name|__m128i
name|vCy
init|=
name|_mm_set1_epi32
argument_list|(
name|Cy
argument_list|)
decl_stmt|;
specifier|const
name|__m128i
name|vyap
init|=
name|_mm_set1_epi32
argument_list|(
name|yap
argument_list|)
decl_stmt|;
name|unsigned
name|int
modifier|*
name|dptr
init|=
name|dest
operator|+
name|dx
operator|+
operator|(
operator|(
name|y
operator|+
name|dy
operator|)
operator|*
name|dow
operator|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
name|dxx
init|;
name|x
operator|<
name|end
condition|;
name|x
operator|++
control|)
block|{
specifier|const
name|unsigned
name|int
modifier|*
name|sptr
init|=
name|ypoints
index|[
name|dyy
operator|+
name|y
index|]
operator|+
name|xpoints
index|[
name|x
index|]
decl_stmt|;
name|__m128i
name|vx
init|=
name|qt_qimageScaleAARGBA_helper
argument_list|(
name|sptr
argument_list|,
name|yap
argument_list|,
name|Cy
argument_list|,
name|sow
argument_list|,
name|vyap
argument_list|,
name|vCy
argument_list|)
decl_stmt|;
name|int
name|xap
init|=
name|xapoints
index|[
name|x
index|]
decl_stmt|;
if|if
condition|(
name|xap
operator|>
literal|0
condition|)
block|{
specifier|const
name|__m128i
name|vxap
init|=
name|_mm_set1_epi32
argument_list|(
name|xap
argument_list|)
decl_stmt|;
specifier|const
name|__m128i
name|vinvxap
init|=
name|_mm_sub_epi32
argument_list|(
name|v256
argument_list|,
name|vxap
argument_list|)
decl_stmt|;
name|__m128i
name|vr
init|=
name|qt_qimageScaleAARGBA_helper
argument_list|(
name|sptr
operator|+
literal|1
argument_list|,
name|yap
argument_list|,
name|Cy
argument_list|,
name|sow
argument_list|,
name|vyap
argument_list|,
name|vCy
argument_list|)
decl_stmt|;
name|vx
operator|=
name|_mm_mullo_epi32
argument_list|(
name|vx
argument_list|,
name|vinvxap
argument_list|)
expr_stmt|;
name|vr
operator|=
name|_mm_mullo_epi32
argument_list|(
name|vr
argument_list|,
name|vxap
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_add_epi32
argument_list|(
name|vx
argument_list|,
name|vr
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_srli_epi32
argument_list|(
name|vx
argument_list|,
literal|8
argument_list|)
expr_stmt|;
block|}
name|vx
operator|=
name|_mm_srli_epi32
argument_list|(
name|vx
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_packus_epi32
argument_list|(
name|vx
argument_list|,
name|_mm_setzero_si128
argument_list|()
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_packus_epi16
argument_list|(
name|vx
argument_list|,
name|_mm_setzero_si128
argument_list|()
argument_list|)
expr_stmt|;
operator|*
name|dptr
operator|=
name|_mm_cvtsi128_si32
argument_list|(
name|vx
argument_list|)
expr_stmt|;
if|if
condition|(
name|RGB
condition|)
operator|*
name|dptr
operator||=
literal|0xff000000
expr_stmt|;
name|dptr
operator|++
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
template|template
parameter_list|<
name|bool
name|RGB
parameter_list|>
DECL|function|qt_qimageScaleAARGBA_down_x_up_y_sse4
name|void
name|qt_qimageScaleAARGBA_down_x_up_y_sse4
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
modifier|*
modifier|*
name|ypoints
init|=
name|isi
operator|->
name|ypoints
decl_stmt|;
name|int
modifier|*
name|xpoints
init|=
name|isi
operator|->
name|xpoints
decl_stmt|;
name|int
modifier|*
name|xapoints
init|=
name|isi
operator|->
name|xapoints
decl_stmt|;
name|int
modifier|*
name|yapoints
init|=
name|isi
operator|->
name|yapoints
decl_stmt|;
name|int
name|end
init|=
name|dxx
operator|+
name|dw
decl_stmt|;
specifier|const
name|__m128i
name|v256
init|=
name|_mm_set1_epi32
argument_list|(
literal|256
argument_list|)
decl_stmt|;
comment|/* go through every scanline in the output buffer */
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|dh
condition|;
name|y
operator|++
control|)
block|{
name|unsigned
name|int
modifier|*
name|dptr
init|=
name|dest
operator|+
name|dx
operator|+
operator|(
operator|(
name|y
operator|+
name|dy
operator|)
operator|*
name|dow
operator|)
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
name|dxx
init|;
name|x
operator|<
name|end
condition|;
name|x
operator|++
control|)
block|{
name|int
name|Cx
init|=
name|xapoints
index|[
name|x
index|]
operator|>>
literal|16
decl_stmt|;
name|int
name|xap
init|=
name|xapoints
index|[
name|x
index|]
operator|&
literal|0xffff
decl_stmt|;
specifier|const
name|__m128i
name|vCx
init|=
name|_mm_set1_epi32
argument_list|(
name|Cx
argument_list|)
decl_stmt|;
specifier|const
name|__m128i
name|vxap
init|=
name|_mm_set1_epi32
argument_list|(
name|xap
argument_list|)
decl_stmt|;
specifier|const
name|unsigned
name|int
modifier|*
name|sptr
init|=
name|ypoints
index|[
name|dyy
operator|+
name|y
index|]
operator|+
name|xpoints
index|[
name|x
index|]
decl_stmt|;
name|__m128i
name|vx
init|=
name|qt_qimageScaleAARGBA_helper
argument_list|(
name|sptr
argument_list|,
name|xap
argument_list|,
name|Cx
argument_list|,
literal|1
argument_list|,
name|vxap
argument_list|,
name|vCx
argument_list|)
decl_stmt|;
name|int
name|yap
init|=
name|yapoints
index|[
name|dyy
operator|+
name|y
index|]
decl_stmt|;
if|if
condition|(
name|yap
operator|>
literal|0
condition|)
block|{
specifier|const
name|__m128i
name|vyap
init|=
name|_mm_set1_epi32
argument_list|(
name|yap
argument_list|)
decl_stmt|;
specifier|const
name|__m128i
name|vinvyap
init|=
name|_mm_sub_epi32
argument_list|(
name|v256
argument_list|,
name|vyap
argument_list|)
decl_stmt|;
name|__m128i
name|vr
init|=
name|qt_qimageScaleAARGBA_helper
argument_list|(
name|sptr
operator|+
name|sow
argument_list|,
name|xap
argument_list|,
name|Cx
argument_list|,
literal|1
argument_list|,
name|vxap
argument_list|,
name|vCx
argument_list|)
decl_stmt|;
name|vx
operator|=
name|_mm_mullo_epi32
argument_list|(
name|vx
argument_list|,
name|vinvyap
argument_list|)
expr_stmt|;
name|vr
operator|=
name|_mm_mullo_epi32
argument_list|(
name|vr
argument_list|,
name|vyap
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_add_epi32
argument_list|(
name|vx
argument_list|,
name|vr
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_srli_epi32
argument_list|(
name|vx
argument_list|,
literal|8
argument_list|)
expr_stmt|;
block|}
name|vx
operator|=
name|_mm_srli_epi32
argument_list|(
name|vx
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_packus_epi32
argument_list|(
name|vx
argument_list|,
name|_mm_setzero_si128
argument_list|()
argument_list|)
expr_stmt|;
name|vx
operator|=
name|_mm_packus_epi16
argument_list|(
name|vx
argument_list|,
name|_mm_setzero_si128
argument_list|()
argument_list|)
expr_stmt|;
operator|*
name|dptr
operator|=
name|_mm_cvtsi128_si32
argument_list|(
name|vx
argument_list|)
expr_stmt|;
if|if
condition|(
name|RGB
condition|)
operator|*
name|dptr
operator||=
literal|0xff000000
expr_stmt|;
name|dptr
operator|++
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
template|template
parameter_list|<
name|bool
name|RGB
parameter_list|>
DECL|function|qt_qimageScaleAARGBA_down_xy_sse4
name|void
name|qt_qimageScaleAARGBA_down_xy_sse4
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
block|{
specifier|const
name|unsigned
name|int
modifier|*
modifier|*
name|ypoints
init|=
name|isi
operator|->
name|ypoints
decl_stmt|;
name|int
modifier|*
name|xpoints
init|=
name|isi
operator|->
name|xpoints
decl_stmt|;
name|int
modifier|*
name|xapoints
init|=
name|isi
operator|->
name|xapoints
decl_stmt|;
name|int
modifier|*
name|yapoints
init|=
name|isi
operator|->
name|yapoints
decl_stmt|;
for|for
control|(
name|int
name|y
init|=
literal|0
init|;
name|y
operator|<
name|dh
condition|;
name|y
operator|++
control|)
block|{
name|int
name|Cy
init|=
operator|(
name|yapoints
index|[
name|dyy
operator|+
name|y
index|]
operator|)
operator|>>
literal|16
decl_stmt|;
name|int
name|yap
init|=
operator|(
name|yapoints
index|[
name|dyy
operator|+
name|y
index|]
operator|)
operator|&
literal|0xffff
decl_stmt|;
specifier|const
name|__m128i
name|vCy
init|=
name|_mm_set1_epi32
argument_list|(
name|Cy
argument_list|)
decl_stmt|;
specifier|const
name|__m128i
name|vyap
init|=
name|_mm_set1_epi32
argument_list|(
name|yap
argument_list|)
decl_stmt|;
name|unsigned
name|int
modifier|*
name|dptr
init|=
name|dest
operator|+
name|dx
operator|+
operator|(
operator|(
name|y
operator|+
name|dy
operator|)
operator|*
name|dow
operator|)
decl_stmt|;
name|int
name|end
init|=
name|dxx
operator|+
name|dw
decl_stmt|;
for|for
control|(
name|int
name|x
init|=
name|dxx
init|;
name|x
operator|<
name|end
condition|;
name|x
operator|++
control|)
block|{
specifier|const
name|int
name|Cx
init|=
name|xapoints
index|[
name|x
index|]
operator|>>
literal|16
decl_stmt|;
specifier|const
name|int
name|xap
init|=
name|xapoints
index|[
name|x
index|]
operator|&
literal|0xffff
decl_stmt|;
specifier|const
name|__m128i
name|vCx
init|=
name|_mm_set1_epi32
argument_list|(
name|Cx
argument_list|)
decl_stmt|;
specifier|const
name|__m128i
name|vxap
init|=
name|_mm_set1_epi32
argument_list|(
name|xap
argument_list|)
decl_stmt|;
specifier|const
name|unsigned
name|int
modifier|*
name|sptr
init|=
name|ypoints
index|[
name|dyy
operator|+
name|y
index|]
operator|+
name|xpoints
index|[
name|x
index|]
decl_stmt|;
name|__m128i
name|vx
init|=
name|qt_qimageScaleAARGBA_helper
argument_list|(
name|sptr
argument_list|,
name|xap
argument_list|,
name|Cx
argument_list|,
literal|1
argument_list|,
name|vxap
argument_list|,
name|vCx
argument_list|)
decl_stmt|;
name|__m128i
name|vr
init|=
name|_mm_mullo_epi32
argument_list|(
name|_mm_srli_epi32
argument_list|(
name|vx
argument_list|,
literal|4
argument_list|)
argument_list|,
name|vyap
argument_list|)
decl_stmt|;
name|int
name|j
decl_stmt|;
for|for
control|(
name|j
operator|=
operator|(
literal|1
operator|<<
literal|14
operator|)
operator|-
name|yap
init|;
name|j
operator|>
name|Cy
condition|;
name|j
operator|-=
name|Cy
control|)
block|{
name|sptr
operator|+=
name|sow
expr_stmt|;
name|vx
operator|=
name|qt_qimageScaleAARGBA_helper
argument_list|(
name|sptr
argument_list|,
name|xap
argument_list|,
name|Cx
argument_list|,
literal|1
argument_list|,
name|vxap
argument_list|,
name|vCx
argument_list|)
expr_stmt|;
name|vr
operator|=
name|_mm_add_epi32
argument_list|(
name|vr
argument_list|,
name|_mm_mullo_epi32
argument_list|(
name|_mm_srli_epi32
argument_list|(
name|vx
argument_list|,
literal|4
argument_list|)
argument_list|,
name|vCy
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|sptr
operator|+=
name|sow
expr_stmt|;
name|vx
operator|=
name|qt_qimageScaleAARGBA_helper
argument_list|(
name|sptr
argument_list|,
name|xap
argument_list|,
name|Cx
argument_list|,
literal|1
argument_list|,
name|vxap
argument_list|,
name|vCx
argument_list|)
expr_stmt|;
name|vr
operator|=
name|_mm_add_epi32
argument_list|(
name|vr
argument_list|,
name|_mm_mullo_epi32
argument_list|(
name|_mm_srli_epi32
argument_list|(
name|vx
argument_list|,
literal|4
argument_list|)
argument_list|,
name|_mm_set1_epi32
argument_list|(
name|j
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|vr
operator|=
name|_mm_srli_epi32
argument_list|(
name|vr
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|vr
operator|=
name|_mm_packus_epi32
argument_list|(
name|vr
argument_list|,
name|_mm_setzero_si128
argument_list|()
argument_list|)
expr_stmt|;
name|vr
operator|=
name|_mm_packus_epi16
argument_list|(
name|vr
argument_list|,
name|_mm_setzero_si128
argument_list|()
argument_list|)
expr_stmt|;
operator|*
name|dptr
operator|=
name|_mm_cvtsi128_si32
argument_list|(
name|vr
argument_list|)
expr_stmt|;
if|if
condition|(
name|RGB
condition|)
operator|*
name|dptr
operator||=
literal|0xff000000
expr_stmt|;
name|dptr
operator|++
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function_decl
specifier|template
name|void
name|qt_qimageScaleAARGBA_up_x_down_y_sse4
argument_list|<
literal|false
argument_list|>
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|template
name|void
name|qt_qimageScaleAARGBA_up_x_down_y_sse4
argument_list|<
literal|true
argument_list|>
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|template
name|void
name|qt_qimageScaleAARGBA_down_x_up_y_sse4
argument_list|<
literal|false
argument_list|>
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|template
name|void
name|qt_qimageScaleAARGBA_down_x_up_y_sse4
argument_list|<
literal|true
argument_list|>
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|template
name|void
name|qt_qimageScaleAARGBA_down_xy_sse4
argument_list|<
literal|false
argument_list|>
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|template
name|void
name|qt_qimageScaleAARGBA_down_xy_sse4
argument_list|<
literal|true
argument_list|>
parameter_list|(
name|QImageScaleInfo
modifier|*
name|isi
parameter_list|,
name|unsigned
name|int
modifier|*
name|dest
parameter_list|,
name|int
name|dxx
parameter_list|,
name|int
name|dyy
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|,
name|int
name|dw
parameter_list|,
name|int
name|dh
parameter_list|,
name|int
name|dow
parameter_list|,
name|int
name|sow
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
