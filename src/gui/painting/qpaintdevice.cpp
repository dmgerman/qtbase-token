begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qpaintdevice.h"
end_include
begin_function_decl
name|QT_BEGIN_NAMESPACE
specifier|extern
name|void
name|qt_painter_removePaintDevice
parameter_list|(
name|QPaintDevice
modifier|*
parameter_list|)
function_decl|;
end_function_decl
begin_comment
comment|//qpainter.cpp
end_comment
begin_constructor
DECL|function|QPaintDevice
name|QPaintDevice
operator|::
name|QPaintDevice
parameter_list|()
block|{
name|painters
operator|=
literal|0
expr_stmt|;
block|}
end_constructor
begin_destructor
DECL|function|~QPaintDevice
name|QPaintDevice
operator|::
name|~
name|QPaintDevice
parameter_list|()
block|{
if|if
condition|(
name|paintingActive
argument_list|()
condition|)
name|qWarning
argument_list|(
literal|"QPaintDevice: Cannot destroy paint device that is being "
literal|"painted"
argument_list|)
expr_stmt|;
name|qt_painter_removePaintDevice
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
end_destructor
begin_ifndef
ifndef|#
directive|ifndef
name|Q_WS_QPA
end_ifndef
begin_function
DECL|function|metric
name|int
name|QPaintDevice
operator|::
name|metric
parameter_list|(
name|PaintDeviceMetric
parameter_list|)
specifier|const
block|{
name|qWarning
argument_list|(
literal|"QPaintDevice::metrics: Device has no metric information"
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
end_function
begin_endif
endif|#
directive|endif
end_endif
begin_function
DECL|function|init
name|void
name|QPaintDevice
operator|::
name|init
parameter_list|(
name|QPainter
modifier|*
name|painter
parameter_list|)
specifier|const
block|{ }
end_function
begin_function
DECL|function|qt_paint_device_metric
name|Q_GUI_EXPORT
name|int
name|qt_paint_device_metric
parameter_list|(
specifier|const
name|QPaintDevice
modifier|*
name|device
parameter_list|,
name|QPaintDevice
operator|::
name|PaintDeviceMetric
name|metric
parameter_list|)
block|{
return|return
name|device
operator|->
name|metric
argument_list|(
name|metric
argument_list|)
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
