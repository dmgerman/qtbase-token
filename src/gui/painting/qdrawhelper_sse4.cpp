begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<private/qdrawhelper_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qdrawingprimitive_sse2_p.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_COMPILER_SUPPORTS_SSE4_1
argument_list|)
end_if
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|convertARGB32ToARGB32PM_sse4
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertARGB32ToARGB32PM_sse4
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
block|{
return|return
name|qt_convertARGB32ToARGB32PM
argument_list|(
name|buffer
argument_list|,
name|src
argument_list|,
name|count
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|convertRGBA8888ToARGB32PM_sse4
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertRGBA8888ToARGB32PM_sse4
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
block|{
return|return
name|qt_convertRGBA8888ToARGB32PM
argument_list|(
name|buffer
argument_list|,
name|src
argument_list|,
name|count
argument_list|)
return|;
block|}
end_function
begin_function
DECL|function|convertARGB32FromARGB32PM_sse4
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertARGB32FromARGB32PM_sse4
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
name|buffer
index|[
name|i
index|]
operator|=
name|qUnpremultiply_sse4
argument_list|(
name|src
index|[
name|i
index|]
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_function
DECL|function|convertRGBA8888FromARGB32PM_sse4
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertRGBA8888FromARGB32PM_sse4
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
name|buffer
index|[
name|i
index|]
operator|=
name|ARGB2RGBA
argument_list|(
name|qUnpremultiply_sse4
argument_list|(
name|src
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_function
DECL|function|convertRGBXFromARGB32PM_sse4
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertRGBXFromARGB32PM_sse4
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
name|buffer
index|[
name|i
index|]
operator|=
name|ARGB2RGBA
argument_list|(
literal|0xff000000
operator||
name|qUnpremultiply_sse4
argument_list|(
name|src
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_function
template|template
parameter_list|<
name|QtPixelOrder
name|PixelOrder
parameter_list|>
DECL|function|convertA2RGB30PMFromARGB32PM_sse4
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertA2RGB30PMFromARGB32PM_sse4
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|count
condition|;
operator|++
name|i
control|)
name|buffer
index|[
name|i
index|]
operator|=
name|qConvertArgb32ToA2rgb30_sse4
argument_list|<
name|PixelOrder
argument_list|>
argument_list|(
name|src
index|[
name|i
index|]
argument_list|)
expr_stmt|;
return|return
name|buffer
return|;
block|}
end_function
begin_function_decl
specifier|template
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertA2RGB30PMFromARGB32PM_sse4
argument_list|<
name|PixelOrderBGR
argument_list|>
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
specifier|template
specifier|const
name|uint
modifier|*
name|QT_FASTCALL
name|convertA2RGB30PMFromARGB32PM_sse4
argument_list|<
name|PixelOrderRGB
argument_list|>
parameter_list|(
name|uint
modifier|*
name|buffer
parameter_list|,
specifier|const
name|uint
modifier|*
name|src
parameter_list|,
name|int
name|count
parameter_list|,
specifier|const
name|QPixelLayout
modifier|*
parameter_list|,
specifier|const
name|QRgb
modifier|*
parameter_list|)
function_decl|;
end_function_decl
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
end_unit
