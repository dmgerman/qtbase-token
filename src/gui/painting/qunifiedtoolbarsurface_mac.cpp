begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qunifiedtoolbarsurface_mac_p.h"
end_include
begin_include
include|#
directive|include
file|<private/qt_cocoa_helpers_mac_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qbackingstore_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qmainwindowlayout_p.h>
end_include
begin_include
include|#
directive|include
file|<QDebug>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT_MAC_USE_COCOA
end_ifdef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QUnifiedToolbarSurface
name|QUnifiedToolbarSurface
operator|::
name|QUnifiedToolbarSurface
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
member_init_list|:
name|QRasterWindowSurface
argument_list|(
name|widget
argument_list|,
literal|false
argument_list|)
member_init_list|,
name|d_ptr
argument_list|(
operator|new
name|QUnifiedToolbarSurfacePrivate
argument_list|)
block|{
name|d_ptr
operator|->
name|image
operator|=
literal|0
expr_stmt|;
name|d_ptr
operator|->
name|inSetGeometry
operator|=
literal|false
expr_stmt|;
name|setGeometry
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|widget
operator|->
name|width
argument_list|()
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// FIXME: Fix height.
block|}
end_constructor
begin_destructor
DECL|function|~QUnifiedToolbarSurface
name|QUnifiedToolbarSurface
operator|::
name|~
name|QUnifiedToolbarSurface
parameter_list|()
block|{
if|if
condition|(
name|d_ptr
operator|->
name|image
condition|)
operator|delete
name|d_ptr
operator|->
name|image
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|paintDevice
name|QPaintDevice
modifier|*
name|QUnifiedToolbarSurface
operator|::
name|paintDevice
parameter_list|()
block|{
return|return
operator|&
name|d_ptr
operator|->
name|image
operator|->
name|image
return|;
block|}
end_function
begin_function
DECL|function|recursiveRedirect
name|void
name|QUnifiedToolbarSurface
operator|::
name|recursiveRedirect
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|,
name|QWidget
modifier|*
name|parent_toolbar
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
block|{
if|if
condition|(
name|object
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|object
operator|->
name|isWidgetType
argument_list|()
condition|)
block|{
name|QWidget
modifier|*
name|widget
init|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
decl_stmt|;
comment|// We redirect the painting only if the widget is in the same window
comment|// and is not a window in itself.
if|if
condition|(
operator|!
operator|(
name|widget
operator|->
name|windowType
argument_list|()
operator|&
name|Qt
operator|::
name|Window
operator|)
condition|)
block|{
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|unifiedSurface
operator|=
name|this
expr_stmt|;
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|isInUnifiedToolbar
operator|=
literal|true
expr_stmt|;
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_offset
operator|=
name|offset
expr_stmt|;
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_ancestor
operator|=
name|parent_toolbar
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|object
operator|->
name|children
argument_list|()
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|recursiveRedirect
argument_list|(
name|object
operator|->
name|children
argument_list|()
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|,
name|parent_toolbar
argument_list|,
name|offset
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_function
begin_function
DECL|function|insertToolbar
name|void
name|QUnifiedToolbarSurface
operator|::
name|insertToolbar
parameter_list|(
name|QWidget
modifier|*
name|toolbar
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
block|{
name|setGeometry
argument_list|(
name|QRect
argument_list|(
name|QPoint
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|QSize
argument_list|(
name|offset
operator|.
name|x
argument_list|()
operator|+
name|toolbar
operator|->
name|width
argument_list|()
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// FIXME
name|recursiveRedirect
argument_list|(
name|toolbar
argument_list|,
name|toolbar
argument_list|,
name|offset
argument_list|)
expr_stmt|;
block|}
end_function
begin_comment
comment|// We basically undo what we set in recursiveRedirect().
end_comment
begin_function
DECL|function|recursiveRemoval
name|void
name|QUnifiedToolbarSurface
operator|::
name|recursiveRemoval
parameter_list|(
name|QObject
modifier|*
name|object
parameter_list|)
block|{
if|if
condition|(
name|object
operator|!=
literal|0
condition|)
block|{
if|if
condition|(
name|object
operator|->
name|isWidgetType
argument_list|()
condition|)
block|{
name|QWidget
modifier|*
name|widget
init|=
name|qobject_cast
argument_list|<
name|QWidget
operator|*
argument_list|>
argument_list|(
name|object
argument_list|)
decl_stmt|;
comment|// If it's a pop-up or something similar, we don't redirect it.
if|if
condition|(
name|widget
operator|->
name|windowType
argument_list|()
operator|&
name|Qt
operator|::
name|Window
condition|)
return|return;
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|unifiedSurface
operator|=
literal|0
expr_stmt|;
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|isInUnifiedToolbar
operator|=
literal|false
expr_stmt|;
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_offset
operator|=
name|QPoint
argument_list|()
expr_stmt|;
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_ancestor
operator|=
literal|0
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|object
operator|->
name|children
argument_list|()
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|recursiveRemoval
argument_list|(
name|object
operator|->
name|children
argument_list|()
operator|.
name|at
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_function
begin_function
DECL|function|removeToolbar
name|void
name|QUnifiedToolbarSurface
operator|::
name|removeToolbar
parameter_list|(
name|QToolBar
modifier|*
name|toolbar
parameter_list|)
block|{
name|recursiveRemoval
argument_list|(
name|toolbar
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|setGeometry
name|void
name|QUnifiedToolbarSurface
operator|::
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
block|{
name|QWindowSurface
operator|::
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
name|Q_D
argument_list|(
name|QUnifiedToolbarSurface
argument_list|)
expr_stmt|;
name|d
operator|->
name|inSetGeometry
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|d
operator|->
name|image
operator|==
literal|0
operator|||
name|d
operator|->
name|image
operator|->
name|width
argument_list|()
operator|<
name|rect
operator|.
name|width
argument_list|()
operator|||
name|d
operator|->
name|image
operator|->
name|height
argument_list|()
operator|<
name|rect
operator|.
name|height
argument_list|()
condition|)
name|prepareBuffer
argument_list|(
name|QImage
operator|::
name|Format_ARGB32_Premultiplied
argument_list|,
name|window
argument_list|()
argument_list|)
expr_stmt|;
name|d
operator|->
name|inSetGeometry
operator|=
literal|false
expr_stmt|;
comment|// FIXME: set unified toolbar height.
block|}
end_function
begin_function
DECL|function|beginPaint
name|void
name|QUnifiedToolbarSurface
operator|::
name|beginPaint
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|rgn
parameter_list|)
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|d_ptr
operator|->
name|image
operator|->
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
specifier|const
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
init|=
name|rgn
operator|.
name|rects
argument_list|()
decl_stmt|;
specifier|const
name|QColor
name|blank
init|=
name|Qt
operator|::
name|transparent
decl_stmt|;
for|for
control|(
name|QVector
argument_list|<
name|QRect
argument_list|>
operator|::
name|const_iterator
name|it
init|=
name|rects
operator|.
name|begin
argument_list|()
init|;
name|it
operator|!=
name|rects
operator|.
name|end
argument_list|()
condition|;
operator|++
name|it
control|)
block|{
name|p
operator|.
name|fillRect
argument_list|(
operator|*
name|it
argument_list|,
name|blank
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|updateToolbarOffset
name|void
name|QUnifiedToolbarSurface
operator|::
name|updateToolbarOffset
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|QMainWindowLayout
modifier|*
name|mlayout
init|=
name|qobject_cast
argument_list|<
name|QMainWindowLayout
operator|*
argument_list|>
argument_list|(
name|widget
operator|->
name|window
argument_list|()
operator|->
name|layout
argument_list|()
argument_list|)
decl_stmt|;
name|mlayout
operator|->
name|updateUnifiedToolbarOffset
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|flush
name|void
name|QUnifiedToolbarSurface
operator|::
name|flush
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Q_UNUSED
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|this
operator|->
name|flush
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|flush
name|void
name|QUnifiedToolbarSurface
operator|::
name|flush
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QUnifiedToolbarSurface
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|d
operator|->
name|image
condition|)
return|return;
if|if
condition|(
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|flushRequested
condition|)
block|{
comment|// We call display: directly to avoid flickering in the toolbar.
name|qt_mac_display
argument_list|(
name|widget
argument_list|)
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|prepareBuffer
name|void
name|QUnifiedToolbarSurface
operator|::
name|prepareBuffer
parameter_list|(
name|QImage
operator|::
name|Format
name|format
parameter_list|,
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
name|Q_D
argument_list|(
name|QUnifiedToolbarSurface
argument_list|)
expr_stmt|;
name|int
name|width
init|=
name|geometry
argument_list|()
operator|.
name|width
argument_list|()
decl_stmt|;
name|int
name|height
init|=
literal|100
decl_stmt|;
comment|// FIXME
if|if
condition|(
name|d
operator|->
name|image
condition|)
block|{
name|width
operator|=
name|qMax
argument_list|(
name|d
operator|->
name|image
operator|->
name|width
argument_list|()
argument_list|,
name|width
argument_list|)
expr_stmt|;
name|height
operator|=
name|qMax
argument_list|(
name|d
operator|->
name|image
operator|->
name|height
argument_list|()
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|width
operator|==
literal|0
operator|||
name|height
operator|==
literal|0
condition|)
block|{
operator|delete
name|d
operator|->
name|image
expr_stmt|;
name|d
operator|->
name|image
operator|=
literal|0
expr_stmt|;
return|return;
block|}
name|QNativeImage
modifier|*
name|oldImage
init|=
name|d
operator|->
name|image
decl_stmt|;
name|d
operator|->
name|image
operator|=
operator|new
name|QNativeImage
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
literal|false
argument_list|,
name|widget
argument_list|)
expr_stmt|;
if|if
condition|(
name|oldImage
operator|&&
name|d
operator|->
name|inSetGeometry
operator|&&
name|hasStaticContents
argument_list|()
condition|)
block|{
comment|// Make sure we use the const version of bits() (no detach).
specifier|const
name|uchar
modifier|*
name|src
init|=
cast|const_cast
argument_list|<
specifier|const
name|QImage
operator|&
argument_list|>
argument_list|(
name|oldImage
operator|->
name|image
argument_list|)
operator|.
name|bits
argument_list|()
decl_stmt|;
name|uchar
modifier|*
name|dst
init|=
name|d
operator|->
name|image
operator|->
name|image
operator|.
name|bits
argument_list|()
decl_stmt|;
specifier|const
name|int
name|srcBytesPerLine
init|=
name|oldImage
operator|->
name|image
operator|.
name|bytesPerLine
argument_list|()
decl_stmt|;
specifier|const
name|int
name|dstBytesPerLine
init|=
name|d
operator|->
name|image
operator|->
name|image
operator|.
name|bytesPerLine
argument_list|()
decl_stmt|;
specifier|const
name|int
name|bytesPerPixel
init|=
name|oldImage
operator|->
name|image
operator|.
name|depth
argument_list|()
operator|>>
literal|3
decl_stmt|;
name|QRegion
name|staticRegion
argument_list|(
name|staticContents
argument_list|()
argument_list|)
decl_stmt|;
comment|// Make sure we're inside the boundaries of the old image.
name|staticRegion
operator|&=
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|oldImage
operator|->
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|oldImage
operator|->
name|image
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
specifier|const
name|QVector
argument_list|<
name|QRect
argument_list|>
modifier|&
name|rects
init|=
name|staticRegion
operator|.
name|rects
argument_list|()
decl_stmt|;
specifier|const
name|QRect
modifier|*
name|srcRect
init|=
name|rects
operator|.
name|constData
argument_list|()
decl_stmt|;
comment|// Copy the static content of the old image into the new one.
name|int
name|numRectsLeft
init|=
name|rects
operator|.
name|size
argument_list|()
decl_stmt|;
do|do
block|{
specifier|const
name|int
name|bytesOffset
init|=
name|srcRect
operator|->
name|x
argument_list|()
operator|*
name|bytesPerPixel
decl_stmt|;
specifier|const
name|int
name|dy
init|=
name|srcRect
operator|->
name|y
argument_list|()
decl_stmt|;
comment|// Adjust src and dst to point to the right offset.
specifier|const
name|uchar
modifier|*
name|s
init|=
name|src
operator|+
name|dy
operator|*
name|srcBytesPerLine
operator|+
name|bytesOffset
decl_stmt|;
name|uchar
modifier|*
name|d
init|=
name|dst
operator|+
name|dy
operator|*
name|dstBytesPerLine
operator|+
name|bytesOffset
decl_stmt|;
specifier|const
name|int
name|numBytes
init|=
name|srcRect
operator|->
name|width
argument_list|()
operator|*
name|bytesPerPixel
decl_stmt|;
name|int
name|numScanLinesLeft
init|=
name|srcRect
operator|->
name|height
argument_list|()
decl_stmt|;
do|do
block|{
operator|::
name|memcpy
argument_list|(
name|d
argument_list|,
name|s
argument_list|,
name|numBytes
argument_list|)
expr_stmt|;
name|d
operator|+=
name|dstBytesPerLine
expr_stmt|;
name|s
operator|+=
name|srcBytesPerLine
expr_stmt|;
block|}
do|while
condition|(
operator|--
name|numScanLinesLeft
condition|)
do|;
operator|++
name|srcRect
expr_stmt|;
block|}
do|while
condition|(
operator|--
name|numRectsLeft
condition|)
do|;
block|}
operator|delete
name|oldImage
expr_stmt|;
block|}
end_function
begin_function
DECL|function|imageContext
name|CGContextRef
name|QUnifiedToolbarSurface
operator|::
name|imageContext
parameter_list|()
block|{
name|Q_D
argument_list|(
name|QUnifiedToolbarSurface
argument_list|)
expr_stmt|;
return|return
name|d
operator|->
name|image
operator|->
name|cg
return|;
block|}
end_function
begin_function
DECL|function|renderToolbar
name|void
name|QUnifiedToolbarSurface
operator|::
name|renderToolbar
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
name|bool
name|forceFlush
parameter_list|)
block|{
name|QWidget
modifier|*
name|toolbar
init|=
name|widget
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_ancestor
decl_stmt|;
name|updateToolbarOffset
argument_list|(
name|toolbar
argument_list|)
expr_stmt|;
name|QRect
name|beginPaintRect
argument_list|(
name|toolbar
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_offset
operator|.
name|x
argument_list|()
argument_list|,
name|toolbar
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_offset
operator|.
name|y
argument_list|()
argument_list|,
name|toolbar
operator|->
name|geometry
argument_list|()
operator|.
name|width
argument_list|()
argument_list|,
name|toolbar
operator|->
name|geometry
argument_list|()
operator|.
name|height
argument_list|()
argument_list|)
decl_stmt|;
name|QRegion
name|beginPaintRegion
argument_list|(
name|beginPaintRect
argument_list|)
decl_stmt|;
name|beginPaint
argument_list|(
name|beginPaintRegion
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|render
argument_list|(
name|paintDevice
argument_list|()
argument_list|,
name|toolbar
operator|->
name|d_func
argument_list|()
operator|->
name|toolbar_offset
argument_list|,
name|QRegion
argument_list|(
name|toolbar
operator|->
name|geometry
argument_list|()
argument_list|)
argument_list|,
name|QWidget
operator|::
name|DrawChildren
argument_list|)
expr_stmt|;
name|toolbar
operator|->
name|d_func
argument_list|()
operator|->
name|flushRequested
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|forceFlush
condition|)
name|flush
argument_list|(
name|toolbar
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_MAC_USE_COCOA
end_comment
end_unit
