begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QPAINTER_H
end_ifndef
begin_define
DECL|macro|QPAINTER_H
define|#
directive|define
name|QPAINTER_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qnamespace.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qrect.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qpoint.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qscopedpointer.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpixmap.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qimage.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qtextoption.h>
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_INCLUDE_COMPAT
end_ifndef
begin_include
include|#
directive|include
file|<QtGui/qpolygon.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpen.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qbrush.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qmatrix.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qtransform.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qfontinfo.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qfontmetrics.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
DECL|variable|QBrush
name|class
name|QBrush
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QFontInfo
name|class
name|QFontInfo
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QFontMetrics
name|class
name|QFontMetrics
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPaintDevice
name|class
name|QPaintDevice
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPainterPath
name|class
name|QPainterPath
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPainterPrivate
name|class
name|QPainterPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPen
name|class
name|QPen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPolygon
name|class
name|QPolygon
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTextItem
name|class
name|QTextItem
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMatrix
name|class
name|QMatrix
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QTransform
name|class
name|QTransform
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QStaticText
name|class
name|QStaticText
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QGlyphRun
name|class
name|QGlyphRun
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPainterPrivateDeleter
name|class
name|QPainterPrivateDeleter
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QPainter
block|{
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QPainter
argument_list|)
name|Q_GADGET
name|Q_FLAGS
argument_list|(
name|RenderHint
name|RenderHints
argument_list|)
name|public
range|:     enum
name|RenderHint
block|{
name|Antialiasing
operator|=
literal|0x01
block|,
name|TextAntialiasing
operator|=
literal|0x02
block|,
name|SmoothPixmapTransform
operator|=
literal|0x04
block|,
name|HighQualityAntialiasing
operator|=
literal|0x08
block|,
name|NonCosmeticDefaultPen
operator|=
literal|0x10
block|}
decl_stmt|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|RenderHints
argument_list|,
argument|RenderHint
argument_list|)
name|class
name|PixmapFragment
block|{
name|public
label|:
name|qreal
name|x
decl_stmt|;
name|qreal
name|y
decl_stmt|;
name|qreal
name|sourceLeft
decl_stmt|;
name|qreal
name|sourceTop
decl_stmt|;
name|qreal
name|width
decl_stmt|;
name|qreal
name|height
decl_stmt|;
name|qreal
name|scaleX
decl_stmt|;
name|qreal
name|scaleY
decl_stmt|;
name|qreal
name|rotation
decl_stmt|;
name|qreal
name|opacity
decl_stmt|;
specifier|static
name|PixmapFragment
name|Q_GUI_EXPORT
name|create
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pos
parameter_list|,
specifier|const
name|QRectF
modifier|&
name|sourceRect
parameter_list|,
name|qreal
name|scaleX
init|=
literal|1
parameter_list|,
name|qreal
name|scaleY
init|=
literal|1
parameter_list|,
name|qreal
name|rotation
init|=
literal|0
parameter_list|,
name|qreal
name|opacity
init|=
literal|1
parameter_list|)
function_decl|;
block|}
empty_stmt|;
enum|enum
name|PixmapFragmentHint
block|{
name|OpaqueHint
init|=
literal|0x01
block|}
enum|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|PixmapFragmentHints
argument_list|,
argument|PixmapFragmentHint
argument_list|)
name|QPainter
argument_list|()
expr_stmt|;
name|explicit
name|QPainter
parameter_list|(
name|QPaintDevice
modifier|*
parameter_list|)
function_decl|;
operator|~
name|QPainter
argument_list|()
expr_stmt|;
name|QPaintDevice
operator|*
name|device
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|begin
parameter_list|(
name|QPaintDevice
modifier|*
parameter_list|)
function_decl|;
name|bool
name|end
parameter_list|()
function_decl|;
name|bool
name|isActive
argument_list|()
specifier|const
expr_stmt|;
name|void
name|initFrom
parameter_list|(
specifier|const
name|QPaintDevice
modifier|*
name|device
parameter_list|)
function_decl|;
enum|enum
name|CompositionMode
block|{
name|CompositionMode_SourceOver
block|,
name|CompositionMode_DestinationOver
block|,
name|CompositionMode_Clear
block|,
name|CompositionMode_Source
block|,
name|CompositionMode_Destination
block|,
name|CompositionMode_SourceIn
block|,
name|CompositionMode_DestinationIn
block|,
name|CompositionMode_SourceOut
block|,
name|CompositionMode_DestinationOut
block|,
name|CompositionMode_SourceAtop
block|,
name|CompositionMode_DestinationAtop
block|,
name|CompositionMode_Xor
block|,
comment|//svg 1.2 blend modes
name|CompositionMode_Plus
block|,
name|CompositionMode_Multiply
block|,
name|CompositionMode_Screen
block|,
name|CompositionMode_Overlay
block|,
name|CompositionMode_Darken
block|,
name|CompositionMode_Lighten
block|,
name|CompositionMode_ColorDodge
block|,
name|CompositionMode_ColorBurn
block|,
name|CompositionMode_HardLight
block|,
name|CompositionMode_SoftLight
block|,
name|CompositionMode_Difference
block|,
name|CompositionMode_Exclusion
block|,
comment|// ROPs
name|RasterOp_SourceOrDestination
block|,
name|RasterOp_SourceAndDestination
block|,
name|RasterOp_SourceXorDestination
block|,
name|RasterOp_NotSourceAndNotDestination
block|,
name|RasterOp_NotSourceOrNotDestination
block|,
name|RasterOp_NotSourceXorDestination
block|,
name|RasterOp_NotSource
block|,
name|RasterOp_NotSourceAndDestination
block|,
name|RasterOp_SourceAndNotDestination
block|}
enum|;
name|void
name|setCompositionMode
parameter_list|(
name|CompositionMode
name|mode
parameter_list|)
function_decl|;
name|CompositionMode
name|compositionMode
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|QFont
operator|&
name|font
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setFont
parameter_list|(
specifier|const
name|QFont
modifier|&
name|f
parameter_list|)
function_decl|;
name|QFontMetrics
name|fontMetrics
argument_list|()
specifier|const
expr_stmt|;
name|QFontInfo
name|fontInfo
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setPen
parameter_list|(
specifier|const
name|QColor
modifier|&
name|color
parameter_list|)
function_decl|;
name|void
name|setPen
parameter_list|(
specifier|const
name|QPen
modifier|&
name|pen
parameter_list|)
function_decl|;
name|void
name|setPen
argument_list|(
name|Qt
operator|::
name|PenStyle
name|style
argument_list|)
decl_stmt|;
specifier|const
name|QPen
operator|&
name|pen
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setBrush
parameter_list|(
specifier|const
name|QBrush
modifier|&
name|brush
parameter_list|)
function_decl|;
name|void
name|setBrush
argument_list|(
name|Qt
operator|::
name|BrushStyle
name|style
argument_list|)
decl_stmt|;
specifier|const
name|QBrush
operator|&
name|brush
argument_list|()
specifier|const
expr_stmt|;
comment|// attributes/modes
name|void
name|setBackgroundMode
argument_list|(
name|Qt
operator|::
name|BGMode
name|mode
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|BGMode
name|backgroundMode
argument_list|()
specifier|const
expr_stmt|;
name|QPoint
name|brushOrigin
argument_list|()
specifier|const
expr_stmt|;
specifier|inline
name|void
name|setBrushOrigin
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
function_decl|;
specifier|inline
name|void
name|setBrushOrigin
parameter_list|(
specifier|const
name|QPoint
modifier|&
parameter_list|)
function_decl|;
name|void
name|setBrushOrigin
parameter_list|(
specifier|const
name|QPointF
modifier|&
parameter_list|)
function_decl|;
name|void
name|setBackground
parameter_list|(
specifier|const
name|QBrush
modifier|&
name|bg
parameter_list|)
function_decl|;
specifier|const
name|QBrush
operator|&
name|background
argument_list|()
specifier|const
expr_stmt|;
name|qreal
name|opacity
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setOpacity
parameter_list|(
name|qreal
name|opacity
parameter_list|)
function_decl|;
comment|// Clip functions
name|QRegion
name|clipRegion
argument_list|()
specifier|const
expr_stmt|;
name|QPainterPath
name|clipPath
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setClipRect
argument_list|(
specifier|const
name|QRectF
operator|&
argument_list|,
name|Qt
operator|::
name|ClipOperation
name|op
operator|=
name|Qt
operator|::
name|ReplaceClip
argument_list|)
decl_stmt|;
name|void
name|setClipRect
argument_list|(
specifier|const
name|QRect
operator|&
argument_list|,
name|Qt
operator|::
name|ClipOperation
name|op
operator|=
name|Qt
operator|::
name|ReplaceClip
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|setClipRect
argument_list|(
name|int
name|x
argument_list|,
name|int
name|y
argument_list|,
name|int
name|w
argument_list|,
name|int
name|h
argument_list|,
name|Qt
operator|::
name|ClipOperation
name|op
operator|=
name|Qt
operator|::
name|ReplaceClip
argument_list|)
decl_stmt|;
name|void
name|setClipRegion
argument_list|(
specifier|const
name|QRegion
operator|&
argument_list|,
name|Qt
operator|::
name|ClipOperation
name|op
operator|=
name|Qt
operator|::
name|ReplaceClip
argument_list|)
decl_stmt|;
name|void
name|setClipPath
argument_list|(
specifier|const
name|QPainterPath
operator|&
name|path
argument_list|,
name|Qt
operator|::
name|ClipOperation
name|op
operator|=
name|Qt
operator|::
name|ReplaceClip
argument_list|)
decl_stmt|;
name|void
name|setClipping
parameter_list|(
name|bool
name|enable
parameter_list|)
function_decl|;
name|bool
name|hasClipping
argument_list|()
specifier|const
expr_stmt|;
name|QRectF
name|clipBoundingRect
argument_list|()
specifier|const
expr_stmt|;
name|void
name|save
parameter_list|()
function_decl|;
name|void
name|restore
parameter_list|()
function_decl|;
comment|// XForm functions
name|void
name|setMatrix
parameter_list|(
specifier|const
name|QMatrix
modifier|&
name|matrix
parameter_list|,
name|bool
name|combine
init|=
name|false
parameter_list|)
function_decl|;
specifier|const
name|QMatrix
operator|&
name|matrix
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|QMatrix
operator|&
name|deviceMatrix
argument_list|()
specifier|const
expr_stmt|;
name|void
name|resetMatrix
parameter_list|()
function_decl|;
name|void
name|setTransform
parameter_list|(
specifier|const
name|QTransform
modifier|&
name|transform
parameter_list|,
name|bool
name|combine
init|=
name|false
parameter_list|)
function_decl|;
specifier|const
name|QTransform
operator|&
name|transform
argument_list|()
specifier|const
expr_stmt|;
specifier|const
name|QTransform
operator|&
name|deviceTransform
argument_list|()
specifier|const
expr_stmt|;
name|void
name|resetTransform
parameter_list|()
function_decl|;
name|void
name|setWorldMatrix
parameter_list|(
specifier|const
name|QMatrix
modifier|&
name|matrix
parameter_list|,
name|bool
name|combine
init|=
name|false
parameter_list|)
function_decl|;
specifier|const
name|QMatrix
operator|&
name|worldMatrix
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setWorldTransform
parameter_list|(
specifier|const
name|QTransform
modifier|&
name|matrix
parameter_list|,
name|bool
name|combine
init|=
name|false
parameter_list|)
function_decl|;
specifier|const
name|QTransform
operator|&
name|worldTransform
argument_list|()
specifier|const
expr_stmt|;
name|QMatrix
name|combinedMatrix
argument_list|()
specifier|const
expr_stmt|;
name|QTransform
name|combinedTransform
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setMatrixEnabled
parameter_list|(
name|bool
name|enabled
parameter_list|)
function_decl|;
name|bool
name|matrixEnabled
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setWorldMatrixEnabled
parameter_list|(
name|bool
name|enabled
parameter_list|)
function_decl|;
name|bool
name|worldMatrixEnabled
argument_list|()
specifier|const
expr_stmt|;
name|void
name|scale
parameter_list|(
name|qreal
name|sx
parameter_list|,
name|qreal
name|sy
parameter_list|)
function_decl|;
name|void
name|shear
parameter_list|(
name|qreal
name|sh
parameter_list|,
name|qreal
name|sv
parameter_list|)
function_decl|;
name|void
name|rotate
parameter_list|(
name|qreal
name|a
parameter_list|)
function_decl|;
name|void
name|translate
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|offset
parameter_list|)
function_decl|;
specifier|inline
name|void
name|translate
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|offset
parameter_list|)
function_decl|;
specifier|inline
name|void
name|translate
parameter_list|(
name|qreal
name|dx
parameter_list|,
name|qreal
name|dy
parameter_list|)
function_decl|;
name|QRect
name|window
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setWindow
parameter_list|(
specifier|const
name|QRect
modifier|&
name|window
parameter_list|)
function_decl|;
specifier|inline
name|void
name|setWindow
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
function_decl|;
name|QRect
name|viewport
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setViewport
parameter_list|(
specifier|const
name|QRect
modifier|&
name|viewport
parameter_list|)
function_decl|;
specifier|inline
name|void
name|setViewport
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
function_decl|;
name|void
name|setViewTransformEnabled
parameter_list|(
name|bool
name|enable
parameter_list|)
function_decl|;
name|bool
name|viewTransformEnabled
argument_list|()
specifier|const
expr_stmt|;
comment|// drawing functions
name|void
name|strokePath
parameter_list|(
specifier|const
name|QPainterPath
modifier|&
name|path
parameter_list|,
specifier|const
name|QPen
modifier|&
name|pen
parameter_list|)
function_decl|;
name|void
name|fillPath
parameter_list|(
specifier|const
name|QPainterPath
modifier|&
name|path
parameter_list|,
specifier|const
name|QBrush
modifier|&
name|brush
parameter_list|)
function_decl|;
name|void
name|drawPath
parameter_list|(
specifier|const
name|QPainterPath
modifier|&
name|path
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPoint
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pt
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPoint
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPoint
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
function_decl|;
name|void
name|drawPoints
parameter_list|(
specifier|const
name|QPointF
modifier|*
name|points
parameter_list|,
name|int
name|pointCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPoints
parameter_list|(
specifier|const
name|QPolygonF
modifier|&
name|points
parameter_list|)
function_decl|;
name|void
name|drawPoints
parameter_list|(
specifier|const
name|QPoint
modifier|*
name|points
parameter_list|,
name|int
name|pointCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPoints
parameter_list|(
specifier|const
name|QPolygon
modifier|&
name|points
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLine
parameter_list|(
specifier|const
name|QLineF
modifier|&
name|line
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLine
parameter_list|(
specifier|const
name|QLine
modifier|&
name|line
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLine
parameter_list|(
name|int
name|x1
parameter_list|,
name|int
name|y1
parameter_list|,
name|int
name|x2
parameter_list|,
name|int
name|y2
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLine
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p1
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|p2
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLine
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p1
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|p2
parameter_list|)
function_decl|;
name|void
name|drawLines
parameter_list|(
specifier|const
name|QLineF
modifier|*
name|lines
parameter_list|,
name|int
name|lineCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLines
argument_list|(
specifier|const
name|QVector
operator|<
name|QLineF
operator|>
operator|&
name|lines
argument_list|)
decl_stmt|;
name|void
name|drawLines
parameter_list|(
specifier|const
name|QPointF
modifier|*
name|pointPairs
parameter_list|,
name|int
name|lineCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLines
argument_list|(
specifier|const
name|QVector
operator|<
name|QPointF
operator|>
operator|&
name|pointPairs
argument_list|)
decl_stmt|;
name|void
name|drawLines
parameter_list|(
specifier|const
name|QLine
modifier|*
name|lines
parameter_list|,
name|int
name|lineCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLines
argument_list|(
specifier|const
name|QVector
operator|<
name|QLine
operator|>
operator|&
name|lines
argument_list|)
decl_stmt|;
name|void
name|drawLines
parameter_list|(
specifier|const
name|QPoint
modifier|*
name|pointPairs
parameter_list|,
name|int
name|lineCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawLines
argument_list|(
specifier|const
name|QVector
operator|<
name|QPoint
operator|>
operator|&
name|pointPairs
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawRect
parameter_list|(
name|int
name|x1
parameter_list|,
name|int
name|y1
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawRect
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
function_decl|;
name|void
name|drawRects
parameter_list|(
specifier|const
name|QRectF
modifier|*
name|rects
parameter_list|,
name|int
name|rectCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawRects
argument_list|(
specifier|const
name|QVector
operator|<
name|QRectF
operator|>
operator|&
name|rectangles
argument_list|)
decl_stmt|;
name|void
name|drawRects
parameter_list|(
specifier|const
name|QRect
modifier|*
name|rects
parameter_list|,
name|int
name|rectCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawRects
argument_list|(
specifier|const
name|QVector
operator|<
name|QRect
operator|>
operator|&
name|rectangles
argument_list|)
decl_stmt|;
name|void
name|drawEllipse
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|r
parameter_list|)
function_decl|;
name|void
name|drawEllipse
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawEllipse
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawEllipse
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|center
parameter_list|,
name|qreal
name|rx
parameter_list|,
name|qreal
name|ry
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawEllipse
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|center
parameter_list|,
name|int
name|rx
parameter_list|,
name|int
name|ry
parameter_list|)
function_decl|;
name|void
name|drawPolyline
parameter_list|(
specifier|const
name|QPointF
modifier|*
name|points
parameter_list|,
name|int
name|pointCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPolyline
parameter_list|(
specifier|const
name|QPolygonF
modifier|&
name|polyline
parameter_list|)
function_decl|;
name|void
name|drawPolyline
parameter_list|(
specifier|const
name|QPoint
modifier|*
name|points
parameter_list|,
name|int
name|pointCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPolyline
parameter_list|(
specifier|const
name|QPolygon
modifier|&
name|polygon
parameter_list|)
function_decl|;
name|void
name|drawPolygon
argument_list|(
specifier|const
name|QPointF
operator|*
name|points
argument_list|,
name|int
name|pointCount
argument_list|,
name|Qt
operator|::
name|FillRule
name|fillRule
operator|=
name|Qt
operator|::
name|OddEvenFill
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawPolygon
argument_list|(
specifier|const
name|QPolygonF
operator|&
name|polygon
argument_list|,
name|Qt
operator|::
name|FillRule
name|fillRule
operator|=
name|Qt
operator|::
name|OddEvenFill
argument_list|)
decl_stmt|;
name|void
name|drawPolygon
argument_list|(
specifier|const
name|QPoint
operator|*
name|points
argument_list|,
name|int
name|pointCount
argument_list|,
name|Qt
operator|::
name|FillRule
name|fillRule
operator|=
name|Qt
operator|::
name|OddEvenFill
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawPolygon
argument_list|(
specifier|const
name|QPolygon
operator|&
name|polygon
argument_list|,
name|Qt
operator|::
name|FillRule
name|fillRule
operator|=
name|Qt
operator|::
name|OddEvenFill
argument_list|)
decl_stmt|;
name|void
name|drawConvexPolygon
parameter_list|(
specifier|const
name|QPointF
modifier|*
name|points
parameter_list|,
name|int
name|pointCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawConvexPolygon
parameter_list|(
specifier|const
name|QPolygonF
modifier|&
name|polygon
parameter_list|)
function_decl|;
name|void
name|drawConvexPolygon
parameter_list|(
specifier|const
name|QPoint
modifier|*
name|points
parameter_list|,
name|int
name|pointCount
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawConvexPolygon
parameter_list|(
specifier|const
name|QPolygon
modifier|&
name|polygon
parameter_list|)
function_decl|;
name|void
name|drawArc
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawArc
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawArc
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
name|void
name|drawPie
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPie
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPie
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
name|void
name|drawChord
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawChord
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawChord
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|,
name|int
name|a
parameter_list|,
name|int
name|alen
parameter_list|)
function_decl|;
name|void
name|drawRoundedRect
argument_list|(
specifier|const
name|QRectF
operator|&
name|rect
argument_list|,
name|qreal
name|xRadius
argument_list|,
name|qreal
name|yRadius
argument_list|,
name|Qt
operator|::
name|SizeMode
name|mode
operator|=
name|Qt
operator|::
name|AbsoluteSize
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawRoundedRect
argument_list|(
name|int
name|x
argument_list|,
name|int
name|y
argument_list|,
name|int
name|w
argument_list|,
name|int
name|h
argument_list|,
name|qreal
name|xRadius
argument_list|,
name|qreal
name|yRadius
argument_list|,
name|Qt
operator|::
name|SizeMode
name|mode
operator|=
name|Qt
operator|::
name|AbsoluteSize
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawRoundedRect
argument_list|(
specifier|const
name|QRect
operator|&
name|rect
argument_list|,
name|qreal
name|xRadius
argument_list|,
name|qreal
name|yRadius
argument_list|,
name|Qt
operator|::
name|SizeMode
name|mode
operator|=
name|Qt
operator|::
name|AbsoluteSize
argument_list|)
decl_stmt|;
name|void
name|drawRoundRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|r
parameter_list|,
name|int
name|xround
init|=
literal|25
parameter_list|,
name|int
name|yround
init|=
literal|25
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawRoundRect
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
init|=
literal|25
parameter_list|,
name|int
init|=
literal|25
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawRoundRect
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|,
name|int
name|xround
init|=
literal|25
parameter_list|,
name|int
name|yround
init|=
literal|25
parameter_list|)
function_decl|;
name|void
name|drawTiledPixmap
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|offset
init|=
name|QPointF
argument_list|()
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawTiledPixmap
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
specifier|const
name|QPixmap
modifier|&
parameter_list|,
name|int
name|sx
init|=
literal|0
parameter_list|,
name|int
name|sy
init|=
literal|0
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawTiledPixmap
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|,
specifier|const
name|QPixmap
modifier|&
parameter_list|,
specifier|const
name|QPoint
modifier|&
init|=
name|QPoint
argument_list|()
parameter_list|)
function_decl|;
ifndef|#
directive|ifndef
name|QT_NO_PICTURE
name|void
name|drawPicture
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QPicture
modifier|&
name|picture
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPicture
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
specifier|const
name|QPicture
modifier|&
name|picture
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPicture
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|,
specifier|const
name|QPicture
modifier|&
name|picture
parameter_list|)
function_decl|;
endif|#
directive|endif
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|targetRect
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|,
specifier|const
name|QRectF
modifier|&
name|sourceRect
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QRect
modifier|&
name|targetRect
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|,
specifier|const
name|QRect
modifier|&
name|sourceRect
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|,
name|int
name|sx
parameter_list|,
name|int
name|sy
parameter_list|,
name|int
name|sw
parameter_list|,
name|int
name|sh
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|,
name|int
name|sx
parameter_list|,
name|int
name|sy
parameter_list|,
name|int
name|sw
parameter_list|,
name|int
name|sh
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|,
specifier|const
name|QRectF
modifier|&
name|sr
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|,
specifier|const
name|QRect
modifier|&
name|sr
parameter_list|)
function_decl|;
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawPixmap
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pm
parameter_list|)
function_decl|;
name|void
name|drawPixmapFragments
parameter_list|(
specifier|const
name|PixmapFragment
modifier|*
name|fragments
parameter_list|,
name|int
name|fragmentCount
parameter_list|,
specifier|const
name|QPixmap
modifier|&
name|pixmap
parameter_list|,
name|PixmapFragmentHints
name|hints
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|drawImage
argument_list|(
specifier|const
name|QRectF
operator|&
name|targetRect
argument_list|,
specifier|const
name|QImage
operator|&
name|image
argument_list|,
specifier|const
name|QRectF
operator|&
name|sourceRect
argument_list|,
name|Qt
operator|::
name|ImageConversionFlags
name|flags
operator|=
name|Qt
operator|::
name|AutoColor
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawImage
argument_list|(
specifier|const
name|QRect
operator|&
name|targetRect
argument_list|,
specifier|const
name|QImage
operator|&
name|image
argument_list|,
specifier|const
name|QRect
operator|&
name|sourceRect
argument_list|,
name|Qt
operator|::
name|ImageConversionFlags
name|flags
operator|=
name|Qt
operator|::
name|AutoColor
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawImage
argument_list|(
specifier|const
name|QPointF
operator|&
name|p
argument_list|,
specifier|const
name|QImage
operator|&
name|image
argument_list|,
specifier|const
name|QRectF
operator|&
name|sr
argument_list|,
name|Qt
operator|::
name|ImageConversionFlags
name|flags
operator|=
name|Qt
operator|::
name|AutoColor
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawImage
argument_list|(
specifier|const
name|QPoint
operator|&
name|p
argument_list|,
specifier|const
name|QImage
operator|&
name|image
argument_list|,
specifier|const
name|QRect
operator|&
name|sr
argument_list|,
name|Qt
operator|::
name|ImageConversionFlags
name|flags
operator|=
name|Qt
operator|::
name|AutoColor
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|drawImage
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|r
parameter_list|,
specifier|const
name|QImage
modifier|&
name|image
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawImage
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|,
specifier|const
name|QImage
modifier|&
name|image
parameter_list|)
function_decl|;
name|void
name|drawImage
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QImage
modifier|&
name|image
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawImage
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|,
specifier|const
name|QImage
modifier|&
name|image
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawImage
argument_list|(
name|int
name|x
argument_list|,
name|int
name|y
argument_list|,
specifier|const
name|QImage
operator|&
name|image
argument_list|,
name|int
name|sx
operator|=
literal|0
argument_list|,
name|int
name|sy
operator|=
literal|0
argument_list|,
name|int
name|sw
operator|=
operator|-
literal|1
argument_list|,
name|int
name|sh
operator|=
operator|-
literal|1
argument_list|,
name|Qt
operator|::
name|ImageConversionFlags
name|flags
operator|=
name|Qt
operator|::
name|AutoColor
argument_list|)
decl_stmt|;
name|void
name|setLayoutDirection
argument_list|(
name|Qt
operator|::
name|LayoutDirection
name|direction
argument_list|)
decl_stmt|;
name|Qt
operator|::
name|LayoutDirection
name|layoutDirection
argument_list|()
specifier|const
expr_stmt|;
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_RAWFONT
argument_list|)
name|void
name|drawGlyphRun
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|position
parameter_list|,
specifier|const
name|QGlyphRun
modifier|&
name|glyphRun
parameter_list|)
function_decl|;
endif|#
directive|endif
name|void
name|drawStaticText
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|topLeftPosition
parameter_list|,
specifier|const
name|QStaticText
modifier|&
name|staticText
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawStaticText
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|topLeftPosition
parameter_list|,
specifier|const
name|QStaticText
modifier|&
name|staticText
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawStaticText
parameter_list|(
name|int
name|left
parameter_list|,
name|int
name|top
parameter_list|,
specifier|const
name|QStaticText
modifier|&
name|staticText
parameter_list|)
function_decl|;
name|void
name|drawText
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawText
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|,
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawText
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
specifier|const
name|QString
modifier|&
name|s
parameter_list|)
function_decl|;
name|void
name|drawText
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QString
modifier|&
name|str
parameter_list|,
name|int
name|tf
parameter_list|,
name|int
name|justificationPadding
parameter_list|)
function_decl|;
name|void
name|drawText
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|r
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|QRectF
modifier|*
name|br
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|drawText
parameter_list|(
specifier|const
name|QRect
modifier|&
name|r
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|QRect
modifier|*
name|br
init|=
literal|0
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawText
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
name|QRect
modifier|*
name|br
init|=
literal|0
parameter_list|)
function_decl|;
name|void
name|drawText
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|r
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
specifier|const
name|QTextOption
modifier|&
name|o
init|=
name|QTextOption
argument_list|()
parameter_list|)
function_decl|;
name|QRectF
name|boundingRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
function_decl|;
name|QRect
name|boundingRect
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
function_decl|;
specifier|inline
name|QRect
name|boundingRect
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
name|int
name|flags
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|)
function_decl|;
name|QRectF
name|boundingRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|rect
parameter_list|,
specifier|const
name|QString
modifier|&
name|text
parameter_list|,
specifier|const
name|QTextOption
modifier|&
name|o
init|=
name|QTextOption
argument_list|()
parameter_list|)
function_decl|;
name|void
name|drawTextItem
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|p
parameter_list|,
specifier|const
name|QTextItem
modifier|&
name|ti
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawTextItem
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
specifier|const
name|QTextItem
modifier|&
name|ti
parameter_list|)
function_decl|;
specifier|inline
name|void
name|drawTextItem
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|p
parameter_list|,
specifier|const
name|QTextItem
modifier|&
name|ti
parameter_list|)
function_decl|;
name|void
name|fillRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
parameter_list|,
specifier|const
name|QBrush
modifier|&
parameter_list|)
function_decl|;
specifier|inline
name|void
name|fillRect
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
specifier|const
name|QBrush
modifier|&
parameter_list|)
function_decl|;
name|void
name|fillRect
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|,
specifier|const
name|QBrush
modifier|&
parameter_list|)
function_decl|;
name|void
name|fillRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
parameter_list|,
specifier|const
name|QColor
modifier|&
name|color
parameter_list|)
function_decl|;
specifier|inline
name|void
name|fillRect
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|,
specifier|const
name|QColor
modifier|&
name|color
parameter_list|)
function_decl|;
name|void
name|fillRect
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|,
specifier|const
name|QColor
modifier|&
name|color
parameter_list|)
function_decl|;
specifier|inline
name|void
name|fillRect
argument_list|(
name|int
name|x
argument_list|,
name|int
name|y
argument_list|,
name|int
name|w
argument_list|,
name|int
name|h
argument_list|,
name|Qt
operator|::
name|GlobalColor
name|c
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|fillRect
argument_list|(
specifier|const
name|QRect
operator|&
name|r
argument_list|,
name|Qt
operator|::
name|GlobalColor
name|c
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|fillRect
argument_list|(
specifier|const
name|QRectF
operator|&
name|r
argument_list|,
name|Qt
operator|::
name|GlobalColor
name|c
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|fillRect
argument_list|(
name|int
name|x
argument_list|,
name|int
name|y
argument_list|,
name|int
name|w
argument_list|,
name|int
name|h
argument_list|,
name|Qt
operator|::
name|BrushStyle
name|style
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|fillRect
argument_list|(
specifier|const
name|QRect
operator|&
name|r
argument_list|,
name|Qt
operator|::
name|BrushStyle
name|style
argument_list|)
decl_stmt|;
specifier|inline
name|void
name|fillRect
argument_list|(
specifier|const
name|QRectF
operator|&
name|r
argument_list|,
name|Qt
operator|::
name|BrushStyle
name|style
argument_list|)
decl_stmt|;
name|void
name|eraseRect
parameter_list|(
specifier|const
name|QRectF
modifier|&
parameter_list|)
function_decl|;
specifier|inline
name|void
name|eraseRect
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
function_decl|;
specifier|inline
name|void
name|eraseRect
parameter_list|(
specifier|const
name|QRect
modifier|&
parameter_list|)
function_decl|;
name|void
name|setRenderHint
parameter_list|(
name|RenderHint
name|hint
parameter_list|,
name|bool
name|on
init|=
name|true
parameter_list|)
function_decl|;
name|void
name|setRenderHints
parameter_list|(
name|RenderHints
name|hints
parameter_list|,
name|bool
name|on
init|=
name|true
parameter_list|)
function_decl|;
name|RenderHints
name|renderHints
argument_list|()
specifier|const
expr_stmt|;
specifier|inline
name|bool
name|testRenderHint
argument_list|(
name|RenderHint
name|hint
argument_list|)
decl|const
block|{
return|return
name|renderHints
argument_list|()
operator|&
name|hint
return|;
block|}
name|QPaintEngine
operator|*
name|paintEngine
argument_list|()
specifier|const
expr_stmt|;
specifier|static
name|void
name|setRedirected
parameter_list|(
specifier|const
name|QPaintDevice
modifier|*
name|device
parameter_list|,
name|QPaintDevice
modifier|*
name|replacement
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|offset
init|=
name|QPoint
argument_list|()
parameter_list|)
function_decl|;
specifier|static
name|QPaintDevice
modifier|*
name|redirected
parameter_list|(
specifier|const
name|QPaintDevice
modifier|*
name|device
parameter_list|,
name|QPoint
modifier|*
name|offset
init|=
literal|0
parameter_list|)
function_decl|;
specifier|static
name|void
name|restoreRedirected
parameter_list|(
specifier|const
name|QPaintDevice
modifier|*
name|device
parameter_list|)
function_decl|;
name|void
name|beginNativePainting
parameter_list|()
function_decl|;
name|void
name|endNativePainting
parameter_list|()
function_decl|;
name|private
label|:
name|Q_DISABLE_COPY
argument_list|(
argument|QPainter
argument_list|)
name|friend
name|class
name|Q3Painter
decl_stmt|;
name|QScopedPointer
operator|<
name|QPainterPrivate
operator|>
name|d_ptr
expr_stmt|;
name|friend
name|class
name|QWidget
decl_stmt|;
name|friend
name|class
name|QFontEngine
decl_stmt|;
name|friend
name|class
name|QFontEngineBox
decl_stmt|;
name|friend
name|class
name|QFontEngineFT
decl_stmt|;
name|friend
name|class
name|QFontEngineMac
decl_stmt|;
name|friend
name|class
name|QFontEngineWin
decl_stmt|;
name|friend
name|class
name|QFontEngineXLFD
decl_stmt|;
name|friend
name|class
name|QWSManager
decl_stmt|;
name|friend
name|class
name|QPaintEngine
decl_stmt|;
name|friend
name|class
name|QPaintEngineExPrivate
decl_stmt|;
name|friend
name|class
name|QOpenGLPaintEngine
decl_stmt|;
name|friend
name|class
name|QVGPaintEngine
decl_stmt|;
name|friend
name|class
name|QX11PaintEngine
decl_stmt|;
name|friend
name|class
name|QX11PaintEnginePrivate
decl_stmt|;
name|friend
name|class
name|QWin32PaintEngine
decl_stmt|;
name|friend
name|class
name|QWin32PaintEnginePrivate
decl_stmt|;
name|friend
name|class
name|QRasterPaintEngine
decl_stmt|;
name|friend
name|class
name|QAlphaPaintEngine
decl_stmt|;
name|friend
name|class
name|QPreviewPaintEngine
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QPainter::RenderHints
argument_list|)
end_macro
begin_comment
comment|//
end_comment
begin_comment
comment|// functions
end_comment
begin_comment
comment|//
end_comment
begin_expr_stmt
DECL|function|drawLine
specifier|inline
name|void
name|QPainter
operator|::
name|drawLine
argument_list|(
argument|const QLineF&l
argument_list|)
block|{
name|drawLines
argument_list|(
operator|&
name|l
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawLine
specifier|inline
name|void
name|QPainter
operator|::
name|drawLine
argument_list|(
argument|const QLine&line
argument_list|)
block|{
name|drawLines
argument_list|(
operator|&
name|line
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawLine
specifier|inline
name|void
name|QPainter
operator|::
name|drawLine
argument_list|(
argument|int x1
argument_list|,
argument|int y1
argument_list|,
argument|int x2
argument_list|,
argument|int y2
argument_list|)
block|{
name|QLine
name|l
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|;
name|drawLines
argument_list|(
operator|&
name|l
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawLine
specifier|inline
name|void
name|QPainter
operator|::
name|drawLine
argument_list|(
argument|const QPoint&p1
argument_list|,
argument|const QPoint&p2
argument_list|)
block|{
name|QLine
name|l
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
block|;
name|drawLines
argument_list|(
operator|&
name|l
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawLine
specifier|inline
name|void
name|QPainter
operator|::
name|drawLine
argument_list|(
argument|const QPointF&p1
argument_list|,
argument|const QPointF&p2
argument_list|)
block|{
name|drawLine
argument_list|(
name|QLineF
argument_list|(
name|p1
argument_list|,
name|p2
argument_list|)
argument_list|)
block|; }
specifier|inline
name|void
name|QPainter
operator|::
name|drawLines
argument_list|(
argument|const QVector<QLineF>&lines
argument_list|)
block|{
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
block|; }
specifier|inline
name|void
name|QPainter
operator|::
name|drawLines
argument_list|(
argument|const QVector<QLine>&lines
argument_list|)
block|{
name|drawLines
argument_list|(
name|lines
operator|.
name|constData
argument_list|()
argument_list|,
name|lines
operator|.
name|size
argument_list|()
argument_list|)
block|; }
specifier|inline
name|void
name|QPainter
operator|::
name|drawLines
argument_list|(
argument|const QVector<QPointF>&pointPairs
argument_list|)
block|{
name|drawLines
argument_list|(
name|pointPairs
operator|.
name|constData
argument_list|()
argument_list|,
name|pointPairs
operator|.
name|size
argument_list|()
operator|/
literal|2
argument_list|)
block|; }
specifier|inline
name|void
name|QPainter
operator|::
name|drawLines
argument_list|(
argument|const QVector<QPoint>&pointPairs
argument_list|)
block|{
name|drawLines
argument_list|(
name|pointPairs
operator|.
name|constData
argument_list|()
argument_list|,
name|pointPairs
operator|.
name|size
argument_list|()
operator|/
literal|2
argument_list|)
block|; }
DECL|function|drawPolyline
specifier|inline
name|void
name|QPainter
operator|::
name|drawPolyline
argument_list|(
argument|const QPolygonF&polyline
argument_list|)
block|{
name|drawPolyline
argument_list|(
name|polyline
operator|.
name|constData
argument_list|()
argument_list|,
name|polyline
operator|.
name|size
argument_list|()
argument_list|)
block|; }
DECL|function|drawPolyline
specifier|inline
name|void
name|QPainter
operator|::
name|drawPolyline
argument_list|(
argument|const QPolygon&polyline
argument_list|)
block|{
name|drawPolyline
argument_list|(
name|polyline
operator|.
name|constData
argument_list|()
argument_list|,
name|polyline
operator|.
name|size
argument_list|()
argument_list|)
block|; }
DECL|function|drawPolygon
specifier|inline
name|void
name|QPainter
operator|::
name|drawPolygon
argument_list|(
argument|const QPolygonF&polygon
argument_list|,
argument|Qt::FillRule fillRule
argument_list|)
block|{
name|drawPolygon
argument_list|(
name|polygon
operator|.
name|constData
argument_list|()
argument_list|,
name|polygon
operator|.
name|size
argument_list|()
argument_list|,
name|fillRule
argument_list|)
block|; }
DECL|function|drawPolygon
specifier|inline
name|void
name|QPainter
operator|::
name|drawPolygon
argument_list|(
argument|const QPolygon&polygon
argument_list|,
argument|Qt::FillRule fillRule
argument_list|)
block|{
name|drawPolygon
argument_list|(
name|polygon
operator|.
name|constData
argument_list|()
argument_list|,
name|polygon
operator|.
name|size
argument_list|()
argument_list|,
name|fillRule
argument_list|)
block|; }
DECL|function|drawConvexPolygon
specifier|inline
name|void
name|QPainter
operator|::
name|drawConvexPolygon
argument_list|(
argument|const QPolygonF&poly
argument_list|)
block|{
name|drawConvexPolygon
argument_list|(
name|poly
operator|.
name|constData
argument_list|()
argument_list|,
name|poly
operator|.
name|size
argument_list|()
argument_list|)
block|; }
DECL|function|drawConvexPolygon
specifier|inline
name|void
name|QPainter
operator|::
name|drawConvexPolygon
argument_list|(
argument|const QPolygon&poly
argument_list|)
block|{
name|drawConvexPolygon
argument_list|(
name|poly
operator|.
name|constData
argument_list|()
argument_list|,
name|poly
operator|.
name|size
argument_list|()
argument_list|)
block|; }
DECL|function|drawRect
specifier|inline
name|void
name|QPainter
operator|::
name|drawRect
argument_list|(
argument|const QRectF&rect
argument_list|)
block|{
name|drawRects
argument_list|(
operator|&
name|rect
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawRect
specifier|inline
name|void
name|QPainter
operator|::
name|drawRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|)
block|{
name|QRect
name|r
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
block|;
name|drawRects
argument_list|(
operator|&
name|r
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawRect
specifier|inline
name|void
name|QPainter
operator|::
name|drawRect
argument_list|(
argument|const QRect&r
argument_list|)
block|{
name|drawRects
argument_list|(
operator|&
name|r
argument_list|,
literal|1
argument_list|)
block|; }
specifier|inline
name|void
name|QPainter
operator|::
name|drawRects
argument_list|(
argument|const QVector<QRectF>&rects
argument_list|)
block|{
name|drawRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
block|; }
specifier|inline
name|void
name|QPainter
operator|::
name|drawRects
argument_list|(
argument|const QVector<QRect>&rects
argument_list|)
block|{
name|drawRects
argument_list|(
name|rects
operator|.
name|constData
argument_list|()
argument_list|,
name|rects
operator|.
name|size
argument_list|()
argument_list|)
block|; }
DECL|function|drawPoint
specifier|inline
name|void
name|QPainter
operator|::
name|drawPoint
argument_list|(
argument|const QPointF&p
argument_list|)
block|{
name|drawPoints
argument_list|(
operator|&
name|p
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawPoint
specifier|inline
name|void
name|QPainter
operator|::
name|drawPoint
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|)
block|{
name|QPoint
name|p
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|;
name|drawPoints
argument_list|(
operator|&
name|p
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawPoint
specifier|inline
name|void
name|QPainter
operator|::
name|drawPoint
argument_list|(
argument|const QPoint&p
argument_list|)
block|{
name|drawPoints
argument_list|(
operator|&
name|p
argument_list|,
literal|1
argument_list|)
block|; }
DECL|function|drawPoints
specifier|inline
name|void
name|QPainter
operator|::
name|drawPoints
argument_list|(
argument|const QPolygonF&points
argument_list|)
block|{
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
block|; }
DECL|function|drawPoints
specifier|inline
name|void
name|QPainter
operator|::
name|drawPoints
argument_list|(
argument|const QPolygon&points
argument_list|)
block|{
name|drawPoints
argument_list|(
name|points
operator|.
name|constData
argument_list|()
argument_list|,
name|points
operator|.
name|size
argument_list|()
argument_list|)
block|; }
DECL|function|drawRoundRect
specifier|inline
name|void
name|QPainter
operator|::
name|drawRoundRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|int xRnd
argument_list|,
argument|int yRnd
argument_list|)
block|{
name|drawRoundRect
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|xRnd
argument_list|,
name|yRnd
argument_list|)
block|; }
DECL|function|drawRoundRect
specifier|inline
name|void
name|QPainter
operator|::
name|drawRoundRect
argument_list|(
argument|const QRect&rect
argument_list|,
argument|int xRnd
argument_list|,
argument|int yRnd
argument_list|)
block|{
name|drawRoundRect
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
argument_list|,
name|xRnd
argument_list|,
name|yRnd
argument_list|)
block|; }
DECL|function|drawRoundedRect
specifier|inline
name|void
name|QPainter
operator|::
name|drawRoundedRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|qreal xRadius
argument_list|,
argument|qreal yRadius
argument_list|,
argument|Qt::SizeMode mode
argument_list|)
block|{
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|xRadius
argument_list|,
name|yRadius
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|drawRoundedRect
specifier|inline
name|void
name|QPainter
operator|::
name|drawRoundedRect
argument_list|(
argument|const QRect&rect
argument_list|,
argument|qreal xRadius
argument_list|,
argument|qreal yRadius
argument_list|,
argument|Qt::SizeMode mode
argument_list|)
block|{
name|drawRoundedRect
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
argument_list|,
name|xRadius
argument_list|,
name|yRadius
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|drawEllipse
specifier|inline
name|void
name|QPainter
operator|::
name|drawEllipse
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|)
block|{
name|drawEllipse
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|)
block|; }
DECL|function|drawEllipse
specifier|inline
name|void
name|QPainter
operator|::
name|drawEllipse
argument_list|(
argument|const QPointF&center
argument_list|,
argument|qreal rx
argument_list|,
argument|qreal ry
argument_list|)
block|{
name|drawEllipse
argument_list|(
name|QRectF
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|-
name|rx
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|-
name|ry
argument_list|,
literal|2
operator|*
name|rx
argument_list|,
literal|2
operator|*
name|ry
argument_list|)
argument_list|)
block|; }
DECL|function|drawEllipse
specifier|inline
name|void
name|QPainter
operator|::
name|drawEllipse
argument_list|(
argument|const QPoint&center
argument_list|,
argument|int rx
argument_list|,
argument|int ry
argument_list|)
block|{
name|drawEllipse
argument_list|(
name|QRect
argument_list|(
name|center
operator|.
name|x
argument_list|()
operator|-
name|rx
argument_list|,
name|center
operator|.
name|y
argument_list|()
operator|-
name|ry
argument_list|,
literal|2
operator|*
name|rx
argument_list|,
literal|2
operator|*
name|ry
argument_list|)
argument_list|)
block|; }
DECL|function|drawArc
specifier|inline
name|void
name|QPainter
operator|::
name|drawArc
argument_list|(
argument|const QRect&r
argument_list|,
argument|int a
argument_list|,
argument|int alen
argument_list|)
block|{
name|drawArc
argument_list|(
name|QRectF
argument_list|(
name|r
argument_list|)
argument_list|,
name|a
argument_list|,
name|alen
argument_list|)
block|; }
DECL|function|drawArc
specifier|inline
name|void
name|QPainter
operator|::
name|drawArc
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|int a
argument_list|,
argument|int alen
argument_list|)
block|{
name|drawArc
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|a
argument_list|,
name|alen
argument_list|)
block|; }
DECL|function|drawPie
specifier|inline
name|void
name|QPainter
operator|::
name|drawPie
argument_list|(
argument|const QRect&rect
argument_list|,
argument|int a
argument_list|,
argument|int alen
argument_list|)
block|{
name|drawPie
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
argument_list|,
name|a
argument_list|,
name|alen
argument_list|)
block|; }
DECL|function|drawPie
specifier|inline
name|void
name|QPainter
operator|::
name|drawPie
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|int a
argument_list|,
argument|int alen
argument_list|)
block|{
name|drawPie
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|a
argument_list|,
name|alen
argument_list|)
block|; }
DECL|function|drawChord
specifier|inline
name|void
name|QPainter
operator|::
name|drawChord
argument_list|(
argument|const QRect&rect
argument_list|,
argument|int a
argument_list|,
argument|int alen
argument_list|)
block|{
name|drawChord
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
argument_list|,
name|a
argument_list|,
name|alen
argument_list|)
block|; }
DECL|function|drawChord
specifier|inline
name|void
name|QPainter
operator|::
name|drawChord
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|int a
argument_list|,
argument|int alen
argument_list|)
block|{
name|drawChord
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|a
argument_list|,
name|alen
argument_list|)
block|; }
DECL|function|setClipRect
specifier|inline
name|void
name|QPainter
operator|::
name|setClipRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|Qt::ClipOperation op
argument_list|)
block|{
name|setClipRect
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|op
argument_list|)
block|; }
DECL|function|eraseRect
specifier|inline
name|void
name|QPainter
operator|::
name|eraseRect
argument_list|(
argument|const QRect&rect
argument_list|)
block|{
name|eraseRect
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
argument_list|)
block|; }
DECL|function|eraseRect
specifier|inline
name|void
name|QPainter
operator|::
name|eraseRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|)
block|{
name|eraseRect
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|const QBrush&b
argument_list|)
block|{
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|b
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|const QColor&b
argument_list|)
block|{
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|b
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|Qt::GlobalColor c
argument_list|)
block|{
name|fillRect
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|QColor
argument_list|(
name|c
argument_list|)
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|const QRect&r
argument_list|,
argument|Qt::GlobalColor c
argument_list|)
block|{
name|fillRect
argument_list|(
name|r
argument_list|,
name|QColor
argument_list|(
name|c
argument_list|)
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|const QRectF&r
argument_list|,
argument|Qt::GlobalColor c
argument_list|)
block|{
name|fillRect
argument_list|(
name|r
argument_list|,
name|QColor
argument_list|(
name|c
argument_list|)
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|Qt::BrushStyle style
argument_list|)
block|{
name|fillRect
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|style
argument_list|)
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|const QRect&r
argument_list|,
argument|Qt::BrushStyle style
argument_list|)
block|{
name|fillRect
argument_list|(
name|QRectF
argument_list|(
name|r
argument_list|)
argument_list|,
name|QBrush
argument_list|(
name|style
argument_list|)
argument_list|)
block|; }
DECL|function|fillRect
specifier|inline
name|void
name|QPainter
operator|::
name|fillRect
argument_list|(
argument|const QRectF&r
argument_list|,
argument|Qt::BrushStyle style
argument_list|)
block|{
name|fillRect
argument_list|(
name|r
argument_list|,
name|QBrush
argument_list|(
name|style
argument_list|)
argument_list|)
block|; }
DECL|function|setBrushOrigin
specifier|inline
name|void
name|QPainter
operator|::
name|setBrushOrigin
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|)
block|{
name|setBrushOrigin
argument_list|(
name|QPoint
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
block|; }
DECL|function|setBrushOrigin
specifier|inline
name|void
name|QPainter
operator|::
name|setBrushOrigin
argument_list|(
argument|const QPoint&p
argument_list|)
block|{
name|setBrushOrigin
argument_list|(
name|QPointF
argument_list|(
name|p
argument_list|)
argument_list|)
block|; }
DECL|function|drawTiledPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawTiledPixmap
argument_list|(
argument|const QRect&rect
argument_list|,
argument|const QPixmap&pm
argument_list|,
argument|const QPoint&offset
argument_list|)
block|{
name|drawTiledPixmap
argument_list|(
name|QRectF
argument_list|(
name|rect
argument_list|)
argument_list|,
name|pm
argument_list|,
name|QPointF
argument_list|(
name|offset
argument_list|)
argument_list|)
block|; }
DECL|function|drawTiledPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawTiledPixmap
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|const QPixmap&pm
argument_list|,
argument|int sx
argument_list|,
argument|int sy
argument_list|)
block|{
name|drawTiledPixmap
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|pm
argument_list|,
name|QPointF
argument_list|(
name|sx
argument_list|,
name|sy
argument_list|)
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|const QRect&targetRect
argument_list|,
argument|const QPixmap&pixmap
argument_list|,
argument|const QRect&sourceRect
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|targetRect
argument_list|)
argument_list|,
name|pixmap
argument_list|,
name|QRectF
argument_list|(
name|sourceRect
argument_list|)
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|const QPoint&p
argument_list|,
argument|const QPixmap&pm
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QPointF
argument_list|(
name|p
argument_list|)
argument_list|,
name|pm
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|const QRect&r
argument_list|,
argument|const QPixmap&pm
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|r
argument_list|)
argument_list|,
name|pm
argument_list|,
name|QRectF
argument_list|()
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|const QPixmap&pm
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QPointF
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|,
name|pm
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|const QPixmap&pm
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|pm
argument_list|,
name|QRectF
argument_list|()
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|const QPixmap&pm
argument_list|,
argument|int sx
argument_list|,
argument|int sy
argument_list|,
argument|int sw
argument_list|,
argument|int sh
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|pm
argument_list|,
name|QRectF
argument_list|(
name|sx
argument_list|,
name|sy
argument_list|,
name|sw
argument_list|,
name|sh
argument_list|)
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|const QPixmap&pm
argument_list|,
argument|int sx
argument_list|,
argument|int sy
argument_list|,
argument|int sw
argument_list|,
argument|int sh
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|pm
argument_list|,
name|QRectF
argument_list|(
name|sx
argument_list|,
name|sy
argument_list|,
name|sw
argument_list|,
name|sh
argument_list|)
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|const QPointF&p
argument_list|,
argument|const QPixmap&pm
argument_list|,
argument|const QRectF&sr
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|p
operator|.
name|x
argument_list|()
argument_list|,
name|p
operator|.
name|y
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|pm
argument_list|,
name|sr
argument_list|)
block|; }
DECL|function|drawPixmap
specifier|inline
name|void
name|QPainter
operator|::
name|drawPixmap
argument_list|(
argument|const QPoint&p
argument_list|,
argument|const QPixmap&pm
argument_list|,
argument|const QRect&sr
argument_list|)
block|{
name|drawPixmap
argument_list|(
name|QRectF
argument_list|(
name|p
operator|.
name|x
argument_list|()
argument_list|,
name|p
operator|.
name|y
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|pm
argument_list|,
name|sr
argument_list|)
block|; }
DECL|function|drawTextItem
specifier|inline
name|void
name|QPainter
operator|::
name|drawTextItem
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|const QTextItem&ti
argument_list|)
block|{
name|drawTextItem
argument_list|(
name|QPointF
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|,
name|ti
argument_list|)
block|; }
DECL|function|drawImage
specifier|inline
name|void
name|QPainter
operator|::
name|drawImage
argument_list|(
argument|const QRect&targetRect
argument_list|,
argument|const QImage&image
argument_list|,
argument|const QRect&sourceRect
argument_list|,
argument|Qt::ImageConversionFlags flags
argument_list|)
block|{
name|drawImage
argument_list|(
name|QRectF
argument_list|(
name|targetRect
argument_list|)
argument_list|,
name|image
argument_list|,
name|QRectF
argument_list|(
name|sourceRect
argument_list|)
argument_list|,
name|flags
argument_list|)
block|; }
DECL|function|drawImage
specifier|inline
name|void
name|QPainter
operator|::
name|drawImage
argument_list|(
argument|const QPointF&p
argument_list|,
argument|const QImage&image
argument_list|,
argument|const QRectF&sr
argument_list|,
argument|Qt::ImageConversionFlags flags
argument_list|)
block|{
name|drawImage
argument_list|(
name|QRectF
argument_list|(
name|p
operator|.
name|x
argument_list|()
argument_list|,
name|p
operator|.
name|y
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|image
argument_list|,
name|sr
argument_list|,
name|flags
argument_list|)
block|; }
DECL|function|drawImage
specifier|inline
name|void
name|QPainter
operator|::
name|drawImage
argument_list|(
argument|const QPoint&p
argument_list|,
argument|const QImage&image
argument_list|,
argument|const QRect&sr
argument_list|,
argument|Qt::ImageConversionFlags flags
argument_list|)
block|{
name|drawImage
argument_list|(
name|QRect
argument_list|(
name|p
operator|.
name|x
argument_list|()
argument_list|,
name|p
operator|.
name|y
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|image
argument_list|,
name|sr
argument_list|,
name|flags
argument_list|)
block|; }
DECL|function|drawImage
specifier|inline
name|void
name|QPainter
operator|::
name|drawImage
argument_list|(
argument|const QRectF&r
argument_list|,
argument|const QImage&image
argument_list|)
block|{
name|drawImage
argument_list|(
name|r
argument_list|,
name|image
argument_list|,
name|QRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
block|; }
DECL|function|drawImage
specifier|inline
name|void
name|QPainter
operator|::
name|drawImage
argument_list|(
argument|const QRect&r
argument_list|,
argument|const QImage&image
argument_list|)
block|{
name|drawImage
argument_list|(
name|r
argument_list|,
name|image
argument_list|,
name|QRectF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|image
operator|.
name|width
argument_list|()
argument_list|,
name|image
operator|.
name|height
argument_list|()
argument_list|)
argument_list|)
block|; }
DECL|function|drawImage
specifier|inline
name|void
name|QPainter
operator|::
name|drawImage
argument_list|(
argument|const QPoint&p
argument_list|,
argument|const QImage&image
argument_list|)
block|{
name|drawImage
argument_list|(
name|QPointF
argument_list|(
name|p
argument_list|)
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|drawImage
specifier|inline
name|void
name|QPainter
operator|::
name|drawImage
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|const QImage&image
argument_list|,
argument|int sx
argument_list|,
argument|int sy
argument_list|,
argument|int sw
argument_list|,
argument|int sh
argument_list|,
argument|Qt::ImageConversionFlags flags
argument_list|)
block|{
if|if
condition|(
name|sx
operator|==
literal|0
operator|&&
name|sy
operator|==
literal|0
operator|&&
name|sw
operator|==
operator|-
literal|1
operator|&&
name|sh
operator|==
operator|-
literal|1
operator|&&
name|flags
operator|==
name|Qt
operator|::
name|AutoColor
condition|)
name|drawImage
argument_list|(
name|QPointF
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|,
name|image
argument_list|)
expr_stmt|;
else|else
name|drawImage
argument_list|(
name|QRectF
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|image
argument_list|,
name|QRectF
argument_list|(
name|sx
argument_list|,
name|sy
argument_list|,
name|sw
argument_list|,
name|sh
argument_list|)
argument_list|,
name|flags
argument_list|)
expr_stmt|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|drawStaticText
specifier|inline
name|void
name|QPainter
operator|::
name|drawStaticText
argument_list|(
argument|const QPoint&p
argument_list|,
argument|const QStaticText&staticText
argument_list|)
block|{
name|drawStaticText
argument_list|(
name|QPointF
argument_list|(
name|p
argument_list|)
argument_list|,
name|staticText
argument_list|)
block|; }
DECL|function|drawStaticText
specifier|inline
name|void
name|QPainter
operator|::
name|drawStaticText
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|const QStaticText&staticText
argument_list|)
block|{
name|drawStaticText
argument_list|(
name|QPointF
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|,
name|staticText
argument_list|)
block|; }
DECL|function|drawTextItem
specifier|inline
name|void
name|QPainter
operator|::
name|drawTextItem
argument_list|(
argument|const QPoint&p
argument_list|,
argument|const QTextItem&ti
argument_list|)
block|{
name|drawTextItem
argument_list|(
name|QPointF
argument_list|(
name|p
argument_list|)
argument_list|,
name|ti
argument_list|)
block|; }
DECL|function|drawText
specifier|inline
name|void
name|QPainter
operator|::
name|drawText
argument_list|(
argument|const QPoint&p
argument_list|,
argument|const QString&s
argument_list|)
block|{
name|drawText
argument_list|(
name|QPointF
argument_list|(
name|p
argument_list|)
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|drawText
specifier|inline
name|void
name|QPainter
operator|::
name|drawText
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|int flags
argument_list|,
argument|const QString&str
argument_list|,
argument|QRect *br
argument_list|)
block|{
name|drawText
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|flags
argument_list|,
name|str
argument_list|,
name|br
argument_list|)
block|; }
DECL|function|drawText
specifier|inline
name|void
name|QPainter
operator|::
name|drawText
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|const QString&s
argument_list|)
block|{
name|drawText
argument_list|(
name|QPointF
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|boundingRect
specifier|inline
name|QRect
name|QPainter
operator|::
name|boundingRect
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|,
argument|int flags
argument_list|,
argument|const QString&text
argument_list|)
block|{
return|return
name|boundingRect
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|,
name|flags
argument_list|,
name|text
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|translate
specifier|inline
name|void
name|QPainter
operator|::
name|translate
argument_list|(
argument|qreal dx
argument_list|,
argument|qreal dy
argument_list|)
block|{
name|translate
argument_list|(
name|QPointF
argument_list|(
name|dx
argument_list|,
name|dy
argument_list|)
argument_list|)
block|; }
DECL|function|translate
specifier|inline
name|void
name|QPainter
operator|::
name|translate
argument_list|(
argument|const QPoint&offset
argument_list|)
block|{
name|translate
argument_list|(
name|offset
operator|.
name|x
argument_list|()
argument_list|,
name|offset
operator|.
name|y
argument_list|()
argument_list|)
block|; }
DECL|function|setViewport
specifier|inline
name|void
name|QPainter
operator|::
name|setViewport
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|)
block|{
name|setViewport
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|)
block|; }
DECL|function|setWindow
specifier|inline
name|void
name|QPainter
operator|::
name|setWindow
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|int w
argument_list|,
argument|int h
argument_list|)
block|{
name|setWindow
argument_list|(
name|QRect
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
argument_list|)
block|; }
ifndef|#
directive|ifndef
name|QT_NO_PICTURE
DECL|function|drawPicture
specifier|inline
name|void
name|QPainter
operator|::
name|drawPicture
argument_list|(
argument|int x
argument_list|,
argument|int y
argument_list|,
argument|const QPicture&p
argument_list|)
block|{
name|drawPicture
argument_list|(
name|QPoint
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|,
name|p
argument_list|)
block|; }
DECL|function|drawPicture
specifier|inline
name|void
name|QPainter
operator|::
name|drawPicture
argument_list|(
argument|const QPoint&pt
argument_list|,
argument|const QPicture&p
argument_list|)
block|{
name|drawPicture
argument_list|(
name|QPointF
argument_list|(
name|pt
argument_list|)
argument_list|,
name|p
argument_list|)
block|; }
endif|#
directive|endif
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QPAINTER_H
end_comment
end_unit
