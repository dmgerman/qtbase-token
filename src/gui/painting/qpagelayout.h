begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 John Layt<jlayt@kde.org> ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QPAGELAYOUT_H
end_ifndef
begin_define
DECL|macro|QPAGELAYOUT_H
define|#
directive|define
name|QPAGELAYOUT_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qsharedpointer.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qstring.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmargins.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qpagesize.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QPageLayoutPrivate
name|class
name|QPageLayoutPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QMarginsF
name|class
name|QMarginsF
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QPageLayout
block|{
name|public
label|:
comment|// NOTE: Must keep in sync with QPageSize::Unit and QPrinter::Unit
enum|enum
name|Unit
block|{
name|Millimeter
block|,
name|Point
block|,
name|Inch
block|,
name|Pica
block|,
name|Didot
block|,
name|Cicero
block|}
enum|;
comment|// NOTE: Must keep in sync with QPrinter::Orientation
enum|enum
name|Orientation
block|{
name|Portrait
block|,
name|Landscape
block|}
enum|;
enum|enum
name|Mode
block|{
name|StandardMode
block|,
comment|// Paint Rect includes margins
name|FullPageMode
comment|// Paint Rect excludes margins
block|}
enum|;
name|QPageLayout
argument_list|()
expr_stmt|;
name|QPageLayout
argument_list|(
argument|const QPageSize&pageSize
argument_list|,
argument|Orientation orientation
argument_list|,
argument|const QMarginsF&margins
argument_list|,
argument|Unit units = Point
argument_list|,
argument|const QMarginsF&minMargins = QMarginsF(
literal|0
argument|,
literal|0
argument|,
literal|0
argument|,
literal|0
argument|)
argument_list|)
empty_stmt|;
name|QPageLayout
argument_list|(
specifier|const
name|QPageLayout
operator|&
name|other
argument_list|)
expr_stmt|;
ifdef|#
directive|ifdef
name|Q_COMPILER_RVALUE_REFS
name|QPageLayout
modifier|&
name|operator
init|=
operator|(
name|QPageLayout
operator|&&
name|other
operator|)
name|Q_DECL_NOTHROW
block|{
name|swap
argument_list|(
name|other
argument_list|)
block|;
return|return
operator|*
name|this
return|;
block|}
endif|#
directive|endif
name|QPageLayout
modifier|&
name|operator
init|=
operator|(
specifier|const
name|QPageLayout
operator|&
name|other
operator|)
decl_stmt|;
operator|~
name|QPageLayout
argument_list|()
expr_stmt|;
name|void
name|swap
parameter_list|(
name|QPageLayout
modifier|&
name|other
parameter_list|)
function|Q_DECL_NOTHROW
block|{
name|qSwap
argument_list|(
name|d
argument_list|,
name|other
operator|.
name|d
argument_list|)
expr_stmt|;
block|}
name|friend
name|Q_GUI_EXPORT
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QPageLayout
operator|&
name|lhs
operator|,
specifier|const
name|QPageLayout
operator|&
name|rhs
operator|)
expr_stmt|;
name|bool
name|isEquivalentTo
argument_list|(
specifier|const
name|QPageLayout
operator|&
name|other
argument_list|)
decl|const
decl_stmt|;
name|bool
name|isValid
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setMode
parameter_list|(
name|Mode
name|mode
parameter_list|)
function_decl|;
name|Mode
name|mode
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setPageSize
parameter_list|(
specifier|const
name|QPageSize
modifier|&
name|pageSize
parameter_list|,
specifier|const
name|QMarginsF
modifier|&
name|minMargins
init|=
name|QMarginsF
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
parameter_list|)
function_decl|;
name|QPageSize
name|pageSize
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setOrientation
parameter_list|(
name|Orientation
name|orientation
parameter_list|)
function_decl|;
name|Orientation
name|orientation
argument_list|()
specifier|const
expr_stmt|;
name|void
name|setUnits
parameter_list|(
name|Unit
name|units
parameter_list|)
function_decl|;
name|Unit
name|units
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|setMargins
parameter_list|(
specifier|const
name|QMarginsF
modifier|&
name|margins
parameter_list|)
function_decl|;
name|bool
name|setLeftMargin
parameter_list|(
name|qreal
name|leftMargin
parameter_list|)
function_decl|;
name|bool
name|setRightMargin
parameter_list|(
name|qreal
name|rightMargin
parameter_list|)
function_decl|;
name|bool
name|setTopMargin
parameter_list|(
name|qreal
name|topMargin
parameter_list|)
function_decl|;
name|bool
name|setBottomMargin
parameter_list|(
name|qreal
name|bottomMargin
parameter_list|)
function_decl|;
name|QMarginsF
name|margins
argument_list|()
specifier|const
expr_stmt|;
name|QMarginsF
name|margins
argument_list|(
name|Unit
name|units
argument_list|)
decl|const
decl_stmt|;
name|QMargins
name|marginsPoints
argument_list|()
specifier|const
expr_stmt|;
name|QMargins
name|marginsPixels
argument_list|(
name|int
name|resolution
argument_list|)
decl|const
decl_stmt|;
name|void
name|setMinimumMargins
parameter_list|(
specifier|const
name|QMarginsF
modifier|&
name|minMargins
parameter_list|)
function_decl|;
name|QMarginsF
name|minimumMargins
argument_list|()
specifier|const
expr_stmt|;
name|QMarginsF
name|maximumMargins
argument_list|()
specifier|const
expr_stmt|;
name|QRectF
name|fullRect
argument_list|()
specifier|const
expr_stmt|;
name|QRectF
name|fullRect
argument_list|(
name|Unit
name|units
argument_list|)
decl|const
decl_stmt|;
name|QRect
name|fullRectPoints
argument_list|()
specifier|const
expr_stmt|;
name|QRect
name|fullRectPixels
argument_list|(
name|int
name|resolution
argument_list|)
decl|const
decl_stmt|;
name|QRectF
name|paintRect
argument_list|()
specifier|const
expr_stmt|;
name|QRectF
name|paintRect
argument_list|(
name|Unit
name|units
argument_list|)
decl|const
decl_stmt|;
name|QRect
name|paintRectPoints
argument_list|()
specifier|const
expr_stmt|;
name|QRect
name|paintRectPixels
argument_list|(
name|int
name|resolution
argument_list|)
decl|const
decl_stmt|;
name|private
label|:
name|friend
name|class
name|QPageLayoutPrivate
decl_stmt|;
name|QExplicitlySharedDataPointer
operator|<
name|QPageLayoutPrivate
operator|>
name|d
expr_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|Q_DECLARE_SHARED
argument_list|(
argument|QPageLayout
argument_list|)
end_macro
begin_expr_stmt
name|Q_GUI_EXPORT
name|bool
name|operator
operator|==
operator|(
specifier|const
name|QPageLayout
operator|&
name|lhs
operator|,
specifier|const
name|QPageLayout
operator|&
name|rhs
operator|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
DECL|function|operator
specifier|inline
name|bool
name|operator
operator|!=
operator|(
specifier|const
name|QPageLayout
operator|&
name|lhs
operator|,
specifier|const
name|QPageLayout
operator|&
name|rhs
operator|)
block|{
return|return
operator|!
name|operator
operator|==
operator|(
name|lhs
operator|,
name|rhs
operator|)
return|;
block|}
end_expr_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_DEBUG_STREAM
end_ifndef
begin_expr_stmt
name|Q_GUI_EXPORT
name|QDebug
name|operator
operator|<<
operator|(
name|QDebug
name|dbg
operator|,
specifier|const
name|QPageLayout
operator|&
name|pageLayout
operator|)
expr_stmt|;
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
name|QT_END_NAMESPACE
name|Q_DECLARE_METATYPE
argument_list|(
name|QPageLayout
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QPageLayout
operator|::
name|Unit
argument_list|)
name|Q_DECLARE_METATYPE
argument_list|(
name|QPageLayout
operator|::
name|Orientation
argument_list|)
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QPAGELAYOUT_H
end_comment
end_unit
