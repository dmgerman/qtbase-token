begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qglobal.h>
end_include
begin_comment
comment|// for Q_WS_WIN define (non-PCH)
end_comment
begin_include
include|#
directive|include
file|<QtGui/qpaintdevice.h>
end_include
begin_include
include|#
directive|include
file|<private/qwidget_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qwindowsurface_s60_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qpixmap_s60_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qt_s60_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qapplication_p.h>
end_include
begin_include
include|#
directive|include
file|<private/qdrawhelper_p.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|QT_GRAPHICSSYSTEM_RUNTIME
end_ifdef
begin_include
include|#
directive|include
file|<private/qgraphicssystem_runtime_p.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_struct
DECL|struct|QS60WindowSurfacePrivate
struct|struct
name|QS60WindowSurfacePrivate
block|{
DECL|member|device
name|QPixmap
name|device
decl_stmt|;
DECL|member|bufferImages
name|QList
argument_list|<
name|QImage
modifier|*
argument_list|>
name|bufferImages
decl_stmt|;
block|}
struct|;
end_struct
begin_function
DECL|function|displayMode
name|TDisplayMode
name|displayMode
parameter_list|(
name|bool
name|opaque
parameter_list|)
block|{
name|TDisplayMode
name|mode
init|=
name|S60
operator|->
name|screenDevice
argument_list|()
operator|->
name|DisplayMode
argument_list|()
decl_stmt|;
if|if
condition|(
name|opaque
condition|)
block|{
name|mode
operator|=
name|EColor16MU
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|QSysInfo
operator|::
name|symbianVersion
argument_list|()
operator|>=
name|QSysInfo
operator|::
name|SV_SF_3
condition|)
name|mode
operator|=
name|Q_SYMBIAN_ECOLOR16MAP
expr_stmt|;
comment|// Symbian^3 WServ has support for ARGB32_PRE
else|else
name|mode
operator|=
name|EColor16MA
expr_stmt|;
comment|// Symbian prior to Symbian^3 sw accelerates EColor16MA
block|}
return|return
name|mode
return|;
block|}
end_function
begin_function
DECL|function|blitWriteAlpha
name|bool
name|blitWriteAlpha
parameter_list|(
name|QWidgetPrivate
modifier|*
name|widgetPrivate
parameter_list|)
block|{
name|QWExtra
modifier|*
name|extra
init|=
name|widgetPrivate
operator|->
name|extraData
argument_list|()
decl_stmt|;
return|return
name|extra
condition|?
name|extra
operator|->
name|nativePaintMode
operator|==
name|QWExtra
operator|::
name|BlitWriteAlpha
else|:
literal|false
return|;
block|}
end_function
begin_constructor
DECL|function|QS60WindowSurface
name|QS60WindowSurface
operator|::
name|QS60WindowSurface
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|)
member_init_list|:
name|QWindowSurface
argument_list|(
name|widget
argument_list|)
member_init_list|,
name|d_ptr
argument_list|(
operator|new
name|QS60WindowSurfacePrivate
argument_list|)
block|{
name|QWidgetPrivate
modifier|*
name|widgetPrivate
init|=
name|qt_widget_private
argument_list|(
name|widget
argument_list|)
decl_stmt|;
specifier|const
name|bool
name|opaque
init|=
name|widgetPrivate
operator|->
name|isOpaque
operator|&&
operator|!
name|blitWriteAlpha
argument_list|(
name|widgetPrivate
argument_list|)
decl_stmt|;
name|TDisplayMode
name|mode
init|=
name|displayMode
argument_list|(
name|opaque
argument_list|)
decl_stmt|;
comment|// We create empty CFbsBitmap here -> it will be resized in setGeometry
name|CFbsBitmap
modifier|*
name|bitmap
init|=
operator|new
name|CFbsBitmap
decl_stmt|;
comment|// CBase derived object needs check on new
name|Q_CHECK_PTR
argument_list|(
name|bitmap
argument_list|)
expr_stmt|;
name|qt_symbian_throwIfError
argument_list|(
name|bitmap
operator|->
name|Create
argument_list|(
name|TSize
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|mode
argument_list|)
argument_list|)
expr_stmt|;
name|QS60PixmapData
modifier|*
name|data
init|=
operator|new
name|QS60PixmapData
argument_list|(
name|QPixmapData
operator|::
name|PixmapType
argument_list|)
decl_stmt|;
if|if
condition|(
name|data
condition|)
block|{
name|data
operator|->
name|fromSymbianBitmap
argument_list|(
name|bitmap
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|d_ptr
operator|->
name|device
operator|=
name|QPixmap
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
block|}
end_constructor
begin_destructor
DECL|function|~QS60WindowSurface
name|QS60WindowSurface
operator|::
name|~
name|QS60WindowSurface
parameter_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_GRAPHICSSYSTEM_RUNTIME
argument_list|)
operator|&&
name|defined
argument_list|(
name|Q_SYMBIAN_SUPPORTS_SURFACES
argument_list|)
if|if
condition|(
name|QApplicationPrivate
operator|::
name|runtime_graphics_system
condition|)
block|{
name|QRuntimeGraphicsSystem
modifier|*
name|runtimeGraphicsSystem
init|=
cast|static_cast
argument_list|<
name|QRuntimeGraphicsSystem
operator|*
argument_list|>
argument_list|(
name|QApplicationPrivate
operator|::
name|graphics_system
argument_list|)
decl_stmt|;
if|if
condition|(
name|runtimeGraphicsSystem
operator|->
name|graphicsSystemName
argument_list|()
operator|==
name|QLatin1String
argument_list|(
literal|"openvg"
argument_list|)
condition|)
block|{
comment|// Graphics system has been switched from raster to openvg.
comment|// Issue empty redraw to clear the UI surface
name|QWidget
modifier|*
name|w
init|=
name|window
argument_list|()
decl_stmt|;
if|if
condition|(
name|w
operator|->
name|testAttribute
argument_list|(
name|Qt
operator|::
name|WA_WState_Created
argument_list|)
condition|)
block|{
name|RWindow
modifier|*
specifier|const
name|window
init|=
cast|static_cast
argument_list|<
name|RWindow
operator|*
argument_list|>
argument_list|(
name|w
operator|->
name|winId
argument_list|()
operator|->
name|DrawableWindow
argument_list|()
argument_list|)
decl_stmt|;
name|window
operator|->
name|BeginRedraw
argument_list|()
expr_stmt|;
name|window
operator|->
name|EndRedraw
argument_list|()
expr_stmt|;
block|}
block|}
block|}
endif|#
directive|endif
operator|delete
name|d_ptr
expr_stmt|;
block|}
end_destructor
begin_function
DECL|function|beginPaint
name|void
name|QS60WindowSurface
operator|::
name|beginPaint
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|rgn
parameter_list|)
block|{
ifdef|#
directive|ifdef
name|Q_SYMBIAN_SUPPORTS_SURFACES
name|S60
operator|->
name|wsSession
argument_list|()
operator|.
name|Finish
argument_list|()
expr_stmt|;
endif|#
directive|endif
name|QWidgetPrivate
modifier|*
name|windowPrivate
init|=
name|qt_widget_private
argument_list|(
name|window
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|windowPrivate
operator|->
name|isOpaque
operator|||
name|blitWriteAlpha
argument_list|(
name|windowPrivate
argument_list|)
condition|)
block|{
name|QS60PixmapData
modifier|*
name|pixmapData
init|=
cast|static_cast
argument_list|<
name|QS60PixmapData
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|->
name|device
operator|.
name|data_ptr
argument_list|()
operator|.
name|data
argument_list|()
argument_list|)
decl_stmt|;
name|TDisplayMode
name|mode
init|=
name|displayMode
argument_list|(
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|pixmapData
operator|->
name|cfbsBitmap
operator|->
name|DisplayMode
argument_list|()
operator|!=
name|mode
condition|)
name|pixmapData
operator|->
name|convertToDisplayMode
argument_list|(
name|mode
argument_list|)
expr_stmt|;
name|pixmapData
operator|->
name|beginDataAccess
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|windowPrivate
operator|->
name|isOpaque
condition|)
block|{
name|QPainter
name|p
argument_list|(
operator|&
name|pixmapData
operator|->
name|image
argument_list|)
decl_stmt|;
name|p
operator|.
name|setCompositionMode
argument_list|(
name|QPainter
operator|::
name|CompositionMode_Source
argument_list|)
expr_stmt|;
specifier|const
name|QVector
argument_list|<
name|QRect
argument_list|>
name|rects
init|=
name|rgn
operator|.
name|rects
argument_list|()
decl_stmt|;
specifier|const
name|QColor
name|blank
init|=
name|Qt
operator|::
name|transparent
decl_stmt|;
for|for
control|(
name|QVector
argument_list|<
name|QRect
argument_list|>
operator|::
name|const_iterator
name|it
init|=
name|rects
operator|.
name|begin
argument_list|()
init|;
name|it
operator|!=
name|rects
operator|.
name|end
argument_list|()
condition|;
operator|++
name|it
control|)
block|{
name|p
operator|.
name|fillRect
argument_list|(
operator|*
name|it
argument_list|,
name|blank
argument_list|)
expr_stmt|;
block|}
block|}
name|pixmapData
operator|->
name|endDataAccess
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|endPaint
name|void
name|QS60WindowSurface
operator|::
name|endPaint
parameter_list|(
specifier|const
name|QRegion
modifier|&
parameter_list|)
block|{
name|qDeleteAll
argument_list|(
name|d_ptr
operator|->
name|bufferImages
argument_list|)
expr_stmt|;
name|d_ptr
operator|->
name|bufferImages
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|buffer
name|QImage
modifier|*
name|QS60WindowSurface
operator|::
name|buffer
parameter_list|(
specifier|const
name|QWidget
modifier|*
name|widget
parameter_list|)
block|{
if|if
condition|(
name|widget
operator|->
name|window
argument_list|()
operator|!=
name|window
argument_list|()
condition|)
return|return
literal|0
return|;
name|QPaintDevice
modifier|*
name|pdev
init|=
name|paintDevice
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|pdev
condition|)
return|return
literal|0
return|;
specifier|const
name|QPoint
name|off
init|=
name|offset
argument_list|(
name|widget
argument_list|)
decl_stmt|;
name|QImage
modifier|*
name|img
init|=
operator|&
operator|(
cast|static_cast
argument_list|<
name|QS60PixmapData
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|->
name|device
operator|.
name|data_ptr
argument_list|()
operator|.
name|data
argument_list|()
argument_list|)
operator|->
name|image
operator|)
decl_stmt|;
name|QRect
name|rect
argument_list|(
name|off
argument_list|,
name|widget
operator|->
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|rect
operator|&=
name|QRect
argument_list|(
name|QPoint
argument_list|()
argument_list|,
name|img
operator|->
name|size
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rect
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|0
return|;
name|img
operator|=
operator|new
name|QImage
argument_list|(
name|img
operator|->
name|scanLine
argument_list|(
name|rect
operator|.
name|y
argument_list|()
argument_list|)
operator|+
name|rect
operator|.
name|x
argument_list|()
operator|*
name|img
operator|->
name|depth
argument_list|()
operator|/
literal|8
argument_list|,
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|,
name|img
operator|->
name|bytesPerLine
argument_list|()
argument_list|,
name|img
operator|->
name|format
argument_list|()
argument_list|)
expr_stmt|;
name|d_ptr
operator|->
name|bufferImages
operator|.
name|append
argument_list|(
name|img
argument_list|)
expr_stmt|;
return|return
name|img
return|;
block|}
end_function
begin_function
DECL|function|flush
name|void
name|QS60WindowSurface
operator|::
name|flush
parameter_list|(
name|QWidget
modifier|*
name|widget
parameter_list|,
specifier|const
name|QRegion
modifier|&
name|region
parameter_list|,
specifier|const
name|QPoint
modifier|&
parameter_list|)
block|{
name|QWidget
modifier|*
name|window
init|=
name|widget
operator|->
name|window
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|window
argument_list|)
expr_stmt|;
name|QTLWExtra
modifier|*
name|topExtra
init|=
name|window
operator|->
name|d_func
argument_list|()
operator|->
name|maybeTopData
argument_list|()
decl_stmt|;
name|Q_ASSERT
argument_list|(
name|topExtra
argument_list|)
expr_stmt|;
name|QRect
name|qr
init|=
name|region
operator|.
name|boundingRect
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|topExtra
operator|->
name|inExpose
condition|)
block|{
name|topExtra
operator|->
name|inExpose
operator|=
literal|true
expr_stmt|;
comment|// Prevent DrawNow() from calling syncBackingStore() again
name|TRect
name|tr
init|=
name|qt_QRect2TRect
argument_list|(
name|qr
argument_list|)
decl_stmt|;
name|widget
operator|->
name|winId
argument_list|()
operator|->
name|DrawNow
argument_list|(
name|tr
argument_list|)
expr_stmt|;
name|topExtra
operator|->
name|inExpose
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
comment|// This handles the case when syncBackingStore updates content outside of the
comment|// original drawing rectangle. This might happen if there are pending update()
comment|// events at the same time as we get a Draw() from Symbian.
name|QRect
name|drawRect
init|=
name|qt_TRect2QRect
argument_list|(
name|widget
operator|->
name|winId
argument_list|()
operator|->
name|DrawableWindow
argument_list|()
operator|->
name|GetDrawRect
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|drawRect
operator|.
name|contains
argument_list|(
name|qr
argument_list|)
condition|)
name|widget
operator|->
name|winId
argument_list|()
operator|->
name|DrawDeferred
argument_list|()
expr_stmt|;
block|}
block|}
end_function
begin_function
DECL|function|scroll
name|bool
name|QS60WindowSurface
operator|::
name|scroll
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|area
parameter_list|,
name|int
name|dx
parameter_list|,
name|int
name|dy
parameter_list|)
block|{
name|QRect
name|rect
init|=
name|area
operator|.
name|boundingRect
argument_list|()
decl_stmt|;
if|if
condition|(
name|dx
operator|==
literal|0
operator|&&
name|dy
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|d_ptr
operator|->
name|device
operator|.
name|isNull
argument_list|()
condition|)
return|return
literal|false
return|;
name|QS60PixmapData
modifier|*
name|data
init|=
cast|static_cast
argument_list|<
name|QS60PixmapData
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|->
name|device
operator|.
name|data_ptr
argument_list|()
operator|.
name|data
argument_list|()
argument_list|)
decl_stmt|;
name|data
operator|->
name|scroll
argument_list|(
name|dx
argument_list|,
name|dy
argument_list|,
name|rect
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
end_function
begin_function
DECL|function|paintDevice
name|QPaintDevice
modifier|*
name|QS60WindowSurface
operator|::
name|paintDevice
parameter_list|()
block|{
return|return
operator|&
name|d_ptr
operator|->
name|device
return|;
block|}
end_function
begin_function
DECL|function|setGeometry
name|void
name|QS60WindowSurface
operator|::
name|setGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|)
block|{
if|if
condition|(
name|rect
operator|==
name|geometry
argument_list|()
condition|)
return|return;
name|QS60PixmapData
modifier|*
name|data
init|=
cast|static_cast
argument_list|<
name|QS60PixmapData
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|->
name|device
operator|.
name|data_ptr
argument_list|()
operator|.
name|data
argument_list|()
argument_list|)
decl_stmt|;
name|data
operator|->
name|resize
argument_list|(
name|rect
operator|.
name|width
argument_list|()
argument_list|,
name|rect
operator|.
name|height
argument_list|()
argument_list|)
expr_stmt|;
name|QWindowSurface
operator|::
name|setGeometry
argument_list|(
name|rect
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|features
name|QWindowSurface
operator|::
name|WindowSurfaceFeatures
name|QS60WindowSurface
operator|::
name|features
parameter_list|()
specifier|const
block|{
return|return
name|QWindowSurface
operator|::
name|AllFeatures
return|;
block|}
end_function
begin_function
DECL|function|symbianBitmap
name|CFbsBitmap
modifier|*
name|QS60WindowSurface
operator|::
name|symbianBitmap
parameter_list|()
specifier|const
block|{
name|QS60PixmapData
modifier|*
name|data
init|=
cast|static_cast
argument_list|<
name|QS60PixmapData
operator|*
argument_list|>
argument_list|(
name|d_ptr
operator|->
name|device
operator|.
name|data_ptr
argument_list|()
operator|.
name|data
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|data
operator|->
name|cfbsBitmap
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
