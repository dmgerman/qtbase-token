begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qplatformoffscreensurface.h"
end_include
begin_include
include|#
directive|include
file|"qoffscreensurface.h"
end_include
begin_include
include|#
directive|include
file|"qscreen.h"
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_class
DECL|class|QPlatformOffscreenSurfacePrivate
class|class
name|QPlatformOffscreenSurfacePrivate
block|{
public|public:
block|}
class|;
end_class
begin_constructor
DECL|function|QPlatformOffscreenSurface
name|QPlatformOffscreenSurface
operator|::
name|QPlatformOffscreenSurface
parameter_list|(
name|QOffscreenSurface
modifier|*
name|offscreenSurface
parameter_list|)
member_init_list|:
name|QPlatformSurface
argument_list|(
name|offscreenSurface
argument_list|)
member_init_list|,
name|d_ptr
argument_list|(
operator|new
name|QPlatformOffscreenSurfacePrivate
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QPlatformOffscreenSurface
name|QPlatformOffscreenSurface
operator|::
name|~
name|QPlatformOffscreenSurface
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|offscreenSurface
name|QOffscreenSurface
modifier|*
name|QPlatformOffscreenSurface
operator|::
name|offscreenSurface
parameter_list|()
specifier|const
block|{
return|return
cast|static_cast
argument_list|<
name|QOffscreenSurface
operator|*
argument_list|>
argument_list|(
name|m_surface
argument_list|)
return|;
block|}
end_function
begin_comment
comment|/*!     Returns the platform screen handle corresponding to this QPlatformOffscreenSurface. */
end_comment
begin_function
DECL|function|screen
name|QPlatformScreen
modifier|*
name|QPlatformOffscreenSurface
operator|::
name|screen
parameter_list|()
specifier|const
block|{
return|return
name|offscreenSurface
argument_list|()
operator|->
name|screen
argument_list|()
operator|->
name|handle
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*!     Returns the actual surface format of the offscreen surface. */
end_comment
begin_function
DECL|function|format
name|QSurfaceFormat
name|QPlatformOffscreenSurface
operator|::
name|format
parameter_list|()
specifier|const
block|{
return|return
name|QSurfaceFormat
argument_list|()
return|;
block|}
end_function
begin_comment
comment|/*!     Returns \c true if the platform offscreen surface has been allocated. */
end_comment
begin_function
DECL|function|isValid
name|bool
name|QPlatformOffscreenSurface
operator|::
name|isValid
parameter_list|()
specifier|const
block|{
return|return
literal|false
return|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
