begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QHIGHDPISCALING_P_H
end_ifndef
begin_define
DECL|macro|QHIGHDPISCALING_P_H
define|#
directive|define
name|QHIGHDPISCALING_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qmargins.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qrect.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qvector.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/qloggingcategory.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qregion.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qscreen.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qwindow.h>
end_include
begin_function_decl
name|QT_BEGIN_NAMESPACE
name|Q_DECLARE_LOGGING_CATEGORY
parameter_list|(
name|lcScaling
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
DECL|variable|QScreen
name|class
name|QScreen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPlatformScreen
name|class
name|QPlatformScreen
decl_stmt|;
end_decl_stmt
begin_typedef
DECL|typedef|qreal
DECL|typedef|QDpi
typedef|typedef
name|QPair
operator|<
name|qreal
operator|,
name|qreal
operator|>
name|QDpi
expr_stmt|;
end_typedef
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_HIGHDPISCALING
end_ifndef
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QHighDpiScaling
block|{
name|public
label|:
specifier|static
name|void
name|initHighDpiScaling
parameter_list|()
function_decl|;
specifier|static
name|void
name|updateHighDpiScaling
parameter_list|()
function_decl|;
specifier|static
name|void
name|setGlobalFactor
parameter_list|(
name|qreal
name|factor
parameter_list|)
function_decl|;
specifier|static
name|void
name|setScreenFactor
parameter_list|(
name|QScreen
modifier|*
name|window
parameter_list|,
name|qreal
name|factor
parameter_list|)
function_decl|;
specifier|static
name|bool
name|isActive
parameter_list|()
block|{
return|return
name|m_active
return|;
block|}
specifier|static
name|qreal
name|factor
parameter_list|(
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
function_decl|;
specifier|static
name|qreal
name|factor
parameter_list|(
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
function_decl|;
specifier|static
name|qreal
name|factor
parameter_list|(
specifier|const
name|QPlatformScreen
modifier|*
name|platformScreen
parameter_list|)
function_decl|;
specifier|static
name|QPoint
name|origin
parameter_list|(
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
function_decl|;
specifier|static
name|QPoint
name|origin
parameter_list|(
specifier|const
name|QPlatformScreen
modifier|*
name|platformScreen
parameter_list|)
function_decl|;
specifier|static
name|QPoint
name|mapPositionFromNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QPlatformScreen
modifier|*
name|platformScreen
parameter_list|)
function_decl|;
specifier|static
name|QPoint
name|mapPositionToNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QPlatformScreen
modifier|*
name|platformScreen
parameter_list|)
function_decl|;
specifier|static
name|QDpi
name|logicalDpi
parameter_list|()
function_decl|;
name|private
label|:
specifier|static
name|qreal
name|screenSubfactor
parameter_list|(
specifier|const
name|QPlatformScreen
modifier|*
name|screen
parameter_list|)
function_decl|;
specifier|static
name|qreal
name|m_factor
decl_stmt|;
specifier|static
name|bool
name|m_active
decl_stmt|;
specifier|static
name|bool
name|m_usePixelDensity
decl_stmt|;
specifier|static
name|bool
name|m_globalScalingActive
decl_stmt|;
specifier|static
name|bool
name|m_pixelDensityScalingActive
decl_stmt|;
specifier|static
name|bool
name|m_screenFactorSet
decl_stmt|;
specifier|static
name|QDpi
name|m_logicalDpi
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_comment
comment|// Coordinate system conversion functions:
end_comment
begin_comment
comment|// QHighDpi::fromNativePixels   : from physical(screen/backing) to logical pixels
end_comment
begin_comment
comment|// QHighDpi::toNativePixels              : from logical to physical pixels
end_comment
begin_decl_stmt
name|namespace
name|QHighDpi
block|{
specifier|inline
name|QPointF
name|fromNative
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pos
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|origin
parameter_list|)
block|{
return|return
operator|(
name|pos
operator|-
name|origin
operator|)
operator|/
name|scaleFactor
operator|+
name|origin
return|;
block|}
specifier|inline
name|QPointF
name|toNative
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pos
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|,
specifier|const
name|QPointF
modifier|&
name|origin
parameter_list|)
block|{
return|return
operator|(
name|pos
operator|-
name|origin
operator|)
operator|*
name|scaleFactor
operator|+
name|origin
return|;
block|}
specifier|inline
name|QPoint
name|fromNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|origin
parameter_list|)
block|{
return|return
operator|(
name|pos
operator|-
name|origin
operator|)
operator|/
name|scaleFactor
operator|+
name|origin
return|;
block|}
specifier|inline
name|QPoint
name|toNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|origin
parameter_list|)
block|{
return|return
operator|(
name|pos
operator|-
name|origin
operator|)
operator|*
name|scaleFactor
operator|+
name|origin
return|;
block|}
specifier|inline
name|QPoint
name|fromNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|)
block|{
return|return
name|pos
operator|/
name|scaleFactor
return|;
block|}
specifier|inline
name|QPoint
name|toNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|)
block|{
return|return
name|pos
operator|*
name|scaleFactor
return|;
block|}
specifier|inline
name|QSize
name|fromNative
parameter_list|(
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|)
block|{
return|return
name|size
operator|/
name|scaleFactor
return|;
comment|// TODO: should we round up?
block|}
specifier|inline
name|QSize
name|toNative
parameter_list|(
specifier|const
name|QSize
modifier|&
name|size
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|)
block|{
return|return
name|size
operator|*
name|scaleFactor
return|;
block|}
specifier|inline
name|QSizeF
name|fromNative
parameter_list|(
specifier|const
name|QSizeF
modifier|&
name|size
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|)
block|{
return|return
name|size
operator|/
name|scaleFactor
return|;
block|}
specifier|inline
name|QSizeF
name|toNative
parameter_list|(
specifier|const
name|QSizeF
modifier|&
name|size
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|)
block|{
return|return
name|size
operator|*
name|scaleFactor
return|;
block|}
specifier|inline
name|QRect
name|fromNative
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|origin
parameter_list|)
block|{
return|return
name|QRect
argument_list|(
name|fromNative
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|fromNative
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|toNative
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
name|qreal
name|scaleFactor
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|origin
parameter_list|)
block|{
return|return
name|QRect
argument_list|(
name|toNative
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|toNative
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|fromNative
parameter_list|(
specifier|const
name|QRect
modifier|&
name|rect
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|,
specifier|const
name|QPoint
modifier|&
name|screenOrigin
parameter_list|)
block|{
return|return
name|toNative
argument_list|(
name|rect
argument_list|,
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
argument_list|,
name|screenOrigin
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|fromNativeScreenGeometry
parameter_list|(
specifier|const
name|QRect
modifier|&
name|nativeScreenGeometry
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
return|return
name|QRect
argument_list|(
name|nativeScreenGeometry
operator|.
name|topLeft
argument_list|()
argument_list|,
name|fromNative
argument_list|(
name|nativeScreenGeometry
operator|.
name|size
argument_list|()
argument_list|,
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QPoint
name|fromNativeLocalPosition
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|pos
operator|/
name|scaleFactor
return|;
block|}
specifier|inline
name|QPoint
name|toNativeLocalPosition
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|pos
operator|*
name|scaleFactor
return|;
block|}
specifier|inline
name|QPointF
name|fromNativeLocalPosition
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pos
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|pos
operator|/
name|scaleFactor
return|;
block|}
specifier|inline
name|QPointF
name|toNativeLocalPosition
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pos
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|pos
operator|*
name|scaleFactor
return|;
block|}
specifier|inline
name|QRect
name|fromNativePixels
parameter_list|(
specifier|const
name|QRect
modifier|&
name|pixelRect
parameter_list|,
specifier|const
name|QPlatformScreen
modifier|*
name|platformScreen
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|platformScreen
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|origin
init|=
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|platformScreen
argument_list|)
decl_stmt|;
return|return
name|QRect
argument_list|(
name|fromNative
argument_list|(
name|pixelRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|fromNative
argument_list|(
name|pixelRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|toNativePixels
parameter_list|(
specifier|const
name|QRect
modifier|&
name|pointRect
parameter_list|,
specifier|const
name|QPlatformScreen
modifier|*
name|platformScreen
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|platformScreen
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|origin
init|=
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|platformScreen
argument_list|)
decl_stmt|;
return|return
name|QRect
argument_list|(
name|toNative
argument_list|(
name|pointRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|toNative
argument_list|(
name|pointRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|fromNativePixels
parameter_list|(
specifier|const
name|QRect
modifier|&
name|pixelRect
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|origin
init|=
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
decl_stmt|;
return|return
name|QRect
argument_list|(
name|fromNative
argument_list|(
name|pixelRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|fromNative
argument_list|(
name|pixelRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|toNativePixels
parameter_list|(
specifier|const
name|QRect
modifier|&
name|pointRect
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|origin
init|=
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
decl_stmt|;
return|return
name|QRect
argument_list|(
name|toNative
argument_list|(
name|pointRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|toNative
argument_list|(
name|pointRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|fromNativePixels
parameter_list|(
specifier|const
name|QRect
modifier|&
name|pixelRect
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
block|{
return|return
name|fromNativePixels
argument_list|(
name|pixelRect
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|QRect
argument_list|(
name|pixelRect
operator|.
name|topLeft
argument_list|()
operator|/
name|scaleFactor
argument_list|,
name|fromNative
argument_list|(
name|pixelRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
block|}
specifier|inline
name|QRectF
name|toNativePixels
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|pointRect
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|origin
init|=
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
decl_stmt|;
return|return
name|QRectF
argument_list|(
name|toNative
argument_list|(
name|pointRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|toNative
argument_list|(
name|pointRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRect
name|toNativePixels
parameter_list|(
specifier|const
name|QRect
modifier|&
name|pointRect
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
block|{
return|return
name|toNativePixels
argument_list|(
name|pointRect
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|QRect
argument_list|(
name|pointRect
operator|.
name|topLeft
argument_list|()
operator|*
name|scaleFactor
argument_list|,
name|toNative
argument_list|(
name|pointRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
block|}
specifier|inline
name|QRectF
name|fromNativePixels
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|pixelRect
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
decl_stmt|;
specifier|const
name|QPoint
name|origin
init|=
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
decl_stmt|;
return|return
name|QRectF
argument_list|(
name|fromNative
argument_list|(
name|pixelRect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|,
name|origin
argument_list|)
argument_list|,
name|fromNative
argument_list|(
name|pixelRect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QRectF
name|fromNativePixels
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|pixelRect
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
block|{
return|return
name|fromNativePixels
argument_list|(
name|pixelRect
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|QRectF
argument_list|(
name|pixelRect
operator|.
name|topLeft
argument_list|()
operator|/
name|scaleFactor
argument_list|,
name|pixelRect
operator|.
name|size
argument_list|()
operator|/
name|scaleFactor
argument_list|)
return|;
block|}
block|}
specifier|inline
name|QRectF
name|toNativePixels
parameter_list|(
specifier|const
name|QRectF
modifier|&
name|pointRect
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
block|{
return|return
name|toNativePixels
argument_list|(
name|pointRect
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|QRectF
argument_list|(
name|pointRect
operator|.
name|topLeft
argument_list|()
operator|*
name|scaleFactor
argument_list|,
name|pointRect
operator|.
name|size
argument_list|()
operator|*
name|scaleFactor
argument_list|)
return|;
block|}
block|}
specifier|inline
name|QSize
name|fromNativePixels
parameter_list|(
specifier|const
name|QSize
modifier|&
name|pixelSize
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
return|return
name|pixelSize
operator|/
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QSize
name|toNativePixels
parameter_list|(
specifier|const
name|QSize
modifier|&
name|pointSize
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
return|return
name|pointSize
operator|*
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QSizeF
name|fromNativePixels
parameter_list|(
specifier|const
name|QSizeF
modifier|&
name|pixelSize
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
return|return
name|pixelSize
operator|/
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QSizeF
name|toNativePixels
parameter_list|(
specifier|const
name|QSizeF
modifier|&
name|pointSize
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
return|return
name|pointSize
operator|*
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QPoint
name|fromNativePixels
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pixelPoint
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
return|return
name|fromNative
argument_list|(
name|pixelPoint
argument_list|,
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
argument_list|,
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QPoint
name|fromNativePixels
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pixelPoint
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
return|return
name|fromNativePixels
argument_list|(
name|pixelPoint
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
else|else
return|return
name|pixelPoint
operator|/
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QPoint
name|toNativePixels
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pointPoint
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
return|return
name|toNative
argument_list|(
name|pointPoint
argument_list|,
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
argument_list|,
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QPoint
name|toNativePixels
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pointPoint
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
return|return
name|toNativePixels
argument_list|(
name|pointPoint
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
else|else
return|return
name|pointPoint
operator|*
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QPointF
name|fromNativePixels
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pixelPoint
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
return|return
name|fromNative
argument_list|(
name|pixelPoint
argument_list|,
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
argument_list|,
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QPointF
name|fromNativePixels
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pixelPoint
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
return|return
name|fromNativePixels
argument_list|(
name|pixelPoint
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
else|else
return|return
name|pixelPoint
operator|/
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QPointF
name|toNativePixels
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pointPoint
parameter_list|,
specifier|const
name|QScreen
modifier|*
name|screen
parameter_list|)
block|{
return|return
name|toNative
argument_list|(
name|pointPoint
argument_list|,
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
argument_list|,
name|QHighDpiScaling
operator|::
name|origin
argument_list|(
name|screen
argument_list|)
argument_list|)
return|;
block|}
specifier|inline
name|QPointF
name|toNativePixels
parameter_list|(
specifier|const
name|QPointF
modifier|&
name|pointPoint
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
name|window
operator|&&
name|window
operator|->
name|isTopLevel
argument_list|()
operator|&&
name|window
operator|->
name|screen
argument_list|()
condition|)
return|return
name|toNativePixels
argument_list|(
name|pointPoint
argument_list|,
name|window
operator|->
name|screen
argument_list|()
argument_list|)
return|;
else|else
return|return
name|pointPoint
operator|*
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
specifier|inline
name|QMargins
name|fromNativePixels
parameter_list|(
specifier|const
name|QMargins
modifier|&
name|pixelMargins
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|QMargins
argument_list|(
name|pixelMargins
operator|.
name|left
argument_list|()
operator|/
name|scaleFactor
argument_list|,
name|pixelMargins
operator|.
name|top
argument_list|()
operator|/
name|scaleFactor
argument_list|,
name|pixelMargins
operator|.
name|right
argument_list|()
operator|/
name|scaleFactor
argument_list|,
name|pixelMargins
operator|.
name|bottom
argument_list|()
operator|/
name|scaleFactor
argument_list|)
return|;
block|}
specifier|inline
name|QMargins
name|toNativePixels
parameter_list|(
specifier|const
name|QMargins
modifier|&
name|pointMargins
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
specifier|const
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
return|return
name|QMargins
argument_list|(
name|pointMargins
operator|.
name|left
argument_list|()
operator|*
name|scaleFactor
argument_list|,
name|pointMargins
operator|.
name|top
argument_list|()
operator|*
name|scaleFactor
argument_list|,
name|pointMargins
operator|.
name|right
argument_list|()
operator|*
name|scaleFactor
argument_list|,
name|pointMargins
operator|.
name|bottom
argument_list|()
operator|*
name|scaleFactor
argument_list|)
return|;
block|}
specifier|inline
name|QRegion
name|fromNativeLocalRegion
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|pixelRegion
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pixelRegion
return|;
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
name|QRegion
name|pointRegion
decl_stmt|;
specifier|const
specifier|auto
name|rects
init|=
name|pixelRegion
operator|.
name|rects
argument_list|()
decl_stmt|;
for|for
control|(
specifier|const
name|QRect
modifier|&
name|rect
range|:
name|rects
control|)
block|{
name|pointRegion
operator|+=
name|QRect
argument_list|(
name|fromNative
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|,
name|fromNative
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|pointRegion
return|;
block|}
specifier|inline
name|QRegion
name|toNativeLocalRegion
parameter_list|(
specifier|const
name|QRegion
modifier|&
name|pointRegion
parameter_list|,
specifier|const
name|QWindow
modifier|*
name|window
parameter_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pointRegion
return|;
name|qreal
name|scaleFactor
init|=
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
decl_stmt|;
name|QRegion
name|pixelRegon
decl_stmt|;
specifier|const
specifier|auto
name|rects
init|=
name|pointRegion
operator|.
name|rects
argument_list|()
decl_stmt|;
for|for
control|(
specifier|const
name|QRect
modifier|&
name|rect
range|:
name|rects
control|)
block|{
name|pixelRegon
operator|+=
name|QRect
argument_list|(
name|toNative
argument_list|(
name|rect
operator|.
name|topLeft
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|,
name|toNative
argument_list|(
name|rect
operator|.
name|size
argument_list|()
argument_list|,
name|scaleFactor
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|pixelRegon
return|;
block|}
comment|// Any T that has operator/()
name|template
operator|<
name|typename
name|T
operator|>
name|T
name|fromNativePixels
argument_list|(
argument|const T&pixelValue
argument_list|,
argument|const QWindow *window
argument_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pixelValue
return|;
return|return
name|pixelValue
operator|/
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
block|}
end_decl_stmt
begin_comment
comment|//##### ?????
end_comment
begin_expr_stmt
name|template
operator|<
name|typename
name|T
operator|>
name|T
name|fromNativePixels
argument_list|(
argument|const T&pixelValue
argument_list|,
argument|const QScreen *screen
argument_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pixelValue
return|;
end_expr_stmt
begin_return
return|return
name|pixelValue
operator|/
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
return|;
end_return
begin_comment
unit|}
comment|// Any T that has operator*()
end_comment
begin_expr_stmt
unit|template
operator|<
name|typename
name|T
operator|>
name|T
name|toNativePixels
argument_list|(
argument|const T&pointValue
argument_list|,
argument|const QWindow *window
argument_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pointValue
return|;
end_expr_stmt
begin_return
return|return
name|pointValue
operator|*
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
return|;
end_return
begin_expr_stmt
unit|}  template
operator|<
name|typename
name|T
operator|>
name|T
name|toNativePixels
argument_list|(
argument|const T&pointValue
argument_list|,
argument|const QScreen *screen
argument_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pointValue
return|;
end_expr_stmt
begin_return
return|return
name|pointValue
operator|*
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|screen
argument_list|)
return|;
end_return
begin_comment
unit|}
comment|// Any QVector<T> where T has operator/()
end_comment
begin_expr_stmt
unit|template
operator|<
name|typename
name|T
operator|>
name|QVector
operator|<
name|T
operator|>
name|fromNativePixels
argument_list|(
argument|const QVector<T>&pixelValues
argument_list|,
argument|const QWindow *window
argument_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pixelValues
return|;
name|QVector
operator|<
name|T
operator|>
name|pointValues
expr_stmt|;
end_expr_stmt
begin_macro
name|foreach
argument_list|(
argument|const T& pixelValue
argument_list|,
argument|pixelValues
argument_list|)
end_macro
begin_expr_stmt
name|pointValues
operator|.
name|append
argument_list|(
name|pixelValue
operator|/
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_return
return|return
name|pointValues
return|;
end_return
begin_comment
unit|}
comment|// Any QVector<T> where T has operator*()
end_comment
begin_expr_stmt
unit|template
operator|<
name|typename
name|T
operator|>
name|QVector
operator|<
name|T
operator|>
name|toNativePixels
argument_list|(
argument|const QVector<T>&pointValues
argument_list|,
argument|const QWindow *window
argument_list|)
block|{
if|if
condition|(
operator|!
name|QHighDpiScaling
operator|::
name|isActive
argument_list|()
condition|)
return|return
name|pointValues
return|;
name|QVector
operator|<
name|T
operator|>
name|pixelValues
expr_stmt|;
end_expr_stmt
begin_macro
name|foreach
argument_list|(
argument|const T& pointValue
argument_list|,
argument|pointValues
argument_list|)
end_macro
begin_expr_stmt
name|pixelValues
operator|.
name|append
argument_list|(
name|pointValue
operator|*
name|QHighDpiScaling
operator|::
name|factor
argument_list|(
name|window
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_return
return|return
name|pixelValues
return|;
end_return
begin_comment
unit|}  }
comment|// namespace QHighDpi
end_comment
begin_else
else|#
directive|else
end_else
begin_comment
comment|// QT_NO_HIGHDPISCALING
end_comment
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QHighDpiScaling
block|{
name|public
label|:
specifier|static
specifier|inline
name|void
name|initHighDpiScaling
parameter_list|()
block|{}
specifier|static
specifier|inline
name|void
name|updateHighDpiScaling
parameter_list|()
block|{}
specifier|static
specifier|inline
name|void
name|setGlobalFactor
parameter_list|(
name|qreal
parameter_list|)
block|{}
specifier|static
specifier|inline
name|void
name|setScreenFactor
parameter_list|(
name|QScreen
modifier|*
parameter_list|,
name|qreal
parameter_list|)
block|{}
specifier|static
specifier|inline
name|bool
name|isActive
parameter_list|()
block|{
return|return
name|false
return|;
block|}
specifier|static
specifier|inline
name|qreal
name|factor
parameter_list|(
specifier|const
name|QWindow
modifier|*
parameter_list|)
block|{
return|return
literal|1.0
return|;
block|}
specifier|static
specifier|inline
name|qreal
name|factor
parameter_list|(
specifier|const
name|QScreen
modifier|*
parameter_list|)
block|{
return|return
literal|1.0
return|;
block|}
specifier|static
specifier|inline
name|qreal
name|factor
parameter_list|(
specifier|const
name|QPlatformScreen
modifier|*
parameter_list|)
block|{
return|return
literal|1.0
return|;
block|}
specifier|static
specifier|inline
name|QPoint
name|origin
parameter_list|(
specifier|const
name|QScreen
modifier|*
parameter_list|)
block|{
return|return
name|QPoint
argument_list|()
return|;
block|}
specifier|static
specifier|inline
name|QPoint
name|origin
parameter_list|(
specifier|const
name|QPlatformScreen
modifier|*
parameter_list|)
block|{
return|return
name|QPoint
argument_list|()
return|;
block|}
specifier|static
specifier|inline
name|QPoint
name|mapPositionFromNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QPlatformScreen
modifier|*
parameter_list|)
block|{
return|return
name|pos
return|;
block|}
specifier|static
specifier|inline
name|QPoint
name|mapPositionToNative
parameter_list|(
specifier|const
name|QPoint
modifier|&
name|pos
parameter_list|,
specifier|const
name|QPlatformScreen
modifier|*
parameter_list|)
block|{
return|return
name|pos
return|;
block|}
specifier|static
specifier|inline
name|QDpi
name|logicalDpi
parameter_list|()
block|{
return|return
name|QDpi
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_decl_stmt
name|namespace
name|QHighDpi
block|{
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|toNative
argument_list|(
argument|const T&value
argument_list|,
argument|...
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|fromNative
argument_list|(
argument|const T&value
argument_list|,
argument|...
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|fromNativeLocalPosition
argument_list|(
argument|const T&value
argument_list|,
argument|...
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|toNativeLocalPosition
argument_list|(
argument|const T&value
argument_list|,
argument|...
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|fromNativeLocalRegion
argument_list|(
argument|const T&value
argument_list|,
argument|...
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|toNativeLocalRegion
argument_list|(
argument|const T&value
argument_list|,
argument|...
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|>
specifier|inline
name|T
name|fromNativeScreenGeometry
argument_list|(
argument|const T&value
argument_list|,
argument|...
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|U
operator|>
specifier|inline
name|T
name|toNativePixels
argument_list|(
argument|const T&value
argument_list|,
argument|const U*
argument_list|)
block|{
return|return
name|value
return|;
block|}
name|template
operator|<
name|typename
name|T
operator|,
name|typename
name|U
operator|>
specifier|inline
name|T
name|fromNativePixels
argument_list|(
argument|const T&value
argument_list|,
argument|const U*
argument_list|)
block|{
return|return
name|value
return|;
block|}
block|}
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_HIGHDPISCALING
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QHIGHDPISCALING_P_H
end_comment
end_unit
