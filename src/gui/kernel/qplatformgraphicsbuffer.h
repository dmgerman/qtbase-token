begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QPLATFORMGRAPHICSBUFFER_H
end_ifndef
begin_define
DECL|macro|QPLATFORMGRAPHICSBUFFER_H
define|#
directive|define
name|QPLATFORMGRAPHICSBUFFER_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is part of the QPA API and is not meant to be used
end_comment
begin_comment
comment|// in applications. Usage of this API may make your code
end_comment
begin_comment
comment|// source and binary incompatible with future versions of Qt.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtCore/QSize>
end_include
begin_include
include|#
directive|include
file|<QtCore/QRect>
end_include
begin_include
include|#
directive|include
file|<QtGui/QPixelFormat>
end_include
begin_include
include|#
directive|include
file|<QtCore/qflags.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/QObject>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|Q_GUI_EXPORT
name|QPlatformGraphicsBuffer
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
expr|enum
name|AccessType
block|{
name|None
operator|=
literal|0x00
block|,
name|SWReadAccess
operator|=
literal|0x01
block|,
name|SWWriteAccess
operator|=
literal|0x02
block|,
name|TextureAccess
operator|=
literal|0x04
block|,
name|HWCompositor
operator|=
literal|0x08
block|}
block|;
name|Q_DECLARE_FLAGS
argument_list|(
name|AccessTypes
argument_list|,
name|AccessType
argument_list|)
block|;      enum
name|Origin
block|{
name|OriginBottomLeft
block|,
name|OriginTopLeft
block|}
block|;
name|virtual
operator|~
name|QPlatformGraphicsBuffer
argument_list|()
block|;
name|AccessTypes
name|isLocked
argument_list|()
specifier|const
block|{
return|return
name|m_lock_access
return|;
block|}
name|bool
name|lock
argument_list|(
argument|AccessTypes access
argument_list|,
argument|const QRect&rect = QRect()
argument_list|)
block|;
name|void
name|unlock
argument_list|()
block|;
name|virtual
name|bool
name|bindToTexture
argument_list|(
argument|const QRect&rect = QRect()
argument_list|)
specifier|const
block|;
name|virtual
specifier|const
name|uchar
operator|*
name|data
argument_list|()
specifier|const
block|;
name|virtual
name|uchar
operator|*
name|data
argument_list|()
block|;
name|virtual
name|int
name|bytesPerLine
argument_list|()
specifier|const
block|;
name|int
name|byteCount
argument_list|()
specifier|const
block|;
name|virtual
name|Origin
name|origin
argument_list|()
specifier|const
block|;
name|QSize
name|size
argument_list|()
specifier|const
block|{
return|return
name|m_size
return|;
block|}
name|QPixelFormat
name|format
argument_list|()
specifier|const
block|{
return|return
name|m_format
return|;
block|}
name|Q_SIGNALS
operator|:
name|void
name|unlocked
argument_list|(
argument|AccessTypes previousAccessTypes
argument_list|)
block|;
name|protected
operator|:
name|QPlatformGraphicsBuffer
argument_list|(
specifier|const
name|QSize
operator|&
name|size
argument_list|,
specifier|const
name|QPixelFormat
operator|&
name|format
argument_list|)
block|;
name|virtual
name|bool
name|doLock
argument_list|(
argument|AccessTypes access
argument_list|,
argument|const QRect&rect = QRect()
argument_list|)
operator|=
literal|0
block|;
name|virtual
name|void
name|doUnlock
argument_list|()
operator|=
literal|0
block|;
name|private
operator|:
name|QSize
name|m_size
block|;
name|QPixelFormat
name|m_format
block|;
name|AccessTypes
name|m_lock_access
block|; }
decl_stmt|;
end_decl_stmt
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QPLATFORMGRAPHICSBUFFER_H
end_comment
end_unit
