begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** No Commercial Usage ** This file contains pre-release code and may not be distributed. ** You may use this file in accordance with the terms and conditions ** contained in the Technology Preview License Agreement accompanying ** this package. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights.  These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** If you have questions regarding the use of this file, please contact ** Nokia at qt-info@nokia.com. ** ** ** ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_X11_P_H
end_ifndef
begin_define
DECL|macro|QT_X11_P_H
define|#
directive|define
name|QT_X11_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists purely as an
end_comment
begin_comment
comment|// implementation detail.  This header file may change from version to
end_comment
begin_comment
comment|// version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"QtGui/qwindowdefs.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qlist.h"
end_include
begin_include
include|#
directive|include
file|"QtCore/qvariant.h"
end_include
begin_comment
comment|// the following is necessary to work around breakage in many versions
end_comment
begin_comment
comment|// of XFree86's Xlib.h still in use
end_comment
begin_comment
comment|// ### which versions?
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|_XLIB_H_
argument_list|)
end_if
begin_comment
comment|// crude hack, but...
end_comment
begin_error
error|#
directive|error
literal|"cannot include<X11/Xlib.h> before this file"
end_error
begin_endif
endif|#
directive|endif
end_endif
begin_define
DECL|macro|XRegisterIMInstantiateCallback
define|#
directive|define
name|XRegisterIMInstantiateCallback
value|qt_XRegisterIMInstantiateCallback
end_define
begin_define
DECL|macro|XUnregisterIMInstantiateCallback
define|#
directive|define
name|XUnregisterIMInstantiateCallback
value|qt_XUnregisterIMInstantiateCallback
end_define
begin_define
DECL|macro|XSetIMValues
define|#
directive|define
name|XSetIMValues
value|qt_XSetIMValues
end_define
begin_include
include|#
directive|include
file|<X11/Xlib.h>
end_include
begin_undef
DECL|macro|XRegisterIMInstantiateCallback
undef|#
directive|undef
name|XRegisterIMInstantiateCallback
end_undef
begin_undef
DECL|macro|XUnregisterIMInstantiateCallback
undef|#
directive|undef
name|XUnregisterIMInstantiateCallback
end_undef
begin_undef
DECL|macro|XSetIMValues
undef|#
directive|undef
name|XSetIMValues
end_undef
begin_include
include|#
directive|include
file|<X11/Xutil.h>
end_include
begin_include
include|#
directive|include
file|<X11/Xos.h>
end_include
begin_ifdef
ifdef|#
directive|ifdef
name|index
end_ifdef
begin_undef
DECL|macro|index
undef|#
directive|undef
name|index
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|rindex
end_ifdef
begin_undef
DECL|macro|rindex
undef|#
directive|undef
name|rindex
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|Q_OS_VXWORS
end_ifdef
begin_ifdef
ifdef|#
directive|ifdef
name|open
end_ifdef
begin_undef
DECL|macro|open
undef|#
directive|undef
name|open
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|getpid
end_ifdef
begin_undef
DECL|macro|getpid
undef|#
directive|undef
name|getpid
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// Q_OS_VXWORKS
end_comment
begin_include
include|#
directive|include
file|<X11/Xatom.h>
end_include
begin_comment
comment|//#define QT_NO_SHAPE
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|QT_NO_SHAPE
end_ifdef
begin_define
DECL|macro|XShapeCombineRegion
define|#
directive|define
name|XShapeCombineRegion
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|,
name|c
parameter_list|,
name|d
parameter_list|,
name|e
parameter_list|,
name|f
parameter_list|,
name|g
parameter_list|)
end_define
begin_define
DECL|macro|XShapeCombineMask
define|#
directive|define
name|XShapeCombineMask
parameter_list|(
name|a
parameter_list|,
name|b
parameter_list|,
name|c
parameter_list|,
name|d
parameter_list|,
name|e
parameter_list|,
name|f
parameter_list|,
name|g
parameter_list|)
end_define
begin_else
else|#
directive|else
end_else
begin_include
include|#
directive|include
file|<X11/extensions/shape.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_SHAPE
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_TABLET
argument_list|)
end_if
begin_include
include|#
directive|include
file|<X11/extensions/XInput.h>
end_include
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_OS_IRIX
argument_list|)
end_if
begin_include
include|#
directive|include
file|<X11/extensions/SGIMisc.h>
end_include
begin_include
include|#
directive|include
file|<wacom.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_TABLET
end_comment
begin_comment
comment|// #define QT_NO_XINERAMA
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XINERAMA
end_ifndef
begin_if
if|#
directive|if
literal|0
end_if
begin_comment
comment|// ### Xsun, but how to detect it?
end_comment
begin_comment
comment|// Xinerama is only supported in Solaris 7 with patches 107648/108376 and
end_comment
begin_comment
comment|// Solaris 8 or above which introduce the X11R6.4 Xserver.
end_comment
begin_comment
comment|// To switch the Xinerama functionality on, you need to add the "+xinerama"
end_comment
begin_comment
comment|// argument to the Xsun start line.
end_comment
begin_comment
comment|// At least Solaris 7 and 8 are missing Xinerama system headers and function
end_comment
begin_comment
comment|// declarations (bug 4284701).
end_comment
begin_comment
comment|// The Xinerama API is not documented. In theory it could change but it
end_comment
begin_comment
comment|// probably won't because Sun are using it in at least dtlogin (bug 4221829).
end_comment
begin_else
unit|extern "C" Bool XPanoramiXQueryExtension(     Display*,     int*,     int* ); extern "C" Status XPanoramiXQueryVersion(     Display*,     int*,     int* ); extern "C" Status XPanoramiXGetState(     Display*,     Drawable,     XPanoramiXInfo* ); extern "C" Status XPanoramiXGetScreenCount(     Display *,     Drawable,     XPanoramiXInfo* ); extern "C" Status XPanoramiXGetScreenSize(     Display*,     Drawable,     int,     XPanoramiXInfo* );
else|#
directive|else
end_else
begin_comment
comment|// XFree86
end_comment
begin_comment
comment|// XFree86 does not C++ify Xinerama (at least up to XFree86 4.0.3).
end_comment
begin_extern
extern|extern
literal|"C"
block|{
include|#
directive|include
file|<X11/extensions/Xinerama.h>
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XINERAMA
end_comment
begin_comment
comment|// #define QT_NO_XRANDR
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XRANDR
end_ifndef
begin_include
include|#
directive|include
file|<X11/extensions/Xrandr.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XRANDR
end_comment
begin_comment
comment|// #define QT_NO_XRENDER
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XRENDER
end_ifndef
begin_include
include|#
directive|include
file|<X11/extensions/Xrender.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XRENDER
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XSYNC
end_ifndef
begin_extern
extern|extern
literal|"C"
block|{
include|#
directive|include
file|"X11/extensions/sync.h"
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// #define QT_NO_XKB
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XKB
end_ifndef
begin_include
include|#
directive|include
file|<X11/XKBlib.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XKB
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|XlibSpecificationRelease
argument_list|)
end_if
begin_define
DECL|macro|X11R4
define|#
directive|define
name|X11R4
end_define
begin_typedef
DECL|typedef|XPointer
typedef|typedef
name|char
modifier|*
name|XPointer
typedef|;
end_typedef
begin_else
else|#
directive|else
end_else
begin_undef
DECL|macro|X11R4
undef|#
directive|undef
name|X11R4
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// #define QT_NO_XIM
end_comment
begin_if
if|#
directive|if
name|defined
argument_list|(
name|X11R4
argument_list|)
end_if
begin_comment
comment|// X11R4 does not have XIM
end_comment
begin_define
DECL|macro|QT_NO_XIM
define|#
directive|define
name|QT_NO_XIM
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_OS_OSF
argument_list|)
operator|&&
operator|(
name|XlibSpecificationRelease
operator|<
literal|6
operator|)
end_elif
begin_comment
comment|// broken in Xlib up to OSF/1 3.2
end_comment
begin_define
DECL|macro|QT_NO_XIM
define|#
directive|define
name|QT_NO_XIM
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_OS_AIX
argument_list|)
end_elif
begin_comment
comment|// broken in Xlib up to what version of AIX?
end_comment
begin_define
DECL|macro|QT_NO_XIM
define|#
directive|define
name|QT_NO_XIM
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|QT_NO_DEBUG
argument_list|)
operator|&&
name|defined
argument_list|(
name|Q_OS_IRIX
argument_list|)
end_elif
begin_comment
comment|// XmbLookupString broken on IRIX
end_comment
begin_comment
comment|// XCreateIC broken when compiling -64 on IRIX 6.5.2
end_comment
begin_define
DECL|macro|QT_NO_XIM
define|#
directive|define
name|QT_NO_XIM
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_OS_HPUX
argument_list|)
operator|&&
name|defined
argument_list|(
name|__LP64__
argument_list|)
end_elif
begin_comment
comment|// XCreateIC broken when compiling 64-bit ELF on HP-UX 11.0
end_comment
begin_define
DECL|macro|QT_NO_XIM
define|#
directive|define
name|QT_NO_XIM
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|Q_OS_SCO
argument_list|)
end_elif
begin_comment
comment|// ### suggested by user...
end_comment
begin_comment
comment|// ### #define QT_NO_XIM
end_comment
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XIM
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XFIXES
end_ifndef
begin_typedef
DECL|typedef|PtrXFixesQueryExtension
typedef|typedef
name|Bool
function_decl|(
modifier|*
name|PtrXFixesQueryExtension
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXFixesQueryVersion
typedef|typedef
name|Status
function_decl|(
modifier|*
name|PtrXFixesQueryVersion
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXFixesSetCursorName
typedef|typedef
name|void
function_decl|(
modifier|*
name|PtrXFixesSetCursorName
function_decl|)
parameter_list|(
name|Display
modifier|*
name|dpy
parameter_list|,
name|Cursor
name|cursor
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXFixesSelectSelectionInput
typedef|typedef
name|void
function_decl|(
modifier|*
name|PtrXFixesSelectSelectionInput
function_decl|)
parameter_list|(
name|Display
modifier|*
name|dpy
parameter_list|,
name|Window
name|win
parameter_list|,
name|Atom
name|selection
parameter_list|,
name|unsigned
name|long
name|eventMask
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XFIXES
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XCURSOR
end_ifndef
begin_include
include|#
directive|include
file|<X11/Xcursor/Xcursor.h>
end_include
begin_typedef
DECL|typedef|PtrXcursorLibraryLoadCursor
typedef|typedef
name|Cursor
function_decl|(
modifier|*
name|PtrXcursorLibraryLoadCursor
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XCURSOR
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XINERAMA
end_ifndef
begin_typedef
DECL|typedef|PtrXineramaQueryExtension
typedef|typedef
name|Bool
function_decl|(
modifier|*
name|PtrXineramaQueryExtension
function_decl|)
parameter_list|(
name|Display
modifier|*
name|dpy
parameter_list|,
name|int
modifier|*
name|event_base
parameter_list|,
name|int
modifier|*
name|error_base
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXineramaIsActive
typedef|typedef
name|Bool
function_decl|(
modifier|*
name|PtrXineramaIsActive
function_decl|)
parameter_list|(
name|Display
modifier|*
name|dpy
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXineramaQueryScreens
typedef|typedef
name|XineramaScreenInfo
modifier|*
function_decl|(
modifier|*
name|PtrXineramaQueryScreens
function_decl|)
parameter_list|(
name|Display
modifier|*
name|dpy
parameter_list|,
name|int
modifier|*
name|number
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XINERAMA
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XRANDR
end_ifndef
begin_typedef
DECL|typedef|PtrXRRSelectInput
typedef|typedef
name|void
function_decl|(
modifier|*
name|PtrXRRSelectInput
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|Window
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXRRUpdateConfiguration
typedef|typedef
name|int
function_decl|(
modifier|*
name|PtrXRRUpdateConfiguration
function_decl|)
parameter_list|(
name|XEvent
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXRRRootToScreen
typedef|typedef
name|int
function_decl|(
modifier|*
name|PtrXRRRootToScreen
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|Window
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXRRQueryExtension
typedef|typedef
name|Bool
function_decl|(
modifier|*
name|PtrXRRQueryExtension
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXRRSizes
typedef|typedef
name|XRRScreenSize
modifier|*
function_decl|(
modifier|*
name|PtrXRRSizes
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|int
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XRANDR
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XINPUT
end_ifndef
begin_typedef
DECL|typedef|PtrXCloseDevice
typedef|typedef
name|int
function_decl|(
modifier|*
name|PtrXCloseDevice
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|XDevice
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXListInputDevices
typedef|typedef
name|XDeviceInfo
modifier|*
function_decl|(
modifier|*
name|PtrXListInputDevices
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXOpenDevice
typedef|typedef
name|XDevice
modifier|*
function_decl|(
modifier|*
name|PtrXOpenDevice
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|XID
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXFreeDeviceList
typedef|typedef
name|void
function_decl|(
modifier|*
name|PtrXFreeDeviceList
function_decl|)
parameter_list|(
name|XDeviceInfo
modifier|*
parameter_list|)
function_decl|;
end_typedef
begin_typedef
DECL|typedef|PtrXSelectExtensionEvent
typedef|typedef
name|int
function_decl|(
modifier|*
name|PtrXSelectExtensionEvent
function_decl|)
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|Window
parameter_list|,
name|XEventClass
modifier|*
parameter_list|,
name|int
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_XINPUT
end_comment
begin_comment
comment|/*  * Solaris patch 108652-47 and higher fixes crases in  * XRegisterIMInstantiateCallback, but the function doesn't seem to  * work.  *  * Instead, we disabled R6 input, and open the input method  * immediately at application start.  */
end_comment
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_XIM
argument_list|)
operator|&&
operator|(
name|XlibSpecificationRelease
operator|>=
literal|6
operator|)
operator|&&
expr|\
operator|!
name|defined
argument_list|(
name|Q_OS_SOLARIS
argument_list|)
end_if
begin_define
DECL|macro|USE_X11R6_XIM
define|#
directive|define
name|USE_X11R6_XIM
end_define
begin_comment
comment|//######### XFree86 has wrong declarations for XRegisterIMInstantiateCallback
end_comment
begin_comment
comment|//######### and XUnregisterIMInstantiateCallback in at least version 3.3.2.
end_comment
begin_comment
comment|//######### Many old X11R6 header files lack XSetIMValues.
end_comment
begin_comment
comment|//######### Therefore, we have to declare these functions ourselves.
end_comment
begin_extern
extern|extern
literal|"C"
name|Bool
name|XRegisterIMInstantiateCallback
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|struct
name|_XrmHashBucketRec
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|XIMProc
parameter_list|,
comment|//XFree86 has XIDProc, which has to be wrong
name|XPointer
parameter_list|)
function_decl|;
end_extern
begin_extern
extern|extern
literal|"C"
name|Bool
name|XUnregisterIMInstantiateCallback
parameter_list|(
name|Display
modifier|*
parameter_list|,
name|struct
name|_XrmHashBucketRec
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|,
name|XIMProc
parameter_list|,
comment|//XFree86 has XIDProc, which has to be wrong
name|XPointer
parameter_list|)
function_decl|;
end_extern
begin_extern
extern|extern
literal|"C"
name|char
modifier|*
name|XSetIMValues
parameter_list|(
name|XIM
comment|/* im */
parameter_list|,
modifier|...
parameter_list|)
function_decl|;
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_FONTCONFIG
end_ifndef
begin_include
include|#
directive|include
file|<fontconfig/fontconfig.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XIM
end_ifndef
begin_comment
comment|// some platforms (eg. Solaris 2.51) don't have these defines in Xlib.h
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|XNResetState
end_ifndef
begin_define
DECL|macro|XNResetState
define|#
directive|define
name|XNResetState
value|"resetState"
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|XIMPreserveState
end_ifndef
begin_define
DECL|macro|XIMPreserveState
define|#
directive|define
name|XIMPreserveState
value|(1L<<1)
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|X11R4
end_ifndef
begin_include
include|#
directive|include
file|<X11/Xlocale.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// X11R4
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_MITSHM
end_ifndef
begin_include
include|#
directive|include
file|<X11/extensions/XShm.h>
end_include
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_MITSHM
end_comment
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QWidget
name|class
name|QWidget
decl_stmt|;
end_decl_stmt
begin_struct
DECL|struct|QX11InfoData
struct|struct
name|QX11InfoData
block|{
DECL|member|ref
name|uint
name|ref
decl_stmt|;
DECL|member|screen
name|int
name|screen
decl_stmt|;
DECL|member|dpiX
name|int
name|dpiX
decl_stmt|;
DECL|member|dpiY
name|int
name|dpiY
decl_stmt|;
DECL|member|depth
name|int
name|depth
decl_stmt|;
DECL|member|cells
name|int
name|cells
decl_stmt|;
DECL|member|colormap
name|Colormap
name|colormap
decl_stmt|;
DECL|member|visual
name|Visual
modifier|*
name|visual
decl_stmt|;
DECL|member|defaultColormap
name|bool
name|defaultColormap
decl_stmt|;
DECL|member|defaultVisual
name|bool
name|defaultVisual
decl_stmt|;
DECL|member|subpixel
name|int
name|subpixel
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
DECL|variable|QDrag
name|class
name|QDrag
decl_stmt|;
end_decl_stmt
begin_struct
DECL|struct|QXdndDropTransaction
struct|struct
name|QXdndDropTransaction
block|{
DECL|member|timestamp
name|Time
name|timestamp
decl_stmt|;
DECL|member|target
name|Window
name|target
decl_stmt|;
DECL|member|proxy_target
name|Window
name|proxy_target
decl_stmt|;
DECL|member|targetWidget
name|QWidget
modifier|*
name|targetWidget
decl_stmt|;
DECL|member|embedding_widget
name|QWidget
modifier|*
name|embedding_widget
decl_stmt|;
DECL|member|object
name|QDrag
modifier|*
name|object
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
DECL|variable|QMimeData
name|class
name|QMimeData
decl_stmt|;
end_decl_stmt
begin_struct_decl
struct_decl|struct
name|QX11Data
struct_decl|;
end_struct_decl
begin_decl_stmt
specifier|extern
name|Q_GUI_EXPORT
name|QX11Data
modifier|*
name|qt_x11Data
decl_stmt|;
end_decl_stmt
begin_enum
DECL|enum|DesktopEnvironment
enum|enum
name|DesktopEnvironment
block|{
DECL|enumerator|DE_UNKNOWN
name|DE_UNKNOWN
block|,
DECL|enumerator|DE_KDE
name|DE_KDE
block|,
DECL|enumerator|DE_GNOME
name|DE_GNOME
block|,
DECL|enumerator|DE_CDE
name|DE_CDE
block|,
DECL|enumerator|DE_MEEGO_COMPOSITOR
name|DE_MEEGO_COMPOSITOR
block|,
DECL|enumerator|DE_4DWM
name|DE_4DWM
block|}
enum|;
end_enum
begin_struct
DECL|struct|QX11Data
struct|struct
name|QX11Data
block|{
specifier|static
name|Qt
operator|::
name|KeyboardModifiers
name|translateModifiers
argument_list|(
argument|int s
argument_list|)
expr_stmt|;
name|Window
name|findClientWindow
parameter_list|(
name|Window
parameter_list|,
name|Atom
parameter_list|,
name|bool
parameter_list|)
function_decl|;
comment|// from qclipboard_x11.cpp
name|bool
name|clipboardWaitForEvent
parameter_list|(
name|Window
name|win
parameter_list|,
name|int
name|type
parameter_list|,
name|XEvent
modifier|*
name|event
parameter_list|,
name|int
name|timeout
parameter_list|)
function_decl|;
name|bool
name|clipboardReadProperty
parameter_list|(
name|Window
name|win
parameter_list|,
name|Atom
name|property
parameter_list|,
name|bool
name|deleteProperty
parameter_list|,
name|QByteArray
modifier|*
name|buffer
parameter_list|,
name|int
modifier|*
name|size
parameter_list|,
name|Atom
modifier|*
name|type
parameter_list|,
name|int
modifier|*
name|format
parameter_list|)
function_decl|;
name|QByteArray
name|clipboardReadIncrementalProperty
parameter_list|(
name|Window
name|win
parameter_list|,
name|Atom
name|property
parameter_list|,
name|int
name|nbytes
parameter_list|,
name|bool
name|nullterm
parameter_list|)
function_decl|;
comment|// from qdnd_x11.cpp
name|bool
name|dndEnable
parameter_list|(
name|QWidget
modifier|*
name|w
parameter_list|,
name|bool
name|on
parameter_list|)
function_decl|;
specifier|static
name|void
name|xdndSetup
parameter_list|()
function_decl|;
name|void
name|xdndHandleEnter
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
specifier|const
name|XEvent
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|xdndHandlePosition
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
specifier|const
name|XEvent
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|xdndHandleStatus
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
specifier|const
name|XEvent
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|xdndHandleLeave
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
specifier|const
name|XEvent
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|xdndHandleDrop
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
specifier|const
name|XEvent
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|xdndHandleFinished
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
specifier|const
name|XEvent
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|xdndHandleSelectionRequest
parameter_list|(
specifier|const
name|XSelectionRequestEvent
modifier|*
parameter_list|)
function_decl|;
specifier|static
name|bool
name|xdndHandleBadwindow
parameter_list|()
function_decl|;
name|QByteArray
name|xdndAtomToString
parameter_list|(
name|Atom
name|a
parameter_list|)
function_decl|;
name|Atom
name|xdndStringToAtom
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
name|QString
name|xdndMimeAtomToString
parameter_list|(
name|Atom
name|a
parameter_list|)
function_decl|;
name|Atom
name|xdndMimeStringToAtom
parameter_list|(
specifier|const
name|QString
modifier|&
name|mimeType
parameter_list|)
function_decl|;
name|QStringList
name|xdndMimeFormatsForAtom
parameter_list|(
name|Atom
name|a
parameter_list|)
function_decl|;
name|bool
name|xdndMimeDataForAtom
parameter_list|(
name|Atom
name|a
parameter_list|,
name|QMimeData
modifier|*
name|mimeData
parameter_list|,
name|QByteArray
modifier|*
name|data
parameter_list|,
name|Atom
modifier|*
name|atomFormat
parameter_list|,
name|int
modifier|*
name|dataFormat
parameter_list|)
function_decl|;
name|QList
operator|<
name|Atom
operator|>
name|xdndMimeAtomsForFormat
argument_list|(
specifier|const
name|QString
operator|&
name|format
argument_list|)
expr_stmt|;
name|QVariant
name|xdndMimeConvertToFormat
argument_list|(
name|Atom
name|a
argument_list|,
specifier|const
name|QByteArray
operator|&
name|data
argument_list|,
specifier|const
name|QString
operator|&
name|format
argument_list|,
name|QVariant
operator|::
name|Type
name|requestedType
argument_list|,
specifier|const
name|QByteArray
operator|&
name|encoding
argument_list|)
decl_stmt|;
name|Atom
name|xdndMimeAtomForFormat
argument_list|(
specifier|const
name|QString
operator|&
name|format
argument_list|,
name|QVariant
operator|::
name|Type
name|requestedType
argument_list|,
specifier|const
name|QList
operator|<
name|Atom
operator|>
operator|&
name|atoms
argument_list|,
name|QByteArray
operator|*
name|requestedEncoding
argument_list|)
decl_stmt|;
DECL|member|dndDropTransactions
name|QList
operator|<
name|QXdndDropTransaction
operator|>
name|dndDropTransactions
expr_stmt|;
comment|// from qmotifdnd_x11.cpp
name|void
name|motifdndHandle
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
specifier|const
name|XEvent
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|void
name|motifdndEnable
parameter_list|(
name|QWidget
modifier|*
parameter_list|,
name|bool
parameter_list|)
function_decl|;
name|QVariant
name|motifdndObtainData
parameter_list|(
specifier|const
name|char
modifier|*
name|format
parameter_list|)
function_decl|;
name|QByteArray
name|motifdndFormat
parameter_list|(
name|int
name|n
parameter_list|)
function_decl|;
DECL|member|motifdnd_active
name|bool
name|motifdnd_active
decl_stmt|;
DECL|member|display
name|Display
modifier|*
name|display
decl_stmt|;
DECL|member|displayName
name|char
modifier|*
name|displayName
decl_stmt|;
DECL|member|foreignDisplay
name|bool
name|foreignDisplay
decl_stmt|;
comment|// current focus model
enum|enum
block|{
DECL|enumerator|FM_Unknown
name|FM_Unknown
init|=
operator|-
literal|1
block|,
DECL|enumerator|FM_Other
name|FM_Other
init|=
literal|0
block|,
DECL|enumerator|FM_PointerRoot
name|FM_PointerRoot
init|=
literal|1
block|}
enum|;
DECL|member|focus_model
name|int
name|focus_model
decl_stmt|;
comment|// true if Qt is compiled w/ RANDR support and RANDR is supported on the connected Display
DECL|member|use_xrandr
name|bool
name|use_xrandr
decl_stmt|;
DECL|member|xrandr_major
name|int
name|xrandr_major
decl_stmt|;
DECL|member|xrandr_eventbase
name|int
name|xrandr_eventbase
decl_stmt|;
DECL|member|xrandr_errorbase
name|int
name|xrandr_errorbase
decl_stmt|;
comment|// true if Qt is compiled w/ RENDER support and RENDER is supported on the connected Display
DECL|member|use_xrender
name|bool
name|use_xrender
decl_stmt|;
DECL|member|xrender_major
name|int
name|xrender_major
decl_stmt|;
DECL|member|xrender_version
name|int
name|xrender_version
decl_stmt|;
comment|// true if Qt is compiled w/ XFIXES support and XFIXES is supported on the connected Display
DECL|member|use_xfixes
name|bool
name|use_xfixes
decl_stmt|;
DECL|member|xfixes_major
name|int
name|xfixes_major
decl_stmt|;
DECL|member|xfixes_eventbase
name|int
name|xfixes_eventbase
decl_stmt|;
DECL|member|xfixes_errorbase
name|int
name|xfixes_errorbase
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_XFIXES
DECL|member|ptrXFixesQueryExtension
name|PtrXFixesQueryExtension
name|ptrXFixesQueryExtension
decl_stmt|;
DECL|member|ptrXFixesQueryVersion
name|PtrXFixesQueryVersion
name|ptrXFixesQueryVersion
decl_stmt|;
DECL|member|ptrXFixesSetCursorName
name|PtrXFixesSetCursorName
name|ptrXFixesSetCursorName
decl_stmt|;
DECL|member|ptrXFixesSelectSelectionInput
name|PtrXFixesSelectSelectionInput
name|ptrXFixesSelectSelectionInput
decl_stmt|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|QT_NO_XINPUT
DECL|member|ptrXCloseDevice
name|PtrXCloseDevice
name|ptrXCloseDevice
decl_stmt|;
DECL|member|ptrXListInputDevices
name|PtrXListInputDevices
name|ptrXListInputDevices
decl_stmt|;
DECL|member|ptrXOpenDevice
name|PtrXOpenDevice
name|ptrXOpenDevice
decl_stmt|;
DECL|member|ptrXFreeDeviceList
name|PtrXFreeDeviceList
name|ptrXFreeDeviceList
decl_stmt|;
DECL|member|ptrXSelectExtensionEvent
name|PtrXSelectExtensionEvent
name|ptrXSelectExtensionEvent
decl_stmt|;
endif|#
directive|endif
comment|// QT_NO_XINPUT
comment|// true if Qt is compiled w/ MIT-SHM support and MIT-SHM is supported on the connected Display
DECL|member|use_mitshm
name|bool
name|use_mitshm
decl_stmt|;
DECL|member|use_mitshm_pixmaps
name|bool
name|use_mitshm_pixmaps
decl_stmt|;
DECL|member|mitshm_major
name|int
name|mitshm_major
decl_stmt|;
comment|// true if Qt is compiled w/ Tablet support and we have a tablet.
DECL|member|use_xinput
name|bool
name|use_xinput
decl_stmt|;
DECL|member|xinput_major
name|int
name|xinput_major
decl_stmt|;
DECL|member|xinput_eventbase
name|int
name|xinput_eventbase
decl_stmt|;
DECL|member|xinput_errorbase
name|int
name|xinput_errorbase
decl_stmt|;
comment|// for XKEYBOARD support
DECL|member|use_xkb
name|bool
name|use_xkb
decl_stmt|;
DECL|member|xkb_major
name|int
name|xkb_major
decl_stmt|;
DECL|member|xkb_eventbase
name|int
name|xkb_eventbase
decl_stmt|;
DECL|member|xkb_errorbase
name|int
name|xkb_errorbase
decl_stmt|;
DECL|member|deferred_map
name|QList
operator|<
name|QWidget
operator|*
operator|>
name|deferred_map
expr_stmt|;
DECL|struct|ScrollInProgress
struct|struct
name|ScrollInProgress
block|{
DECL|member|id
name|long
name|id
decl_stmt|;
DECL|member|scrolled_widget
name|QWidget
modifier|*
name|scrolled_widget
decl_stmt|;
DECL|member|dx
DECL|member|dy
name|int
name|dx
decl_stmt|,
name|dy
decl_stmt|;
block|}
struct|;
DECL|member|sip_serial
name|long
name|sip_serial
decl_stmt|;
DECL|member|sip_list
name|QList
operator|<
name|ScrollInProgress
operator|>
name|sip_list
expr_stmt|;
comment|// window managers list of supported "stuff"
DECL|member|net_supported_list
name|Atom
modifier|*
name|net_supported_list
decl_stmt|;
comment|// list of virtual root windows
DECL|member|net_virtual_root_list
name|Window
modifier|*
name|net_virtual_root_list
decl_stmt|;
comment|// client leader window
DECL|member|wm_client_leader
name|Window
name|wm_client_leader
decl_stmt|;
DECL|member|screens
name|QX11InfoData
modifier|*
name|screens
decl_stmt|;
DECL|member|argbVisuals
name|Visual
modifier|*
modifier|*
name|argbVisuals
decl_stmt|;
DECL|member|argbColormaps
name|Colormap
modifier|*
name|argbColormaps
decl_stmt|;
DECL|member|screenCount
name|int
name|screenCount
decl_stmt|;
DECL|member|defaultScreen
name|int
name|defaultScreen
decl_stmt|;
DECL|member|time
name|Time
name|time
decl_stmt|;
DECL|member|userTime
name|Time
name|userTime
decl_stmt|;
DECL|member|default_im
name|QString
name|default_im
decl_stmt|;
comment|// starts to ignore bad window errors from X
DECL|function|ignoreBadwindow
specifier|static
specifier|inline
name|void
name|ignoreBadwindow
parameter_list|()
block|{
name|qt_x11Data
operator|->
name|ignore_badwindow
operator|=
name|true
expr_stmt|;
name|qt_x11Data
operator|->
name|seen_badwindow
operator|=
name|false
expr_stmt|;
block|}
comment|// ends ignoring bad window errors and returns whether an error had happened.
DECL|function|badwindow
specifier|static
specifier|inline
name|bool
name|badwindow
parameter_list|()
block|{
name|qt_x11Data
operator|->
name|ignore_badwindow
operator|=
name|false
expr_stmt|;
return|return
name|qt_x11Data
operator|->
name|seen_badwindow
return|;
block|}
DECL|member|ignore_badwindow
name|bool
name|ignore_badwindow
decl_stmt|;
DECL|member|seen_badwindow
name|bool
name|seen_badwindow
decl_stmt|;
comment|// options
DECL|member|visual_class
name|int
name|visual_class
decl_stmt|;
DECL|member|visual_id
name|int
name|visual_id
decl_stmt|;
DECL|member|color_count
name|int
name|color_count
decl_stmt|;
DECL|member|custom_cmap
name|bool
name|custom_cmap
decl_stmt|;
comment|// outside visual/colormap
DECL|member|visual
name|Visual
modifier|*
name|visual
decl_stmt|;
DECL|member|colormap
name|Colormap
name|colormap
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_XRENDER
DECL|enumerator|solid_fill_count
enum|enum
block|{
name|solid_fill_count
init|=
literal|16
block|}
enum|;
DECL|struct|SolidFills
struct|struct
name|SolidFills
block|{
DECL|member|color
name|XRenderColor
name|color
decl_stmt|;
DECL|member|screen
name|int
name|screen
decl_stmt|;
DECL|member|picture
name|Picture
name|picture
decl_stmt|;
block|}
DECL|member|solid_fills
name|solid_fills
index|[
name|solid_fill_count
index|]
struct|;
DECL|enumerator|pattern_fill_count
enum|enum
block|{
name|pattern_fill_count
init|=
literal|16
block|}
enum|;
DECL|struct|PatternFills
struct|struct
name|PatternFills
block|{
DECL|member|color
name|XRenderColor
name|color
decl_stmt|;
DECL|member|bg_color
name|XRenderColor
name|bg_color
decl_stmt|;
DECL|member|screen
name|int
name|screen
decl_stmt|;
DECL|member|style
name|int
name|style
decl_stmt|;
DECL|member|opaque
name|bool
name|opaque
decl_stmt|;
DECL|member|picture
name|Picture
name|picture
decl_stmt|;
block|}
DECL|member|pattern_fills
name|pattern_fills
index|[
name|pattern_fill_count
index|]
struct|;
name|Picture
name|getSolidFill
parameter_list|(
name|int
name|screen
parameter_list|,
specifier|const
name|QColor
modifier|&
name|c
parameter_list|)
function_decl|;
name|XRenderColor
name|preMultiply
parameter_list|(
specifier|const
name|QColor
modifier|&
name|c
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|member|has_fontconfig
name|bool
name|has_fontconfig
decl_stmt|;
DECL|member|fc_scale
name|qreal
name|fc_scale
decl_stmt|;
DECL|member|fc_antialias
name|bool
name|fc_antialias
decl_stmt|;
DECL|member|fc_hint_style
name|int
name|fc_hint_style
decl_stmt|;
DECL|member|startupId
name|char
modifier|*
name|startupId
decl_stmt|;
DECL|member|desktopEnvironment
name|DesktopEnvironment
name|desktopEnvironment
range|:
literal|8
decl_stmt|;
DECL|member|desktopVersion
name|uint
name|desktopVersion
range|:
literal|8
decl_stmt|;
comment|/* Used only for KDE */
comment|/* Warning: if you modify this list, modify the names of atoms in qapplication_x11.cpp as well! */
DECL|enum|X11Atom
enum|enum
name|X11Atom
block|{
comment|// window-manager<-> client protocols
DECL|enumerator|WM_PROTOCOLS
name|WM_PROTOCOLS
block|,
DECL|enumerator|WM_DELETE_WINDOW
name|WM_DELETE_WINDOW
block|,
DECL|enumerator|WM_TAKE_FOCUS
name|WM_TAKE_FOCUS
block|,
DECL|enumerator|_NET_WM_PING
name|_NET_WM_PING
block|,
DECL|enumerator|_NET_WM_CONTEXT_HELP
name|_NET_WM_CONTEXT_HELP
block|,
DECL|enumerator|_NET_WM_SYNC_REQUEST
name|_NET_WM_SYNC_REQUEST
block|,
DECL|enumerator|_NET_WM_SYNC_REQUEST_COUNTER
name|_NET_WM_SYNC_REQUEST_COUNTER
block|,
comment|// ICCCM window state
DECL|enumerator|WM_STATE
name|WM_STATE
block|,
DECL|enumerator|WM_CHANGE_STATE
name|WM_CHANGE_STATE
block|,
comment|// Session management
DECL|enumerator|WM_CLIENT_LEADER
name|WM_CLIENT_LEADER
block|,
DECL|enumerator|WM_WINDOW_ROLE
name|WM_WINDOW_ROLE
block|,
DECL|enumerator|SM_CLIENT_ID
name|SM_CLIENT_ID
block|,
comment|// Clipboard
DECL|enumerator|CLIPBOARD
name|CLIPBOARD
block|,
DECL|enumerator|INCR
name|INCR
block|,
DECL|enumerator|TARGETS
name|TARGETS
block|,
DECL|enumerator|MULTIPLE
name|MULTIPLE
block|,
DECL|enumerator|TIMESTAMP
name|TIMESTAMP
block|,
DECL|enumerator|SAVE_TARGETS
name|SAVE_TARGETS
block|,
DECL|enumerator|CLIP_TEMPORARY
name|CLIP_TEMPORARY
block|,
DECL|enumerator|_QT_SELECTION
name|_QT_SELECTION
block|,
DECL|enumerator|_QT_CLIPBOARD_SENTINEL
name|_QT_CLIPBOARD_SENTINEL
block|,
DECL|enumerator|_QT_SELECTION_SENTINEL
name|_QT_SELECTION_SENTINEL
block|,
DECL|enumerator|CLIPBOARD_MANAGER
name|CLIPBOARD_MANAGER
block|,
DECL|enumerator|RESOURCE_MANAGER
name|RESOURCE_MANAGER
block|,
DECL|enumerator|_XSETROOT_ID
name|_XSETROOT_ID
block|,
DECL|enumerator|_QT_SCROLL_DONE
name|_QT_SCROLL_DONE
block|,
DECL|enumerator|_QT_INPUT_ENCODING
name|_QT_INPUT_ENCODING
block|,
DECL|enumerator|_MOTIF_WM_HINTS
name|_MOTIF_WM_HINTS
block|,
DECL|enumerator|DTWM_IS_RUNNING
name|DTWM_IS_RUNNING
block|,
DECL|enumerator|ENLIGHTENMENT_DESKTOP
name|ENLIGHTENMENT_DESKTOP
block|,
DECL|enumerator|_DT_SAVE_MODE
name|_DT_SAVE_MODE
block|,
DECL|enumerator|_SGI_DESKS_MANAGER
name|_SGI_DESKS_MANAGER
block|,
comment|// EWMH (aka NETWM)
DECL|enumerator|_NET_SUPPORTED
name|_NET_SUPPORTED
block|,
DECL|enumerator|_NET_VIRTUAL_ROOTS
name|_NET_VIRTUAL_ROOTS
block|,
DECL|enumerator|_NET_WORKAREA
name|_NET_WORKAREA
block|,
DECL|enumerator|_NET_MOVERESIZE_WINDOW
name|_NET_MOVERESIZE_WINDOW
block|,
DECL|enumerator|_NET_WM_MOVERESIZE
name|_NET_WM_MOVERESIZE
block|,
DECL|enumerator|_NET_WM_NAME
name|_NET_WM_NAME
block|,
DECL|enumerator|_NET_WM_ICON_NAME
name|_NET_WM_ICON_NAME
block|,
DECL|enumerator|_NET_WM_ICON
name|_NET_WM_ICON
block|,
DECL|enumerator|_NET_WM_PID
name|_NET_WM_PID
block|,
DECL|enumerator|_NET_WM_WINDOW_OPACITY
name|_NET_WM_WINDOW_OPACITY
block|,
DECL|enumerator|_NET_WM_STATE
name|_NET_WM_STATE
block|,
DECL|enumerator|_NET_WM_STATE_ABOVE
name|_NET_WM_STATE_ABOVE
block|,
DECL|enumerator|_NET_WM_STATE_BELOW
name|_NET_WM_STATE_BELOW
block|,
DECL|enumerator|_NET_WM_STATE_FULLSCREEN
name|_NET_WM_STATE_FULLSCREEN
block|,
DECL|enumerator|_NET_WM_STATE_MAXIMIZED_HORZ
name|_NET_WM_STATE_MAXIMIZED_HORZ
block|,
DECL|enumerator|_NET_WM_STATE_MAXIMIZED_VERT
name|_NET_WM_STATE_MAXIMIZED_VERT
block|,
DECL|enumerator|_NET_WM_STATE_MODAL
name|_NET_WM_STATE_MODAL
block|,
DECL|enumerator|_NET_WM_STATE_STAYS_ON_TOP
name|_NET_WM_STATE_STAYS_ON_TOP
block|,
DECL|enumerator|_NET_WM_STATE_DEMANDS_ATTENTION
name|_NET_WM_STATE_DEMANDS_ATTENTION
block|,
DECL|enumerator|_NET_WM_USER_TIME
name|_NET_WM_USER_TIME
block|,
DECL|enumerator|_NET_WM_USER_TIME_WINDOW
name|_NET_WM_USER_TIME_WINDOW
block|,
DECL|enumerator|_NET_WM_FULL_PLACEMENT
name|_NET_WM_FULL_PLACEMENT
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE
name|_NET_WM_WINDOW_TYPE
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_DESKTOP
name|_NET_WM_WINDOW_TYPE_DESKTOP
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_DOCK
name|_NET_WM_WINDOW_TYPE_DOCK
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_TOOLBAR
name|_NET_WM_WINDOW_TYPE_TOOLBAR
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_MENU
name|_NET_WM_WINDOW_TYPE_MENU
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_UTILITY
name|_NET_WM_WINDOW_TYPE_UTILITY
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_SPLASH
name|_NET_WM_WINDOW_TYPE_SPLASH
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_DIALOG
name|_NET_WM_WINDOW_TYPE_DIALOG
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_DROPDOWN_MENU
name|_NET_WM_WINDOW_TYPE_DROPDOWN_MENU
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_POPUP_MENU
name|_NET_WM_WINDOW_TYPE_POPUP_MENU
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_TOOLTIP
name|_NET_WM_WINDOW_TYPE_TOOLTIP
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_NOTIFICATION
name|_NET_WM_WINDOW_TYPE_NOTIFICATION
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_COMBO
name|_NET_WM_WINDOW_TYPE_COMBO
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_DND
name|_NET_WM_WINDOW_TYPE_DND
block|,
DECL|enumerator|_NET_WM_WINDOW_TYPE_NORMAL
name|_NET_WM_WINDOW_TYPE_NORMAL
block|,
DECL|enumerator|_KDE_NET_WM_WINDOW_TYPE_OVERRIDE
name|_KDE_NET_WM_WINDOW_TYPE_OVERRIDE
block|,
DECL|enumerator|_KDE_NET_WM_FRAME_STRUT
name|_KDE_NET_WM_FRAME_STRUT
block|,
DECL|enumerator|_NET_STARTUP_INFO
name|_NET_STARTUP_INFO
block|,
DECL|enumerator|_NET_STARTUP_INFO_BEGIN
name|_NET_STARTUP_INFO_BEGIN
block|,
DECL|enumerator|_NET_SUPPORTING_WM_CHECK
name|_NET_SUPPORTING_WM_CHECK
block|,
DECL|enumerator|_NET_WM_CM_S0
name|_NET_WM_CM_S0
block|,
DECL|enumerator|_NET_SYSTEM_TRAY_VISUAL
name|_NET_SYSTEM_TRAY_VISUAL
block|,
DECL|enumerator|_NET_ACTIVE_WINDOW
name|_NET_ACTIVE_WINDOW
block|,
comment|// Property formats
DECL|enumerator|COMPOUND_TEXT
name|COMPOUND_TEXT
block|,
DECL|enumerator|TEXT
name|TEXT
block|,
DECL|enumerator|UTF8_STRING
name|UTF8_STRING
block|,
comment|// Xdnd
DECL|enumerator|XdndEnter
name|XdndEnter
block|,
DECL|enumerator|XdndPosition
name|XdndPosition
block|,
DECL|enumerator|XdndStatus
name|XdndStatus
block|,
DECL|enumerator|XdndLeave
name|XdndLeave
block|,
DECL|enumerator|XdndDrop
name|XdndDrop
block|,
DECL|enumerator|XdndFinished
name|XdndFinished
block|,
DECL|enumerator|XdndTypelist
name|XdndTypelist
block|,
DECL|enumerator|XdndActionList
name|XdndActionList
block|,
DECL|enumerator|XdndSelection
name|XdndSelection
block|,
DECL|enumerator|XdndAware
name|XdndAware
block|,
DECL|enumerator|XdndProxy
name|XdndProxy
block|,
DECL|enumerator|XdndActionCopy
name|XdndActionCopy
block|,
DECL|enumerator|XdndActionLink
name|XdndActionLink
block|,
DECL|enumerator|XdndActionMove
name|XdndActionMove
block|,
DECL|enumerator|XdndActionPrivate
name|XdndActionPrivate
block|,
comment|// Motif DND
DECL|enumerator|_MOTIF_DRAG_AND_DROP_MESSAGE
name|_MOTIF_DRAG_AND_DROP_MESSAGE
block|,
DECL|enumerator|_MOTIF_DRAG_INITIATOR_INFO
name|_MOTIF_DRAG_INITIATOR_INFO
block|,
DECL|enumerator|_MOTIF_DRAG_RECEIVER_INFO
name|_MOTIF_DRAG_RECEIVER_INFO
block|,
DECL|enumerator|_MOTIF_DRAG_WINDOW
name|_MOTIF_DRAG_WINDOW
block|,
DECL|enumerator|_MOTIF_DRAG_TARGETS
name|_MOTIF_DRAG_TARGETS
block|,
DECL|enumerator|XmTRANSFER_SUCCESS
name|XmTRANSFER_SUCCESS
block|,
DECL|enumerator|XmTRANSFER_FAILURE
name|XmTRANSFER_FAILURE
block|,
comment|// Xkb
DECL|enumerator|_XKB_RULES_NAMES
name|_XKB_RULES_NAMES
block|,
comment|// XEMBED
DECL|enumerator|_XEMBED
name|_XEMBED
block|,
DECL|enumerator|_XEMBED_INFO
name|_XEMBED_INFO
block|,
DECL|enumerator|XWacomStylus
name|XWacomStylus
block|,
DECL|enumerator|XWacomCursor
name|XWacomCursor
block|,
DECL|enumerator|XWacomEraser
name|XWacomEraser
block|,
DECL|enumerator|XTabletStylus
name|XTabletStylus
block|,
DECL|enumerator|XTabletEraser
name|XTabletEraser
block|,
DECL|enumerator|NPredefinedAtoms
name|NPredefinedAtoms
block|,
DECL|enumerator|_QT_SETTINGS_TIMESTAMP
name|_QT_SETTINGS_TIMESTAMP
init|=
name|NPredefinedAtoms
block|,
DECL|enumerator|NAtoms
name|NAtoms
block|}
enum|;
DECL|member|atoms
name|Atom
name|atoms
index|[
name|NAtoms
index|]
decl_stmt|;
name|bool
name|isSupportedByWM
parameter_list|(
name|Atom
name|atom
parameter_list|)
function_decl|;
DECL|member|compositingManagerRunning
name|bool
name|compositingManagerRunning
decl_stmt|;
ifndef|#
directive|ifndef
name|QT_NO_XCURSOR
DECL|member|ptrXcursorLibraryLoadCursor
name|PtrXcursorLibraryLoadCursor
name|ptrXcursorLibraryLoadCursor
decl_stmt|;
endif|#
directive|endif
comment|// QT_NO_XCURSOR
ifndef|#
directive|ifndef
name|QT_NO_XINERAMA
DECL|member|ptrXineramaQueryExtension
name|PtrXineramaQueryExtension
name|ptrXineramaQueryExtension
decl_stmt|;
DECL|member|ptrXineramaIsActive
name|PtrXineramaIsActive
name|ptrXineramaIsActive
decl_stmt|;
DECL|member|ptrXineramaQueryScreens
name|PtrXineramaQueryScreens
name|ptrXineramaQueryScreens
decl_stmt|;
endif|#
directive|endif
comment|// QT_NO_XINERAMA
ifndef|#
directive|ifndef
name|QT_NO_XRANDR
DECL|member|ptrXRRSelectInput
name|PtrXRRSelectInput
name|ptrXRRSelectInput
decl_stmt|;
DECL|member|ptrXRRUpdateConfiguration
name|PtrXRRUpdateConfiguration
name|ptrXRRUpdateConfiguration
decl_stmt|;
DECL|member|ptrXRRRootToScreen
name|PtrXRRRootToScreen
name|ptrXRRRootToScreen
decl_stmt|;
DECL|member|ptrXRRQueryExtension
name|PtrXRRQueryExtension
name|ptrXRRQueryExtension
decl_stmt|;
DECL|member|ptrXRRSizes
name|PtrXRRSizes
name|ptrXRRSizes
decl_stmt|;
endif|#
directive|endif
comment|// QT_NO_XRANDR
block|}
struct|;
end_struct
begin_decl_stmt
specifier|extern
name|QX11Data
modifier|*
name|qt_x11Data
decl_stmt|;
end_decl_stmt
begin_define
DECL|macro|ATOM
define|#
directive|define
name|ATOM
parameter_list|(
name|x
parameter_list|)
value|qt_x11Data->atoms[QX11Data::x]
end_define
begin_define
DECL|macro|X11
define|#
directive|define
name|X11
value|qt_x11Data
end_define
begin_comment
comment|// rename a couple of X defines to get rid of name clashes
end_comment
begin_comment
comment|// resolve the conflict between X11's FocusIn and QEvent::FocusIn
end_comment
begin_enum
enum|enum
block|{
DECL|enumerator|XFocusOut
name|XFocusOut
init|=
name|FocusOut
block|,
DECL|enumerator|XFocusIn
name|XFocusIn
init|=
name|FocusIn
block|,
DECL|enumerator|XKeyPress
name|XKeyPress
init|=
name|KeyPress
block|,
DECL|enumerator|XKeyRelease
name|XKeyRelease
init|=
name|KeyRelease
block|,
DECL|enumerator|XNone
name|XNone
init|=
name|None
block|,
DECL|enumerator|XRevertToParent
name|XRevertToParent
init|=
name|RevertToParent
block|,
DECL|enumerator|XGrayScale
name|XGrayScale
init|=
name|GrayScale
block|,
DECL|enumerator|XCursorShape
name|XCursorShape
init|=
name|CursorShape
block|}
enum|;
end_enum
begin_undef
DECL|macro|FocusOut
undef|#
directive|undef
name|FocusOut
end_undef
begin_undef
DECL|macro|FocusIn
undef|#
directive|undef
name|FocusIn
end_undef
begin_undef
DECL|macro|KeyPress
undef|#
directive|undef
name|KeyPress
end_undef
begin_undef
DECL|macro|KeyRelease
undef|#
directive|undef
name|KeyRelease
end_undef
begin_undef
DECL|macro|None
undef|#
directive|undef
name|None
end_undef
begin_undef
DECL|macro|RevertToParent
undef|#
directive|undef
name|RevertToParent
end_undef
begin_undef
DECL|macro|GrayScale
undef|#
directive|undef
name|GrayScale
end_undef
begin_undef
DECL|macro|CursorShape
undef|#
directive|undef
name|CursorShape
end_undef
begin_ifdef
ifdef|#
directive|ifdef
name|FontChange
end_ifdef
begin_undef
DECL|macro|FontChange
undef|#
directive|undef
name|FontChange
end_undef
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|XPoint
argument_list|,
name|Q_PRIMITIVE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|XRectangle
argument_list|,
name|Q_PRIMITIVE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|XChar2b
argument_list|,
name|Q_PRIMITIVE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_XRENDER
end_ifndef
begin_expr_stmt
name|Q_DECLARE_TYPEINFO
argument_list|(
name|XGlyphElt32
argument_list|,
name|Q_PRIMITIVE_TYPE
argument_list|)
expr_stmt|;
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_X11_P_H
end_comment
end_unit
