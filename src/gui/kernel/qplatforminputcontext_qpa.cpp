begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|<qplatforminputcontext_qpa.h>
end_include
begin_constructor
DECL|function|QPlatformInputContext
name|QPlatformInputContext
operator|::
name|QPlatformInputContext
parameter_list|()
block|{ }
end_constructor
begin_function
DECL|function|reset
name|void
name|QPlatformInputContext
operator|::
name|reset
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|update
name|void
name|QPlatformInputContext
operator|::
name|update
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|mouseHandler
name|void
name|QPlatformInputContext
operator|::
name|mouseHandler
parameter_list|(
name|int
parameter_list|,
name|QMouseEvent
modifier|*
name|event
parameter_list|)
block|{
comment|// Default behavior for simple ephemeral input contexts. Some
comment|// complex input contexts should not be reset here.
if|if
condition|(
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|MouseButtonPress
operator|||
name|event
operator|->
name|type
argument_list|()
operator|==
name|QEvent
operator|::
name|MouseButtonDblClick
condition|)
name|reset
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|focusObject
name|QObject
modifier|*
name|QPlatformInputContext
operator|::
name|focusObject
parameter_list|()
specifier|const
block|{
return|return
name|focus
operator|.
name|data
argument_list|()
return|;
block|}
end_function
begin_function
DECL|function|setFocusObject
name|void
name|QPlatformInputContext
operator|::
name|setFocusObject
parameter_list|(
name|QObject
modifier|*
name|o
parameter_list|)
block|{
name|focus
operator|=
name|o
expr_stmt|;
block|}
end_function
end_unit
