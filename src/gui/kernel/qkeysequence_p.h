begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: Nokia Corporation (qt-info@nokia.com) ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QKEYSEQUENCE_P_H
end_ifndef
begin_define
DECL|macro|QKEYSEQUENCE_P_H
define|#
directive|define
name|QKEYSEQUENCE_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of qapplication_*.cpp, qwidget*.cpp and qfiledialog.cpp.  This header
end_comment
begin_comment
comment|// file may change from version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qkeysequence.h"
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_SHORTCUT
end_ifndef
begin_struct
DECL|struct|QKeyBinding
struct|struct
name|Q_AUTOTEST_EXPORT
name|QKeyBinding
block|{
DECL|member|standardKey
name|QKeySequence
operator|::
name|StandardKey
name|standardKey
expr_stmt|;
DECL|member|priority
name|uchar
name|priority
decl_stmt|;
DECL|member|shortcut
name|uint
name|shortcut
decl_stmt|;
DECL|member|platform
name|uint
name|platform
decl_stmt|;
block|}
struct|;
end_struct
begin_decl_stmt
name|class
name|Q_AUTOTEST_EXPORT
name|QKeySequencePrivate
block|{
name|public
label|:
specifier|inline
name|QKeySequencePrivate
argument_list|()
operator|:
name|ref
argument_list|(
literal|1
argument_list|)
block|{
name|key
index|[
literal|0
index|]
operator|=
name|key
index|[
literal|1
index|]
operator|=
name|key
index|[
literal|2
index|]
operator|=
name|key
index|[
literal|3
index|]
operator|=
literal|0
block|;     }
specifier|inline
name|QKeySequencePrivate
argument_list|(
specifier|const
name|QKeySequencePrivate
operator|&
name|copy
argument_list|)
operator|:
name|ref
argument_list|(
literal|1
argument_list|)
block|{
name|key
index|[
literal|0
index|]
operator|=
name|copy
operator|.
name|key
index|[
literal|0
index|]
block|;
name|key
index|[
literal|1
index|]
operator|=
name|copy
operator|.
name|key
index|[
literal|1
index|]
block|;
name|key
index|[
literal|2
index|]
operator|=
name|copy
operator|.
name|key
index|[
literal|2
index|]
block|;
name|key
index|[
literal|3
index|]
operator|=
name|copy
operator|.
name|key
index|[
literal|3
index|]
block|;     }
name|QAtomicInt
name|ref
expr_stmt|;
name|int
name|key
index|[
literal|4
index|]
decl_stmt|;
specifier|static
name|QString
name|encodeString
argument_list|(
name|int
name|key
argument_list|,
name|QKeySequence
operator|::
name|SequenceFormat
name|format
argument_list|)
decl_stmt|;
specifier|static
name|int
name|decodeString
argument_list|(
specifier|const
name|QString
operator|&
name|keyStr
argument_list|,
name|QKeySequence
operator|::
name|SequenceFormat
name|format
argument_list|)
decl_stmt|;
specifier|static
specifier|const
name|QKeyBinding
name|keyBindings
index|[]
decl_stmt|;
specifier|static
specifier|const
name|uint
name|numberOfKeyBindings
decl_stmt|;
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_SHORTCUT
end_comment
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|//QKEYSEQUENCE_P_H
end_comment
end_unit
