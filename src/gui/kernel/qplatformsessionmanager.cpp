begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Samuel Gaist<samuel.gaist@edeltech.ch> ** Copyright (C) 2013 Teo Mrnjavac<teo@kde.org> ** Copyright (C) 2016 The Qt Company Ltd. ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qplatformsessionmanager.h"
end_include
begin_include
include|#
directive|include
file|"qguiapplication_p.h"
end_include
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_SESSIONMANAGER
end_ifndef
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_constructor
DECL|function|QPlatformSessionManager
name|QPlatformSessionManager
operator|::
name|QPlatformSessionManager
parameter_list|(
specifier|const
name|QString
modifier|&
name|id
parameter_list|,
specifier|const
name|QString
modifier|&
name|key
parameter_list|)
member_init_list|:
name|m_sessionId
argument_list|(
name|id
argument_list|)
member_init_list|,
name|m_sessionKey
argument_list|(
name|key
argument_list|)
member_init_list|,
name|m_restartHint
argument_list|(
name|QSessionManager
operator|::
name|RestartIfRunning
argument_list|)
block|{ }
end_constructor
begin_destructor
DECL|function|~QPlatformSessionManager
name|QPlatformSessionManager
operator|::
name|~
name|QPlatformSessionManager
parameter_list|()
block|{ }
end_destructor
begin_function
DECL|function|sessionId
name|QString
name|QPlatformSessionManager
operator|::
name|sessionId
parameter_list|()
specifier|const
block|{
return|return
name|m_sessionId
return|;
block|}
end_function
begin_function
DECL|function|sessionKey
name|QString
name|QPlatformSessionManager
operator|::
name|sessionKey
parameter_list|()
specifier|const
block|{
return|return
name|m_sessionKey
return|;
block|}
end_function
begin_function
DECL|function|allowsInteraction
name|bool
name|QPlatformSessionManager
operator|::
name|allowsInteraction
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|allowsErrorInteraction
name|bool
name|QPlatformSessionManager
operator|::
name|allowsErrorInteraction
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|release
name|void
name|QPlatformSessionManager
operator|::
name|release
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|cancel
name|void
name|QPlatformSessionManager
operator|::
name|cancel
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|setRestartHint
name|void
name|QPlatformSessionManager
operator|::
name|setRestartHint
parameter_list|(
name|QSessionManager
operator|::
name|RestartHint
name|restartHint
parameter_list|)
block|{
name|m_restartHint
operator|=
name|restartHint
expr_stmt|;
block|}
end_function
begin_function
DECL|function|restartHint
name|QSessionManager
operator|::
name|RestartHint
name|QPlatformSessionManager
operator|::
name|restartHint
parameter_list|()
specifier|const
block|{
return|return
name|m_restartHint
return|;
block|}
end_function
begin_function
DECL|function|setRestartCommand
name|void
name|QPlatformSessionManager
operator|::
name|setRestartCommand
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|command
parameter_list|)
block|{
name|m_restartCommand
operator|=
name|command
expr_stmt|;
block|}
end_function
begin_function
DECL|function|restartCommand
name|QStringList
name|QPlatformSessionManager
operator|::
name|restartCommand
parameter_list|()
specifier|const
block|{
return|return
name|m_restartCommand
return|;
block|}
end_function
begin_function
DECL|function|setDiscardCommand
name|void
name|QPlatformSessionManager
operator|::
name|setDiscardCommand
parameter_list|(
specifier|const
name|QStringList
modifier|&
name|command
parameter_list|)
block|{
name|m_discardCommand
operator|=
name|command
expr_stmt|;
block|}
end_function
begin_function
DECL|function|discardCommand
name|QStringList
name|QPlatformSessionManager
operator|::
name|discardCommand
parameter_list|()
specifier|const
block|{
return|return
name|m_discardCommand
return|;
block|}
end_function
begin_function
DECL|function|setManagerProperty
name|void
name|QPlatformSessionManager
operator|::
name|setManagerProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
specifier|const
name|QString
modifier|&
name|value
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|name
argument_list|)
name|Q_UNUSED
argument_list|(
argument|value
argument_list|)
block|}
end_function
begin_function
DECL|function|setManagerProperty
name|void
name|QPlatformSessionManager
operator|::
name|setManagerProperty
parameter_list|(
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
specifier|const
name|QStringList
modifier|&
name|value
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
argument|name
argument_list|)
name|Q_UNUSED
argument_list|(
argument|value
argument_list|)
block|}
end_function
begin_function
DECL|function|isPhase2
name|bool
name|QPlatformSessionManager
operator|::
name|isPhase2
parameter_list|()
specifier|const
block|{
return|return
literal|false
return|;
block|}
end_function
begin_function
DECL|function|requestPhase2
name|void
name|QPlatformSessionManager
operator|::
name|requestPhase2
parameter_list|()
block|{ }
end_function
begin_function
DECL|function|appCommitData
name|void
name|QPlatformSessionManager
operator|::
name|appCommitData
parameter_list|()
block|{
name|qGuiApp
operator|->
name|d_func
argument_list|()
operator|->
name|commitData
argument_list|()
expr_stmt|;
block|}
end_function
begin_function
DECL|function|appSaveState
name|void
name|QPlatformSessionManager
operator|::
name|appSaveState
parameter_list|()
block|{
name|qGuiApp
operator|->
name|d_func
argument_list|()
operator|->
name|saveState
argument_list|()
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_SESSIONMANAGER
end_comment
end_unit
