begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QPLATFORMNATIVEINTERFACE_H
end_ifndef
begin_define
DECL|macro|QPLATFORMNATIVEINTERFACE_H
define|#
directive|define
name|QPLATFORMNATIVEINTERFACE_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is part of the QPA API and is not meant to be used
end_comment
begin_comment
comment|// in applications. Usage of this API may make your code
end_comment
begin_comment
comment|// source and binary incompatible with future versions of Qt.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|<QtGui/qwindowdefs.h>
end_include
begin_include
include|#
directive|include
file|<QtCore/QObject>
end_include
begin_include
include|#
directive|include
file|<QtCore/QVariant>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
DECL|variable|QOpenGLContext
name|class
name|QOpenGLContext
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QScreen
name|class
name|QScreen
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QWindow
name|class
name|QWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QPlatformWindow
name|class
name|QPlatformWindow
decl_stmt|;
end_decl_stmt
begin_decl_stmt
DECL|variable|QBackingStore
name|class
name|QBackingStore
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QPlatformNativeInterface
range|:
name|public
name|QObject
block|{
name|Q_OBJECT
name|public
operator|:
name|virtual
name|void
operator|*
name|nativeResourceForIntegration
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|)
block|;
name|virtual
name|void
operator|*
name|nativeResourceForContext
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|,
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
name|virtual
name|void
operator|*
name|nativeResourceForScreen
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|,
name|QScreen
operator|*
name|screen
argument_list|)
block|;
name|virtual
name|void
operator|*
name|nativeResourceForWindow
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|,
name|QWindow
operator|*
name|window
argument_list|)
block|;
name|virtual
name|void
operator|*
name|nativeResourceForBackingStore
argument_list|(
specifier|const
name|QByteArray
operator|&
name|resource
argument_list|,
name|QBackingStore
operator|*
name|backingStore
argument_list|)
block|;
typedef|typedef
name|void
modifier|*
function_decl|(
modifier|*
name|NativeResourceForIntegrationFunction
function_decl|)
parameter_list|()
function_decl|;
end_decl_stmt
begin_typedef
typedef|typedef
name|void
modifier|*
function_decl|(
modifier|*
name|NativeResourceForContextFunction
function_decl|)
parameter_list|(
name|QOpenGLContext
modifier|*
name|context
parameter_list|)
function_decl|;
end_typedef
begin_typedef
typedef|typedef
name|void
modifier|*
function_decl|(
modifier|*
name|NativeResourceForScreenFunction
function_decl|)
parameter_list|(
name|QScreen
modifier|*
name|screen
parameter_list|)
function_decl|;
end_typedef
begin_typedef
typedef|typedef
name|void
modifier|*
function_decl|(
modifier|*
name|NativeResourceForWindowFunction
function_decl|)
parameter_list|(
name|QWindow
modifier|*
name|window
parameter_list|)
function_decl|;
end_typedef
begin_typedef
typedef|typedef
name|void
modifier|*
function_decl|(
modifier|*
name|NativeResourceForBackingStoreFunction
function_decl|)
parameter_list|(
name|QBackingStore
modifier|*
name|backingStore
parameter_list|)
function_decl|;
end_typedef
begin_function_decl
name|virtual
name|NativeResourceForIntegrationFunction
name|nativeResourceFunctionForIntegration
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|resource
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|virtual
name|NativeResourceForContextFunction
name|nativeResourceFunctionForContext
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|resource
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|virtual
name|NativeResourceForScreenFunction
name|nativeResourceFunctionForScreen
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|resource
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|virtual
name|NativeResourceForWindowFunction
name|nativeResourceFunctionForWindow
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|resource
parameter_list|)
function_decl|;
end_function_decl
begin_function_decl
name|virtual
name|NativeResourceForBackingStoreFunction
name|nativeResourceFunctionForBackingStore
parameter_list|(
specifier|const
name|QByteArray
modifier|&
name|resource
parameter_list|)
function_decl|;
end_function_decl
begin_decl_stmt
name|virtual
name|QFunctionPointer
name|platformFunction
argument_list|(
specifier|const
name|QByteArray
operator|&
name|function
argument_list|)
decl|const
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|virtual
name|QVariantMap
name|windowProperties
argument_list|(
name|QPlatformWindow
operator|*
name|window
argument_list|)
decl|const
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|virtual
name|QVariant
name|windowProperty
argument_list|(
name|QPlatformWindow
operator|*
name|window
argument_list|,
specifier|const
name|QString
operator|&
name|name
argument_list|)
decl|const
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|virtual
name|QVariant
name|windowProperty
argument_list|(
name|QPlatformWindow
operator|*
name|window
argument_list|,
specifier|const
name|QString
operator|&
name|name
argument_list|,
specifier|const
name|QVariant
operator|&
name|defaultValue
argument_list|)
decl|const
decl_stmt|;
end_decl_stmt
begin_function_decl
name|virtual
name|void
name|setWindowProperty
parameter_list|(
name|QPlatformWindow
modifier|*
name|window
parameter_list|,
specifier|const
name|QString
modifier|&
name|name
parameter_list|,
specifier|const
name|QVariant
modifier|&
name|value
parameter_list|)
function_decl|;
end_function_decl
begin_label
name|Q_SIGNALS
label|:
end_label
begin_function_decl
name|void
name|windowPropertyChanged
parameter_list|(
name|QPlatformWindow
modifier|*
name|window
parameter_list|,
specifier|const
name|QString
modifier|&
name|propertyName
parameter_list|)
function_decl|;
end_function_decl
begin_macro
unit|};
name|QT_END_NAMESPACE
end_macro
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QPLATFORMNATIVEINTERFACE_H
end_comment
end_unit
