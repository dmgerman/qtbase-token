begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB). ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 3 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL3 included in the ** packaging of this file. Please review the following information to ** ensure the GNU Lesser General Public License version 3 requirements ** will be met: https://www.gnu.org/licenses/lgpl-3.0.html. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 2.0 or (at your option) the GNU General ** Public license version 3 or any later version approved by the KDE Free ** Qt Foundation. The licenses are as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3 ** included in the packaging of this file. Please review the following ** information to ensure the GNU General Public License requirements will ** be met: https://www.gnu.org/licenses/gpl-2.0.html and ** https://www.gnu.org/licenses/gpl-3.0.html. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qopengltexturehelper_p.h"
end_include
begin_include
include|#
directive|include
file|<QOpenGLContext>
end_include
begin_include
include|#
directive|include
file|<private/qopenglextensions_p.h>
end_include
begin_function
name|QT_BEGIN_NAMESPACE
DECL|function|QOpenGLTextureHelper
name|QOpenGLTextureHelper
operator|::
name|QOpenGLTextureHelper
parameter_list|(
name|QOpenGLContext
modifier|*
name|context
parameter_list|)
block|{
name|functions
operator|=
name|context
operator|->
name|functions
argument_list|()
expr_stmt|;
comment|// Resolve EXT_direct_state_access entry points if present.
comment|// However, disable it on some systems where DSA is known to be unreliable.
name|bool
name|allowDSA
init|=
literal|true
decl_stmt|;
specifier|const
name|char
modifier|*
name|renderer
init|=
cast|reinterpret_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|context
operator|->
name|functions
argument_list|()
operator|->
name|glGetString
argument_list|(
name|GL_RENDERER
argument_list|)
argument_list|)
decl_stmt|;
comment|// QTBUG-40653, QTBUG-44988
if|if
condition|(
name|renderer
operator|&&
name|strstr
argument_list|(
name|renderer
argument_list|,
literal|"AMD Radeon HD"
argument_list|)
condition|)
name|allowDSA
operator|=
literal|false
expr_stmt|;
if|if
condition|(
name|allowDSA
operator|&&
operator|!
name|context
operator|->
name|isOpenGLES
argument_list|()
operator|&&
name|context
operator|->
name|hasExtension
argument_list|(
name|QByteArrayLiteral
argument_list|(
literal|"GL_EXT_direct_state_access"
argument_list|)
argument_list|)
condition|)
block|{
name|TextureParameteriEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameteriEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureParameterivEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLint
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterivEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureParameterfEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLfloat
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterfEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureParameterfvEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLfloat
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureParameterfvEXT"
argument_list|)
operator|)
expr_stmt|;
name|GenerateTextureMipmapEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenerateTextureMipmapEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureStorage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureStorage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureStorage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureStorage3DMultisampleEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage3DMultisampleEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureStorage2DMultisampleEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureStorage2DMultisampleEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|TextureSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTextureSubImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureSubImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTextureSubImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureSubImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTextureSubImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureSubImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTextureImage1DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureImage1DEXT"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTextureImage2DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureImage2DEXT"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTextureImage3DEXT
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTextureImage3DEXT"
argument_list|)
operator|)
expr_stmt|;
comment|// Use the real DSA functions
name|TextureParameteri
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameteri
expr_stmt|;
name|TextureParameteriv
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameteriv
expr_stmt|;
name|TextureParameterf
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameterf
expr_stmt|;
name|TextureParameterfv
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameterfv
expr_stmt|;
name|GenerateTextureMipmap
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_GenerateTextureMipmap
expr_stmt|;
name|TextureStorage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage3D
expr_stmt|;
name|TextureStorage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage2D
expr_stmt|;
name|TextureStorage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage1D
expr_stmt|;
name|TextureStorage3DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage3DMultisample
expr_stmt|;
name|TextureStorage2DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage2DMultisample
expr_stmt|;
name|TextureImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage3D
expr_stmt|;
name|TextureImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage2D
expr_stmt|;
name|TextureImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage1D
expr_stmt|;
name|TextureSubImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureSubImage3D
expr_stmt|;
name|TextureSubImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureSubImage2D
expr_stmt|;
name|TextureSubImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureSubImage1D
expr_stmt|;
name|CompressedTextureSubImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureSubImage1D
expr_stmt|;
name|CompressedTextureSubImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureSubImage2D
expr_stmt|;
name|CompressedTextureSubImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureSubImage3D
expr_stmt|;
name|CompressedTextureImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureImage1D
expr_stmt|;
name|CompressedTextureImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureImage2D
expr_stmt|;
name|CompressedTextureImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureImage3D
expr_stmt|;
block|}
else|else
block|{
comment|// Use our own DSA emulation
name|TextureParameteri
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameteri
expr_stmt|;
name|TextureParameteriv
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameteriv
expr_stmt|;
name|TextureParameterf
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameterf
expr_stmt|;
name|TextureParameterfv
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameterfv
expr_stmt|;
name|GenerateTextureMipmap
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_GenerateTextureMipmap
expr_stmt|;
name|TextureStorage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage3D
expr_stmt|;
name|TextureStorage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage2D
expr_stmt|;
name|TextureStorage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage1D
expr_stmt|;
name|TextureStorage3DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage3DMultisample
expr_stmt|;
name|TextureStorage2DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage2DMultisample
expr_stmt|;
name|TextureImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage3D
expr_stmt|;
name|TextureImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage2D
expr_stmt|;
name|TextureImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage1D
expr_stmt|;
name|TextureSubImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureSubImage3D
expr_stmt|;
name|TextureSubImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureSubImage2D
expr_stmt|;
name|TextureSubImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureSubImage1D
expr_stmt|;
name|CompressedTextureSubImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureSubImage1D
expr_stmt|;
name|CompressedTextureSubImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureSubImage2D
expr_stmt|;
name|CompressedTextureSubImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureSubImage3D
expr_stmt|;
name|CompressedTextureImage1D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureImage1D
expr_stmt|;
name|CompressedTextureImage2D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureImage2D
expr_stmt|;
name|CompressedTextureImage3D
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureImage3D
expr_stmt|;
block|}
comment|// Some DSA functions are part of NV_texture_multisample instead
if|if
condition|(
operator|!
name|context
operator|->
name|isOpenGLES
argument_list|()
operator|&&
name|context
operator|->
name|hasExtension
argument_list|(
name|QByteArrayLiteral
argument_list|(
literal|"GL_NV_texture_multisample"
argument_list|)
argument_list|)
condition|)
block|{
name|TextureImage3DMultisampleNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage3DMultisampleNV"
argument_list|)
operator|)
expr_stmt|;
name|TextureImage2DMultisampleNV
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureImage2DMultisampleNV"
argument_list|)
operator|)
expr_stmt|;
name|TextureImage3DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage3DMultisample
expr_stmt|;
name|TextureImage2DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage2DMultisample
expr_stmt|;
block|}
else|else
block|{
name|TextureImage3DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage3DMultisample
expr_stmt|;
name|TextureImage2DMultisample
operator|=
operator|&
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage2DMultisample
expr_stmt|;
block|}
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
comment|// Here we are targeting OpenGL ES 2.0+ only. This is likely using EGL, where,
comment|// similarly to WGL, non-extension functions (i.e. any function that is part of the
comment|// GLES spec) *may* not be queried via eglGetProcAddress.
comment|// OpenGL 1.0
name|TexImage1D
operator|=
literal|0
expr_stmt|;
comment|// OpenGL 1.1
name|TexSubImage1D
operator|=
literal|0
expr_stmt|;
comment|// OpenGL 1.3
name|GetCompressedTexImage
operator|=
literal|0
expr_stmt|;
name|CompressedTexSubImage1D
operator|=
literal|0
expr_stmt|;
name|CompressedTexSubImage2D
operator|=
operator|::
name|glCompressedTexSubImage2D
expr_stmt|;
name|CompressedTexImage1D
operator|=
literal|0
expr_stmt|;
name|CompressedTexImage2D
operator|=
operator|::
name|glCompressedTexImage2D
expr_stmt|;
name|ActiveTexture
operator|=
operator|::
name|glActiveTexture
expr_stmt|;
comment|// OpenGL 3.0
name|GenerateMipmap
operator|=
operator|::
name|glGenerateMipmap
expr_stmt|;
comment|// OpenGL 3.2
name|TexImage3DMultisample
operator|=
literal|0
expr_stmt|;
name|TexImage2DMultisample
operator|=
literal|0
expr_stmt|;
comment|// OpenGL 4.2
name|QOpenGLContext
modifier|*
name|ctx
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|ctx
operator|->
name|format
argument_list|()
operator|.
name|majorVersion
argument_list|()
operator|>=
literal|3
condition|)
block|{
comment|// OpenGL ES 3.0+ has immutable storage for 2D and 3D at least.
name|QOpenGLExtraFunctionsPrivate
modifier|*
name|extra
init|=
cast|static_cast
argument_list|<
name|QOpenGLExtensions
operator|*
argument_list|>
argument_list|(
name|context
operator|->
name|extraFunctions
argument_list|()
argument_list|)
operator|->
name|d
argument_list|()
decl_stmt|;
name|TexStorage3D
operator|=
name|extra
operator|->
name|f
operator|.
name|TexStorage3D
expr_stmt|;
name|TexStorage2D
operator|=
name|extra
operator|->
name|f
operator|.
name|TexStorage2D
expr_stmt|;
block|}
else|else
block|{
name|TexStorage3D
operator|=
literal|0
expr_stmt|;
name|TexStorage2D
operator|=
literal|0
expr_stmt|;
block|}
name|TexStorage1D
operator|=
literal|0
expr_stmt|;
comment|// OpenGL 4.3
name|TexStorage3DMultisample
operator|=
literal|0
expr_stmt|;
name|TexStorage2DMultisample
operator|=
literal|0
expr_stmt|;
name|TexBufferRange
operator|=
literal|0
expr_stmt|;
name|TextureView
operator|=
literal|0
expr_stmt|;
endif|#
directive|endif
if|if
condition|(
name|context
operator|->
name|isOpenGLES
argument_list|()
operator|&&
name|context
operator|->
name|hasExtension
argument_list|(
name|QByteArrayLiteral
argument_list|(
literal|"GL_OES_texture_3D"
argument_list|)
argument_list|)
condition|)
block|{
name|TexImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage3DOES"
argument_list|)
operator|)
expr_stmt|;
name|TexSubImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage3DOES"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage3DOES"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexSubImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage3DOES"
argument_list|)
operator|)
expr_stmt|;
block|}
else|else
block|{
name|QOpenGLContext
modifier|*
name|ctx
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
if|if
condition|(
name|ctx
operator|->
name|isOpenGLES
argument_list|()
operator|&&
name|ctx
operator|->
name|format
argument_list|()
operator|.
name|majorVersion
argument_list|()
operator|>=
literal|3
condition|)
block|{
comment|// OpenGL ES 3.0+ has glTexImage3D.
name|QOpenGLExtraFunctionsPrivate
modifier|*
name|extra
init|=
cast|static_cast
argument_list|<
name|QOpenGLExtensions
operator|*
argument_list|>
argument_list|(
name|context
operator|->
name|extraFunctions
argument_list|()
argument_list|)
operator|->
name|d
argument_list|()
decl_stmt|;
name|TexImage3D
operator|=
name|extra
operator|->
name|f
operator|.
name|TexImage3D
expr_stmt|;
name|TexSubImage3D
operator|=
name|extra
operator|->
name|f
operator|.
name|TexSubImage3D
expr_stmt|;
name|CompressedTexImage3D
operator|=
name|extra
operator|->
name|f
operator|.
name|CompressedTexImage3D
expr_stmt|;
name|CompressedTexSubImage3D
operator|=
name|extra
operator|->
name|f
operator|.
name|CompressedTexSubImage3D
expr_stmt|;
block|}
else|else
block|{
comment|// OpenGL 1.2
name|TexImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage3D"
argument_list|)
operator|)
expr_stmt|;
name|TexSubImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage3D"
argument_list|)
operator|)
expr_stmt|;
comment|// OpenGL 1.3
name|CompressedTexImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage3D"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexSubImage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage3D"
argument_list|)
operator|)
expr_stmt|;
block|}
block|}
ifndef|#
directive|ifndef
name|QT_OPENGL_ES_2
comment|// OpenGL 1.0 and 1.1
name|TexImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage1D"
argument_list|)
operator|)
expr_stmt|;
name|TexSubImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLenum
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexSubImage1D"
argument_list|)
operator|)
expr_stmt|;
block|\
comment|// OpenGL 1.3
name|GetCompressedTexImage
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGetCompressedTexImage"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexSubImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage1D"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexSubImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexSubImage2D"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexImage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage1D"
argument_list|)
operator|)
expr_stmt|;
name|CompressedTexImage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLint
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
specifier|const
name|GLvoid
operator|*
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glCompressedTexImage2D"
argument_list|)
operator|)
expr_stmt|;
name|ActiveTexture
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glActiveTexture"
argument_list|)
argument_list|)
expr_stmt|;
comment|// OpenGL 3.0
name|GenerateMipmap
operator|=
cast|reinterpret_cast
argument_list|<
name|void
operator|(
name|QOPENGLF_APIENTRYP
operator|)
operator|(
name|GLenum
operator|)
argument_list|>
argument_list|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glGenerateMipmap"
argument_list|)
argument_list|)
expr_stmt|;
comment|// OpenGL 3.2
name|TexImage3DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage3DMultisample"
argument_list|)
operator|)
expr_stmt|;
name|TexImage2DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLint
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexImage2DMultisample"
argument_list|)
operator|)
expr_stmt|;
comment|// OpenGL 4.2
name|TexStorage3D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage3D"
argument_list|)
operator|)
expr_stmt|;
name|TexStorage2D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage2D"
argument_list|)
operator|)
expr_stmt|;
name|TexStorage1D
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage1D"
argument_list|)
operator|)
expr_stmt|;
comment|// OpenGL 4.3
name|TexStorage3DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage3DMultisample"
argument_list|)
operator|)
expr_stmt|;
name|TexStorage2DMultisample
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLenum
argument_list|,
name|GLsizei
argument_list|,
name|GLsizei
argument_list|,
name|GLboolean
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexStorage2DMultisample"
argument_list|)
operator|)
expr_stmt|;
name|TexBufferRange
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLenum
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLintptr
argument_list|,
name|GLsizeiptr
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTexBufferRange"
argument_list|)
operator|)
expr_stmt|;
name|TextureView
operator|=
expr|reinterpret_cast
operator|<
name|void
argument_list|(
name|QOPENGLF_APIENTRYP
argument_list|)
argument_list|(
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLenum
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|,
name|GLuint
argument_list|)
operator|>
operator|(
name|context
operator|->
name|getProcAddress
argument_list|(
literal|"glTextureView"
argument_list|)
operator|)
expr_stmt|;
endif|#
directive|endif
block|}
end_function
begin_function
DECL|function|dsa_TextureParameteri
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameteri
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureParameteriEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureParameteriv
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameteriv
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureParameterivEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureParameterf
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameterf
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureParameterfEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureParameterfv
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureParameterfv
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureParameterfvEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_GenerateTextureMipmap
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_GenerateTextureMipmap
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|GenerateTextureMipmapEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureStorage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureStorage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureStorage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureStorage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureStorage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureStorage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|levels
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureStorage3DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage3DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureStorage3DMultisampleEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureStorage2DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureStorage2DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureStorage2DMultisampleEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureSubImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureSubImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureSubImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureSubImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureSubImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureSubImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureSubImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureSubImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureSubImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureImage3DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage3DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureImage3DMultisampleNV
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_TextureImage2DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_TextureImage2DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|TextureImage2DMultisampleNV
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_CompressedTextureSubImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureSubImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|CompressedTextureSubImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_CompressedTextureSubImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureSubImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|CompressedTextureSubImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_CompressedTextureSubImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureSubImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|CompressedTextureSubImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_CompressedTextureImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|CompressedTextureImage1DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_CompressedTextureImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|CompressedTextureImage2DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|dsa_CompressedTextureImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|dsa_CompressedTextureImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|Q_UNUSED
argument_list|(
name|bindingTarget
argument_list|)
expr_stmt|;
name|CompressedTextureImage3DEXT
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_namespace
namespace|namespace
block|{
DECL|class|TextureBinder
class|class
name|TextureBinder
block|{
public|public:
DECL|function|TextureBinder
name|TextureBinder
parameter_list|(
name|QOpenGLFunctions
modifier|*
name|functions
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|)
member_init_list|:
name|m_functions
argument_list|(
name|functions
argument_list|)
block|{
comment|// For cubemaps we can't use the standard DSA emulation as it is illegal to
comment|// try to bind a texture to one of the cubemap face targets. So we force the
comment|// target and binding target to the cubemap values in this case.
switch|switch
condition|(
name|target
condition|)
block|{
case|case
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_X
case|:
case|case
name|GL_TEXTURE_CUBE_MAP_POSITIVE_X
case|:
case|case
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
case|:
case|case
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Y
case|:
case|case
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
case|:
case|case
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Z
case|:
name|bindingTarget
operator|=
name|GL_TEXTURE_BINDING_CUBE_MAP
expr_stmt|;
name|m_target
operator|=
name|GL_TEXTURE_CUBE_MAP
expr_stmt|;
break|break;
default|default:
name|m_target
operator|=
name|target
expr_stmt|;
break|break;
block|}
name|m_functions
operator|->
name|glGetIntegerv
argument_list|(
name|bindingTarget
argument_list|,
operator|&
name|m_oldTexture
argument_list|)
expr_stmt|;
name|m_functions
operator|->
name|glBindTexture
argument_list|(
name|m_target
argument_list|,
name|texture
argument_list|)
expr_stmt|;
block|}
DECL|function|~TextureBinder
name|~
name|TextureBinder
parameter_list|()
block|{
name|m_functions
operator|->
name|glBindTexture
argument_list|(
name|m_target
argument_list|,
name|m_oldTexture
argument_list|)
expr_stmt|;
block|}
private|private:
DECL|member|m_functions
name|QOpenGLFunctions
modifier|*
name|m_functions
decl_stmt|;
DECL|member|m_target
name|GLenum
name|m_target
decl_stmt|;
DECL|member|m_oldTexture
name|GLint
name|m_oldTexture
decl_stmt|;
block|}
class|;
block|}
end_namespace
begin_comment
comment|// namespace
end_comment
begin_function
DECL|function|qt_TextureParameteri
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameteri
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|functions
operator|->
name|glTexParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureParameteriv
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameteriv
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|functions
operator|->
name|glTexParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureParameterf
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameterf
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|functions
operator|->
name|glTexParameterf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureParameterfv
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureParameterfv
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|functions
operator|->
name|glTexParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_GenerateTextureMipmap
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_GenerateTextureMipmap
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|functions
operator|->
name|glGenerateMipmap
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureStorage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexStorage3D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureStorage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexStorage2D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureStorage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexStorage1D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureStorage3DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage3DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexStorage3DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureStorage2DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureStorage2DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexStorage2DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|functions
operator|->
name|glTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureSubImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureSubImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureSubImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureSubImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|functions
operator|->
name|glTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureSubImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureSubImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureImage3DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage3DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexImage3DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_TextureImage2DMultisample
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_TextureImage2DMultisample
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glTexImage2DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedSampleLocations
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_CompressedTextureSubImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureSubImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glCompressedTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_CompressedTextureSubImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureSubImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glCompressedTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_CompressedTextureSubImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureSubImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glCompressedTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_CompressedTextureImage1D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureImage1D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glCompressedTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_CompressedTextureImage2D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureImage2D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glCompressedTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_function
DECL|function|qt_CompressedTextureImage3D
name|void
name|QOpenGLTextureHelper
operator|::
name|qt_CompressedTextureImage3D
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|bindingTarget
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
block|{
name|TextureBinder
name|binder
argument_list|(
name|functions
argument_list|,
name|texture
argument_list|,
name|target
argument_list|,
name|bindingTarget
argument_list|)
decl_stmt|;
name|glCompressedTexImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|bits
argument_list|)
expr_stmt|;
block|}
end_function
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
