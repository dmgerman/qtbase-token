begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|__gl2ext_h_
end_ifndef
begin_define
DECL|macro|__gl2ext_h_
define|#
directive|define
name|__gl2ext_h_
value|1
end_define
begin_if
if|#
directive|if
literal|0
end_if
begin_pragma
pragma|#
directive|pragma
name|qt_no_master_include
end_pragma
begin_pragma
pragma|#
directive|pragma
name|qt_sync_skip_header_check
end_pragma
begin_pragma
pragma|#
directive|pragma
name|qt_sync_stop_processing
end_pragma
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
ifndef|#
directive|ifndef
name|__gl3_h_
comment|/* These types are defined with reference to<inttypes.h>  * in the Apple extension spec, but here we use the Khronos  * portable types in khrplatform.h, and assume those types  * are always defined.  * If any other extensions using these types are defined,  * the typedefs must move out of this block and be shared.  */
DECL|typedef|GLint64
typedef|typedef
name|khronos_int64_t
name|GLint64
typedef|;
DECL|typedef|GLuint64
typedef|typedef
name|khronos_uint64_t
name|GLuint64
typedef|;
DECL|typedef|GLsync
typedef|typedef
name|struct
name|__GLsync
modifier|*
name|GLsync
typedef|;
endif|#
directive|endif
comment|/* ** Copyright (c) 2013-2014 The Khronos Group Inc. ** ** Permission is hereby granted, free of charge, to any person obtaining a ** copy of this software and/or associated documentation files (the ** "Materials"), to deal in the Materials without restriction, including ** without limitation the rights to use, copy, modify, merge, publish, ** distribute, sublicense, and/or sell copies of the Materials, and to ** permit persons to whom the Materials are furnished to do so, subject to ** the following conditions: ** ** The above copyright notice and this permission notice shall be included ** in all copies or substantial portions of the Materials. ** ** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS. */
comment|/* ** This header is generated from the Khronos OpenGL / OpenGL ES XML ** API Registry. The current version of the Registry, generator scripts ** used to make the header, and the header can be found at **   http://www.opengl.org/registry/ ** ** Khronos $Revision: 27673 $ on $Date: 2014-08-10 16:26:49 -0700 (Sun, 10 Aug 2014) $ */
ifndef|#
directive|ifndef
name|GL_APIENTRYP
DECL|macro|GL_APIENTRYP
define|#
directive|define
name|GL_APIENTRYP
value|GL_APIENTRY*
endif|#
directive|endif
comment|/* Generated on date 20140810 */
comment|/* Generated C header for:  * API: gles2  * Profile: common  * Versions considered: 2\.[0-9]  * Versions emitted: _nomatch_^  * Default extensions included: gles2  * Additional extensions included: _nomatch_^  * Extensions removed: _nomatch_^  */
ifndef|#
directive|ifndef
name|GL_KHR_blend_equation_advanced
DECL|macro|GL_KHR_blend_equation_advanced
define|#
directive|define
name|GL_KHR_blend_equation_advanced
value|1
DECL|macro|GL_MULTIPLY_KHR
define|#
directive|define
name|GL_MULTIPLY_KHR
value|0x9294
DECL|macro|GL_SCREEN_KHR
define|#
directive|define
name|GL_SCREEN_KHR
value|0x9295
DECL|macro|GL_OVERLAY_KHR
define|#
directive|define
name|GL_OVERLAY_KHR
value|0x9296
DECL|macro|GL_DARKEN_KHR
define|#
directive|define
name|GL_DARKEN_KHR
value|0x9297
DECL|macro|GL_LIGHTEN_KHR
define|#
directive|define
name|GL_LIGHTEN_KHR
value|0x9298
DECL|macro|GL_COLORDODGE_KHR
define|#
directive|define
name|GL_COLORDODGE_KHR
value|0x9299
DECL|macro|GL_COLORBURN_KHR
define|#
directive|define
name|GL_COLORBURN_KHR
value|0x929A
DECL|macro|GL_HARDLIGHT_KHR
define|#
directive|define
name|GL_HARDLIGHT_KHR
value|0x929B
DECL|macro|GL_SOFTLIGHT_KHR
define|#
directive|define
name|GL_SOFTLIGHT_KHR
value|0x929C
DECL|macro|GL_DIFFERENCE_KHR
define|#
directive|define
name|GL_DIFFERENCE_KHR
value|0x929E
DECL|macro|GL_EXCLUSION_KHR
define|#
directive|define
name|GL_EXCLUSION_KHR
value|0x92A0
DECL|macro|GL_HSL_HUE_KHR
define|#
directive|define
name|GL_HSL_HUE_KHR
value|0x92AD
DECL|macro|GL_HSL_SATURATION_KHR
define|#
directive|define
name|GL_HSL_SATURATION_KHR
value|0x92AE
DECL|macro|GL_HSL_COLOR_KHR
define|#
directive|define
name|GL_HSL_COLOR_KHR
value|0x92AF
DECL|macro|GL_HSL_LUMINOSITY_KHR
define|#
directive|define
name|GL_HSL_LUMINOSITY_KHR
value|0x92B0
DECL|typedef|PFNGLBLENDBARRIERKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDBARRIERKHRPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendBarrierKHR
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_KHR_blend_equation_advanced */
ifndef|#
directive|ifndef
name|GL_KHR_blend_equation_advanced_coherent
DECL|macro|GL_KHR_blend_equation_advanced_coherent
define|#
directive|define
name|GL_KHR_blend_equation_advanced_coherent
value|1
DECL|macro|GL_BLEND_ADVANCED_COHERENT_KHR
define|#
directive|define
name|GL_BLEND_ADVANCED_COHERENT_KHR
value|0x9285
endif|#
directive|endif
comment|/* GL_KHR_blend_equation_advanced_coherent */
ifndef|#
directive|ifndef
name|GL_KHR_context_flush_control
DECL|macro|GL_KHR_context_flush_control
define|#
directive|define
name|GL_KHR_context_flush_control
value|1
DECL|macro|GL_CONTEXT_RELEASE_BEHAVIOR_KHR
define|#
directive|define
name|GL_CONTEXT_RELEASE_BEHAVIOR_KHR
value|0x82FB
DECL|macro|GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR
define|#
directive|define
name|GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR
value|0x82FC
endif|#
directive|endif
comment|/* GL_KHR_context_flush_control */
ifndef|#
directive|ifndef
name|GL_KHR_debug
DECL|macro|GL_KHR_debug
define|#
directive|define
name|GL_KHR_debug
value|1
DECL|typedef|GLDEBUGPROCKHR
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRY
modifier|*
name|GLDEBUGPROCKHR
function_decl|)
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|message
parameter_list|,
specifier|const
name|void
modifier|*
name|userParam
parameter_list|)
function_decl|;
DECL|macro|GL_SAMPLER
define|#
directive|define
name|GL_SAMPLER
value|0x82E6
DECL|macro|GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR
define|#
directive|define
name|GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR
value|0x8242
DECL|macro|GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR
define|#
directive|define
name|GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR
value|0x8243
DECL|macro|GL_DEBUG_CALLBACK_FUNCTION_KHR
define|#
directive|define
name|GL_DEBUG_CALLBACK_FUNCTION_KHR
value|0x8244
DECL|macro|GL_DEBUG_CALLBACK_USER_PARAM_KHR
define|#
directive|define
name|GL_DEBUG_CALLBACK_USER_PARAM_KHR
value|0x8245
DECL|macro|GL_DEBUG_SOURCE_API_KHR
define|#
directive|define
name|GL_DEBUG_SOURCE_API_KHR
value|0x8246
DECL|macro|GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR
define|#
directive|define
name|GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR
value|0x8247
DECL|macro|GL_DEBUG_SOURCE_SHADER_COMPILER_KHR
define|#
directive|define
name|GL_DEBUG_SOURCE_SHADER_COMPILER_KHR
value|0x8248
DECL|macro|GL_DEBUG_SOURCE_THIRD_PARTY_KHR
define|#
directive|define
name|GL_DEBUG_SOURCE_THIRD_PARTY_KHR
value|0x8249
DECL|macro|GL_DEBUG_SOURCE_APPLICATION_KHR
define|#
directive|define
name|GL_DEBUG_SOURCE_APPLICATION_KHR
value|0x824A
DECL|macro|GL_DEBUG_SOURCE_OTHER_KHR
define|#
directive|define
name|GL_DEBUG_SOURCE_OTHER_KHR
value|0x824B
DECL|macro|GL_DEBUG_TYPE_ERROR_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_ERROR_KHR
value|0x824C
DECL|macro|GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR
value|0x824D
DECL|macro|GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR
value|0x824E
DECL|macro|GL_DEBUG_TYPE_PORTABILITY_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_PORTABILITY_KHR
value|0x824F
DECL|macro|GL_DEBUG_TYPE_PERFORMANCE_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_PERFORMANCE_KHR
value|0x8250
DECL|macro|GL_DEBUG_TYPE_OTHER_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_OTHER_KHR
value|0x8251
DECL|macro|GL_DEBUG_TYPE_MARKER_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_MARKER_KHR
value|0x8268
DECL|macro|GL_DEBUG_TYPE_PUSH_GROUP_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_PUSH_GROUP_KHR
value|0x8269
DECL|macro|GL_DEBUG_TYPE_POP_GROUP_KHR
define|#
directive|define
name|GL_DEBUG_TYPE_POP_GROUP_KHR
value|0x826A
DECL|macro|GL_DEBUG_SEVERITY_NOTIFICATION_KHR
define|#
directive|define
name|GL_DEBUG_SEVERITY_NOTIFICATION_KHR
value|0x826B
DECL|macro|GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR
define|#
directive|define
name|GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR
value|0x826C
DECL|macro|GL_DEBUG_GROUP_STACK_DEPTH_KHR
define|#
directive|define
name|GL_DEBUG_GROUP_STACK_DEPTH_KHR
value|0x826D
DECL|macro|GL_BUFFER_KHR
define|#
directive|define
name|GL_BUFFER_KHR
value|0x82E0
DECL|macro|GL_SHADER_KHR
define|#
directive|define
name|GL_SHADER_KHR
value|0x82E1
DECL|macro|GL_PROGRAM_KHR
define|#
directive|define
name|GL_PROGRAM_KHR
value|0x82E2
DECL|macro|GL_VERTEX_ARRAY_KHR
define|#
directive|define
name|GL_VERTEX_ARRAY_KHR
value|0x8074
DECL|macro|GL_QUERY_KHR
define|#
directive|define
name|GL_QUERY_KHR
value|0x82E3
DECL|macro|GL_SAMPLER_KHR
define|#
directive|define
name|GL_SAMPLER_KHR
value|0x82E6
DECL|macro|GL_MAX_LABEL_LENGTH_KHR
define|#
directive|define
name|GL_MAX_LABEL_LENGTH_KHR
value|0x82E8
DECL|macro|GL_MAX_DEBUG_MESSAGE_LENGTH_KHR
define|#
directive|define
name|GL_MAX_DEBUG_MESSAGE_LENGTH_KHR
value|0x9143
DECL|macro|GL_MAX_DEBUG_LOGGED_MESSAGES_KHR
define|#
directive|define
name|GL_MAX_DEBUG_LOGGED_MESSAGES_KHR
value|0x9144
DECL|macro|GL_DEBUG_LOGGED_MESSAGES_KHR
define|#
directive|define
name|GL_DEBUG_LOGGED_MESSAGES_KHR
value|0x9145
DECL|macro|GL_DEBUG_SEVERITY_HIGH_KHR
define|#
directive|define
name|GL_DEBUG_SEVERITY_HIGH_KHR
value|0x9146
DECL|macro|GL_DEBUG_SEVERITY_MEDIUM_KHR
define|#
directive|define
name|GL_DEBUG_SEVERITY_MEDIUM_KHR
value|0x9147
DECL|macro|GL_DEBUG_SEVERITY_LOW_KHR
define|#
directive|define
name|GL_DEBUG_SEVERITY_LOW_KHR
value|0x9148
DECL|macro|GL_DEBUG_OUTPUT_KHR
define|#
directive|define
name|GL_DEBUG_OUTPUT_KHR
value|0x92E0
DECL|macro|GL_CONTEXT_FLAG_DEBUG_BIT_KHR
define|#
directive|define
name|GL_CONTEXT_FLAG_DEBUG_BIT_KHR
value|0x00000002
DECL|macro|GL_STACK_OVERFLOW_KHR
define|#
directive|define
name|GL_STACK_OVERFLOW_KHR
value|0x0503
DECL|macro|GL_STACK_UNDERFLOW_KHR
define|#
directive|define
name|GL_STACK_UNDERFLOW_KHR
value|0x0504
DECL|typedef|PFNGLDEBUGMESSAGECONTROLKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDEBUGMESSAGECONTROLKHRPROC
function_decl|)
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLboolean
name|enabled
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEBUGMESSAGEINSERTKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDEBUGMESSAGEINSERTKHRPROC
function_decl|)
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|buf
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEBUGMESSAGECALLBACKKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDEBUGMESSAGECALLBACKKHRPROC
function_decl|)
parameter_list|(
name|GLDEBUGPROCKHR
name|callback
parameter_list|,
specifier|const
name|void
modifier|*
name|userParam
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDEBUGMESSAGELOGKHRPROC
typedef|typedef
name|GLuint
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETDEBUGMESSAGELOGKHRPROC
function_decl|)
parameter_list|(
name|GLuint
name|count
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLenum
modifier|*
name|sources
parameter_list|,
name|GLenum
modifier|*
name|types
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLenum
modifier|*
name|severities
parameter_list|,
name|GLsizei
modifier|*
name|lengths
parameter_list|,
name|GLchar
modifier|*
name|messageLog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPUSHDEBUGGROUPKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPUSHDEBUGGROUPKHRPROC
function_decl|)
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|message
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOPDEBUGGROUPKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPOPDEBUGGROUPKHRPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLOBJECTLABELKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLOBJECTLABELKHRPROC
function_decl|)
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTLABELKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETOBJECTLABELKHRPROC
function_decl|)
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
DECL|typedef|PFNGLOBJECTPTRLABELKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLOBJECTPTRLABELKHRPROC
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
name|ptr
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTPTRLABELKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETOBJECTPTRLABELKHRPROC
function_decl|)
parameter_list|(
specifier|const
name|void
modifier|*
name|ptr
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPOINTERVKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPOINTERVKHRPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDebugMessageControlKHR
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLboolean
name|enabled
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDebugMessageInsertKHR
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|buf
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDebugMessageCallbackKHR
parameter_list|(
name|GLDEBUGPROCKHR
name|callback
parameter_list|,
specifier|const
name|void
modifier|*
name|userParam
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLuint
name|GL_APIENTRY
name|glGetDebugMessageLogKHR
parameter_list|(
name|GLuint
name|count
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLenum
modifier|*
name|sources
parameter_list|,
name|GLenum
modifier|*
name|types
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLenum
modifier|*
name|severities
parameter_list|,
name|GLsizei
modifier|*
name|lengths
parameter_list|,
name|GLchar
modifier|*
name|messageLog
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPushDebugGroupKHR
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|message
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPopDebugGroupKHR
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glObjectLabelKHR
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetObjectLabelKHR
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glObjectPtrLabelKHR
parameter_list|(
specifier|const
name|void
modifier|*
name|ptr
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetObjectPtrLabelKHR
parameter_list|(
specifier|const
name|void
modifier|*
name|ptr
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPointervKHR
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_KHR_debug */
ifndef|#
directive|ifndef
name|GL_KHR_robust_buffer_access_behavior
DECL|macro|GL_KHR_robust_buffer_access_behavior
define|#
directive|define
name|GL_KHR_robust_buffer_access_behavior
value|1
endif|#
directive|endif
comment|/* GL_KHR_robust_buffer_access_behavior */
ifndef|#
directive|ifndef
name|GL_KHR_robustness
DECL|macro|GL_KHR_robustness
define|#
directive|define
name|GL_KHR_robustness
value|1
DECL|macro|GL_CONTEXT_ROBUST_ACCESS_KHR
define|#
directive|define
name|GL_CONTEXT_ROBUST_ACCESS_KHR
value|0x90F3
DECL|macro|GL_LOSE_CONTEXT_ON_RESET_KHR
define|#
directive|define
name|GL_LOSE_CONTEXT_ON_RESET_KHR
value|0x8252
DECL|macro|GL_GUILTY_CONTEXT_RESET_KHR
define|#
directive|define
name|GL_GUILTY_CONTEXT_RESET_KHR
value|0x8253
DECL|macro|GL_INNOCENT_CONTEXT_RESET_KHR
define|#
directive|define
name|GL_INNOCENT_CONTEXT_RESET_KHR
value|0x8254
DECL|macro|GL_UNKNOWN_CONTEXT_RESET_KHR
define|#
directive|define
name|GL_UNKNOWN_CONTEXT_RESET_KHR
value|0x8255
DECL|macro|GL_RESET_NOTIFICATION_STRATEGY_KHR
define|#
directive|define
name|GL_RESET_NOTIFICATION_STRATEGY_KHR
value|0x8256
DECL|macro|GL_NO_RESET_NOTIFICATION_KHR
define|#
directive|define
name|GL_NO_RESET_NOTIFICATION_KHR
value|0x8261
DECL|macro|GL_CONTEXT_LOST_KHR
define|#
directive|define
name|GL_CONTEXT_LOST_KHR
value|0x0507
DECL|typedef|PFNGLGETGRAPHICSRESETSTATUSKHRPROC
typedef|typedef
name|GLenum
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETGRAPHICSRESETSTATUSKHRPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREADNPIXELSKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLREADNPIXELSKHRPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMFVKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNUNIFORMFVKHRPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMIVKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNUNIFORMIVKHRPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMUIVKHRPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNUNIFORMUIVKHRPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|GLenum
name|GL_APIENTRY
name|glGetGraphicsResetStatusKHR
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReadnPixelsKHR
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetnUniformfvKHR
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetnUniformivKHR
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetnUniformuivKHR
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_KHR_robustness */
ifndef|#
directive|ifndef
name|GL_KHR_texture_compression_astc_hdr
DECL|macro|GL_KHR_texture_compression_astc_hdr
define|#
directive|define
name|GL_KHR_texture_compression_astc_hdr
value|1
DECL|macro|GL_COMPRESSED_RGBA_ASTC_4x4_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_4x4_KHR
value|0x93B0
DECL|macro|GL_COMPRESSED_RGBA_ASTC_5x4_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_5x4_KHR
value|0x93B1
DECL|macro|GL_COMPRESSED_RGBA_ASTC_5x5_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_5x5_KHR
value|0x93B2
DECL|macro|GL_COMPRESSED_RGBA_ASTC_6x5_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_6x5_KHR
value|0x93B3
DECL|macro|GL_COMPRESSED_RGBA_ASTC_6x6_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_6x6_KHR
value|0x93B4
DECL|macro|GL_COMPRESSED_RGBA_ASTC_8x5_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_8x5_KHR
value|0x93B5
DECL|macro|GL_COMPRESSED_RGBA_ASTC_8x6_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_8x6_KHR
value|0x93B6
DECL|macro|GL_COMPRESSED_RGBA_ASTC_8x8_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_8x8_KHR
value|0x93B7
DECL|macro|GL_COMPRESSED_RGBA_ASTC_10x5_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_10x5_KHR
value|0x93B8
DECL|macro|GL_COMPRESSED_RGBA_ASTC_10x6_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_10x6_KHR
value|0x93B9
DECL|macro|GL_COMPRESSED_RGBA_ASTC_10x8_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_10x8_KHR
value|0x93BA
DECL|macro|GL_COMPRESSED_RGBA_ASTC_10x10_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_10x10_KHR
value|0x93BB
DECL|macro|GL_COMPRESSED_RGBA_ASTC_12x10_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_12x10_KHR
value|0x93BC
DECL|macro|GL_COMPRESSED_RGBA_ASTC_12x12_KHR
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_12x12_KHR
value|0x93BD
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
value|0x93D0
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
value|0x93D1
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
value|0x93D2
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
value|0x93D3
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
value|0x93D4
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
value|0x93D5
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
value|0x93D6
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
value|0x93D7
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
value|0x93D8
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
value|0x93D9
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
value|0x93DA
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
value|0x93DB
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
value|0x93DC
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
value|0x93DD
endif|#
directive|endif
comment|/* GL_KHR_texture_compression_astc_hdr */
ifndef|#
directive|ifndef
name|GL_KHR_texture_compression_astc_ldr
DECL|macro|GL_KHR_texture_compression_astc_ldr
define|#
directive|define
name|GL_KHR_texture_compression_astc_ldr
value|1
endif|#
directive|endif
comment|/* GL_KHR_texture_compression_astc_ldr */
ifndef|#
directive|ifndef
name|GL_OES_EGL_image
DECL|macro|GL_OES_EGL_image
define|#
directive|define
name|GL_OES_EGL_image
value|1
DECL|typedef|GLeglImageOES
typedef|typedef
name|void
modifier|*
name|GLeglImageOES
typedef|;
DECL|typedef|PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEGLImageTargetTexture2DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEGLImageTargetRenderbufferStorageOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_OES_EGL_image */
ifndef|#
directive|ifndef
name|GL_OES_EGL_image_external
DECL|macro|GL_OES_EGL_image_external
define|#
directive|define
name|GL_OES_EGL_image_external
value|1
DECL|macro|GL_TEXTURE_EXTERNAL_OES
define|#
directive|define
name|GL_TEXTURE_EXTERNAL_OES
value|0x8D65
DECL|macro|GL_TEXTURE_BINDING_EXTERNAL_OES
define|#
directive|define
name|GL_TEXTURE_BINDING_EXTERNAL_OES
value|0x8D67
DECL|macro|GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
define|#
directive|define
name|GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
value|0x8D68
DECL|macro|GL_SAMPLER_EXTERNAL_OES
define|#
directive|define
name|GL_SAMPLER_EXTERNAL_OES
value|0x8D66
endif|#
directive|endif
comment|/* GL_OES_EGL_image_external */
ifndef|#
directive|ifndef
name|GL_OES_compressed_ETC1_RGB8_sub_texture
DECL|macro|GL_OES_compressed_ETC1_RGB8_sub_texture
define|#
directive|define
name|GL_OES_compressed_ETC1_RGB8_sub_texture
value|1
endif|#
directive|endif
comment|/* GL_OES_compressed_ETC1_RGB8_sub_texture */
ifndef|#
directive|ifndef
name|GL_OES_compressed_ETC1_RGB8_texture
DECL|macro|GL_OES_compressed_ETC1_RGB8_texture
define|#
directive|define
name|GL_OES_compressed_ETC1_RGB8_texture
value|1
DECL|macro|GL_ETC1_RGB8_OES
define|#
directive|define
name|GL_ETC1_RGB8_OES
value|0x8D64
endif|#
directive|endif
comment|/* GL_OES_compressed_ETC1_RGB8_texture */
ifndef|#
directive|ifndef
name|GL_OES_compressed_paletted_texture
DECL|macro|GL_OES_compressed_paletted_texture
define|#
directive|define
name|GL_OES_compressed_paletted_texture
value|1
DECL|macro|GL_PALETTE4_RGB8_OES
define|#
directive|define
name|GL_PALETTE4_RGB8_OES
value|0x8B90
DECL|macro|GL_PALETTE4_RGBA8_OES
define|#
directive|define
name|GL_PALETTE4_RGBA8_OES
value|0x8B91
DECL|macro|GL_PALETTE4_R5_G6_B5_OES
define|#
directive|define
name|GL_PALETTE4_R5_G6_B5_OES
value|0x8B92
DECL|macro|GL_PALETTE4_RGBA4_OES
define|#
directive|define
name|GL_PALETTE4_RGBA4_OES
value|0x8B93
DECL|macro|GL_PALETTE4_RGB5_A1_OES
define|#
directive|define
name|GL_PALETTE4_RGB5_A1_OES
value|0x8B94
DECL|macro|GL_PALETTE8_RGB8_OES
define|#
directive|define
name|GL_PALETTE8_RGB8_OES
value|0x8B95
DECL|macro|GL_PALETTE8_RGBA8_OES
define|#
directive|define
name|GL_PALETTE8_RGBA8_OES
value|0x8B96
DECL|macro|GL_PALETTE8_R5_G6_B5_OES
define|#
directive|define
name|GL_PALETTE8_R5_G6_B5_OES
value|0x8B97
DECL|macro|GL_PALETTE8_RGBA4_OES
define|#
directive|define
name|GL_PALETTE8_RGBA4_OES
value|0x8B98
DECL|macro|GL_PALETTE8_RGB5_A1_OES
define|#
directive|define
name|GL_PALETTE8_RGB5_A1_OES
value|0x8B99
endif|#
directive|endif
comment|/* GL_OES_compressed_paletted_texture */
ifndef|#
directive|ifndef
name|GL_OES_depth24
DECL|macro|GL_OES_depth24
define|#
directive|define
name|GL_OES_depth24
value|1
DECL|macro|GL_DEPTH_COMPONENT24_OES
define|#
directive|define
name|GL_DEPTH_COMPONENT24_OES
value|0x81A6
endif|#
directive|endif
comment|/* GL_OES_depth24 */
ifndef|#
directive|ifndef
name|GL_OES_depth32
DECL|macro|GL_OES_depth32
define|#
directive|define
name|GL_OES_depth32
value|1
DECL|macro|GL_DEPTH_COMPONENT32_OES
define|#
directive|define
name|GL_DEPTH_COMPONENT32_OES
value|0x81A7
endif|#
directive|endif
comment|/* GL_OES_depth32 */
ifndef|#
directive|ifndef
name|GL_OES_depth_texture
DECL|macro|GL_OES_depth_texture
define|#
directive|define
name|GL_OES_depth_texture
value|1
endif|#
directive|endif
comment|/* GL_OES_depth_texture */
ifndef|#
directive|ifndef
name|GL_OES_element_index_uint
DECL|macro|GL_OES_element_index_uint
define|#
directive|define
name|GL_OES_element_index_uint
value|1
endif|#
directive|endif
comment|/* GL_OES_element_index_uint */
ifndef|#
directive|ifndef
name|GL_OES_fbo_render_mipmap
DECL|macro|GL_OES_fbo_render_mipmap
define|#
directive|define
name|GL_OES_fbo_render_mipmap
value|1
endif|#
directive|endif
comment|/* GL_OES_fbo_render_mipmap */
ifndef|#
directive|ifndef
name|GL_OES_fragment_precision_high
DECL|macro|GL_OES_fragment_precision_high
define|#
directive|define
name|GL_OES_fragment_precision_high
value|1
endif|#
directive|endif
comment|/* GL_OES_fragment_precision_high */
ifndef|#
directive|ifndef
name|GL_OES_get_program_binary
DECL|macro|GL_OES_get_program_binary
define|#
directive|define
name|GL_OES_get_program_binary
value|1
DECL|macro|GL_PROGRAM_BINARY_LENGTH_OES
define|#
directive|define
name|GL_PROGRAM_BINARY_LENGTH_OES
value|0x8741
DECL|macro|GL_NUM_PROGRAM_BINARY_FORMATS_OES
define|#
directive|define
name|GL_NUM_PROGRAM_BINARY_FORMATS_OES
value|0x87FE
DECL|macro|GL_PROGRAM_BINARY_FORMATS_OES
define|#
directive|define
name|GL_PROGRAM_BINARY_FORMATS_OES
value|0x87FF
DECL|typedef|PFNGLGETPROGRAMBINARYOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMBINARYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLenum
modifier|*
name|binaryFormat
parameter_list|,
name|void
modifier|*
name|binary
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMBINARYOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMBINARYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramBinaryOES
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLenum
modifier|*
name|binaryFormat
parameter_list|,
name|void
modifier|*
name|binary
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramBinaryOES
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_OES_get_program_binary */
ifndef|#
directive|ifndef
name|GL_OES_mapbuffer
DECL|macro|GL_OES_mapbuffer
define|#
directive|define
name|GL_OES_mapbuffer
value|1
DECL|macro|GL_WRITE_ONLY_OES
define|#
directive|define
name|GL_WRITE_ONLY_OES
value|0x88B9
DECL|macro|GL_BUFFER_ACCESS_OES
define|#
directive|define
name|GL_BUFFER_ACCESS_OES
value|0x88BB
DECL|macro|GL_BUFFER_MAPPED_OES
define|#
directive|define
name|GL_BUFFER_MAPPED_OES
value|0x88BC
DECL|macro|GL_BUFFER_MAP_POINTER_OES
define|#
directive|define
name|GL_BUFFER_MAP_POINTER_OES
value|0x88BD
DECL|typedef|PFNGLMAPBUFFEROESPROC
typedef|typedef
name|void
modifier|*
function_decl|(
name|GL_APIENTRYP
name|PFNGLMAPBUFFEROESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNMAPBUFFEROESPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNMAPBUFFEROESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPOINTERVOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETBUFFERPOINTERVOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
modifier|*
name|GL_APIENTRY
name|glMapBufferOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glUnmapBufferOES
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetBufferPointervOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_OES_mapbuffer */
ifndef|#
directive|ifndef
name|GL_OES_packed_depth_stencil
DECL|macro|GL_OES_packed_depth_stencil
define|#
directive|define
name|GL_OES_packed_depth_stencil
value|1
DECL|macro|GL_DEPTH_STENCIL_OES
define|#
directive|define
name|GL_DEPTH_STENCIL_OES
value|0x84F9
DECL|macro|GL_UNSIGNED_INT_24_8_OES
define|#
directive|define
name|GL_UNSIGNED_INT_24_8_OES
value|0x84FA
DECL|macro|GL_DEPTH24_STENCIL8_OES
define|#
directive|define
name|GL_DEPTH24_STENCIL8_OES
value|0x88F0
endif|#
directive|endif
comment|/* GL_OES_packed_depth_stencil */
ifndef|#
directive|ifndef
name|GL_OES_required_internalformat
DECL|macro|GL_OES_required_internalformat
define|#
directive|define
name|GL_OES_required_internalformat
value|1
DECL|macro|GL_ALPHA8_OES
define|#
directive|define
name|GL_ALPHA8_OES
value|0x803C
DECL|macro|GL_DEPTH_COMPONENT16_OES
define|#
directive|define
name|GL_DEPTH_COMPONENT16_OES
value|0x81A5
DECL|macro|GL_LUMINANCE4_ALPHA4_OES
define|#
directive|define
name|GL_LUMINANCE4_ALPHA4_OES
value|0x8043
DECL|macro|GL_LUMINANCE8_ALPHA8_OES
define|#
directive|define
name|GL_LUMINANCE8_ALPHA8_OES
value|0x8045
DECL|macro|GL_LUMINANCE8_OES
define|#
directive|define
name|GL_LUMINANCE8_OES
value|0x8040
DECL|macro|GL_RGBA4_OES
define|#
directive|define
name|GL_RGBA4_OES
value|0x8056
DECL|macro|GL_RGB5_A1_OES
define|#
directive|define
name|GL_RGB5_A1_OES
value|0x8057
DECL|macro|GL_RGB565_OES
define|#
directive|define
name|GL_RGB565_OES
value|0x8D62
DECL|macro|GL_RGB8_OES
define|#
directive|define
name|GL_RGB8_OES
value|0x8051
DECL|macro|GL_RGBA8_OES
define|#
directive|define
name|GL_RGBA8_OES
value|0x8058
DECL|macro|GL_RGB10_EXT
define|#
directive|define
name|GL_RGB10_EXT
value|0x8052
DECL|macro|GL_RGB10_A2_EXT
define|#
directive|define
name|GL_RGB10_A2_EXT
value|0x8059
endif|#
directive|endif
comment|/* GL_OES_required_internalformat */
ifndef|#
directive|ifndef
name|GL_OES_rgb8_rgba8
DECL|macro|GL_OES_rgb8_rgba8
define|#
directive|define
name|GL_OES_rgb8_rgba8
value|1
endif|#
directive|endif
comment|/* GL_OES_rgb8_rgba8 */
ifndef|#
directive|ifndef
name|GL_OES_sample_shading
DECL|macro|GL_OES_sample_shading
define|#
directive|define
name|GL_OES_sample_shading
value|1
DECL|macro|GL_SAMPLE_SHADING_OES
define|#
directive|define
name|GL_SAMPLE_SHADING_OES
value|0x8C36
DECL|macro|GL_MIN_SAMPLE_SHADING_VALUE_OES
define|#
directive|define
name|GL_MIN_SAMPLE_SHADING_VALUE_OES
value|0x8C37
DECL|typedef|PFNGLMINSAMPLESHADINGOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLMINSAMPLESHADINGOESPROC
function_decl|)
parameter_list|(
name|GLfloat
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glMinSampleShadingOES
parameter_list|(
name|GLfloat
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_OES_sample_shading */
ifndef|#
directive|ifndef
name|GL_OES_sample_variables
DECL|macro|GL_OES_sample_variables
define|#
directive|define
name|GL_OES_sample_variables
value|1
endif|#
directive|endif
comment|/* GL_OES_sample_variables */
ifndef|#
directive|ifndef
name|GL_OES_shader_image_atomic
DECL|macro|GL_OES_shader_image_atomic
define|#
directive|define
name|GL_OES_shader_image_atomic
value|1
endif|#
directive|endif
comment|/* GL_OES_shader_image_atomic */
ifndef|#
directive|ifndef
name|GL_OES_shader_multisample_interpolation
DECL|macro|GL_OES_shader_multisample_interpolation
define|#
directive|define
name|GL_OES_shader_multisample_interpolation
value|1
DECL|macro|GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES
define|#
directive|define
name|GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES
value|0x8E5B
DECL|macro|GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES
define|#
directive|define
name|GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES
value|0x8E5C
DECL|macro|GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES
define|#
directive|define
name|GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES
value|0x8E5D
endif|#
directive|endif
comment|/* GL_OES_shader_multisample_interpolation */
ifndef|#
directive|ifndef
name|GL_OES_standard_derivatives
DECL|macro|GL_OES_standard_derivatives
define|#
directive|define
name|GL_OES_standard_derivatives
value|1
DECL|macro|GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
define|#
directive|define
name|GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
value|0x8B8B
endif|#
directive|endif
comment|/* GL_OES_standard_derivatives */
ifndef|#
directive|ifndef
name|GL_OES_stencil1
DECL|macro|GL_OES_stencil1
define|#
directive|define
name|GL_OES_stencil1
value|1
DECL|macro|GL_STENCIL_INDEX1_OES
define|#
directive|define
name|GL_STENCIL_INDEX1_OES
value|0x8D46
endif|#
directive|endif
comment|/* GL_OES_stencil1 */
ifndef|#
directive|ifndef
name|GL_OES_stencil4
DECL|macro|GL_OES_stencil4
define|#
directive|define
name|GL_OES_stencil4
value|1
DECL|macro|GL_STENCIL_INDEX4_OES
define|#
directive|define
name|GL_STENCIL_INDEX4_OES
value|0x8D47
endif|#
directive|endif
comment|/* GL_OES_stencil4 */
ifndef|#
directive|ifndef
name|GL_OES_surfaceless_context
DECL|macro|GL_OES_surfaceless_context
define|#
directive|define
name|GL_OES_surfaceless_context
value|1
DECL|macro|GL_FRAMEBUFFER_UNDEFINED_OES
define|#
directive|define
name|GL_FRAMEBUFFER_UNDEFINED_OES
value|0x8219
endif|#
directive|endif
comment|/* GL_OES_surfaceless_context */
ifndef|#
directive|ifndef
name|GL_OES_texture_3D
DECL|macro|GL_OES_texture_3D
define|#
directive|define
name|GL_OES_texture_3D
value|1
DECL|macro|GL_TEXTURE_WRAP_R_OES
define|#
directive|define
name|GL_TEXTURE_WRAP_R_OES
value|0x8072
DECL|macro|GL_TEXTURE_3D_OES
define|#
directive|define
name|GL_TEXTURE_3D_OES
value|0x806F
DECL|macro|GL_TEXTURE_BINDING_3D_OES
define|#
directive|define
name|GL_TEXTURE_BINDING_3D_OES
value|0x806A
DECL|macro|GL_MAX_3D_TEXTURE_SIZE_OES
define|#
directive|define
name|GL_MAX_3D_TEXTURE_SIZE_OES
value|0x8073
DECL|macro|GL_SAMPLER_3D_OES
define|#
directive|define
name|GL_SAMPLER_3D_OES
value|0x8B5F
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
value|0x8CD4
DECL|typedef|PFNGLTEXIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSUBIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSUBIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXSUBIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOPYTEXSUBIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexSubImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCopyTexSubImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCompressedTexImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCompressedTexSubImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTexture3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_OES_texture_3D */
ifndef|#
directive|ifndef
name|GL_OES_texture_compression_astc
DECL|macro|GL_OES_texture_compression_astc
define|#
directive|define
name|GL_OES_texture_compression_astc
value|1
DECL|macro|GL_COMPRESSED_RGBA_ASTC_3x3x3_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_3x3x3_OES
value|0x93C0
DECL|macro|GL_COMPRESSED_RGBA_ASTC_4x3x3_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_4x3x3_OES
value|0x93C1
DECL|macro|GL_COMPRESSED_RGBA_ASTC_4x4x3_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_4x4x3_OES
value|0x93C2
DECL|macro|GL_COMPRESSED_RGBA_ASTC_4x4x4_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_4x4x4_OES
value|0x93C3
DECL|macro|GL_COMPRESSED_RGBA_ASTC_5x4x4_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_5x4x4_OES
value|0x93C4
DECL|macro|GL_COMPRESSED_RGBA_ASTC_5x5x4_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_5x5x4_OES
value|0x93C5
DECL|macro|GL_COMPRESSED_RGBA_ASTC_5x5x5_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_5x5x5_OES
value|0x93C6
DECL|macro|GL_COMPRESSED_RGBA_ASTC_6x5x5_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_6x5x5_OES
value|0x93C7
DECL|macro|GL_COMPRESSED_RGBA_ASTC_6x6x5_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_6x6x5_OES
value|0x93C8
DECL|macro|GL_COMPRESSED_RGBA_ASTC_6x6x6_OES
define|#
directive|define
name|GL_COMPRESSED_RGBA_ASTC_6x6x6_OES
value|0x93C9
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES
value|0x93E0
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES
value|0x93E1
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES
value|0x93E2
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES
value|0x93E3
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES
value|0x93E4
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES
value|0x93E5
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES
value|0x93E6
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES
value|0x93E7
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES
value|0x93E8
DECL|macro|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES
define|#
directive|define
name|GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES
value|0x93E9
endif|#
directive|endif
comment|/* GL_OES_texture_compression_astc */
ifndef|#
directive|ifndef
name|GL_OES_texture_float
DECL|macro|GL_OES_texture_float
define|#
directive|define
name|GL_OES_texture_float
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_float */
ifndef|#
directive|ifndef
name|GL_OES_texture_float_linear
DECL|macro|GL_OES_texture_float_linear
define|#
directive|define
name|GL_OES_texture_float_linear
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_float_linear */
ifndef|#
directive|ifndef
name|GL_OES_texture_half_float
DECL|macro|GL_OES_texture_half_float
define|#
directive|define
name|GL_OES_texture_half_float
value|1
DECL|macro|GL_HALF_FLOAT_OES
define|#
directive|define
name|GL_HALF_FLOAT_OES
value|0x8D61
endif|#
directive|endif
comment|/* GL_OES_texture_half_float */
ifndef|#
directive|ifndef
name|GL_OES_texture_half_float_linear
DECL|macro|GL_OES_texture_half_float_linear
define|#
directive|define
name|GL_OES_texture_half_float_linear
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_half_float_linear */
ifndef|#
directive|ifndef
name|GL_OES_texture_npot
DECL|macro|GL_OES_texture_npot
define|#
directive|define
name|GL_OES_texture_npot
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_npot */
ifndef|#
directive|ifndef
name|GL_OES_texture_stencil8
DECL|macro|GL_OES_texture_stencil8
define|#
directive|define
name|GL_OES_texture_stencil8
value|1
DECL|macro|GL_STENCIL_INDEX_OES
define|#
directive|define
name|GL_STENCIL_INDEX_OES
value|0x1901
DECL|macro|GL_STENCIL_INDEX8_OES
define|#
directive|define
name|GL_STENCIL_INDEX8_OES
value|0x8D48
endif|#
directive|endif
comment|/* GL_OES_texture_stencil8 */
ifndef|#
directive|ifndef
name|GL_OES_texture_storage_multisample_2d_array
DECL|macro|GL_OES_texture_storage_multisample_2d_array
define|#
directive|define
name|GL_OES_texture_storage_multisample_2d_array
value|1
DECL|macro|GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES
define|#
directive|define
name|GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES
value|0x9102
DECL|macro|GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES
define|#
directive|define
name|GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES
value|0x9105
DECL|macro|GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
define|#
directive|define
name|GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
value|0x910B
DECL|macro|GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
define|#
directive|define
name|GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
value|0x910C
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
value|0x910D
DECL|typedef|PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedsamplelocations
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexStorage3DMultisampleOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedsamplelocations
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_OES_texture_storage_multisample_2d_array */
ifndef|#
directive|ifndef
name|GL_OES_vertex_array_object
DECL|macro|GL_OES_vertex_array_object
define|#
directive|define
name|GL_OES_vertex_array_object
value|1
DECL|macro|GL_VERTEX_ARRAY_BINDING_OES
define|#
directive|define
name|GL_VERTEX_ARRAY_BINDING_OES
value|0x85B5
DECL|typedef|PFNGLBINDVERTEXARRAYOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDVERTEXARRAYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEVERTEXARRAYSOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEVERTEXARRAYSOESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENVERTEXARRAYSOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENVERTEXARRAYSOESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISVERTEXARRAYOESPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISVERTEXARRAYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindVertexArrayOES
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteVertexArraysOES
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenVertexArraysOES
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsVertexArrayOES
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_OES_vertex_array_object */
ifndef|#
directive|ifndef
name|GL_OES_vertex_half_float
DECL|macro|GL_OES_vertex_half_float
define|#
directive|define
name|GL_OES_vertex_half_float
value|1
endif|#
directive|endif
comment|/* GL_OES_vertex_half_float */
ifndef|#
directive|ifndef
name|GL_OES_vertex_type_10_10_10_2
DECL|macro|GL_OES_vertex_type_10_10_10_2
define|#
directive|define
name|GL_OES_vertex_type_10_10_10_2
value|1
DECL|macro|GL_UNSIGNED_INT_10_10_10_2_OES
define|#
directive|define
name|GL_UNSIGNED_INT_10_10_10_2_OES
value|0x8DF6
DECL|macro|GL_INT_10_10_10_2_OES
define|#
directive|define
name|GL_INT_10_10_10_2_OES
value|0x8DF7
endif|#
directive|endif
comment|/* GL_OES_vertex_type_10_10_10_2 */
ifndef|#
directive|ifndef
name|GL_AMD_compressed_3DC_texture
DECL|macro|GL_AMD_compressed_3DC_texture
define|#
directive|define
name|GL_AMD_compressed_3DC_texture
value|1
DECL|macro|GL_3DC_X_AMD
define|#
directive|define
name|GL_3DC_X_AMD
value|0x87F9
DECL|macro|GL_3DC_XY_AMD
define|#
directive|define
name|GL_3DC_XY_AMD
value|0x87FA
endif|#
directive|endif
comment|/* GL_AMD_compressed_3DC_texture */
ifndef|#
directive|ifndef
name|GL_AMD_compressed_ATC_texture
DECL|macro|GL_AMD_compressed_ATC_texture
define|#
directive|define
name|GL_AMD_compressed_ATC_texture
value|1
DECL|macro|GL_ATC_RGB_AMD
define|#
directive|define
name|GL_ATC_RGB_AMD
value|0x8C92
DECL|macro|GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
define|#
directive|define
name|GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
value|0x8C93
DECL|macro|GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
define|#
directive|define
name|GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
value|0x87EE
endif|#
directive|endif
comment|/* GL_AMD_compressed_ATC_texture */
ifndef|#
directive|ifndef
name|GL_AMD_performance_monitor
DECL|macro|GL_AMD_performance_monitor
define|#
directive|define
name|GL_AMD_performance_monitor
value|1
DECL|macro|GL_COUNTER_TYPE_AMD
define|#
directive|define
name|GL_COUNTER_TYPE_AMD
value|0x8BC0
DECL|macro|GL_COUNTER_RANGE_AMD
define|#
directive|define
name|GL_COUNTER_RANGE_AMD
value|0x8BC1
DECL|macro|GL_UNSIGNED_INT64_AMD
define|#
directive|define
name|GL_UNSIGNED_INT64_AMD
value|0x8BC2
DECL|macro|GL_PERCENTAGE_AMD
define|#
directive|define
name|GL_PERCENTAGE_AMD
value|0x8BC3
DECL|macro|GL_PERFMON_RESULT_AVAILABLE_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_AVAILABLE_AMD
value|0x8BC4
DECL|macro|GL_PERFMON_RESULT_SIZE_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_SIZE_AMD
value|0x8BC5
DECL|macro|GL_PERFMON_RESULT_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_AMD
value|0x8BC6
DECL|typedef|PFNGLGETPERFMONITORGROUPSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORGROUPSAMDPROC
function_decl|)
parameter_list|(
name|GLint
modifier|*
name|numGroups
parameter_list|,
name|GLsizei
name|groupsSize
parameter_list|,
name|GLuint
modifier|*
name|groups
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERSAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLint
modifier|*
name|numCounters
parameter_list|,
name|GLint
modifier|*
name|maxActiveCounters
parameter_list|,
name|GLsizei
name|counterSize
parameter_list|,
name|GLuint
modifier|*
name|counters
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|groupString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|counterString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPERFMONITORSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENPERFMONITORSAMDPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPERFMONITORSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEPERFMONITORSAMDPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLboolean
name|enable
parameter_list|,
name|GLuint
name|group
parameter_list|,
name|GLint
name|numCounters
parameter_list|,
name|GLuint
modifier|*
name|counterList
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINPERFMONITORAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBEGINPERFMONITORAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDPERFMONITORAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENDPERFMONITORAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|data
parameter_list|,
name|GLint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorGroupsAMD
parameter_list|(
name|GLint
modifier|*
name|numGroups
parameter_list|,
name|GLsizei
name|groupsSize
parameter_list|,
name|GLuint
modifier|*
name|groups
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCountersAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLint
modifier|*
name|numCounters
parameter_list|,
name|GLint
modifier|*
name|maxActiveCounters
parameter_list|,
name|GLsizei
name|counterSize
parameter_list|,
name|GLuint
modifier|*
name|counters
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorGroupStringAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|groupString
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCounterStringAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|counterString
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCounterInfoAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenPerfMonitorsAMD
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeletePerfMonitorsAMD
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glSelectPerfMonitorCountersAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLboolean
name|enable
parameter_list|,
name|GLuint
name|group
parameter_list|,
name|GLint
name|numCounters
parameter_list|,
name|GLuint
modifier|*
name|counterList
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBeginPerfMonitorAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEndPerfMonitorAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCounterDataAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|data
parameter_list|,
name|GLint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_AMD_performance_monitor */
ifndef|#
directive|ifndef
name|GL_AMD_program_binary_Z400
DECL|macro|GL_AMD_program_binary_Z400
define|#
directive|define
name|GL_AMD_program_binary_Z400
value|1
DECL|macro|GL_Z400_BINARY_AMD
define|#
directive|define
name|GL_Z400_BINARY_AMD
value|0x8740
endif|#
directive|endif
comment|/* GL_AMD_program_binary_Z400 */
ifndef|#
directive|ifndef
name|GL_ANDROID_extension_pack_es31a
DECL|macro|GL_ANDROID_extension_pack_es31a
define|#
directive|define
name|GL_ANDROID_extension_pack_es31a
value|1
endif|#
directive|endif
comment|/* GL_ANDROID_extension_pack_es31a */
ifndef|#
directive|ifndef
name|GL_ANGLE_depth_texture
DECL|macro|GL_ANGLE_depth_texture
define|#
directive|define
name|GL_ANGLE_depth_texture
value|1
endif|#
directive|endif
comment|/* GL_ANGLE_depth_texture */
ifndef|#
directive|ifndef
name|GL_ANGLE_framebuffer_blit
DECL|macro|GL_ANGLE_framebuffer_blit
define|#
directive|define
name|GL_ANGLE_framebuffer_blit
value|1
DECL|macro|GL_READ_FRAMEBUFFER_ANGLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_ANGLE
value|0x8CA8
DECL|macro|GL_DRAW_FRAMEBUFFER_ANGLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_ANGLE
value|0x8CA9
DECL|macro|GL_DRAW_FRAMEBUFFER_BINDING_ANGLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_BINDING_ANGLE
value|0x8CA6
DECL|macro|GL_READ_FRAMEBUFFER_BINDING_ANGLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_BINDING_ANGLE
value|0x8CAA
DECL|typedef|PFNGLBLITFRAMEBUFFERANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLITFRAMEBUFFERANGLEPROC
function_decl|)
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlitFramebufferANGLE
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_ANGLE_framebuffer_blit */
ifndef|#
directive|ifndef
name|GL_ANGLE_framebuffer_multisample
DECL|macro|GL_ANGLE_framebuffer_multisample
define|#
directive|define
name|GL_ANGLE_framebuffer_multisample
value|1
DECL|macro|GL_RENDERBUFFER_SAMPLES_ANGLE
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_ANGLE
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_ANGLE
define|#
directive|define
name|GL_MAX_SAMPLES_ANGLE
value|0x8D57
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleANGLE
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_ANGLE_framebuffer_multisample */
ifndef|#
directive|ifndef
name|GL_ANGLE_instanced_arrays
DECL|macro|GL_ANGLE_instanced_arrays
define|#
directive|define
name|GL_ANGLE_instanced_arrays
value|1
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
value|0x88FE
DECL|typedef|PFNGLDRAWARRAYSINSTANCEDANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWARRAYSINSTANCEDANGLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBDIVISORANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIBDIVISORANGLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawArraysInstancedANGLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawElementsInstancedANGLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttribDivisorANGLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_ANGLE_instanced_arrays */
ifndef|#
directive|ifndef
name|GL_ANGLE_pack_reverse_row_order
DECL|macro|GL_ANGLE_pack_reverse_row_order
define|#
directive|define
name|GL_ANGLE_pack_reverse_row_order
value|1
DECL|macro|GL_PACK_REVERSE_ROW_ORDER_ANGLE
define|#
directive|define
name|GL_PACK_REVERSE_ROW_ORDER_ANGLE
value|0x93A4
endif|#
directive|endif
comment|/* GL_ANGLE_pack_reverse_row_order */
ifndef|#
directive|ifndef
name|GL_ANGLE_program_binary
DECL|macro|GL_ANGLE_program_binary
define|#
directive|define
name|GL_ANGLE_program_binary
value|1
DECL|macro|GL_PROGRAM_BINARY_ANGLE
define|#
directive|define
name|GL_PROGRAM_BINARY_ANGLE
value|0x93A6
endif|#
directive|endif
comment|/* GL_ANGLE_program_binary */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_compression_dxt3
DECL|macro|GL_ANGLE_texture_compression_dxt3
define|#
directive|define
name|GL_ANGLE_texture_compression_dxt3
value|1
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
value|0x83F2
endif|#
directive|endif
comment|/* GL_ANGLE_texture_compression_dxt3 */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_compression_dxt5
DECL|macro|GL_ANGLE_texture_compression_dxt5
define|#
directive|define
name|GL_ANGLE_texture_compression_dxt5
value|1
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
value|0x83F3
endif|#
directive|endif
comment|/* GL_ANGLE_texture_compression_dxt5 */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_usage
DECL|macro|GL_ANGLE_texture_usage
define|#
directive|define
name|GL_ANGLE_texture_usage
value|1
DECL|macro|GL_TEXTURE_USAGE_ANGLE
define|#
directive|define
name|GL_TEXTURE_USAGE_ANGLE
value|0x93A2
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_ANGLE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_ANGLE
value|0x93A3
endif|#
directive|endif
comment|/* GL_ANGLE_texture_usage */
ifndef|#
directive|ifndef
name|GL_ANGLE_translated_shader_source
DECL|macro|GL_ANGLE_translated_shader_source
define|#
directive|define
name|GL_ANGLE_translated_shader_source
value|1
DECL|macro|GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
define|#
directive|define
name|GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
value|0x93A0
DECL|typedef|PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetTranslatedShaderSourceANGLE
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_ANGLE_translated_shader_source */
ifndef|#
directive|ifndef
name|GL_APPLE_copy_texture_levels
DECL|macro|GL_APPLE_copy_texture_levels
define|#
directive|define
name|GL_APPLE_copy_texture_levels
value|1
DECL|typedef|PFNGLCOPYTEXTURELEVELSAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOPYTEXTURELEVELSAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|destinationTexture
parameter_list|,
name|GLuint
name|sourceTexture
parameter_list|,
name|GLint
name|sourceBaseLevel
parameter_list|,
name|GLsizei
name|sourceLevelCount
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCopyTextureLevelsAPPLE
parameter_list|(
name|GLuint
name|destinationTexture
parameter_list|,
name|GLuint
name|sourceTexture
parameter_list|,
name|GLint
name|sourceBaseLevel
parameter_list|,
name|GLsizei
name|sourceLevelCount
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_APPLE_copy_texture_levels */
ifndef|#
directive|ifndef
name|GL_APPLE_framebuffer_multisample
DECL|macro|GL_APPLE_framebuffer_multisample
define|#
directive|define
name|GL_APPLE_framebuffer_multisample
value|1
DECL|macro|GL_RENDERBUFFER_SAMPLES_APPLE
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_APPLE
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_APPLE
define|#
directive|define
name|GL_MAX_SAMPLES_APPLE
value|0x8D57
DECL|macro|GL_READ_FRAMEBUFFER_APPLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_APPLE
value|0x8CA8
DECL|macro|GL_DRAW_FRAMEBUFFER_APPLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_APPLE
value|0x8CA9
DECL|macro|GL_DRAW_FRAMEBUFFER_BINDING_APPLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_BINDING_APPLE
value|0x8CA6
DECL|macro|GL_READ_FRAMEBUFFER_BINDING_APPLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_BINDING_APPLE
value|0x8CAA
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleAPPLE
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glResolveMultisampleFramebufferAPPLE
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_APPLE_framebuffer_multisample */
ifndef|#
directive|ifndef
name|GL_APPLE_rgb_422
DECL|macro|GL_APPLE_rgb_422
define|#
directive|define
name|GL_APPLE_rgb_422
value|1
DECL|macro|GL_RGB_422_APPLE
define|#
directive|define
name|GL_RGB_422_APPLE
value|0x8A1F
DECL|macro|GL_UNSIGNED_SHORT_8_8_APPLE
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_APPLE
value|0x85BA
DECL|macro|GL_UNSIGNED_SHORT_8_8_REV_APPLE
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_REV_APPLE
value|0x85BB
DECL|macro|GL_RGB_RAW_422_APPLE
define|#
directive|define
name|GL_RGB_RAW_422_APPLE
value|0x8A51
endif|#
directive|endif
comment|/* GL_APPLE_rgb_422 */
ifndef|#
directive|ifndef
name|GL_APPLE_sync
DECL|macro|GL_APPLE_sync
define|#
directive|define
name|GL_APPLE_sync
value|1
DECL|macro|GL_SYNC_OBJECT_APPLE
define|#
directive|define
name|GL_SYNC_OBJECT_APPLE
value|0x8A53
DECL|macro|GL_MAX_SERVER_WAIT_TIMEOUT_APPLE
define|#
directive|define
name|GL_MAX_SERVER_WAIT_TIMEOUT_APPLE
value|0x9111
DECL|macro|GL_OBJECT_TYPE_APPLE
define|#
directive|define
name|GL_OBJECT_TYPE_APPLE
value|0x9112
DECL|macro|GL_SYNC_CONDITION_APPLE
define|#
directive|define
name|GL_SYNC_CONDITION_APPLE
value|0x9113
DECL|macro|GL_SYNC_STATUS_APPLE
define|#
directive|define
name|GL_SYNC_STATUS_APPLE
value|0x9114
DECL|macro|GL_SYNC_FLAGS_APPLE
define|#
directive|define
name|GL_SYNC_FLAGS_APPLE
value|0x9115
DECL|macro|GL_SYNC_FENCE_APPLE
define|#
directive|define
name|GL_SYNC_FENCE_APPLE
value|0x9116
DECL|macro|GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE
define|#
directive|define
name|GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE
value|0x9117
DECL|macro|GL_UNSIGNALED_APPLE
define|#
directive|define
name|GL_UNSIGNALED_APPLE
value|0x9118
DECL|macro|GL_SIGNALED_APPLE
define|#
directive|define
name|GL_SIGNALED_APPLE
value|0x9119
DECL|macro|GL_ALREADY_SIGNALED_APPLE
define|#
directive|define
name|GL_ALREADY_SIGNALED_APPLE
value|0x911A
DECL|macro|GL_TIMEOUT_EXPIRED_APPLE
define|#
directive|define
name|GL_TIMEOUT_EXPIRED_APPLE
value|0x911B
DECL|macro|GL_CONDITION_SATISFIED_APPLE
define|#
directive|define
name|GL_CONDITION_SATISFIED_APPLE
value|0x911C
DECL|macro|GL_WAIT_FAILED_APPLE
define|#
directive|define
name|GL_WAIT_FAILED_APPLE
value|0x911D
DECL|macro|GL_SYNC_FLUSH_COMMANDS_BIT_APPLE
define|#
directive|define
name|GL_SYNC_FLUSH_COMMANDS_BIT_APPLE
value|0x00000001
DECL|macro|GL_TIMEOUT_IGNORED_APPLE
define|#
directive|define
name|GL_TIMEOUT_IGNORED_APPLE
value|0xFFFFFFFFFFFFFFFFull
DECL|typedef|PFNGLFENCESYNCAPPLEPROC
typedef|typedef
name|GLsync
function_decl|(
name|GL_APIENTRYP
name|PFNGLFENCESYNCAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|condition
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISSYNCAPPLEPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISSYNCAPPLEPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETESYNCAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETESYNCAPPLEPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLIENTWAITSYNCAPPLEPROC
typedef|typedef
name|GLenum
function_decl|(
name|GL_APIENTRYP
name|PFNGLCLIENTWAITSYNCAPPLEPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWAITSYNCAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLWAITSYNCAPPLEPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGER64VAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETINTEGER64VAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSYNCIVAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSYNCIVAPPLEPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|GLsync
name|GL_APIENTRY
name|glFenceSyncAPPLE
parameter_list|(
name|GLenum
name|condition
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsSyncAPPLE
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteSyncAPPLE
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLenum
name|GL_APIENTRY
name|glClientWaitSyncAPPLE
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glWaitSyncAPPLE
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetInteger64vAPPLE
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetSyncivAPPLE
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_APPLE_sync */
ifndef|#
directive|ifndef
name|GL_APPLE_texture_format_BGRA8888
DECL|macro|GL_APPLE_texture_format_BGRA8888
define|#
directive|define
name|GL_APPLE_texture_format_BGRA8888
value|1
DECL|macro|GL_BGRA_EXT
define|#
directive|define
name|GL_BGRA_EXT
value|0x80E1
DECL|macro|GL_BGRA8_EXT
define|#
directive|define
name|GL_BGRA8_EXT
value|0x93A1
endif|#
directive|endif
comment|/* GL_APPLE_texture_format_BGRA8888 */
ifndef|#
directive|ifndef
name|GL_APPLE_texture_max_level
DECL|macro|GL_APPLE_texture_max_level
define|#
directive|define
name|GL_APPLE_texture_max_level
value|1
DECL|macro|GL_TEXTURE_MAX_LEVEL_APPLE
define|#
directive|define
name|GL_TEXTURE_MAX_LEVEL_APPLE
value|0x813D
endif|#
directive|endif
comment|/* GL_APPLE_texture_max_level */
ifndef|#
directive|ifndef
name|GL_ARM_mali_program_binary
DECL|macro|GL_ARM_mali_program_binary
define|#
directive|define
name|GL_ARM_mali_program_binary
value|1
DECL|macro|GL_MALI_PROGRAM_BINARY_ARM
define|#
directive|define
name|GL_MALI_PROGRAM_BINARY_ARM
value|0x8F61
endif|#
directive|endif
comment|/* GL_ARM_mali_program_binary */
ifndef|#
directive|ifndef
name|GL_ARM_mali_shader_binary
DECL|macro|GL_ARM_mali_shader_binary
define|#
directive|define
name|GL_ARM_mali_shader_binary
value|1
DECL|macro|GL_MALI_SHADER_BINARY_ARM
define|#
directive|define
name|GL_MALI_SHADER_BINARY_ARM
value|0x8F60
endif|#
directive|endif
comment|/* GL_ARM_mali_shader_binary */
ifndef|#
directive|ifndef
name|GL_ARM_rgba8
DECL|macro|GL_ARM_rgba8
define|#
directive|define
name|GL_ARM_rgba8
value|1
endif|#
directive|endif
comment|/* GL_ARM_rgba8 */
ifndef|#
directive|ifndef
name|GL_ARM_shader_framebuffer_fetch
DECL|macro|GL_ARM_shader_framebuffer_fetch
define|#
directive|define
name|GL_ARM_shader_framebuffer_fetch
value|1
DECL|macro|GL_FETCH_PER_SAMPLE_ARM
define|#
directive|define
name|GL_FETCH_PER_SAMPLE_ARM
value|0x8F65
DECL|macro|GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM
define|#
directive|define
name|GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM
value|0x8F66
endif|#
directive|endif
comment|/* GL_ARM_shader_framebuffer_fetch */
ifndef|#
directive|ifndef
name|GL_ARM_shader_framebuffer_fetch_depth_stencil
DECL|macro|GL_ARM_shader_framebuffer_fetch_depth_stencil
define|#
directive|define
name|GL_ARM_shader_framebuffer_fetch_depth_stencil
value|1
endif|#
directive|endif
comment|/* GL_ARM_shader_framebuffer_fetch_depth_stencil */
ifndef|#
directive|ifndef
name|GL_DMP_shader_binary
DECL|macro|GL_DMP_shader_binary
define|#
directive|define
name|GL_DMP_shader_binary
value|1
DECL|macro|GL_SHADER_BINARY_DMP
define|#
directive|define
name|GL_SHADER_BINARY_DMP
value|0x9250
endif|#
directive|endif
comment|/* GL_DMP_shader_binary */
ifndef|#
directive|ifndef
name|GL_EXT_blend_minmax
DECL|macro|GL_EXT_blend_minmax
define|#
directive|define
name|GL_EXT_blend_minmax
value|1
DECL|macro|GL_MIN_EXT
define|#
directive|define
name|GL_MIN_EXT
value|0x8007
DECL|macro|GL_MAX_EXT
define|#
directive|define
name|GL_MAX_EXT
value|0x8008
endif|#
directive|endif
comment|/* GL_EXT_blend_minmax */
ifndef|#
directive|ifndef
name|GL_EXT_color_buffer_half_float
DECL|macro|GL_EXT_color_buffer_half_float
define|#
directive|define
name|GL_EXT_color_buffer_half_float
value|1
DECL|macro|GL_RGBA16F_EXT
define|#
directive|define
name|GL_RGBA16F_EXT
value|0x881A
DECL|macro|GL_RGB16F_EXT
define|#
directive|define
name|GL_RGB16F_EXT
value|0x881B
DECL|macro|GL_RG16F_EXT
define|#
directive|define
name|GL_RG16F_EXT
value|0x822F
DECL|macro|GL_R16F_EXT
define|#
directive|define
name|GL_R16F_EXT
value|0x822D
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
value|0x8211
DECL|macro|GL_UNSIGNED_NORMALIZED_EXT
define|#
directive|define
name|GL_UNSIGNED_NORMALIZED_EXT
value|0x8C17
endif|#
directive|endif
comment|/* GL_EXT_color_buffer_half_float */
ifndef|#
directive|ifndef
name|GL_EXT_copy_image
DECL|macro|GL_EXT_copy_image
define|#
directive|define
name|GL_EXT_copy_image
value|1
DECL|typedef|PFNGLCOPYIMAGESUBDATAEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOPYIMAGESUBDATAEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|srcName
parameter_list|,
name|GLenum
name|srcTarget
parameter_list|,
name|GLint
name|srcLevel
parameter_list|,
name|GLint
name|srcX
parameter_list|,
name|GLint
name|srcY
parameter_list|,
name|GLint
name|srcZ
parameter_list|,
name|GLuint
name|dstName
parameter_list|,
name|GLenum
name|dstTarget
parameter_list|,
name|GLint
name|dstLevel
parameter_list|,
name|GLint
name|dstX
parameter_list|,
name|GLint
name|dstY
parameter_list|,
name|GLint
name|dstZ
parameter_list|,
name|GLsizei
name|srcWidth
parameter_list|,
name|GLsizei
name|srcHeight
parameter_list|,
name|GLsizei
name|srcDepth
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCopyImageSubDataEXT
parameter_list|(
name|GLuint
name|srcName
parameter_list|,
name|GLenum
name|srcTarget
parameter_list|,
name|GLint
name|srcLevel
parameter_list|,
name|GLint
name|srcX
parameter_list|,
name|GLint
name|srcY
parameter_list|,
name|GLint
name|srcZ
parameter_list|,
name|GLuint
name|dstName
parameter_list|,
name|GLenum
name|dstTarget
parameter_list|,
name|GLint
name|dstLevel
parameter_list|,
name|GLint
name|dstX
parameter_list|,
name|GLint
name|dstY
parameter_list|,
name|GLint
name|dstZ
parameter_list|,
name|GLsizei
name|srcWidth
parameter_list|,
name|GLsizei
name|srcHeight
parameter_list|,
name|GLsizei
name|srcDepth
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_copy_image */
ifndef|#
directive|ifndef
name|GL_EXT_debug_label
DECL|macro|GL_EXT_debug_label
define|#
directive|define
name|GL_EXT_debug_label
value|1
DECL|macro|GL_PROGRAM_PIPELINE_OBJECT_EXT
define|#
directive|define
name|GL_PROGRAM_PIPELINE_OBJECT_EXT
value|0x8A4F
DECL|macro|GL_PROGRAM_OBJECT_EXT
define|#
directive|define
name|GL_PROGRAM_OBJECT_EXT
value|0x8B40
DECL|macro|GL_SHADER_OBJECT_EXT
define|#
directive|define
name|GL_SHADER_OBJECT_EXT
value|0x8B48
DECL|macro|GL_BUFFER_OBJECT_EXT
define|#
directive|define
name|GL_BUFFER_OBJECT_EXT
value|0x9151
DECL|macro|GL_QUERY_OBJECT_EXT
define|#
directive|define
name|GL_QUERY_OBJECT_EXT
value|0x9153
DECL|macro|GL_VERTEX_ARRAY_OBJECT_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_OBJECT_EXT
value|0x9154
DECL|macro|GL_TRANSFORM_FEEDBACK
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK
value|0x8E22
DECL|typedef|PFNGLLABELOBJECTEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLLABELOBJECTEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTLABELEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETOBJECTLABELEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glLabelObjectEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetObjectLabelEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_debug_label */
ifndef|#
directive|ifndef
name|GL_EXT_debug_marker
DECL|macro|GL_EXT_debug_marker
define|#
directive|define
name|GL_EXT_debug_marker
value|1
DECL|typedef|PFNGLINSERTEVENTMARKEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLINSERTEVENTMARKEREXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPUSHGROUPMARKEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPUSHGROUPMARKEREXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOPGROUPMARKEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPOPGROUPMARKEREXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glInsertEventMarkerEXT
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPushGroupMarkerEXT
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPopGroupMarkerEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_debug_marker */
ifndef|#
directive|ifndef
name|GL_EXT_discard_framebuffer
DECL|macro|GL_EXT_discard_framebuffer
define|#
directive|define
name|GL_EXT_discard_framebuffer
value|1
DECL|macro|GL_COLOR_EXT
define|#
directive|define
name|GL_COLOR_EXT
value|0x1800
DECL|macro|GL_DEPTH_EXT
define|#
directive|define
name|GL_DEPTH_EXT
value|0x1801
DECL|macro|GL_STENCIL_EXT
define|#
directive|define
name|GL_STENCIL_EXT
value|0x1802
DECL|typedef|PFNGLDISCARDFRAMEBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDISCARDFRAMEBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numAttachments
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|attachments
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDiscardFramebufferEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numAttachments
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|attachments
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_discard_framebuffer */
ifndef|#
directive|ifndef
name|GL_EXT_disjoint_timer_query
DECL|macro|GL_EXT_disjoint_timer_query
define|#
directive|define
name|GL_EXT_disjoint_timer_query
value|1
DECL|macro|GL_QUERY_COUNTER_BITS_EXT
define|#
directive|define
name|GL_QUERY_COUNTER_BITS_EXT
value|0x8864
DECL|macro|GL_CURRENT_QUERY_EXT
define|#
directive|define
name|GL_CURRENT_QUERY_EXT
value|0x8865
DECL|macro|GL_QUERY_RESULT_EXT
define|#
directive|define
name|GL_QUERY_RESULT_EXT
value|0x8866
DECL|macro|GL_QUERY_RESULT_AVAILABLE_EXT
define|#
directive|define
name|GL_QUERY_RESULT_AVAILABLE_EXT
value|0x8867
DECL|macro|GL_TIME_ELAPSED_EXT
define|#
directive|define
name|GL_TIME_ELAPSED_EXT
value|0x88BF
DECL|macro|GL_TIMESTAMP_EXT
define|#
directive|define
name|GL_TIMESTAMP_EXT
value|0x8E28
DECL|macro|GL_GPU_DISJOINT_EXT
define|#
directive|define
name|GL_GPU_DISJOINT_EXT
value|0x8FBB
DECL|typedef|PFNGLGENQUERIESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENQUERIESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEQUERIESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEQUERIESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISQUERYEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISQUERYEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINQUERYEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBEGINQUERYEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDQUERYEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENDQUERYEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLQUERYCOUNTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLQUERYCOUNTEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETQUERYIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETQUERYOBJECTIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETQUERYOBJECTUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTI64VEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETQUERYOBJECTI64VEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTUI64VEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETQUERYOBJECTUI64VEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64
modifier|*
name|params
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenQueriesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteQueriesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsQueryEXT
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBeginQueryEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEndQueryEXT
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glQueryCounterEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetQueryivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetQueryObjectivEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetQueryObjectuivEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetQueryObjecti64vEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetQueryObjectui64vEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_disjoint_timer_query */
ifndef|#
directive|ifndef
name|GL_EXT_draw_buffers
DECL|macro|GL_EXT_draw_buffers
define|#
directive|define
name|GL_EXT_draw_buffers
value|1
DECL|macro|GL_MAX_COLOR_ATTACHMENTS_EXT
define|#
directive|define
name|GL_MAX_COLOR_ATTACHMENTS_EXT
value|0x8CDF
DECL|macro|GL_MAX_DRAW_BUFFERS_EXT
define|#
directive|define
name|GL_MAX_DRAW_BUFFERS_EXT
value|0x8824
DECL|macro|GL_DRAW_BUFFER0_EXT
define|#
directive|define
name|GL_DRAW_BUFFER0_EXT
value|0x8825
DECL|macro|GL_DRAW_BUFFER1_EXT
define|#
directive|define
name|GL_DRAW_BUFFER1_EXT
value|0x8826
DECL|macro|GL_DRAW_BUFFER2_EXT
define|#
directive|define
name|GL_DRAW_BUFFER2_EXT
value|0x8827
DECL|macro|GL_DRAW_BUFFER3_EXT
define|#
directive|define
name|GL_DRAW_BUFFER3_EXT
value|0x8828
DECL|macro|GL_DRAW_BUFFER4_EXT
define|#
directive|define
name|GL_DRAW_BUFFER4_EXT
value|0x8829
DECL|macro|GL_DRAW_BUFFER5_EXT
define|#
directive|define
name|GL_DRAW_BUFFER5_EXT
value|0x882A
DECL|macro|GL_DRAW_BUFFER6_EXT
define|#
directive|define
name|GL_DRAW_BUFFER6_EXT
value|0x882B
DECL|macro|GL_DRAW_BUFFER7_EXT
define|#
directive|define
name|GL_DRAW_BUFFER7_EXT
value|0x882C
DECL|macro|GL_DRAW_BUFFER8_EXT
define|#
directive|define
name|GL_DRAW_BUFFER8_EXT
value|0x882D
DECL|macro|GL_DRAW_BUFFER9_EXT
define|#
directive|define
name|GL_DRAW_BUFFER9_EXT
value|0x882E
DECL|macro|GL_DRAW_BUFFER10_EXT
define|#
directive|define
name|GL_DRAW_BUFFER10_EXT
value|0x882F
DECL|macro|GL_DRAW_BUFFER11_EXT
define|#
directive|define
name|GL_DRAW_BUFFER11_EXT
value|0x8830
DECL|macro|GL_DRAW_BUFFER12_EXT
define|#
directive|define
name|GL_DRAW_BUFFER12_EXT
value|0x8831
DECL|macro|GL_DRAW_BUFFER13_EXT
define|#
directive|define
name|GL_DRAW_BUFFER13_EXT
value|0x8832
DECL|macro|GL_DRAW_BUFFER14_EXT
define|#
directive|define
name|GL_DRAW_BUFFER14_EXT
value|0x8833
DECL|macro|GL_DRAW_BUFFER15_EXT
define|#
directive|define
name|GL_DRAW_BUFFER15_EXT
value|0x8834
DECL|macro|GL_COLOR_ATTACHMENT0_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT0_EXT
value|0x8CE0
DECL|macro|GL_COLOR_ATTACHMENT1_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT1_EXT
value|0x8CE1
DECL|macro|GL_COLOR_ATTACHMENT2_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT2_EXT
value|0x8CE2
DECL|macro|GL_COLOR_ATTACHMENT3_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT3_EXT
value|0x8CE3
DECL|macro|GL_COLOR_ATTACHMENT4_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT4_EXT
value|0x8CE4
DECL|macro|GL_COLOR_ATTACHMENT5_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT5_EXT
value|0x8CE5
DECL|macro|GL_COLOR_ATTACHMENT6_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT6_EXT
value|0x8CE6
DECL|macro|GL_COLOR_ATTACHMENT7_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT7_EXT
value|0x8CE7
DECL|macro|GL_COLOR_ATTACHMENT8_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT8_EXT
value|0x8CE8
DECL|macro|GL_COLOR_ATTACHMENT9_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT9_EXT
value|0x8CE9
DECL|macro|GL_COLOR_ATTACHMENT10_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT10_EXT
value|0x8CEA
DECL|macro|GL_COLOR_ATTACHMENT11_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT11_EXT
value|0x8CEB
DECL|macro|GL_COLOR_ATTACHMENT12_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT12_EXT
value|0x8CEC
DECL|macro|GL_COLOR_ATTACHMENT13_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT13_EXT
value|0x8CED
DECL|macro|GL_COLOR_ATTACHMENT14_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT14_EXT
value|0x8CEE
DECL|macro|GL_COLOR_ATTACHMENT15_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT15_EXT
value|0x8CEF
DECL|typedef|PFNGLDRAWBUFFERSEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWBUFFERSEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawBuffersEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_draw_buffers */
ifndef|#
directive|ifndef
name|GL_EXT_draw_buffers_indexed
DECL|macro|GL_EXT_draw_buffers_indexed
define|#
directive|define
name|GL_EXT_draw_buffers_indexed
value|1
DECL|macro|GL_MIN
define|#
directive|define
name|GL_MIN
value|0x8007
DECL|macro|GL_MAX
define|#
directive|define
name|GL_MAX
value|0x8008
DECL|typedef|PFNGLENABLEIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENABLEIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDISABLEIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDEQUATIONIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONSEPARATEIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDEQUATIONSEPARATEIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDFUNCIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCSEPARATEIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDFUNCSEPARATEIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORMASKIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOLORMASKIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLboolean
name|r
parameter_list|,
name|GLboolean
name|g
parameter_list|,
name|GLboolean
name|b
parameter_list|,
name|GLboolean
name|a
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISENABLEDIEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISENABLEDIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEnableiEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDisableiEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendEquationiEXT
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendEquationSeparateiEXT
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendFunciEXT
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendFuncSeparateiEXT
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glColorMaskiEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLboolean
name|r
parameter_list|,
name|GLboolean
name|g
parameter_list|,
name|GLboolean
name|b
parameter_list|,
name|GLboolean
name|a
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsEnablediEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_draw_buffers_indexed */
ifndef|#
directive|ifndef
name|GL_EXT_draw_instanced
DECL|macro|GL_EXT_draw_instanced
define|#
directive|define
name|GL_EXT_draw_instanced
value|1
DECL|typedef|PFNGLDRAWARRAYSINSTANCEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWARRAYSINSTANCEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawArraysInstancedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawElementsInstancedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_draw_instanced */
ifndef|#
directive|ifndef
name|GL_EXT_geometry_point_size
DECL|macro|GL_EXT_geometry_point_size
define|#
directive|define
name|GL_EXT_geometry_point_size
value|1
endif|#
directive|endif
comment|/* GL_EXT_geometry_point_size */
ifndef|#
directive|ifndef
name|GL_EXT_geometry_shader
DECL|macro|GL_EXT_geometry_shader
define|#
directive|define
name|GL_EXT_geometry_shader
value|1
DECL|macro|GL_GEOMETRY_SHADER_EXT
define|#
directive|define
name|GL_GEOMETRY_SHADER_EXT
value|0x8DD9
DECL|macro|GL_GEOMETRY_SHADER_BIT_EXT
define|#
directive|define
name|GL_GEOMETRY_SHADER_BIT_EXT
value|0x00000004
DECL|macro|GL_GEOMETRY_LINKED_VERTICES_OUT_EXT
define|#
directive|define
name|GL_GEOMETRY_LINKED_VERTICES_OUT_EXT
value|0x8916
DECL|macro|GL_GEOMETRY_LINKED_INPUT_TYPE_EXT
define|#
directive|define
name|GL_GEOMETRY_LINKED_INPUT_TYPE_EXT
value|0x8917
DECL|macro|GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT
define|#
directive|define
name|GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT
value|0x8918
DECL|macro|GL_GEOMETRY_SHADER_INVOCATIONS_EXT
define|#
directive|define
name|GL_GEOMETRY_SHADER_INVOCATIONS_EXT
value|0x887F
DECL|macro|GL_LAYER_PROVOKING_VERTEX_EXT
define|#
directive|define
name|GL_LAYER_PROVOKING_VERTEX_EXT
value|0x825E
DECL|macro|GL_LINES_ADJACENCY_EXT
define|#
directive|define
name|GL_LINES_ADJACENCY_EXT
value|0x000A
DECL|macro|GL_LINE_STRIP_ADJACENCY_EXT
define|#
directive|define
name|GL_LINE_STRIP_ADJACENCY_EXT
value|0x000B
DECL|macro|GL_TRIANGLES_ADJACENCY_EXT
define|#
directive|define
name|GL_TRIANGLES_ADJACENCY_EXT
value|0x000C
DECL|macro|GL_TRIANGLE_STRIP_ADJACENCY_EXT
define|#
directive|define
name|GL_TRIANGLE_STRIP_ADJACENCY_EXT
value|0x000D
DECL|macro|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
value|0x8DDF
DECL|macro|GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT
value|0x8A2C
DECL|macro|GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT
value|0x8A32
DECL|macro|GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT
value|0x9123
DECL|macro|GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT
value|0x9124
DECL|macro|GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
value|0x8DE0
DECL|macro|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
value|0x8DE1
DECL|macro|GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT
value|0x8E5A
DECL|macro|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
value|0x8C29
DECL|macro|GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT
value|0x92CF
DECL|macro|GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT
value|0x92D5
DECL|macro|GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT
value|0x90CD
DECL|macro|GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT
value|0x90D7
DECL|macro|GL_FIRST_VERTEX_CONVENTION_EXT
define|#
directive|define
name|GL_FIRST_VERTEX_CONVENTION_EXT
value|0x8E4D
DECL|macro|GL_LAST_VERTEX_CONVENTION_EXT
define|#
directive|define
name|GL_LAST_VERTEX_CONVENTION_EXT
value|0x8E4E
DECL|macro|GL_UNDEFINED_VERTEX_EXT
define|#
directive|define
name|GL_UNDEFINED_VERTEX_EXT
value|0x8260
DECL|macro|GL_PRIMITIVES_GENERATED_EXT
define|#
directive|define
name|GL_PRIMITIVES_GENERATED_EXT
value|0x8C87
DECL|macro|GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT
value|0x9312
DECL|macro|GL_MAX_FRAMEBUFFER_LAYERS_EXT
define|#
directive|define
name|GL_MAX_FRAMEBUFFER_LAYERS_EXT
value|0x9317
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
value|0x8DA8
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
value|0x8DA7
DECL|macro|GL_REFERENCED_BY_GEOMETRY_SHADER_EXT
define|#
directive|define
name|GL_REFERENCED_BY_GEOMETRY_SHADER_EXT
value|0x9309
DECL|typedef|PFNGLFRAMEBUFFERTEXTUREEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTextureEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_geometry_shader */
ifndef|#
directive|ifndef
name|GL_EXT_gpu_shader5
DECL|macro|GL_EXT_gpu_shader5
define|#
directive|define
name|GL_EXT_gpu_shader5
value|1
endif|#
directive|endif
comment|/* GL_EXT_gpu_shader5 */
ifndef|#
directive|ifndef
name|GL_EXT_instanced_arrays
DECL|macro|GL_EXT_instanced_arrays
define|#
directive|define
name|GL_EXT_instanced_arrays
value|1
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT
value|0x88FE
DECL|typedef|PFNGLVERTEXATTRIBDIVISOREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIBDIVISOREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttribDivisorEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_instanced_arrays */
ifndef|#
directive|ifndef
name|GL_EXT_map_buffer_range
DECL|macro|GL_EXT_map_buffer_range
define|#
directive|define
name|GL_EXT_map_buffer_range
value|1
DECL|macro|GL_MAP_READ_BIT_EXT
define|#
directive|define
name|GL_MAP_READ_BIT_EXT
value|0x0001
DECL|macro|GL_MAP_WRITE_BIT_EXT
define|#
directive|define
name|GL_MAP_WRITE_BIT_EXT
value|0x0002
DECL|macro|GL_MAP_INVALIDATE_RANGE_BIT_EXT
define|#
directive|define
name|GL_MAP_INVALIDATE_RANGE_BIT_EXT
value|0x0004
DECL|macro|GL_MAP_INVALIDATE_BUFFER_BIT_EXT
define|#
directive|define
name|GL_MAP_INVALIDATE_BUFFER_BIT_EXT
value|0x0008
DECL|macro|GL_MAP_FLUSH_EXPLICIT_BIT_EXT
define|#
directive|define
name|GL_MAP_FLUSH_EXPLICIT_BIT_EXT
value|0x0010
DECL|macro|GL_MAP_UNSYNCHRONIZED_BIT_EXT
define|#
directive|define
name|GL_MAP_UNSYNCHRONIZED_BIT_EXT
value|0x0020
DECL|typedef|PFNGLMAPBUFFERRANGEEXTPROC
typedef|typedef
name|void
modifier|*
function_decl|(
name|GL_APIENTRYP
name|PFNGLMAPBUFFERRANGEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|,
name|GLbitfield
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
modifier|*
name|GL_APIENTRY
name|glMapBufferRangeEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|,
name|GLbitfield
name|access
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFlushMappedBufferRangeEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_map_buffer_range */
ifndef|#
directive|ifndef
name|GL_EXT_multi_draw_arrays
DECL|macro|GL_EXT_multi_draw_arrays
define|#
directive|define
name|GL_EXT_multi_draw_arrays
value|1
DECL|typedef|PFNGLMULTIDRAWARRAYSEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLMULTIDRAWARRAYSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWELEMENTSEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLMULTIDRAWELEMENTSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glMultiDrawArraysEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glMultiDrawElementsEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_multi_draw_arrays */
ifndef|#
directive|ifndef
name|GL_EXT_multisampled_render_to_texture
DECL|macro|GL_EXT_multisampled_render_to_texture
define|#
directive|define
name|GL_EXT_multisampled_render_to_texture
value|1
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
value|0x8D6C
DECL|macro|GL_RENDERBUFFER_SAMPLES_EXT
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_EXT
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_EXT
define|#
directive|define
name|GL_MAX_SAMPLES_EXT
value|0x8D57
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLsizei
name|samples
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTexture2DMultisampleEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLsizei
name|samples
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_multisampled_render_to_texture */
ifndef|#
directive|ifndef
name|GL_EXT_multiview_draw_buffers
DECL|macro|GL_EXT_multiview_draw_buffers
define|#
directive|define
name|GL_EXT_multiview_draw_buffers
value|1
DECL|macro|GL_COLOR_ATTACHMENT_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT_EXT
value|0x90F0
DECL|macro|GL_MULTIVIEW_EXT
define|#
directive|define
name|GL_MULTIVIEW_EXT
value|0x90F1
DECL|macro|GL_DRAW_BUFFER_EXT
define|#
directive|define
name|GL_DRAW_BUFFER_EXT
value|0x0C01
DECL|macro|GL_READ_BUFFER_EXT
define|#
directive|define
name|GL_READ_BUFFER_EXT
value|0x0C02
DECL|macro|GL_MAX_MULTIVIEW_BUFFERS_EXT
define|#
directive|define
name|GL_MAX_MULTIVIEW_BUFFERS_EXT
value|0x90F2
DECL|typedef|PFNGLREADBUFFERINDEXEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLREADBUFFERINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|src
parameter_list|,
name|GLint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWBUFFERSINDEXEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWBUFFERSINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|location
parameter_list|,
specifier|const
name|GLint
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGERI_VEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETINTEGERI_VEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReadBufferIndexedEXT
parameter_list|(
name|GLenum
name|src
parameter_list|,
name|GLint
name|index
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawBuffersIndexedEXT
parameter_list|(
name|GLint
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|location
parameter_list|,
specifier|const
name|GLint
modifier|*
name|indices
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetIntegeri_vEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_multiview_draw_buffers */
ifndef|#
directive|ifndef
name|GL_EXT_occlusion_query_boolean
DECL|macro|GL_EXT_occlusion_query_boolean
define|#
directive|define
name|GL_EXT_occlusion_query_boolean
value|1
DECL|macro|GL_ANY_SAMPLES_PASSED_EXT
define|#
directive|define
name|GL_ANY_SAMPLES_PASSED_EXT
value|0x8C2F
DECL|macro|GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
define|#
directive|define
name|GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
value|0x8D6A
endif|#
directive|endif
comment|/* GL_EXT_occlusion_query_boolean */
ifndef|#
directive|ifndef
name|GL_EXT_primitive_bounding_box
DECL|macro|GL_EXT_primitive_bounding_box
define|#
directive|define
name|GL_EXT_primitive_bounding_box
value|1
DECL|macro|GL_PRIMITIVE_BOUNDING_BOX_EXT
define|#
directive|define
name|GL_PRIMITIVE_BOUNDING_BOX_EXT
value|0x92BE
DECL|typedef|PFNGLPRIMITIVEBOUNDINGBOXEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPRIMITIVEBOUNDINGBOXEXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|minX
parameter_list|,
name|GLfloat
name|minY
parameter_list|,
name|GLfloat
name|minZ
parameter_list|,
name|GLfloat
name|minW
parameter_list|,
name|GLfloat
name|maxX
parameter_list|,
name|GLfloat
name|maxY
parameter_list|,
name|GLfloat
name|maxZ
parameter_list|,
name|GLfloat
name|maxW
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPrimitiveBoundingBoxEXT
parameter_list|(
name|GLfloat
name|minX
parameter_list|,
name|GLfloat
name|minY
parameter_list|,
name|GLfloat
name|minZ
parameter_list|,
name|GLfloat
name|minW
parameter_list|,
name|GLfloat
name|maxX
parameter_list|,
name|GLfloat
name|maxY
parameter_list|,
name|GLfloat
name|maxZ
parameter_list|,
name|GLfloat
name|maxW
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_primitive_bounding_box */
ifndef|#
directive|ifndef
name|GL_EXT_pvrtc_sRGB
DECL|macro|GL_EXT_pvrtc_sRGB
define|#
directive|define
name|GL_EXT_pvrtc_sRGB
value|1
DECL|macro|GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT
value|0x8A54
DECL|macro|GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT
value|0x8A55
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT
value|0x8A56
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT
value|0x8A57
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG
value|0x93F0
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG
value|0x93F1
endif|#
directive|endif
comment|/* GL_EXT_pvrtc_sRGB */
ifndef|#
directive|ifndef
name|GL_EXT_read_format_bgra
DECL|macro|GL_EXT_read_format_bgra
define|#
directive|define
name|GL_EXT_read_format_bgra
value|1
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
value|0x8365
DECL|macro|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
value|0x8366
endif|#
directive|endif
comment|/* GL_EXT_read_format_bgra */
ifndef|#
directive|ifndef
name|GL_EXT_robustness
DECL|macro|GL_EXT_robustness
define|#
directive|define
name|GL_EXT_robustness
value|1
DECL|macro|GL_GUILTY_CONTEXT_RESET_EXT
define|#
directive|define
name|GL_GUILTY_CONTEXT_RESET_EXT
value|0x8253
DECL|macro|GL_INNOCENT_CONTEXT_RESET_EXT
define|#
directive|define
name|GL_INNOCENT_CONTEXT_RESET_EXT
value|0x8254
DECL|macro|GL_UNKNOWN_CONTEXT_RESET_EXT
define|#
directive|define
name|GL_UNKNOWN_CONTEXT_RESET_EXT
value|0x8255
DECL|macro|GL_CONTEXT_ROBUST_ACCESS_EXT
define|#
directive|define
name|GL_CONTEXT_ROBUST_ACCESS_EXT
value|0x90F3
DECL|macro|GL_RESET_NOTIFICATION_STRATEGY_EXT
define|#
directive|define
name|GL_RESET_NOTIFICATION_STRATEGY_EXT
value|0x8256
DECL|macro|GL_LOSE_CONTEXT_ON_RESET_EXT
define|#
directive|define
name|GL_LOSE_CONTEXT_ON_RESET_EXT
value|0x8252
DECL|macro|GL_NO_RESET_NOTIFICATION_EXT
define|#
directive|define
name|GL_NO_RESET_NOTIFICATION_EXT
value|0x8261
DECL|typedef|PFNGLGETGRAPHICSRESETSTATUSEXTPROC
typedef|typedef
name|GLenum
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETGRAPHICSRESETSTATUSEXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREADNPIXELSEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLREADNPIXELSEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNUNIFORMFVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNUNIFORMIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|GLenum
name|GL_APIENTRY
name|glGetGraphicsResetStatusEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReadnPixelsEXT
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetnUniformfvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetnUniformivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_robustness */
ifndef|#
directive|ifndef
name|GL_EXT_sRGB
DECL|macro|GL_EXT_sRGB
define|#
directive|define
name|GL_EXT_sRGB
value|1
DECL|macro|GL_SRGB_EXT
define|#
directive|define
name|GL_SRGB_EXT
value|0x8C40
DECL|macro|GL_SRGB_ALPHA_EXT
define|#
directive|define
name|GL_SRGB_ALPHA_EXT
value|0x8C42
DECL|macro|GL_SRGB8_ALPHA8_EXT
define|#
directive|define
name|GL_SRGB8_ALPHA8_EXT
value|0x8C43
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
value|0x8210
endif|#
directive|endif
comment|/* GL_EXT_sRGB */
ifndef|#
directive|ifndef
name|GL_EXT_sRGB_write_control
DECL|macro|GL_EXT_sRGB_write_control
define|#
directive|define
name|GL_EXT_sRGB_write_control
value|1
DECL|macro|GL_FRAMEBUFFER_SRGB_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_SRGB_EXT
value|0x8DB9
endif|#
directive|endif
comment|/* GL_EXT_sRGB_write_control */
ifndef|#
directive|ifndef
name|GL_EXT_separate_shader_objects
DECL|macro|GL_EXT_separate_shader_objects
define|#
directive|define
name|GL_EXT_separate_shader_objects
value|1
DECL|macro|GL_ACTIVE_PROGRAM_EXT
define|#
directive|define
name|GL_ACTIVE_PROGRAM_EXT
value|0x8259
DECL|macro|GL_VERTEX_SHADER_BIT_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_BIT_EXT
value|0x00000001
DECL|macro|GL_FRAGMENT_SHADER_BIT_EXT
define|#
directive|define
name|GL_FRAGMENT_SHADER_BIT_EXT
value|0x00000002
DECL|macro|GL_ALL_SHADER_BITS_EXT
define|#
directive|define
name|GL_ALL_SHADER_BITS_EXT
value|0xFFFFFFFF
DECL|macro|GL_PROGRAM_SEPARABLE_EXT
define|#
directive|define
name|GL_PROGRAM_SEPARABLE_EXT
value|0x8258
DECL|macro|GL_PROGRAM_PIPELINE_BINDING_EXT
define|#
directive|define
name|GL_PROGRAM_PIPELINE_BINDING_EXT
value|0x825A
DECL|typedef|PFNGLACTIVESHADERPROGRAMEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLACTIVESHADERPROGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDPROGRAMPIPELINEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDPROGRAMPIPELINEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATESHADERPROGRAMVEXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|GL_APIENTRYP
name|PFNGLCREATESHADERPROGRAMVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|strings
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPROGRAMPIPELINESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEPROGRAMPIPELINESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPROGRAMPIPELINESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENPROGRAMPIPELINESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPIPELINEIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMPIPELINEIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPROGRAMPIPELINEEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISPROGRAMPIPELINEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUSEPROGRAMSTAGESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUSEPROGRAMSTAGESEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLbitfield
name|stages
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVALIDATEPROGRAMPIPELINEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVALIDATEPROGRAMPIPELINEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glActiveShaderProgramEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindProgramPipelineEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLuint
name|GL_APIENTRY
name|glCreateShaderProgramvEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|strings
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteProgramPipelinesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenProgramPipelinesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramPipelineInfoLogEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramPipelineivEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsProgramPipelineEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramParameteriEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUseProgramStagesEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLbitfield
name|stages
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glValidateProgramPipelineEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix2x3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix3x2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix2x4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix4x2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix3x4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix4x3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_separate_shader_objects */
ifndef|#
directive|ifndef
name|GL_EXT_shader_framebuffer_fetch
DECL|macro|GL_EXT_shader_framebuffer_fetch
define|#
directive|define
name|GL_EXT_shader_framebuffer_fetch
value|1
DECL|macro|GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT
define|#
directive|define
name|GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT
value|0x8A52
endif|#
directive|endif
comment|/* GL_EXT_shader_framebuffer_fetch */
ifndef|#
directive|ifndef
name|GL_EXT_shader_implicit_conversions
DECL|macro|GL_EXT_shader_implicit_conversions
define|#
directive|define
name|GL_EXT_shader_implicit_conversions
value|1
endif|#
directive|endif
comment|/* GL_EXT_shader_implicit_conversions */
ifndef|#
directive|ifndef
name|GL_EXT_shader_integer_mix
DECL|macro|GL_EXT_shader_integer_mix
define|#
directive|define
name|GL_EXT_shader_integer_mix
value|1
endif|#
directive|endif
comment|/* GL_EXT_shader_integer_mix */
ifndef|#
directive|ifndef
name|GL_EXT_shader_io_blocks
DECL|macro|GL_EXT_shader_io_blocks
define|#
directive|define
name|GL_EXT_shader_io_blocks
value|1
endif|#
directive|endif
comment|/* GL_EXT_shader_io_blocks */
ifndef|#
directive|ifndef
name|GL_EXT_shader_pixel_local_storage
DECL|macro|GL_EXT_shader_pixel_local_storage
define|#
directive|define
name|GL_EXT_shader_pixel_local_storage
value|1
DECL|macro|GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT
define|#
directive|define
name|GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT
value|0x8F63
DECL|macro|GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT
define|#
directive|define
name|GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT
value|0x8F67
DECL|macro|GL_SHADER_PIXEL_LOCAL_STORAGE_EXT
define|#
directive|define
name|GL_SHADER_PIXEL_LOCAL_STORAGE_EXT
value|0x8F64
endif|#
directive|endif
comment|/* GL_EXT_shader_pixel_local_storage */
ifndef|#
directive|ifndef
name|GL_EXT_shader_texture_lod
DECL|macro|GL_EXT_shader_texture_lod
define|#
directive|define
name|GL_EXT_shader_texture_lod
value|1
endif|#
directive|endif
comment|/* GL_EXT_shader_texture_lod */
ifndef|#
directive|ifndef
name|GL_EXT_shadow_samplers
DECL|macro|GL_EXT_shadow_samplers
define|#
directive|define
name|GL_EXT_shadow_samplers
value|1
DECL|macro|GL_TEXTURE_COMPARE_MODE_EXT
define|#
directive|define
name|GL_TEXTURE_COMPARE_MODE_EXT
value|0x884C
DECL|macro|GL_TEXTURE_COMPARE_FUNC_EXT
define|#
directive|define
name|GL_TEXTURE_COMPARE_FUNC_EXT
value|0x884D
DECL|macro|GL_COMPARE_REF_TO_TEXTURE_EXT
define|#
directive|define
name|GL_COMPARE_REF_TO_TEXTURE_EXT
value|0x884E
DECL|macro|GL_SAMPLER_2D_SHADOW_EXT
define|#
directive|define
name|GL_SAMPLER_2D_SHADOW_EXT
value|0x8B62
endif|#
directive|endif
comment|/* GL_EXT_shadow_samplers */
ifndef|#
directive|ifndef
name|GL_EXT_tessellation_point_size
DECL|macro|GL_EXT_tessellation_point_size
define|#
directive|define
name|GL_EXT_tessellation_point_size
value|1
endif|#
directive|endif
comment|/* GL_EXT_tessellation_point_size */
ifndef|#
directive|ifndef
name|GL_EXT_tessellation_shader
DECL|macro|GL_EXT_tessellation_shader
define|#
directive|define
name|GL_EXT_tessellation_shader
value|1
DECL|macro|GL_PATCHES_EXT
define|#
directive|define
name|GL_PATCHES_EXT
value|0x000E
DECL|macro|GL_PATCH_VERTICES_EXT
define|#
directive|define
name|GL_PATCH_VERTICES_EXT
value|0x8E72
DECL|macro|GL_TESS_CONTROL_OUTPUT_VERTICES_EXT
define|#
directive|define
name|GL_TESS_CONTROL_OUTPUT_VERTICES_EXT
value|0x8E75
DECL|macro|GL_TESS_GEN_MODE_EXT
define|#
directive|define
name|GL_TESS_GEN_MODE_EXT
value|0x8E76
DECL|macro|GL_TESS_GEN_SPACING_EXT
define|#
directive|define
name|GL_TESS_GEN_SPACING_EXT
value|0x8E77
DECL|macro|GL_TESS_GEN_VERTEX_ORDER_EXT
define|#
directive|define
name|GL_TESS_GEN_VERTEX_ORDER_EXT
value|0x8E78
DECL|macro|GL_TESS_GEN_POINT_MODE_EXT
define|#
directive|define
name|GL_TESS_GEN_POINT_MODE_EXT
value|0x8E79
DECL|macro|GL_ISOLINES_EXT
define|#
directive|define
name|GL_ISOLINES_EXT
value|0x8E7A
DECL|macro|GL_QUADS_EXT
define|#
directive|define
name|GL_QUADS_EXT
value|0x0007
DECL|macro|GL_FRACTIONAL_ODD_EXT
define|#
directive|define
name|GL_FRACTIONAL_ODD_EXT
value|0x8E7B
DECL|macro|GL_FRACTIONAL_EVEN_EXT
define|#
directive|define
name|GL_FRACTIONAL_EVEN_EXT
value|0x8E7C
DECL|macro|GL_MAX_PATCH_VERTICES_EXT
define|#
directive|define
name|GL_MAX_PATCH_VERTICES_EXT
value|0x8E7D
DECL|macro|GL_MAX_TESS_GEN_LEVEL_EXT
define|#
directive|define
name|GL_MAX_TESS_GEN_LEVEL_EXT
value|0x8E7E
DECL|macro|GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
value|0x8E7F
DECL|macro|GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
value|0x8E80
DECL|macro|GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT
value|0x8E81
DECL|macro|GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT
value|0x8E82
DECL|macro|GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT
value|0x8E83
DECL|macro|GL_MAX_TESS_PATCH_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_PATCH_COMPONENTS_EXT
value|0x8E84
DECL|macro|GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT
value|0x8E85
DECL|macro|GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT
value|0x8E86
DECL|macro|GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT
value|0x8E89
DECL|macro|GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT
value|0x8E8A
DECL|macro|GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT
value|0x886C
DECL|macro|GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT
value|0x886D
DECL|macro|GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
value|0x8E1E
DECL|macro|GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
value|0x8E1F
DECL|macro|GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT
value|0x92CD
DECL|macro|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT
value|0x92CE
DECL|macro|GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT
value|0x92D3
DECL|macro|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT
value|0x92D4
DECL|macro|GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT
value|0x90CB
DECL|macro|GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT
value|0x90CC
DECL|macro|GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT
define|#
directive|define
name|GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT
value|0x90D8
DECL|macro|GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT
value|0x90D9
DECL|macro|GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED
define|#
directive|define
name|GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED
value|0x8221
DECL|macro|GL_IS_PER_PATCH_EXT
define|#
directive|define
name|GL_IS_PER_PATCH_EXT
value|0x92E7
DECL|macro|GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT
define|#
directive|define
name|GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT
value|0x9307
DECL|macro|GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT
define|#
directive|define
name|GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT
value|0x9308
DECL|macro|GL_TESS_CONTROL_SHADER_EXT
define|#
directive|define
name|GL_TESS_CONTROL_SHADER_EXT
value|0x8E88
DECL|macro|GL_TESS_EVALUATION_SHADER_EXT
define|#
directive|define
name|GL_TESS_EVALUATION_SHADER_EXT
value|0x8E87
DECL|macro|GL_TESS_CONTROL_SHADER_BIT_EXT
define|#
directive|define
name|GL_TESS_CONTROL_SHADER_BIT_EXT
value|0x00000008
DECL|macro|GL_TESS_EVALUATION_SHADER_BIT_EXT
define|#
directive|define
name|GL_TESS_EVALUATION_SHADER_BIT_EXT
value|0x00000010
DECL|typedef|PFNGLPATCHPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPATCHPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPatchParameteriEXT
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_tessellation_shader */
ifndef|#
directive|ifndef
name|GL_EXT_texture_border_clamp
DECL|macro|GL_EXT_texture_border_clamp
define|#
directive|define
name|GL_EXT_texture_border_clamp
value|1
DECL|macro|GL_TEXTURE_BORDER_COLOR_EXT
define|#
directive|define
name|GL_TEXTURE_BORDER_COLOR_EXT
value|0x1004
DECL|macro|GL_CLAMP_TO_BORDER_EXT
define|#
directive|define
name|GL_CLAMP_TO_BORDER_EXT
value|0x812D
DECL|typedef|PFNGLTEXPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETTEXPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETTEXPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSAMPLERPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSAMPLERPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSAMPLERPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSAMPLERPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSAMPLERPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETSAMPLERPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexParameterIivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexParameterIuivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetTexParameterIivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetTexParameterIuivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glSamplerParameterIivEXT
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glSamplerParameterIuivEXT
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|param
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetSamplerParameterIivEXT
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetSamplerParameterIuivEXT
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_texture_border_clamp */
ifndef|#
directive|ifndef
name|GL_EXT_texture_buffer
DECL|macro|GL_EXT_texture_buffer
define|#
directive|define
name|GL_EXT_texture_buffer
value|1
DECL|macro|GL_TEXTURE_BUFFER_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_EXT
value|0x8C2A
DECL|macro|GL_TEXTURE_BUFFER_BINDING_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_BINDING_EXT
value|0x8C2A
DECL|macro|GL_MAX_TEXTURE_BUFFER_SIZE_EXT
define|#
directive|define
name|GL_MAX_TEXTURE_BUFFER_SIZE_EXT
value|0x8C2B
DECL|macro|GL_TEXTURE_BINDING_BUFFER_EXT
define|#
directive|define
name|GL_TEXTURE_BINDING_BUFFER_EXT
value|0x8C2C
DECL|macro|GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
value|0x8C2D
DECL|macro|GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT
value|0x919F
DECL|macro|GL_SAMPLER_BUFFER_EXT
define|#
directive|define
name|GL_SAMPLER_BUFFER_EXT
value|0x8DC2
DECL|macro|GL_INT_SAMPLER_BUFFER_EXT
define|#
directive|define
name|GL_INT_SAMPLER_BUFFER_EXT
value|0x8DD0
DECL|macro|GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
value|0x8DD8
DECL|macro|GL_IMAGE_BUFFER_EXT
define|#
directive|define
name|GL_IMAGE_BUFFER_EXT
value|0x9051
DECL|macro|GL_INT_IMAGE_BUFFER_EXT
define|#
directive|define
name|GL_INT_IMAGE_BUFFER_EXT
value|0x905C
DECL|macro|GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
value|0x9067
DECL|macro|GL_TEXTURE_BUFFER_OFFSET_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_OFFSET_EXT
value|0x919D
DECL|macro|GL_TEXTURE_BUFFER_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_SIZE_EXT
value|0x919E
DECL|typedef|PFNGLTEXBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXBUFFERRANGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXBUFFERRANGEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexBufferEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexBufferRangeEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_texture_buffer */
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_dxt1
DECL|macro|GL_EXT_texture_compression_dxt1
define|#
directive|define
name|GL_EXT_texture_compression_dxt1
value|1
DECL|macro|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
value|0x83F0
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
value|0x83F1
endif|#
directive|endif
comment|/* GL_EXT_texture_compression_dxt1 */
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_s3tc
DECL|macro|GL_EXT_texture_compression_s3tc
define|#
directive|define
name|GL_EXT_texture_compression_s3tc
value|1
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
value|0x83F2
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
value|0x83F3
endif|#
directive|endif
comment|/* GL_EXT_texture_compression_s3tc */
ifndef|#
directive|ifndef
name|GL_EXT_texture_cube_map_array
DECL|macro|GL_EXT_texture_cube_map_array
define|#
directive|define
name|GL_EXT_texture_cube_map_array
value|1
DECL|macro|GL_TEXTURE_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_ARRAY_EXT
value|0x9009
DECL|macro|GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT
value|0x900A
DECL|macro|GL_SAMPLER_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_SAMPLER_CUBE_MAP_ARRAY_EXT
value|0x900C
DECL|macro|GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT
define|#
directive|define
name|GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT
value|0x900D
DECL|macro|GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
value|0x900E
DECL|macro|GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
value|0x900F
DECL|macro|GL_IMAGE_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_IMAGE_CUBE_MAP_ARRAY_EXT
value|0x9054
DECL|macro|GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
value|0x905F
DECL|macro|GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
value|0x906A
endif|#
directive|endif
comment|/* GL_EXT_texture_cube_map_array */
ifndef|#
directive|ifndef
name|GL_EXT_texture_filter_anisotropic
DECL|macro|GL_EXT_texture_filter_anisotropic
define|#
directive|define
name|GL_EXT_texture_filter_anisotropic
value|1
DECL|macro|GL_TEXTURE_MAX_ANISOTROPY_EXT
define|#
directive|define
name|GL_TEXTURE_MAX_ANISOTROPY_EXT
value|0x84FE
DECL|macro|GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
define|#
directive|define
name|GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
value|0x84FF
endif|#
directive|endif
comment|/* GL_EXT_texture_filter_anisotropic */
ifndef|#
directive|ifndef
name|GL_EXT_texture_format_BGRA8888
DECL|macro|GL_EXT_texture_format_BGRA8888
define|#
directive|define
name|GL_EXT_texture_format_BGRA8888
value|1
endif|#
directive|endif
comment|/* GL_EXT_texture_format_BGRA8888 */
ifndef|#
directive|ifndef
name|GL_EXT_texture_rg
DECL|macro|GL_EXT_texture_rg
define|#
directive|define
name|GL_EXT_texture_rg
value|1
DECL|macro|GL_RED_EXT
define|#
directive|define
name|GL_RED_EXT
value|0x1903
DECL|macro|GL_RG_EXT
define|#
directive|define
name|GL_RG_EXT
value|0x8227
DECL|macro|GL_R8_EXT
define|#
directive|define
name|GL_R8_EXT
value|0x8229
DECL|macro|GL_RG8_EXT
define|#
directive|define
name|GL_RG8_EXT
value|0x822B
endif|#
directive|endif
comment|/* GL_EXT_texture_rg */
ifndef|#
directive|ifndef
name|GL_EXT_texture_sRGB_decode
DECL|macro|GL_EXT_texture_sRGB_decode
define|#
directive|define
name|GL_EXT_texture_sRGB_decode
value|1
DECL|macro|GL_TEXTURE_SRGB_DECODE_EXT
define|#
directive|define
name|GL_TEXTURE_SRGB_DECODE_EXT
value|0x8A48
DECL|macro|GL_DECODE_EXT
define|#
directive|define
name|GL_DECODE_EXT
value|0x8A49
DECL|macro|GL_SKIP_DECODE_EXT
define|#
directive|define
name|GL_SKIP_DECODE_EXT
value|0x8A4A
endif|#
directive|endif
comment|/* GL_EXT_texture_sRGB_decode */
ifndef|#
directive|ifndef
name|GL_EXT_texture_storage
DECL|macro|GL_EXT_texture_storage
define|#
directive|define
name|GL_EXT_texture_storage
value|1
DECL|macro|GL_TEXTURE_IMMUTABLE_FORMAT_EXT
define|#
directive|define
name|GL_TEXTURE_IMMUTABLE_FORMAT_EXT
value|0x912F
DECL|macro|GL_ALPHA8_EXT
define|#
directive|define
name|GL_ALPHA8_EXT
value|0x803C
DECL|macro|GL_LUMINANCE8_EXT
define|#
directive|define
name|GL_LUMINANCE8_EXT
value|0x8040
DECL|macro|GL_LUMINANCE8_ALPHA8_EXT
define|#
directive|define
name|GL_LUMINANCE8_ALPHA8_EXT
value|0x8045
DECL|macro|GL_RGBA32F_EXT
define|#
directive|define
name|GL_RGBA32F_EXT
value|0x8814
DECL|macro|GL_RGB32F_EXT
define|#
directive|define
name|GL_RGB32F_EXT
value|0x8815
DECL|macro|GL_ALPHA32F_EXT
define|#
directive|define
name|GL_ALPHA32F_EXT
value|0x8816
DECL|macro|GL_LUMINANCE32F_EXT
define|#
directive|define
name|GL_LUMINANCE32F_EXT
value|0x8818
DECL|macro|GL_LUMINANCE_ALPHA32F_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA32F_EXT
value|0x8819
DECL|macro|GL_ALPHA16F_EXT
define|#
directive|define
name|GL_ALPHA16F_EXT
value|0x881C
DECL|macro|GL_LUMINANCE16F_EXT
define|#
directive|define
name|GL_LUMINANCE16F_EXT
value|0x881E
DECL|macro|GL_LUMINANCE_ALPHA16F_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA16F_EXT
value|0x881F
DECL|macro|GL_R32F_EXT
define|#
directive|define
name|GL_R32F_EXT
value|0x822E
DECL|macro|GL_RG32F_EXT
define|#
directive|define
name|GL_RG32F_EXT
value|0x8230
DECL|typedef|PFNGLTEXSTORAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSTORAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSTORAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSTORAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSTORAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSTORAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXTURESTORAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXTURESTORAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXTURESTORAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexStorage1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexStorage2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexStorage3DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTextureStorage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTextureStorage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTextureStorage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_texture_storage */
ifndef|#
directive|ifndef
name|GL_EXT_texture_type_2_10_10_10_REV
DECL|macro|GL_EXT_texture_type_2_10_10_10_REV
define|#
directive|define
name|GL_EXT_texture_type_2_10_10_10_REV
value|1
DECL|macro|GL_UNSIGNED_INT_2_10_10_10_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_2_10_10_10_REV_EXT
value|0x8368
endif|#
directive|endif
comment|/* GL_EXT_texture_type_2_10_10_10_REV */
ifndef|#
directive|ifndef
name|GL_EXT_texture_view
DECL|macro|GL_EXT_texture_view
define|#
directive|define
name|GL_EXT_texture_view
value|1
DECL|macro|GL_TEXTURE_VIEW_MIN_LEVEL_EXT
define|#
directive|define
name|GL_TEXTURE_VIEW_MIN_LEVEL_EXT
value|0x82DB
DECL|macro|GL_TEXTURE_VIEW_NUM_LEVELS_EXT
define|#
directive|define
name|GL_TEXTURE_VIEW_NUM_LEVELS_EXT
value|0x82DC
DECL|macro|GL_TEXTURE_VIEW_MIN_LAYER_EXT
define|#
directive|define
name|GL_TEXTURE_VIEW_MIN_LAYER_EXT
value|0x82DD
DECL|macro|GL_TEXTURE_VIEW_NUM_LAYERS_EXT
define|#
directive|define
name|GL_TEXTURE_VIEW_NUM_LAYERS_EXT
value|0x82DE
DECL|macro|GL_TEXTURE_IMMUTABLE_LEVELS
define|#
directive|define
name|GL_TEXTURE_IMMUTABLE_LEVELS
value|0x82DF
DECL|typedef|PFNGLTEXTUREVIEWEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXTUREVIEWEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|origtexture
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|minlevel
parameter_list|,
name|GLuint
name|numlevels
parameter_list|,
name|GLuint
name|minlayer
parameter_list|,
name|GLuint
name|numlayers
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTextureViewEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|origtexture
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|minlevel
parameter_list|,
name|GLuint
name|numlevels
parameter_list|,
name|GLuint
name|minlayer
parameter_list|,
name|GLuint
name|numlayers
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_EXT_texture_view */
ifndef|#
directive|ifndef
name|GL_EXT_unpack_subimage
DECL|macro|GL_EXT_unpack_subimage
define|#
directive|define
name|GL_EXT_unpack_subimage
value|1
DECL|macro|GL_UNPACK_ROW_LENGTH_EXT
define|#
directive|define
name|GL_UNPACK_ROW_LENGTH_EXT
value|0x0CF2
DECL|macro|GL_UNPACK_SKIP_ROWS_EXT
define|#
directive|define
name|GL_UNPACK_SKIP_ROWS_EXT
value|0x0CF3
DECL|macro|GL_UNPACK_SKIP_PIXELS_EXT
define|#
directive|define
name|GL_UNPACK_SKIP_PIXELS_EXT
value|0x0CF4
endif|#
directive|endif
comment|/* GL_EXT_unpack_subimage */
ifndef|#
directive|ifndef
name|GL_FJ_shader_binary_GCCSO
DECL|macro|GL_FJ_shader_binary_GCCSO
define|#
directive|define
name|GL_FJ_shader_binary_GCCSO
value|1
DECL|macro|GL_GCCSO_SHADER_BINARY_FJ
define|#
directive|define
name|GL_GCCSO_SHADER_BINARY_FJ
value|0x9260
endif|#
directive|endif
comment|/* GL_FJ_shader_binary_GCCSO */
ifndef|#
directive|ifndef
name|GL_IMG_multisampled_render_to_texture
DECL|macro|GL_IMG_multisampled_render_to_texture
define|#
directive|define
name|GL_IMG_multisampled_render_to_texture
value|1
DECL|macro|GL_RENDERBUFFER_SAMPLES_IMG
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_IMG
value|0x9133
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
value|0x9134
DECL|macro|GL_MAX_SAMPLES_IMG
define|#
directive|define
name|GL_MAX_SAMPLES_IMG
value|0x9135
DECL|macro|GL_TEXTURE_SAMPLES_IMG
define|#
directive|define
name|GL_TEXTURE_SAMPLES_IMG
value|0x9136
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLsizei
name|samples
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleIMG
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTexture2DMultisampleIMG
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLsizei
name|samples
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_IMG_multisampled_render_to_texture */
ifndef|#
directive|ifndef
name|GL_IMG_program_binary
DECL|macro|GL_IMG_program_binary
define|#
directive|define
name|GL_IMG_program_binary
value|1
DECL|macro|GL_SGX_PROGRAM_BINARY_IMG
define|#
directive|define
name|GL_SGX_PROGRAM_BINARY_IMG
value|0x9130
endif|#
directive|endif
comment|/* GL_IMG_program_binary */
ifndef|#
directive|ifndef
name|GL_IMG_read_format
DECL|macro|GL_IMG_read_format
define|#
directive|define
name|GL_IMG_read_format
value|1
DECL|macro|GL_BGRA_IMG
define|#
directive|define
name|GL_BGRA_IMG
value|0x80E1
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG
value|0x8365
endif|#
directive|endif
comment|/* GL_IMG_read_format */
ifndef|#
directive|ifndef
name|GL_IMG_shader_binary
DECL|macro|GL_IMG_shader_binary
define|#
directive|define
name|GL_IMG_shader_binary
value|1
DECL|macro|GL_SGX_BINARY_IMG
define|#
directive|define
name|GL_SGX_BINARY_IMG
value|0x8C0A
endif|#
directive|endif
comment|/* GL_IMG_shader_binary */
ifndef|#
directive|ifndef
name|GL_IMG_texture_compression_pvrtc
DECL|macro|GL_IMG_texture_compression_pvrtc
define|#
directive|define
name|GL_IMG_texture_compression_pvrtc
value|1
DECL|macro|GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
value|0x8C00
DECL|macro|GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
value|0x8C01
DECL|macro|GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
value|0x8C02
DECL|macro|GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
value|0x8C03
endif|#
directive|endif
comment|/* GL_IMG_texture_compression_pvrtc */
ifndef|#
directive|ifndef
name|GL_IMG_texture_compression_pvrtc2
DECL|macro|GL_IMG_texture_compression_pvrtc2
define|#
directive|define
name|GL_IMG_texture_compression_pvrtc2
value|1
DECL|macro|GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG
define|#
directive|define
name|GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG
value|0x9137
DECL|macro|GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG
define|#
directive|define
name|GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG
value|0x9138
endif|#
directive|endif
comment|/* GL_IMG_texture_compression_pvrtc2 */
ifndef|#
directive|ifndef
name|GL_INTEL_performance_query
DECL|macro|GL_INTEL_performance_query
define|#
directive|define
name|GL_INTEL_performance_query
value|1
DECL|macro|GL_PERFQUERY_SINGLE_CONTEXT_INTEL
define|#
directive|define
name|GL_PERFQUERY_SINGLE_CONTEXT_INTEL
value|0x00000000
DECL|macro|GL_PERFQUERY_GLOBAL_CONTEXT_INTEL
define|#
directive|define
name|GL_PERFQUERY_GLOBAL_CONTEXT_INTEL
value|0x00000001
DECL|macro|GL_PERFQUERY_WAIT_INTEL
define|#
directive|define
name|GL_PERFQUERY_WAIT_INTEL
value|0x83FB
DECL|macro|GL_PERFQUERY_FLUSH_INTEL
define|#
directive|define
name|GL_PERFQUERY_FLUSH_INTEL
value|0x83FA
DECL|macro|GL_PERFQUERY_DONOT_FLUSH_INTEL
define|#
directive|define
name|GL_PERFQUERY_DONOT_FLUSH_INTEL
value|0x83F9
DECL|macro|GL_PERFQUERY_COUNTER_EVENT_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_EVENT_INTEL
value|0x94F0
DECL|macro|GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL
value|0x94F1
DECL|macro|GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL
value|0x94F2
DECL|macro|GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL
value|0x94F3
DECL|macro|GL_PERFQUERY_COUNTER_RAW_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_RAW_INTEL
value|0x94F4
DECL|macro|GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL
value|0x94F5
DECL|macro|GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL
value|0x94F8
DECL|macro|GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL
value|0x94F9
DECL|macro|GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL
value|0x94FA
DECL|macro|GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL
value|0x94FB
DECL|macro|GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL
value|0x94FC
DECL|macro|GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL
define|#
directive|define
name|GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL
value|0x94FD
DECL|macro|GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL
value|0x94FE
DECL|macro|GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL
define|#
directive|define
name|GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL
value|0x94FF
DECL|macro|GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL
define|#
directive|define
name|GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL
value|0x9500
DECL|typedef|PFNGLBEGINPERFQUERYINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBEGINPERFQUERYINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATEPERFQUERYINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCREATEPERFQUERYINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
modifier|*
name|queryHandle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPERFQUERYINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEPERFQUERYINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDPERFQUERYINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENDPERFQUERYINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFIRSTPERFQUERYIDINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETFIRSTPERFQUERYIDINTELPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|queryId
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNEXTPERFQUERYIDINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNEXTPERFQUERYIDINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
modifier|*
name|nextQueryId
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFCOUNTERINFOINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFCOUNTERINFOINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
name|counterId
parameter_list|,
name|GLuint
name|counterNameLength
parameter_list|,
name|GLchar
modifier|*
name|counterName
parameter_list|,
name|GLuint
name|counterDescLength
parameter_list|,
name|GLchar
modifier|*
name|counterDesc
parameter_list|,
name|GLuint
modifier|*
name|counterOffset
parameter_list|,
name|GLuint
modifier|*
name|counterDataSize
parameter_list|,
name|GLuint
modifier|*
name|counterTypeEnum
parameter_list|,
name|GLuint
modifier|*
name|counterDataTypeEnum
parameter_list|,
name|GLuint64
modifier|*
name|rawCounterMaxValue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFQUERYDATAINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFQUERYDATAINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|,
name|GLuint
name|flags
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLuint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFQUERYIDBYNAMEINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFQUERYIDBYNAMEINTELPROC
function_decl|)
parameter_list|(
name|GLchar
modifier|*
name|queryName
parameter_list|,
name|GLuint
modifier|*
name|queryId
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFQUERYINFOINTELPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFQUERYINFOINTELPROC
function_decl|)
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
name|queryNameLength
parameter_list|,
name|GLchar
modifier|*
name|queryName
parameter_list|,
name|GLuint
modifier|*
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|noCounters
parameter_list|,
name|GLuint
modifier|*
name|noInstances
parameter_list|,
name|GLuint
modifier|*
name|capsMask
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBeginPerfQueryINTEL
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCreatePerfQueryINTEL
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
modifier|*
name|queryHandle
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeletePerfQueryINTEL
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEndPerfQueryINTEL
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetFirstPerfQueryIdINTEL
parameter_list|(
name|GLuint
modifier|*
name|queryId
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetNextPerfQueryIdINTEL
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
modifier|*
name|nextQueryId
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfCounterInfoINTEL
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
name|counterId
parameter_list|,
name|GLuint
name|counterNameLength
parameter_list|,
name|GLchar
modifier|*
name|counterName
parameter_list|,
name|GLuint
name|counterDescLength
parameter_list|,
name|GLchar
modifier|*
name|counterDesc
parameter_list|,
name|GLuint
modifier|*
name|counterOffset
parameter_list|,
name|GLuint
modifier|*
name|counterDataSize
parameter_list|,
name|GLuint
modifier|*
name|counterTypeEnum
parameter_list|,
name|GLuint
modifier|*
name|counterDataTypeEnum
parameter_list|,
name|GLuint64
modifier|*
name|rawCounterMaxValue
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfQueryDataINTEL
parameter_list|(
name|GLuint
name|queryHandle
parameter_list|,
name|GLuint
name|flags
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLuint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfQueryIdByNameINTEL
parameter_list|(
name|GLchar
modifier|*
name|queryName
parameter_list|,
name|GLuint
modifier|*
name|queryId
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfQueryInfoINTEL
parameter_list|(
name|GLuint
name|queryId
parameter_list|,
name|GLuint
name|queryNameLength
parameter_list|,
name|GLchar
modifier|*
name|queryName
parameter_list|,
name|GLuint
modifier|*
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|noCounters
parameter_list|,
name|GLuint
modifier|*
name|noInstances
parameter_list|,
name|GLuint
modifier|*
name|capsMask
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_INTEL_performance_query */
ifndef|#
directive|ifndef
name|GL_NV_blend_equation_advanced
DECL|macro|GL_NV_blend_equation_advanced
define|#
directive|define
name|GL_NV_blend_equation_advanced
value|1
DECL|macro|GL_BLEND_OVERLAP_NV
define|#
directive|define
name|GL_BLEND_OVERLAP_NV
value|0x9281
DECL|macro|GL_BLEND_PREMULTIPLIED_SRC_NV
define|#
directive|define
name|GL_BLEND_PREMULTIPLIED_SRC_NV
value|0x9280
DECL|macro|GL_BLUE_NV
define|#
directive|define
name|GL_BLUE_NV
value|0x1905
DECL|macro|GL_COLORBURN_NV
define|#
directive|define
name|GL_COLORBURN_NV
value|0x929A
DECL|macro|GL_COLORDODGE_NV
define|#
directive|define
name|GL_COLORDODGE_NV
value|0x9299
DECL|macro|GL_CONJOINT_NV
define|#
directive|define
name|GL_CONJOINT_NV
value|0x9284
DECL|macro|GL_CONTRAST_NV
define|#
directive|define
name|GL_CONTRAST_NV
value|0x92A1
DECL|macro|GL_DARKEN_NV
define|#
directive|define
name|GL_DARKEN_NV
value|0x9297
DECL|macro|GL_DIFFERENCE_NV
define|#
directive|define
name|GL_DIFFERENCE_NV
value|0x929E
DECL|macro|GL_DISJOINT_NV
define|#
directive|define
name|GL_DISJOINT_NV
value|0x9283
DECL|macro|GL_DST_ATOP_NV
define|#
directive|define
name|GL_DST_ATOP_NV
value|0x928F
DECL|macro|GL_DST_IN_NV
define|#
directive|define
name|GL_DST_IN_NV
value|0x928B
DECL|macro|GL_DST_NV
define|#
directive|define
name|GL_DST_NV
value|0x9287
DECL|macro|GL_DST_OUT_NV
define|#
directive|define
name|GL_DST_OUT_NV
value|0x928D
DECL|macro|GL_DST_OVER_NV
define|#
directive|define
name|GL_DST_OVER_NV
value|0x9289
DECL|macro|GL_EXCLUSION_NV
define|#
directive|define
name|GL_EXCLUSION_NV
value|0x92A0
DECL|macro|GL_GREEN_NV
define|#
directive|define
name|GL_GREEN_NV
value|0x1904
DECL|macro|GL_HARDLIGHT_NV
define|#
directive|define
name|GL_HARDLIGHT_NV
value|0x929B
DECL|macro|GL_HARDMIX_NV
define|#
directive|define
name|GL_HARDMIX_NV
value|0x92A9
DECL|macro|GL_HSL_COLOR_NV
define|#
directive|define
name|GL_HSL_COLOR_NV
value|0x92AF
DECL|macro|GL_HSL_HUE_NV
define|#
directive|define
name|GL_HSL_HUE_NV
value|0x92AD
DECL|macro|GL_HSL_LUMINOSITY_NV
define|#
directive|define
name|GL_HSL_LUMINOSITY_NV
value|0x92B0
DECL|macro|GL_HSL_SATURATION_NV
define|#
directive|define
name|GL_HSL_SATURATION_NV
value|0x92AE
DECL|macro|GL_INVERT_OVG_NV
define|#
directive|define
name|GL_INVERT_OVG_NV
value|0x92B4
DECL|macro|GL_INVERT_RGB_NV
define|#
directive|define
name|GL_INVERT_RGB_NV
value|0x92A3
DECL|macro|GL_LIGHTEN_NV
define|#
directive|define
name|GL_LIGHTEN_NV
value|0x9298
DECL|macro|GL_LINEARBURN_NV
define|#
directive|define
name|GL_LINEARBURN_NV
value|0x92A5
DECL|macro|GL_LINEARDODGE_NV
define|#
directive|define
name|GL_LINEARDODGE_NV
value|0x92A4
DECL|macro|GL_LINEARLIGHT_NV
define|#
directive|define
name|GL_LINEARLIGHT_NV
value|0x92A7
DECL|macro|GL_MINUS_CLAMPED_NV
define|#
directive|define
name|GL_MINUS_CLAMPED_NV
value|0x92B3
DECL|macro|GL_MINUS_NV
define|#
directive|define
name|GL_MINUS_NV
value|0x929F
DECL|macro|GL_MULTIPLY_NV
define|#
directive|define
name|GL_MULTIPLY_NV
value|0x9294
DECL|macro|GL_OVERLAY_NV
define|#
directive|define
name|GL_OVERLAY_NV
value|0x9296
DECL|macro|GL_PINLIGHT_NV
define|#
directive|define
name|GL_PINLIGHT_NV
value|0x92A8
DECL|macro|GL_PLUS_CLAMPED_ALPHA_NV
define|#
directive|define
name|GL_PLUS_CLAMPED_ALPHA_NV
value|0x92B2
DECL|macro|GL_PLUS_CLAMPED_NV
define|#
directive|define
name|GL_PLUS_CLAMPED_NV
value|0x92B1
DECL|macro|GL_PLUS_DARKER_NV
define|#
directive|define
name|GL_PLUS_DARKER_NV
value|0x9292
DECL|macro|GL_PLUS_NV
define|#
directive|define
name|GL_PLUS_NV
value|0x9291
DECL|macro|GL_RED_NV
define|#
directive|define
name|GL_RED_NV
value|0x1903
DECL|macro|GL_SCREEN_NV
define|#
directive|define
name|GL_SCREEN_NV
value|0x9295
DECL|macro|GL_SOFTLIGHT_NV
define|#
directive|define
name|GL_SOFTLIGHT_NV
value|0x929C
DECL|macro|GL_SRC_ATOP_NV
define|#
directive|define
name|GL_SRC_ATOP_NV
value|0x928E
DECL|macro|GL_SRC_IN_NV
define|#
directive|define
name|GL_SRC_IN_NV
value|0x928A
DECL|macro|GL_SRC_NV
define|#
directive|define
name|GL_SRC_NV
value|0x9286
DECL|macro|GL_SRC_OUT_NV
define|#
directive|define
name|GL_SRC_OUT_NV
value|0x928C
DECL|macro|GL_SRC_OVER_NV
define|#
directive|define
name|GL_SRC_OVER_NV
value|0x9288
DECL|macro|GL_UNCORRELATED_NV
define|#
directive|define
name|GL_UNCORRELATED_NV
value|0x9282
DECL|macro|GL_VIVIDLIGHT_NV
define|#
directive|define
name|GL_VIVIDLIGHT_NV
value|0x92A6
DECL|macro|GL_XOR_NV
define|#
directive|define
name|GL_XOR_NV
value|0x1506
DECL|typedef|PFNGLBLENDPARAMETERINVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDPARAMETERINVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDBARRIERNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLENDBARRIERNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendParameteriNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlendBarrierNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_blend_equation_advanced */
ifndef|#
directive|ifndef
name|GL_NV_blend_equation_advanced_coherent
DECL|macro|GL_NV_blend_equation_advanced_coherent
define|#
directive|define
name|GL_NV_blend_equation_advanced_coherent
value|1
DECL|macro|GL_BLEND_ADVANCED_COHERENT_NV
define|#
directive|define
name|GL_BLEND_ADVANCED_COHERENT_NV
value|0x9285
endif|#
directive|endif
comment|/* GL_NV_blend_equation_advanced_coherent */
ifndef|#
directive|ifndef
name|GL_NV_copy_buffer
DECL|macro|GL_NV_copy_buffer
define|#
directive|define
name|GL_NV_copy_buffer
value|1
DECL|macro|GL_COPY_READ_BUFFER_NV
define|#
directive|define
name|GL_COPY_READ_BUFFER_NV
value|0x8F36
DECL|macro|GL_COPY_WRITE_BUFFER_NV
define|#
directive|define
name|GL_COPY_WRITE_BUFFER_NV
value|0x8F37
DECL|typedef|PFNGLCOPYBUFFERSUBDATANVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOPYBUFFERSUBDATANVPROC
function_decl|)
parameter_list|(
name|GLenum
name|readTarget
parameter_list|,
name|GLenum
name|writeTarget
parameter_list|,
name|GLintptr
name|readOffset
parameter_list|,
name|GLintptr
name|writeOffset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCopyBufferSubDataNV
parameter_list|(
name|GLenum
name|readTarget
parameter_list|,
name|GLenum
name|writeTarget
parameter_list|,
name|GLintptr
name|readOffset
parameter_list|,
name|GLintptr
name|writeOffset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_copy_buffer */
ifndef|#
directive|ifndef
name|GL_NV_coverage_sample
DECL|macro|GL_NV_coverage_sample
define|#
directive|define
name|GL_NV_coverage_sample
value|1
DECL|macro|GL_COVERAGE_COMPONENT_NV
define|#
directive|define
name|GL_COVERAGE_COMPONENT_NV
value|0x8ED0
DECL|macro|GL_COVERAGE_COMPONENT4_NV
define|#
directive|define
name|GL_COVERAGE_COMPONENT4_NV
value|0x8ED1
DECL|macro|GL_COVERAGE_ATTACHMENT_NV
define|#
directive|define
name|GL_COVERAGE_ATTACHMENT_NV
value|0x8ED2
DECL|macro|GL_COVERAGE_BUFFERS_NV
define|#
directive|define
name|GL_COVERAGE_BUFFERS_NV
value|0x8ED3
DECL|macro|GL_COVERAGE_SAMPLES_NV
define|#
directive|define
name|GL_COVERAGE_SAMPLES_NV
value|0x8ED4
DECL|macro|GL_COVERAGE_ALL_FRAGMENTS_NV
define|#
directive|define
name|GL_COVERAGE_ALL_FRAGMENTS_NV
value|0x8ED5
DECL|macro|GL_COVERAGE_EDGE_FRAGMENTS_NV
define|#
directive|define
name|GL_COVERAGE_EDGE_FRAGMENTS_NV
value|0x8ED6
DECL|macro|GL_COVERAGE_AUTOMATIC_NV
define|#
directive|define
name|GL_COVERAGE_AUTOMATIC_NV
value|0x8ED7
DECL|macro|GL_COVERAGE_BUFFER_BIT_NV
define|#
directive|define
name|GL_COVERAGE_BUFFER_BIT_NV
value|0x00008000
DECL|typedef|PFNGLCOVERAGEMASKNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOVERAGEMASKNVPROC
function_decl|)
parameter_list|(
name|GLboolean
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOVERAGEOPERATIONNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOVERAGEOPERATIONNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|operation
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCoverageMaskNV
parameter_list|(
name|GLboolean
name|mask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCoverageOperationNV
parameter_list|(
name|GLenum
name|operation
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_coverage_sample */
ifndef|#
directive|ifndef
name|GL_NV_depth_nonlinear
DECL|macro|GL_NV_depth_nonlinear
define|#
directive|define
name|GL_NV_depth_nonlinear
value|1
DECL|macro|GL_DEPTH_COMPONENT16_NONLINEAR_NV
define|#
directive|define
name|GL_DEPTH_COMPONENT16_NONLINEAR_NV
value|0x8E2C
endif|#
directive|endif
comment|/* GL_NV_depth_nonlinear */
ifndef|#
directive|ifndef
name|GL_NV_draw_buffers
DECL|macro|GL_NV_draw_buffers
define|#
directive|define
name|GL_NV_draw_buffers
value|1
DECL|macro|GL_MAX_DRAW_BUFFERS_NV
define|#
directive|define
name|GL_MAX_DRAW_BUFFERS_NV
value|0x8824
DECL|macro|GL_DRAW_BUFFER0_NV
define|#
directive|define
name|GL_DRAW_BUFFER0_NV
value|0x8825
DECL|macro|GL_DRAW_BUFFER1_NV
define|#
directive|define
name|GL_DRAW_BUFFER1_NV
value|0x8826
DECL|macro|GL_DRAW_BUFFER2_NV
define|#
directive|define
name|GL_DRAW_BUFFER2_NV
value|0x8827
DECL|macro|GL_DRAW_BUFFER3_NV
define|#
directive|define
name|GL_DRAW_BUFFER3_NV
value|0x8828
DECL|macro|GL_DRAW_BUFFER4_NV
define|#
directive|define
name|GL_DRAW_BUFFER4_NV
value|0x8829
DECL|macro|GL_DRAW_BUFFER5_NV
define|#
directive|define
name|GL_DRAW_BUFFER5_NV
value|0x882A
DECL|macro|GL_DRAW_BUFFER6_NV
define|#
directive|define
name|GL_DRAW_BUFFER6_NV
value|0x882B
DECL|macro|GL_DRAW_BUFFER7_NV
define|#
directive|define
name|GL_DRAW_BUFFER7_NV
value|0x882C
DECL|macro|GL_DRAW_BUFFER8_NV
define|#
directive|define
name|GL_DRAW_BUFFER8_NV
value|0x882D
DECL|macro|GL_DRAW_BUFFER9_NV
define|#
directive|define
name|GL_DRAW_BUFFER9_NV
value|0x882E
DECL|macro|GL_DRAW_BUFFER10_NV
define|#
directive|define
name|GL_DRAW_BUFFER10_NV
value|0x882F
DECL|macro|GL_DRAW_BUFFER11_NV
define|#
directive|define
name|GL_DRAW_BUFFER11_NV
value|0x8830
DECL|macro|GL_DRAW_BUFFER12_NV
define|#
directive|define
name|GL_DRAW_BUFFER12_NV
value|0x8831
DECL|macro|GL_DRAW_BUFFER13_NV
define|#
directive|define
name|GL_DRAW_BUFFER13_NV
value|0x8832
DECL|macro|GL_DRAW_BUFFER14_NV
define|#
directive|define
name|GL_DRAW_BUFFER14_NV
value|0x8833
DECL|macro|GL_DRAW_BUFFER15_NV
define|#
directive|define
name|GL_DRAW_BUFFER15_NV
value|0x8834
DECL|macro|GL_COLOR_ATTACHMENT0_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT0_NV
value|0x8CE0
DECL|macro|GL_COLOR_ATTACHMENT1_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT1_NV
value|0x8CE1
DECL|macro|GL_COLOR_ATTACHMENT2_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT2_NV
value|0x8CE2
DECL|macro|GL_COLOR_ATTACHMENT3_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT3_NV
value|0x8CE3
DECL|macro|GL_COLOR_ATTACHMENT4_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT4_NV
value|0x8CE4
DECL|macro|GL_COLOR_ATTACHMENT5_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT5_NV
value|0x8CE5
DECL|macro|GL_COLOR_ATTACHMENT6_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT6_NV
value|0x8CE6
DECL|macro|GL_COLOR_ATTACHMENT7_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT7_NV
value|0x8CE7
DECL|macro|GL_COLOR_ATTACHMENT8_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT8_NV
value|0x8CE8
DECL|macro|GL_COLOR_ATTACHMENT9_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT9_NV
value|0x8CE9
DECL|macro|GL_COLOR_ATTACHMENT10_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT10_NV
value|0x8CEA
DECL|macro|GL_COLOR_ATTACHMENT11_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT11_NV
value|0x8CEB
DECL|macro|GL_COLOR_ATTACHMENT12_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT12_NV
value|0x8CEC
DECL|macro|GL_COLOR_ATTACHMENT13_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT13_NV
value|0x8CED
DECL|macro|GL_COLOR_ATTACHMENT14_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT14_NV
value|0x8CEE
DECL|macro|GL_COLOR_ATTACHMENT15_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT15_NV
value|0x8CEF
DECL|typedef|PFNGLDRAWBUFFERSNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWBUFFERSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawBuffersNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_draw_buffers */
ifndef|#
directive|ifndef
name|GL_NV_draw_instanced
DECL|macro|GL_NV_draw_instanced
define|#
directive|define
name|GL_NV_draw_instanced
value|1
DECL|typedef|PFNGLDRAWARRAYSINSTANCEDNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWARRAYSINSTANCEDNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawArraysInstancedNV
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawElementsInstancedNV
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_draw_instanced */
ifndef|#
directive|ifndef
name|GL_NV_explicit_attrib_location
DECL|macro|GL_NV_explicit_attrib_location
define|#
directive|define
name|GL_NV_explicit_attrib_location
value|1
endif|#
directive|endif
comment|/* GL_NV_explicit_attrib_location */
ifndef|#
directive|ifndef
name|GL_NV_fbo_color_attachments
DECL|macro|GL_NV_fbo_color_attachments
define|#
directive|define
name|GL_NV_fbo_color_attachments
value|1
DECL|macro|GL_MAX_COLOR_ATTACHMENTS_NV
define|#
directive|define
name|GL_MAX_COLOR_ATTACHMENTS_NV
value|0x8CDF
endif|#
directive|endif
comment|/* GL_NV_fbo_color_attachments */
ifndef|#
directive|ifndef
name|GL_NV_fence
DECL|macro|GL_NV_fence
define|#
directive|define
name|GL_NV_fence
value|1
DECL|macro|GL_ALL_COMPLETED_NV
define|#
directive|define
name|GL_ALL_COMPLETED_NV
value|0x84F2
DECL|macro|GL_FENCE_STATUS_NV
define|#
directive|define
name|GL_FENCE_STATUS_NV
value|0x84F3
DECL|macro|GL_FENCE_CONDITION_NV
define|#
directive|define
name|GL_FENCE_CONDITION_NV
value|0x84F4
DECL|typedef|PFNGLDELETEFENCESNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEFENCESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENFENCESNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENFENCESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISFENCENVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTESTFENCENVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLTESTFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFENCEIVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETFENCEIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINISHFENCENVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFINISHFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSETFENCENVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSETFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|condition
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteFencesNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenFencesNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glTestFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetFenceivNV
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFinishFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glSetFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|condition
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_fence */
ifndef|#
directive|ifndef
name|GL_NV_framebuffer_blit
DECL|macro|GL_NV_framebuffer_blit
define|#
directive|define
name|GL_NV_framebuffer_blit
value|1
DECL|macro|GL_READ_FRAMEBUFFER_NV
define|#
directive|define
name|GL_READ_FRAMEBUFFER_NV
value|0x8CA8
DECL|macro|GL_DRAW_FRAMEBUFFER_NV
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_NV
value|0x8CA9
DECL|macro|GL_DRAW_FRAMEBUFFER_BINDING_NV
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_BINDING_NV
value|0x8CA6
DECL|macro|GL_READ_FRAMEBUFFER_BINDING_NV
define|#
directive|define
name|GL_READ_FRAMEBUFFER_BINDING_NV
value|0x8CAA
DECL|typedef|PFNGLBLITFRAMEBUFFERNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLITFRAMEBUFFERNVPROC
function_decl|)
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlitFramebufferNV
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_framebuffer_blit */
ifndef|#
directive|ifndef
name|GL_NV_framebuffer_multisample
DECL|macro|GL_NV_framebuffer_multisample
define|#
directive|define
name|GL_NV_framebuffer_multisample
value|1
DECL|macro|GL_RENDERBUFFER_SAMPLES_NV
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_NV
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_NV
define|#
directive|define
name|GL_MAX_SAMPLES_NV
value|0x8D57
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_framebuffer_multisample */
ifndef|#
directive|ifndef
name|GL_NV_generate_mipmap_sRGB
DECL|macro|GL_NV_generate_mipmap_sRGB
define|#
directive|define
name|GL_NV_generate_mipmap_sRGB
value|1
endif|#
directive|endif
comment|/* GL_NV_generate_mipmap_sRGB */
ifndef|#
directive|ifndef
name|GL_NV_instanced_arrays
DECL|macro|GL_NV_instanced_arrays
define|#
directive|define
name|GL_NV_instanced_arrays
value|1
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV
value|0x88FE
DECL|typedef|PFNGLVERTEXATTRIBDIVISORNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVERTEXATTRIBDIVISORNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttribDivisorNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_instanced_arrays */
ifndef|#
directive|ifndef
name|GL_NV_non_square_matrices
DECL|macro|GL_NV_non_square_matrices
define|#
directive|define
name|GL_NV_non_square_matrices
value|1
DECL|macro|GL_FLOAT_MAT2x3_NV
define|#
directive|define
name|GL_FLOAT_MAT2x3_NV
value|0x8B65
DECL|macro|GL_FLOAT_MAT2x4_NV
define|#
directive|define
name|GL_FLOAT_MAT2x4_NV
value|0x8B66
DECL|macro|GL_FLOAT_MAT3x2_NV
define|#
directive|define
name|GL_FLOAT_MAT3x2_NV
value|0x8B67
DECL|macro|GL_FLOAT_MAT3x4_NV
define|#
directive|define
name|GL_FLOAT_MAT3x4_NV
value|0x8B68
DECL|macro|GL_FLOAT_MAT4x2_NV
define|#
directive|define
name|GL_FLOAT_MAT4x2_NV
value|0x8B69
DECL|macro|GL_FLOAT_MAT4x3_NV
define|#
directive|define
name|GL_FLOAT_MAT4x3_NV
value|0x8B6A
DECL|typedef|PFNGLUNIFORMMATRIX2X3FVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX2X3FVNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3X2FVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX3X2FVNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2X4FVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX2X4FVNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4X2FVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX4X2FVNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3X4FVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX3X4FVNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4X3FVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNIFORMMATRIX4X3FVNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix2x3fvNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix3x2fvNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix2x4fvNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix4x2fvNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix3x4fvNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUniformMatrix4x3fvNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_non_square_matrices */
ifndef|#
directive|ifndef
name|GL_NV_read_buffer
DECL|macro|GL_NV_read_buffer
define|#
directive|define
name|GL_NV_read_buffer
value|1
DECL|macro|GL_READ_BUFFER_NV
define|#
directive|define
name|GL_READ_BUFFER_NV
value|0x0C02
DECL|typedef|PFNGLREADBUFFERNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLREADBUFFERNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReadBufferNV
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_NV_read_buffer */
ifndef|#
directive|ifndef
name|GL_NV_read_buffer_front
DECL|macro|GL_NV_read_buffer_front
define|#
directive|define
name|GL_NV_read_buffer_front
value|1
endif|#
directive|endif
comment|/* GL_NV_read_buffer_front */
ifndef|#
directive|ifndef
name|GL_NV_read_depth
DECL|macro|GL_NV_read_depth
define|#
directive|define
name|GL_NV_read_depth
value|1
endif|#
directive|endif
comment|/* GL_NV_read_depth */
ifndef|#
directive|ifndef
name|GL_NV_read_depth_stencil
DECL|macro|GL_NV_read_depth_stencil
define|#
directive|define
name|GL_NV_read_depth_stencil
value|1
endif|#
directive|endif
comment|/* GL_NV_read_depth_stencil */
ifndef|#
directive|ifndef
name|GL_NV_read_stencil
DECL|macro|GL_NV_read_stencil
define|#
directive|define
name|GL_NV_read_stencil
value|1
endif|#
directive|endif
comment|/* GL_NV_read_stencil */
ifndef|#
directive|ifndef
name|GL_NV_sRGB_formats
DECL|macro|GL_NV_sRGB_formats
define|#
directive|define
name|GL_NV_sRGB_formats
value|1
DECL|macro|GL_SLUMINANCE_NV
define|#
directive|define
name|GL_SLUMINANCE_NV
value|0x8C46
DECL|macro|GL_SLUMINANCE_ALPHA_NV
define|#
directive|define
name|GL_SLUMINANCE_ALPHA_NV
value|0x8C44
DECL|macro|GL_SRGB8_NV
define|#
directive|define
name|GL_SRGB8_NV
value|0x8C41
DECL|macro|GL_SLUMINANCE8_NV
define|#
directive|define
name|GL_SLUMINANCE8_NV
value|0x8C47
DECL|macro|GL_SLUMINANCE8_ALPHA8_NV
define|#
directive|define
name|GL_SLUMINANCE8_ALPHA8_NV
value|0x8C45
DECL|macro|GL_COMPRESSED_SRGB_S3TC_DXT1_NV
define|#
directive|define
name|GL_COMPRESSED_SRGB_S3TC_DXT1_NV
value|0x8C4C
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV
value|0x8C4D
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV
value|0x8C4E
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV
value|0x8C4F
DECL|macro|GL_ETC1_SRGB8_NV
define|#
directive|define
name|GL_ETC1_SRGB8_NV
value|0x88EE
endif|#
directive|endif
comment|/* GL_NV_sRGB_formats */
ifndef|#
directive|ifndef
name|GL_NV_shadow_samplers_array
DECL|macro|GL_NV_shadow_samplers_array
define|#
directive|define
name|GL_NV_shadow_samplers_array
value|1
DECL|macro|GL_SAMPLER_2D_ARRAY_SHADOW_NV
define|#
directive|define
name|GL_SAMPLER_2D_ARRAY_SHADOW_NV
value|0x8DC4
endif|#
directive|endif
comment|/* GL_NV_shadow_samplers_array */
ifndef|#
directive|ifndef
name|GL_NV_shadow_samplers_cube
DECL|macro|GL_NV_shadow_samplers_cube
define|#
directive|define
name|GL_NV_shadow_samplers_cube
value|1
DECL|macro|GL_SAMPLER_CUBE_SHADOW_NV
define|#
directive|define
name|GL_SAMPLER_CUBE_SHADOW_NV
value|0x8DC5
endif|#
directive|endif
comment|/* GL_NV_shadow_samplers_cube */
ifndef|#
directive|ifndef
name|GL_NV_texture_border_clamp
DECL|macro|GL_NV_texture_border_clamp
define|#
directive|define
name|GL_NV_texture_border_clamp
value|1
DECL|macro|GL_TEXTURE_BORDER_COLOR_NV
define|#
directive|define
name|GL_TEXTURE_BORDER_COLOR_NV
value|0x1004
DECL|macro|GL_CLAMP_TO_BORDER_NV
define|#
directive|define
name|GL_CLAMP_TO_BORDER_NV
value|0x812D
endif|#
directive|endif
comment|/* GL_NV_texture_border_clamp */
ifndef|#
directive|ifndef
name|GL_NV_texture_compression_s3tc_update
DECL|macro|GL_NV_texture_compression_s3tc_update
define|#
directive|define
name|GL_NV_texture_compression_s3tc_update
value|1
endif|#
directive|endif
comment|/* GL_NV_texture_compression_s3tc_update */
ifndef|#
directive|ifndef
name|GL_NV_texture_npot_2D_mipmap
DECL|macro|GL_NV_texture_npot_2D_mipmap
define|#
directive|define
name|GL_NV_texture_npot_2D_mipmap
value|1
endif|#
directive|endif
comment|/* GL_NV_texture_npot_2D_mipmap */
ifndef|#
directive|ifndef
name|GL_QCOM_alpha_test
DECL|macro|GL_QCOM_alpha_test
define|#
directive|define
name|GL_QCOM_alpha_test
value|1
DECL|macro|GL_ALPHA_TEST_QCOM
define|#
directive|define
name|GL_ALPHA_TEST_QCOM
value|0x0BC0
DECL|macro|GL_ALPHA_TEST_FUNC_QCOM
define|#
directive|define
name|GL_ALPHA_TEST_FUNC_QCOM
value|0x0BC1
DECL|macro|GL_ALPHA_TEST_REF_QCOM
define|#
directive|define
name|GL_ALPHA_TEST_REF_QCOM
value|0x0BC2
DECL|typedef|PFNGLALPHAFUNCQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLALPHAFUNCQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLclampf
name|ref
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glAlphaFuncQCOM
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLclampf
name|ref
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_QCOM_alpha_test */
ifndef|#
directive|ifndef
name|GL_QCOM_binning_control
DECL|macro|GL_QCOM_binning_control
define|#
directive|define
name|GL_QCOM_binning_control
value|1
DECL|macro|GL_BINNING_CONTROL_HINT_QCOM
define|#
directive|define
name|GL_BINNING_CONTROL_HINT_QCOM
value|0x8FB0
DECL|macro|GL_CPU_OPTIMIZED_QCOM
define|#
directive|define
name|GL_CPU_OPTIMIZED_QCOM
value|0x8FB1
DECL|macro|GL_GPU_OPTIMIZED_QCOM
define|#
directive|define
name|GL_GPU_OPTIMIZED_QCOM
value|0x8FB2
DECL|macro|GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM
define|#
directive|define
name|GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM
value|0x8FB3
endif|#
directive|endif
comment|/* GL_QCOM_binning_control */
ifndef|#
directive|ifndef
name|GL_QCOM_driver_control
DECL|macro|GL_QCOM_driver_control
define|#
directive|define
name|GL_QCOM_driver_control
value|1
DECL|typedef|PFNGLGETDRIVERCONTROLSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETDRIVERCONTROLSQCOMPROC
function_decl|)
parameter_list|(
name|GLint
modifier|*
name|num
parameter_list|,
name|GLsizei
name|size
parameter_list|,
name|GLuint
modifier|*
name|driverControls
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|driverControl
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|driverControlString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEDRIVERCONTROLQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENABLEDRIVERCONTROLQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEDRIVERCONTROLQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDISABLEDRIVERCONTROLQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetDriverControlsQCOM
parameter_list|(
name|GLint
modifier|*
name|num
parameter_list|,
name|GLsizei
name|size
parameter_list|,
name|GLuint
modifier|*
name|driverControls
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetDriverControlStringQCOM
parameter_list|(
name|GLuint
name|driverControl
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|driverControlString
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEnableDriverControlQCOM
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDisableDriverControlQCOM
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_QCOM_driver_control */
ifndef|#
directive|ifndef
name|GL_QCOM_extended_get
DECL|macro|GL_QCOM_extended_get
define|#
directive|define
name|GL_QCOM_extended_get
value|1
DECL|macro|GL_TEXTURE_WIDTH_QCOM
define|#
directive|define
name|GL_TEXTURE_WIDTH_QCOM
value|0x8BD2
DECL|macro|GL_TEXTURE_HEIGHT_QCOM
define|#
directive|define
name|GL_TEXTURE_HEIGHT_QCOM
value|0x8BD3
DECL|macro|GL_TEXTURE_DEPTH_QCOM
define|#
directive|define
name|GL_TEXTURE_DEPTH_QCOM
value|0x8BD4
DECL|macro|GL_TEXTURE_INTERNAL_FORMAT_QCOM
define|#
directive|define
name|GL_TEXTURE_INTERNAL_FORMAT_QCOM
value|0x8BD5
DECL|macro|GL_TEXTURE_FORMAT_QCOM
define|#
directive|define
name|GL_TEXTURE_FORMAT_QCOM
value|0x8BD6
DECL|macro|GL_TEXTURE_TYPE_QCOM
define|#
directive|define
name|GL_TEXTURE_TYPE_QCOM
value|0x8BD7
DECL|macro|GL_TEXTURE_IMAGE_VALID_QCOM
define|#
directive|define
name|GL_TEXTURE_IMAGE_VALID_QCOM
value|0x8BD8
DECL|macro|GL_TEXTURE_NUM_LEVELS_QCOM
define|#
directive|define
name|GL_TEXTURE_NUM_LEVELS_QCOM
value|0x8BD9
DECL|macro|GL_TEXTURE_TARGET_QCOM
define|#
directive|define
name|GL_TEXTURE_TARGET_QCOM
value|0x8BDA
DECL|macro|GL_TEXTURE_OBJECT_VALID_QCOM
define|#
directive|define
name|GL_TEXTURE_OBJECT_VALID_QCOM
value|0x8BDB
DECL|macro|GL_STATE_RESTORE
define|#
directive|define
name|GL_STATE_RESTORE
value|0x8BDC
DECL|typedef|PFNGLEXTGETTEXTURESQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETTEXTURESQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLint
name|maxTextures
parameter_list|,
name|GLint
modifier|*
name|numTextures
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETBUFFERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETBUFFERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|buffers
parameter_list|,
name|GLint
name|maxBuffers
parameter_list|,
name|GLint
modifier|*
name|numBuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETRENDERBUFFERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETRENDERBUFFERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|renderbuffers
parameter_list|,
name|GLint
name|maxRenderbuffers
parameter_list|,
name|GLint
modifier|*
name|numRenderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETFRAMEBUFFERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETFRAMEBUFFERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|framebuffers
parameter_list|,
name|GLint
name|maxFramebuffers
parameter_list|,
name|GLint
modifier|*
name|numFramebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|face
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETTEXSUBIMAGEQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETTEXSUBIMAGEQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|void
modifier|*
name|texels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETBUFFERPOINTERVQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETBUFFERPOINTERVQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|void
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetTexturesQCOM
parameter_list|(
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLint
name|maxTextures
parameter_list|,
name|GLint
modifier|*
name|numTextures
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetBuffersQCOM
parameter_list|(
name|GLuint
modifier|*
name|buffers
parameter_list|,
name|GLint
name|maxBuffers
parameter_list|,
name|GLint
modifier|*
name|numBuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetRenderbuffersQCOM
parameter_list|(
name|GLuint
modifier|*
name|renderbuffers
parameter_list|,
name|GLint
name|maxRenderbuffers
parameter_list|,
name|GLint
modifier|*
name|numRenderbuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetFramebuffersQCOM
parameter_list|(
name|GLuint
modifier|*
name|framebuffers
parameter_list|,
name|GLint
name|maxFramebuffers
parameter_list|,
name|GLint
modifier|*
name|numFramebuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetTexLevelParameterivQCOM
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|face
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtTexObjectStateOverrideiQCOM
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetTexSubImageQCOM
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|void
modifier|*
name|texels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetBufferPointervQCOM
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|void
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_QCOM_extended_get */
ifndef|#
directive|ifndef
name|GL_QCOM_extended_get2
DECL|macro|GL_QCOM_extended_get2
define|#
directive|define
name|GL_QCOM_extended_get2
value|1
DECL|typedef|PFNGLEXTGETSHADERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETSHADERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLint
name|maxShaders
parameter_list|,
name|GLint
modifier|*
name|numShaders
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETPROGRAMSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETPROGRAMSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|programs
parameter_list|,
name|GLint
name|maxPrograms
parameter_list|,
name|GLint
modifier|*
name|numPrograms
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTISPROGRAMBINARYQCOMPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTISPROGRAMBINARYQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|,
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetShadersQCOM
parameter_list|(
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLint
name|maxShaders
parameter_list|,
name|GLint
modifier|*
name|numShaders
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetProgramsQCOM
parameter_list|(
name|GLuint
modifier|*
name|programs
parameter_list|,
name|GLint
name|maxPrograms
parameter_list|,
name|GLint
modifier|*
name|numPrograms
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glExtIsProgramBinaryQCOM
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetProgramBinarySourceQCOM
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|,
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_QCOM_extended_get2 */
ifndef|#
directive|ifndef
name|GL_QCOM_perfmon_global_mode
DECL|macro|GL_QCOM_perfmon_global_mode
define|#
directive|define
name|GL_QCOM_perfmon_global_mode
value|1
DECL|macro|GL_PERFMON_GLOBAL_MODE_QCOM
define|#
directive|define
name|GL_PERFMON_GLOBAL_MODE_QCOM
value|0x8FA0
endif|#
directive|endif
comment|/* GL_QCOM_perfmon_global_mode */
ifndef|#
directive|ifndef
name|GL_QCOM_tiled_rendering
DECL|macro|GL_QCOM_tiled_rendering
define|#
directive|define
name|GL_QCOM_tiled_rendering
value|1
DECL|macro|GL_COLOR_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT0_QCOM
value|0x00000001
DECL|macro|GL_COLOR_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT1_QCOM
value|0x00000002
DECL|macro|GL_COLOR_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT2_QCOM
value|0x00000004
DECL|macro|GL_COLOR_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT3_QCOM
value|0x00000008
DECL|macro|GL_COLOR_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT4_QCOM
value|0x00000010
DECL|macro|GL_COLOR_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT5_QCOM
value|0x00000020
DECL|macro|GL_COLOR_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT6_QCOM
value|0x00000040
DECL|macro|GL_COLOR_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT7_QCOM
value|0x00000080
DECL|macro|GL_DEPTH_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT0_QCOM
value|0x00000100
DECL|macro|GL_DEPTH_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT1_QCOM
value|0x00000200
DECL|macro|GL_DEPTH_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT2_QCOM
value|0x00000400
DECL|macro|GL_DEPTH_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT3_QCOM
value|0x00000800
DECL|macro|GL_DEPTH_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT4_QCOM
value|0x00001000
DECL|macro|GL_DEPTH_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT5_QCOM
value|0x00002000
DECL|macro|GL_DEPTH_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT6_QCOM
value|0x00004000
DECL|macro|GL_DEPTH_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT7_QCOM
value|0x00008000
DECL|macro|GL_STENCIL_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT0_QCOM
value|0x00010000
DECL|macro|GL_STENCIL_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT1_QCOM
value|0x00020000
DECL|macro|GL_STENCIL_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT2_QCOM
value|0x00040000
DECL|macro|GL_STENCIL_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT3_QCOM
value|0x00080000
DECL|macro|GL_STENCIL_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT4_QCOM
value|0x00100000
DECL|macro|GL_STENCIL_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT5_QCOM
value|0x00200000
DECL|macro|GL_STENCIL_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT6_QCOM
value|0x00400000
DECL|macro|GL_STENCIL_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT7_QCOM
value|0x00800000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT0_QCOM
value|0x01000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT1_QCOM
value|0x02000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT2_QCOM
value|0x04000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT3_QCOM
value|0x08000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT4_QCOM
value|0x10000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT5_QCOM
value|0x20000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT6_QCOM
value|0x40000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT7_QCOM
value|0x80000000
DECL|typedef|PFNGLSTARTTILINGQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTARTTILINGQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|width
parameter_list|,
name|GLuint
name|height
parameter_list|,
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDTILINGQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENDTILINGQCOMPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStartTilingQCOM
parameter_list|(
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|width
parameter_list|,
name|GLuint
name|height
parameter_list|,
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEndTilingQCOM
parameter_list|(
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
endif|#
directive|endif
endif|#
directive|endif
comment|/* GL_QCOM_tiled_rendering */
ifndef|#
directive|ifndef
name|GL_QCOM_writeonly_rendering
DECL|macro|GL_QCOM_writeonly_rendering
define|#
directive|define
name|GL_QCOM_writeonly_rendering
value|1
DECL|macro|GL_WRITEONLY_RENDERING_QCOM
define|#
directive|define
name|GL_WRITEONLY_RENDERING_QCOM
value|0x8823
endif|#
directive|endif
comment|/* GL_QCOM_writeonly_rendering */
ifndef|#
directive|ifndef
name|GL_VIV_shader_binary
DECL|macro|GL_VIV_shader_binary
define|#
directive|define
name|GL_VIV_shader_binary
value|1
DECL|macro|GL_SHADER_BINARY_VIV
define|#
directive|define
name|GL_SHADER_BINARY_VIV
value|0x8FC4
endif|#
directive|endif
comment|/* GL_VIV_shader_binary */
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
