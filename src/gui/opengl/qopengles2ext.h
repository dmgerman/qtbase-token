begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|__gl2ext_h_
end_ifndef
begin_define
DECL|macro|__gl2ext_h_
define|#
directive|define
name|__gl2ext_h_
end_define
begin_if
if|#
directive|if
literal|0
end_if
begin_pragma
pragma|#
directive|pragma
name|qt_no_master_include
end_pragma
begin_pragma
pragma|#
directive|pragma
name|qt_sync_stop_processing
end_pragma
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* $Revision: 18481 $ on $Date:: 2012-07-11 18:07:26 -0700 #$ */
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/*  * This document is licensed under the SGI Free Software B License Version  * 2.0. For details, see http://oss.sgi.com/projects/FreeB/ .  */
ifndef|#
directive|ifndef
name|GL_APIENTRYP
DECL|macro|GL_APIENTRYP
define|#
directive|define
name|GL_APIENTRYP
value|GL_APIENTRY*
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * OES extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_OES_compressed_ETC1_RGB8_texture */
ifndef|#
directive|ifndef
name|GL_OES_compressed_ETC1_RGB8_texture
DECL|macro|GL_ETC1_RGB8_OES
define|#
directive|define
name|GL_ETC1_RGB8_OES
value|0x8D64
endif|#
directive|endif
comment|/* GL_OES_compressed_paletted_texture */
ifndef|#
directive|ifndef
name|GL_OES_compressed_paletted_texture
DECL|macro|GL_PALETTE4_RGB8_OES
define|#
directive|define
name|GL_PALETTE4_RGB8_OES
value|0x8B90
DECL|macro|GL_PALETTE4_RGBA8_OES
define|#
directive|define
name|GL_PALETTE4_RGBA8_OES
value|0x8B91
DECL|macro|GL_PALETTE4_R5_G6_B5_OES
define|#
directive|define
name|GL_PALETTE4_R5_G6_B5_OES
value|0x8B92
DECL|macro|GL_PALETTE4_RGBA4_OES
define|#
directive|define
name|GL_PALETTE4_RGBA4_OES
value|0x8B93
DECL|macro|GL_PALETTE4_RGB5_A1_OES
define|#
directive|define
name|GL_PALETTE4_RGB5_A1_OES
value|0x8B94
DECL|macro|GL_PALETTE8_RGB8_OES
define|#
directive|define
name|GL_PALETTE8_RGB8_OES
value|0x8B95
DECL|macro|GL_PALETTE8_RGBA8_OES
define|#
directive|define
name|GL_PALETTE8_RGBA8_OES
value|0x8B96
DECL|macro|GL_PALETTE8_R5_G6_B5_OES
define|#
directive|define
name|GL_PALETTE8_R5_G6_B5_OES
value|0x8B97
DECL|macro|GL_PALETTE8_RGBA4_OES
define|#
directive|define
name|GL_PALETTE8_RGBA4_OES
value|0x8B98
DECL|macro|GL_PALETTE8_RGB5_A1_OES
define|#
directive|define
name|GL_PALETTE8_RGB5_A1_OES
value|0x8B99
endif|#
directive|endif
comment|/* GL_OES_depth24 */
ifndef|#
directive|ifndef
name|GL_OES_depth24
DECL|macro|GL_DEPTH_COMPONENT24_OES
define|#
directive|define
name|GL_DEPTH_COMPONENT24_OES
value|0x81A6
endif|#
directive|endif
comment|/* GL_OES_depth32 */
ifndef|#
directive|ifndef
name|GL_OES_depth32
DECL|macro|GL_DEPTH_COMPONENT32_OES
define|#
directive|define
name|GL_DEPTH_COMPONENT32_OES
value|0x81A7
endif|#
directive|endif
comment|/* GL_OES_depth_texture */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_OES_EGL_image */
ifndef|#
directive|ifndef
name|GL_OES_EGL_image
DECL|typedef|GLeglImageOES
typedef|typedef
name|void
modifier|*
name|GLeglImageOES
typedef|;
endif|#
directive|endif
comment|/* GL_OES_EGL_image_external */
ifndef|#
directive|ifndef
name|GL_OES_EGL_image_external
comment|/* GLeglImageOES defined in GL_OES_EGL_image already. */
DECL|macro|GL_TEXTURE_EXTERNAL_OES
define|#
directive|define
name|GL_TEXTURE_EXTERNAL_OES
value|0x8D65
DECL|macro|GL_SAMPLER_EXTERNAL_OES
define|#
directive|define
name|GL_SAMPLER_EXTERNAL_OES
value|0x8D66
DECL|macro|GL_TEXTURE_BINDING_EXTERNAL_OES
define|#
directive|define
name|GL_TEXTURE_BINDING_EXTERNAL_OES
value|0x8D67
DECL|macro|GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
define|#
directive|define
name|GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
value|0x8D68
endif|#
directive|endif
comment|/* GL_OES_element_index_uint */
ifndef|#
directive|ifndef
name|GL_OES_element_index_uint
DECL|macro|GL_UNSIGNED_INT
define|#
directive|define
name|GL_UNSIGNED_INT
value|0x1405
endif|#
directive|endif
comment|/* GL_OES_get_program_binary */
ifndef|#
directive|ifndef
name|GL_OES_get_program_binary
DECL|macro|GL_PROGRAM_BINARY_LENGTH_OES
define|#
directive|define
name|GL_PROGRAM_BINARY_LENGTH_OES
value|0x8741
DECL|macro|GL_NUM_PROGRAM_BINARY_FORMATS_OES
define|#
directive|define
name|GL_NUM_PROGRAM_BINARY_FORMATS_OES
value|0x87FE
DECL|macro|GL_PROGRAM_BINARY_FORMATS_OES
define|#
directive|define
name|GL_PROGRAM_BINARY_FORMATS_OES
value|0x87FF
endif|#
directive|endif
comment|/* GL_OES_mapbuffer */
ifndef|#
directive|ifndef
name|GL_OES_mapbuffer
DECL|macro|GL_WRITE_ONLY_OES
define|#
directive|define
name|GL_WRITE_ONLY_OES
value|0x88B9
DECL|macro|GL_BUFFER_ACCESS_OES
define|#
directive|define
name|GL_BUFFER_ACCESS_OES
value|0x88BB
DECL|macro|GL_BUFFER_MAPPED_OES
define|#
directive|define
name|GL_BUFFER_MAPPED_OES
value|0x88BC
DECL|macro|GL_BUFFER_MAP_POINTER_OES
define|#
directive|define
name|GL_BUFFER_MAP_POINTER_OES
value|0x88BD
endif|#
directive|endif
comment|/* GL_OES_packed_depth_stencil */
ifndef|#
directive|ifndef
name|GL_OES_packed_depth_stencil
DECL|macro|GL_DEPTH_STENCIL_OES
define|#
directive|define
name|GL_DEPTH_STENCIL_OES
value|0x84F9
DECL|macro|GL_UNSIGNED_INT_24_8_OES
define|#
directive|define
name|GL_UNSIGNED_INT_24_8_OES
value|0x84FA
DECL|macro|GL_DEPTH24_STENCIL8_OES
define|#
directive|define
name|GL_DEPTH24_STENCIL8_OES
value|0x88F0
endif|#
directive|endif
comment|/* GL_OES_required_internalformat */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_OES_rgb8_rgba8 */
ifndef|#
directive|ifndef
name|GL_OES_rgb8_rgba8
DECL|macro|GL_RGB8_OES
define|#
directive|define
name|GL_RGB8_OES
value|0x8051
DECL|macro|GL_RGBA8_OES
define|#
directive|define
name|GL_RGBA8_OES
value|0x8058
endif|#
directive|endif
comment|/* GL_OES_standard_derivatives */
ifndef|#
directive|ifndef
name|GL_OES_standard_derivatives
DECL|macro|GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
define|#
directive|define
name|GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
value|0x8B8B
endif|#
directive|endif
comment|/* GL_OES_stencil1 */
ifndef|#
directive|ifndef
name|GL_OES_stencil1
DECL|macro|GL_STENCIL_INDEX1_OES
define|#
directive|define
name|GL_STENCIL_INDEX1_OES
value|0x8D46
endif|#
directive|endif
comment|/* GL_OES_stencil4 */
ifndef|#
directive|ifndef
name|GL_OES_stencil4
DECL|macro|GL_STENCIL_INDEX4_OES
define|#
directive|define
name|GL_STENCIL_INDEX4_OES
value|0x8D47
endif|#
directive|endif
comment|/* GL_OES_texture_3D */
ifndef|#
directive|ifndef
name|GL_OES_texture_3D
DECL|macro|GL_TEXTURE_WRAP_R_OES
define|#
directive|define
name|GL_TEXTURE_WRAP_R_OES
value|0x8072
DECL|macro|GL_TEXTURE_3D_OES
define|#
directive|define
name|GL_TEXTURE_3D_OES
value|0x806F
DECL|macro|GL_TEXTURE_BINDING_3D_OES
define|#
directive|define
name|GL_TEXTURE_BINDING_3D_OES
value|0x806A
DECL|macro|GL_MAX_3D_TEXTURE_SIZE_OES
define|#
directive|define
name|GL_MAX_3D_TEXTURE_SIZE_OES
value|0x8073
DECL|macro|GL_SAMPLER_3D_OES
define|#
directive|define
name|GL_SAMPLER_3D_OES
value|0x8B5F
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
value|0x8CD4
endif|#
directive|endif
comment|/* GL_OES_texture_float */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_OES_texture_float_linear */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_OES_texture_half_float */
ifndef|#
directive|ifndef
name|GL_OES_texture_half_float
DECL|macro|GL_HALF_FLOAT_OES
define|#
directive|define
name|GL_HALF_FLOAT_OES
value|0x8D61
endif|#
directive|endif
comment|/* GL_OES_texture_half_float_linear */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_OES_texture_npot */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_OES_vertex_array_object */
ifndef|#
directive|ifndef
name|GL_OES_vertex_array_object
DECL|macro|GL_VERTEX_ARRAY_BINDING_OES
define|#
directive|define
name|GL_VERTEX_ARRAY_BINDING_OES
value|0x85B5
endif|#
directive|endif
comment|/* GL_OES_vertex_half_float */
comment|/* GL_HALF_FLOAT_OES defined in GL_OES_texture_half_float already. */
comment|/* GL_OES_vertex_type_10_10_10_2 */
ifndef|#
directive|ifndef
name|GL_OES_vertex_type_10_10_10_2
DECL|macro|GL_UNSIGNED_INT_10_10_10_2_OES
define|#
directive|define
name|GL_UNSIGNED_INT_10_10_10_2_OES
value|0x8DF6
DECL|macro|GL_INT_10_10_10_2_OES
define|#
directive|define
name|GL_INT_10_10_10_2_OES
value|0x8DF7
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * AMD extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_AMD_compressed_3DC_texture */
ifndef|#
directive|ifndef
name|GL_AMD_compressed_3DC_texture
DECL|macro|GL_3DC_X_AMD
define|#
directive|define
name|GL_3DC_X_AMD
value|0x87F9
DECL|macro|GL_3DC_XY_AMD
define|#
directive|define
name|GL_3DC_XY_AMD
value|0x87FA
endif|#
directive|endif
comment|/* GL_AMD_compressed_ATC_texture */
ifndef|#
directive|ifndef
name|GL_AMD_compressed_ATC_texture
DECL|macro|GL_ATC_RGB_AMD
define|#
directive|define
name|GL_ATC_RGB_AMD
value|0x8C92
DECL|macro|GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
define|#
directive|define
name|GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
value|0x8C93
DECL|macro|GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
define|#
directive|define
name|GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
value|0x87EE
endif|#
directive|endif
comment|/* GL_AMD_performance_monitor */
ifndef|#
directive|ifndef
name|GL_AMD_performance_monitor
DECL|macro|GL_COUNTER_TYPE_AMD
define|#
directive|define
name|GL_COUNTER_TYPE_AMD
value|0x8BC0
DECL|macro|GL_COUNTER_RANGE_AMD
define|#
directive|define
name|GL_COUNTER_RANGE_AMD
value|0x8BC1
DECL|macro|GL_UNSIGNED_INT64_AMD
define|#
directive|define
name|GL_UNSIGNED_INT64_AMD
value|0x8BC2
DECL|macro|GL_PERCENTAGE_AMD
define|#
directive|define
name|GL_PERCENTAGE_AMD
value|0x8BC3
DECL|macro|GL_PERFMON_RESULT_AVAILABLE_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_AVAILABLE_AMD
value|0x8BC4
DECL|macro|GL_PERFMON_RESULT_SIZE_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_SIZE_AMD
value|0x8BC5
DECL|macro|GL_PERFMON_RESULT_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_AMD
value|0x8BC6
endif|#
directive|endif
comment|/* GL_AMD_program_binary_Z400 */
ifndef|#
directive|ifndef
name|GL_AMD_program_binary_Z400
DECL|macro|GL_Z400_BINARY_AMD
define|#
directive|define
name|GL_Z400_BINARY_AMD
value|0x8740
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * ANGLE extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_ANGLE_framebuffer_blit */
ifndef|#
directive|ifndef
name|GL_ANGLE_framebuffer_blit
DECL|macro|GL_READ_FRAMEBUFFER_ANGLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_ANGLE
value|0x8CA8
DECL|macro|GL_DRAW_FRAMEBUFFER_ANGLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_ANGLE
value|0x8CA9
DECL|macro|GL_DRAW_FRAMEBUFFER_BINDING_ANGLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_BINDING_ANGLE
value|0x8CA6
DECL|macro|GL_READ_FRAMEBUFFER_BINDING_ANGLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_BINDING_ANGLE
value|0x8CAA
endif|#
directive|endif
comment|/* GL_ANGLE_framebuffer_multisample */
ifndef|#
directive|ifndef
name|GL_ANGLE_framebuffer_multisample
DECL|macro|GL_RENDERBUFFER_SAMPLES_ANGLE
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_ANGLE
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_ANGLE
define|#
directive|define
name|GL_MAX_SAMPLES_ANGLE
value|0x8D57
endif|#
directive|endif
comment|/* GL_ANGLE_instanced_arrays */
ifndef|#
directive|ifndef
name|GL_ANGLE_instanced_arrays
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
value|0x88FE
endif|#
directive|endif
comment|/* GL_ANGLE_pack_reverse_row_order */
ifndef|#
directive|ifndef
name|GL_ANGLE_pack_reverse_row_order
DECL|macro|GL_PACK_REVERSE_ROW_ORDER_ANGLE
define|#
directive|define
name|GL_PACK_REVERSE_ROW_ORDER_ANGLE
value|0x93A4
endif|#
directive|endif
comment|/* GL_ANGLE_texture_compression_dxt3 */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_compression_dxt3
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
value|0x83F2
endif|#
directive|endif
comment|/* GL_ANGLE_texture_compression_dxt5 */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_compression_dxt5
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
value|0x83F3
endif|#
directive|endif
comment|/* GL_ANGLE_texture_usage */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_usage
DECL|macro|GL_TEXTURE_USAGE_ANGLE
define|#
directive|define
name|GL_TEXTURE_USAGE_ANGLE
value|0x93A2
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_ANGLE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_ANGLE
value|0x93A3
endif|#
directive|endif
comment|/* GL_ANGLE_translated_shader_source */
ifndef|#
directive|ifndef
name|GL_ANGLE_translated_shader_source
DECL|macro|GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
define|#
directive|define
name|GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
value|0x93A0
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * APPLE extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_APPLE_rgb_422 */
ifndef|#
directive|ifndef
name|GL_APPLE_rgb_422
DECL|macro|GL_RGB_422_APPLE
define|#
directive|define
name|GL_RGB_422_APPLE
value|0x8A1F
DECL|macro|GL_UNSIGNED_SHORT_8_8_APPLE
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_APPLE
value|0x85BA
DECL|macro|GL_UNSIGNED_SHORT_8_8_REV_APPLE
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_REV_APPLE
value|0x85BB
endif|#
directive|endif
comment|/* GL_APPLE_framebuffer_multisample */
ifndef|#
directive|ifndef
name|GL_APPLE_framebuffer_multisample
DECL|macro|GL_RENDERBUFFER_SAMPLES_APPLE
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_APPLE
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_APPLE
define|#
directive|define
name|GL_MAX_SAMPLES_APPLE
value|0x8D57
DECL|macro|GL_READ_FRAMEBUFFER_APPLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_APPLE
value|0x8CA8
DECL|macro|GL_DRAW_FRAMEBUFFER_APPLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_APPLE
value|0x8CA9
DECL|macro|GL_DRAW_FRAMEBUFFER_BINDING_APPLE
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_BINDING_APPLE
value|0x8CA6
DECL|macro|GL_READ_FRAMEBUFFER_BINDING_APPLE
define|#
directive|define
name|GL_READ_FRAMEBUFFER_BINDING_APPLE
value|0x8CAA
endif|#
directive|endif
comment|/* GL_APPLE_texture_format_BGRA8888 */
ifndef|#
directive|ifndef
name|GL_APPLE_texture_format_BGRA8888
DECL|macro|GL_BGRA_EXT
define|#
directive|define
name|GL_BGRA_EXT
value|0x80E1
endif|#
directive|endif
comment|/* GL_APPLE_texture_max_level */
ifndef|#
directive|ifndef
name|GL_APPLE_texture_max_level
DECL|macro|GL_TEXTURE_MAX_LEVEL_APPLE
define|#
directive|define
name|GL_TEXTURE_MAX_LEVEL_APPLE
value|0x813D
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * ARM extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_ARM_mali_shader_binary */
ifndef|#
directive|ifndef
name|GL_ARM_mali_shader_binary
DECL|macro|GL_MALI_SHADER_BINARY_ARM
define|#
directive|define
name|GL_MALI_SHADER_BINARY_ARM
value|0x8F60
endif|#
directive|endif
comment|/* GL_ARM_rgba8 */
comment|/* No new tokens introduced by this extension. */
comment|/*------------------------------------------------------------------------*  * EXT extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_EXT_blend_minmax */
ifndef|#
directive|ifndef
name|GL_EXT_blend_minmax
DECL|macro|GL_MIN_EXT
define|#
directive|define
name|GL_MIN_EXT
value|0x8007
DECL|macro|GL_MAX_EXT
define|#
directive|define
name|GL_MAX_EXT
value|0x8008
endif|#
directive|endif
comment|/* GL_EXT_color_buffer_half_float */
ifndef|#
directive|ifndef
name|GL_EXT_color_buffer_half_float
DECL|macro|GL_RGBA16F_EXT
define|#
directive|define
name|GL_RGBA16F_EXT
value|0x881A
DECL|macro|GL_RGB16F_EXT
define|#
directive|define
name|GL_RGB16F_EXT
value|0x881B
DECL|macro|GL_RG16F_EXT
define|#
directive|define
name|GL_RG16F_EXT
value|0x822F
DECL|macro|GL_R16F_EXT
define|#
directive|define
name|GL_R16F_EXT
value|0x822D
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
value|0x8211
DECL|macro|GL_UNSIGNED_NORMALIZED_EXT
define|#
directive|define
name|GL_UNSIGNED_NORMALIZED_EXT
value|0x8C17
endif|#
directive|endif
comment|/* GL_EXT_debug_label */
ifndef|#
directive|ifndef
name|GL_EXT_debug_label
DECL|macro|GL_PROGRAM_PIPELINE_OBJECT_EXT
define|#
directive|define
name|GL_PROGRAM_PIPELINE_OBJECT_EXT
value|0x8A4F
DECL|macro|GL_PROGRAM_OBJECT_EXT
define|#
directive|define
name|GL_PROGRAM_OBJECT_EXT
value|0x8B40
DECL|macro|GL_SHADER_OBJECT_EXT
define|#
directive|define
name|GL_SHADER_OBJECT_EXT
value|0x8B48
DECL|macro|GL_BUFFER_OBJECT_EXT
define|#
directive|define
name|GL_BUFFER_OBJECT_EXT
value|0x9151
DECL|macro|GL_QUERY_OBJECT_EXT
define|#
directive|define
name|GL_QUERY_OBJECT_EXT
value|0x9153
DECL|macro|GL_VERTEX_ARRAY_OBJECT_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_OBJECT_EXT
value|0x9154
endif|#
directive|endif
comment|/* GL_EXT_debug_marker */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_EXT_discard_framebuffer */
ifndef|#
directive|ifndef
name|GL_EXT_discard_framebuffer
DECL|macro|GL_COLOR_EXT
define|#
directive|define
name|GL_COLOR_EXT
value|0x1800
DECL|macro|GL_DEPTH_EXT
define|#
directive|define
name|GL_DEPTH_EXT
value|0x1801
DECL|macro|GL_STENCIL_EXT
define|#
directive|define
name|GL_STENCIL_EXT
value|0x1802
endif|#
directive|endif
comment|/* GL_EXT_multisampled_render_to_texture */
ifndef|#
directive|ifndef
name|GL_EXT_multisampled_render_to_texture
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
value|0x8D6C
comment|/* reuse values from GL_EXT_framebuffer_multisample (desktop extension) */
DECL|macro|GL_RENDERBUFFER_SAMPLES_EXT
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_EXT
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_EXT
define|#
directive|define
name|GL_MAX_SAMPLES_EXT
value|0x8D57
endif|#
directive|endif
comment|/* GL_EXT_multi_draw_arrays */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_EXT_occlusion_query_boolean */
ifndef|#
directive|ifndef
name|GL_EXT_occlusion_query_boolean
DECL|macro|GL_ANY_SAMPLES_PASSED_EXT
define|#
directive|define
name|GL_ANY_SAMPLES_PASSED_EXT
value|0x8C2F
DECL|macro|GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
define|#
directive|define
name|GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
value|0x8D6A
DECL|macro|GL_CURRENT_QUERY_EXT
define|#
directive|define
name|GL_CURRENT_QUERY_EXT
value|0x8865
DECL|macro|GL_QUERY_RESULT_EXT
define|#
directive|define
name|GL_QUERY_RESULT_EXT
value|0x8866
DECL|macro|GL_QUERY_RESULT_AVAILABLE_EXT
define|#
directive|define
name|GL_QUERY_RESULT_AVAILABLE_EXT
value|0x8867
endif|#
directive|endif
comment|/* GL_EXT_read_format_bgra */
ifndef|#
directive|ifndef
name|GL_EXT_read_format_bgra
DECL|macro|GL_BGRA_EXT
define|#
directive|define
name|GL_BGRA_EXT
value|0x80E1
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
value|0x8365
DECL|macro|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
value|0x8366
endif|#
directive|endif
comment|/* GL_EXT_robustness */
ifndef|#
directive|ifndef
name|GL_EXT_robustness
comment|/* reuse GL_NO_ERROR */
DECL|macro|GL_GUILTY_CONTEXT_RESET_EXT
define|#
directive|define
name|GL_GUILTY_CONTEXT_RESET_EXT
value|0x8253
DECL|macro|GL_INNOCENT_CONTEXT_RESET_EXT
define|#
directive|define
name|GL_INNOCENT_CONTEXT_RESET_EXT
value|0x8254
DECL|macro|GL_UNKNOWN_CONTEXT_RESET_EXT
define|#
directive|define
name|GL_UNKNOWN_CONTEXT_RESET_EXT
value|0x8255
DECL|macro|GL_CONTEXT_ROBUST_ACCESS_EXT
define|#
directive|define
name|GL_CONTEXT_ROBUST_ACCESS_EXT
value|0x90F3
DECL|macro|GL_RESET_NOTIFICATION_STRATEGY_EXT
define|#
directive|define
name|GL_RESET_NOTIFICATION_STRATEGY_EXT
value|0x8256
DECL|macro|GL_LOSE_CONTEXT_ON_RESET_EXT
define|#
directive|define
name|GL_LOSE_CONTEXT_ON_RESET_EXT
value|0x8252
DECL|macro|GL_NO_RESET_NOTIFICATION_EXT
define|#
directive|define
name|GL_NO_RESET_NOTIFICATION_EXT
value|0x8261
endif|#
directive|endif
comment|/* GL_EXT_separate_shader_objects */
ifndef|#
directive|ifndef
name|GL_EXT_separate_shader_objects
DECL|macro|GL_VERTEX_SHADER_BIT_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_BIT_EXT
value|0x00000001
DECL|macro|GL_FRAGMENT_SHADER_BIT_EXT
define|#
directive|define
name|GL_FRAGMENT_SHADER_BIT_EXT
value|0x00000002
DECL|macro|GL_ALL_SHADER_BITS_EXT
define|#
directive|define
name|GL_ALL_SHADER_BITS_EXT
value|0xFFFFFFFF
DECL|macro|GL_PROGRAM_SEPARABLE_EXT
define|#
directive|define
name|GL_PROGRAM_SEPARABLE_EXT
value|0x8258
DECL|macro|GL_ACTIVE_PROGRAM_EXT
define|#
directive|define
name|GL_ACTIVE_PROGRAM_EXT
value|0x8259
DECL|macro|GL_PROGRAM_PIPELINE_BINDING_EXT
define|#
directive|define
name|GL_PROGRAM_PIPELINE_BINDING_EXT
value|0x825A
endif|#
directive|endif
comment|/* GL_EXT_shader_texture_lod */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_EXT_shadow_samplers */
ifndef|#
directive|ifndef
name|GL_EXT_shadow_samplers
DECL|macro|GL_TEXTURE_COMPARE_MODE_EXT
define|#
directive|define
name|GL_TEXTURE_COMPARE_MODE_EXT
value|0x884C
DECL|macro|GL_TEXTURE_COMPARE_FUNC_EXT
define|#
directive|define
name|GL_TEXTURE_COMPARE_FUNC_EXT
value|0x884D
DECL|macro|GL_COMPARE_REF_TO_TEXTURE_EXT
define|#
directive|define
name|GL_COMPARE_REF_TO_TEXTURE_EXT
value|0x884E
DECL|macro|GL_SAMPLER_2D_SHADOW_EXT
define|#
directive|define
name|GL_SAMPLER_2D_SHADOW_EXT
value|0x8B62
endif|#
directive|endif
comment|/* GL_EXT_sRGB */
ifndef|#
directive|ifndef
name|GL_EXT_sRGB
DECL|macro|GL_SRGB_EXT
define|#
directive|define
name|GL_SRGB_EXT
value|0x8C40
DECL|macro|GL_SRGB_ALPHA_EXT
define|#
directive|define
name|GL_SRGB_ALPHA_EXT
value|0x8C42
DECL|macro|GL_SRGB8_ALPHA8_EXT
define|#
directive|define
name|GL_SRGB8_ALPHA8_EXT
value|0x8C43
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
value|0x8210
endif|#
directive|endif
comment|/* GL_EXT_texture_compression_dxt1 */
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_dxt1
DECL|macro|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
value|0x83F0
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
value|0x83F1
endif|#
directive|endif
comment|/* GL_EXT_texture_filter_anisotropic */
ifndef|#
directive|ifndef
name|GL_EXT_texture_filter_anisotropic
DECL|macro|GL_TEXTURE_MAX_ANISOTROPY_EXT
define|#
directive|define
name|GL_TEXTURE_MAX_ANISOTROPY_EXT
value|0x84FE
DECL|macro|GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
define|#
directive|define
name|GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
value|0x84FF
endif|#
directive|endif
comment|/* GL_EXT_texture_format_BGRA8888 */
ifndef|#
directive|ifndef
name|GL_EXT_texture_format_BGRA8888
DECL|macro|GL_BGRA_EXT
define|#
directive|define
name|GL_BGRA_EXT
value|0x80E1
endif|#
directive|endif
comment|/* GL_EXT_texture_rg */
ifndef|#
directive|ifndef
name|GL_EXT_texture_rg
DECL|macro|GL_RED_EXT
define|#
directive|define
name|GL_RED_EXT
value|0x1903
DECL|macro|GL_RG_EXT
define|#
directive|define
name|GL_RG_EXT
value|0x8227
DECL|macro|GL_R8_EXT
define|#
directive|define
name|GL_R8_EXT
value|0x8229
DECL|macro|GL_RG8_EXT
define|#
directive|define
name|GL_RG8_EXT
value|0x822B
endif|#
directive|endif
comment|/* GL_EXT_texture_storage */
ifndef|#
directive|ifndef
name|GL_EXT_texture_storage
DECL|macro|GL_TEXTURE_IMMUTABLE_FORMAT_EXT
define|#
directive|define
name|GL_TEXTURE_IMMUTABLE_FORMAT_EXT
value|0x912F
DECL|macro|GL_ALPHA8_EXT
define|#
directive|define
name|GL_ALPHA8_EXT
value|0x803C
DECL|macro|GL_LUMINANCE8_EXT
define|#
directive|define
name|GL_LUMINANCE8_EXT
value|0x8040
DECL|macro|GL_LUMINANCE8_ALPHA8_EXT
define|#
directive|define
name|GL_LUMINANCE8_ALPHA8_EXT
value|0x8045
DECL|macro|GL_RGBA32F_EXT
define|#
directive|define
name|GL_RGBA32F_EXT
value|0x8814
DECL|macro|GL_RGB32F_EXT
define|#
directive|define
name|GL_RGB32F_EXT
value|0x8815
DECL|macro|GL_ALPHA32F_EXT
define|#
directive|define
name|GL_ALPHA32F_EXT
value|0x8816
DECL|macro|GL_LUMINANCE32F_EXT
define|#
directive|define
name|GL_LUMINANCE32F_EXT
value|0x8818
DECL|macro|GL_LUMINANCE_ALPHA32F_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA32F_EXT
value|0x8819
comment|/* reuse GL_RGBA16F_EXT */
comment|/* reuse GL_RGB16F_EXT */
DECL|macro|GL_ALPHA16F_EXT
define|#
directive|define
name|GL_ALPHA16F_EXT
value|0x881C
DECL|macro|GL_LUMINANCE16F_EXT
define|#
directive|define
name|GL_LUMINANCE16F_EXT
value|0x881E
DECL|macro|GL_LUMINANCE_ALPHA16F_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA16F_EXT
value|0x881F
DECL|macro|GL_RGB10_A2_EXT
define|#
directive|define
name|GL_RGB10_A2_EXT
value|0x8059
DECL|macro|GL_RGB10_EXT
define|#
directive|define
name|GL_RGB10_EXT
value|0x8052
DECL|macro|GL_BGRA8_EXT
define|#
directive|define
name|GL_BGRA8_EXT
value|0x93A1
DECL|macro|GL_R8_EXT
define|#
directive|define
name|GL_R8_EXT
value|0x8229
DECL|macro|GL_RG8_EXT
define|#
directive|define
name|GL_RG8_EXT
value|0x822B
DECL|macro|GL_R32F_EXT
define|#
directive|define
name|GL_R32F_EXT
value|0x822E
DECL|macro|GL_RG32F_EXT
define|#
directive|define
name|GL_RG32F_EXT
value|0x8230
DECL|macro|GL_R16F_EXT
define|#
directive|define
name|GL_R16F_EXT
value|0x822D
DECL|macro|GL_RG16F_EXT
define|#
directive|define
name|GL_RG16F_EXT
value|0x822F
endif|#
directive|endif
comment|/* GL_EXT_texture_type_2_10_10_10_REV */
ifndef|#
directive|ifndef
name|GL_EXT_texture_type_2_10_10_10_REV
DECL|macro|GL_UNSIGNED_INT_2_10_10_10_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_2_10_10_10_REV_EXT
value|0x8368
endif|#
directive|endif
comment|/* GL_EXT_unpack_subimage */
ifndef|#
directive|ifndef
name|GL_EXT_unpack_subimage
DECL|macro|GL_UNPACK_ROW_LENGTH
define|#
directive|define
name|GL_UNPACK_ROW_LENGTH
value|0x0CF2
DECL|macro|GL_UNPACK_SKIP_ROWS
define|#
directive|define
name|GL_UNPACK_SKIP_ROWS
value|0x0CF3
DECL|macro|GL_UNPACK_SKIP_PIXELS
define|#
directive|define
name|GL_UNPACK_SKIP_PIXELS
value|0x0CF4
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * DMP extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_DMP_shader_binary */
ifndef|#
directive|ifndef
name|GL_DMP_shader_binary
DECL|macro|GL_SHADER_BINARY_DMP
define|#
directive|define
name|GL_SHADER_BINARY_DMP
value|0x9250
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * FJ extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_FJ_shader_binary_GCCSO */
ifndef|#
directive|ifndef
name|GL_FJ_shader_binary_GCCSO
DECL|macro|GCCSO_SHADER_BINARY_FJ
define|#
directive|define
name|GCCSO_SHADER_BINARY_FJ
value|0x9260
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * IMG extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_IMG_program_binary */
ifndef|#
directive|ifndef
name|GL_IMG_program_binary
DECL|macro|GL_SGX_PROGRAM_BINARY_IMG
define|#
directive|define
name|GL_SGX_PROGRAM_BINARY_IMG
value|0x9130
endif|#
directive|endif
comment|/* GL_IMG_read_format */
ifndef|#
directive|ifndef
name|GL_IMG_read_format
DECL|macro|GL_BGRA_IMG
define|#
directive|define
name|GL_BGRA_IMG
value|0x80E1
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG
value|0x8365
endif|#
directive|endif
comment|/* GL_IMG_shader_binary */
ifndef|#
directive|ifndef
name|GL_IMG_shader_binary
DECL|macro|GL_SGX_BINARY_IMG
define|#
directive|define
name|GL_SGX_BINARY_IMG
value|0x8C0A
endif|#
directive|endif
comment|/* GL_IMG_texture_compression_pvrtc */
ifndef|#
directive|ifndef
name|GL_IMG_texture_compression_pvrtc
DECL|macro|GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
value|0x8C00
DECL|macro|GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
value|0x8C01
DECL|macro|GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
value|0x8C02
DECL|macro|GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
define|#
directive|define
name|GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
value|0x8C03
endif|#
directive|endif
comment|/* GL_IMG_multisampled_render_to_texture */
ifndef|#
directive|ifndef
name|GL_IMG_multisampled_render_to_texture
DECL|macro|GL_RENDERBUFFER_SAMPLES_IMG
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_IMG
value|0x9133
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
value|0x9134
DECL|macro|GL_MAX_SAMPLES_IMG
define|#
directive|define
name|GL_MAX_SAMPLES_IMG
value|0x9135
DECL|macro|GL_TEXTURE_SAMPLES_IMG
define|#
directive|define
name|GL_TEXTURE_SAMPLES_IMG
value|0x9136
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * NV extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_NV_coverage_sample */
ifndef|#
directive|ifndef
name|GL_NV_coverage_sample
DECL|macro|GL_COVERAGE_COMPONENT_NV
define|#
directive|define
name|GL_COVERAGE_COMPONENT_NV
value|0x8ED0
DECL|macro|GL_COVERAGE_COMPONENT4_NV
define|#
directive|define
name|GL_COVERAGE_COMPONENT4_NV
value|0x8ED1
DECL|macro|GL_COVERAGE_ATTACHMENT_NV
define|#
directive|define
name|GL_COVERAGE_ATTACHMENT_NV
value|0x8ED2
DECL|macro|GL_COVERAGE_BUFFERS_NV
define|#
directive|define
name|GL_COVERAGE_BUFFERS_NV
value|0x8ED3
DECL|macro|GL_COVERAGE_SAMPLES_NV
define|#
directive|define
name|GL_COVERAGE_SAMPLES_NV
value|0x8ED4
DECL|macro|GL_COVERAGE_ALL_FRAGMENTS_NV
define|#
directive|define
name|GL_COVERAGE_ALL_FRAGMENTS_NV
value|0x8ED5
DECL|macro|GL_COVERAGE_EDGE_FRAGMENTS_NV
define|#
directive|define
name|GL_COVERAGE_EDGE_FRAGMENTS_NV
value|0x8ED6
DECL|macro|GL_COVERAGE_AUTOMATIC_NV
define|#
directive|define
name|GL_COVERAGE_AUTOMATIC_NV
value|0x8ED7
DECL|macro|GL_COVERAGE_BUFFER_BIT_NV
define|#
directive|define
name|GL_COVERAGE_BUFFER_BIT_NV
value|0x8000
endif|#
directive|endif
comment|/* GL_NV_depth_nonlinear */
ifndef|#
directive|ifndef
name|GL_NV_depth_nonlinear
DECL|macro|GL_DEPTH_COMPONENT16_NONLINEAR_NV
define|#
directive|define
name|GL_DEPTH_COMPONENT16_NONLINEAR_NV
value|0x8E2C
endif|#
directive|endif
comment|/* GL_NV_draw_buffers */
ifndef|#
directive|ifndef
name|GL_NV_draw_buffers
DECL|macro|GL_MAX_DRAW_BUFFERS_NV
define|#
directive|define
name|GL_MAX_DRAW_BUFFERS_NV
value|0x8824
DECL|macro|GL_DRAW_BUFFER0_NV
define|#
directive|define
name|GL_DRAW_BUFFER0_NV
value|0x8825
DECL|macro|GL_DRAW_BUFFER1_NV
define|#
directive|define
name|GL_DRAW_BUFFER1_NV
value|0x8826
DECL|macro|GL_DRAW_BUFFER2_NV
define|#
directive|define
name|GL_DRAW_BUFFER2_NV
value|0x8827
DECL|macro|GL_DRAW_BUFFER3_NV
define|#
directive|define
name|GL_DRAW_BUFFER3_NV
value|0x8828
DECL|macro|GL_DRAW_BUFFER4_NV
define|#
directive|define
name|GL_DRAW_BUFFER4_NV
value|0x8829
DECL|macro|GL_DRAW_BUFFER5_NV
define|#
directive|define
name|GL_DRAW_BUFFER5_NV
value|0x882A
DECL|macro|GL_DRAW_BUFFER6_NV
define|#
directive|define
name|GL_DRAW_BUFFER6_NV
value|0x882B
DECL|macro|GL_DRAW_BUFFER7_NV
define|#
directive|define
name|GL_DRAW_BUFFER7_NV
value|0x882C
DECL|macro|GL_DRAW_BUFFER8_NV
define|#
directive|define
name|GL_DRAW_BUFFER8_NV
value|0x882D
DECL|macro|GL_DRAW_BUFFER9_NV
define|#
directive|define
name|GL_DRAW_BUFFER9_NV
value|0x882E
DECL|macro|GL_DRAW_BUFFER10_NV
define|#
directive|define
name|GL_DRAW_BUFFER10_NV
value|0x882F
DECL|macro|GL_DRAW_BUFFER11_NV
define|#
directive|define
name|GL_DRAW_BUFFER11_NV
value|0x8830
DECL|macro|GL_DRAW_BUFFER12_NV
define|#
directive|define
name|GL_DRAW_BUFFER12_NV
value|0x8831
DECL|macro|GL_DRAW_BUFFER13_NV
define|#
directive|define
name|GL_DRAW_BUFFER13_NV
value|0x8832
DECL|macro|GL_DRAW_BUFFER14_NV
define|#
directive|define
name|GL_DRAW_BUFFER14_NV
value|0x8833
DECL|macro|GL_DRAW_BUFFER15_NV
define|#
directive|define
name|GL_DRAW_BUFFER15_NV
value|0x8834
DECL|macro|GL_COLOR_ATTACHMENT0_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT0_NV
value|0x8CE0
DECL|macro|GL_COLOR_ATTACHMENT1_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT1_NV
value|0x8CE1
DECL|macro|GL_COLOR_ATTACHMENT2_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT2_NV
value|0x8CE2
DECL|macro|GL_COLOR_ATTACHMENT3_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT3_NV
value|0x8CE3
DECL|macro|GL_COLOR_ATTACHMENT4_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT4_NV
value|0x8CE4
DECL|macro|GL_COLOR_ATTACHMENT5_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT5_NV
value|0x8CE5
DECL|macro|GL_COLOR_ATTACHMENT6_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT6_NV
value|0x8CE6
DECL|macro|GL_COLOR_ATTACHMENT7_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT7_NV
value|0x8CE7
DECL|macro|GL_COLOR_ATTACHMENT8_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT8_NV
value|0x8CE8
DECL|macro|GL_COLOR_ATTACHMENT9_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT9_NV
value|0x8CE9
DECL|macro|GL_COLOR_ATTACHMENT10_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT10_NV
value|0x8CEA
DECL|macro|GL_COLOR_ATTACHMENT11_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT11_NV
value|0x8CEB
DECL|macro|GL_COLOR_ATTACHMENT12_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT12_NV
value|0x8CEC
DECL|macro|GL_COLOR_ATTACHMENT13_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT13_NV
value|0x8CED
DECL|macro|GL_COLOR_ATTACHMENT14_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT14_NV
value|0x8CEE
DECL|macro|GL_COLOR_ATTACHMENT15_NV
define|#
directive|define
name|GL_COLOR_ATTACHMENT15_NV
value|0x8CEF
endif|#
directive|endif
comment|/* GL_NV_fbo_color_attachments */
ifndef|#
directive|ifndef
name|GL_NV_fbo_color_attachments
DECL|macro|GL_MAX_COLOR_ATTACHMENTS_NV
define|#
directive|define
name|GL_MAX_COLOR_ATTACHMENTS_NV
value|0x8CDF
comment|/* GL_COLOR_ATTACHMENT{0-15}_NV defined in GL_NV_draw_buffers already. */
endif|#
directive|endif
comment|/* GL_NV_fence */
ifndef|#
directive|ifndef
name|GL_NV_fence
DECL|macro|GL_ALL_COMPLETED_NV
define|#
directive|define
name|GL_ALL_COMPLETED_NV
value|0x84F2
DECL|macro|GL_FENCE_STATUS_NV
define|#
directive|define
name|GL_FENCE_STATUS_NV
value|0x84F3
DECL|macro|GL_FENCE_CONDITION_NV
define|#
directive|define
name|GL_FENCE_CONDITION_NV
value|0x84F4
endif|#
directive|endif
comment|/* GL_NV_read_buffer */
ifndef|#
directive|ifndef
name|GL_NV_read_buffer
DECL|macro|GL_READ_BUFFER_NV
define|#
directive|define
name|GL_READ_BUFFER_NV
value|0x0C02
endif|#
directive|endif
comment|/* GL_NV_read_buffer_front */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_NV_read_depth */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_NV_read_depth_stencil */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_NV_read_stencil */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_NV_texture_compression_s3tc_update */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_NV_texture_npot_2D_mipmap */
comment|/* No new tokens introduced by this extension. */
comment|/*------------------------------------------------------------------------*  * QCOM extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_QCOM_alpha_test */
ifndef|#
directive|ifndef
name|GL_QCOM_alpha_test
DECL|macro|GL_ALPHA_TEST_QCOM
define|#
directive|define
name|GL_ALPHA_TEST_QCOM
value|0x0BC0
DECL|macro|GL_ALPHA_TEST_FUNC_QCOM
define|#
directive|define
name|GL_ALPHA_TEST_FUNC_QCOM
value|0x0BC1
DECL|macro|GL_ALPHA_TEST_REF_QCOM
define|#
directive|define
name|GL_ALPHA_TEST_REF_QCOM
value|0x0BC2
endif|#
directive|endif
comment|/* GL_QCOM_driver_control */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_QCOM_extended_get */
ifndef|#
directive|ifndef
name|GL_QCOM_extended_get
DECL|macro|GL_TEXTURE_WIDTH_QCOM
define|#
directive|define
name|GL_TEXTURE_WIDTH_QCOM
value|0x8BD2
DECL|macro|GL_TEXTURE_HEIGHT_QCOM
define|#
directive|define
name|GL_TEXTURE_HEIGHT_QCOM
value|0x8BD3
DECL|macro|GL_TEXTURE_DEPTH_QCOM
define|#
directive|define
name|GL_TEXTURE_DEPTH_QCOM
value|0x8BD4
DECL|macro|GL_TEXTURE_INTERNAL_FORMAT_QCOM
define|#
directive|define
name|GL_TEXTURE_INTERNAL_FORMAT_QCOM
value|0x8BD5
DECL|macro|GL_TEXTURE_FORMAT_QCOM
define|#
directive|define
name|GL_TEXTURE_FORMAT_QCOM
value|0x8BD6
DECL|macro|GL_TEXTURE_TYPE_QCOM
define|#
directive|define
name|GL_TEXTURE_TYPE_QCOM
value|0x8BD7
DECL|macro|GL_TEXTURE_IMAGE_VALID_QCOM
define|#
directive|define
name|GL_TEXTURE_IMAGE_VALID_QCOM
value|0x8BD8
DECL|macro|GL_TEXTURE_NUM_LEVELS_QCOM
define|#
directive|define
name|GL_TEXTURE_NUM_LEVELS_QCOM
value|0x8BD9
DECL|macro|GL_TEXTURE_TARGET_QCOM
define|#
directive|define
name|GL_TEXTURE_TARGET_QCOM
value|0x8BDA
DECL|macro|GL_TEXTURE_OBJECT_VALID_QCOM
define|#
directive|define
name|GL_TEXTURE_OBJECT_VALID_QCOM
value|0x8BDB
DECL|macro|GL_STATE_RESTORE
define|#
directive|define
name|GL_STATE_RESTORE
value|0x8BDC
endif|#
directive|endif
comment|/* GL_QCOM_extended_get2 */
comment|/* No new tokens introduced by this extension. */
comment|/* GL_QCOM_perfmon_global_mode */
ifndef|#
directive|ifndef
name|GL_QCOM_perfmon_global_mode
DECL|macro|GL_PERFMON_GLOBAL_MODE_QCOM
define|#
directive|define
name|GL_PERFMON_GLOBAL_MODE_QCOM
value|0x8FA0
endif|#
directive|endif
comment|/* GL_QCOM_writeonly_rendering */
ifndef|#
directive|ifndef
name|GL_QCOM_writeonly_rendering
DECL|macro|GL_WRITEONLY_RENDERING_QCOM
define|#
directive|define
name|GL_WRITEONLY_RENDERING_QCOM
value|0x8823
endif|#
directive|endif
comment|/* GL_QCOM_tiled_rendering */
ifndef|#
directive|ifndef
name|GL_QCOM_tiled_rendering
DECL|macro|GL_COLOR_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT0_QCOM
value|0x00000001
DECL|macro|GL_COLOR_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT1_QCOM
value|0x00000002
DECL|macro|GL_COLOR_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT2_QCOM
value|0x00000004
DECL|macro|GL_COLOR_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT3_QCOM
value|0x00000008
DECL|macro|GL_COLOR_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT4_QCOM
value|0x00000010
DECL|macro|GL_COLOR_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT5_QCOM
value|0x00000020
DECL|macro|GL_COLOR_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT6_QCOM
value|0x00000040
DECL|macro|GL_COLOR_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_COLOR_BUFFER_BIT7_QCOM
value|0x00000080
DECL|macro|GL_DEPTH_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT0_QCOM
value|0x00000100
DECL|macro|GL_DEPTH_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT1_QCOM
value|0x00000200
DECL|macro|GL_DEPTH_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT2_QCOM
value|0x00000400
DECL|macro|GL_DEPTH_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT3_QCOM
value|0x00000800
DECL|macro|GL_DEPTH_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT4_QCOM
value|0x00001000
DECL|macro|GL_DEPTH_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT5_QCOM
value|0x00002000
DECL|macro|GL_DEPTH_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT6_QCOM
value|0x00004000
DECL|macro|GL_DEPTH_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_DEPTH_BUFFER_BIT7_QCOM
value|0x00008000
DECL|macro|GL_STENCIL_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT0_QCOM
value|0x00010000
DECL|macro|GL_STENCIL_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT1_QCOM
value|0x00020000
DECL|macro|GL_STENCIL_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT2_QCOM
value|0x00040000
DECL|macro|GL_STENCIL_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT3_QCOM
value|0x00080000
DECL|macro|GL_STENCIL_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT4_QCOM
value|0x00100000
DECL|macro|GL_STENCIL_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT5_QCOM
value|0x00200000
DECL|macro|GL_STENCIL_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT6_QCOM
value|0x00400000
DECL|macro|GL_STENCIL_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_STENCIL_BUFFER_BIT7_QCOM
value|0x00800000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT0_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT0_QCOM
value|0x01000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT1_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT1_QCOM
value|0x02000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT2_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT2_QCOM
value|0x04000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT3_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT3_QCOM
value|0x08000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT4_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT4_QCOM
value|0x10000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT5_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT5_QCOM
value|0x20000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT6_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT6_QCOM
value|0x40000000
DECL|macro|GL_MULTISAMPLE_BUFFER_BIT7_QCOM
define|#
directive|define
name|GL_MULTISAMPLE_BUFFER_BIT7_QCOM
value|0x80000000
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * VIV extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_VIV_shader_binary */
ifndef|#
directive|ifndef
name|GL_VIV_shader_binary
DECL|macro|GL_SHADER_BINARY_VIV
define|#
directive|define
name|GL_SHADER_BINARY_VIV
value|0x8FC4
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * End of extension tokens, start of corresponding extension functions  *------------------------------------------------------------------------*/
comment|/*------------------------------------------------------------------------*  * OES extension functions  *------------------------------------------------------------------------*/
comment|/* GL_OES_compressed_ETC1_RGB8_texture */
ifndef|#
directive|ifndef
name|GL_OES_compressed_ETC1_RGB8_texture
DECL|macro|GL_OES_compressed_ETC1_RGB8_texture
define|#
directive|define
name|GL_OES_compressed_ETC1_RGB8_texture
value|1
endif|#
directive|endif
comment|/* GL_OES_compressed_paletted_texture */
ifndef|#
directive|ifndef
name|GL_OES_compressed_paletted_texture
DECL|macro|GL_OES_compressed_paletted_texture
define|#
directive|define
name|GL_OES_compressed_paletted_texture
value|1
endif|#
directive|endif
comment|/* GL_OES_depth24 */
ifndef|#
directive|ifndef
name|GL_OES_depth24
DECL|macro|GL_OES_depth24
define|#
directive|define
name|GL_OES_depth24
value|1
endif|#
directive|endif
comment|/* GL_OES_depth32 */
ifndef|#
directive|ifndef
name|GL_OES_depth32
DECL|macro|GL_OES_depth32
define|#
directive|define
name|GL_OES_depth32
value|1
endif|#
directive|endif
comment|/* GL_OES_depth_texture */
ifndef|#
directive|ifndef
name|GL_OES_depth_texture
DECL|macro|GL_OES_depth_texture
define|#
directive|define
name|GL_OES_depth_texture
value|1
endif|#
directive|endif
comment|/* GL_OES_EGL_image */
ifndef|#
directive|ifndef
name|GL_OES_EGL_image
DECL|macro|GL_OES_EGL_image
define|#
directive|define
name|GL_OES_EGL_image
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEGLImageTargetTexture2DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEGLImageTargetRenderbufferStorageOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLeglImageOES
name|image
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_OES_EGL_image_external */
ifndef|#
directive|ifndef
name|GL_OES_EGL_image_external
DECL|macro|GL_OES_EGL_image_external
define|#
directive|define
name|GL_OES_EGL_image_external
value|1
comment|/* glEGLImageTargetTexture2DOES defined in GL_OES_EGL_image already. */
endif|#
directive|endif
comment|/* GL_OES_element_index_uint */
ifndef|#
directive|ifndef
name|GL_OES_element_index_uint
DECL|macro|GL_OES_element_index_uint
define|#
directive|define
name|GL_OES_element_index_uint
value|1
endif|#
directive|endif
comment|/* GL_OES_fbo_render_mipmap */
ifndef|#
directive|ifndef
name|GL_OES_fbo_render_mipmap
DECL|macro|GL_OES_fbo_render_mipmap
define|#
directive|define
name|GL_OES_fbo_render_mipmap
value|1
endif|#
directive|endif
comment|/* GL_OES_fragment_precision_high */
ifndef|#
directive|ifndef
name|GL_OES_fragment_precision_high
DECL|macro|GL_OES_fragment_precision_high
define|#
directive|define
name|GL_OES_fragment_precision_high
value|1
endif|#
directive|endif
comment|/* GL_OES_get_program_binary */
ifndef|#
directive|ifndef
name|GL_OES_get_program_binary
DECL|macro|GL_OES_get_program_binary
define|#
directive|define
name|GL_OES_get_program_binary
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramBinaryOES
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLenum
modifier|*
name|binaryFormat
parameter_list|,
name|GLvoid
modifier|*
name|binary
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramBinaryOES
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLGETPROGRAMBINARYOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMBINARYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLenum
modifier|*
name|binaryFormat
parameter_list|,
name|GLvoid
modifier|*
name|binary
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMBINARYOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMBINARYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_OES_mapbuffer */
ifndef|#
directive|ifndef
name|GL_OES_mapbuffer
DECL|macro|GL_OES_mapbuffer
define|#
directive|define
name|GL_OES_mapbuffer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
modifier|*
name|GL_APIENTRY
name|glMapBufferOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glUnmapBufferOES
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetBufferPointervOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLMAPBUFFEROESPROC
typedef|typedef
name|void
modifier|*
function_decl|(
name|GL_APIENTRYP
name|PFNGLMAPBUFFEROESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNMAPBUFFEROESPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLUNMAPBUFFEROESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPOINTERVOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETBUFFERPOINTERVOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_OES_packed_depth_stencil */
ifndef|#
directive|ifndef
name|GL_OES_packed_depth_stencil
DECL|macro|GL_OES_packed_depth_stencil
define|#
directive|define
name|GL_OES_packed_depth_stencil
value|1
endif|#
directive|endif
comment|/* GL_OES_required_internalformat */
ifndef|#
directive|ifndef
name|GL_OES_required_internalformat
DECL|macro|GL_OES_required_internalformat
define|#
directive|define
name|GL_OES_required_internalformat
value|1
endif|#
directive|endif
comment|/* GL_OES_rgb8_rgba8 */
ifndef|#
directive|ifndef
name|GL_OES_rgb8_rgba8
DECL|macro|GL_OES_rgb8_rgba8
define|#
directive|define
name|GL_OES_rgb8_rgba8
value|1
endif|#
directive|endif
comment|/* GL_OES_standard_derivatives */
ifndef|#
directive|ifndef
name|GL_OES_standard_derivatives
DECL|macro|GL_OES_standard_derivatives
define|#
directive|define
name|GL_OES_standard_derivatives
value|1
endif|#
directive|endif
comment|/* GL_OES_stencil1 */
ifndef|#
directive|ifndef
name|GL_OES_stencil1
DECL|macro|GL_OES_stencil1
define|#
directive|define
name|GL_OES_stencil1
value|1
endif|#
directive|endif
comment|/* GL_OES_stencil4 */
ifndef|#
directive|ifndef
name|GL_OES_stencil4
DECL|macro|GL_OES_stencil4
define|#
directive|define
name|GL_OES_stencil4
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_3D */
ifndef|#
directive|ifndef
name|GL_OES_texture_3D
DECL|macro|GL_OES_texture_3D
define|#
directive|define
name|GL_OES_texture_3D
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexSubImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCopyTexSubImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCompressedTexImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCompressedTexSubImage3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTexture3DOES
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLTEXIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSUBIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSUBIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXSUBIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOPYTEXSUBIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE3DOES
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE3DOES
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_OES_texture_float */
ifndef|#
directive|ifndef
name|GL_OES_texture_float
DECL|macro|GL_OES_texture_float
define|#
directive|define
name|GL_OES_texture_float
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_float_linear */
ifndef|#
directive|ifndef
name|GL_OES_texture_float_linear
DECL|macro|GL_OES_texture_float_linear
define|#
directive|define
name|GL_OES_texture_float_linear
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_half_float */
ifndef|#
directive|ifndef
name|GL_OES_texture_half_float
DECL|macro|GL_OES_texture_half_float
define|#
directive|define
name|GL_OES_texture_half_float
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_half_float_linear */
ifndef|#
directive|ifndef
name|GL_OES_texture_half_float_linear
DECL|macro|GL_OES_texture_half_float_linear
define|#
directive|define
name|GL_OES_texture_half_float_linear
value|1
endif|#
directive|endif
comment|/* GL_OES_texture_npot */
ifndef|#
directive|ifndef
name|GL_OES_texture_npot
DECL|macro|GL_OES_texture_npot
define|#
directive|define
name|GL_OES_texture_npot
value|1
endif|#
directive|endif
comment|/* GL_OES_vertex_array_object */
ifndef|#
directive|ifndef
name|GL_OES_vertex_array_object
DECL|macro|GL_OES_vertex_array_object
define|#
directive|define
name|GL_OES_vertex_array_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindVertexArrayOES
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteVertexArraysOES
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenVertexArraysOES
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsVertexArrayOES
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLBINDVERTEXARRAYOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDVERTEXARRAYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEVERTEXARRAYSOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEVERTEXARRAYSOESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENVERTEXARRAYSOESPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENVERTEXARRAYSOESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISVERTEXARRAYOESPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISVERTEXARRAYOESPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_OES_vertex_half_float */
ifndef|#
directive|ifndef
name|GL_OES_vertex_half_float
DECL|macro|GL_OES_vertex_half_float
define|#
directive|define
name|GL_OES_vertex_half_float
value|1
endif|#
directive|endif
comment|/* GL_OES_vertex_type_10_10_10_2 */
ifndef|#
directive|ifndef
name|GL_OES_vertex_type_10_10_10_2
DECL|macro|GL_OES_vertex_type_10_10_10_2
define|#
directive|define
name|GL_OES_vertex_type_10_10_10_2
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * AMD extension functions  *------------------------------------------------------------------------*/
comment|/* GL_AMD_compressed_3DC_texture */
ifndef|#
directive|ifndef
name|GL_AMD_compressed_3DC_texture
DECL|macro|GL_AMD_compressed_3DC_texture
define|#
directive|define
name|GL_AMD_compressed_3DC_texture
value|1
endif|#
directive|endif
comment|/* GL_AMD_compressed_ATC_texture */
ifndef|#
directive|ifndef
name|GL_AMD_compressed_ATC_texture
DECL|macro|GL_AMD_compressed_ATC_texture
define|#
directive|define
name|GL_AMD_compressed_ATC_texture
value|1
endif|#
directive|endif
comment|/* AMD_performance_monitor */
ifndef|#
directive|ifndef
name|GL_AMD_performance_monitor
DECL|macro|GL_AMD_performance_monitor
define|#
directive|define
name|GL_AMD_performance_monitor
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorGroupsAMD
parameter_list|(
name|GLint
modifier|*
name|numGroups
parameter_list|,
name|GLsizei
name|groupsSize
parameter_list|,
name|GLuint
modifier|*
name|groups
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCountersAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLint
modifier|*
name|numCounters
parameter_list|,
name|GLint
modifier|*
name|maxActiveCounters
parameter_list|,
name|GLsizei
name|counterSize
parameter_list|,
name|GLuint
modifier|*
name|counters
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorGroupStringAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|groupString
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCounterStringAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|counterString
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCounterInfoAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenPerfMonitorsAMD
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeletePerfMonitorsAMD
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glSelectPerfMonitorCountersAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLboolean
name|enable
parameter_list|,
name|GLuint
name|group
parameter_list|,
name|GLint
name|numCounters
parameter_list|,
name|GLuint
modifier|*
name|countersList
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBeginPerfMonitorAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEndPerfMonitorAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetPerfMonitorCounterDataAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|data
parameter_list|,
name|GLint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLGETPERFMONITORGROUPSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORGROUPSAMDPROC
function_decl|)
parameter_list|(
name|GLint
modifier|*
name|numGroups
parameter_list|,
name|GLsizei
name|groupsSize
parameter_list|,
name|GLuint
modifier|*
name|groups
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERSAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLint
modifier|*
name|numCounters
parameter_list|,
name|GLint
modifier|*
name|maxActiveCounters
parameter_list|,
name|GLsizei
name|counterSize
parameter_list|,
name|GLuint
modifier|*
name|counters
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|groupString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|counterString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPERFMONITORSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENPERFMONITORSAMDPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPERFMONITORSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEPERFMONITORSAMDPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLboolean
name|enable
parameter_list|,
name|GLuint
name|group
parameter_list|,
name|GLint
name|numCounters
parameter_list|,
name|GLuint
modifier|*
name|countersList
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINPERFMONITORAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBEGINPERFMONITORAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDPERFMONITORAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENDPERFMONITORAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|data
parameter_list|,
name|GLint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_AMD_program_binary_Z400 */
ifndef|#
directive|ifndef
name|GL_AMD_program_binary_Z400
DECL|macro|GL_AMD_program_binary_Z400
define|#
directive|define
name|GL_AMD_program_binary_Z400
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * ANGLE extension functions  *------------------------------------------------------------------------*/
comment|/* GL_ANGLE_framebuffer_blit */
ifndef|#
directive|ifndef
name|GL_ANGLE_framebuffer_blit
DECL|macro|GL_ANGLE_framebuffer_blit
define|#
directive|define
name|GL_ANGLE_framebuffer_blit
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBlitFramebufferANGLE
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLBLITFRAMEBUFFERANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBLITFRAMEBUFFERANGLEPROC
function_decl|)
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_ANGLE_framebuffer_multisample */
ifndef|#
directive|ifndef
name|GL_ANGLE_framebuffer_multisample
DECL|macro|GL_ANGLE_framebuffer_multisample
define|#
directive|define
name|GL_ANGLE_framebuffer_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleANGLE
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ANGLE_instanced_arrays
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawArraysInstancedANGLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawElementsInstancedANGLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glVertexAttribDivisorANGLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFLGLDRAWARRAYSINSTANCEDANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFLGLDRAWARRAYSINSTANCEDANGLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFLGLDRAWELEMENTSINSTANCEDANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFLGLDRAWELEMENTSINSTANCEDANGLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFLGLVERTEXATTRIBDIVISORANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFLGLVERTEXATTRIBDIVISORANGLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_ANGLE_pack_reverse_row_order */
ifndef|#
directive|ifndef
name|GL_ANGLE_pack_reverse_row_order
DECL|macro|GL_ANGLE_pack_reverse_row_order
define|#
directive|define
name|GL_ANGLE_pack_reverse_row_order
value|1
endif|#
directive|endif
comment|/* GL_ANGLE_texture_compression_dxt3 */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_compression_dxt3
DECL|macro|GL_ANGLE_texture_compression_dxt3
define|#
directive|define
name|GL_ANGLE_texture_compression_dxt3
value|1
endif|#
directive|endif
comment|/* GL_ANGLE_texture_compression_dxt5 */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_compression_dxt5
DECL|macro|GL_ANGLE_texture_compression_dxt5
define|#
directive|define
name|GL_ANGLE_texture_compression_dxt5
value|1
endif|#
directive|endif
comment|/* GL_ANGLE_texture_usage */
ifndef|#
directive|ifndef
name|GL_ANGLE_texture_usage
DECL|macro|GL_ANGLE_texture_usage
define|#
directive|define
name|GL_ANGLE_texture_usage
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ANGLE_translated_shader_source
DECL|macro|GL_ANGLE_translated_shader_source
define|#
directive|define
name|GL_ANGLE_translated_shader_source
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetTranslatedShaderSourceANGLE
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFLGLGETTRANSLATEDSHADERSOURCEANGLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFLGLGETTRANSLATEDSHADERSOURCEANGLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * APPLE extension functions  *------------------------------------------------------------------------*/
comment|/* GL_APPLE_rgb_422 */
ifndef|#
directive|ifndef
name|GL_APPLE_rgb_422
DECL|macro|GL_APPLE_rgb_422
define|#
directive|define
name|GL_APPLE_rgb_422
value|1
endif|#
directive|endif
comment|/* GL_APPLE_framebuffer_multisample */
ifndef|#
directive|ifndef
name|GL_APPLE_framebuffer_multisample
DECL|macro|GL_APPLE_framebuffer_multisample
define|#
directive|define
name|GL_APPLE_framebuffer_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleAPPLE
parameter_list|(
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glResolveMultisampleFramebufferAPPLE
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_APPLE_texture_format_BGRA8888 */
ifndef|#
directive|ifndef
name|GL_APPLE_texture_format_BGRA8888
DECL|macro|GL_APPLE_texture_format_BGRA8888
define|#
directive|define
name|GL_APPLE_texture_format_BGRA8888
value|1
endif|#
directive|endif
comment|/* GL_APPLE_texture_max_level */
ifndef|#
directive|ifndef
name|GL_APPLE_texture_max_level
DECL|macro|GL_APPLE_texture_max_level
define|#
directive|define
name|GL_APPLE_texture_max_level
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * ARM extension functions  *------------------------------------------------------------------------*/
comment|/* GL_ARM_mali_shader_binary */
ifndef|#
directive|ifndef
name|GL_ARM_mali_shader_binary
DECL|macro|GL_ARM_mali_shader_binary
define|#
directive|define
name|GL_ARM_mali_shader_binary
value|1
endif|#
directive|endif
comment|/* GL_ARM_rgba8 */
ifndef|#
directive|ifndef
name|GL_ARM_rgba8
DECL|macro|GL_ARM_rgba8
define|#
directive|define
name|GL_ARM_rgba8
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * EXT extension functions  *------------------------------------------------------------------------*/
comment|/* GL_EXT_blend_minmax */
ifndef|#
directive|ifndef
name|GL_EXT_blend_minmax
DECL|macro|GL_EXT_blend_minmax
define|#
directive|define
name|GL_EXT_blend_minmax
value|1
endif|#
directive|endif
comment|/* GL_EXT_color_buffer_half_float */
ifndef|#
directive|ifndef
name|GL_EXT_color_buffer_half_float
DECL|macro|GL_EXT_color_buffer_half_float
define|#
directive|define
name|GL_EXT_color_buffer_half_float
value|1
endif|#
directive|endif
comment|/* GL_EXT_debug_label */
ifndef|#
directive|ifndef
name|GL_EXT_debug_label
DECL|macro|GL_EXT_debug_label
define|#
directive|define
name|GL_EXT_debug_label
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glLabelObjectEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetObjectLabelEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLLABELOBJECTEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLLABELOBJECTEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTLABELEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETOBJECTLABELEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|object
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|label
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_debug_marker */
ifndef|#
directive|ifndef
name|GL_EXT_debug_marker
DECL|macro|GL_EXT_debug_marker
define|#
directive|define
name|GL_EXT_debug_marker
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glInsertEventMarkerEXT
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPushGroupMarkerEXT
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glPopGroupMarkerEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLINSERTEVENTMARKEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLINSERTEVENTMARKEREXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPUSHGROUPMARKEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPUSHGROUPMARKEREXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|marker
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOPGROUPMARKEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPOPGROUPMARKEREXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_discard_framebuffer */
ifndef|#
directive|ifndef
name|GL_EXT_discard_framebuffer
DECL|macro|GL_EXT_discard_framebuffer
define|#
directive|define
name|GL_EXT_discard_framebuffer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDiscardFramebufferEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numAttachments
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|attachments
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLDISCARDFRAMEBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDISCARDFRAMEBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numAttachments
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|attachments
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_multisampled_render_to_texture */
ifndef|#
directive|ifndef
name|GL_EXT_multisampled_render_to_texture
DECL|macro|GL_EXT_multisampled_render_to_texture
define|#
directive|define
name|GL_EXT_multisampled_render_to_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleEXT
parameter_list|(
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTexture2DMultisampleEXT
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLuint
parameter_list|,
name|GLint
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLsizei
name|samples
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_multi_draw_arrays
DECL|macro|GL_EXT_multi_draw_arrays
define|#
directive|define
name|GL_EXT_multi_draw_arrays
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glMultiDrawArraysEXT
parameter_list|(
name|GLenum
parameter_list|,
name|GLint
modifier|*
parameter_list|,
name|GLsizei
modifier|*
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glMultiDrawElementsEXT
parameter_list|(
name|GLenum
parameter_list|,
specifier|const
name|GLsizei
modifier|*
parameter_list|,
name|GLenum
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMULTIDRAWARRAYSEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLMULTIDRAWARRAYSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
modifier|*
name|first
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWELEMENTSEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLMULTIDRAWELEMENTSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_occlusion_query_boolean */
ifndef|#
directive|ifndef
name|GL_EXT_occlusion_query_boolean
DECL|macro|GL_EXT_occlusion_query_boolean
define|#
directive|define
name|GL_EXT_occlusion_query_boolean
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenQueriesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteQueriesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsQueryEXT
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBeginQueryEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEndQueryEXT
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetQueryivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetQueryObjectuivEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLGENQUERIESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENQUERIESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEQUERIESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEQUERIESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISQUERYEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISQUERYEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINQUERYEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBEGINQUERYEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDQUERYEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENDQUERYEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETQUERYIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETQUERYOBJECTUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_read_format_bgra */
ifndef|#
directive|ifndef
name|GL_EXT_read_format_bgra
DECL|macro|GL_EXT_read_format_bgra
define|#
directive|define
name|GL_EXT_read_format_bgra
value|1
endif|#
directive|endif
comment|/* GL_EXT_robustness */
ifndef|#
directive|ifndef
name|GL_EXT_robustness
DECL|macro|GL_EXT_robustness
define|#
directive|define
name|GL_EXT_robustness
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|GLenum
name|GL_APIENTRY
name|glGetGraphicsResetStatusEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReadnPixelsEXT
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetnUniformfvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|float
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetnUniformivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLGETGRAPHICSRESETSTATUSEXTPROC
typedef|typedef
name|GLenum
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETGRAPHICSRESETSTATUSEXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREADNPIXELSEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLREADNPIXELSEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNUNIFORMFVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|float
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETNUNIFORMIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_separate_shader_objects */
ifndef|#
directive|ifndef
name|GL_EXT_separate_shader_objects
DECL|macro|GL_EXT_separate_shader_objects
define|#
directive|define
name|GL_EXT_separate_shader_objects
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glUseProgramStagesEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLbitfield
name|stages
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glActiveShaderProgramEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLuint
name|GL_APIENTRY
name|glCreateShaderProgramvEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|strings
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glBindProgramPipelineEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteProgramPipelinesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenProgramPipelinesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsProgramPipelineEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramParameteriEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramPipelineivEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform1fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniform4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glProgramUniformMatrix4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glValidateProgramPipelineEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetProgramPipelineInfoLogEXT
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLUSEPROGRAMSTAGESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLUSEPROGRAMSTAGESEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLbitfield
name|stages
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLACTIVESHADERPROGRAMEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLACTIVESHADERPROGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATESHADERPROGRAMVEXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|GL_APIENTRYP
name|PFNGLCREATESHADERPROGRAMVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|strings
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDPROGRAMPIPELINEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLBINDPROGRAMPIPELINEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPROGRAMPIPELINESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEPROGRAMPIPELINESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPROGRAMPIPELINESEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENPROGRAMPIPELINESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPROGRAMPIPELINEEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISPROGRAMPIPELINEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPIPELINEIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMPIPELINEIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM1FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORM4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVALIDATEPROGRAMPIPELINEEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLVALIDATEPROGRAMPIPELINEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_shader_texture_lod */
ifndef|#
directive|ifndef
name|GL_EXT_shader_texture_lod
DECL|macro|GL_EXT_shader_texture_lod
define|#
directive|define
name|GL_EXT_shader_texture_lod
value|1
endif|#
directive|endif
comment|/* GL_EXT_shadow_samplers */
ifndef|#
directive|ifndef
name|GL_EXT_shadow_samplers
DECL|macro|GL_EXT_shadow_samplers
define|#
directive|define
name|GL_EXT_shadow_samplers
value|1
endif|#
directive|endif
comment|/* GL_EXT_sRGB */
ifndef|#
directive|ifndef
name|GL_EXT_sRGB
DECL|macro|GL_EXT_sRGB
define|#
directive|define
name|GL_EXT_sRGB
value|1
endif|#
directive|endif
comment|/* GL_EXT_texture_compression_dxt1 */
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_dxt1
DECL|macro|GL_EXT_texture_compression_dxt1
define|#
directive|define
name|GL_EXT_texture_compression_dxt1
value|1
endif|#
directive|endif
comment|/* GL_EXT_texture_filter_anisotropic */
ifndef|#
directive|ifndef
name|GL_EXT_texture_filter_anisotropic
DECL|macro|GL_EXT_texture_filter_anisotropic
define|#
directive|define
name|GL_EXT_texture_filter_anisotropic
value|1
endif|#
directive|endif
comment|/* GL_EXT_texture_format_BGRA8888 */
ifndef|#
directive|ifndef
name|GL_EXT_texture_format_BGRA8888
DECL|macro|GL_EXT_texture_format_BGRA8888
define|#
directive|define
name|GL_EXT_texture_format_BGRA8888
value|1
endif|#
directive|endif
comment|/* GL_EXT_texture_rg */
ifndef|#
directive|ifndef
name|GL_EXT_texture_rg
DECL|macro|GL_EXT_texture_rg
define|#
directive|define
name|GL_EXT_texture_rg
value|1
endif|#
directive|endif
comment|/* GL_EXT_texture_storage */
ifndef|#
directive|ifndef
name|GL_EXT_texture_storage
DECL|macro|GL_EXT_texture_storage
define|#
directive|define
name|GL_EXT_texture_storage
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexStorage1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexStorage2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTexStorage3DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTextureStorage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTextureStorage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glTextureStorage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLTEXSTORAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSTORAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSTORAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSTORAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSTORAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXSTORAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXTURESTORAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXTURESTORAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLTEXTURESTORAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_EXT_texture_type_2_10_10_10_REV */
ifndef|#
directive|ifndef
name|GL_EXT_texture_type_2_10_10_10_REV
DECL|macro|GL_EXT_texture_type_2_10_10_10_REV
define|#
directive|define
name|GL_EXT_texture_type_2_10_10_10_REV
value|1
endif|#
directive|endif
comment|/* GL_EXT_unpack_subimage */
ifndef|#
directive|ifndef
name|GL_EXT_unpack_subimage
DECL|macro|GL_EXT_unpack_subimage
define|#
directive|define
name|GL_EXT_unpack_subimage
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * DMP extension functions  *------------------------------------------------------------------------*/
comment|/* GL_DMP_shader_binary */
ifndef|#
directive|ifndef
name|GL_DMP_shader_binary
DECL|macro|GL_DMP_shader_binary
define|#
directive|define
name|GL_DMP_shader_binary
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * FJ extension functions  *------------------------------------------------------------------------*/
comment|/* GL_FJ_shader_binary_GCCSO */
ifndef|#
directive|ifndef
name|GL_FJ_shader_binary_GCCSO
DECL|macro|GL_FJ_shader_binary_GCCSO
define|#
directive|define
name|GL_FJ_shader_binary_GCCSO
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * IMG extension functions  *------------------------------------------------------------------------*/
comment|/* GL_IMG_program_binary */
ifndef|#
directive|ifndef
name|GL_IMG_program_binary
DECL|macro|GL_IMG_program_binary
define|#
directive|define
name|GL_IMG_program_binary
value|1
endif|#
directive|endif
comment|/* GL_IMG_read_format */
ifndef|#
directive|ifndef
name|GL_IMG_read_format
DECL|macro|GL_IMG_read_format
define|#
directive|define
name|GL_IMG_read_format
value|1
endif|#
directive|endif
comment|/* GL_IMG_shader_binary */
ifndef|#
directive|ifndef
name|GL_IMG_shader_binary
DECL|macro|GL_IMG_shader_binary
define|#
directive|define
name|GL_IMG_shader_binary
value|1
endif|#
directive|endif
comment|/* GL_IMG_texture_compression_pvrtc */
ifndef|#
directive|ifndef
name|GL_IMG_texture_compression_pvrtc
DECL|macro|GL_IMG_texture_compression_pvrtc
define|#
directive|define
name|GL_IMG_texture_compression_pvrtc
value|1
endif|#
directive|endif
comment|/* GL_IMG_multisampled_render_to_texture */
ifndef|#
directive|ifndef
name|GL_IMG_multisampled_render_to_texture
DECL|macro|GL_IMG_multisampled_render_to_texture
define|#
directive|define
name|GL_IMG_multisampled_render_to_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glRenderbufferStorageMultisampleIMG
parameter_list|(
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLenum
parameter_list|,
name|GLsizei
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFramebufferTexture2DMultisampleIMG
parameter_list|(
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLenum
parameter_list|,
name|GLuint
parameter_list|,
name|GLint
parameter_list|,
name|GLsizei
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLsizei
name|samples
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * NV extension functions  *------------------------------------------------------------------------*/
comment|/* GL_NV_coverage_sample */
ifndef|#
directive|ifndef
name|GL_NV_coverage_sample
DECL|macro|GL_NV_coverage_sample
define|#
directive|define
name|GL_NV_coverage_sample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCoverageMaskNV
parameter_list|(
name|GLboolean
name|mask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glCoverageOperationNV
parameter_list|(
name|GLenum
name|operation
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLCOVERAGEMASKNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOVERAGEMASKNVPROC
function_decl|)
parameter_list|(
name|GLboolean
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOVERAGEOPERATIONNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLCOVERAGEOPERATIONNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|operation
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_NV_depth_nonlinear */
ifndef|#
directive|ifndef
name|GL_NV_depth_nonlinear
DECL|macro|GL_NV_depth_nonlinear
define|#
directive|define
name|GL_NV_depth_nonlinear
value|1
endif|#
directive|endif
comment|/* GL_NV_draw_buffers */
ifndef|#
directive|ifndef
name|GL_NV_draw_buffers
DECL|macro|GL_NV_draw_buffers
define|#
directive|define
name|GL_NV_draw_buffers
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDrawBuffersNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLDRAWBUFFERSNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDRAWBUFFERSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_NV_fbo_color_attachments */
ifndef|#
directive|ifndef
name|GL_NV_fbo_color_attachments
DECL|macro|GL_NV_fbo_color_attachments
define|#
directive|define
name|GL_NV_fbo_color_attachments
value|1
endif|#
directive|endif
comment|/* GL_NV_fence */
ifndef|#
directive|ifndef
name|GL_NV_fence
DECL|macro|GL_NV_fence
define|#
directive|define
name|GL_NV_fence
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDeleteFencesNV
parameter_list|(
name|GLsizei
parameter_list|,
specifier|const
name|GLuint
modifier|*
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGenFencesNV
parameter_list|(
name|GLsizei
parameter_list|,
name|GLuint
modifier|*
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glIsFenceNV
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glTestFenceNV
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetFenceivNV
parameter_list|(
name|GLuint
parameter_list|,
name|GLenum
parameter_list|,
name|GLint
modifier|*
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glFinishFenceNV
parameter_list|(
name|GLuint
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glSetFenceNV
parameter_list|(
name|GLuint
parameter_list|,
name|GLenum
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLDELETEFENCESNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDELETEFENCESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENFENCESNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGENFENCESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISFENCENVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLISFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTESTFENCENVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLTESTFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFENCEIVNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETFENCEIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINISHFENCENVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLFINISHFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSETFENCENVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSETFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|condition
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_NV_read_buffer */
ifndef|#
directive|ifndef
name|GL_NV_read_buffer
DECL|macro|GL_NV_read_buffer
define|#
directive|define
name|GL_NV_read_buffer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glReadBufferNV
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLREADBUFFERNVPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLREADBUFFERNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_NV_read_buffer_front */
ifndef|#
directive|ifndef
name|GL_NV_read_buffer_front
DECL|macro|GL_NV_read_buffer_front
define|#
directive|define
name|GL_NV_read_buffer_front
value|1
endif|#
directive|endif
comment|/* GL_NV_read_depth */
ifndef|#
directive|ifndef
name|GL_NV_read_depth
DECL|macro|GL_NV_read_depth
define|#
directive|define
name|GL_NV_read_depth
value|1
endif|#
directive|endif
comment|/* GL_NV_read_depth_stencil */
ifndef|#
directive|ifndef
name|GL_NV_read_depth_stencil
DECL|macro|GL_NV_read_depth_stencil
define|#
directive|define
name|GL_NV_read_depth_stencil
value|1
endif|#
directive|endif
comment|/* GL_NV_read_stencil */
ifndef|#
directive|ifndef
name|GL_NV_read_stencil
DECL|macro|GL_NV_read_stencil
define|#
directive|define
name|GL_NV_read_stencil
value|1
endif|#
directive|endif
comment|/* GL_NV_texture_compression_s3tc_update */
ifndef|#
directive|ifndef
name|GL_NV_texture_compression_s3tc_update
DECL|macro|GL_NV_texture_compression_s3tc_update
define|#
directive|define
name|GL_NV_texture_compression_s3tc_update
value|1
endif|#
directive|endif
comment|/* GL_NV_texture_npot_2D_mipmap */
ifndef|#
directive|ifndef
name|GL_NV_texture_npot_2D_mipmap
DECL|macro|GL_NV_texture_npot_2D_mipmap
define|#
directive|define
name|GL_NV_texture_npot_2D_mipmap
value|1
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * QCOM extension functions  *------------------------------------------------------------------------*/
comment|/* GL_QCOM_alpha_test */
ifndef|#
directive|ifndef
name|GL_QCOM_alpha_test
DECL|macro|GL_QCOM_alpha_test
define|#
directive|define
name|GL_QCOM_alpha_test
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glAlphaFuncQCOM
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLclampf
name|ref
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLALPHAFUNCQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLALPHAFUNCQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLclampf
name|ref
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_QCOM_driver_control */
ifndef|#
directive|ifndef
name|GL_QCOM_driver_control
DECL|macro|GL_QCOM_driver_control
define|#
directive|define
name|GL_QCOM_driver_control
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetDriverControlsQCOM
parameter_list|(
name|GLint
modifier|*
name|num
parameter_list|,
name|GLsizei
name|size
parameter_list|,
name|GLuint
modifier|*
name|driverControls
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glGetDriverControlStringQCOM
parameter_list|(
name|GLuint
name|driverControl
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|driverControlString
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEnableDriverControlQCOM
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glDisableDriverControlQCOM
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLGETDRIVERCONTROLSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETDRIVERCONTROLSQCOMPROC
function_decl|)
parameter_list|(
name|GLint
modifier|*
name|num
parameter_list|,
name|GLsizei
name|size
parameter_list|,
name|GLuint
modifier|*
name|driverControls
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|driverControl
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|driverControlString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEDRIVERCONTROLQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENABLEDRIVERCONTROLQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEDRIVERCONTROLQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLDISABLEDRIVERCONTROLQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|driverControl
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_QCOM_extended_get */
ifndef|#
directive|ifndef
name|GL_QCOM_extended_get
DECL|macro|GL_QCOM_extended_get
define|#
directive|define
name|GL_QCOM_extended_get
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetTexturesQCOM
parameter_list|(
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLint
name|maxTextures
parameter_list|,
name|GLint
modifier|*
name|numTextures
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetBuffersQCOM
parameter_list|(
name|GLuint
modifier|*
name|buffers
parameter_list|,
name|GLint
name|maxBuffers
parameter_list|,
name|GLint
modifier|*
name|numBuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetRenderbuffersQCOM
parameter_list|(
name|GLuint
modifier|*
name|renderbuffers
parameter_list|,
name|GLint
name|maxRenderbuffers
parameter_list|,
name|GLint
modifier|*
name|numRenderbuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetFramebuffersQCOM
parameter_list|(
name|GLuint
modifier|*
name|framebuffers
parameter_list|,
name|GLint
name|maxFramebuffers
parameter_list|,
name|GLint
modifier|*
name|numFramebuffers
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetTexLevelParameterivQCOM
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|face
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtTexObjectStateOverrideiQCOM
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetTexSubImageQCOM
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|texels
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetBufferPointervQCOM
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLEXTGETTEXTURESQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETTEXTURESQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLint
name|maxTextures
parameter_list|,
name|GLint
modifier|*
name|numTextures
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETBUFFERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETBUFFERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|buffers
parameter_list|,
name|GLint
name|maxBuffers
parameter_list|,
name|GLint
modifier|*
name|numBuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETRENDERBUFFERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETRENDERBUFFERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|renderbuffers
parameter_list|,
name|GLint
name|maxRenderbuffers
parameter_list|,
name|GLint
modifier|*
name|numRenderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETFRAMEBUFFERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETFRAMEBUFFERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|framebuffers
parameter_list|,
name|GLint
name|maxFramebuffers
parameter_list|,
name|GLint
modifier|*
name|numFramebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|face
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETTEXSUBIMAGEQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETTEXSUBIMAGEQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|texels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETBUFFERPOINTERVQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETBUFFERPOINTERVQCOMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_QCOM_extended_get2 */
ifndef|#
directive|ifndef
name|GL_QCOM_extended_get2
DECL|macro|GL_QCOM_extended_get2
define|#
directive|define
name|GL_QCOM_extended_get2
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetShadersQCOM
parameter_list|(
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLint
name|maxShaders
parameter_list|,
name|GLint
modifier|*
name|numShaders
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetProgramsQCOM
parameter_list|(
name|GLuint
modifier|*
name|programs
parameter_list|,
name|GLint
name|maxPrograms
parameter_list|,
name|GLint
modifier|*
name|numPrograms
parameter_list|)
function_decl|;
name|GL_APICALL
name|GLboolean
name|GL_APIENTRY
name|glExtIsProgramBinaryQCOM
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glExtGetProgramBinarySourceQCOM
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|,
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLEXTGETSHADERSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETSHADERSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLint
name|maxShaders
parameter_list|,
name|GLint
modifier|*
name|numShaders
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETPROGRAMSQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETPROGRAMSQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|programs
parameter_list|,
name|GLint
name|maxPrograms
parameter_list|,
name|GLint
modifier|*
name|numPrograms
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTISPROGRAMBINARYQCOMPROC
typedef|typedef
name|GLboolean
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTISPROGRAMBINARYQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|,
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_QCOM_perfmon_global_mode */
ifndef|#
directive|ifndef
name|GL_QCOM_perfmon_global_mode
DECL|macro|GL_QCOM_perfmon_global_mode
define|#
directive|define
name|GL_QCOM_perfmon_global_mode
value|1
endif|#
directive|endif
comment|/* GL_QCOM_writeonly_rendering */
ifndef|#
directive|ifndef
name|GL_QCOM_writeonly_rendering
DECL|macro|GL_QCOM_writeonly_rendering
define|#
directive|define
name|GL_QCOM_writeonly_rendering
value|1
endif|#
directive|endif
comment|/* GL_QCOM_tiled_rendering */
ifndef|#
directive|ifndef
name|GL_QCOM_tiled_rendering
DECL|macro|GL_QCOM_tiled_rendering
define|#
directive|define
name|GL_QCOM_tiled_rendering
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glStartTilingQCOM
parameter_list|(
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|width
parameter_list|,
name|GLuint
name|height
parameter_list|,
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
name|GL_APICALL
name|void
name|GL_APIENTRY
name|glEndTilingQCOM
parameter_list|(
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
endif|#
directive|endif
DECL|typedef|PFNGLSTARTTILINGQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLSTARTTILINGQCOMPROC
function_decl|)
parameter_list|(
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|width
parameter_list|,
name|GLuint
name|height
parameter_list|,
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDTILINGQCOMPROC
typedef|typedef
name|void
function_decl|(
name|GL_APIENTRYP
name|PFNGLENDTILINGQCOMPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|preserveMask
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/*------------------------------------------------------------------------*  * VIV extension tokens  *------------------------------------------------------------------------*/
comment|/* GL_VIV_shader_binary */
ifndef|#
directive|ifndef
name|GL_VIV_shader_binary
DECL|macro|GL_VIV_shader_binary
define|#
directive|define
name|GL_VIV_shader_binary
value|1
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|/* __gl2ext_h_ */
end_comment
end_unit
