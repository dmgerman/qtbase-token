begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). ** All rights reserved. ** Contact: http://www.qt-project.org/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** GNU Lesser General Public License Usage ** This file may be used under the terms of the GNU Lesser General Public ** License version 2.1 as published by the Free Software Foundation and ** appearing in the file LICENSE.LGPL included in the packaging of this ** file. Please review the following information to ensure the GNU Lesser ** General Public License version 2.1 requirements will be met: ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Nokia gives you certain additional ** rights. These rights are described in the Nokia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU General ** Public License version 3.0 as published by the Free Software Foundation ** and appearing in the file LICENSE.GPL included in the packaging of this ** file. Please review the following information to ensure the GNU General ** Public License version 3.0 requirements will be met: ** http://www.gnu.org/copyleft/gpl.html. ** ** Other Usage ** Alternatively, this file may be used in accordance with the terms and ** conditions contained in a signed written agreement between you and Nokia. ** ** ** ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGL_EXTENSIONS_P_H
end_ifndef
begin_define
DECL|macro|QOPENGL_EXTENSIONS_P_H
define|#
directive|define
name|QOPENGL_EXTENSIONS_P_H
end_define
begin_comment
comment|//
end_comment
begin_comment
comment|//  W A R N I N G
end_comment
begin_comment
comment|//  -------------
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// This file is not part of the Qt API.  It exists for the convenience
end_comment
begin_comment
comment|// of the Qt OpenGL classes.  This header file may change from
end_comment
begin_comment
comment|// version to version without notice, or even be removed.
end_comment
begin_comment
comment|//
end_comment
begin_comment
comment|// We mean it.
end_comment
begin_comment
comment|//
end_comment
begin_include
include|#
directive|include
file|"qopenglfunctions.h"
end_include
begin_expr_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
end_expr_stmt
begin_if
if|#
directive|if
literal|0
end_if
begin_ifndef
ifndef|#
directive|ifndef
name|GL_ARB_vertex_buffer_object
end_ifndef
begin_endif
unit|typedef ptrdiff_t GLintptrARB; typedef ptrdiff_t GLsizeiptrARB;
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|GL_VERSION_2_0
end_ifndef
begin_typedef
DECL|typedef|GLchar
typedef|typedef
name|char
name|GLchar
typedef|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_decl_stmt
DECL|variable|QOpenGLExtensionsPrivate
name|class
name|QOpenGLExtensionsPrivate
decl_stmt|;
end_decl_stmt
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QOpenGLExtensions
range|:
name|public
name|QOpenGLFunctions
block|{
name|Q_DECLARE_PRIVATE
argument_list|(
argument|QOpenGLExtensions
argument_list|)
name|public
operator|:
name|QOpenGLExtensions
argument_list|()
block|;
name|QOpenGLExtensions
argument_list|(
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
operator|~
name|QOpenGLExtensions
argument_list|()
block|{}
expr|enum
name|OpenGLExtension
block|{
name|TextureRectangle
operator|=
literal|0x00000001
block|,
name|GenerateMipmap
operator|=
literal|0x00000002
block|,
name|TextureCompression
operator|=
literal|0x00000004
block|,
name|MirroredRepeat
operator|=
literal|0x00000008
block|,
name|FramebufferMultisample
operator|=
literal|0x00000010
block|,
name|StencilTwoSide
operator|=
literal|0x00000020
block|,
name|StencilWrap
operator|=
literal|0x00000040
block|,
name|PackedDepthStencil
operator|=
literal|0x00000080
block|,
name|NVFloatBuffer
operator|=
literal|0x00000100
block|,
name|PixelBufferObject
operator|=
literal|0x00000200
block|,
name|FramebufferBlit
operator|=
literal|0x00000400
block|,
name|BGRATextureFormat
operator|=
literal|0x00000800
block|,
name|DDSTextureCompression
operator|=
literal|0x00001000
block|,
name|ETC1TextureCompression
operator|=
literal|0x00002000
block|,
name|PVRTCTextureCompression
operator|=
literal|0x00004000
block|,
name|ElementIndexUint
operator|=
literal|0x00008000
block|,
name|Depth24
operator|=
literal|0x00010000
block|,
name|SRGBFrameBuffer
operator|=
literal|0x00020000
block|,
name|MapBuffer
operator|=
literal|0x00040000
block|,
name|GeometryShaders
operator|=
literal|0x00080000
block|}
block|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|OpenGLExtensions
argument_list|,
argument|OpenGLExtension
argument_list|)
name|OpenGLExtensions
name|openGLExtensions
argument_list|()
block|;
name|bool
name|hasOpenGLExtension
argument_list|(
argument|QOpenGLExtensions::OpenGLExtension extension
argument_list|)
specifier|const
block|;
name|void
name|initializeGLExtensions
argument_list|()
block|;
name|GLvoid
operator|*
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|GLboolean
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|;
name|void
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|qopengl_GLintptr offset
argument_list|,
argument|qopengl_GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|private
operator|:
specifier|static
name|bool
name|isInitialized
argument_list|(
argument|const QOpenGLFunctionsPrivate *d
argument_list|)
block|{
return|return
name|d
operator|!=
literal|0
return|;
block|}
expr|}
block|;
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QOpenGLExtensions::OpenGLExtensions
argument_list|)
name|class
name|QOpenGLExtensionsPrivate
operator|:
name|public
name|QOpenGLFunctionsPrivate
block|{
name|public
operator|:
name|explicit
name|QOpenGLExtensionsPrivate
argument_list|(
name|QOpenGLContext
operator|*
name|ctx
argument_list|)
block|;
name|GLvoid
operator|*
operator|(
name|QOPENGLF_APIENTRYP
name|MapBuffer
operator|)
operator|(
name|GLenum
name|target
expr|,
name|GLenum
name|access
operator|)
block|;
name|GLboolean
argument_list|(
argument|QOPENGLF_APIENTRYP UnmapBuffer
argument_list|)
operator|(
name|GLenum
name|target
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP BlitFramebuffer
argument_list|)
operator|(
name|GLint
name|srcX0
expr|,
name|GLint
name|srcY0
expr|,
name|GLint
name|srcX1
expr|,
name|GLint
name|srcY1
expr|,
name|GLint
name|dstX0
expr|,
name|GLint
name|dstY0
expr|,
name|GLint
name|dstX1
expr|,
name|GLint
name|dstY1
expr|,
name|GLbitfield
name|mask
expr|,
name|GLenum
name|filter
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP RenderbufferStorageMultisample
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|GLsizei
name|samples
expr|,
name|GLenum
name|internalFormat
expr|,
name|GLsizei
name|width
expr|,
name|GLsizei
name|height
operator|)
block|;
name|void
argument_list|(
argument|QOPENGLF_APIENTRYP GetBufferSubData
argument_list|)
operator|(
name|GLenum
name|target
expr|,
name|qopengl_GLintptr
name|offset
expr|,
name|qopengl_GLsizeiptr
name|size
expr|,
name|GLvoid
operator|*
name|data
operator|)
block|; }
block|;
DECL|function|glMapBuffer
specifier|inline
name|GLvoid
operator|*
name|QOpenGLExtensions
operator|::
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtensions
argument_list|)
block|;
name|Q_ASSERT
argument_list|(
name|QOpenGLExtensions
operator|::
name|isInitialized
argument_list|(
name|d
argument_list|)
argument_list|)
block|;
name|GLvoid
operator|*
name|result
operator|=
name|d
operator|->
name|MapBuffer
argument_list|(
name|target
argument_list|,
name|access
argument_list|)
block|;
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
DECL|function|glUnmapBuffer
specifier|inline
name|GLboolean
name|QOpenGLExtensions
operator|::
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtensions
argument_list|)
block|;
name|Q_ASSERT
argument_list|(
name|QOpenGLExtensions
operator|::
name|isInitialized
argument_list|(
name|d
argument_list|)
argument_list|)
block|;
name|GLboolean
name|result
operator|=
name|d
operator|->
name|UnmapBuffer
argument_list|(
name|target
argument_list|)
block|;
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
DECL|function|glBlitFramebuffer
specifier|inline
name|void
name|QOpenGLExtensions
operator|::
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtensions
argument_list|)
block|;
name|Q_ASSERT
argument_list|(
name|QOpenGLExtensions
operator|::
name|isInitialized
argument_list|(
name|d
argument_list|)
argument_list|)
block|;
name|d
operator|->
name|BlitFramebuffer
argument_list|(
name|srcX0
argument_list|,
name|srcY0
argument_list|,
name|srcX1
argument_list|,
name|srcY1
argument_list|,
name|dstX0
argument_list|,
name|dstY0
argument_list|,
name|dstX1
argument_list|,
name|dstY1
argument_list|,
name|mask
argument_list|,
name|filter
argument_list|)
block|;
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glRenderbufferStorageMultisample
specifier|inline
name|void
name|QOpenGLExtensions
operator|::
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalFormat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtensions
argument_list|)
block|;
name|Q_ASSERT
argument_list|(
name|QOpenGLExtensions
operator|::
name|isInitialized
argument_list|(
name|d
argument_list|)
argument_list|)
block|;
name|d
operator|->
name|RenderbufferStorageMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalFormat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|;
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetBufferSubData
specifier|inline
name|void
name|QOpenGLExtensions
operator|::
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|qopengl_GLintptr offset
argument_list|,
argument|qopengl_GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|Q_D
argument_list|(
name|QOpenGLExtensions
argument_list|)
block|;
name|Q_ASSERT
argument_list|(
name|QOpenGLExtensions
operator|::
name|isInitialized
argument_list|(
name|d
argument_list|)
argument_list|)
block|;
name|d
operator|->
name|GetBufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|;
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_SRGB_CAPABLE
DECL|macro|GL_FRAMEBUFFER_SRGB_CAPABLE
define|#
directive|define
name|GL_FRAMEBUFFER_SRGB_CAPABLE
value|0x8DBA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_SRGB
DECL|macro|GL_FRAMEBUFFER_SRGB
define|#
directive|define
name|GL_FRAMEBUFFER_SRGB
value|0x8DB9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARRAY_BUFFER
DECL|macro|GL_ARRAY_BUFFER
define|#
directive|define
name|GL_ARRAY_BUFFER
value|0x8892
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STATIC_DRAW
DECL|macro|GL_STATIC_DRAW
define|#
directive|define
name|GL_STATIC_DRAW
value|0x88E4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_TEXTURE_RECTANGLE
DECL|macro|GL_TEXTURE_RECTANGLE
define|#
directive|define
name|GL_TEXTURE_RECTANGLE
value|0x84F5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_TEXTURE_BINDING_RECTANGLE
DECL|macro|GL_TEXTURE_BINDING_RECTANGLE
define|#
directive|define
name|GL_TEXTURE_BINDING_RECTANGLE
value|0x84F6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PROXY_TEXTURE_RECTANGLE
DECL|macro|GL_PROXY_TEXTURE_RECTANGLE
define|#
directive|define
name|GL_PROXY_TEXTURE_RECTANGLE
value|0x84F7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_RECTANGLE_TEXTURE_SIZE
DECL|macro|GL_MAX_RECTANGLE_TEXTURE_SIZE
define|#
directive|define
name|GL_MAX_RECTANGLE_TEXTURE_SIZE
value|0x84F8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_BGRA
DECL|macro|GL_BGRA
define|#
directive|define
name|GL_BGRA
value|0x80E1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RGB16
DECL|macro|GL_RGB16
define|#
directive|define
name|GL_RGB16
value|0x8054
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_UNSIGNED_SHORT_5_6_5
DECL|macro|GL_UNSIGNED_SHORT_5_6_5
define|#
directive|define
name|GL_UNSIGNED_SHORT_5_6_5
value|0x8363
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_UNSIGNED_INT_8_8_8_8_REV
DECL|macro|GL_UNSIGNED_INT_8_8_8_8_REV
define|#
directive|define
name|GL_UNSIGNED_INT_8_8_8_8_REV
value|0x8367
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MULTISAMPLE
DECL|macro|GL_MULTISAMPLE
define|#
directive|define
name|GL_MULTISAMPLE
value|0x809D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_CLAMP_TO_EDGE
DECL|macro|GL_CLAMP_TO_EDGE
define|#
directive|define
name|GL_CLAMP_TO_EDGE
value|0x812F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MIRRORED_REPEAT
DECL|macro|GL_MIRRORED_REPEAT
define|#
directive|define
name|GL_MIRRORED_REPEAT
value|0x8370
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GENERATE_MIPMAP
DECL|macro|GL_GENERATE_MIPMAP
define|#
directive|define
name|GL_GENERATE_MIPMAP
value|0x8191
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GENERATE_MIPMAP_HINT
DECL|macro|GL_GENERATE_MIPMAP_HINT
define|#
directive|define
name|GL_GENERATE_MIPMAP_HINT
value|0x8192
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAGMENT_PROGRAM
DECL|macro|GL_FRAGMENT_PROGRAM
define|#
directive|define
name|GL_FRAGMENT_PROGRAM
value|0x8804
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PROGRAM_FORMAT_ASCII
DECL|macro|GL_PROGRAM_FORMAT_ASCII
define|#
directive|define
name|GL_PROGRAM_FORMAT_ASCII
value|0x8875
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PIXEL_UNPACK_BUFFER
DECL|macro|GL_PIXEL_UNPACK_BUFFER
define|#
directive|define
name|GL_PIXEL_UNPACK_BUFFER
value|0x88EC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_WRITE_ONLY
DECL|macro|GL_WRITE_ONLY
define|#
directive|define
name|GL_WRITE_ONLY
value|0x88B9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STREAM_DRAW
DECL|macro|GL_STREAM_DRAW
define|#
directive|define
name|GL_STREAM_DRAW
value|0x88E0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STENCIL_TEST_TWO_SIDE
DECL|macro|GL_STENCIL_TEST_TWO_SIDE
define|#
directive|define
name|GL_STENCIL_TEST_TWO_SIDE
value|0x8910
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INCR_WRAP
DECL|macro|GL_INCR_WRAP
define|#
directive|define
name|GL_INCR_WRAP
value|0x8507
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DECR_WRAP
DECL|macro|GL_DECR_WRAP
define|#
directive|define
name|GL_DECR_WRAP
value|0x8508
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_TEXTURE0
DECL|macro|GL_TEXTURE0
define|#
directive|define
name|GL_TEXTURE0
value|0x84C0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_TEXTURE1
DECL|macro|GL_TEXTURE1
define|#
directive|define
name|GL_TEXTURE1
value|0x84C1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DEPTH_COMPONENT16
DECL|macro|GL_DEPTH_COMPONENT16
define|#
directive|define
name|GL_DEPTH_COMPONENT16
value|0x81A5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DEPTH_COMPONENT24
DECL|macro|GL_DEPTH_COMPONENT24
define|#
directive|define
name|GL_DEPTH_COMPONENT24
value|0x81A6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INVALID_FRAMEBUFFER_OPERATION
DECL|macro|GL_INVALID_FRAMEBUFFER_OPERATION
define|#
directive|define
name|GL_INVALID_FRAMEBUFFER_OPERATION
value|0x0506
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_RENDERBUFFER_SIZE
DECL|macro|GL_MAX_RENDERBUFFER_SIZE
define|#
directive|define
name|GL_MAX_RENDERBUFFER_SIZE
value|0x84E8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_BINDING
DECL|macro|GL_FRAMEBUFFER_BINDING
define|#
directive|define
name|GL_FRAMEBUFFER_BINDING
value|0x8CA6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_BINDING
DECL|macro|GL_RENDERBUFFER_BINDING
define|#
directive|define
name|GL_RENDERBUFFER_BINDING
value|0x8CA7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
value|0x8CD0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
value|0x8CD1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
value|0x8CD2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
value|0x8CD3
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET
value|0x8CD4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_COMPLETE
DECL|macro|GL_FRAMEBUFFER_COMPLETE
define|#
directive|define
name|GL_FRAMEBUFFER_COMPLETE
value|0x8CD5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
value|0x8CD6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
value|0x8CD7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT
value|0x8CD8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
value|0x8CD9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_FORMATS
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_FORMATS
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_FORMATS
value|0x8CDA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
value|0x8CDB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
value|0x8CDC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_UNSUPPORTED
DECL|macro|GL_FRAMEBUFFER_UNSUPPORTED
define|#
directive|define
name|GL_FRAMEBUFFER_UNSUPPORTED
value|0x8CDD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_COLOR_ATTACHMENTS
DECL|macro|GL_MAX_COLOR_ATTACHMENTS
define|#
directive|define
name|GL_MAX_COLOR_ATTACHMENTS
value|0x8CDF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT0
DECL|macro|GL_COLOR_ATTACHMENT0
define|#
directive|define
name|GL_COLOR_ATTACHMENT0
value|0x8CE0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT1
DECL|macro|GL_COLOR_ATTACHMENT1
define|#
directive|define
name|GL_COLOR_ATTACHMENT1
value|0x8CE1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT2
DECL|macro|GL_COLOR_ATTACHMENT2
define|#
directive|define
name|GL_COLOR_ATTACHMENT2
value|0x8CE2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT3
DECL|macro|GL_COLOR_ATTACHMENT3
define|#
directive|define
name|GL_COLOR_ATTACHMENT3
value|0x8CE3
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT4
DECL|macro|GL_COLOR_ATTACHMENT4
define|#
directive|define
name|GL_COLOR_ATTACHMENT4
value|0x8CE4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT5
DECL|macro|GL_COLOR_ATTACHMENT5
define|#
directive|define
name|GL_COLOR_ATTACHMENT5
value|0x8CE5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT6
DECL|macro|GL_COLOR_ATTACHMENT6
define|#
directive|define
name|GL_COLOR_ATTACHMENT6
value|0x8CE6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT7
DECL|macro|GL_COLOR_ATTACHMENT7
define|#
directive|define
name|GL_COLOR_ATTACHMENT7
value|0x8CE7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT8
DECL|macro|GL_COLOR_ATTACHMENT8
define|#
directive|define
name|GL_COLOR_ATTACHMENT8
value|0x8CE8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT9
DECL|macro|GL_COLOR_ATTACHMENT9
define|#
directive|define
name|GL_COLOR_ATTACHMENT9
value|0x8CE9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT10
DECL|macro|GL_COLOR_ATTACHMENT10
define|#
directive|define
name|GL_COLOR_ATTACHMENT10
value|0x8CEA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT11
DECL|macro|GL_COLOR_ATTACHMENT11
define|#
directive|define
name|GL_COLOR_ATTACHMENT11
value|0x8CEB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT12
DECL|macro|GL_COLOR_ATTACHMENT12
define|#
directive|define
name|GL_COLOR_ATTACHMENT12
value|0x8CEC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT13
DECL|macro|GL_COLOR_ATTACHMENT13
define|#
directive|define
name|GL_COLOR_ATTACHMENT13
value|0x8CED
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT14
DECL|macro|GL_COLOR_ATTACHMENT14
define|#
directive|define
name|GL_COLOR_ATTACHMENT14
value|0x8CEE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COLOR_ATTACHMENT15
DECL|macro|GL_COLOR_ATTACHMENT15
define|#
directive|define
name|GL_COLOR_ATTACHMENT15
value|0x8CEF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DEPTH_ATTACHMENT
DECL|macro|GL_DEPTH_ATTACHMENT
define|#
directive|define
name|GL_DEPTH_ATTACHMENT
value|0x8D00
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STENCIL_ATTACHMENT
DECL|macro|GL_STENCIL_ATTACHMENT
define|#
directive|define
name|GL_STENCIL_ATTACHMENT
value|0x8D20
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER
DECL|macro|GL_FRAMEBUFFER
define|#
directive|define
name|GL_FRAMEBUFFER
value|0x8D40
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER
DECL|macro|GL_RENDERBUFFER
define|#
directive|define
name|GL_RENDERBUFFER
value|0x8D41
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_WIDTH
DECL|macro|GL_RENDERBUFFER_WIDTH
define|#
directive|define
name|GL_RENDERBUFFER_WIDTH
value|0x8D42
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_HEIGHT
DECL|macro|GL_RENDERBUFFER_HEIGHT
define|#
directive|define
name|GL_RENDERBUFFER_HEIGHT
value|0x8D43
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_INTERNAL_FORMAT
DECL|macro|GL_RENDERBUFFER_INTERNAL_FORMAT
define|#
directive|define
name|GL_RENDERBUFFER_INTERNAL_FORMAT
value|0x8D44
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STENCIL_INDEX
DECL|macro|GL_STENCIL_INDEX
define|#
directive|define
name|GL_STENCIL_INDEX
value|0x8D45
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STENCIL_INDEX1
DECL|macro|GL_STENCIL_INDEX1
define|#
directive|define
name|GL_STENCIL_INDEX1
value|0x8D46
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STENCIL_INDEX4
DECL|macro|GL_STENCIL_INDEX4
define|#
directive|define
name|GL_STENCIL_INDEX4
value|0x8D47
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STENCIL_INDEX8
DECL|macro|GL_STENCIL_INDEX8
define|#
directive|define
name|GL_STENCIL_INDEX8
value|0x8D48
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STENCIL_INDEX16
DECL|macro|GL_STENCIL_INDEX16
define|#
directive|define
name|GL_STENCIL_INDEX16
value|0x8D49
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_RED_SIZE
DECL|macro|GL_RENDERBUFFER_RED_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_RED_SIZE
value|0x8D50
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_GREEN_SIZE
DECL|macro|GL_RENDERBUFFER_GREEN_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_GREEN_SIZE
value|0x8D51
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_BLUE_SIZE
DECL|macro|GL_RENDERBUFFER_BLUE_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_BLUE_SIZE
value|0x8D52
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_ALPHA_SIZE
DECL|macro|GL_RENDERBUFFER_ALPHA_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_ALPHA_SIZE
value|0x8D53
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_DEPTH_SIZE
DECL|macro|GL_RENDERBUFFER_DEPTH_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_DEPTH_SIZE
value|0x8D54
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_STENCIL_SIZE
DECL|macro|GL_RENDERBUFFER_STENCIL_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_STENCIL_SIZE
value|0x8D55
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_READ_FRAMEBUFFER
DECL|macro|GL_READ_FRAMEBUFFER
define|#
directive|define
name|GL_READ_FRAMEBUFFER
value|0x8CA8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_RENDERBUFFER_SAMPLES
DECL|macro|GL_RENDERBUFFER_SAMPLES
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES
value|0x8CAB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
value|0x8D56
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_SAMPLES
DECL|macro|GL_MAX_SAMPLES
define|#
directive|define
name|GL_MAX_SAMPLES
value|0x8D57
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DRAW_FRAMEBUFFER
DECL|macro|GL_DRAW_FRAMEBUFFER
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER
value|0x8CA9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DEPTH_STENCIL
DECL|macro|GL_DEPTH_STENCIL
define|#
directive|define
name|GL_DEPTH_STENCIL
value|0x84F9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_UNSIGNED_INT_24_8
DECL|macro|GL_UNSIGNED_INT_24_8
define|#
directive|define
name|GL_UNSIGNED_INT_24_8
value|0x84FA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DEPTH24_STENCIL8
DECL|macro|GL_DEPTH24_STENCIL8
define|#
directive|define
name|GL_DEPTH24_STENCIL8
value|0x88F0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_TEXTURE_STENCIL_SIZE
DECL|macro|GL_TEXTURE_STENCIL_SIZE
define|#
directive|define
name|GL_TEXTURE_STENCIL_SIZE
value|0x88F1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_CLAMP_TO_EDGE
DECL|macro|GL_CLAMP_TO_EDGE
define|#
directive|define
name|GL_CLAMP_TO_EDGE
value|0x812F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PACK_SKIP_IMAGES
DECL|macro|GL_PACK_SKIP_IMAGES
define|#
directive|define
name|GL_PACK_SKIP_IMAGES
value|0x806B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PACK_IMAGE_HEIGHT
DECL|macro|GL_PACK_IMAGE_HEIGHT
define|#
directive|define
name|GL_PACK_IMAGE_HEIGHT
value|0x806C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_UNPACK_SKIP_IMAGES
DECL|macro|GL_UNPACK_SKIP_IMAGES
define|#
directive|define
name|GL_UNPACK_SKIP_IMAGES
value|0x806D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_UNPACK_IMAGE_HEIGHT
DECL|macro|GL_UNPACK_IMAGE_HEIGHT
define|#
directive|define
name|GL_UNPACK_IMAGE_HEIGHT
value|0x806E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_CONSTANT_COLOR
DECL|macro|GL_CONSTANT_COLOR
define|#
directive|define
name|GL_CONSTANT_COLOR
value|0x8001
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ONE_MINUS_CONSTANT_COLOR
DECL|macro|GL_ONE_MINUS_CONSTANT_COLOR
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_COLOR
value|0x8002
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_CONSTANT_ALPHA
DECL|macro|GL_CONSTANT_ALPHA
define|#
directive|define
name|GL_CONSTANT_ALPHA
value|0x8003
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ONE_MINUS_CONSTANT_ALPHA
DECL|macro|GL_ONE_MINUS_CONSTANT_ALPHA
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_ALPHA
value|0x8004
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INCR_WRAP
DECL|macro|GL_INCR_WRAP
define|#
directive|define
name|GL_INCR_WRAP
value|0x8507
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DECR_WRAP
DECL|macro|GL_DECR_WRAP
define|#
directive|define
name|GL_DECR_WRAP
value|0x8508
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARRAY_BUFFER
DECL|macro|GL_ARRAY_BUFFER
define|#
directive|define
name|GL_ARRAY_BUFFER
value|0x8892
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ELEMENT_ARRAY_BUFFER
DECL|macro|GL_ELEMENT_ARRAY_BUFFER
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER
value|0x8893
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STREAM_DRAW
DECL|macro|GL_STREAM_DRAW
define|#
directive|define
name|GL_STREAM_DRAW
value|0x88E0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STREAM_READ
DECL|macro|GL_STREAM_READ
define|#
directive|define
name|GL_STREAM_READ
value|0x88E1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STREAM_COPY
DECL|macro|GL_STREAM_COPY
define|#
directive|define
name|GL_STREAM_COPY
value|0x88E2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STATIC_DRAW
DECL|macro|GL_STATIC_DRAW
define|#
directive|define
name|GL_STATIC_DRAW
value|0x88E4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STATIC_READ
DECL|macro|GL_STATIC_READ
define|#
directive|define
name|GL_STATIC_READ
value|0x88E5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_STATIC_COPY
DECL|macro|GL_STATIC_COPY
define|#
directive|define
name|GL_STATIC_COPY
value|0x88E6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DYNAMIC_DRAW
DECL|macro|GL_DYNAMIC_DRAW
define|#
directive|define
name|GL_DYNAMIC_DRAW
value|0x88E8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DYNAMIC_READ
DECL|macro|GL_DYNAMIC_READ
define|#
directive|define
name|GL_DYNAMIC_READ
value|0x88E9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_DYNAMIC_COPY
DECL|macro|GL_DYNAMIC_COPY
define|#
directive|define
name|GL_DYNAMIC_COPY
value|0x88EA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAGMENT_SHADER
DECL|macro|GL_FRAGMENT_SHADER
define|#
directive|define
name|GL_FRAGMENT_SHADER
value|0x8B30
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERTEX_SHADER
DECL|macro|GL_VERTEX_SHADER
define|#
directive|define
name|GL_VERTEX_SHADER
value|0x8B31
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FLOAT_VEC2
DECL|macro|GL_FLOAT_VEC2
define|#
directive|define
name|GL_FLOAT_VEC2
value|0x8B50
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FLOAT_VEC3
DECL|macro|GL_FLOAT_VEC3
define|#
directive|define
name|GL_FLOAT_VEC3
value|0x8B51
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FLOAT_VEC4
DECL|macro|GL_FLOAT_VEC4
define|#
directive|define
name|GL_FLOAT_VEC4
value|0x8B52
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INT_VEC2
DECL|macro|GL_INT_VEC2
define|#
directive|define
name|GL_INT_VEC2
value|0x8B53
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INT_VEC3
DECL|macro|GL_INT_VEC3
define|#
directive|define
name|GL_INT_VEC3
value|0x8B54
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INT_VEC4
DECL|macro|GL_INT_VEC4
define|#
directive|define
name|GL_INT_VEC4
value|0x8B55
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_BOOL
DECL|macro|GL_BOOL
define|#
directive|define
name|GL_BOOL
value|0x8B56
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_BOOL_VEC2
DECL|macro|GL_BOOL_VEC2
define|#
directive|define
name|GL_BOOL_VEC2
value|0x8B57
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_BOOL_VEC3
DECL|macro|GL_BOOL_VEC3
define|#
directive|define
name|GL_BOOL_VEC3
value|0x8B58
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_BOOL_VEC4
DECL|macro|GL_BOOL_VEC4
define|#
directive|define
name|GL_BOOL_VEC4
value|0x8B59
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FLOAT_MAT2
DECL|macro|GL_FLOAT_MAT2
define|#
directive|define
name|GL_FLOAT_MAT2
value|0x8B5A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FLOAT_MAT3
DECL|macro|GL_FLOAT_MAT3
define|#
directive|define
name|GL_FLOAT_MAT3
value|0x8B5B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FLOAT_MAT4
DECL|macro|GL_FLOAT_MAT4
define|#
directive|define
name|GL_FLOAT_MAT4
value|0x8B5C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SAMPLER_1D
DECL|macro|GL_SAMPLER_1D
define|#
directive|define
name|GL_SAMPLER_1D
value|0x8B5D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SAMPLER_2D
DECL|macro|GL_SAMPLER_2D
define|#
directive|define
name|GL_SAMPLER_2D
value|0x8B5E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SAMPLER_3D
DECL|macro|GL_SAMPLER_3D
define|#
directive|define
name|GL_SAMPLER_3D
value|0x8B5F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SAMPLER_CUBE
DECL|macro|GL_SAMPLER_CUBE
define|#
directive|define
name|GL_SAMPLER_CUBE
value|0x8B60
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_COMPILE_STATUS
DECL|macro|GL_COMPILE_STATUS
define|#
directive|define
name|GL_COMPILE_STATUS
value|0x8B81
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_LINK_STATUS
DECL|macro|GL_LINK_STATUS
define|#
directive|define
name|GL_LINK_STATUS
value|0x8B82
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INFO_LOG_LENGTH
DECL|macro|GL_INFO_LOG_LENGTH
define|#
directive|define
name|GL_INFO_LOG_LENGTH
value|0x8B84
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ACTIVE_UNIFORMS
DECL|macro|GL_ACTIVE_UNIFORMS
define|#
directive|define
name|GL_ACTIVE_UNIFORMS
value|0x8B86
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ACTIVE_UNIFORM_MAX_LENGTH
DECL|macro|GL_ACTIVE_UNIFORM_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_UNIFORM_MAX_LENGTH
value|0x8B87
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ACTIVE_ATTRIBUTES
DECL|macro|GL_ACTIVE_ATTRIBUTES
define|#
directive|define
name|GL_ACTIVE_ATTRIBUTES
value|0x8B89
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
DECL|macro|GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
value|0x8B8A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GEOMETRY_SHADER
DECL|macro|GL_GEOMETRY_SHADER
define|#
directive|define
name|GL_GEOMETRY_SHADER
value|0x8DD9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GEOMETRY_VERTICES_OUT
DECL|macro|GL_GEOMETRY_VERTICES_OUT
define|#
directive|define
name|GL_GEOMETRY_VERTICES_OUT
value|0x8DDA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GEOMETRY_INPUT_TYPE
DECL|macro|GL_GEOMETRY_INPUT_TYPE
define|#
directive|define
name|GL_GEOMETRY_INPUT_TYPE
value|0x8DDB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GEOMETRY_OUTPUT_TYPE
DECL|macro|GL_GEOMETRY_OUTPUT_TYPE
define|#
directive|define
name|GL_GEOMETRY_OUTPUT_TYPE
value|0x8DDC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
DECL|macro|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
value|0x8C29
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_GEOMETRY_VARYING_COMPONENTS
DECL|macro|GL_MAX_GEOMETRY_VARYING_COMPONENTS
define|#
directive|define
name|GL_MAX_GEOMETRY_VARYING_COMPONENTS
value|0x8DDD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_VERTEX_VARYING_COMPONENTS
DECL|macro|GL_MAX_VERTEX_VARYING_COMPONENTS
define|#
directive|define
name|GL_MAX_VERTEX_VARYING_COMPONENTS
value|0x8DDE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_VARYING_COMPONENTS
DECL|macro|GL_MAX_VARYING_COMPONENTS
define|#
directive|define
name|GL_MAX_VARYING_COMPONENTS
value|0x8B4B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
DECL|macro|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
value|0x8DDF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_GEOMETRY_OUTPUT_VERTICES
DECL|macro|GL_MAX_GEOMETRY_OUTPUT_VERTICES
define|#
directive|define
name|GL_MAX_GEOMETRY_OUTPUT_VERTICES
value|0x8DE0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
DECL|macro|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
value|0x8DE1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_LINES_ADJACENCY
DECL|macro|GL_LINES_ADJACENCY
define|#
directive|define
name|GL_LINES_ADJACENCY
value|0xA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_LINE_STRIP_ADJACENCY
DECL|macro|GL_LINE_STRIP_ADJACENCY
define|#
directive|define
name|GL_LINE_STRIP_ADJACENCY
value|0xB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_TRIANGLES_ADJACENCY
DECL|macro|GL_TRIANGLES_ADJACENCY
define|#
directive|define
name|GL_TRIANGLES_ADJACENCY
value|0xC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_TRIANGLE_STRIP_ADJACENCY
DECL|macro|GL_TRIANGLE_STRIP_ADJACENCY
define|#
directive|define
name|GL_TRIANGLE_STRIP_ADJACENCY
value|0xD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
value|0x8DA8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT
value|0x8DA9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_ATTACHMENT_LAYERED
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_LAYERED
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_LAYERED
value|0x8DA7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
value|0x8CD4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PROGRAM_POINT_SIZE
DECL|macro|GL_PROGRAM_POINT_SIZE
define|#
directive|define
name|GL_PROGRAM_POINT_SIZE
value|0x8642
endif|#
directive|endif
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_decl_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QOPENGL_EXTENSIONS_P_H
end_comment
end_unit
