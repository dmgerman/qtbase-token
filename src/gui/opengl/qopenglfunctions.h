begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies). ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGLFUNCTIONS_H
end_ifndef
begin_define
DECL|macro|QOPENGLFUNCTIONS_H
define|#
directive|define
name|QOPENGLFUNCTIONS_H
end_define
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_OPENGL
end_ifndef
begin_ifdef
ifdef|#
directive|ifdef
name|__GLEW_H__
end_ifdef
begin_if
if|#
directive|if
name|defined
argument_list|(
name|Q_CC_GNU
argument_list|)
end_if
begin_warning
warning|#
directive|warning
warning|qopenglfunctions.h is not compatible with GLEW, GLEW defines will be undefined
end_warning
begin_warning
warning|#
directive|warning
warning|To use GLEW with Qt, do not include<qopengl.h> or<QOpenGLFunctions> after glew.h
end_warning
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_include
include|#
directive|include
file|<QtGui/qopengl.h>
end_include
begin_include
include|#
directive|include
file|<QtGui/qopenglcontext.h>
end_include
begin_comment
comment|//#define Q_ENABLE_OPENGL_FUNCTIONS_DEBUG
end_comment
begin_ifdef
ifdef|#
directive|ifdef
name|Q_ENABLE_OPENGL_FUNCTIONS_DEBUG
end_ifdef
begin_include
include|#
directive|include
file|<stdio.h>
end_include
begin_define
DECL|macro|Q_OPENGL_FUNCTIONS_DEBUG
define|#
directive|define
name|Q_OPENGL_FUNCTIONS_DEBUG
define|\
value|GLenum error = glGetError(); \     if (error != GL_NO_ERROR) { \         unsigned clamped = qMin(unsigned(error - GL_INVALID_ENUM), 4U); \         const char *errors[] = { "GL_INVALID_ENUM", "GL_INVALID_VALUE", "GL_INVALID_OPERATION", "Unknown" }; \         printf("GL error at %s:%d: %s\n", __FILE__, __LINE__, errors[clamped]); \         int *value = 0; \         *value = 0; \     }
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|Q_OPENGL_FUNCTIONS_DEBUG
define|#
directive|define
name|Q_OPENGL_FUNCTIONS_DEBUG
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
name|QT_BEGIN_HEADER
name|QT_BEGIN_NAMESPACE
end_expr_stmt
begin_comment
comment|// Types that aren't defined in all system's gl.h files.
end_comment
begin_typedef
DECL|typedef|qopengl_GLintptr
typedef|typedef
name|ptrdiff_t
name|qopengl_GLintptr
typedef|;
end_typedef
begin_typedef
DECL|typedef|qopengl_GLsizeiptr
typedef|typedef
name|ptrdiff_t
name|qopengl_GLsizeiptr
typedef|;
end_typedef
begin_if
if|#
directive|if
name|defined
argument_list|(
name|APIENTRY
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QOPENGLF_APIENTRY
argument_list|)
end_if
begin_define
DECL|macro|QOPENGLF_APIENTRY
define|#
directive|define
name|QOPENGLF_APIENTRY
value|APIENTRY
end_define
begin_elif
elif|#
directive|elif
name|defined
argument_list|(
name|GL_APIENTRY
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QOPENGLF_APIENTRY
argument_list|)
end_elif
begin_define
DECL|macro|QOPENGLF_APIENTRY
define|#
directive|define
name|QOPENGLF_APIENTRY
value|GL_APIENTRY
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGLF_APIENTRYP
end_ifndef
begin_ifdef
ifdef|#
directive|ifdef
name|QOPENGLF_APIENTRY
end_ifdef
begin_define
DECL|macro|QOPENGLF_APIENTRYP
define|#
directive|define
name|QOPENGLF_APIENTRYP
value|QOPENGLF_APIENTRY *
end_define
begin_else
else|#
directive|else
end_else
begin_define
DECL|macro|QOPENGLF_APIENTRY
define|#
directive|define
name|QOPENGLF_APIENTRY
end_define
begin_define
DECL|macro|QOPENGLF_APIENTRYP
define|#
directive|define
name|QOPENGLF_APIENTRYP
value|*
end_define
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
begin_struct_decl
struct_decl|struct
name|QOpenGLFunctionsPrivate
struct_decl|;
end_struct_decl
begin_comment
comment|// Undefine any macros from GLEW, qopenglextensions_p.h, etc that
end_comment
begin_comment
comment|// may interfere with the definition of QOpenGLFunctions.
end_comment
begin_undef
DECL|macro|glActiveTexture
undef|#
directive|undef
name|glActiveTexture
end_undef
begin_undef
DECL|macro|glAttachShader
undef|#
directive|undef
name|glAttachShader
end_undef
begin_undef
DECL|macro|glBindAttribLocation
undef|#
directive|undef
name|glBindAttribLocation
end_undef
begin_undef
DECL|macro|glBindBuffer
undef|#
directive|undef
name|glBindBuffer
end_undef
begin_undef
DECL|macro|glBindFramebuffer
undef|#
directive|undef
name|glBindFramebuffer
end_undef
begin_undef
DECL|macro|glBindRenderbuffer
undef|#
directive|undef
name|glBindRenderbuffer
end_undef
begin_undef
DECL|macro|glBlendColor
undef|#
directive|undef
name|glBlendColor
end_undef
begin_undef
DECL|macro|glBlendEquation
undef|#
directive|undef
name|glBlendEquation
end_undef
begin_undef
DECL|macro|glBlendEquationSeparate
undef|#
directive|undef
name|glBlendEquationSeparate
end_undef
begin_undef
DECL|macro|glBlendFuncSeparate
undef|#
directive|undef
name|glBlendFuncSeparate
end_undef
begin_undef
DECL|macro|glBufferData
undef|#
directive|undef
name|glBufferData
end_undef
begin_undef
DECL|macro|glBufferSubData
undef|#
directive|undef
name|glBufferSubData
end_undef
begin_undef
DECL|macro|glCheckFramebufferStatus
undef|#
directive|undef
name|glCheckFramebufferStatus
end_undef
begin_undef
DECL|macro|glClearDepthf
undef|#
directive|undef
name|glClearDepthf
end_undef
begin_undef
DECL|macro|glCompileShader
undef|#
directive|undef
name|glCompileShader
end_undef
begin_undef
DECL|macro|glCompressedTexImage2D
undef|#
directive|undef
name|glCompressedTexImage2D
end_undef
begin_undef
DECL|macro|glCompressedTexSubImage2D
undef|#
directive|undef
name|glCompressedTexSubImage2D
end_undef
begin_undef
DECL|macro|glCreateProgram
undef|#
directive|undef
name|glCreateProgram
end_undef
begin_undef
DECL|macro|glCreateShader
undef|#
directive|undef
name|glCreateShader
end_undef
begin_undef
DECL|macro|glDeleteBuffers
undef|#
directive|undef
name|glDeleteBuffers
end_undef
begin_undef
DECL|macro|glDeleteFramebuffers
undef|#
directive|undef
name|glDeleteFramebuffers
end_undef
begin_undef
DECL|macro|glDeleteProgram
undef|#
directive|undef
name|glDeleteProgram
end_undef
begin_undef
DECL|macro|glDeleteRenderbuffers
undef|#
directive|undef
name|glDeleteRenderbuffers
end_undef
begin_undef
DECL|macro|glDeleteShader
undef|#
directive|undef
name|glDeleteShader
end_undef
begin_undef
DECL|macro|glDepthRangef
undef|#
directive|undef
name|glDepthRangef
end_undef
begin_undef
DECL|macro|glDetachShader
undef|#
directive|undef
name|glDetachShader
end_undef
begin_undef
DECL|macro|glDisableVertexAttribArray
undef|#
directive|undef
name|glDisableVertexAttribArray
end_undef
begin_undef
DECL|macro|glEnableVertexAttribArray
undef|#
directive|undef
name|glEnableVertexAttribArray
end_undef
begin_undef
DECL|macro|glFramebufferRenderbuffer
undef|#
directive|undef
name|glFramebufferRenderbuffer
end_undef
begin_undef
DECL|macro|glFramebufferTexture2D
undef|#
directive|undef
name|glFramebufferTexture2D
end_undef
begin_undef
DECL|macro|glGenBuffers
undef|#
directive|undef
name|glGenBuffers
end_undef
begin_undef
DECL|macro|glGenerateMipmap
undef|#
directive|undef
name|glGenerateMipmap
end_undef
begin_undef
DECL|macro|glGenFramebuffers
undef|#
directive|undef
name|glGenFramebuffers
end_undef
begin_undef
DECL|macro|glGenRenderbuffers
undef|#
directive|undef
name|glGenRenderbuffers
end_undef
begin_undef
DECL|macro|glGetActiveAttrib
undef|#
directive|undef
name|glGetActiveAttrib
end_undef
begin_undef
DECL|macro|glGetActiveUniform
undef|#
directive|undef
name|glGetActiveUniform
end_undef
begin_undef
DECL|macro|glGetAttachedShaders
undef|#
directive|undef
name|glGetAttachedShaders
end_undef
begin_undef
DECL|macro|glGetAttribLocation
undef|#
directive|undef
name|glGetAttribLocation
end_undef
begin_undef
DECL|macro|glGetBufferParameteriv
undef|#
directive|undef
name|glGetBufferParameteriv
end_undef
begin_undef
DECL|macro|glGetFramebufferAttachmentParameteriv
undef|#
directive|undef
name|glGetFramebufferAttachmentParameteriv
end_undef
begin_undef
DECL|macro|glGetProgramiv
undef|#
directive|undef
name|glGetProgramiv
end_undef
begin_undef
DECL|macro|glGetProgramInfoLog
undef|#
directive|undef
name|glGetProgramInfoLog
end_undef
begin_undef
DECL|macro|glGetRenderbufferParameteriv
undef|#
directive|undef
name|glGetRenderbufferParameteriv
end_undef
begin_undef
DECL|macro|glGetShaderiv
undef|#
directive|undef
name|glGetShaderiv
end_undef
begin_undef
DECL|macro|glGetShaderInfoLog
undef|#
directive|undef
name|glGetShaderInfoLog
end_undef
begin_undef
DECL|macro|glGetShaderPrecisionFormat
undef|#
directive|undef
name|glGetShaderPrecisionFormat
end_undef
begin_undef
DECL|macro|glGetShaderSource
undef|#
directive|undef
name|glGetShaderSource
end_undef
begin_undef
DECL|macro|glGetUniformfv
undef|#
directive|undef
name|glGetUniformfv
end_undef
begin_undef
DECL|macro|glGetUniformiv
undef|#
directive|undef
name|glGetUniformiv
end_undef
begin_undef
DECL|macro|glGetUniformLocation
undef|#
directive|undef
name|glGetUniformLocation
end_undef
begin_undef
DECL|macro|glGetVertexAttribfv
undef|#
directive|undef
name|glGetVertexAttribfv
end_undef
begin_undef
DECL|macro|glGetVertexAttribiv
undef|#
directive|undef
name|glGetVertexAttribiv
end_undef
begin_undef
DECL|macro|glGetVertexAttribPointerv
undef|#
directive|undef
name|glGetVertexAttribPointerv
end_undef
begin_undef
DECL|macro|glIsBuffer
undef|#
directive|undef
name|glIsBuffer
end_undef
begin_undef
DECL|macro|glIsFramebuffer
undef|#
directive|undef
name|glIsFramebuffer
end_undef
begin_undef
DECL|macro|glIsProgram
undef|#
directive|undef
name|glIsProgram
end_undef
begin_undef
DECL|macro|glIsRenderbuffer
undef|#
directive|undef
name|glIsRenderbuffer
end_undef
begin_undef
DECL|macro|glIsShader
undef|#
directive|undef
name|glIsShader
end_undef
begin_undef
DECL|macro|glLinkProgram
undef|#
directive|undef
name|glLinkProgram
end_undef
begin_undef
DECL|macro|glReleaseShaderCompiler
undef|#
directive|undef
name|glReleaseShaderCompiler
end_undef
begin_undef
DECL|macro|glRenderbufferStorage
undef|#
directive|undef
name|glRenderbufferStorage
end_undef
begin_undef
DECL|macro|glSampleCoverage
undef|#
directive|undef
name|glSampleCoverage
end_undef
begin_undef
DECL|macro|glShaderBinary
undef|#
directive|undef
name|glShaderBinary
end_undef
begin_undef
DECL|macro|glShaderSource
undef|#
directive|undef
name|glShaderSource
end_undef
begin_undef
DECL|macro|glStencilFuncSeparate
undef|#
directive|undef
name|glStencilFuncSeparate
end_undef
begin_undef
DECL|macro|glStencilMaskSeparate
undef|#
directive|undef
name|glStencilMaskSeparate
end_undef
begin_undef
DECL|macro|glStencilOpSeparate
undef|#
directive|undef
name|glStencilOpSeparate
end_undef
begin_undef
DECL|macro|glUniform1f
undef|#
directive|undef
name|glUniform1f
end_undef
begin_undef
DECL|macro|glUniform1fv
undef|#
directive|undef
name|glUniform1fv
end_undef
begin_undef
DECL|macro|glUniform1i
undef|#
directive|undef
name|glUniform1i
end_undef
begin_undef
DECL|macro|glUniform1iv
undef|#
directive|undef
name|glUniform1iv
end_undef
begin_undef
DECL|macro|glUniform2f
undef|#
directive|undef
name|glUniform2f
end_undef
begin_undef
DECL|macro|glUniform2fv
undef|#
directive|undef
name|glUniform2fv
end_undef
begin_undef
DECL|macro|glUniform2i
undef|#
directive|undef
name|glUniform2i
end_undef
begin_undef
DECL|macro|glUniform2iv
undef|#
directive|undef
name|glUniform2iv
end_undef
begin_undef
DECL|macro|glUniform3f
undef|#
directive|undef
name|glUniform3f
end_undef
begin_undef
DECL|macro|glUniform3fv
undef|#
directive|undef
name|glUniform3fv
end_undef
begin_undef
DECL|macro|glUniform3i
undef|#
directive|undef
name|glUniform3i
end_undef
begin_undef
DECL|macro|glUniform3iv
undef|#
directive|undef
name|glUniform3iv
end_undef
begin_undef
DECL|macro|glUniform4f
undef|#
directive|undef
name|glUniform4f
end_undef
begin_undef
DECL|macro|glUniform4fv
undef|#
directive|undef
name|glUniform4fv
end_undef
begin_undef
DECL|macro|glUniform4i
undef|#
directive|undef
name|glUniform4i
end_undef
begin_undef
DECL|macro|glUniform4iv
undef|#
directive|undef
name|glUniform4iv
end_undef
begin_undef
DECL|macro|glUniformMatrix2fv
undef|#
directive|undef
name|glUniformMatrix2fv
end_undef
begin_undef
DECL|macro|glUniformMatrix3fv
undef|#
directive|undef
name|glUniformMatrix3fv
end_undef
begin_undef
DECL|macro|glUniformMatrix4fv
undef|#
directive|undef
name|glUniformMatrix4fv
end_undef
begin_undef
DECL|macro|glUseProgram
undef|#
directive|undef
name|glUseProgram
end_undef
begin_undef
DECL|macro|glValidateProgram
undef|#
directive|undef
name|glValidateProgram
end_undef
begin_undef
DECL|macro|glVertexAttrib1f
undef|#
directive|undef
name|glVertexAttrib1f
end_undef
begin_undef
DECL|macro|glVertexAttrib1fv
undef|#
directive|undef
name|glVertexAttrib1fv
end_undef
begin_undef
DECL|macro|glVertexAttrib2f
undef|#
directive|undef
name|glVertexAttrib2f
end_undef
begin_undef
DECL|macro|glVertexAttrib2fv
undef|#
directive|undef
name|glVertexAttrib2fv
end_undef
begin_undef
DECL|macro|glVertexAttrib3f
undef|#
directive|undef
name|glVertexAttrib3f
end_undef
begin_undef
DECL|macro|glVertexAttrib3fv
undef|#
directive|undef
name|glVertexAttrib3fv
end_undef
begin_undef
DECL|macro|glVertexAttrib4f
undef|#
directive|undef
name|glVertexAttrib4f
end_undef
begin_undef
DECL|macro|glVertexAttrib4fv
undef|#
directive|undef
name|glVertexAttrib4fv
end_undef
begin_undef
DECL|macro|glVertexAttribPointer
undef|#
directive|undef
name|glVertexAttribPointer
end_undef
begin_decl_stmt
name|class
name|Q_GUI_EXPORT
name|QOpenGLFunctions
block|{
name|public
label|:
name|QOpenGLFunctions
argument_list|()
expr_stmt|;
name|explicit
name|QOpenGLFunctions
parameter_list|(
name|QOpenGLContext
modifier|*
name|context
parameter_list|)
function_decl|;
operator|~
name|QOpenGLFunctions
argument_list|()
block|{}
expr|enum
name|OpenGLFeature
block|{
name|Multitexture
operator|=
literal|0x0001
block|,
name|Shaders
operator|=
literal|0x0002
block|,
name|Buffers
operator|=
literal|0x0004
block|,
name|Framebuffers
operator|=
literal|0x0008
block|,
name|BlendColor
operator|=
literal|0x0010
block|,
name|BlendEquation
operator|=
literal|0x0020
block|,
name|BlendEquationSeparate
operator|=
literal|0x0040
block|,
name|BlendFuncSeparate
operator|=
literal|0x0080
block|,
name|BlendSubtract
operator|=
literal|0x0100
block|,
name|CompressedTextures
operator|=
literal|0x0200
block|,
name|Multisample
operator|=
literal|0x0400
block|,
name|StencilSeparate
operator|=
literal|0x0800
block|,
name|NPOTTextures
operator|=
literal|0x1000
block|,
name|NPOTTextureRepeat
operator|=
literal|0x2000
block|}
expr_stmt|;
name|Q_DECLARE_FLAGS
argument_list|(
argument|OpenGLFeatures
argument_list|,
argument|OpenGLFeature
argument_list|)
name|QOpenGLFunctions
operator|::
name|OpenGLFeatures
name|openGLFeatures
argument_list|()
specifier|const
expr_stmt|;
name|bool
name|hasOpenGLFeature
argument_list|(
name|QOpenGLFunctions
operator|::
name|OpenGLFeature
name|feature
argument_list|)
decl|const
decl_stmt|;
name|void
name|initializeOpenGLFunctions
parameter_list|()
function_decl|;
if|#
directive|if
name|QT_DEPRECATED_SINCE
argument_list|(
literal|5
operator|,
literal|0
argument_list|)
name|QT_DEPRECATED
name|void
name|initializeGLFunctions
parameter_list|()
block|{
name|initializeOpenGLFunctions
argument_list|()
expr_stmt|;
block|}
endif|#
directive|endif
name|void
name|glActiveTexture
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
name|void
name|glAttachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
name|glBindAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
name|glBindBuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
name|glBindFramebuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|void
name|glBindRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|void
name|glBlendColor
parameter_list|(
name|GLclampf
name|red
parameter_list|,
name|GLclampf
name|green
parameter_list|,
name|GLclampf
name|blue
parameter_list|,
name|GLclampf
name|alpha
parameter_list|)
function_decl|;
name|void
name|glBlendEquation
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|void
name|glBlendEquationSeparate
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
name|void
name|glBlendFuncSeparate
parameter_list|(
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
name|void
name|glBufferData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|qopengl_GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
name|void
name|glBufferSubData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|qopengl_GLintptr
name|offset
parameter_list|,
name|qopengl_GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLenum
name|glCheckFramebufferStatus
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|void
name|glClearDepthf
parameter_list|(
name|GLclampf
name|depth
parameter_list|)
function_decl|;
name|void
name|glCompileShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
name|glCompressedTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|void
name|glCompressedTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLuint
name|glCreateProgram
parameter_list|()
function_decl|;
name|GLuint
name|glCreateShader
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|void
name|glDeleteBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|void
name|glDeleteFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|void
name|glDeleteProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
name|glDeleteRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|void
name|glDeleteShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
name|glDepthRangef
parameter_list|(
name|GLclampf
name|zNear
parameter_list|,
name|GLclampf
name|zFar
parameter_list|)
function_decl|;
name|void
name|glDetachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
name|glDisableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|void
name|glEnableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|void
name|glFramebufferRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|void
name|glFramebufferTexture2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|void
name|glGenBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|void
name|glGenerateMipmap
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|void
name|glGenFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|void
name|glGenRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|void
name|glGetActiveAttrib
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
name|glGetActiveUniform
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
name|glGetAttachedShaders
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxcount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
function_decl|;
name|GLint
name|glGetAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
name|glGetBufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetFramebufferAttachmentParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetProgramiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetProgramInfoLog
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infolog
parameter_list|)
function_decl|;
name|void
name|glGetRenderbufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetShaderiv
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetShaderInfoLog
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infolog
parameter_list|)
function_decl|;
name|void
name|glGetShaderPrecisionFormat
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
name|void
name|glGetShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|source
parameter_list|)
function_decl|;
name|void
name|glGetUniformfv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetUniformiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLint
name|glGetUniformLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
name|glGetVertexAttribfv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetVertexAttribiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
name|glGetVertexAttribPointerv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLboolean
name|glIsBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLboolean
name|glIsFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GLboolean
name|glIsProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLboolean
name|glIsRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLboolean
name|glIsShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
name|glLinkProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
name|glReleaseShaderCompiler
parameter_list|()
function_decl|;
name|void
name|glRenderbufferStorage
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|void
name|glSampleCoverage
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
name|void
name|glShaderBinary
parameter_list|(
name|GLint
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
name|void
name|glShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
name|void
name|glStencilFuncSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|void
name|glStencilMaskSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|void
name|glStencilOpSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
name|void
name|glUniform1f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|void
name|glUniform1fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniform1i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
name|void
name|glUniform1iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniform2f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|void
name|glUniform2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniform2i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|void
name|glUniform2iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniform3f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|void
name|glUniform3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniform3i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|void
name|glUniform3iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniform4f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|void
name|glUniform4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniform4i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|void
name|glUniform4iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|glUniformMatrix2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|void
name|glUniformMatrix3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|void
name|glUniformMatrix4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|void
name|glUseProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
name|glValidateProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib1f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib1fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib2f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib2fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib3f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib3fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib4f
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|void
name|glVertexAttrib4fv
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
name|glVertexAttribPointer
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
name|protected
label|:
name|QOpenGLFunctionsPrivate
modifier|*
name|d_ptr
decl_stmt|;
specifier|static
name|bool
name|isInitialized
parameter_list|(
specifier|const
name|QOpenGLFunctionsPrivate
modifier|*
name|d
parameter_list|)
block|{
return|return
name|d
operator|!=
literal|0
return|;
block|}
block|}
end_decl_stmt
begin_empty_stmt
empty_stmt|;
end_empty_stmt
begin_macro
name|Q_DECLARE_OPERATORS_FOR_FLAGS
argument_list|(
argument|QOpenGLFunctions::OpenGLFeatures
argument_list|)
end_macro
begin_struct
DECL|struct|QOpenGLFunctionsPrivate
struct|struct
name|QOpenGLFunctionsPrivate
block|{
name|QOpenGLFunctionsPrivate
argument_list|(
name|QOpenGLContext
operator|*
name|ctx
argument_list|)
expr_stmt|;
ifndef|#
directive|ifndef
name|QT_OPENGL_ES_2
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|ActiveTexture
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|AttachShader
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BindAttribLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BindBuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BindFramebuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BindRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BlendColor
function_decl|)
parameter_list|(
name|GLclampf
name|red
parameter_list|,
name|GLclampf
name|green
parameter_list|,
name|GLclampf
name|blue
parameter_list|,
name|GLclampf
name|alpha
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BlendEquation
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BlendEquationSeparate
function_decl|)
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BlendFuncSeparate
function_decl|)
parameter_list|(
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BufferData
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|qopengl_GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|BufferSubData
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|qopengl_GLintptr
name|offset
parameter_list|,
name|qopengl_GLsizeiptr
name|size
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLenum
function_decl|(
name|QOPENGLF_APIENTRYP
name|CheckFramebufferStatus
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|CompileShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|CompressedTexImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|CompressedTexSubImage2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|void
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLuint
function_decl|(
name|QOPENGLF_APIENTRYP
name|CreateProgram
function_decl|)
parameter_list|()
function_decl|;
name|GLuint
function_decl|(
name|QOPENGLF_APIENTRYP
name|CreateShader
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|DeleteBuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|DeleteFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|DeleteProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|DeleteRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|DeleteShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|DetachShader
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|DisableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|EnableVertexAttribArray
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|FramebufferRenderbuffer
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|FramebufferTexture2D
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GenBuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GenerateMipmap
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GenFramebuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GenRenderbuffers
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetActiveAttrib
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetActiveUniform
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetAttachedShaders
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxcount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|shaders
parameter_list|)
function_decl|;
name|GLint
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetAttribLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetBufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetFramebufferAttachmentParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetProgramiv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetProgramInfoLog
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infolog
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetRenderbufferParameteriv
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetShaderiv
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetShaderInfoLog
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|infolog
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetShaderPrecisionFormat
function_decl|)
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetShaderSource
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|char
modifier|*
name|source
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetUniformfv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetUniformiv
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLint
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetUniformLocation
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|char
modifier|*
name|name
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetVertexAttribfv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetVertexAttribiv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|GetVertexAttribPointerv
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|void
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLboolean
function_decl|(
name|QOPENGLF_APIENTRYP
name|IsBuffer
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLboolean
function_decl|(
name|QOPENGLF_APIENTRYP
name|IsFramebuffer
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GLboolean
function_decl|(
name|QOPENGLF_APIENTRYP
name|IsProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLboolean
function_decl|(
name|QOPENGLF_APIENTRYP
name|IsRenderbuffer
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLboolean
function_decl|(
name|QOPENGLF_APIENTRYP
name|IsShader
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|LinkProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|ReleaseShaderCompiler
function_decl|)
parameter_list|()
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|RenderbufferStorage
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|SampleCoverage
function_decl|)
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|ShaderBinary
function_decl|)
parameter_list|(
name|GLint
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|void
modifier|*
name|binary
parameter_list|,
name|GLint
name|length
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|ShaderSource
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|char
modifier|*
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|StencilFuncSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|StencilMaskSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|StencilOpSeparate
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|fail
parameter_list|,
name|GLenum
name|zfail
parameter_list|,
name|GLenum
name|zpass
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform1f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform1fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform1i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform1iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform2f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform2fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform2i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform2iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform3f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform3fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform3i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform3iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform4f
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform4fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform4i
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|Uniform4iv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|UniformMatrix2fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|UniformMatrix3fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|UniformMatrix4fv
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|UseProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|ValidateProgram
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib1f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib1fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib2f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib2fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib3f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib3fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib4f
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttrib4fv
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|void
function_decl|(
name|QOPENGLF_APIENTRYP
name|VertexAttribPointer
function_decl|)
parameter_list|(
name|GLuint
name|indx
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|void
modifier|*
name|ptr
parameter_list|)
function_decl|;
endif|#
directive|endif
block|}
struct|;
end_struct
begin_expr_stmt
DECL|function|glActiveTexture
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glActiveTexture
argument_list|(
name|texture
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|ActiveTexture
argument_list|(
name|texture
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glAttachShader
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glAttachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glAttachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|AttachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBindAttribLocation
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBindAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|const char* name
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBindAttribLocation
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BindAttribLocation
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBindBuffer
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBindBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBindBuffer
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BindBuffer
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBindFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBindFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|{
if|if
condition|(
name|framebuffer
operator|==
literal|0
condition|)
name|framebuffer
operator|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
operator|->
name|defaultFramebufferObject
argument_list|()
expr_stmt|;
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBindFramebuffer
argument_list|(
name|target
argument_list|,
name|framebuffer
argument_list|)
expr_stmt|;
end_expr_stmt
begin_else
else|#
directive|else
end_else
begin_expr_stmt
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
expr_stmt|;
end_expr_stmt
begin_expr_stmt
name|d_ptr
operator|->
name|BindFramebuffer
argument_list|(
name|target
argument_list|,
name|framebuffer
argument_list|)
expr_stmt|;
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_expr_stmt
name|Q_OPENGL_FUNCTIONS_DEBUG
end_expr_stmt
begin_expr_stmt
unit|}  inline
DECL|function|glBindRenderbuffer
name|void
name|QOpenGLFunctions
operator|::
name|glBindRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBindRenderbuffer
argument_list|(
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BindRenderbuffer
argument_list|(
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBlendColor
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBlendColor
argument_list|(
argument|GLclampf red
argument_list|,
argument|GLclampf green
argument_list|,
argument|GLclampf blue
argument_list|,
argument|GLclampf alpha
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBlendColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BlendColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBlendEquation
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBlendEquation
argument_list|(
argument|GLenum mode
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBlendEquation
argument_list|(
name|mode
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BlendEquation
argument_list|(
name|mode
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBlendEquationSeparate
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBlendEquationSeparate
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBlendEquationSeparate
argument_list|(
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BlendEquationSeparate
argument_list|(
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBlendFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBlendFuncSeparate
argument_list|(
argument|GLenum srcRGB
argument_list|,
argument|GLenum dstRGB
argument_list|,
argument|GLenum srcAlpha
argument_list|,
argument|GLenum dstAlpha
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBlendFuncSeparate
argument_list|(
name|srcRGB
argument_list|,
name|dstRGB
argument_list|,
name|srcAlpha
argument_list|,
name|dstAlpha
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BlendFuncSeparate
argument_list|(
name|srcRGB
argument_list|,
name|dstRGB
argument_list|,
name|srcAlpha
argument_list|,
name|dstAlpha
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBufferData
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|qopengl_GLsizeiptr size
argument_list|,
argument|const void* data
argument_list|,
argument|GLenum usage
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBufferData
argument_list|(
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BufferData
argument_list|(
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|qopengl_GLintptr offset
argument_list|,
argument|qopengl_GLsizeiptr size
argument_list|,
argument|const void* data
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glBufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|BufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glCheckFramebufferStatus
specifier|inline
name|GLenum
name|QOpenGLFunctions
operator|::
name|glCheckFramebufferStatus
argument_list|(
argument|GLenum target
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLenum
name|result
operator|=
operator|::
name|glCheckFramebufferStatus
argument_list|(
name|target
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLenum
name|result
operator|=
name|d_ptr
operator|->
name|CheckFramebufferStatus
argument_list|(
name|target
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glClearDepthf
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glClearDepthf
argument_list|(
argument|GLclampf depth
argument_list|)
block|{
ifndef|#
directive|ifndef
name|QT_OPENGL_ES
operator|::
name|glClearDepth
argument_list|(
name|depth
argument_list|)
block|;
else|#
directive|else
operator|::
name|glClearDepthf
argument_list|(
name|depth
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glCompileShader
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glCompileShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glCompileShader
argument_list|(
name|shader
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|CompileShader
argument_list|(
name|shader
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glCompressedTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glCompressedTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void* data
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glCompressedTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|CompressedTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glCompressedTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glCompressedTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void* data
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glCompressedTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|CompressedTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glCreateProgram
specifier|inline
name|GLuint
name|QOpenGLFunctions
operator|::
name|glCreateProgram
argument_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLuint
name|result
operator|=
operator|::
name|glCreateProgram
argument_list|()
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLuint
name|result
operator|=
name|d_ptr
operator|->
name|CreateProgram
argument_list|()
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCreateShader
specifier|inline
name|GLuint
name|QOpenGLFunctions
operator|::
name|glCreateShader
argument_list|(
argument|GLenum type
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLuint
name|result
operator|=
operator|::
name|glCreateShader
argument_list|(
name|type
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLuint
name|result
operator|=
name|d_ptr
operator|->
name|CreateShader
argument_list|(
name|type
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteBuffers
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDeleteBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint* buffers
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glDeleteBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|DeleteBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glDeleteFramebuffers
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDeleteFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint* framebuffers
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glDeleteFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|DeleteFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glDeleteProgram
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDeleteProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glDeleteProgram
argument_list|(
name|program
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|DeleteProgram
argument_list|(
name|program
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glDeleteRenderbuffers
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDeleteRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint* renderbuffers
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glDeleteRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|DeleteRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glDeleteShader
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDeleteShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glDeleteShader
argument_list|(
name|shader
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|DeleteShader
argument_list|(
name|shader
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glDepthRangef
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDepthRangef
argument_list|(
argument|GLclampf zNear
argument_list|,
argument|GLclampf zFar
argument_list|)
block|{
ifndef|#
directive|ifndef
name|QT_OPENGL_ES
operator|::
name|glDepthRange
argument_list|(
name|zNear
argument_list|,
name|zFar
argument_list|)
block|;
else|#
directive|else
operator|::
name|glDepthRangef
argument_list|(
name|zNear
argument_list|,
name|zFar
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glDetachShader
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDetachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glDetachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|DetachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glDisableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glDisableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glDisableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|DisableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glEnableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glEnableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glEnableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|EnableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glFramebufferRenderbuffer
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glFramebufferRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glFramebufferRenderbuffer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|FramebufferRenderbuffer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glFramebufferTexture2D
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glFramebufferTexture2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glFramebufferTexture2D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|FramebufferTexture2D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGenBuffers
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGenBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint* buffers
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGenBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GenBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGenerateMipmap
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGenerateMipmap
argument_list|(
argument|GLenum target
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGenerateMipmap
argument_list|(
name|target
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GenerateMipmap
argument_list|(
name|target
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGenFramebuffers
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGenFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint* framebuffers
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGenFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GenFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGenRenderbuffers
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGenRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint* renderbuffers
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGenRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GenRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetActiveAttrib
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetActiveAttrib
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei* length
argument_list|,
argument|GLint* size
argument_list|,
argument|GLenum* type
argument_list|,
argument|char* name
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetActiveAttrib
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetActiveAttrib
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetActiveUniform
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetActiveUniform
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei* length
argument_list|,
argument|GLint* size
argument_list|,
argument|GLenum* type
argument_list|,
argument|char* name
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetActiveUniform
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetActiveUniform
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetAttachedShaders
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetAttachedShaders
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei maxcount
argument_list|,
argument|GLsizei* count
argument_list|,
argument|GLuint* shaders
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetAttachedShaders
argument_list|(
name|program
argument_list|,
name|maxcount
argument_list|,
name|count
argument_list|,
name|shaders
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetAttachedShaders
argument_list|(
name|program
argument_list|,
name|maxcount
argument_list|,
name|count
argument_list|,
name|shaders
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetAttribLocation
specifier|inline
name|GLint
name|QOpenGLFunctions
operator|::
name|glGetAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const char* name
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLint
name|result
operator|=
operator|::
name|glGetAttribLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLint
name|result
operator|=
name|d_ptr
operator|->
name|GetAttribLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetBufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetBufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetBufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetBufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetFramebufferAttachmentParameteriv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetFramebufferAttachmentParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetFramebufferAttachmentParameteriv
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetFramebufferAttachmentParameteriv
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetProgramiv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetProgramiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetProgramiv
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetProgramiv
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetProgramInfoLog
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetProgramInfoLog
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei* length
argument_list|,
argument|char* infolog
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetProgramInfoLog
argument_list|(
name|program
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|infolog
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetProgramInfoLog
argument_list|(
name|program
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|infolog
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetRenderbufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetRenderbufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetRenderbufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetRenderbufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetShaderiv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetShaderiv
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetShaderiv
argument_list|(
name|shader
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetShaderiv
argument_list|(
name|shader
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetShaderInfoLog
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetShaderInfoLog
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei* length
argument_list|,
argument|char* infolog
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetShaderInfoLog
argument_list|(
name|shader
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|infolog
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetShaderInfoLog
argument_list|(
name|shader
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|infolog
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetShaderPrecisionFormat
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetShaderPrecisionFormat
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLenum precisiontype
argument_list|,
argument|GLint* range
argument_list|,
argument|GLint* precision
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetShaderPrecisionFormat
argument_list|(
name|shadertype
argument_list|,
name|precisiontype
argument_list|,
name|range
argument_list|,
name|precision
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetShaderPrecisionFormat
argument_list|(
name|shadertype
argument_list|,
name|precisiontype
argument_list|,
name|range
argument_list|,
name|precision
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetShaderSource
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei* length
argument_list|,
argument|char* source
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetShaderSource
argument_list|(
name|shader
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetShaderSource
argument_list|(
name|shader
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetUniformfv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetUniformfv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetUniformfv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetUniformiv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetUniformiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetUniformiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetUniformLocation
specifier|inline
name|GLint
name|QOpenGLFunctions
operator|::
name|glGetUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const char* name
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLint
name|result
operator|=
operator|::
name|glGetUniformLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLint
name|result
operator|=
name|d_ptr
operator|->
name|GetUniformLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribfv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetVertexAttribfv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetVertexAttribfv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetVertexAttribfv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetVertexAttribiv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetVertexAttribiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint* params
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetVertexAttribiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetVertexAttribiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glGetVertexAttribPointerv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glGetVertexAttribPointerv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|void** pointer
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glGetVertexAttribPointerv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|GetVertexAttribPointerv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glIsBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions
operator|::
name|glIsBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLboolean
name|result
operator|=
operator|::
name|glIsBuffer
argument_list|(
name|buffer
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLboolean
name|result
operator|=
name|d_ptr
operator|->
name|IsBuffer
argument_list|(
name|buffer
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsFramebuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions
operator|::
name|glIsFramebuffer
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLboolean
name|result
operator|=
operator|::
name|glIsFramebuffer
argument_list|(
name|framebuffer
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLboolean
name|result
operator|=
name|d_ptr
operator|->
name|IsFramebuffer
argument_list|(
name|framebuffer
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsProgram
specifier|inline
name|GLboolean
name|QOpenGLFunctions
operator|::
name|glIsProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLboolean
name|result
operator|=
operator|::
name|glIsProgram
argument_list|(
name|program
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLboolean
name|result
operator|=
name|d_ptr
operator|->
name|IsProgram
argument_list|(
name|program
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsRenderbuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions
operator|::
name|glIsRenderbuffer
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLboolean
name|result
operator|=
operator|::
name|glIsRenderbuffer
argument_list|(
name|renderbuffer
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLboolean
name|result
operator|=
name|d_ptr
operator|->
name|IsRenderbuffer
argument_list|(
name|renderbuffer
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsShader
specifier|inline
name|GLboolean
name|QOpenGLFunctions
operator|::
name|glIsShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
name|GLboolean
name|result
operator|=
operator|::
name|glIsShader
argument_list|(
name|shader
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|GLboolean
name|result
operator|=
name|d_ptr
operator|->
name|IsShader
argument_list|(
name|shader
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
return|return
name|result
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glLinkProgram
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glLinkProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glLinkProgram
argument_list|(
name|program
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|LinkProgram
argument_list|(
name|program
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glReleaseShaderCompiler
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glReleaseShaderCompiler
argument_list|()
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glReleaseShaderCompiler
argument_list|()
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|ReleaseShaderCompiler
argument_list|()
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glRenderbufferStorage
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glRenderbufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glRenderbufferStorage
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|RenderbufferStorage
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glSampleCoverage
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glSampleCoverage
argument_list|(
argument|GLclampf value
argument_list|,
argument|GLboolean invert
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glSampleCoverage
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|SampleCoverage
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glShaderBinary
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glShaderBinary
argument_list|(
argument|GLint n
argument_list|,
argument|const GLuint* shaders
argument_list|,
argument|GLenum binaryformat
argument_list|,
argument|const void* binary
argument_list|,
argument|GLint length
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glShaderBinary
argument_list|(
name|n
argument_list|,
name|shaders
argument_list|,
name|binaryformat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|ShaderBinary
argument_list|(
name|n
argument_list|,
name|shaders
argument_list|,
name|binaryformat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glShaderSource
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const char** string
argument_list|,
argument|const GLint* length
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glShaderSource
argument_list|(
name|shader
argument_list|,
name|count
argument_list|,
name|string
argument_list|,
name|length
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|ShaderSource
argument_list|(
name|shader
argument_list|,
name|count
argument_list|,
name|string
argument_list|,
name|length
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glStencilFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glStencilFuncSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glStencilFuncSeparate
argument_list|(
name|face
argument_list|,
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|StencilFuncSeparate
argument_list|(
name|face
argument_list|,
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glStencilMaskSeparate
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glStencilMaskSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint mask
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glStencilMaskSeparate
argument_list|(
name|face
argument_list|,
name|mask
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|StencilMaskSeparate
argument_list|(
name|face
argument_list|,
name|mask
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glStencilOpSeparate
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glStencilOpSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum fail
argument_list|,
argument|GLenum zfail
argument_list|,
argument|GLenum zpass
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glStencilOpSeparate
argument_list|(
name|face
argument_list|,
name|fail
argument_list|,
name|zfail
argument_list|,
name|zpass
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|StencilOpSeparate
argument_list|(
name|face
argument_list|,
name|fail
argument_list|,
name|zfail
argument_list|,
name|zpass
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform1f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform1f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform1f
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform1f
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform1fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform1fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform1fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform1fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform1i
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform1i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint x
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform1i
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform1i
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform1iv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform1iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform1iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform1iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform2f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform2f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform2f
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform2f
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform2fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform2i
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform2i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform2i
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform2i
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform2iv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform2iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform2iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform2iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform3f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform3f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform3f
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform3f
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform3fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform3i
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform3i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform3i
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform3i
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform3iv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform3iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform3iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform3iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform4f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform4f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform4f
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform4f
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform4fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform4i
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform4i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform4i
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform4i
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniform4iv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniform4iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint* v
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniform4iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|Uniform4iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniformMatrix2fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniformMatrix2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat* value
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniformMatrix2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|UniformMatrix2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniformMatrix3fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniformMatrix3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat* value
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniformMatrix3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|UniformMatrix3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUniformMatrix4fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUniformMatrix4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat* value
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUniformMatrix4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|UniformMatrix4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glUseProgram
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glUseProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glUseProgram
argument_list|(
name|program
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|UseProgram
argument_list|(
name|program
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glValidateProgram
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glValidateProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glValidateProgram
argument_list|(
name|program
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|ValidateProgram
argument_list|(
name|program
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib1f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib1f
argument_list|(
argument|GLuint indx
argument_list|,
argument|GLfloat x
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib1f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib1f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib1fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib1fv
argument_list|(
argument|GLuint indx
argument_list|,
argument|const GLfloat* values
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib1fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib1fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib2f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib2f
argument_list|(
argument|GLuint indx
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib2f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib2f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib2fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib2fv
argument_list|(
argument|GLuint indx
argument_list|,
argument|const GLfloat* values
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib2fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib2fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib3f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib3f
argument_list|(
argument|GLuint indx
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib3f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib3f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib3fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib3fv
argument_list|(
argument|GLuint indx
argument_list|,
argument|const GLfloat* values
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib3fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib3fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib4f
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib4f
argument_list|(
argument|GLuint indx
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib4f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib4f
argument_list|(
name|indx
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttrib4fv
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttrib4fv
argument_list|(
argument|GLuint indx
argument_list|,
argument|const GLfloat* values
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttrib4fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttrib4fv
argument_list|(
name|indx
argument_list|,
name|values
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
DECL|function|glVertexAttribPointer
specifier|inline
name|void
name|QOpenGLFunctions
operator|::
name|glVertexAttribPointer
argument_list|(
argument|GLuint indx
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void* ptr
argument_list|)
block|{
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
operator|::
name|glVertexAttribPointer
argument_list|(
name|indx
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|ptr
argument_list|)
block|;
else|#
directive|else
name|Q_ASSERT
argument_list|(
name|QOpenGLFunctions
operator|::
name|isInitialized
argument_list|(
name|d_ptr
argument_list|)
argument_list|)
block|;
name|d_ptr
operator|->
name|VertexAttribPointer
argument_list|(
name|indx
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|ptr
argument_list|)
block|;
endif|#
directive|endif
name|Q_OPENGL_FUNCTIONS_DEBUG
block|}
name|QT_END_NAMESPACE
name|QT_END_HEADER
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_OPENGL
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
