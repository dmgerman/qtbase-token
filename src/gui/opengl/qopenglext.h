begin_unit
begin_ifndef
ifndef|#
directive|ifndef
name|__glext_h_
end_ifndef
begin_define
DECL|macro|__glext_h_
define|#
directive|define
name|__glext_h_
end_define
begin_if
if|#
directive|if
literal|0
end_if
begin_pragma
pragma|#
directive|pragma
name|qt_no_master_include
end_pragma
begin_pragma
pragma|#
directive|pragma
name|qt_sync_stop_processing
end_pragma
begin_endif
endif|#
directive|endif
end_endif
begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef
begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* ** Copyright (c) 2007-2012 The Khronos Group Inc. **  ** Permission is hereby granted, free of charge, to any person obtaining a ** copy of this software and/or associated documentation files (the ** "Materials"), to deal in the Materials without restriction, including ** without limitation the rights to use, copy, modify, merge, publish, ** distribute, sublicense, and/or sell copies of the Materials, and to ** permit persons to whom the Materials are furnished to do so, subject to ** the following conditions: **  ** The above copyright notice and this permission notice shall be included ** in all copies or substantial portions of the Materials. **  ** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS. */
comment|/* Header file version number, required by OpenGL ABI for Linux */
comment|/* glext.h last updated $Date: 2012-06-18 11:26:35 -0700 (Mon, 18 Jun 2012) $ */
comment|/* Current version at http://www.opengl.org/registry/ */
DECL|macro|GL_GLEXT_VERSION
define|#
directive|define
name|GL_GLEXT_VERSION
value|82
comment|/* Function declaration macros - to move into glplatform.h */
if|#
directive|if
name|defined
argument_list|(
name|_WIN32
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|APIENTRY
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|__CYGWIN__
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|__SCITECH_SNAP__
argument_list|)
DECL|macro|WIN32_LEAN_AND_MEAN
define|#
directive|define
name|WIN32_LEAN_AND_MEAN
value|1
include|#
directive|include
file|<windows.h>
endif|#
directive|endif
ifndef|#
directive|ifndef
name|APIENTRY
DECL|macro|APIENTRY
define|#
directive|define
name|APIENTRY
endif|#
directive|endif
ifndef|#
directive|ifndef
name|APIENTRYP
DECL|macro|APIENTRYP
define|#
directive|define
name|APIENTRYP
value|APIENTRY *
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GLAPI
DECL|macro|GLAPI
define|#
directive|define
name|GLAPI
value|extern
endif|#
directive|endif
comment|/*************************************************************/
ifndef|#
directive|ifndef
name|GL_VERSION_1_2
DECL|macro|GL_UNSIGNED_BYTE_3_3_2
define|#
directive|define
name|GL_UNSIGNED_BYTE_3_3_2
value|0x8032
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4
value|0x8033
DECL|macro|GL_UNSIGNED_SHORT_5_5_5_1
define|#
directive|define
name|GL_UNSIGNED_SHORT_5_5_5_1
value|0x8034
DECL|macro|GL_UNSIGNED_INT_8_8_8_8
define|#
directive|define
name|GL_UNSIGNED_INT_8_8_8_8
value|0x8035
DECL|macro|GL_UNSIGNED_INT_10_10_10_2
define|#
directive|define
name|GL_UNSIGNED_INT_10_10_10_2
value|0x8036
DECL|macro|GL_TEXTURE_BINDING_3D
define|#
directive|define
name|GL_TEXTURE_BINDING_3D
value|0x806A
DECL|macro|GL_PACK_SKIP_IMAGES
define|#
directive|define
name|GL_PACK_SKIP_IMAGES
value|0x806B
DECL|macro|GL_PACK_IMAGE_HEIGHT
define|#
directive|define
name|GL_PACK_IMAGE_HEIGHT
value|0x806C
DECL|macro|GL_UNPACK_SKIP_IMAGES
define|#
directive|define
name|GL_UNPACK_SKIP_IMAGES
value|0x806D
DECL|macro|GL_UNPACK_IMAGE_HEIGHT
define|#
directive|define
name|GL_UNPACK_IMAGE_HEIGHT
value|0x806E
DECL|macro|GL_TEXTURE_3D
define|#
directive|define
name|GL_TEXTURE_3D
value|0x806F
DECL|macro|GL_PROXY_TEXTURE_3D
define|#
directive|define
name|GL_PROXY_TEXTURE_3D
value|0x8070
DECL|macro|GL_TEXTURE_DEPTH
define|#
directive|define
name|GL_TEXTURE_DEPTH
value|0x8071
DECL|macro|GL_TEXTURE_WRAP_R
define|#
directive|define
name|GL_TEXTURE_WRAP_R
value|0x8072
DECL|macro|GL_MAX_3D_TEXTURE_SIZE
define|#
directive|define
name|GL_MAX_3D_TEXTURE_SIZE
value|0x8073
DECL|macro|GL_UNSIGNED_BYTE_2_3_3_REV
define|#
directive|define
name|GL_UNSIGNED_BYTE_2_3_3_REV
value|0x8362
DECL|macro|GL_UNSIGNED_SHORT_5_6_5
define|#
directive|define
name|GL_UNSIGNED_SHORT_5_6_5
value|0x8363
DECL|macro|GL_UNSIGNED_SHORT_5_6_5_REV
define|#
directive|define
name|GL_UNSIGNED_SHORT_5_6_5_REV
value|0x8364
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4_REV
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4_REV
value|0x8365
DECL|macro|GL_UNSIGNED_SHORT_1_5_5_5_REV
define|#
directive|define
name|GL_UNSIGNED_SHORT_1_5_5_5_REV
value|0x8366
DECL|macro|GL_UNSIGNED_INT_8_8_8_8_REV
define|#
directive|define
name|GL_UNSIGNED_INT_8_8_8_8_REV
value|0x8367
DECL|macro|GL_UNSIGNED_INT_2_10_10_10_REV
define|#
directive|define
name|GL_UNSIGNED_INT_2_10_10_10_REV
value|0x8368
DECL|macro|GL_BGR
define|#
directive|define
name|GL_BGR
value|0x80E0
DECL|macro|GL_BGRA
define|#
directive|define
name|GL_BGRA
value|0x80E1
DECL|macro|GL_MAX_ELEMENTS_VERTICES
define|#
directive|define
name|GL_MAX_ELEMENTS_VERTICES
value|0x80E8
DECL|macro|GL_MAX_ELEMENTS_INDICES
define|#
directive|define
name|GL_MAX_ELEMENTS_INDICES
value|0x80E9
DECL|macro|GL_CLAMP_TO_EDGE
define|#
directive|define
name|GL_CLAMP_TO_EDGE
value|0x812F
DECL|macro|GL_TEXTURE_MIN_LOD
define|#
directive|define
name|GL_TEXTURE_MIN_LOD
value|0x813A
DECL|macro|GL_TEXTURE_MAX_LOD
define|#
directive|define
name|GL_TEXTURE_MAX_LOD
value|0x813B
DECL|macro|GL_TEXTURE_BASE_LEVEL
define|#
directive|define
name|GL_TEXTURE_BASE_LEVEL
value|0x813C
DECL|macro|GL_TEXTURE_MAX_LEVEL
define|#
directive|define
name|GL_TEXTURE_MAX_LEVEL
value|0x813D
DECL|macro|GL_SMOOTH_POINT_SIZE_RANGE
define|#
directive|define
name|GL_SMOOTH_POINT_SIZE_RANGE
value|0x0B12
DECL|macro|GL_SMOOTH_POINT_SIZE_GRANULARITY
define|#
directive|define
name|GL_SMOOTH_POINT_SIZE_GRANULARITY
value|0x0B13
DECL|macro|GL_SMOOTH_LINE_WIDTH_RANGE
define|#
directive|define
name|GL_SMOOTH_LINE_WIDTH_RANGE
value|0x0B22
DECL|macro|GL_SMOOTH_LINE_WIDTH_GRANULARITY
define|#
directive|define
name|GL_SMOOTH_LINE_WIDTH_GRANULARITY
value|0x0B23
DECL|macro|GL_ALIASED_LINE_WIDTH_RANGE
define|#
directive|define
name|GL_ALIASED_LINE_WIDTH_RANGE
value|0x846E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_2_DEPRECATED
DECL|macro|GL_RESCALE_NORMAL
define|#
directive|define
name|GL_RESCALE_NORMAL
value|0x803A
DECL|macro|GL_LIGHT_MODEL_COLOR_CONTROL
define|#
directive|define
name|GL_LIGHT_MODEL_COLOR_CONTROL
value|0x81F8
DECL|macro|GL_SINGLE_COLOR
define|#
directive|define
name|GL_SINGLE_COLOR
value|0x81F9
DECL|macro|GL_SEPARATE_SPECULAR_COLOR
define|#
directive|define
name|GL_SEPARATE_SPECULAR_COLOR
value|0x81FA
DECL|macro|GL_ALIASED_POINT_SIZE_RANGE
define|#
directive|define
name|GL_ALIASED_POINT_SIZE_RANGE
value|0x846D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_imaging
DECL|macro|GL_CONSTANT_COLOR
define|#
directive|define
name|GL_CONSTANT_COLOR
value|0x8001
DECL|macro|GL_ONE_MINUS_CONSTANT_COLOR
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_COLOR
value|0x8002
DECL|macro|GL_CONSTANT_ALPHA
define|#
directive|define
name|GL_CONSTANT_ALPHA
value|0x8003
DECL|macro|GL_ONE_MINUS_CONSTANT_ALPHA
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_ALPHA
value|0x8004
DECL|macro|GL_BLEND_COLOR
define|#
directive|define
name|GL_BLEND_COLOR
value|0x8005
DECL|macro|GL_FUNC_ADD
define|#
directive|define
name|GL_FUNC_ADD
value|0x8006
DECL|macro|GL_MIN
define|#
directive|define
name|GL_MIN
value|0x8007
DECL|macro|GL_MAX
define|#
directive|define
name|GL_MAX
value|0x8008
DECL|macro|GL_BLEND_EQUATION
define|#
directive|define
name|GL_BLEND_EQUATION
value|0x8009
DECL|macro|GL_FUNC_SUBTRACT
define|#
directive|define
name|GL_FUNC_SUBTRACT
value|0x800A
DECL|macro|GL_FUNC_REVERSE_SUBTRACT
define|#
directive|define
name|GL_FUNC_REVERSE_SUBTRACT
value|0x800B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_imaging_DEPRECATED
DECL|macro|GL_CONVOLUTION_1D
define|#
directive|define
name|GL_CONVOLUTION_1D
value|0x8010
DECL|macro|GL_CONVOLUTION_2D
define|#
directive|define
name|GL_CONVOLUTION_2D
value|0x8011
DECL|macro|GL_SEPARABLE_2D
define|#
directive|define
name|GL_SEPARABLE_2D
value|0x8012
DECL|macro|GL_CONVOLUTION_BORDER_MODE
define|#
directive|define
name|GL_CONVOLUTION_BORDER_MODE
value|0x8013
DECL|macro|GL_CONVOLUTION_FILTER_SCALE
define|#
directive|define
name|GL_CONVOLUTION_FILTER_SCALE
value|0x8014
DECL|macro|GL_CONVOLUTION_FILTER_BIAS
define|#
directive|define
name|GL_CONVOLUTION_FILTER_BIAS
value|0x8015
DECL|macro|GL_REDUCE
define|#
directive|define
name|GL_REDUCE
value|0x8016
DECL|macro|GL_CONVOLUTION_FORMAT
define|#
directive|define
name|GL_CONVOLUTION_FORMAT
value|0x8017
DECL|macro|GL_CONVOLUTION_WIDTH
define|#
directive|define
name|GL_CONVOLUTION_WIDTH
value|0x8018
DECL|macro|GL_CONVOLUTION_HEIGHT
define|#
directive|define
name|GL_CONVOLUTION_HEIGHT
value|0x8019
DECL|macro|GL_MAX_CONVOLUTION_WIDTH
define|#
directive|define
name|GL_MAX_CONVOLUTION_WIDTH
value|0x801A
DECL|macro|GL_MAX_CONVOLUTION_HEIGHT
define|#
directive|define
name|GL_MAX_CONVOLUTION_HEIGHT
value|0x801B
DECL|macro|GL_POST_CONVOLUTION_RED_SCALE
define|#
directive|define
name|GL_POST_CONVOLUTION_RED_SCALE
value|0x801C
DECL|macro|GL_POST_CONVOLUTION_GREEN_SCALE
define|#
directive|define
name|GL_POST_CONVOLUTION_GREEN_SCALE
value|0x801D
DECL|macro|GL_POST_CONVOLUTION_BLUE_SCALE
define|#
directive|define
name|GL_POST_CONVOLUTION_BLUE_SCALE
value|0x801E
DECL|macro|GL_POST_CONVOLUTION_ALPHA_SCALE
define|#
directive|define
name|GL_POST_CONVOLUTION_ALPHA_SCALE
value|0x801F
DECL|macro|GL_POST_CONVOLUTION_RED_BIAS
define|#
directive|define
name|GL_POST_CONVOLUTION_RED_BIAS
value|0x8020
DECL|macro|GL_POST_CONVOLUTION_GREEN_BIAS
define|#
directive|define
name|GL_POST_CONVOLUTION_GREEN_BIAS
value|0x8021
DECL|macro|GL_POST_CONVOLUTION_BLUE_BIAS
define|#
directive|define
name|GL_POST_CONVOLUTION_BLUE_BIAS
value|0x8022
DECL|macro|GL_POST_CONVOLUTION_ALPHA_BIAS
define|#
directive|define
name|GL_POST_CONVOLUTION_ALPHA_BIAS
value|0x8023
DECL|macro|GL_HISTOGRAM
define|#
directive|define
name|GL_HISTOGRAM
value|0x8024
DECL|macro|GL_PROXY_HISTOGRAM
define|#
directive|define
name|GL_PROXY_HISTOGRAM
value|0x8025
DECL|macro|GL_HISTOGRAM_WIDTH
define|#
directive|define
name|GL_HISTOGRAM_WIDTH
value|0x8026
DECL|macro|GL_HISTOGRAM_FORMAT
define|#
directive|define
name|GL_HISTOGRAM_FORMAT
value|0x8027
DECL|macro|GL_HISTOGRAM_RED_SIZE
define|#
directive|define
name|GL_HISTOGRAM_RED_SIZE
value|0x8028
DECL|macro|GL_HISTOGRAM_GREEN_SIZE
define|#
directive|define
name|GL_HISTOGRAM_GREEN_SIZE
value|0x8029
DECL|macro|GL_HISTOGRAM_BLUE_SIZE
define|#
directive|define
name|GL_HISTOGRAM_BLUE_SIZE
value|0x802A
DECL|macro|GL_HISTOGRAM_ALPHA_SIZE
define|#
directive|define
name|GL_HISTOGRAM_ALPHA_SIZE
value|0x802B
DECL|macro|GL_HISTOGRAM_LUMINANCE_SIZE
define|#
directive|define
name|GL_HISTOGRAM_LUMINANCE_SIZE
value|0x802C
DECL|macro|GL_HISTOGRAM_SINK
define|#
directive|define
name|GL_HISTOGRAM_SINK
value|0x802D
DECL|macro|GL_MINMAX
define|#
directive|define
name|GL_MINMAX
value|0x802E
DECL|macro|GL_MINMAX_FORMAT
define|#
directive|define
name|GL_MINMAX_FORMAT
value|0x802F
DECL|macro|GL_MINMAX_SINK
define|#
directive|define
name|GL_MINMAX_SINK
value|0x8030
DECL|macro|GL_TABLE_TOO_LARGE
define|#
directive|define
name|GL_TABLE_TOO_LARGE
value|0x8031
DECL|macro|GL_COLOR_MATRIX
define|#
directive|define
name|GL_COLOR_MATRIX
value|0x80B1
DECL|macro|GL_COLOR_MATRIX_STACK_DEPTH
define|#
directive|define
name|GL_COLOR_MATRIX_STACK_DEPTH
value|0x80B2
DECL|macro|GL_MAX_COLOR_MATRIX_STACK_DEPTH
define|#
directive|define
name|GL_MAX_COLOR_MATRIX_STACK_DEPTH
value|0x80B3
DECL|macro|GL_POST_COLOR_MATRIX_RED_SCALE
define|#
directive|define
name|GL_POST_COLOR_MATRIX_RED_SCALE
value|0x80B4
DECL|macro|GL_POST_COLOR_MATRIX_GREEN_SCALE
define|#
directive|define
name|GL_POST_COLOR_MATRIX_GREEN_SCALE
value|0x80B5
DECL|macro|GL_POST_COLOR_MATRIX_BLUE_SCALE
define|#
directive|define
name|GL_POST_COLOR_MATRIX_BLUE_SCALE
value|0x80B6
DECL|macro|GL_POST_COLOR_MATRIX_ALPHA_SCALE
define|#
directive|define
name|GL_POST_COLOR_MATRIX_ALPHA_SCALE
value|0x80B7
DECL|macro|GL_POST_COLOR_MATRIX_RED_BIAS
define|#
directive|define
name|GL_POST_COLOR_MATRIX_RED_BIAS
value|0x80B8
DECL|macro|GL_POST_COLOR_MATRIX_GREEN_BIAS
define|#
directive|define
name|GL_POST_COLOR_MATRIX_GREEN_BIAS
value|0x80B9
DECL|macro|GL_POST_COLOR_MATRIX_BLUE_BIAS
define|#
directive|define
name|GL_POST_COLOR_MATRIX_BLUE_BIAS
value|0x80BA
DECL|macro|GL_POST_COLOR_MATRIX_ALPHA_BIAS
define|#
directive|define
name|GL_POST_COLOR_MATRIX_ALPHA_BIAS
value|0x80BB
DECL|macro|GL_COLOR_TABLE
define|#
directive|define
name|GL_COLOR_TABLE
value|0x80D0
DECL|macro|GL_POST_CONVOLUTION_COLOR_TABLE
define|#
directive|define
name|GL_POST_CONVOLUTION_COLOR_TABLE
value|0x80D1
DECL|macro|GL_POST_COLOR_MATRIX_COLOR_TABLE
define|#
directive|define
name|GL_POST_COLOR_MATRIX_COLOR_TABLE
value|0x80D2
DECL|macro|GL_PROXY_COLOR_TABLE
define|#
directive|define
name|GL_PROXY_COLOR_TABLE
value|0x80D3
DECL|macro|GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
define|#
directive|define
name|GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
value|0x80D4
DECL|macro|GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
define|#
directive|define
name|GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
value|0x80D5
DECL|macro|GL_COLOR_TABLE_SCALE
define|#
directive|define
name|GL_COLOR_TABLE_SCALE
value|0x80D6
DECL|macro|GL_COLOR_TABLE_BIAS
define|#
directive|define
name|GL_COLOR_TABLE_BIAS
value|0x80D7
DECL|macro|GL_COLOR_TABLE_FORMAT
define|#
directive|define
name|GL_COLOR_TABLE_FORMAT
value|0x80D8
DECL|macro|GL_COLOR_TABLE_WIDTH
define|#
directive|define
name|GL_COLOR_TABLE_WIDTH
value|0x80D9
DECL|macro|GL_COLOR_TABLE_RED_SIZE
define|#
directive|define
name|GL_COLOR_TABLE_RED_SIZE
value|0x80DA
DECL|macro|GL_COLOR_TABLE_GREEN_SIZE
define|#
directive|define
name|GL_COLOR_TABLE_GREEN_SIZE
value|0x80DB
DECL|macro|GL_COLOR_TABLE_BLUE_SIZE
define|#
directive|define
name|GL_COLOR_TABLE_BLUE_SIZE
value|0x80DC
DECL|macro|GL_COLOR_TABLE_ALPHA_SIZE
define|#
directive|define
name|GL_COLOR_TABLE_ALPHA_SIZE
value|0x80DD
DECL|macro|GL_COLOR_TABLE_LUMINANCE_SIZE
define|#
directive|define
name|GL_COLOR_TABLE_LUMINANCE_SIZE
value|0x80DE
DECL|macro|GL_COLOR_TABLE_INTENSITY_SIZE
define|#
directive|define
name|GL_COLOR_TABLE_INTENSITY_SIZE
value|0x80DF
DECL|macro|GL_CONSTANT_BORDER
define|#
directive|define
name|GL_CONSTANT_BORDER
value|0x8151
DECL|macro|GL_REPLICATE_BORDER
define|#
directive|define
name|GL_REPLICATE_BORDER
value|0x8153
DECL|macro|GL_CONVOLUTION_BORDER_COLOR
define|#
directive|define
name|GL_CONVOLUTION_BORDER_COLOR
value|0x8154
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_3
DECL|macro|GL_TEXTURE0
define|#
directive|define
name|GL_TEXTURE0
value|0x84C0
DECL|macro|GL_TEXTURE1
define|#
directive|define
name|GL_TEXTURE1
value|0x84C1
DECL|macro|GL_TEXTURE2
define|#
directive|define
name|GL_TEXTURE2
value|0x84C2
DECL|macro|GL_TEXTURE3
define|#
directive|define
name|GL_TEXTURE3
value|0x84C3
DECL|macro|GL_TEXTURE4
define|#
directive|define
name|GL_TEXTURE4
value|0x84C4
DECL|macro|GL_TEXTURE5
define|#
directive|define
name|GL_TEXTURE5
value|0x84C5
DECL|macro|GL_TEXTURE6
define|#
directive|define
name|GL_TEXTURE6
value|0x84C6
DECL|macro|GL_TEXTURE7
define|#
directive|define
name|GL_TEXTURE7
value|0x84C7
DECL|macro|GL_TEXTURE8
define|#
directive|define
name|GL_TEXTURE8
value|0x84C8
DECL|macro|GL_TEXTURE9
define|#
directive|define
name|GL_TEXTURE9
value|0x84C9
DECL|macro|GL_TEXTURE10
define|#
directive|define
name|GL_TEXTURE10
value|0x84CA
DECL|macro|GL_TEXTURE11
define|#
directive|define
name|GL_TEXTURE11
value|0x84CB
DECL|macro|GL_TEXTURE12
define|#
directive|define
name|GL_TEXTURE12
value|0x84CC
DECL|macro|GL_TEXTURE13
define|#
directive|define
name|GL_TEXTURE13
value|0x84CD
DECL|macro|GL_TEXTURE14
define|#
directive|define
name|GL_TEXTURE14
value|0x84CE
DECL|macro|GL_TEXTURE15
define|#
directive|define
name|GL_TEXTURE15
value|0x84CF
DECL|macro|GL_TEXTURE16
define|#
directive|define
name|GL_TEXTURE16
value|0x84D0
DECL|macro|GL_TEXTURE17
define|#
directive|define
name|GL_TEXTURE17
value|0x84D1
DECL|macro|GL_TEXTURE18
define|#
directive|define
name|GL_TEXTURE18
value|0x84D2
DECL|macro|GL_TEXTURE19
define|#
directive|define
name|GL_TEXTURE19
value|0x84D3
DECL|macro|GL_TEXTURE20
define|#
directive|define
name|GL_TEXTURE20
value|0x84D4
DECL|macro|GL_TEXTURE21
define|#
directive|define
name|GL_TEXTURE21
value|0x84D5
DECL|macro|GL_TEXTURE22
define|#
directive|define
name|GL_TEXTURE22
value|0x84D6
DECL|macro|GL_TEXTURE23
define|#
directive|define
name|GL_TEXTURE23
value|0x84D7
DECL|macro|GL_TEXTURE24
define|#
directive|define
name|GL_TEXTURE24
value|0x84D8
DECL|macro|GL_TEXTURE25
define|#
directive|define
name|GL_TEXTURE25
value|0x84D9
DECL|macro|GL_TEXTURE26
define|#
directive|define
name|GL_TEXTURE26
value|0x84DA
DECL|macro|GL_TEXTURE27
define|#
directive|define
name|GL_TEXTURE27
value|0x84DB
DECL|macro|GL_TEXTURE28
define|#
directive|define
name|GL_TEXTURE28
value|0x84DC
DECL|macro|GL_TEXTURE29
define|#
directive|define
name|GL_TEXTURE29
value|0x84DD
DECL|macro|GL_TEXTURE30
define|#
directive|define
name|GL_TEXTURE30
value|0x84DE
DECL|macro|GL_TEXTURE31
define|#
directive|define
name|GL_TEXTURE31
value|0x84DF
DECL|macro|GL_ACTIVE_TEXTURE
define|#
directive|define
name|GL_ACTIVE_TEXTURE
value|0x84E0
DECL|macro|GL_MULTISAMPLE
define|#
directive|define
name|GL_MULTISAMPLE
value|0x809D
DECL|macro|GL_SAMPLE_ALPHA_TO_COVERAGE
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_COVERAGE
value|0x809E
DECL|macro|GL_SAMPLE_ALPHA_TO_ONE
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_ONE
value|0x809F
DECL|macro|GL_SAMPLE_COVERAGE
define|#
directive|define
name|GL_SAMPLE_COVERAGE
value|0x80A0
DECL|macro|GL_SAMPLE_BUFFERS
define|#
directive|define
name|GL_SAMPLE_BUFFERS
value|0x80A8
DECL|macro|GL_SAMPLES
define|#
directive|define
name|GL_SAMPLES
value|0x80A9
DECL|macro|GL_SAMPLE_COVERAGE_VALUE
define|#
directive|define
name|GL_SAMPLE_COVERAGE_VALUE
value|0x80AA
DECL|macro|GL_SAMPLE_COVERAGE_INVERT
define|#
directive|define
name|GL_SAMPLE_COVERAGE_INVERT
value|0x80AB
DECL|macro|GL_TEXTURE_CUBE_MAP
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP
value|0x8513
DECL|macro|GL_TEXTURE_BINDING_CUBE_MAP
define|#
directive|define
name|GL_TEXTURE_BINDING_CUBE_MAP
value|0x8514
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_X
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_X
value|0x8515
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_X
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_X
value|0x8516
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Y
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Y
value|0x8517
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
value|0x8518
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Z
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Z
value|0x8519
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
value|0x851A
DECL|macro|GL_PROXY_TEXTURE_CUBE_MAP
define|#
directive|define
name|GL_PROXY_TEXTURE_CUBE_MAP
value|0x851B
DECL|macro|GL_MAX_CUBE_MAP_TEXTURE_SIZE
define|#
directive|define
name|GL_MAX_CUBE_MAP_TEXTURE_SIZE
value|0x851C
DECL|macro|GL_COMPRESSED_RGB
define|#
directive|define
name|GL_COMPRESSED_RGB
value|0x84ED
DECL|macro|GL_COMPRESSED_RGBA
define|#
directive|define
name|GL_COMPRESSED_RGBA
value|0x84EE
DECL|macro|GL_TEXTURE_COMPRESSION_HINT
define|#
directive|define
name|GL_TEXTURE_COMPRESSION_HINT
value|0x84EF
DECL|macro|GL_TEXTURE_COMPRESSED_IMAGE_SIZE
define|#
directive|define
name|GL_TEXTURE_COMPRESSED_IMAGE_SIZE
value|0x86A0
DECL|macro|GL_TEXTURE_COMPRESSED
define|#
directive|define
name|GL_TEXTURE_COMPRESSED
value|0x86A1
DECL|macro|GL_NUM_COMPRESSED_TEXTURE_FORMATS
define|#
directive|define
name|GL_NUM_COMPRESSED_TEXTURE_FORMATS
value|0x86A2
DECL|macro|GL_COMPRESSED_TEXTURE_FORMATS
define|#
directive|define
name|GL_COMPRESSED_TEXTURE_FORMATS
value|0x86A3
DECL|macro|GL_CLAMP_TO_BORDER
define|#
directive|define
name|GL_CLAMP_TO_BORDER
value|0x812D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_3_DEPRECATED
DECL|macro|GL_CLIENT_ACTIVE_TEXTURE
define|#
directive|define
name|GL_CLIENT_ACTIVE_TEXTURE
value|0x84E1
DECL|macro|GL_MAX_TEXTURE_UNITS
define|#
directive|define
name|GL_MAX_TEXTURE_UNITS
value|0x84E2
DECL|macro|GL_TRANSPOSE_MODELVIEW_MATRIX
define|#
directive|define
name|GL_TRANSPOSE_MODELVIEW_MATRIX
value|0x84E3
DECL|macro|GL_TRANSPOSE_PROJECTION_MATRIX
define|#
directive|define
name|GL_TRANSPOSE_PROJECTION_MATRIX
value|0x84E4
DECL|macro|GL_TRANSPOSE_TEXTURE_MATRIX
define|#
directive|define
name|GL_TRANSPOSE_TEXTURE_MATRIX
value|0x84E5
DECL|macro|GL_TRANSPOSE_COLOR_MATRIX
define|#
directive|define
name|GL_TRANSPOSE_COLOR_MATRIX
value|0x84E6
DECL|macro|GL_MULTISAMPLE_BIT
define|#
directive|define
name|GL_MULTISAMPLE_BIT
value|0x20000000
DECL|macro|GL_NORMAL_MAP
define|#
directive|define
name|GL_NORMAL_MAP
value|0x8511
DECL|macro|GL_REFLECTION_MAP
define|#
directive|define
name|GL_REFLECTION_MAP
value|0x8512
DECL|macro|GL_COMPRESSED_ALPHA
define|#
directive|define
name|GL_COMPRESSED_ALPHA
value|0x84E9
DECL|macro|GL_COMPRESSED_LUMINANCE
define|#
directive|define
name|GL_COMPRESSED_LUMINANCE
value|0x84EA
DECL|macro|GL_COMPRESSED_LUMINANCE_ALPHA
define|#
directive|define
name|GL_COMPRESSED_LUMINANCE_ALPHA
value|0x84EB
DECL|macro|GL_COMPRESSED_INTENSITY
define|#
directive|define
name|GL_COMPRESSED_INTENSITY
value|0x84EC
DECL|macro|GL_COMBINE
define|#
directive|define
name|GL_COMBINE
value|0x8570
DECL|macro|GL_COMBINE_RGB
define|#
directive|define
name|GL_COMBINE_RGB
value|0x8571
DECL|macro|GL_COMBINE_ALPHA
define|#
directive|define
name|GL_COMBINE_ALPHA
value|0x8572
DECL|macro|GL_SOURCE0_RGB
define|#
directive|define
name|GL_SOURCE0_RGB
value|0x8580
DECL|macro|GL_SOURCE1_RGB
define|#
directive|define
name|GL_SOURCE1_RGB
value|0x8581
DECL|macro|GL_SOURCE2_RGB
define|#
directive|define
name|GL_SOURCE2_RGB
value|0x8582
DECL|macro|GL_SOURCE0_ALPHA
define|#
directive|define
name|GL_SOURCE0_ALPHA
value|0x8588
DECL|macro|GL_SOURCE1_ALPHA
define|#
directive|define
name|GL_SOURCE1_ALPHA
value|0x8589
DECL|macro|GL_SOURCE2_ALPHA
define|#
directive|define
name|GL_SOURCE2_ALPHA
value|0x858A
DECL|macro|GL_OPERAND0_RGB
define|#
directive|define
name|GL_OPERAND0_RGB
value|0x8590
DECL|macro|GL_OPERAND1_RGB
define|#
directive|define
name|GL_OPERAND1_RGB
value|0x8591
DECL|macro|GL_OPERAND2_RGB
define|#
directive|define
name|GL_OPERAND2_RGB
value|0x8592
DECL|macro|GL_OPERAND0_ALPHA
define|#
directive|define
name|GL_OPERAND0_ALPHA
value|0x8598
DECL|macro|GL_OPERAND1_ALPHA
define|#
directive|define
name|GL_OPERAND1_ALPHA
value|0x8599
DECL|macro|GL_OPERAND2_ALPHA
define|#
directive|define
name|GL_OPERAND2_ALPHA
value|0x859A
DECL|macro|GL_RGB_SCALE
define|#
directive|define
name|GL_RGB_SCALE
value|0x8573
DECL|macro|GL_ADD_SIGNED
define|#
directive|define
name|GL_ADD_SIGNED
value|0x8574
DECL|macro|GL_INTERPOLATE
define|#
directive|define
name|GL_INTERPOLATE
value|0x8575
DECL|macro|GL_SUBTRACT
define|#
directive|define
name|GL_SUBTRACT
value|0x84E7
DECL|macro|GL_CONSTANT
define|#
directive|define
name|GL_CONSTANT
value|0x8576
DECL|macro|GL_PRIMARY_COLOR
define|#
directive|define
name|GL_PRIMARY_COLOR
value|0x8577
DECL|macro|GL_PREVIOUS
define|#
directive|define
name|GL_PREVIOUS
value|0x8578
DECL|macro|GL_DOT3_RGB
define|#
directive|define
name|GL_DOT3_RGB
value|0x86AE
DECL|macro|GL_DOT3_RGBA
define|#
directive|define
name|GL_DOT3_RGBA
value|0x86AF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_4
DECL|macro|GL_BLEND_DST_RGB
define|#
directive|define
name|GL_BLEND_DST_RGB
value|0x80C8
DECL|macro|GL_BLEND_SRC_RGB
define|#
directive|define
name|GL_BLEND_SRC_RGB
value|0x80C9
DECL|macro|GL_BLEND_DST_ALPHA
define|#
directive|define
name|GL_BLEND_DST_ALPHA
value|0x80CA
DECL|macro|GL_BLEND_SRC_ALPHA
define|#
directive|define
name|GL_BLEND_SRC_ALPHA
value|0x80CB
DECL|macro|GL_POINT_FADE_THRESHOLD_SIZE
define|#
directive|define
name|GL_POINT_FADE_THRESHOLD_SIZE
value|0x8128
DECL|macro|GL_DEPTH_COMPONENT16
define|#
directive|define
name|GL_DEPTH_COMPONENT16
value|0x81A5
DECL|macro|GL_DEPTH_COMPONENT24
define|#
directive|define
name|GL_DEPTH_COMPONENT24
value|0x81A6
DECL|macro|GL_DEPTH_COMPONENT32
define|#
directive|define
name|GL_DEPTH_COMPONENT32
value|0x81A7
DECL|macro|GL_MIRRORED_REPEAT
define|#
directive|define
name|GL_MIRRORED_REPEAT
value|0x8370
DECL|macro|GL_MAX_TEXTURE_LOD_BIAS
define|#
directive|define
name|GL_MAX_TEXTURE_LOD_BIAS
value|0x84FD
DECL|macro|GL_TEXTURE_LOD_BIAS
define|#
directive|define
name|GL_TEXTURE_LOD_BIAS
value|0x8501
DECL|macro|GL_INCR_WRAP
define|#
directive|define
name|GL_INCR_WRAP
value|0x8507
DECL|macro|GL_DECR_WRAP
define|#
directive|define
name|GL_DECR_WRAP
value|0x8508
DECL|macro|GL_TEXTURE_DEPTH_SIZE
define|#
directive|define
name|GL_TEXTURE_DEPTH_SIZE
value|0x884A
DECL|macro|GL_TEXTURE_COMPARE_MODE
define|#
directive|define
name|GL_TEXTURE_COMPARE_MODE
value|0x884C
DECL|macro|GL_TEXTURE_COMPARE_FUNC
define|#
directive|define
name|GL_TEXTURE_COMPARE_FUNC
value|0x884D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_4_DEPRECATED
DECL|macro|GL_POINT_SIZE_MIN
define|#
directive|define
name|GL_POINT_SIZE_MIN
value|0x8126
DECL|macro|GL_POINT_SIZE_MAX
define|#
directive|define
name|GL_POINT_SIZE_MAX
value|0x8127
DECL|macro|GL_POINT_DISTANCE_ATTENUATION
define|#
directive|define
name|GL_POINT_DISTANCE_ATTENUATION
value|0x8129
DECL|macro|GL_GENERATE_MIPMAP
define|#
directive|define
name|GL_GENERATE_MIPMAP
value|0x8191
DECL|macro|GL_GENERATE_MIPMAP_HINT
define|#
directive|define
name|GL_GENERATE_MIPMAP_HINT
value|0x8192
DECL|macro|GL_FOG_COORDINATE_SOURCE
define|#
directive|define
name|GL_FOG_COORDINATE_SOURCE
value|0x8450
DECL|macro|GL_FOG_COORDINATE
define|#
directive|define
name|GL_FOG_COORDINATE
value|0x8451
DECL|macro|GL_FRAGMENT_DEPTH
define|#
directive|define
name|GL_FRAGMENT_DEPTH
value|0x8452
DECL|macro|GL_CURRENT_FOG_COORDINATE
define|#
directive|define
name|GL_CURRENT_FOG_COORDINATE
value|0x8453
DECL|macro|GL_FOG_COORDINATE_ARRAY_TYPE
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_TYPE
value|0x8454
DECL|macro|GL_FOG_COORDINATE_ARRAY_STRIDE
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_STRIDE
value|0x8455
DECL|macro|GL_FOG_COORDINATE_ARRAY_POINTER
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_POINTER
value|0x8456
DECL|macro|GL_FOG_COORDINATE_ARRAY
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY
value|0x8457
DECL|macro|GL_COLOR_SUM
define|#
directive|define
name|GL_COLOR_SUM
value|0x8458
DECL|macro|GL_CURRENT_SECONDARY_COLOR
define|#
directive|define
name|GL_CURRENT_SECONDARY_COLOR
value|0x8459
DECL|macro|GL_SECONDARY_COLOR_ARRAY_SIZE
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_SIZE
value|0x845A
DECL|macro|GL_SECONDARY_COLOR_ARRAY_TYPE
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_TYPE
value|0x845B
DECL|macro|GL_SECONDARY_COLOR_ARRAY_STRIDE
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_STRIDE
value|0x845C
DECL|macro|GL_SECONDARY_COLOR_ARRAY_POINTER
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_POINTER
value|0x845D
DECL|macro|GL_SECONDARY_COLOR_ARRAY
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY
value|0x845E
DECL|macro|GL_TEXTURE_FILTER_CONTROL
define|#
directive|define
name|GL_TEXTURE_FILTER_CONTROL
value|0x8500
DECL|macro|GL_DEPTH_TEXTURE_MODE
define|#
directive|define
name|GL_DEPTH_TEXTURE_MODE
value|0x884B
DECL|macro|GL_COMPARE_R_TO_TEXTURE
define|#
directive|define
name|GL_COMPARE_R_TO_TEXTURE
value|0x884E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_5
DECL|macro|GL_BUFFER_SIZE
define|#
directive|define
name|GL_BUFFER_SIZE
value|0x8764
DECL|macro|GL_BUFFER_USAGE
define|#
directive|define
name|GL_BUFFER_USAGE
value|0x8765
DECL|macro|GL_QUERY_COUNTER_BITS
define|#
directive|define
name|GL_QUERY_COUNTER_BITS
value|0x8864
DECL|macro|GL_CURRENT_QUERY
define|#
directive|define
name|GL_CURRENT_QUERY
value|0x8865
DECL|macro|GL_QUERY_RESULT
define|#
directive|define
name|GL_QUERY_RESULT
value|0x8866
DECL|macro|GL_QUERY_RESULT_AVAILABLE
define|#
directive|define
name|GL_QUERY_RESULT_AVAILABLE
value|0x8867
DECL|macro|GL_ARRAY_BUFFER
define|#
directive|define
name|GL_ARRAY_BUFFER
value|0x8892
DECL|macro|GL_ELEMENT_ARRAY_BUFFER
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER
value|0x8893
DECL|macro|GL_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_ARRAY_BUFFER_BINDING
value|0x8894
DECL|macro|GL_ELEMENT_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER_BINDING
value|0x8895
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
value|0x889F
DECL|macro|GL_READ_ONLY
define|#
directive|define
name|GL_READ_ONLY
value|0x88B8
DECL|macro|GL_WRITE_ONLY
define|#
directive|define
name|GL_WRITE_ONLY
value|0x88B9
DECL|macro|GL_READ_WRITE
define|#
directive|define
name|GL_READ_WRITE
value|0x88BA
DECL|macro|GL_BUFFER_ACCESS
define|#
directive|define
name|GL_BUFFER_ACCESS
value|0x88BB
DECL|macro|GL_BUFFER_MAPPED
define|#
directive|define
name|GL_BUFFER_MAPPED
value|0x88BC
DECL|macro|GL_BUFFER_MAP_POINTER
define|#
directive|define
name|GL_BUFFER_MAP_POINTER
value|0x88BD
DECL|macro|GL_STREAM_DRAW
define|#
directive|define
name|GL_STREAM_DRAW
value|0x88E0
DECL|macro|GL_STREAM_READ
define|#
directive|define
name|GL_STREAM_READ
value|0x88E1
DECL|macro|GL_STREAM_COPY
define|#
directive|define
name|GL_STREAM_COPY
value|0x88E2
DECL|macro|GL_STATIC_DRAW
define|#
directive|define
name|GL_STATIC_DRAW
value|0x88E4
DECL|macro|GL_STATIC_READ
define|#
directive|define
name|GL_STATIC_READ
value|0x88E5
DECL|macro|GL_STATIC_COPY
define|#
directive|define
name|GL_STATIC_COPY
value|0x88E6
DECL|macro|GL_DYNAMIC_DRAW
define|#
directive|define
name|GL_DYNAMIC_DRAW
value|0x88E8
DECL|macro|GL_DYNAMIC_READ
define|#
directive|define
name|GL_DYNAMIC_READ
value|0x88E9
DECL|macro|GL_DYNAMIC_COPY
define|#
directive|define
name|GL_DYNAMIC_COPY
value|0x88EA
DECL|macro|GL_SAMPLES_PASSED
define|#
directive|define
name|GL_SAMPLES_PASSED
value|0x8914
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_5_DEPRECATED
DECL|macro|GL_VERTEX_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_VERTEX_ARRAY_BUFFER_BINDING
value|0x8896
DECL|macro|GL_NORMAL_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_NORMAL_ARRAY_BUFFER_BINDING
value|0x8897
DECL|macro|GL_COLOR_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_COLOR_ARRAY_BUFFER_BINDING
value|0x8898
DECL|macro|GL_INDEX_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_INDEX_ARRAY_BUFFER_BINDING
value|0x8899
DECL|macro|GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
value|0x889A
DECL|macro|GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
value|0x889B
DECL|macro|GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
value|0x889C
DECL|macro|GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
value|0x889D
DECL|macro|GL_WEIGHT_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_WEIGHT_ARRAY_BUFFER_BINDING
value|0x889E
DECL|macro|GL_FOG_COORD_SRC
define|#
directive|define
name|GL_FOG_COORD_SRC
value|0x8450
DECL|macro|GL_FOG_COORD
define|#
directive|define
name|GL_FOG_COORD
value|0x8451
DECL|macro|GL_CURRENT_FOG_COORD
define|#
directive|define
name|GL_CURRENT_FOG_COORD
value|0x8453
DECL|macro|GL_FOG_COORD_ARRAY_TYPE
define|#
directive|define
name|GL_FOG_COORD_ARRAY_TYPE
value|0x8454
DECL|macro|GL_FOG_COORD_ARRAY_STRIDE
define|#
directive|define
name|GL_FOG_COORD_ARRAY_STRIDE
value|0x8455
DECL|macro|GL_FOG_COORD_ARRAY_POINTER
define|#
directive|define
name|GL_FOG_COORD_ARRAY_POINTER
value|0x8456
DECL|macro|GL_FOG_COORD_ARRAY
define|#
directive|define
name|GL_FOG_COORD_ARRAY
value|0x8457
DECL|macro|GL_FOG_COORD_ARRAY_BUFFER_BINDING
define|#
directive|define
name|GL_FOG_COORD_ARRAY_BUFFER_BINDING
value|0x889D
DECL|macro|GL_SRC0_RGB
define|#
directive|define
name|GL_SRC0_RGB
value|0x8580
DECL|macro|GL_SRC1_RGB
define|#
directive|define
name|GL_SRC1_RGB
value|0x8581
DECL|macro|GL_SRC2_RGB
define|#
directive|define
name|GL_SRC2_RGB
value|0x8582
DECL|macro|GL_SRC0_ALPHA
define|#
directive|define
name|GL_SRC0_ALPHA
value|0x8588
DECL|macro|GL_SRC1_ALPHA
define|#
directive|define
name|GL_SRC1_ALPHA
value|0x8589
DECL|macro|GL_SRC2_ALPHA
define|#
directive|define
name|GL_SRC2_ALPHA
value|0x858A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_2_0
DECL|macro|GL_BLEND_EQUATION_RGB
define|#
directive|define
name|GL_BLEND_EQUATION_RGB
value|0x8009
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_ENABLED
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_ENABLED
value|0x8622
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_SIZE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_SIZE
value|0x8623
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_STRIDE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_STRIDE
value|0x8624
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_TYPE
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_TYPE
value|0x8625
DECL|macro|GL_CURRENT_VERTEX_ATTRIB
define|#
directive|define
name|GL_CURRENT_VERTEX_ATTRIB
value|0x8626
DECL|macro|GL_VERTEX_PROGRAM_POINT_SIZE
define|#
directive|define
name|GL_VERTEX_PROGRAM_POINT_SIZE
value|0x8642
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_POINTER
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_POINTER
value|0x8645
DECL|macro|GL_STENCIL_BACK_FUNC
define|#
directive|define
name|GL_STENCIL_BACK_FUNC
value|0x8800
DECL|macro|GL_STENCIL_BACK_FAIL
define|#
directive|define
name|GL_STENCIL_BACK_FAIL
value|0x8801
DECL|macro|GL_STENCIL_BACK_PASS_DEPTH_FAIL
define|#
directive|define
name|GL_STENCIL_BACK_PASS_DEPTH_FAIL
value|0x8802
DECL|macro|GL_STENCIL_BACK_PASS_DEPTH_PASS
define|#
directive|define
name|GL_STENCIL_BACK_PASS_DEPTH_PASS
value|0x8803
DECL|macro|GL_MAX_DRAW_BUFFERS
define|#
directive|define
name|GL_MAX_DRAW_BUFFERS
value|0x8824
DECL|macro|GL_DRAW_BUFFER0
define|#
directive|define
name|GL_DRAW_BUFFER0
value|0x8825
DECL|macro|GL_DRAW_BUFFER1
define|#
directive|define
name|GL_DRAW_BUFFER1
value|0x8826
DECL|macro|GL_DRAW_BUFFER2
define|#
directive|define
name|GL_DRAW_BUFFER2
value|0x8827
DECL|macro|GL_DRAW_BUFFER3
define|#
directive|define
name|GL_DRAW_BUFFER3
value|0x8828
DECL|macro|GL_DRAW_BUFFER4
define|#
directive|define
name|GL_DRAW_BUFFER4
value|0x8829
DECL|macro|GL_DRAW_BUFFER5
define|#
directive|define
name|GL_DRAW_BUFFER5
value|0x882A
DECL|macro|GL_DRAW_BUFFER6
define|#
directive|define
name|GL_DRAW_BUFFER6
value|0x882B
DECL|macro|GL_DRAW_BUFFER7
define|#
directive|define
name|GL_DRAW_BUFFER7
value|0x882C
DECL|macro|GL_DRAW_BUFFER8
define|#
directive|define
name|GL_DRAW_BUFFER8
value|0x882D
DECL|macro|GL_DRAW_BUFFER9
define|#
directive|define
name|GL_DRAW_BUFFER9
value|0x882E
DECL|macro|GL_DRAW_BUFFER10
define|#
directive|define
name|GL_DRAW_BUFFER10
value|0x882F
DECL|macro|GL_DRAW_BUFFER11
define|#
directive|define
name|GL_DRAW_BUFFER11
value|0x8830
DECL|macro|GL_DRAW_BUFFER12
define|#
directive|define
name|GL_DRAW_BUFFER12
value|0x8831
DECL|macro|GL_DRAW_BUFFER13
define|#
directive|define
name|GL_DRAW_BUFFER13
value|0x8832
DECL|macro|GL_DRAW_BUFFER14
define|#
directive|define
name|GL_DRAW_BUFFER14
value|0x8833
DECL|macro|GL_DRAW_BUFFER15
define|#
directive|define
name|GL_DRAW_BUFFER15
value|0x8834
DECL|macro|GL_BLEND_EQUATION_ALPHA
define|#
directive|define
name|GL_BLEND_EQUATION_ALPHA
value|0x883D
DECL|macro|GL_MAX_VERTEX_ATTRIBS
define|#
directive|define
name|GL_MAX_VERTEX_ATTRIBS
value|0x8869
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
value|0x886A
DECL|macro|GL_MAX_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_TEXTURE_IMAGE_UNITS
value|0x8872
DECL|macro|GL_FRAGMENT_SHADER
define|#
directive|define
name|GL_FRAGMENT_SHADER
value|0x8B30
DECL|macro|GL_VERTEX_SHADER
define|#
directive|define
name|GL_VERTEX_SHADER
value|0x8B31
DECL|macro|GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
value|0x8B49
DECL|macro|GL_MAX_VERTEX_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_VERTEX_UNIFORM_COMPONENTS
value|0x8B4A
DECL|macro|GL_MAX_VARYING_FLOATS
define|#
directive|define
name|GL_MAX_VARYING_FLOATS
value|0x8B4B
DECL|macro|GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
value|0x8B4C
DECL|macro|GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
value|0x8B4D
DECL|macro|GL_SHADER_TYPE
define|#
directive|define
name|GL_SHADER_TYPE
value|0x8B4F
DECL|macro|GL_FLOAT_VEC2
define|#
directive|define
name|GL_FLOAT_VEC2
value|0x8B50
DECL|macro|GL_FLOAT_VEC3
define|#
directive|define
name|GL_FLOAT_VEC3
value|0x8B51
DECL|macro|GL_FLOAT_VEC4
define|#
directive|define
name|GL_FLOAT_VEC4
value|0x8B52
DECL|macro|GL_INT_VEC2
define|#
directive|define
name|GL_INT_VEC2
value|0x8B53
DECL|macro|GL_INT_VEC3
define|#
directive|define
name|GL_INT_VEC3
value|0x8B54
DECL|macro|GL_INT_VEC4
define|#
directive|define
name|GL_INT_VEC4
value|0x8B55
DECL|macro|GL_BOOL
define|#
directive|define
name|GL_BOOL
value|0x8B56
DECL|macro|GL_BOOL_VEC2
define|#
directive|define
name|GL_BOOL_VEC2
value|0x8B57
DECL|macro|GL_BOOL_VEC3
define|#
directive|define
name|GL_BOOL_VEC3
value|0x8B58
DECL|macro|GL_BOOL_VEC4
define|#
directive|define
name|GL_BOOL_VEC4
value|0x8B59
DECL|macro|GL_FLOAT_MAT2
define|#
directive|define
name|GL_FLOAT_MAT2
value|0x8B5A
DECL|macro|GL_FLOAT_MAT3
define|#
directive|define
name|GL_FLOAT_MAT3
value|0x8B5B
DECL|macro|GL_FLOAT_MAT4
define|#
directive|define
name|GL_FLOAT_MAT4
value|0x8B5C
DECL|macro|GL_SAMPLER_1D
define|#
directive|define
name|GL_SAMPLER_1D
value|0x8B5D
DECL|macro|GL_SAMPLER_2D
define|#
directive|define
name|GL_SAMPLER_2D
value|0x8B5E
DECL|macro|GL_SAMPLER_3D
define|#
directive|define
name|GL_SAMPLER_3D
value|0x8B5F
DECL|macro|GL_SAMPLER_CUBE
define|#
directive|define
name|GL_SAMPLER_CUBE
value|0x8B60
DECL|macro|GL_SAMPLER_1D_SHADOW
define|#
directive|define
name|GL_SAMPLER_1D_SHADOW
value|0x8B61
DECL|macro|GL_SAMPLER_2D_SHADOW
define|#
directive|define
name|GL_SAMPLER_2D_SHADOW
value|0x8B62
DECL|macro|GL_DELETE_STATUS
define|#
directive|define
name|GL_DELETE_STATUS
value|0x8B80
DECL|macro|GL_COMPILE_STATUS
define|#
directive|define
name|GL_COMPILE_STATUS
value|0x8B81
DECL|macro|GL_LINK_STATUS
define|#
directive|define
name|GL_LINK_STATUS
value|0x8B82
DECL|macro|GL_VALIDATE_STATUS
define|#
directive|define
name|GL_VALIDATE_STATUS
value|0x8B83
DECL|macro|GL_INFO_LOG_LENGTH
define|#
directive|define
name|GL_INFO_LOG_LENGTH
value|0x8B84
DECL|macro|GL_ATTACHED_SHADERS
define|#
directive|define
name|GL_ATTACHED_SHADERS
value|0x8B85
DECL|macro|GL_ACTIVE_UNIFORMS
define|#
directive|define
name|GL_ACTIVE_UNIFORMS
value|0x8B86
DECL|macro|GL_ACTIVE_UNIFORM_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_UNIFORM_MAX_LENGTH
value|0x8B87
DECL|macro|GL_SHADER_SOURCE_LENGTH
define|#
directive|define
name|GL_SHADER_SOURCE_LENGTH
value|0x8B88
DECL|macro|GL_ACTIVE_ATTRIBUTES
define|#
directive|define
name|GL_ACTIVE_ATTRIBUTES
value|0x8B89
DECL|macro|GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
value|0x8B8A
DECL|macro|GL_FRAGMENT_SHADER_DERIVATIVE_HINT
define|#
directive|define
name|GL_FRAGMENT_SHADER_DERIVATIVE_HINT
value|0x8B8B
DECL|macro|GL_SHADING_LANGUAGE_VERSION
define|#
directive|define
name|GL_SHADING_LANGUAGE_VERSION
value|0x8B8C
DECL|macro|GL_CURRENT_PROGRAM
define|#
directive|define
name|GL_CURRENT_PROGRAM
value|0x8B8D
DECL|macro|GL_POINT_SPRITE_COORD_ORIGIN
define|#
directive|define
name|GL_POINT_SPRITE_COORD_ORIGIN
value|0x8CA0
DECL|macro|GL_LOWER_LEFT
define|#
directive|define
name|GL_LOWER_LEFT
value|0x8CA1
DECL|macro|GL_UPPER_LEFT
define|#
directive|define
name|GL_UPPER_LEFT
value|0x8CA2
DECL|macro|GL_STENCIL_BACK_REF
define|#
directive|define
name|GL_STENCIL_BACK_REF
value|0x8CA3
DECL|macro|GL_STENCIL_BACK_VALUE_MASK
define|#
directive|define
name|GL_STENCIL_BACK_VALUE_MASK
value|0x8CA4
DECL|macro|GL_STENCIL_BACK_WRITEMASK
define|#
directive|define
name|GL_STENCIL_BACK_WRITEMASK
value|0x8CA5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_2_0_DEPRECATED
DECL|macro|GL_VERTEX_PROGRAM_TWO_SIDE
define|#
directive|define
name|GL_VERTEX_PROGRAM_TWO_SIDE
value|0x8643
DECL|macro|GL_POINT_SPRITE
define|#
directive|define
name|GL_POINT_SPRITE
value|0x8861
DECL|macro|GL_COORD_REPLACE
define|#
directive|define
name|GL_COORD_REPLACE
value|0x8862
DECL|macro|GL_MAX_TEXTURE_COORDS
define|#
directive|define
name|GL_MAX_TEXTURE_COORDS
value|0x8871
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_2_1
DECL|macro|GL_PIXEL_PACK_BUFFER
define|#
directive|define
name|GL_PIXEL_PACK_BUFFER
value|0x88EB
DECL|macro|GL_PIXEL_UNPACK_BUFFER
define|#
directive|define
name|GL_PIXEL_UNPACK_BUFFER
value|0x88EC
DECL|macro|GL_PIXEL_PACK_BUFFER_BINDING
define|#
directive|define
name|GL_PIXEL_PACK_BUFFER_BINDING
value|0x88ED
DECL|macro|GL_PIXEL_UNPACK_BUFFER_BINDING
define|#
directive|define
name|GL_PIXEL_UNPACK_BUFFER_BINDING
value|0x88EF
DECL|macro|GL_FLOAT_MAT2x3
define|#
directive|define
name|GL_FLOAT_MAT2x3
value|0x8B65
DECL|macro|GL_FLOAT_MAT2x4
define|#
directive|define
name|GL_FLOAT_MAT2x4
value|0x8B66
DECL|macro|GL_FLOAT_MAT3x2
define|#
directive|define
name|GL_FLOAT_MAT3x2
value|0x8B67
DECL|macro|GL_FLOAT_MAT3x4
define|#
directive|define
name|GL_FLOAT_MAT3x4
value|0x8B68
DECL|macro|GL_FLOAT_MAT4x2
define|#
directive|define
name|GL_FLOAT_MAT4x2
value|0x8B69
DECL|macro|GL_FLOAT_MAT4x3
define|#
directive|define
name|GL_FLOAT_MAT4x3
value|0x8B6A
DECL|macro|GL_SRGB
define|#
directive|define
name|GL_SRGB
value|0x8C40
DECL|macro|GL_SRGB8
define|#
directive|define
name|GL_SRGB8
value|0x8C41
DECL|macro|GL_SRGB_ALPHA
define|#
directive|define
name|GL_SRGB_ALPHA
value|0x8C42
DECL|macro|GL_SRGB8_ALPHA8
define|#
directive|define
name|GL_SRGB8_ALPHA8
value|0x8C43
DECL|macro|GL_COMPRESSED_SRGB
define|#
directive|define
name|GL_COMPRESSED_SRGB
value|0x8C48
DECL|macro|GL_COMPRESSED_SRGB_ALPHA
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA
value|0x8C49
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_2_1_DEPRECATED
DECL|macro|GL_CURRENT_RASTER_SECONDARY_COLOR
define|#
directive|define
name|GL_CURRENT_RASTER_SECONDARY_COLOR
value|0x845F
DECL|macro|GL_SLUMINANCE_ALPHA
define|#
directive|define
name|GL_SLUMINANCE_ALPHA
value|0x8C44
DECL|macro|GL_SLUMINANCE8_ALPHA8
define|#
directive|define
name|GL_SLUMINANCE8_ALPHA8
value|0x8C45
DECL|macro|GL_SLUMINANCE
define|#
directive|define
name|GL_SLUMINANCE
value|0x8C46
DECL|macro|GL_SLUMINANCE8
define|#
directive|define
name|GL_SLUMINANCE8
value|0x8C47
DECL|macro|GL_COMPRESSED_SLUMINANCE
define|#
directive|define
name|GL_COMPRESSED_SLUMINANCE
value|0x8C4A
DECL|macro|GL_COMPRESSED_SLUMINANCE_ALPHA
define|#
directive|define
name|GL_COMPRESSED_SLUMINANCE_ALPHA
value|0x8C4B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_0
DECL|macro|GL_COMPARE_REF_TO_TEXTURE
define|#
directive|define
name|GL_COMPARE_REF_TO_TEXTURE
value|0x884E
DECL|macro|GL_CLIP_DISTANCE0
define|#
directive|define
name|GL_CLIP_DISTANCE0
value|0x3000
DECL|macro|GL_CLIP_DISTANCE1
define|#
directive|define
name|GL_CLIP_DISTANCE1
value|0x3001
DECL|macro|GL_CLIP_DISTANCE2
define|#
directive|define
name|GL_CLIP_DISTANCE2
value|0x3002
DECL|macro|GL_CLIP_DISTANCE3
define|#
directive|define
name|GL_CLIP_DISTANCE3
value|0x3003
DECL|macro|GL_CLIP_DISTANCE4
define|#
directive|define
name|GL_CLIP_DISTANCE4
value|0x3004
DECL|macro|GL_CLIP_DISTANCE5
define|#
directive|define
name|GL_CLIP_DISTANCE5
value|0x3005
DECL|macro|GL_CLIP_DISTANCE6
define|#
directive|define
name|GL_CLIP_DISTANCE6
value|0x3006
DECL|macro|GL_CLIP_DISTANCE7
define|#
directive|define
name|GL_CLIP_DISTANCE7
value|0x3007
DECL|macro|GL_MAX_CLIP_DISTANCES
define|#
directive|define
name|GL_MAX_CLIP_DISTANCES
value|0x0D32
DECL|macro|GL_MAJOR_VERSION
define|#
directive|define
name|GL_MAJOR_VERSION
value|0x821B
DECL|macro|GL_MINOR_VERSION
define|#
directive|define
name|GL_MINOR_VERSION
value|0x821C
DECL|macro|GL_NUM_EXTENSIONS
define|#
directive|define
name|GL_NUM_EXTENSIONS
value|0x821D
DECL|macro|GL_CONTEXT_FLAGS
define|#
directive|define
name|GL_CONTEXT_FLAGS
value|0x821E
DECL|macro|GL_COMPRESSED_RED
define|#
directive|define
name|GL_COMPRESSED_RED
value|0x8225
DECL|macro|GL_COMPRESSED_RG
define|#
directive|define
name|GL_COMPRESSED_RG
value|0x8226
DECL|macro|GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
define|#
directive|define
name|GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
value|0x0001
DECL|macro|GL_RGBA32F
define|#
directive|define
name|GL_RGBA32F
value|0x8814
DECL|macro|GL_RGB32F
define|#
directive|define
name|GL_RGB32F
value|0x8815
DECL|macro|GL_RGBA16F
define|#
directive|define
name|GL_RGBA16F
value|0x881A
DECL|macro|GL_RGB16F
define|#
directive|define
name|GL_RGB16F
value|0x881B
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_INTEGER
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_INTEGER
value|0x88FD
DECL|macro|GL_MAX_ARRAY_TEXTURE_LAYERS
define|#
directive|define
name|GL_MAX_ARRAY_TEXTURE_LAYERS
value|0x88FF
DECL|macro|GL_MIN_PROGRAM_TEXEL_OFFSET
define|#
directive|define
name|GL_MIN_PROGRAM_TEXEL_OFFSET
value|0x8904
DECL|macro|GL_MAX_PROGRAM_TEXEL_OFFSET
define|#
directive|define
name|GL_MAX_PROGRAM_TEXEL_OFFSET
value|0x8905
DECL|macro|GL_CLAMP_READ_COLOR
define|#
directive|define
name|GL_CLAMP_READ_COLOR
value|0x891C
DECL|macro|GL_FIXED_ONLY
define|#
directive|define
name|GL_FIXED_ONLY
value|0x891D
DECL|macro|GL_MAX_VARYING_COMPONENTS
define|#
directive|define
name|GL_MAX_VARYING_COMPONENTS
value|0x8B4B
DECL|macro|GL_TEXTURE_1D_ARRAY
define|#
directive|define
name|GL_TEXTURE_1D_ARRAY
value|0x8C18
DECL|macro|GL_PROXY_TEXTURE_1D_ARRAY
define|#
directive|define
name|GL_PROXY_TEXTURE_1D_ARRAY
value|0x8C19
DECL|macro|GL_TEXTURE_2D_ARRAY
define|#
directive|define
name|GL_TEXTURE_2D_ARRAY
value|0x8C1A
DECL|macro|GL_PROXY_TEXTURE_2D_ARRAY
define|#
directive|define
name|GL_PROXY_TEXTURE_2D_ARRAY
value|0x8C1B
DECL|macro|GL_TEXTURE_BINDING_1D_ARRAY
define|#
directive|define
name|GL_TEXTURE_BINDING_1D_ARRAY
value|0x8C1C
DECL|macro|GL_TEXTURE_BINDING_2D_ARRAY
define|#
directive|define
name|GL_TEXTURE_BINDING_2D_ARRAY
value|0x8C1D
DECL|macro|GL_R11F_G11F_B10F
define|#
directive|define
name|GL_R11F_G11F_B10F
value|0x8C3A
DECL|macro|GL_UNSIGNED_INT_10F_11F_11F_REV
define|#
directive|define
name|GL_UNSIGNED_INT_10F_11F_11F_REV
value|0x8C3B
DECL|macro|GL_RGB9_E5
define|#
directive|define
name|GL_RGB9_E5
value|0x8C3D
DECL|macro|GL_UNSIGNED_INT_5_9_9_9_REV
define|#
directive|define
name|GL_UNSIGNED_INT_5_9_9_9_REV
value|0x8C3E
DECL|macro|GL_TEXTURE_SHARED_SIZE
define|#
directive|define
name|GL_TEXTURE_SHARED_SIZE
value|0x8C3F
DECL|macro|GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
value|0x8C76
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_MODE
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_MODE
value|0x8C7F
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
value|0x8C80
DECL|macro|GL_TRANSFORM_FEEDBACK_VARYINGS
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_VARYINGS
value|0x8C83
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_START
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_START
value|0x8C84
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
value|0x8C85
DECL|macro|GL_PRIMITIVES_GENERATED
define|#
directive|define
name|GL_PRIMITIVES_GENERATED
value|0x8C87
DECL|macro|GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
value|0x8C88
DECL|macro|GL_RASTERIZER_DISCARD
define|#
directive|define
name|GL_RASTERIZER_DISCARD
value|0x8C89
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
value|0x8C8A
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
value|0x8C8B
DECL|macro|GL_INTERLEAVED_ATTRIBS
define|#
directive|define
name|GL_INTERLEAVED_ATTRIBS
value|0x8C8C
DECL|macro|GL_SEPARATE_ATTRIBS
define|#
directive|define
name|GL_SEPARATE_ATTRIBS
value|0x8C8D
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER
value|0x8C8E
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
value|0x8C8F
DECL|macro|GL_RGBA32UI
define|#
directive|define
name|GL_RGBA32UI
value|0x8D70
DECL|macro|GL_RGB32UI
define|#
directive|define
name|GL_RGB32UI
value|0x8D71
DECL|macro|GL_RGBA16UI
define|#
directive|define
name|GL_RGBA16UI
value|0x8D76
DECL|macro|GL_RGB16UI
define|#
directive|define
name|GL_RGB16UI
value|0x8D77
DECL|macro|GL_RGBA8UI
define|#
directive|define
name|GL_RGBA8UI
value|0x8D7C
DECL|macro|GL_RGB8UI
define|#
directive|define
name|GL_RGB8UI
value|0x8D7D
DECL|macro|GL_RGBA32I
define|#
directive|define
name|GL_RGBA32I
value|0x8D82
DECL|macro|GL_RGB32I
define|#
directive|define
name|GL_RGB32I
value|0x8D83
DECL|macro|GL_RGBA16I
define|#
directive|define
name|GL_RGBA16I
value|0x8D88
DECL|macro|GL_RGB16I
define|#
directive|define
name|GL_RGB16I
value|0x8D89
DECL|macro|GL_RGBA8I
define|#
directive|define
name|GL_RGBA8I
value|0x8D8E
DECL|macro|GL_RGB8I
define|#
directive|define
name|GL_RGB8I
value|0x8D8F
DECL|macro|GL_RED_INTEGER
define|#
directive|define
name|GL_RED_INTEGER
value|0x8D94
DECL|macro|GL_GREEN_INTEGER
define|#
directive|define
name|GL_GREEN_INTEGER
value|0x8D95
DECL|macro|GL_BLUE_INTEGER
define|#
directive|define
name|GL_BLUE_INTEGER
value|0x8D96
DECL|macro|GL_RGB_INTEGER
define|#
directive|define
name|GL_RGB_INTEGER
value|0x8D98
DECL|macro|GL_RGBA_INTEGER
define|#
directive|define
name|GL_RGBA_INTEGER
value|0x8D99
DECL|macro|GL_BGR_INTEGER
define|#
directive|define
name|GL_BGR_INTEGER
value|0x8D9A
DECL|macro|GL_BGRA_INTEGER
define|#
directive|define
name|GL_BGRA_INTEGER
value|0x8D9B
DECL|macro|GL_SAMPLER_1D_ARRAY
define|#
directive|define
name|GL_SAMPLER_1D_ARRAY
value|0x8DC0
DECL|macro|GL_SAMPLER_2D_ARRAY
define|#
directive|define
name|GL_SAMPLER_2D_ARRAY
value|0x8DC1
DECL|macro|GL_SAMPLER_1D_ARRAY_SHADOW
define|#
directive|define
name|GL_SAMPLER_1D_ARRAY_SHADOW
value|0x8DC3
DECL|macro|GL_SAMPLER_2D_ARRAY_SHADOW
define|#
directive|define
name|GL_SAMPLER_2D_ARRAY_SHADOW
value|0x8DC4
DECL|macro|GL_SAMPLER_CUBE_SHADOW
define|#
directive|define
name|GL_SAMPLER_CUBE_SHADOW
value|0x8DC5
DECL|macro|GL_UNSIGNED_INT_VEC2
define|#
directive|define
name|GL_UNSIGNED_INT_VEC2
value|0x8DC6
DECL|macro|GL_UNSIGNED_INT_VEC3
define|#
directive|define
name|GL_UNSIGNED_INT_VEC3
value|0x8DC7
DECL|macro|GL_UNSIGNED_INT_VEC4
define|#
directive|define
name|GL_UNSIGNED_INT_VEC4
value|0x8DC8
DECL|macro|GL_INT_SAMPLER_1D
define|#
directive|define
name|GL_INT_SAMPLER_1D
value|0x8DC9
DECL|macro|GL_INT_SAMPLER_2D
define|#
directive|define
name|GL_INT_SAMPLER_2D
value|0x8DCA
DECL|macro|GL_INT_SAMPLER_3D
define|#
directive|define
name|GL_INT_SAMPLER_3D
value|0x8DCB
DECL|macro|GL_INT_SAMPLER_CUBE
define|#
directive|define
name|GL_INT_SAMPLER_CUBE
value|0x8DCC
DECL|macro|GL_INT_SAMPLER_1D_ARRAY
define|#
directive|define
name|GL_INT_SAMPLER_1D_ARRAY
value|0x8DCE
DECL|macro|GL_INT_SAMPLER_2D_ARRAY
define|#
directive|define
name|GL_INT_SAMPLER_2D_ARRAY
value|0x8DCF
DECL|macro|GL_UNSIGNED_INT_SAMPLER_1D
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_1D
value|0x8DD1
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D
value|0x8DD2
DECL|macro|GL_UNSIGNED_INT_SAMPLER_3D
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_3D
value|0x8DD3
DECL|macro|GL_UNSIGNED_INT_SAMPLER_CUBE
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_CUBE
value|0x8DD4
DECL|macro|GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
value|0x8DD6
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
value|0x8DD7
DECL|macro|GL_QUERY_WAIT
define|#
directive|define
name|GL_QUERY_WAIT
value|0x8E13
DECL|macro|GL_QUERY_NO_WAIT
define|#
directive|define
name|GL_QUERY_NO_WAIT
value|0x8E14
DECL|macro|GL_QUERY_BY_REGION_WAIT
define|#
directive|define
name|GL_QUERY_BY_REGION_WAIT
value|0x8E15
DECL|macro|GL_QUERY_BY_REGION_NO_WAIT
define|#
directive|define
name|GL_QUERY_BY_REGION_NO_WAIT
value|0x8E16
DECL|macro|GL_BUFFER_ACCESS_FLAGS
define|#
directive|define
name|GL_BUFFER_ACCESS_FLAGS
value|0x911F
DECL|macro|GL_BUFFER_MAP_LENGTH
define|#
directive|define
name|GL_BUFFER_MAP_LENGTH
value|0x9120
DECL|macro|GL_BUFFER_MAP_OFFSET
define|#
directive|define
name|GL_BUFFER_MAP_OFFSET
value|0x9121
comment|/* Reuse tokens from ARB_depth_buffer_float */
comment|/* reuse GL_DEPTH_COMPONENT32F */
comment|/* reuse GL_DEPTH32F_STENCIL8 */
comment|/* reuse GL_FLOAT_32_UNSIGNED_INT_24_8_REV */
comment|/* Reuse tokens from ARB_framebuffer_object */
comment|/* reuse GL_INVALID_FRAMEBUFFER_OPERATION */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE */
comment|/* reuse GL_FRAMEBUFFER_DEFAULT */
comment|/* reuse GL_FRAMEBUFFER_UNDEFINED */
comment|/* reuse GL_DEPTH_STENCIL_ATTACHMENT */
comment|/* reuse GL_INDEX */
comment|/* reuse GL_MAX_RENDERBUFFER_SIZE */
comment|/* reuse GL_DEPTH_STENCIL */
comment|/* reuse GL_UNSIGNED_INT_24_8 */
comment|/* reuse GL_DEPTH24_STENCIL8 */
comment|/* reuse GL_TEXTURE_STENCIL_SIZE */
comment|/* reuse GL_TEXTURE_RED_TYPE */
comment|/* reuse GL_TEXTURE_GREEN_TYPE */
comment|/* reuse GL_TEXTURE_BLUE_TYPE */
comment|/* reuse GL_TEXTURE_ALPHA_TYPE */
comment|/* reuse GL_TEXTURE_DEPTH_TYPE */
comment|/* reuse GL_UNSIGNED_NORMALIZED */
comment|/* reuse GL_FRAMEBUFFER_BINDING */
comment|/* reuse GL_DRAW_FRAMEBUFFER_BINDING */
comment|/* reuse GL_RENDERBUFFER_BINDING */
comment|/* reuse GL_READ_FRAMEBUFFER */
comment|/* reuse GL_DRAW_FRAMEBUFFER */
comment|/* reuse GL_READ_FRAMEBUFFER_BINDING */
comment|/* reuse GL_RENDERBUFFER_SAMPLES */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER */
comment|/* reuse GL_FRAMEBUFFER_COMPLETE */
comment|/* reuse GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT */
comment|/* reuse GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT */
comment|/* reuse GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER */
comment|/* reuse GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER */
comment|/* reuse GL_FRAMEBUFFER_UNSUPPORTED */
comment|/* reuse GL_MAX_COLOR_ATTACHMENTS */
comment|/* reuse GL_COLOR_ATTACHMENT0 */
comment|/* reuse GL_COLOR_ATTACHMENT1 */
comment|/* reuse GL_COLOR_ATTACHMENT2 */
comment|/* reuse GL_COLOR_ATTACHMENT3 */
comment|/* reuse GL_COLOR_ATTACHMENT4 */
comment|/* reuse GL_COLOR_ATTACHMENT5 */
comment|/* reuse GL_COLOR_ATTACHMENT6 */
comment|/* reuse GL_COLOR_ATTACHMENT7 */
comment|/* reuse GL_COLOR_ATTACHMENT8 */
comment|/* reuse GL_COLOR_ATTACHMENT9 */
comment|/* reuse GL_COLOR_ATTACHMENT10 */
comment|/* reuse GL_COLOR_ATTACHMENT11 */
comment|/* reuse GL_COLOR_ATTACHMENT12 */
comment|/* reuse GL_COLOR_ATTACHMENT13 */
comment|/* reuse GL_COLOR_ATTACHMENT14 */
comment|/* reuse GL_COLOR_ATTACHMENT15 */
comment|/* reuse GL_DEPTH_ATTACHMENT */
comment|/* reuse GL_STENCIL_ATTACHMENT */
comment|/* reuse GL_FRAMEBUFFER */
comment|/* reuse GL_RENDERBUFFER */
comment|/* reuse GL_RENDERBUFFER_WIDTH */
comment|/* reuse GL_RENDERBUFFER_HEIGHT */
comment|/* reuse GL_RENDERBUFFER_INTERNAL_FORMAT */
comment|/* reuse GL_STENCIL_INDEX1 */
comment|/* reuse GL_STENCIL_INDEX4 */
comment|/* reuse GL_STENCIL_INDEX8 */
comment|/* reuse GL_STENCIL_INDEX16 */
comment|/* reuse GL_RENDERBUFFER_RED_SIZE */
comment|/* reuse GL_RENDERBUFFER_GREEN_SIZE */
comment|/* reuse GL_RENDERBUFFER_BLUE_SIZE */
comment|/* reuse GL_RENDERBUFFER_ALPHA_SIZE */
comment|/* reuse GL_RENDERBUFFER_DEPTH_SIZE */
comment|/* reuse GL_RENDERBUFFER_STENCIL_SIZE */
comment|/* reuse GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE */
comment|/* reuse GL_MAX_SAMPLES */
comment|/* Reuse tokens from ARB_framebuffer_sRGB */
comment|/* reuse GL_FRAMEBUFFER_SRGB */
comment|/* Reuse tokens from ARB_half_float_vertex */
comment|/* reuse GL_HALF_FLOAT */
comment|/* Reuse tokens from ARB_map_buffer_range */
comment|/* reuse GL_MAP_READ_BIT */
comment|/* reuse GL_MAP_WRITE_BIT */
comment|/* reuse GL_MAP_INVALIDATE_RANGE_BIT */
comment|/* reuse GL_MAP_INVALIDATE_BUFFER_BIT */
comment|/* reuse GL_MAP_FLUSH_EXPLICIT_BIT */
comment|/* reuse GL_MAP_UNSYNCHRONIZED_BIT */
comment|/* Reuse tokens from ARB_texture_compression_rgtc */
comment|/* reuse GL_COMPRESSED_RED_RGTC1 */
comment|/* reuse GL_COMPRESSED_SIGNED_RED_RGTC1 */
comment|/* reuse GL_COMPRESSED_RG_RGTC2 */
comment|/* reuse GL_COMPRESSED_SIGNED_RG_RGTC2 */
comment|/* Reuse tokens from ARB_texture_rg */
comment|/* reuse GL_RG */
comment|/* reuse GL_RG_INTEGER */
comment|/* reuse GL_R8 */
comment|/* reuse GL_R16 */
comment|/* reuse GL_RG8 */
comment|/* reuse GL_RG16 */
comment|/* reuse GL_R16F */
comment|/* reuse GL_R32F */
comment|/* reuse GL_RG16F */
comment|/* reuse GL_RG32F */
comment|/* reuse GL_R8I */
comment|/* reuse GL_R8UI */
comment|/* reuse GL_R16I */
comment|/* reuse GL_R16UI */
comment|/* reuse GL_R32I */
comment|/* reuse GL_R32UI */
comment|/* reuse GL_RG8I */
comment|/* reuse GL_RG8UI */
comment|/* reuse GL_RG16I */
comment|/* reuse GL_RG16UI */
comment|/* reuse GL_RG32I */
comment|/* reuse GL_RG32UI */
comment|/* Reuse tokens from ARB_vertex_array_object */
comment|/* reuse GL_VERTEX_ARRAY_BINDING */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_0_DEPRECATED
DECL|macro|GL_CLAMP_VERTEX_COLOR
define|#
directive|define
name|GL_CLAMP_VERTEX_COLOR
value|0x891A
DECL|macro|GL_CLAMP_FRAGMENT_COLOR
define|#
directive|define
name|GL_CLAMP_FRAGMENT_COLOR
value|0x891B
DECL|macro|GL_ALPHA_INTEGER
define|#
directive|define
name|GL_ALPHA_INTEGER
value|0x8D97
comment|/* Reuse tokens from ARB_framebuffer_object */
comment|/* reuse GL_TEXTURE_LUMINANCE_TYPE */
comment|/* reuse GL_TEXTURE_INTENSITY_TYPE */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_1
DECL|macro|GL_SAMPLER_2D_RECT
define|#
directive|define
name|GL_SAMPLER_2D_RECT
value|0x8B63
DECL|macro|GL_SAMPLER_2D_RECT_SHADOW
define|#
directive|define
name|GL_SAMPLER_2D_RECT_SHADOW
value|0x8B64
DECL|macro|GL_SAMPLER_BUFFER
define|#
directive|define
name|GL_SAMPLER_BUFFER
value|0x8DC2
DECL|macro|GL_INT_SAMPLER_2D_RECT
define|#
directive|define
name|GL_INT_SAMPLER_2D_RECT
value|0x8DCD
DECL|macro|GL_INT_SAMPLER_BUFFER
define|#
directive|define
name|GL_INT_SAMPLER_BUFFER
value|0x8DD0
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_RECT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_RECT
value|0x8DD5
DECL|macro|GL_UNSIGNED_INT_SAMPLER_BUFFER
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_BUFFER
value|0x8DD8
DECL|macro|GL_TEXTURE_BUFFER
define|#
directive|define
name|GL_TEXTURE_BUFFER
value|0x8C2A
DECL|macro|GL_MAX_TEXTURE_BUFFER_SIZE
define|#
directive|define
name|GL_MAX_TEXTURE_BUFFER_SIZE
value|0x8C2B
DECL|macro|GL_TEXTURE_BINDING_BUFFER
define|#
directive|define
name|GL_TEXTURE_BINDING_BUFFER
value|0x8C2C
DECL|macro|GL_TEXTURE_BUFFER_DATA_STORE_BINDING
define|#
directive|define
name|GL_TEXTURE_BUFFER_DATA_STORE_BINDING
value|0x8C2D
DECL|macro|GL_TEXTURE_BUFFER_FORMAT
define|#
directive|define
name|GL_TEXTURE_BUFFER_FORMAT
value|0x8C2E
DECL|macro|GL_TEXTURE_RECTANGLE
define|#
directive|define
name|GL_TEXTURE_RECTANGLE
value|0x84F5
DECL|macro|GL_TEXTURE_BINDING_RECTANGLE
define|#
directive|define
name|GL_TEXTURE_BINDING_RECTANGLE
value|0x84F6
DECL|macro|GL_PROXY_TEXTURE_RECTANGLE
define|#
directive|define
name|GL_PROXY_TEXTURE_RECTANGLE
value|0x84F7
DECL|macro|GL_MAX_RECTANGLE_TEXTURE_SIZE
define|#
directive|define
name|GL_MAX_RECTANGLE_TEXTURE_SIZE
value|0x84F8
DECL|macro|GL_RED_SNORM
define|#
directive|define
name|GL_RED_SNORM
value|0x8F90
DECL|macro|GL_RG_SNORM
define|#
directive|define
name|GL_RG_SNORM
value|0x8F91
DECL|macro|GL_RGB_SNORM
define|#
directive|define
name|GL_RGB_SNORM
value|0x8F92
DECL|macro|GL_RGBA_SNORM
define|#
directive|define
name|GL_RGBA_SNORM
value|0x8F93
DECL|macro|GL_R8_SNORM
define|#
directive|define
name|GL_R8_SNORM
value|0x8F94
DECL|macro|GL_RG8_SNORM
define|#
directive|define
name|GL_RG8_SNORM
value|0x8F95
DECL|macro|GL_RGB8_SNORM
define|#
directive|define
name|GL_RGB8_SNORM
value|0x8F96
DECL|macro|GL_RGBA8_SNORM
define|#
directive|define
name|GL_RGBA8_SNORM
value|0x8F97
DECL|macro|GL_R16_SNORM
define|#
directive|define
name|GL_R16_SNORM
value|0x8F98
DECL|macro|GL_RG16_SNORM
define|#
directive|define
name|GL_RG16_SNORM
value|0x8F99
DECL|macro|GL_RGB16_SNORM
define|#
directive|define
name|GL_RGB16_SNORM
value|0x8F9A
DECL|macro|GL_RGBA16_SNORM
define|#
directive|define
name|GL_RGBA16_SNORM
value|0x8F9B
DECL|macro|GL_SIGNED_NORMALIZED
define|#
directive|define
name|GL_SIGNED_NORMALIZED
value|0x8F9C
DECL|macro|GL_PRIMITIVE_RESTART
define|#
directive|define
name|GL_PRIMITIVE_RESTART
value|0x8F9D
DECL|macro|GL_PRIMITIVE_RESTART_INDEX
define|#
directive|define
name|GL_PRIMITIVE_RESTART_INDEX
value|0x8F9E
comment|/* Reuse tokens from ARB_copy_buffer */
comment|/* reuse GL_COPY_READ_BUFFER */
comment|/* reuse GL_COPY_WRITE_BUFFER */
comment|/* Reuse tokens from ARB_draw_instanced (none) */
comment|/* Reuse tokens from ARB_uniform_buffer_object */
comment|/* reuse GL_UNIFORM_BUFFER */
comment|/* reuse GL_UNIFORM_BUFFER_BINDING */
comment|/* reuse GL_UNIFORM_BUFFER_START */
comment|/* reuse GL_UNIFORM_BUFFER_SIZE */
comment|/* reuse GL_MAX_VERTEX_UNIFORM_BLOCKS */
comment|/* reuse GL_MAX_FRAGMENT_UNIFORM_BLOCKS */
comment|/* reuse GL_MAX_COMBINED_UNIFORM_BLOCKS */
comment|/* reuse GL_MAX_UNIFORM_BUFFER_BINDINGS */
comment|/* reuse GL_MAX_UNIFORM_BLOCK_SIZE */
comment|/* reuse GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS */
comment|/* reuse GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS */
comment|/* reuse GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT */
comment|/* reuse GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */
comment|/* reuse GL_ACTIVE_UNIFORM_BLOCKS */
comment|/* reuse GL_UNIFORM_TYPE */
comment|/* reuse GL_UNIFORM_SIZE */
comment|/* reuse GL_UNIFORM_NAME_LENGTH */
comment|/* reuse GL_UNIFORM_BLOCK_INDEX */
comment|/* reuse GL_UNIFORM_OFFSET */
comment|/* reuse GL_UNIFORM_ARRAY_STRIDE */
comment|/* reuse GL_UNIFORM_MATRIX_STRIDE */
comment|/* reuse GL_UNIFORM_IS_ROW_MAJOR */
comment|/* reuse GL_UNIFORM_BLOCK_BINDING */
comment|/* reuse GL_UNIFORM_BLOCK_DATA_SIZE */
comment|/* reuse GL_UNIFORM_BLOCK_NAME_LENGTH */
comment|/* reuse GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS */
comment|/* reuse GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES */
comment|/* reuse GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER */
comment|/* reuse GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER */
comment|/* reuse GL_INVALID_INDEX */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_2
DECL|macro|GL_CONTEXT_CORE_PROFILE_BIT
define|#
directive|define
name|GL_CONTEXT_CORE_PROFILE_BIT
value|0x00000001
DECL|macro|GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
define|#
directive|define
name|GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
value|0x00000002
DECL|macro|GL_LINES_ADJACENCY
define|#
directive|define
name|GL_LINES_ADJACENCY
value|0x000A
DECL|macro|GL_LINE_STRIP_ADJACENCY
define|#
directive|define
name|GL_LINE_STRIP_ADJACENCY
value|0x000B
DECL|macro|GL_TRIANGLES_ADJACENCY
define|#
directive|define
name|GL_TRIANGLES_ADJACENCY
value|0x000C
DECL|macro|GL_TRIANGLE_STRIP_ADJACENCY
define|#
directive|define
name|GL_TRIANGLE_STRIP_ADJACENCY
value|0x000D
DECL|macro|GL_PROGRAM_POINT_SIZE
define|#
directive|define
name|GL_PROGRAM_POINT_SIZE
value|0x8642
DECL|macro|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
value|0x8C29
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_LAYERED
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_LAYERED
value|0x8DA7
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
value|0x8DA8
DECL|macro|GL_GEOMETRY_SHADER
define|#
directive|define
name|GL_GEOMETRY_SHADER
value|0x8DD9
DECL|macro|GL_GEOMETRY_VERTICES_OUT
define|#
directive|define
name|GL_GEOMETRY_VERTICES_OUT
value|0x8916
DECL|macro|GL_GEOMETRY_INPUT_TYPE
define|#
directive|define
name|GL_GEOMETRY_INPUT_TYPE
value|0x8917
DECL|macro|GL_GEOMETRY_OUTPUT_TYPE
define|#
directive|define
name|GL_GEOMETRY_OUTPUT_TYPE
value|0x8918
DECL|macro|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
value|0x8DDF
DECL|macro|GL_MAX_GEOMETRY_OUTPUT_VERTICES
define|#
directive|define
name|GL_MAX_GEOMETRY_OUTPUT_VERTICES
value|0x8DE0
DECL|macro|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
value|0x8DE1
DECL|macro|GL_MAX_VERTEX_OUTPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_VERTEX_OUTPUT_COMPONENTS
value|0x9122
DECL|macro|GL_MAX_GEOMETRY_INPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_GEOMETRY_INPUT_COMPONENTS
value|0x9123
DECL|macro|GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
value|0x9124
DECL|macro|GL_MAX_FRAGMENT_INPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_FRAGMENT_INPUT_COMPONENTS
value|0x9125
DECL|macro|GL_CONTEXT_PROFILE_MASK
define|#
directive|define
name|GL_CONTEXT_PROFILE_MASK
value|0x9126
comment|/* reuse GL_MAX_VARYING_COMPONENTS */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER */
comment|/* Reuse tokens from ARB_depth_clamp */
comment|/* reuse GL_DEPTH_CLAMP */
comment|/* Reuse tokens from ARB_draw_elements_base_vertex (none) */
comment|/* Reuse tokens from ARB_fragment_coord_conventions (none) */
comment|/* Reuse tokens from ARB_provoking_vertex */
comment|/* reuse GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION */
comment|/* reuse GL_FIRST_VERTEX_CONVENTION */
comment|/* reuse GL_LAST_VERTEX_CONVENTION */
comment|/* reuse GL_PROVOKING_VERTEX */
comment|/* Reuse tokens from ARB_seamless_cube_map */
comment|/* reuse GL_TEXTURE_CUBE_MAP_SEAMLESS */
comment|/* Reuse tokens from ARB_sync */
comment|/* reuse GL_MAX_SERVER_WAIT_TIMEOUT */
comment|/* reuse GL_OBJECT_TYPE */
comment|/* reuse GL_SYNC_CONDITION */
comment|/* reuse GL_SYNC_STATUS */
comment|/* reuse GL_SYNC_FLAGS */
comment|/* reuse GL_SYNC_FENCE */
comment|/* reuse GL_SYNC_GPU_COMMANDS_COMPLETE */
comment|/* reuse GL_UNSIGNALED */
comment|/* reuse GL_SIGNALED */
comment|/* reuse GL_ALREADY_SIGNALED */
comment|/* reuse GL_TIMEOUT_EXPIRED */
comment|/* reuse GL_CONDITION_SATISFIED */
comment|/* reuse GL_WAIT_FAILED */
comment|/* reuse GL_TIMEOUT_IGNORED */
comment|/* reuse GL_SYNC_FLUSH_COMMANDS_BIT */
comment|/* reuse GL_TIMEOUT_IGNORED */
comment|/* Reuse tokens from ARB_texture_multisample */
comment|/* reuse GL_SAMPLE_POSITION */
comment|/* reuse GL_SAMPLE_MASK */
comment|/* reuse GL_SAMPLE_MASK_VALUE */
comment|/* reuse GL_MAX_SAMPLE_MASK_WORDS */
comment|/* reuse GL_TEXTURE_2D_MULTISAMPLE */
comment|/* reuse GL_PROXY_TEXTURE_2D_MULTISAMPLE */
comment|/* reuse GL_TEXTURE_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_TEXTURE_BINDING_2D_MULTISAMPLE */
comment|/* reuse GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_TEXTURE_SAMPLES */
comment|/* reuse GL_TEXTURE_FIXED_SAMPLE_LOCATIONS */
comment|/* reuse GL_SAMPLER_2D_MULTISAMPLE */
comment|/* reuse GL_INT_SAMPLER_2D_MULTISAMPLE */
comment|/* reuse GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE */
comment|/* reuse GL_SAMPLER_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_MAX_COLOR_TEXTURE_SAMPLES */
comment|/* reuse GL_MAX_DEPTH_TEXTURE_SAMPLES */
comment|/* reuse GL_MAX_INTEGER_SAMPLES */
comment|/* Don't need to reuse tokens from ARB_vertex_array_bgra since they're already in 1.2 core */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_3
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_DIVISOR
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_DIVISOR
value|0x88FE
comment|/* Reuse tokens from ARB_blend_func_extended */
comment|/* reuse GL_SRC1_COLOR */
comment|/* reuse GL_ONE_MINUS_SRC1_COLOR */
comment|/* reuse GL_ONE_MINUS_SRC1_ALPHA */
comment|/* reuse GL_MAX_DUAL_SOURCE_DRAW_BUFFERS */
comment|/* Reuse tokens from ARB_explicit_attrib_location (none) */
comment|/* Reuse tokens from ARB_occlusion_query2 */
comment|/* reuse GL_ANY_SAMPLES_PASSED */
comment|/* Reuse tokens from ARB_sampler_objects */
comment|/* reuse GL_SAMPLER_BINDING */
comment|/* Reuse tokens from ARB_shader_bit_encoding (none) */
comment|/* Reuse tokens from ARB_texture_rgb10_a2ui */
comment|/* reuse GL_RGB10_A2UI */
comment|/* Reuse tokens from ARB_texture_swizzle */
comment|/* reuse GL_TEXTURE_SWIZZLE_R */
comment|/* reuse GL_TEXTURE_SWIZZLE_G */
comment|/* reuse GL_TEXTURE_SWIZZLE_B */
comment|/* reuse GL_TEXTURE_SWIZZLE_A */
comment|/* reuse GL_TEXTURE_SWIZZLE_RGBA */
comment|/* Reuse tokens from ARB_timer_query */
comment|/* reuse GL_TIME_ELAPSED */
comment|/* reuse GL_TIMESTAMP */
comment|/* Reuse tokens from ARB_vertex_type_2_10_10_10_rev */
comment|/* reuse GL_INT_2_10_10_10_REV */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_4_0
DECL|macro|GL_SAMPLE_SHADING
define|#
directive|define
name|GL_SAMPLE_SHADING
value|0x8C36
DECL|macro|GL_MIN_SAMPLE_SHADING_VALUE
define|#
directive|define
name|GL_MIN_SAMPLE_SHADING_VALUE
value|0x8C37
DECL|macro|GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
define|#
directive|define
name|GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
value|0x8E5E
DECL|macro|GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
define|#
directive|define
name|GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
value|0x8E5F
DECL|macro|GL_TEXTURE_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_ARRAY
value|0x9009
DECL|macro|GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
value|0x900A
DECL|macro|GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
value|0x900B
DECL|macro|GL_SAMPLER_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_SAMPLER_CUBE_MAP_ARRAY
value|0x900C
DECL|macro|GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
define|#
directive|define
name|GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
value|0x900D
DECL|macro|GL_INT_SAMPLER_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_INT_SAMPLER_CUBE_MAP_ARRAY
value|0x900E
DECL|macro|GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
value|0x900F
comment|/* Reuse tokens from ARB_texture_query_lod (none) */
comment|/* Reuse tokens from ARB_draw_buffers_blend (none) */
comment|/* Reuse tokens from ARB_draw_indirect */
comment|/* reuse GL_DRAW_INDIRECT_BUFFER */
comment|/* reuse GL_DRAW_INDIRECT_BUFFER_BINDING */
comment|/* Reuse tokens from ARB_gpu_shader5 */
comment|/* reuse GL_GEOMETRY_SHADER_INVOCATIONS */
comment|/* reuse GL_MAX_GEOMETRY_SHADER_INVOCATIONS */
comment|/* reuse GL_MIN_FRAGMENT_INTERPOLATION_OFFSET */
comment|/* reuse GL_MAX_FRAGMENT_INTERPOLATION_OFFSET */
comment|/* reuse GL_FRAGMENT_INTERPOLATION_OFFSET_BITS */
comment|/* reuse GL_MAX_VERTEX_STREAMS */
comment|/* Reuse tokens from ARB_gpu_shader_fp64 */
comment|/* reuse GL_DOUBLE_VEC2 */
comment|/* reuse GL_DOUBLE_VEC3 */
comment|/* reuse GL_DOUBLE_VEC4 */
comment|/* reuse GL_DOUBLE_MAT2 */
comment|/* reuse GL_DOUBLE_MAT3 */
comment|/* reuse GL_DOUBLE_MAT4 */
comment|/* reuse GL_DOUBLE_MAT2x3 */
comment|/* reuse GL_DOUBLE_MAT2x4 */
comment|/* reuse GL_DOUBLE_MAT3x2 */
comment|/* reuse GL_DOUBLE_MAT3x4 */
comment|/* reuse GL_DOUBLE_MAT4x2 */
comment|/* reuse GL_DOUBLE_MAT4x3 */
comment|/* Reuse tokens from ARB_shader_subroutine */
comment|/* reuse GL_ACTIVE_SUBROUTINES */
comment|/* reuse GL_ACTIVE_SUBROUTINE_UNIFORMS */
comment|/* reuse GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS */
comment|/* reuse GL_ACTIVE_SUBROUTINE_MAX_LENGTH */
comment|/* reuse GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH */
comment|/* reuse GL_MAX_SUBROUTINES */
comment|/* reuse GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS */
comment|/* reuse GL_NUM_COMPATIBLE_SUBROUTINES */
comment|/* reuse GL_COMPATIBLE_SUBROUTINES */
comment|/* Reuse tokens from ARB_tessellation_shader */
comment|/* reuse GL_PATCHES */
comment|/* reuse GL_PATCH_VERTICES */
comment|/* reuse GL_PATCH_DEFAULT_INNER_LEVEL */
comment|/* reuse GL_PATCH_DEFAULT_OUTER_LEVEL */
comment|/* reuse GL_TESS_CONTROL_OUTPUT_VERTICES */
comment|/* reuse GL_TESS_GEN_MODE */
comment|/* reuse GL_TESS_GEN_SPACING */
comment|/* reuse GL_TESS_GEN_VERTEX_ORDER */
comment|/* reuse GL_TESS_GEN_POINT_MODE */
comment|/* reuse GL_ISOLINES */
comment|/* reuse GL_FRACTIONAL_ODD */
comment|/* reuse GL_FRACTIONAL_EVEN */
comment|/* reuse GL_MAX_PATCH_VERTICES */
comment|/* reuse GL_MAX_TESS_GEN_LEVEL */
comment|/* reuse GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS */
comment|/* reuse GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS */
comment|/* reuse GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS */
comment|/* reuse GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS */
comment|/* reuse GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS */
comment|/* reuse GL_MAX_TESS_PATCH_COMPONENTS */
comment|/* reuse GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS */
comment|/* reuse GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS */
comment|/* reuse GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS */
comment|/* reuse GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS */
comment|/* reuse GL_MAX_TESS_CONTROL_INPUT_COMPONENTS */
comment|/* reuse GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS */
comment|/* reuse GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS */
comment|/* reuse GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS */
comment|/* reuse GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER */
comment|/* reuse GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER */
comment|/* reuse GL_TESS_EVALUATION_SHADER */
comment|/* reuse GL_TESS_CONTROL_SHADER */
comment|/* Reuse tokens from ARB_texture_buffer_object_rgb32 (none) */
comment|/* Reuse tokens from ARB_transform_feedback2 */
comment|/* reuse GL_TRANSFORM_FEEDBACK */
comment|/* reuse GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED */
comment|/* reuse GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE */
comment|/* reuse GL_TRANSFORM_FEEDBACK_BINDING */
comment|/* Reuse tokens from ARB_transform_feedback3 */
comment|/* reuse GL_MAX_TRANSFORM_FEEDBACK_BUFFERS */
comment|/* reuse GL_MAX_VERTEX_STREAMS */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_4_1
comment|/* Reuse tokens from ARB_ES2_compatibility */
comment|/* reuse GL_FIXED */
comment|/* reuse GL_IMPLEMENTATION_COLOR_READ_TYPE */
comment|/* reuse GL_IMPLEMENTATION_COLOR_READ_FORMAT */
comment|/* reuse GL_LOW_FLOAT */
comment|/* reuse GL_MEDIUM_FLOAT */
comment|/* reuse GL_HIGH_FLOAT */
comment|/* reuse GL_LOW_INT */
comment|/* reuse GL_MEDIUM_INT */
comment|/* reuse GL_HIGH_INT */
comment|/* reuse GL_SHADER_COMPILER */
comment|/* reuse GL_NUM_SHADER_BINARY_FORMATS */
comment|/* reuse GL_MAX_VERTEX_UNIFORM_VECTORS */
comment|/* reuse GL_MAX_VARYING_VECTORS */
comment|/* reuse GL_MAX_FRAGMENT_UNIFORM_VECTORS */
comment|/* reuse GL_RGB565 */
comment|/* Reuse tokens from ARB_get_program_binary */
comment|/* reuse GL_PROGRAM_BINARY_RETRIEVABLE_HINT */
comment|/* reuse GL_PROGRAM_BINARY_LENGTH */
comment|/* reuse GL_NUM_PROGRAM_BINARY_FORMATS */
comment|/* reuse GL_PROGRAM_BINARY_FORMATS */
comment|/* Reuse tokens from ARB_separate_shader_objects */
comment|/* reuse GL_VERTEX_SHADER_BIT */
comment|/* reuse GL_FRAGMENT_SHADER_BIT */
comment|/* reuse GL_GEOMETRY_SHADER_BIT */
comment|/* reuse GL_TESS_CONTROL_SHADER_BIT */
comment|/* reuse GL_TESS_EVALUATION_SHADER_BIT */
comment|/* reuse GL_ALL_SHADER_BITS */
comment|/* reuse GL_PROGRAM_SEPARABLE */
comment|/* reuse GL_ACTIVE_PROGRAM */
comment|/* reuse GL_PROGRAM_PIPELINE_BINDING */
comment|/* Reuse tokens from ARB_shader_precision (none) */
comment|/* Reuse tokens from ARB_vertex_attrib_64bit - all are in GL 3.0 and 4.0 already */
comment|/* Reuse tokens from ARB_viewport_array - some are in GL 1.1 and ARB_provoking_vertex already */
comment|/* reuse GL_MAX_VIEWPORTS */
comment|/* reuse GL_VIEWPORT_SUBPIXEL_BITS */
comment|/* reuse GL_VIEWPORT_BOUNDS_RANGE */
comment|/* reuse GL_LAYER_PROVOKING_VERTEX */
comment|/* reuse GL_VIEWPORT_INDEX_PROVOKING_VERTEX */
comment|/* reuse GL_UNDEFINED_VERTEX */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_4_2
comment|/* Reuse tokens from ARB_base_instance (none) */
comment|/* Reuse tokens from ARB_shading_language_420pack (none) */
comment|/* Reuse tokens from ARB_transform_feedback_instanced (none) */
comment|/* Reuse tokens from ARB_compressed_texture_pixel_storage */
comment|/* reuse GL_UNPACK_COMPRESSED_BLOCK_WIDTH */
comment|/* reuse GL_UNPACK_COMPRESSED_BLOCK_HEIGHT */
comment|/* reuse GL_UNPACK_COMPRESSED_BLOCK_DEPTH */
comment|/* reuse GL_UNPACK_COMPRESSED_BLOCK_SIZE */
comment|/* reuse GL_PACK_COMPRESSED_BLOCK_WIDTH */
comment|/* reuse GL_PACK_COMPRESSED_BLOCK_HEIGHT */
comment|/* reuse GL_PACK_COMPRESSED_BLOCK_DEPTH */
comment|/* reuse GL_PACK_COMPRESSED_BLOCK_SIZE */
comment|/* Reuse tokens from ARB_conservative_depth (none) */
comment|/* Reuse tokens from ARB_internalformat_query */
comment|/* reuse GL_NUM_SAMPLE_COUNTS */
comment|/* Reuse tokens from ARB_map_buffer_alignment */
comment|/* reuse GL_MIN_MAP_BUFFER_ALIGNMENT */
comment|/* Reuse tokens from ARB_shader_atomic_counters */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_BINDING */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_START */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_SIZE */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER */
comment|/* reuse GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER */
comment|/* reuse GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS */
comment|/* reuse GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS */
comment|/* reuse GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS */
comment|/* reuse GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS */
comment|/* reuse GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS */
comment|/* reuse GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS */
comment|/* reuse GL_MAX_VERTEX_ATOMIC_COUNTERS */
comment|/* reuse GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS */
comment|/* reuse GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS */
comment|/* reuse GL_MAX_GEOMETRY_ATOMIC_COUNTERS */
comment|/* reuse GL_MAX_FRAGMENT_ATOMIC_COUNTERS */
comment|/* reuse GL_MAX_COMBINED_ATOMIC_COUNTERS */
comment|/* reuse GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE */
comment|/* reuse GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS */
comment|/* reuse GL_ACTIVE_ATOMIC_COUNTER_BUFFERS */
comment|/* reuse GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX */
comment|/* reuse GL_UNSIGNED_INT_ATOMIC_COUNTER */
comment|/* Reuse tokens from ARB_shader_image_load_store */
comment|/* reuse GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT */
comment|/* reuse GL_ELEMENT_ARRAY_BARRIER_BIT */
comment|/* reuse GL_UNIFORM_BARRIER_BIT */
comment|/* reuse GL_TEXTURE_FETCH_BARRIER_BIT */
comment|/* reuse GL_SHADER_IMAGE_ACCESS_BARRIER_BIT */
comment|/* reuse GL_COMMAND_BARRIER_BIT */
comment|/* reuse GL_PIXEL_BUFFER_BARRIER_BIT */
comment|/* reuse GL_TEXTURE_UPDATE_BARRIER_BIT */
comment|/* reuse GL_BUFFER_UPDATE_BARRIER_BIT */
comment|/* reuse GL_FRAMEBUFFER_BARRIER_BIT */
comment|/* reuse GL_TRANSFORM_FEEDBACK_BARRIER_BIT */
comment|/* reuse GL_ATOMIC_COUNTER_BARRIER_BIT */
comment|/* reuse GL_ALL_BARRIER_BITS */
comment|/* reuse GL_MAX_IMAGE_UNITS */
comment|/* reuse GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS */
comment|/* reuse GL_IMAGE_BINDING_NAME */
comment|/* reuse GL_IMAGE_BINDING_LEVEL */
comment|/* reuse GL_IMAGE_BINDING_LAYERED */
comment|/* reuse GL_IMAGE_BINDING_LAYER */
comment|/* reuse GL_IMAGE_BINDING_ACCESS */
comment|/* reuse GL_IMAGE_1D */
comment|/* reuse GL_IMAGE_2D */
comment|/* reuse GL_IMAGE_3D */
comment|/* reuse GL_IMAGE_2D_RECT */
comment|/* reuse GL_IMAGE_CUBE */
comment|/* reuse GL_IMAGE_BUFFER */
comment|/* reuse GL_IMAGE_1D_ARRAY */
comment|/* reuse GL_IMAGE_2D_ARRAY */
comment|/* reuse GL_IMAGE_CUBE_MAP_ARRAY */
comment|/* reuse GL_IMAGE_2D_MULTISAMPLE */
comment|/* reuse GL_IMAGE_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_INT_IMAGE_1D */
comment|/* reuse GL_INT_IMAGE_2D */
comment|/* reuse GL_INT_IMAGE_3D */
comment|/* reuse GL_INT_IMAGE_2D_RECT */
comment|/* reuse GL_INT_IMAGE_CUBE */
comment|/* reuse GL_INT_IMAGE_BUFFER */
comment|/* reuse GL_INT_IMAGE_1D_ARRAY */
comment|/* reuse GL_INT_IMAGE_2D_ARRAY */
comment|/* reuse GL_INT_IMAGE_CUBE_MAP_ARRAY */
comment|/* reuse GL_INT_IMAGE_2D_MULTISAMPLE */
comment|/* reuse GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_1D */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_2D */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_3D */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_2D_RECT */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_CUBE */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_BUFFER */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_1D_ARRAY */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_2D_ARRAY */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE */
comment|/* reuse GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY */
comment|/* reuse GL_MAX_IMAGE_SAMPLES */
comment|/* reuse GL_IMAGE_BINDING_FORMAT */
comment|/* reuse GL_IMAGE_FORMAT_COMPATIBILITY_TYPE */
comment|/* reuse GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE */
comment|/* reuse GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS */
comment|/* reuse GL_MAX_VERTEX_IMAGE_UNIFORMS */
comment|/* reuse GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS */
comment|/* reuse GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS */
comment|/* reuse GL_MAX_GEOMETRY_IMAGE_UNIFORMS */
comment|/* reuse GL_MAX_FRAGMENT_IMAGE_UNIFORMS */
comment|/* reuse GL_MAX_COMBINED_IMAGE_UNIFORMS */
comment|/* Reuse tokens from ARB_shading_language_packing (none) */
comment|/* Reuse tokens from ARB_texture_storage */
comment|/* reuse GL_TEXTURE_IMMUTABLE_FORMAT */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_multitexture
DECL|macro|GL_TEXTURE0_ARB
define|#
directive|define
name|GL_TEXTURE0_ARB
value|0x84C0
DECL|macro|GL_TEXTURE1_ARB
define|#
directive|define
name|GL_TEXTURE1_ARB
value|0x84C1
DECL|macro|GL_TEXTURE2_ARB
define|#
directive|define
name|GL_TEXTURE2_ARB
value|0x84C2
DECL|macro|GL_TEXTURE3_ARB
define|#
directive|define
name|GL_TEXTURE3_ARB
value|0x84C3
DECL|macro|GL_TEXTURE4_ARB
define|#
directive|define
name|GL_TEXTURE4_ARB
value|0x84C4
DECL|macro|GL_TEXTURE5_ARB
define|#
directive|define
name|GL_TEXTURE5_ARB
value|0x84C5
DECL|macro|GL_TEXTURE6_ARB
define|#
directive|define
name|GL_TEXTURE6_ARB
value|0x84C6
DECL|macro|GL_TEXTURE7_ARB
define|#
directive|define
name|GL_TEXTURE7_ARB
value|0x84C7
DECL|macro|GL_TEXTURE8_ARB
define|#
directive|define
name|GL_TEXTURE8_ARB
value|0x84C8
DECL|macro|GL_TEXTURE9_ARB
define|#
directive|define
name|GL_TEXTURE9_ARB
value|0x84C9
DECL|macro|GL_TEXTURE10_ARB
define|#
directive|define
name|GL_TEXTURE10_ARB
value|0x84CA
DECL|macro|GL_TEXTURE11_ARB
define|#
directive|define
name|GL_TEXTURE11_ARB
value|0x84CB
DECL|macro|GL_TEXTURE12_ARB
define|#
directive|define
name|GL_TEXTURE12_ARB
value|0x84CC
DECL|macro|GL_TEXTURE13_ARB
define|#
directive|define
name|GL_TEXTURE13_ARB
value|0x84CD
DECL|macro|GL_TEXTURE14_ARB
define|#
directive|define
name|GL_TEXTURE14_ARB
value|0x84CE
DECL|macro|GL_TEXTURE15_ARB
define|#
directive|define
name|GL_TEXTURE15_ARB
value|0x84CF
DECL|macro|GL_TEXTURE16_ARB
define|#
directive|define
name|GL_TEXTURE16_ARB
value|0x84D0
DECL|macro|GL_TEXTURE17_ARB
define|#
directive|define
name|GL_TEXTURE17_ARB
value|0x84D1
DECL|macro|GL_TEXTURE18_ARB
define|#
directive|define
name|GL_TEXTURE18_ARB
value|0x84D2
DECL|macro|GL_TEXTURE19_ARB
define|#
directive|define
name|GL_TEXTURE19_ARB
value|0x84D3
DECL|macro|GL_TEXTURE20_ARB
define|#
directive|define
name|GL_TEXTURE20_ARB
value|0x84D4
DECL|macro|GL_TEXTURE21_ARB
define|#
directive|define
name|GL_TEXTURE21_ARB
value|0x84D5
DECL|macro|GL_TEXTURE22_ARB
define|#
directive|define
name|GL_TEXTURE22_ARB
value|0x84D6
DECL|macro|GL_TEXTURE23_ARB
define|#
directive|define
name|GL_TEXTURE23_ARB
value|0x84D7
DECL|macro|GL_TEXTURE24_ARB
define|#
directive|define
name|GL_TEXTURE24_ARB
value|0x84D8
DECL|macro|GL_TEXTURE25_ARB
define|#
directive|define
name|GL_TEXTURE25_ARB
value|0x84D9
DECL|macro|GL_TEXTURE26_ARB
define|#
directive|define
name|GL_TEXTURE26_ARB
value|0x84DA
DECL|macro|GL_TEXTURE27_ARB
define|#
directive|define
name|GL_TEXTURE27_ARB
value|0x84DB
DECL|macro|GL_TEXTURE28_ARB
define|#
directive|define
name|GL_TEXTURE28_ARB
value|0x84DC
DECL|macro|GL_TEXTURE29_ARB
define|#
directive|define
name|GL_TEXTURE29_ARB
value|0x84DD
DECL|macro|GL_TEXTURE30_ARB
define|#
directive|define
name|GL_TEXTURE30_ARB
value|0x84DE
DECL|macro|GL_TEXTURE31_ARB
define|#
directive|define
name|GL_TEXTURE31_ARB
value|0x84DF
DECL|macro|GL_ACTIVE_TEXTURE_ARB
define|#
directive|define
name|GL_ACTIVE_TEXTURE_ARB
value|0x84E0
DECL|macro|GL_CLIENT_ACTIVE_TEXTURE_ARB
define|#
directive|define
name|GL_CLIENT_ACTIVE_TEXTURE_ARB
value|0x84E1
DECL|macro|GL_MAX_TEXTURE_UNITS_ARB
define|#
directive|define
name|GL_MAX_TEXTURE_UNITS_ARB
value|0x84E2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transpose_matrix
DECL|macro|GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
define|#
directive|define
name|GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
value|0x84E3
DECL|macro|GL_TRANSPOSE_PROJECTION_MATRIX_ARB
define|#
directive|define
name|GL_TRANSPOSE_PROJECTION_MATRIX_ARB
value|0x84E4
DECL|macro|GL_TRANSPOSE_TEXTURE_MATRIX_ARB
define|#
directive|define
name|GL_TRANSPOSE_TEXTURE_MATRIX_ARB
value|0x84E5
DECL|macro|GL_TRANSPOSE_COLOR_MATRIX_ARB
define|#
directive|define
name|GL_TRANSPOSE_COLOR_MATRIX_ARB
value|0x84E6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_multisample
DECL|macro|GL_MULTISAMPLE_ARB
define|#
directive|define
name|GL_MULTISAMPLE_ARB
value|0x809D
DECL|macro|GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
value|0x809E
DECL|macro|GL_SAMPLE_ALPHA_TO_ONE_ARB
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_ONE_ARB
value|0x809F
DECL|macro|GL_SAMPLE_COVERAGE_ARB
define|#
directive|define
name|GL_SAMPLE_COVERAGE_ARB
value|0x80A0
DECL|macro|GL_SAMPLE_BUFFERS_ARB
define|#
directive|define
name|GL_SAMPLE_BUFFERS_ARB
value|0x80A8
DECL|macro|GL_SAMPLES_ARB
define|#
directive|define
name|GL_SAMPLES_ARB
value|0x80A9
DECL|macro|GL_SAMPLE_COVERAGE_VALUE_ARB
define|#
directive|define
name|GL_SAMPLE_COVERAGE_VALUE_ARB
value|0x80AA
DECL|macro|GL_SAMPLE_COVERAGE_INVERT_ARB
define|#
directive|define
name|GL_SAMPLE_COVERAGE_INVERT_ARB
value|0x80AB
DECL|macro|GL_MULTISAMPLE_BIT_ARB
define|#
directive|define
name|GL_MULTISAMPLE_BIT_ARB
value|0x20000000
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_add
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_cube_map
DECL|macro|GL_NORMAL_MAP_ARB
define|#
directive|define
name|GL_NORMAL_MAP_ARB
value|0x8511
DECL|macro|GL_REFLECTION_MAP_ARB
define|#
directive|define
name|GL_REFLECTION_MAP_ARB
value|0x8512
DECL|macro|GL_TEXTURE_CUBE_MAP_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_ARB
value|0x8513
DECL|macro|GL_TEXTURE_BINDING_CUBE_MAP_ARB
define|#
directive|define
name|GL_TEXTURE_BINDING_CUBE_MAP_ARB
value|0x8514
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
value|0x8515
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
value|0x8516
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
value|0x8517
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
value|0x8518
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
value|0x8519
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
value|0x851A
DECL|macro|GL_PROXY_TEXTURE_CUBE_MAP_ARB
define|#
directive|define
name|GL_PROXY_TEXTURE_CUBE_MAP_ARB
value|0x851B
DECL|macro|GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
define|#
directive|define
name|GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
value|0x851C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_compression
DECL|macro|GL_COMPRESSED_ALPHA_ARB
define|#
directive|define
name|GL_COMPRESSED_ALPHA_ARB
value|0x84E9
DECL|macro|GL_COMPRESSED_LUMINANCE_ARB
define|#
directive|define
name|GL_COMPRESSED_LUMINANCE_ARB
value|0x84EA
DECL|macro|GL_COMPRESSED_LUMINANCE_ALPHA_ARB
define|#
directive|define
name|GL_COMPRESSED_LUMINANCE_ALPHA_ARB
value|0x84EB
DECL|macro|GL_COMPRESSED_INTENSITY_ARB
define|#
directive|define
name|GL_COMPRESSED_INTENSITY_ARB
value|0x84EC
DECL|macro|GL_COMPRESSED_RGB_ARB
define|#
directive|define
name|GL_COMPRESSED_RGB_ARB
value|0x84ED
DECL|macro|GL_COMPRESSED_RGBA_ARB
define|#
directive|define
name|GL_COMPRESSED_RGBA_ARB
value|0x84EE
DECL|macro|GL_TEXTURE_COMPRESSION_HINT_ARB
define|#
directive|define
name|GL_TEXTURE_COMPRESSION_HINT_ARB
value|0x84EF
DECL|macro|GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
define|#
directive|define
name|GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
value|0x86A0
DECL|macro|GL_TEXTURE_COMPRESSED_ARB
define|#
directive|define
name|GL_TEXTURE_COMPRESSED_ARB
value|0x86A1
DECL|macro|GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
define|#
directive|define
name|GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
value|0x86A2
DECL|macro|GL_COMPRESSED_TEXTURE_FORMATS_ARB
define|#
directive|define
name|GL_COMPRESSED_TEXTURE_FORMATS_ARB
value|0x86A3
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_border_clamp
DECL|macro|GL_CLAMP_TO_BORDER_ARB
define|#
directive|define
name|GL_CLAMP_TO_BORDER_ARB
value|0x812D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_point_parameters
DECL|macro|GL_POINT_SIZE_MIN_ARB
define|#
directive|define
name|GL_POINT_SIZE_MIN_ARB
value|0x8126
DECL|macro|GL_POINT_SIZE_MAX_ARB
define|#
directive|define
name|GL_POINT_SIZE_MAX_ARB
value|0x8127
DECL|macro|GL_POINT_FADE_THRESHOLD_SIZE_ARB
define|#
directive|define
name|GL_POINT_FADE_THRESHOLD_SIZE_ARB
value|0x8128
DECL|macro|GL_POINT_DISTANCE_ATTENUATION_ARB
define|#
directive|define
name|GL_POINT_DISTANCE_ATTENUATION_ARB
value|0x8129
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_blend
DECL|macro|GL_MAX_VERTEX_UNITS_ARB
define|#
directive|define
name|GL_MAX_VERTEX_UNITS_ARB
value|0x86A4
DECL|macro|GL_ACTIVE_VERTEX_UNITS_ARB
define|#
directive|define
name|GL_ACTIVE_VERTEX_UNITS_ARB
value|0x86A5
DECL|macro|GL_WEIGHT_SUM_UNITY_ARB
define|#
directive|define
name|GL_WEIGHT_SUM_UNITY_ARB
value|0x86A6
DECL|macro|GL_VERTEX_BLEND_ARB
define|#
directive|define
name|GL_VERTEX_BLEND_ARB
value|0x86A7
DECL|macro|GL_CURRENT_WEIGHT_ARB
define|#
directive|define
name|GL_CURRENT_WEIGHT_ARB
value|0x86A8
DECL|macro|GL_WEIGHT_ARRAY_TYPE_ARB
define|#
directive|define
name|GL_WEIGHT_ARRAY_TYPE_ARB
value|0x86A9
DECL|macro|GL_WEIGHT_ARRAY_STRIDE_ARB
define|#
directive|define
name|GL_WEIGHT_ARRAY_STRIDE_ARB
value|0x86AA
DECL|macro|GL_WEIGHT_ARRAY_SIZE_ARB
define|#
directive|define
name|GL_WEIGHT_ARRAY_SIZE_ARB
value|0x86AB
DECL|macro|GL_WEIGHT_ARRAY_POINTER_ARB
define|#
directive|define
name|GL_WEIGHT_ARRAY_POINTER_ARB
value|0x86AC
DECL|macro|GL_WEIGHT_ARRAY_ARB
define|#
directive|define
name|GL_WEIGHT_ARRAY_ARB
value|0x86AD
DECL|macro|GL_MODELVIEW0_ARB
define|#
directive|define
name|GL_MODELVIEW0_ARB
value|0x1700
DECL|macro|GL_MODELVIEW1_ARB
define|#
directive|define
name|GL_MODELVIEW1_ARB
value|0x850A
DECL|macro|GL_MODELVIEW2_ARB
define|#
directive|define
name|GL_MODELVIEW2_ARB
value|0x8722
DECL|macro|GL_MODELVIEW3_ARB
define|#
directive|define
name|GL_MODELVIEW3_ARB
value|0x8723
DECL|macro|GL_MODELVIEW4_ARB
define|#
directive|define
name|GL_MODELVIEW4_ARB
value|0x8724
DECL|macro|GL_MODELVIEW5_ARB
define|#
directive|define
name|GL_MODELVIEW5_ARB
value|0x8725
DECL|macro|GL_MODELVIEW6_ARB
define|#
directive|define
name|GL_MODELVIEW6_ARB
value|0x8726
DECL|macro|GL_MODELVIEW7_ARB
define|#
directive|define
name|GL_MODELVIEW7_ARB
value|0x8727
DECL|macro|GL_MODELVIEW8_ARB
define|#
directive|define
name|GL_MODELVIEW8_ARB
value|0x8728
DECL|macro|GL_MODELVIEW9_ARB
define|#
directive|define
name|GL_MODELVIEW9_ARB
value|0x8729
DECL|macro|GL_MODELVIEW10_ARB
define|#
directive|define
name|GL_MODELVIEW10_ARB
value|0x872A
DECL|macro|GL_MODELVIEW11_ARB
define|#
directive|define
name|GL_MODELVIEW11_ARB
value|0x872B
DECL|macro|GL_MODELVIEW12_ARB
define|#
directive|define
name|GL_MODELVIEW12_ARB
value|0x872C
DECL|macro|GL_MODELVIEW13_ARB
define|#
directive|define
name|GL_MODELVIEW13_ARB
value|0x872D
DECL|macro|GL_MODELVIEW14_ARB
define|#
directive|define
name|GL_MODELVIEW14_ARB
value|0x872E
DECL|macro|GL_MODELVIEW15_ARB
define|#
directive|define
name|GL_MODELVIEW15_ARB
value|0x872F
DECL|macro|GL_MODELVIEW16_ARB
define|#
directive|define
name|GL_MODELVIEW16_ARB
value|0x8730
DECL|macro|GL_MODELVIEW17_ARB
define|#
directive|define
name|GL_MODELVIEW17_ARB
value|0x8731
DECL|macro|GL_MODELVIEW18_ARB
define|#
directive|define
name|GL_MODELVIEW18_ARB
value|0x8732
DECL|macro|GL_MODELVIEW19_ARB
define|#
directive|define
name|GL_MODELVIEW19_ARB
value|0x8733
DECL|macro|GL_MODELVIEW20_ARB
define|#
directive|define
name|GL_MODELVIEW20_ARB
value|0x8734
DECL|macro|GL_MODELVIEW21_ARB
define|#
directive|define
name|GL_MODELVIEW21_ARB
value|0x8735
DECL|macro|GL_MODELVIEW22_ARB
define|#
directive|define
name|GL_MODELVIEW22_ARB
value|0x8736
DECL|macro|GL_MODELVIEW23_ARB
define|#
directive|define
name|GL_MODELVIEW23_ARB
value|0x8737
DECL|macro|GL_MODELVIEW24_ARB
define|#
directive|define
name|GL_MODELVIEW24_ARB
value|0x8738
DECL|macro|GL_MODELVIEW25_ARB
define|#
directive|define
name|GL_MODELVIEW25_ARB
value|0x8739
DECL|macro|GL_MODELVIEW26_ARB
define|#
directive|define
name|GL_MODELVIEW26_ARB
value|0x873A
DECL|macro|GL_MODELVIEW27_ARB
define|#
directive|define
name|GL_MODELVIEW27_ARB
value|0x873B
DECL|macro|GL_MODELVIEW28_ARB
define|#
directive|define
name|GL_MODELVIEW28_ARB
value|0x873C
DECL|macro|GL_MODELVIEW29_ARB
define|#
directive|define
name|GL_MODELVIEW29_ARB
value|0x873D
DECL|macro|GL_MODELVIEW30_ARB
define|#
directive|define
name|GL_MODELVIEW30_ARB
value|0x873E
DECL|macro|GL_MODELVIEW31_ARB
define|#
directive|define
name|GL_MODELVIEW31_ARB
value|0x873F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_matrix_palette
DECL|macro|GL_MATRIX_PALETTE_ARB
define|#
directive|define
name|GL_MATRIX_PALETTE_ARB
value|0x8840
DECL|macro|GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
define|#
directive|define
name|GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
value|0x8841
DECL|macro|GL_MAX_PALETTE_MATRICES_ARB
define|#
directive|define
name|GL_MAX_PALETTE_MATRICES_ARB
value|0x8842
DECL|macro|GL_CURRENT_PALETTE_MATRIX_ARB
define|#
directive|define
name|GL_CURRENT_PALETTE_MATRIX_ARB
value|0x8843
DECL|macro|GL_MATRIX_INDEX_ARRAY_ARB
define|#
directive|define
name|GL_MATRIX_INDEX_ARRAY_ARB
value|0x8844
DECL|macro|GL_CURRENT_MATRIX_INDEX_ARB
define|#
directive|define
name|GL_CURRENT_MATRIX_INDEX_ARB
value|0x8845
DECL|macro|GL_MATRIX_INDEX_ARRAY_SIZE_ARB
define|#
directive|define
name|GL_MATRIX_INDEX_ARRAY_SIZE_ARB
value|0x8846
DECL|macro|GL_MATRIX_INDEX_ARRAY_TYPE_ARB
define|#
directive|define
name|GL_MATRIX_INDEX_ARRAY_TYPE_ARB
value|0x8847
DECL|macro|GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
define|#
directive|define
name|GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
value|0x8848
DECL|macro|GL_MATRIX_INDEX_ARRAY_POINTER_ARB
define|#
directive|define
name|GL_MATRIX_INDEX_ARRAY_POINTER_ARB
value|0x8849
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_combine
DECL|macro|GL_COMBINE_ARB
define|#
directive|define
name|GL_COMBINE_ARB
value|0x8570
DECL|macro|GL_COMBINE_RGB_ARB
define|#
directive|define
name|GL_COMBINE_RGB_ARB
value|0x8571
DECL|macro|GL_COMBINE_ALPHA_ARB
define|#
directive|define
name|GL_COMBINE_ALPHA_ARB
value|0x8572
DECL|macro|GL_SOURCE0_RGB_ARB
define|#
directive|define
name|GL_SOURCE0_RGB_ARB
value|0x8580
DECL|macro|GL_SOURCE1_RGB_ARB
define|#
directive|define
name|GL_SOURCE1_RGB_ARB
value|0x8581
DECL|macro|GL_SOURCE2_RGB_ARB
define|#
directive|define
name|GL_SOURCE2_RGB_ARB
value|0x8582
DECL|macro|GL_SOURCE0_ALPHA_ARB
define|#
directive|define
name|GL_SOURCE0_ALPHA_ARB
value|0x8588
DECL|macro|GL_SOURCE1_ALPHA_ARB
define|#
directive|define
name|GL_SOURCE1_ALPHA_ARB
value|0x8589
DECL|macro|GL_SOURCE2_ALPHA_ARB
define|#
directive|define
name|GL_SOURCE2_ALPHA_ARB
value|0x858A
DECL|macro|GL_OPERAND0_RGB_ARB
define|#
directive|define
name|GL_OPERAND0_RGB_ARB
value|0x8590
DECL|macro|GL_OPERAND1_RGB_ARB
define|#
directive|define
name|GL_OPERAND1_RGB_ARB
value|0x8591
DECL|macro|GL_OPERAND2_RGB_ARB
define|#
directive|define
name|GL_OPERAND2_RGB_ARB
value|0x8592
DECL|macro|GL_OPERAND0_ALPHA_ARB
define|#
directive|define
name|GL_OPERAND0_ALPHA_ARB
value|0x8598
DECL|macro|GL_OPERAND1_ALPHA_ARB
define|#
directive|define
name|GL_OPERAND1_ALPHA_ARB
value|0x8599
DECL|macro|GL_OPERAND2_ALPHA_ARB
define|#
directive|define
name|GL_OPERAND2_ALPHA_ARB
value|0x859A
DECL|macro|GL_RGB_SCALE_ARB
define|#
directive|define
name|GL_RGB_SCALE_ARB
value|0x8573
DECL|macro|GL_ADD_SIGNED_ARB
define|#
directive|define
name|GL_ADD_SIGNED_ARB
value|0x8574
DECL|macro|GL_INTERPOLATE_ARB
define|#
directive|define
name|GL_INTERPOLATE_ARB
value|0x8575
DECL|macro|GL_SUBTRACT_ARB
define|#
directive|define
name|GL_SUBTRACT_ARB
value|0x84E7
DECL|macro|GL_CONSTANT_ARB
define|#
directive|define
name|GL_CONSTANT_ARB
value|0x8576
DECL|macro|GL_PRIMARY_COLOR_ARB
define|#
directive|define
name|GL_PRIMARY_COLOR_ARB
value|0x8577
DECL|macro|GL_PREVIOUS_ARB
define|#
directive|define
name|GL_PREVIOUS_ARB
value|0x8578
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_crossbar
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_dot3
DECL|macro|GL_DOT3_RGB_ARB
define|#
directive|define
name|GL_DOT3_RGB_ARB
value|0x86AE
DECL|macro|GL_DOT3_RGBA_ARB
define|#
directive|define
name|GL_DOT3_RGBA_ARB
value|0x86AF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_mirrored_repeat
DECL|macro|GL_MIRRORED_REPEAT_ARB
define|#
directive|define
name|GL_MIRRORED_REPEAT_ARB
value|0x8370
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_depth_texture
DECL|macro|GL_DEPTH_COMPONENT16_ARB
define|#
directive|define
name|GL_DEPTH_COMPONENT16_ARB
value|0x81A5
DECL|macro|GL_DEPTH_COMPONENT24_ARB
define|#
directive|define
name|GL_DEPTH_COMPONENT24_ARB
value|0x81A6
DECL|macro|GL_DEPTH_COMPONENT32_ARB
define|#
directive|define
name|GL_DEPTH_COMPONENT32_ARB
value|0x81A7
DECL|macro|GL_TEXTURE_DEPTH_SIZE_ARB
define|#
directive|define
name|GL_TEXTURE_DEPTH_SIZE_ARB
value|0x884A
DECL|macro|GL_DEPTH_TEXTURE_MODE_ARB
define|#
directive|define
name|GL_DEPTH_TEXTURE_MODE_ARB
value|0x884B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shadow
DECL|macro|GL_TEXTURE_COMPARE_MODE_ARB
define|#
directive|define
name|GL_TEXTURE_COMPARE_MODE_ARB
value|0x884C
DECL|macro|GL_TEXTURE_COMPARE_FUNC_ARB
define|#
directive|define
name|GL_TEXTURE_COMPARE_FUNC_ARB
value|0x884D
DECL|macro|GL_COMPARE_R_TO_TEXTURE_ARB
define|#
directive|define
name|GL_COMPARE_R_TO_TEXTURE_ARB
value|0x884E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shadow_ambient
DECL|macro|GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
define|#
directive|define
name|GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
value|0x80BF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_window_pos
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_program
DECL|macro|GL_COLOR_SUM_ARB
define|#
directive|define
name|GL_COLOR_SUM_ARB
value|0x8458
DECL|macro|GL_VERTEX_PROGRAM_ARB
define|#
directive|define
name|GL_VERTEX_PROGRAM_ARB
value|0x8620
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
value|0x8622
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
value|0x8623
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
value|0x8624
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
value|0x8625
DECL|macro|GL_CURRENT_VERTEX_ATTRIB_ARB
define|#
directive|define
name|GL_CURRENT_VERTEX_ATTRIB_ARB
value|0x8626
DECL|macro|GL_PROGRAM_LENGTH_ARB
define|#
directive|define
name|GL_PROGRAM_LENGTH_ARB
value|0x8627
DECL|macro|GL_PROGRAM_STRING_ARB
define|#
directive|define
name|GL_PROGRAM_STRING_ARB
value|0x8628
DECL|macro|GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
value|0x862E
DECL|macro|GL_MAX_PROGRAM_MATRICES_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_MATRICES_ARB
value|0x862F
DECL|macro|GL_CURRENT_MATRIX_STACK_DEPTH_ARB
define|#
directive|define
name|GL_CURRENT_MATRIX_STACK_DEPTH_ARB
value|0x8640
DECL|macro|GL_CURRENT_MATRIX_ARB
define|#
directive|define
name|GL_CURRENT_MATRIX_ARB
value|0x8641
DECL|macro|GL_VERTEX_PROGRAM_POINT_SIZE_ARB
define|#
directive|define
name|GL_VERTEX_PROGRAM_POINT_SIZE_ARB
value|0x8642
DECL|macro|GL_VERTEX_PROGRAM_TWO_SIDE_ARB
define|#
directive|define
name|GL_VERTEX_PROGRAM_TWO_SIDE_ARB
value|0x8643
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
value|0x8645
DECL|macro|GL_PROGRAM_ERROR_POSITION_ARB
define|#
directive|define
name|GL_PROGRAM_ERROR_POSITION_ARB
value|0x864B
DECL|macro|GL_PROGRAM_BINDING_ARB
define|#
directive|define
name|GL_PROGRAM_BINDING_ARB
value|0x8677
DECL|macro|GL_MAX_VERTEX_ATTRIBS_ARB
define|#
directive|define
name|GL_MAX_VERTEX_ATTRIBS_ARB
value|0x8869
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
value|0x886A
DECL|macro|GL_PROGRAM_ERROR_STRING_ARB
define|#
directive|define
name|GL_PROGRAM_ERROR_STRING_ARB
value|0x8874
DECL|macro|GL_PROGRAM_FORMAT_ASCII_ARB
define|#
directive|define
name|GL_PROGRAM_FORMAT_ASCII_ARB
value|0x8875
DECL|macro|GL_PROGRAM_FORMAT_ARB
define|#
directive|define
name|GL_PROGRAM_FORMAT_ARB
value|0x8876
DECL|macro|GL_PROGRAM_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_INSTRUCTIONS_ARB
value|0x88A0
DECL|macro|GL_MAX_PROGRAM_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_INSTRUCTIONS_ARB
value|0x88A1
DECL|macro|GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
value|0x88A2
DECL|macro|GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
value|0x88A3
DECL|macro|GL_PROGRAM_TEMPORARIES_ARB
define|#
directive|define
name|GL_PROGRAM_TEMPORARIES_ARB
value|0x88A4
DECL|macro|GL_MAX_PROGRAM_TEMPORARIES_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_TEMPORARIES_ARB
value|0x88A5
DECL|macro|GL_PROGRAM_NATIVE_TEMPORARIES_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_TEMPORARIES_ARB
value|0x88A6
DECL|macro|GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
value|0x88A7
DECL|macro|GL_PROGRAM_PARAMETERS_ARB
define|#
directive|define
name|GL_PROGRAM_PARAMETERS_ARB
value|0x88A8
DECL|macro|GL_MAX_PROGRAM_PARAMETERS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_PARAMETERS_ARB
value|0x88A9
DECL|macro|GL_PROGRAM_NATIVE_PARAMETERS_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_PARAMETERS_ARB
value|0x88AA
DECL|macro|GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
value|0x88AB
DECL|macro|GL_PROGRAM_ATTRIBS_ARB
define|#
directive|define
name|GL_PROGRAM_ATTRIBS_ARB
value|0x88AC
DECL|macro|GL_MAX_PROGRAM_ATTRIBS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_ATTRIBS_ARB
value|0x88AD
DECL|macro|GL_PROGRAM_NATIVE_ATTRIBS_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_ATTRIBS_ARB
value|0x88AE
DECL|macro|GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
value|0x88AF
DECL|macro|GL_PROGRAM_ADDRESS_REGISTERS_ARB
define|#
directive|define
name|GL_PROGRAM_ADDRESS_REGISTERS_ARB
value|0x88B0
DECL|macro|GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
value|0x88B1
DECL|macro|GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
value|0x88B2
DECL|macro|GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
value|0x88B3
DECL|macro|GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
value|0x88B4
DECL|macro|GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
value|0x88B5
DECL|macro|GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
define|#
directive|define
name|GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
value|0x88B6
DECL|macro|GL_TRANSPOSE_CURRENT_MATRIX_ARB
define|#
directive|define
name|GL_TRANSPOSE_CURRENT_MATRIX_ARB
value|0x88B7
DECL|macro|GL_MATRIX0_ARB
define|#
directive|define
name|GL_MATRIX0_ARB
value|0x88C0
DECL|macro|GL_MATRIX1_ARB
define|#
directive|define
name|GL_MATRIX1_ARB
value|0x88C1
DECL|macro|GL_MATRIX2_ARB
define|#
directive|define
name|GL_MATRIX2_ARB
value|0x88C2
DECL|macro|GL_MATRIX3_ARB
define|#
directive|define
name|GL_MATRIX3_ARB
value|0x88C3
DECL|macro|GL_MATRIX4_ARB
define|#
directive|define
name|GL_MATRIX4_ARB
value|0x88C4
DECL|macro|GL_MATRIX5_ARB
define|#
directive|define
name|GL_MATRIX5_ARB
value|0x88C5
DECL|macro|GL_MATRIX6_ARB
define|#
directive|define
name|GL_MATRIX6_ARB
value|0x88C6
DECL|macro|GL_MATRIX7_ARB
define|#
directive|define
name|GL_MATRIX7_ARB
value|0x88C7
DECL|macro|GL_MATRIX8_ARB
define|#
directive|define
name|GL_MATRIX8_ARB
value|0x88C8
DECL|macro|GL_MATRIX9_ARB
define|#
directive|define
name|GL_MATRIX9_ARB
value|0x88C9
DECL|macro|GL_MATRIX10_ARB
define|#
directive|define
name|GL_MATRIX10_ARB
value|0x88CA
DECL|macro|GL_MATRIX11_ARB
define|#
directive|define
name|GL_MATRIX11_ARB
value|0x88CB
DECL|macro|GL_MATRIX12_ARB
define|#
directive|define
name|GL_MATRIX12_ARB
value|0x88CC
DECL|macro|GL_MATRIX13_ARB
define|#
directive|define
name|GL_MATRIX13_ARB
value|0x88CD
DECL|macro|GL_MATRIX14_ARB
define|#
directive|define
name|GL_MATRIX14_ARB
value|0x88CE
DECL|macro|GL_MATRIX15_ARB
define|#
directive|define
name|GL_MATRIX15_ARB
value|0x88CF
DECL|macro|GL_MATRIX16_ARB
define|#
directive|define
name|GL_MATRIX16_ARB
value|0x88D0
DECL|macro|GL_MATRIX17_ARB
define|#
directive|define
name|GL_MATRIX17_ARB
value|0x88D1
DECL|macro|GL_MATRIX18_ARB
define|#
directive|define
name|GL_MATRIX18_ARB
value|0x88D2
DECL|macro|GL_MATRIX19_ARB
define|#
directive|define
name|GL_MATRIX19_ARB
value|0x88D3
DECL|macro|GL_MATRIX20_ARB
define|#
directive|define
name|GL_MATRIX20_ARB
value|0x88D4
DECL|macro|GL_MATRIX21_ARB
define|#
directive|define
name|GL_MATRIX21_ARB
value|0x88D5
DECL|macro|GL_MATRIX22_ARB
define|#
directive|define
name|GL_MATRIX22_ARB
value|0x88D6
DECL|macro|GL_MATRIX23_ARB
define|#
directive|define
name|GL_MATRIX23_ARB
value|0x88D7
DECL|macro|GL_MATRIX24_ARB
define|#
directive|define
name|GL_MATRIX24_ARB
value|0x88D8
DECL|macro|GL_MATRIX25_ARB
define|#
directive|define
name|GL_MATRIX25_ARB
value|0x88D9
DECL|macro|GL_MATRIX26_ARB
define|#
directive|define
name|GL_MATRIX26_ARB
value|0x88DA
DECL|macro|GL_MATRIX27_ARB
define|#
directive|define
name|GL_MATRIX27_ARB
value|0x88DB
DECL|macro|GL_MATRIX28_ARB
define|#
directive|define
name|GL_MATRIX28_ARB
value|0x88DC
DECL|macro|GL_MATRIX29_ARB
define|#
directive|define
name|GL_MATRIX29_ARB
value|0x88DD
DECL|macro|GL_MATRIX30_ARB
define|#
directive|define
name|GL_MATRIX30_ARB
value|0x88DE
DECL|macro|GL_MATRIX31_ARB
define|#
directive|define
name|GL_MATRIX31_ARB
value|0x88DF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_program
DECL|macro|GL_FRAGMENT_PROGRAM_ARB
define|#
directive|define
name|GL_FRAGMENT_PROGRAM_ARB
value|0x8804
DECL|macro|GL_PROGRAM_ALU_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_ALU_INSTRUCTIONS_ARB
value|0x8805
DECL|macro|GL_PROGRAM_TEX_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_TEX_INSTRUCTIONS_ARB
value|0x8806
DECL|macro|GL_PROGRAM_TEX_INDIRECTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_TEX_INDIRECTIONS_ARB
value|0x8807
DECL|macro|GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
value|0x8808
DECL|macro|GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
value|0x8809
DECL|macro|GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
define|#
directive|define
name|GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
value|0x880A
DECL|macro|GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
value|0x880B
DECL|macro|GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
value|0x880C
DECL|macro|GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
value|0x880D
DECL|macro|GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
value|0x880E
DECL|macro|GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
value|0x880F
DECL|macro|GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
value|0x8810
DECL|macro|GL_MAX_TEXTURE_COORDS_ARB
define|#
directive|define
name|GL_MAX_TEXTURE_COORDS_ARB
value|0x8871
DECL|macro|GL_MAX_TEXTURE_IMAGE_UNITS_ARB
define|#
directive|define
name|GL_MAX_TEXTURE_IMAGE_UNITS_ARB
value|0x8872
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_buffer_object
DECL|macro|GL_BUFFER_SIZE_ARB
define|#
directive|define
name|GL_BUFFER_SIZE_ARB
value|0x8764
DECL|macro|GL_BUFFER_USAGE_ARB
define|#
directive|define
name|GL_BUFFER_USAGE_ARB
value|0x8765
DECL|macro|GL_ARRAY_BUFFER_ARB
define|#
directive|define
name|GL_ARRAY_BUFFER_ARB
value|0x8892
DECL|macro|GL_ELEMENT_ARRAY_BUFFER_ARB
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER_ARB
value|0x8893
DECL|macro|GL_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_ARRAY_BUFFER_BINDING_ARB
value|0x8894
DECL|macro|GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
value|0x8895
DECL|macro|GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
value|0x8896
DECL|macro|GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
value|0x8897
DECL|macro|GL_COLOR_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_COLOR_ARRAY_BUFFER_BINDING_ARB
value|0x8898
DECL|macro|GL_INDEX_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_INDEX_ARRAY_BUFFER_BINDING_ARB
value|0x8899
DECL|macro|GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
value|0x889A
DECL|macro|GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
value|0x889B
DECL|macro|GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
value|0x889C
DECL|macro|GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
value|0x889D
DECL|macro|GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
value|0x889E
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
value|0x889F
DECL|macro|GL_READ_ONLY_ARB
define|#
directive|define
name|GL_READ_ONLY_ARB
value|0x88B8
DECL|macro|GL_WRITE_ONLY_ARB
define|#
directive|define
name|GL_WRITE_ONLY_ARB
value|0x88B9
DECL|macro|GL_READ_WRITE_ARB
define|#
directive|define
name|GL_READ_WRITE_ARB
value|0x88BA
DECL|macro|GL_BUFFER_ACCESS_ARB
define|#
directive|define
name|GL_BUFFER_ACCESS_ARB
value|0x88BB
DECL|macro|GL_BUFFER_MAPPED_ARB
define|#
directive|define
name|GL_BUFFER_MAPPED_ARB
value|0x88BC
DECL|macro|GL_BUFFER_MAP_POINTER_ARB
define|#
directive|define
name|GL_BUFFER_MAP_POINTER_ARB
value|0x88BD
DECL|macro|GL_STREAM_DRAW_ARB
define|#
directive|define
name|GL_STREAM_DRAW_ARB
value|0x88E0
DECL|macro|GL_STREAM_READ_ARB
define|#
directive|define
name|GL_STREAM_READ_ARB
value|0x88E1
DECL|macro|GL_STREAM_COPY_ARB
define|#
directive|define
name|GL_STREAM_COPY_ARB
value|0x88E2
DECL|macro|GL_STATIC_DRAW_ARB
define|#
directive|define
name|GL_STATIC_DRAW_ARB
value|0x88E4
DECL|macro|GL_STATIC_READ_ARB
define|#
directive|define
name|GL_STATIC_READ_ARB
value|0x88E5
DECL|macro|GL_STATIC_COPY_ARB
define|#
directive|define
name|GL_STATIC_COPY_ARB
value|0x88E6
DECL|macro|GL_DYNAMIC_DRAW_ARB
define|#
directive|define
name|GL_DYNAMIC_DRAW_ARB
value|0x88E8
DECL|macro|GL_DYNAMIC_READ_ARB
define|#
directive|define
name|GL_DYNAMIC_READ_ARB
value|0x88E9
DECL|macro|GL_DYNAMIC_COPY_ARB
define|#
directive|define
name|GL_DYNAMIC_COPY_ARB
value|0x88EA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_occlusion_query
DECL|macro|GL_QUERY_COUNTER_BITS_ARB
define|#
directive|define
name|GL_QUERY_COUNTER_BITS_ARB
value|0x8864
DECL|macro|GL_CURRENT_QUERY_ARB
define|#
directive|define
name|GL_CURRENT_QUERY_ARB
value|0x8865
DECL|macro|GL_QUERY_RESULT_ARB
define|#
directive|define
name|GL_QUERY_RESULT_ARB
value|0x8866
DECL|macro|GL_QUERY_RESULT_AVAILABLE_ARB
define|#
directive|define
name|GL_QUERY_RESULT_AVAILABLE_ARB
value|0x8867
DECL|macro|GL_SAMPLES_PASSED_ARB
define|#
directive|define
name|GL_SAMPLES_PASSED_ARB
value|0x8914
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_objects
DECL|macro|GL_PROGRAM_OBJECT_ARB
define|#
directive|define
name|GL_PROGRAM_OBJECT_ARB
value|0x8B40
DECL|macro|GL_SHADER_OBJECT_ARB
define|#
directive|define
name|GL_SHADER_OBJECT_ARB
value|0x8B48
DECL|macro|GL_OBJECT_TYPE_ARB
define|#
directive|define
name|GL_OBJECT_TYPE_ARB
value|0x8B4E
DECL|macro|GL_OBJECT_SUBTYPE_ARB
define|#
directive|define
name|GL_OBJECT_SUBTYPE_ARB
value|0x8B4F
DECL|macro|GL_FLOAT_VEC2_ARB
define|#
directive|define
name|GL_FLOAT_VEC2_ARB
value|0x8B50
DECL|macro|GL_FLOAT_VEC3_ARB
define|#
directive|define
name|GL_FLOAT_VEC3_ARB
value|0x8B51
DECL|macro|GL_FLOAT_VEC4_ARB
define|#
directive|define
name|GL_FLOAT_VEC4_ARB
value|0x8B52
DECL|macro|GL_INT_VEC2_ARB
define|#
directive|define
name|GL_INT_VEC2_ARB
value|0x8B53
DECL|macro|GL_INT_VEC3_ARB
define|#
directive|define
name|GL_INT_VEC3_ARB
value|0x8B54
DECL|macro|GL_INT_VEC4_ARB
define|#
directive|define
name|GL_INT_VEC4_ARB
value|0x8B55
DECL|macro|GL_BOOL_ARB
define|#
directive|define
name|GL_BOOL_ARB
value|0x8B56
DECL|macro|GL_BOOL_VEC2_ARB
define|#
directive|define
name|GL_BOOL_VEC2_ARB
value|0x8B57
DECL|macro|GL_BOOL_VEC3_ARB
define|#
directive|define
name|GL_BOOL_VEC3_ARB
value|0x8B58
DECL|macro|GL_BOOL_VEC4_ARB
define|#
directive|define
name|GL_BOOL_VEC4_ARB
value|0x8B59
DECL|macro|GL_FLOAT_MAT2_ARB
define|#
directive|define
name|GL_FLOAT_MAT2_ARB
value|0x8B5A
DECL|macro|GL_FLOAT_MAT3_ARB
define|#
directive|define
name|GL_FLOAT_MAT3_ARB
value|0x8B5B
DECL|macro|GL_FLOAT_MAT4_ARB
define|#
directive|define
name|GL_FLOAT_MAT4_ARB
value|0x8B5C
DECL|macro|GL_SAMPLER_1D_ARB
define|#
directive|define
name|GL_SAMPLER_1D_ARB
value|0x8B5D
DECL|macro|GL_SAMPLER_2D_ARB
define|#
directive|define
name|GL_SAMPLER_2D_ARB
value|0x8B5E
DECL|macro|GL_SAMPLER_3D_ARB
define|#
directive|define
name|GL_SAMPLER_3D_ARB
value|0x8B5F
DECL|macro|GL_SAMPLER_CUBE_ARB
define|#
directive|define
name|GL_SAMPLER_CUBE_ARB
value|0x8B60
DECL|macro|GL_SAMPLER_1D_SHADOW_ARB
define|#
directive|define
name|GL_SAMPLER_1D_SHADOW_ARB
value|0x8B61
DECL|macro|GL_SAMPLER_2D_SHADOW_ARB
define|#
directive|define
name|GL_SAMPLER_2D_SHADOW_ARB
value|0x8B62
DECL|macro|GL_SAMPLER_2D_RECT_ARB
define|#
directive|define
name|GL_SAMPLER_2D_RECT_ARB
value|0x8B63
DECL|macro|GL_SAMPLER_2D_RECT_SHADOW_ARB
define|#
directive|define
name|GL_SAMPLER_2D_RECT_SHADOW_ARB
value|0x8B64
DECL|macro|GL_OBJECT_DELETE_STATUS_ARB
define|#
directive|define
name|GL_OBJECT_DELETE_STATUS_ARB
value|0x8B80
DECL|macro|GL_OBJECT_COMPILE_STATUS_ARB
define|#
directive|define
name|GL_OBJECT_COMPILE_STATUS_ARB
value|0x8B81
DECL|macro|GL_OBJECT_LINK_STATUS_ARB
define|#
directive|define
name|GL_OBJECT_LINK_STATUS_ARB
value|0x8B82
DECL|macro|GL_OBJECT_VALIDATE_STATUS_ARB
define|#
directive|define
name|GL_OBJECT_VALIDATE_STATUS_ARB
value|0x8B83
DECL|macro|GL_OBJECT_INFO_LOG_LENGTH_ARB
define|#
directive|define
name|GL_OBJECT_INFO_LOG_LENGTH_ARB
value|0x8B84
DECL|macro|GL_OBJECT_ATTACHED_OBJECTS_ARB
define|#
directive|define
name|GL_OBJECT_ATTACHED_OBJECTS_ARB
value|0x8B85
DECL|macro|GL_OBJECT_ACTIVE_UNIFORMS_ARB
define|#
directive|define
name|GL_OBJECT_ACTIVE_UNIFORMS_ARB
value|0x8B86
DECL|macro|GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
define|#
directive|define
name|GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
value|0x8B87
DECL|macro|GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
define|#
directive|define
name|GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
value|0x8B88
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_shader
DECL|macro|GL_VERTEX_SHADER_ARB
define|#
directive|define
name|GL_VERTEX_SHADER_ARB
value|0x8B31
DECL|macro|GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
define|#
directive|define
name|GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
value|0x8B4A
DECL|macro|GL_MAX_VARYING_FLOATS_ARB
define|#
directive|define
name|GL_MAX_VARYING_FLOATS_ARB
value|0x8B4B
DECL|macro|GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
define|#
directive|define
name|GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
value|0x8B4C
DECL|macro|GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
define|#
directive|define
name|GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
value|0x8B4D
DECL|macro|GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
define|#
directive|define
name|GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
value|0x8B89
DECL|macro|GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
define|#
directive|define
name|GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
value|0x8B8A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_shader
DECL|macro|GL_FRAGMENT_SHADER_ARB
define|#
directive|define
name|GL_FRAGMENT_SHADER_ARB
value|0x8B30
DECL|macro|GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
define|#
directive|define
name|GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
value|0x8B49
DECL|macro|GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
define|#
directive|define
name|GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
value|0x8B8B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_100
DECL|macro|GL_SHADING_LANGUAGE_VERSION_ARB
define|#
directive|define
name|GL_SHADING_LANGUAGE_VERSION_ARB
value|0x8B8C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_non_power_of_two
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_point_sprite
DECL|macro|GL_POINT_SPRITE_ARB
define|#
directive|define
name|GL_POINT_SPRITE_ARB
value|0x8861
DECL|macro|GL_COORD_REPLACE_ARB
define|#
directive|define
name|GL_COORD_REPLACE_ARB
value|0x8862
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_program_shadow
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_buffers
DECL|macro|GL_MAX_DRAW_BUFFERS_ARB
define|#
directive|define
name|GL_MAX_DRAW_BUFFERS_ARB
value|0x8824
DECL|macro|GL_DRAW_BUFFER0_ARB
define|#
directive|define
name|GL_DRAW_BUFFER0_ARB
value|0x8825
DECL|macro|GL_DRAW_BUFFER1_ARB
define|#
directive|define
name|GL_DRAW_BUFFER1_ARB
value|0x8826
DECL|macro|GL_DRAW_BUFFER2_ARB
define|#
directive|define
name|GL_DRAW_BUFFER2_ARB
value|0x8827
DECL|macro|GL_DRAW_BUFFER3_ARB
define|#
directive|define
name|GL_DRAW_BUFFER3_ARB
value|0x8828
DECL|macro|GL_DRAW_BUFFER4_ARB
define|#
directive|define
name|GL_DRAW_BUFFER4_ARB
value|0x8829
DECL|macro|GL_DRAW_BUFFER5_ARB
define|#
directive|define
name|GL_DRAW_BUFFER5_ARB
value|0x882A
DECL|macro|GL_DRAW_BUFFER6_ARB
define|#
directive|define
name|GL_DRAW_BUFFER6_ARB
value|0x882B
DECL|macro|GL_DRAW_BUFFER7_ARB
define|#
directive|define
name|GL_DRAW_BUFFER7_ARB
value|0x882C
DECL|macro|GL_DRAW_BUFFER8_ARB
define|#
directive|define
name|GL_DRAW_BUFFER8_ARB
value|0x882D
DECL|macro|GL_DRAW_BUFFER9_ARB
define|#
directive|define
name|GL_DRAW_BUFFER9_ARB
value|0x882E
DECL|macro|GL_DRAW_BUFFER10_ARB
define|#
directive|define
name|GL_DRAW_BUFFER10_ARB
value|0x882F
DECL|macro|GL_DRAW_BUFFER11_ARB
define|#
directive|define
name|GL_DRAW_BUFFER11_ARB
value|0x8830
DECL|macro|GL_DRAW_BUFFER12_ARB
define|#
directive|define
name|GL_DRAW_BUFFER12_ARB
value|0x8831
DECL|macro|GL_DRAW_BUFFER13_ARB
define|#
directive|define
name|GL_DRAW_BUFFER13_ARB
value|0x8832
DECL|macro|GL_DRAW_BUFFER14_ARB
define|#
directive|define
name|GL_DRAW_BUFFER14_ARB
value|0x8833
DECL|macro|GL_DRAW_BUFFER15_ARB
define|#
directive|define
name|GL_DRAW_BUFFER15_ARB
value|0x8834
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_rectangle
DECL|macro|GL_TEXTURE_RECTANGLE_ARB
define|#
directive|define
name|GL_TEXTURE_RECTANGLE_ARB
value|0x84F5
DECL|macro|GL_TEXTURE_BINDING_RECTANGLE_ARB
define|#
directive|define
name|GL_TEXTURE_BINDING_RECTANGLE_ARB
value|0x84F6
DECL|macro|GL_PROXY_TEXTURE_RECTANGLE_ARB
define|#
directive|define
name|GL_PROXY_TEXTURE_RECTANGLE_ARB
value|0x84F7
DECL|macro|GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
define|#
directive|define
name|GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
value|0x84F8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_color_buffer_float
DECL|macro|GL_RGBA_FLOAT_MODE_ARB
define|#
directive|define
name|GL_RGBA_FLOAT_MODE_ARB
value|0x8820
DECL|macro|GL_CLAMP_VERTEX_COLOR_ARB
define|#
directive|define
name|GL_CLAMP_VERTEX_COLOR_ARB
value|0x891A
DECL|macro|GL_CLAMP_FRAGMENT_COLOR_ARB
define|#
directive|define
name|GL_CLAMP_FRAGMENT_COLOR_ARB
value|0x891B
DECL|macro|GL_CLAMP_READ_COLOR_ARB
define|#
directive|define
name|GL_CLAMP_READ_COLOR_ARB
value|0x891C
DECL|macro|GL_FIXED_ONLY_ARB
define|#
directive|define
name|GL_FIXED_ONLY_ARB
value|0x891D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_half_float_pixel
DECL|macro|GL_HALF_FLOAT_ARB
define|#
directive|define
name|GL_HALF_FLOAT_ARB
value|0x140B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_float
DECL|macro|GL_TEXTURE_RED_TYPE_ARB
define|#
directive|define
name|GL_TEXTURE_RED_TYPE_ARB
value|0x8C10
DECL|macro|GL_TEXTURE_GREEN_TYPE_ARB
define|#
directive|define
name|GL_TEXTURE_GREEN_TYPE_ARB
value|0x8C11
DECL|macro|GL_TEXTURE_BLUE_TYPE_ARB
define|#
directive|define
name|GL_TEXTURE_BLUE_TYPE_ARB
value|0x8C12
DECL|macro|GL_TEXTURE_ALPHA_TYPE_ARB
define|#
directive|define
name|GL_TEXTURE_ALPHA_TYPE_ARB
value|0x8C13
DECL|macro|GL_TEXTURE_LUMINANCE_TYPE_ARB
define|#
directive|define
name|GL_TEXTURE_LUMINANCE_TYPE_ARB
value|0x8C14
DECL|macro|GL_TEXTURE_INTENSITY_TYPE_ARB
define|#
directive|define
name|GL_TEXTURE_INTENSITY_TYPE_ARB
value|0x8C15
DECL|macro|GL_TEXTURE_DEPTH_TYPE_ARB
define|#
directive|define
name|GL_TEXTURE_DEPTH_TYPE_ARB
value|0x8C16
DECL|macro|GL_UNSIGNED_NORMALIZED_ARB
define|#
directive|define
name|GL_UNSIGNED_NORMALIZED_ARB
value|0x8C17
DECL|macro|GL_RGBA32F_ARB
define|#
directive|define
name|GL_RGBA32F_ARB
value|0x8814
DECL|macro|GL_RGB32F_ARB
define|#
directive|define
name|GL_RGB32F_ARB
value|0x8815
DECL|macro|GL_ALPHA32F_ARB
define|#
directive|define
name|GL_ALPHA32F_ARB
value|0x8816
DECL|macro|GL_INTENSITY32F_ARB
define|#
directive|define
name|GL_INTENSITY32F_ARB
value|0x8817
DECL|macro|GL_LUMINANCE32F_ARB
define|#
directive|define
name|GL_LUMINANCE32F_ARB
value|0x8818
DECL|macro|GL_LUMINANCE_ALPHA32F_ARB
define|#
directive|define
name|GL_LUMINANCE_ALPHA32F_ARB
value|0x8819
DECL|macro|GL_RGBA16F_ARB
define|#
directive|define
name|GL_RGBA16F_ARB
value|0x881A
DECL|macro|GL_RGB16F_ARB
define|#
directive|define
name|GL_RGB16F_ARB
value|0x881B
DECL|macro|GL_ALPHA16F_ARB
define|#
directive|define
name|GL_ALPHA16F_ARB
value|0x881C
DECL|macro|GL_INTENSITY16F_ARB
define|#
directive|define
name|GL_INTENSITY16F_ARB
value|0x881D
DECL|macro|GL_LUMINANCE16F_ARB
define|#
directive|define
name|GL_LUMINANCE16F_ARB
value|0x881E
DECL|macro|GL_LUMINANCE_ALPHA16F_ARB
define|#
directive|define
name|GL_LUMINANCE_ALPHA16F_ARB
value|0x881F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_pixel_buffer_object
DECL|macro|GL_PIXEL_PACK_BUFFER_ARB
define|#
directive|define
name|GL_PIXEL_PACK_BUFFER_ARB
value|0x88EB
DECL|macro|GL_PIXEL_UNPACK_BUFFER_ARB
define|#
directive|define
name|GL_PIXEL_UNPACK_BUFFER_ARB
value|0x88EC
DECL|macro|GL_PIXEL_PACK_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_PIXEL_PACK_BUFFER_BINDING_ARB
value|0x88ED
DECL|macro|GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
define|#
directive|define
name|GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
value|0x88EF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_depth_buffer_float
DECL|macro|GL_DEPTH_COMPONENT32F
define|#
directive|define
name|GL_DEPTH_COMPONENT32F
value|0x8CAC
DECL|macro|GL_DEPTH32F_STENCIL8
define|#
directive|define
name|GL_DEPTH32F_STENCIL8
value|0x8CAD
DECL|macro|GL_FLOAT_32_UNSIGNED_INT_24_8_REV
define|#
directive|define
name|GL_FLOAT_32_UNSIGNED_INT_24_8_REV
value|0x8DAD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_instanced
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_framebuffer_object
DECL|macro|GL_INVALID_FRAMEBUFFER_OPERATION
define|#
directive|define
name|GL_INVALID_FRAMEBUFFER_OPERATION
value|0x0506
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
value|0x8210
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
value|0x8211
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
value|0x8212
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
value|0x8213
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
value|0x8214
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
value|0x8215
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
value|0x8216
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
value|0x8217
DECL|macro|GL_FRAMEBUFFER_DEFAULT
define|#
directive|define
name|GL_FRAMEBUFFER_DEFAULT
value|0x8218
DECL|macro|GL_FRAMEBUFFER_UNDEFINED
define|#
directive|define
name|GL_FRAMEBUFFER_UNDEFINED
value|0x8219
DECL|macro|GL_DEPTH_STENCIL_ATTACHMENT
define|#
directive|define
name|GL_DEPTH_STENCIL_ATTACHMENT
value|0x821A
DECL|macro|GL_MAX_RENDERBUFFER_SIZE
define|#
directive|define
name|GL_MAX_RENDERBUFFER_SIZE
value|0x84E8
DECL|macro|GL_DEPTH_STENCIL
define|#
directive|define
name|GL_DEPTH_STENCIL
value|0x84F9
DECL|macro|GL_UNSIGNED_INT_24_8
define|#
directive|define
name|GL_UNSIGNED_INT_24_8
value|0x84FA
DECL|macro|GL_DEPTH24_STENCIL8
define|#
directive|define
name|GL_DEPTH24_STENCIL8
value|0x88F0
DECL|macro|GL_TEXTURE_STENCIL_SIZE
define|#
directive|define
name|GL_TEXTURE_STENCIL_SIZE
value|0x88F1
DECL|macro|GL_TEXTURE_RED_TYPE
define|#
directive|define
name|GL_TEXTURE_RED_TYPE
value|0x8C10
DECL|macro|GL_TEXTURE_GREEN_TYPE
define|#
directive|define
name|GL_TEXTURE_GREEN_TYPE
value|0x8C11
DECL|macro|GL_TEXTURE_BLUE_TYPE
define|#
directive|define
name|GL_TEXTURE_BLUE_TYPE
value|0x8C12
DECL|macro|GL_TEXTURE_ALPHA_TYPE
define|#
directive|define
name|GL_TEXTURE_ALPHA_TYPE
value|0x8C13
DECL|macro|GL_TEXTURE_DEPTH_TYPE
define|#
directive|define
name|GL_TEXTURE_DEPTH_TYPE
value|0x8C16
DECL|macro|GL_UNSIGNED_NORMALIZED
define|#
directive|define
name|GL_UNSIGNED_NORMALIZED
value|0x8C17
DECL|macro|GL_FRAMEBUFFER_BINDING
define|#
directive|define
name|GL_FRAMEBUFFER_BINDING
value|0x8CA6
DECL|macro|GL_DRAW_FRAMEBUFFER_BINDING
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_BINDING
value|GL_FRAMEBUFFER_BINDING
DECL|macro|GL_RENDERBUFFER_BINDING
define|#
directive|define
name|GL_RENDERBUFFER_BINDING
value|0x8CA7
DECL|macro|GL_READ_FRAMEBUFFER
define|#
directive|define
name|GL_READ_FRAMEBUFFER
value|0x8CA8
DECL|macro|GL_DRAW_FRAMEBUFFER
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER
value|0x8CA9
DECL|macro|GL_READ_FRAMEBUFFER_BINDING
define|#
directive|define
name|GL_READ_FRAMEBUFFER_BINDING
value|0x8CAA
DECL|macro|GL_RENDERBUFFER_SAMPLES
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
value|0x8CD0
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
value|0x8CD1
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
value|0x8CD2
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
value|0x8CD3
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
value|0x8CD4
DECL|macro|GL_FRAMEBUFFER_COMPLETE
define|#
directive|define
name|GL_FRAMEBUFFER_COMPLETE
value|0x8CD5
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
value|0x8CD6
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
value|0x8CD7
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
value|0x8CDB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
value|0x8CDC
DECL|macro|GL_FRAMEBUFFER_UNSUPPORTED
define|#
directive|define
name|GL_FRAMEBUFFER_UNSUPPORTED
value|0x8CDD
DECL|macro|GL_MAX_COLOR_ATTACHMENTS
define|#
directive|define
name|GL_MAX_COLOR_ATTACHMENTS
value|0x8CDF
DECL|macro|GL_COLOR_ATTACHMENT0
define|#
directive|define
name|GL_COLOR_ATTACHMENT0
value|0x8CE0
DECL|macro|GL_COLOR_ATTACHMENT1
define|#
directive|define
name|GL_COLOR_ATTACHMENT1
value|0x8CE1
DECL|macro|GL_COLOR_ATTACHMENT2
define|#
directive|define
name|GL_COLOR_ATTACHMENT2
value|0x8CE2
DECL|macro|GL_COLOR_ATTACHMENT3
define|#
directive|define
name|GL_COLOR_ATTACHMENT3
value|0x8CE3
DECL|macro|GL_COLOR_ATTACHMENT4
define|#
directive|define
name|GL_COLOR_ATTACHMENT4
value|0x8CE4
DECL|macro|GL_COLOR_ATTACHMENT5
define|#
directive|define
name|GL_COLOR_ATTACHMENT5
value|0x8CE5
DECL|macro|GL_COLOR_ATTACHMENT6
define|#
directive|define
name|GL_COLOR_ATTACHMENT6
value|0x8CE6
DECL|macro|GL_COLOR_ATTACHMENT7
define|#
directive|define
name|GL_COLOR_ATTACHMENT7
value|0x8CE7
DECL|macro|GL_COLOR_ATTACHMENT8
define|#
directive|define
name|GL_COLOR_ATTACHMENT8
value|0x8CE8
DECL|macro|GL_COLOR_ATTACHMENT9
define|#
directive|define
name|GL_COLOR_ATTACHMENT9
value|0x8CE9
DECL|macro|GL_COLOR_ATTACHMENT10
define|#
directive|define
name|GL_COLOR_ATTACHMENT10
value|0x8CEA
DECL|macro|GL_COLOR_ATTACHMENT11
define|#
directive|define
name|GL_COLOR_ATTACHMENT11
value|0x8CEB
DECL|macro|GL_COLOR_ATTACHMENT12
define|#
directive|define
name|GL_COLOR_ATTACHMENT12
value|0x8CEC
DECL|macro|GL_COLOR_ATTACHMENT13
define|#
directive|define
name|GL_COLOR_ATTACHMENT13
value|0x8CED
DECL|macro|GL_COLOR_ATTACHMENT14
define|#
directive|define
name|GL_COLOR_ATTACHMENT14
value|0x8CEE
DECL|macro|GL_COLOR_ATTACHMENT15
define|#
directive|define
name|GL_COLOR_ATTACHMENT15
value|0x8CEF
DECL|macro|GL_DEPTH_ATTACHMENT
define|#
directive|define
name|GL_DEPTH_ATTACHMENT
value|0x8D00
DECL|macro|GL_STENCIL_ATTACHMENT
define|#
directive|define
name|GL_STENCIL_ATTACHMENT
value|0x8D20
DECL|macro|GL_FRAMEBUFFER
define|#
directive|define
name|GL_FRAMEBUFFER
value|0x8D40
DECL|macro|GL_RENDERBUFFER
define|#
directive|define
name|GL_RENDERBUFFER
value|0x8D41
DECL|macro|GL_RENDERBUFFER_WIDTH
define|#
directive|define
name|GL_RENDERBUFFER_WIDTH
value|0x8D42
DECL|macro|GL_RENDERBUFFER_HEIGHT
define|#
directive|define
name|GL_RENDERBUFFER_HEIGHT
value|0x8D43
DECL|macro|GL_RENDERBUFFER_INTERNAL_FORMAT
define|#
directive|define
name|GL_RENDERBUFFER_INTERNAL_FORMAT
value|0x8D44
DECL|macro|GL_STENCIL_INDEX1
define|#
directive|define
name|GL_STENCIL_INDEX1
value|0x8D46
DECL|macro|GL_STENCIL_INDEX4
define|#
directive|define
name|GL_STENCIL_INDEX4
value|0x8D47
DECL|macro|GL_STENCIL_INDEX8
define|#
directive|define
name|GL_STENCIL_INDEX8
value|0x8D48
DECL|macro|GL_STENCIL_INDEX16
define|#
directive|define
name|GL_STENCIL_INDEX16
value|0x8D49
DECL|macro|GL_RENDERBUFFER_RED_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_RED_SIZE
value|0x8D50
DECL|macro|GL_RENDERBUFFER_GREEN_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_GREEN_SIZE
value|0x8D51
DECL|macro|GL_RENDERBUFFER_BLUE_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_BLUE_SIZE
value|0x8D52
DECL|macro|GL_RENDERBUFFER_ALPHA_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_ALPHA_SIZE
value|0x8D53
DECL|macro|GL_RENDERBUFFER_DEPTH_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_DEPTH_SIZE
value|0x8D54
DECL|macro|GL_RENDERBUFFER_STENCIL_SIZE
define|#
directive|define
name|GL_RENDERBUFFER_STENCIL_SIZE
value|0x8D55
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
value|0x8D56
DECL|macro|GL_MAX_SAMPLES
define|#
directive|define
name|GL_MAX_SAMPLES
value|0x8D57
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_framebuffer_object_DEPRECATED
DECL|macro|GL_INDEX
define|#
directive|define
name|GL_INDEX
value|0x8222
DECL|macro|GL_TEXTURE_LUMINANCE_TYPE
define|#
directive|define
name|GL_TEXTURE_LUMINANCE_TYPE
value|0x8C14
DECL|macro|GL_TEXTURE_INTENSITY_TYPE
define|#
directive|define
name|GL_TEXTURE_INTENSITY_TYPE
value|0x8C15
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_framebuffer_sRGB
DECL|macro|GL_FRAMEBUFFER_SRGB
define|#
directive|define
name|GL_FRAMEBUFFER_SRGB
value|0x8DB9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_geometry_shader4
DECL|macro|GL_LINES_ADJACENCY_ARB
define|#
directive|define
name|GL_LINES_ADJACENCY_ARB
value|0x000A
DECL|macro|GL_LINE_STRIP_ADJACENCY_ARB
define|#
directive|define
name|GL_LINE_STRIP_ADJACENCY_ARB
value|0x000B
DECL|macro|GL_TRIANGLES_ADJACENCY_ARB
define|#
directive|define
name|GL_TRIANGLES_ADJACENCY_ARB
value|0x000C
DECL|macro|GL_TRIANGLE_STRIP_ADJACENCY_ARB
define|#
directive|define
name|GL_TRIANGLE_STRIP_ADJACENCY_ARB
value|0x000D
DECL|macro|GL_PROGRAM_POINT_SIZE_ARB
define|#
directive|define
name|GL_PROGRAM_POINT_SIZE_ARB
value|0x8642
DECL|macro|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
define|#
directive|define
name|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
value|0x8C29
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
value|0x8DA7
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
value|0x8DA8
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
value|0x8DA9
DECL|macro|GL_GEOMETRY_SHADER_ARB
define|#
directive|define
name|GL_GEOMETRY_SHADER_ARB
value|0x8DD9
DECL|macro|GL_GEOMETRY_VERTICES_OUT_ARB
define|#
directive|define
name|GL_GEOMETRY_VERTICES_OUT_ARB
value|0x8DDA
DECL|macro|GL_GEOMETRY_INPUT_TYPE_ARB
define|#
directive|define
name|GL_GEOMETRY_INPUT_TYPE_ARB
value|0x8DDB
DECL|macro|GL_GEOMETRY_OUTPUT_TYPE_ARB
define|#
directive|define
name|GL_GEOMETRY_OUTPUT_TYPE_ARB
value|0x8DDC
DECL|macro|GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
define|#
directive|define
name|GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
value|0x8DDD
DECL|macro|GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
define|#
directive|define
name|GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
value|0x8DDE
DECL|macro|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
define|#
directive|define
name|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
value|0x8DDF
DECL|macro|GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
define|#
directive|define
name|GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
value|0x8DE0
DECL|macro|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
define|#
directive|define
name|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
value|0x8DE1
comment|/* reuse GL_MAX_VARYING_COMPONENTS */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_half_float_vertex
DECL|macro|GL_HALF_FLOAT
define|#
directive|define
name|GL_HALF_FLOAT
value|0x140B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_instanced_arrays
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
value|0x88FE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_map_buffer_range
DECL|macro|GL_MAP_READ_BIT
define|#
directive|define
name|GL_MAP_READ_BIT
value|0x0001
DECL|macro|GL_MAP_WRITE_BIT
define|#
directive|define
name|GL_MAP_WRITE_BIT
value|0x0002
DECL|macro|GL_MAP_INVALIDATE_RANGE_BIT
define|#
directive|define
name|GL_MAP_INVALIDATE_RANGE_BIT
value|0x0004
DECL|macro|GL_MAP_INVALIDATE_BUFFER_BIT
define|#
directive|define
name|GL_MAP_INVALIDATE_BUFFER_BIT
value|0x0008
DECL|macro|GL_MAP_FLUSH_EXPLICIT_BIT
define|#
directive|define
name|GL_MAP_FLUSH_EXPLICIT_BIT
value|0x0010
DECL|macro|GL_MAP_UNSYNCHRONIZED_BIT
define|#
directive|define
name|GL_MAP_UNSYNCHRONIZED_BIT
value|0x0020
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_buffer_object
DECL|macro|GL_TEXTURE_BUFFER_ARB
define|#
directive|define
name|GL_TEXTURE_BUFFER_ARB
value|0x8C2A
DECL|macro|GL_MAX_TEXTURE_BUFFER_SIZE_ARB
define|#
directive|define
name|GL_MAX_TEXTURE_BUFFER_SIZE_ARB
value|0x8C2B
DECL|macro|GL_TEXTURE_BINDING_BUFFER_ARB
define|#
directive|define
name|GL_TEXTURE_BINDING_BUFFER_ARB
value|0x8C2C
DECL|macro|GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
define|#
directive|define
name|GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
value|0x8C2D
DECL|macro|GL_TEXTURE_BUFFER_FORMAT_ARB
define|#
directive|define
name|GL_TEXTURE_BUFFER_FORMAT_ARB
value|0x8C2E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_compression_rgtc
DECL|macro|GL_COMPRESSED_RED_RGTC1
define|#
directive|define
name|GL_COMPRESSED_RED_RGTC1
value|0x8DBB
DECL|macro|GL_COMPRESSED_SIGNED_RED_RGTC1
define|#
directive|define
name|GL_COMPRESSED_SIGNED_RED_RGTC1
value|0x8DBC
DECL|macro|GL_COMPRESSED_RG_RGTC2
define|#
directive|define
name|GL_COMPRESSED_RG_RGTC2
value|0x8DBD
DECL|macro|GL_COMPRESSED_SIGNED_RG_RGTC2
define|#
directive|define
name|GL_COMPRESSED_SIGNED_RG_RGTC2
value|0x8DBE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_rg
DECL|macro|GL_RG
define|#
directive|define
name|GL_RG
value|0x8227
DECL|macro|GL_RG_INTEGER
define|#
directive|define
name|GL_RG_INTEGER
value|0x8228
DECL|macro|GL_R8
define|#
directive|define
name|GL_R8
value|0x8229
DECL|macro|GL_R16
define|#
directive|define
name|GL_R16
value|0x822A
DECL|macro|GL_RG8
define|#
directive|define
name|GL_RG8
value|0x822B
DECL|macro|GL_RG16
define|#
directive|define
name|GL_RG16
value|0x822C
DECL|macro|GL_R16F
define|#
directive|define
name|GL_R16F
value|0x822D
DECL|macro|GL_R32F
define|#
directive|define
name|GL_R32F
value|0x822E
DECL|macro|GL_RG16F
define|#
directive|define
name|GL_RG16F
value|0x822F
DECL|macro|GL_RG32F
define|#
directive|define
name|GL_RG32F
value|0x8230
DECL|macro|GL_R8I
define|#
directive|define
name|GL_R8I
value|0x8231
DECL|macro|GL_R8UI
define|#
directive|define
name|GL_R8UI
value|0x8232
DECL|macro|GL_R16I
define|#
directive|define
name|GL_R16I
value|0x8233
DECL|macro|GL_R16UI
define|#
directive|define
name|GL_R16UI
value|0x8234
DECL|macro|GL_R32I
define|#
directive|define
name|GL_R32I
value|0x8235
DECL|macro|GL_R32UI
define|#
directive|define
name|GL_R32UI
value|0x8236
DECL|macro|GL_RG8I
define|#
directive|define
name|GL_RG8I
value|0x8237
DECL|macro|GL_RG8UI
define|#
directive|define
name|GL_RG8UI
value|0x8238
DECL|macro|GL_RG16I
define|#
directive|define
name|GL_RG16I
value|0x8239
DECL|macro|GL_RG16UI
define|#
directive|define
name|GL_RG16UI
value|0x823A
DECL|macro|GL_RG32I
define|#
directive|define
name|GL_RG32I
value|0x823B
DECL|macro|GL_RG32UI
define|#
directive|define
name|GL_RG32UI
value|0x823C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_array_object
DECL|macro|GL_VERTEX_ARRAY_BINDING
define|#
directive|define
name|GL_VERTEX_ARRAY_BINDING
value|0x85B5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_uniform_buffer_object
DECL|macro|GL_UNIFORM_BUFFER
define|#
directive|define
name|GL_UNIFORM_BUFFER
value|0x8A11
DECL|macro|GL_UNIFORM_BUFFER_BINDING
define|#
directive|define
name|GL_UNIFORM_BUFFER_BINDING
value|0x8A28
DECL|macro|GL_UNIFORM_BUFFER_START
define|#
directive|define
name|GL_UNIFORM_BUFFER_START
value|0x8A29
DECL|macro|GL_UNIFORM_BUFFER_SIZE
define|#
directive|define
name|GL_UNIFORM_BUFFER_SIZE
value|0x8A2A
DECL|macro|GL_MAX_VERTEX_UNIFORM_BLOCKS
define|#
directive|define
name|GL_MAX_VERTEX_UNIFORM_BLOCKS
value|0x8A2B
DECL|macro|GL_MAX_GEOMETRY_UNIFORM_BLOCKS
define|#
directive|define
name|GL_MAX_GEOMETRY_UNIFORM_BLOCKS
value|0x8A2C
DECL|macro|GL_MAX_FRAGMENT_UNIFORM_BLOCKS
define|#
directive|define
name|GL_MAX_FRAGMENT_UNIFORM_BLOCKS
value|0x8A2D
DECL|macro|GL_MAX_COMBINED_UNIFORM_BLOCKS
define|#
directive|define
name|GL_MAX_COMBINED_UNIFORM_BLOCKS
value|0x8A2E
DECL|macro|GL_MAX_UNIFORM_BUFFER_BINDINGS
define|#
directive|define
name|GL_MAX_UNIFORM_BUFFER_BINDINGS
value|0x8A2F
DECL|macro|GL_MAX_UNIFORM_BLOCK_SIZE
define|#
directive|define
name|GL_MAX_UNIFORM_BLOCK_SIZE
value|0x8A30
DECL|macro|GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
value|0x8A31
DECL|macro|GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
value|0x8A32
DECL|macro|GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
value|0x8A33
DECL|macro|GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
define|#
directive|define
name|GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
value|0x8A34
DECL|macro|GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
define|#
directive|define
name|GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
value|0x8A35
DECL|macro|GL_ACTIVE_UNIFORM_BLOCKS
define|#
directive|define
name|GL_ACTIVE_UNIFORM_BLOCKS
value|0x8A36
DECL|macro|GL_UNIFORM_TYPE
define|#
directive|define
name|GL_UNIFORM_TYPE
value|0x8A37
DECL|macro|GL_UNIFORM_SIZE
define|#
directive|define
name|GL_UNIFORM_SIZE
value|0x8A38
DECL|macro|GL_UNIFORM_NAME_LENGTH
define|#
directive|define
name|GL_UNIFORM_NAME_LENGTH
value|0x8A39
DECL|macro|GL_UNIFORM_BLOCK_INDEX
define|#
directive|define
name|GL_UNIFORM_BLOCK_INDEX
value|0x8A3A
DECL|macro|GL_UNIFORM_OFFSET
define|#
directive|define
name|GL_UNIFORM_OFFSET
value|0x8A3B
DECL|macro|GL_UNIFORM_ARRAY_STRIDE
define|#
directive|define
name|GL_UNIFORM_ARRAY_STRIDE
value|0x8A3C
DECL|macro|GL_UNIFORM_MATRIX_STRIDE
define|#
directive|define
name|GL_UNIFORM_MATRIX_STRIDE
value|0x8A3D
DECL|macro|GL_UNIFORM_IS_ROW_MAJOR
define|#
directive|define
name|GL_UNIFORM_IS_ROW_MAJOR
value|0x8A3E
DECL|macro|GL_UNIFORM_BLOCK_BINDING
define|#
directive|define
name|GL_UNIFORM_BLOCK_BINDING
value|0x8A3F
DECL|macro|GL_UNIFORM_BLOCK_DATA_SIZE
define|#
directive|define
name|GL_UNIFORM_BLOCK_DATA_SIZE
value|0x8A40
DECL|macro|GL_UNIFORM_BLOCK_NAME_LENGTH
define|#
directive|define
name|GL_UNIFORM_BLOCK_NAME_LENGTH
value|0x8A41
DECL|macro|GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
define|#
directive|define
name|GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
value|0x8A42
DECL|macro|GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
define|#
directive|define
name|GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
value|0x8A43
DECL|macro|GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
define|#
directive|define
name|GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
value|0x8A44
DECL|macro|GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
define|#
directive|define
name|GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
value|0x8A45
DECL|macro|GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
define|#
directive|define
name|GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
value|0x8A46
DECL|macro|GL_INVALID_INDEX
define|#
directive|define
name|GL_INVALID_INDEX
value|0xFFFFFFFFu
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_compatibility
comment|/* ARB_compatibility just defines tokens from core 3.0 */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_copy_buffer
DECL|macro|GL_COPY_READ_BUFFER_BINDING
define|#
directive|define
name|GL_COPY_READ_BUFFER_BINDING
value|0x8F36
DECL|macro|GL_COPY_READ_BUFFER
define|#
directive|define
name|GL_COPY_READ_BUFFER
value|GL_COPY_READ_BUFFER_BINDING
DECL|macro|GL_COPY_WRITE_BUFFER_BINDING
define|#
directive|define
name|GL_COPY_WRITE_BUFFER_BINDING
value|0x8F37
DECL|macro|GL_COPY_WRITE_BUFFER
define|#
directive|define
name|GL_COPY_WRITE_BUFFER
value|GL_COPY_WRITE_BUFFER_BINDING
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_texture_lod
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_depth_clamp
DECL|macro|GL_DEPTH_CLAMP
define|#
directive|define
name|GL_DEPTH_CLAMP
value|0x864F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_elements_base_vertex
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_coord_conventions
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_provoking_vertex
DECL|macro|GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
define|#
directive|define
name|GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
value|0x8E4C
DECL|macro|GL_FIRST_VERTEX_CONVENTION
define|#
directive|define
name|GL_FIRST_VERTEX_CONVENTION
value|0x8E4D
DECL|macro|GL_LAST_VERTEX_CONVENTION
define|#
directive|define
name|GL_LAST_VERTEX_CONVENTION
value|0x8E4E
DECL|macro|GL_PROVOKING_VERTEX
define|#
directive|define
name|GL_PROVOKING_VERTEX
value|0x8E4F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_seamless_cube_map
DECL|macro|GL_TEXTURE_CUBE_MAP_SEAMLESS
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_SEAMLESS
value|0x884F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_sync
DECL|macro|GL_MAX_SERVER_WAIT_TIMEOUT
define|#
directive|define
name|GL_MAX_SERVER_WAIT_TIMEOUT
value|0x9111
DECL|macro|GL_OBJECT_TYPE
define|#
directive|define
name|GL_OBJECT_TYPE
value|0x9112
DECL|macro|GL_SYNC_CONDITION
define|#
directive|define
name|GL_SYNC_CONDITION
value|0x9113
DECL|macro|GL_SYNC_STATUS
define|#
directive|define
name|GL_SYNC_STATUS
value|0x9114
DECL|macro|GL_SYNC_FLAGS
define|#
directive|define
name|GL_SYNC_FLAGS
value|0x9115
DECL|macro|GL_SYNC_FENCE
define|#
directive|define
name|GL_SYNC_FENCE
value|0x9116
DECL|macro|GL_SYNC_GPU_COMMANDS_COMPLETE
define|#
directive|define
name|GL_SYNC_GPU_COMMANDS_COMPLETE
value|0x9117
DECL|macro|GL_UNSIGNALED
define|#
directive|define
name|GL_UNSIGNALED
value|0x9118
DECL|macro|GL_SIGNALED
define|#
directive|define
name|GL_SIGNALED
value|0x9119
DECL|macro|GL_ALREADY_SIGNALED
define|#
directive|define
name|GL_ALREADY_SIGNALED
value|0x911A
DECL|macro|GL_TIMEOUT_EXPIRED
define|#
directive|define
name|GL_TIMEOUT_EXPIRED
value|0x911B
DECL|macro|GL_CONDITION_SATISFIED
define|#
directive|define
name|GL_CONDITION_SATISFIED
value|0x911C
DECL|macro|GL_WAIT_FAILED
define|#
directive|define
name|GL_WAIT_FAILED
value|0x911D
DECL|macro|GL_SYNC_FLUSH_COMMANDS_BIT
define|#
directive|define
name|GL_SYNC_FLUSH_COMMANDS_BIT
value|0x00000001
DECL|macro|GL_TIMEOUT_IGNORED
define|#
directive|define
name|GL_TIMEOUT_IGNORED
value|0xFFFFFFFFFFFFFFFFull
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_multisample
DECL|macro|GL_SAMPLE_POSITION
define|#
directive|define
name|GL_SAMPLE_POSITION
value|0x8E50
DECL|macro|GL_SAMPLE_MASK
define|#
directive|define
name|GL_SAMPLE_MASK
value|0x8E51
DECL|macro|GL_SAMPLE_MASK_VALUE
define|#
directive|define
name|GL_SAMPLE_MASK_VALUE
value|0x8E52
DECL|macro|GL_MAX_SAMPLE_MASK_WORDS
define|#
directive|define
name|GL_MAX_SAMPLE_MASK_WORDS
value|0x8E59
DECL|macro|GL_TEXTURE_2D_MULTISAMPLE
define|#
directive|define
name|GL_TEXTURE_2D_MULTISAMPLE
value|0x9100
DECL|macro|GL_PROXY_TEXTURE_2D_MULTISAMPLE
define|#
directive|define
name|GL_PROXY_TEXTURE_2D_MULTISAMPLE
value|0x9101
DECL|macro|GL_TEXTURE_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_TEXTURE_2D_MULTISAMPLE_ARRAY
value|0x9102
DECL|macro|GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
value|0x9103
DECL|macro|GL_TEXTURE_BINDING_2D_MULTISAMPLE
define|#
directive|define
name|GL_TEXTURE_BINDING_2D_MULTISAMPLE
value|0x9104
DECL|macro|GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
value|0x9105
DECL|macro|GL_TEXTURE_SAMPLES
define|#
directive|define
name|GL_TEXTURE_SAMPLES
value|0x9106
DECL|macro|GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
define|#
directive|define
name|GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
value|0x9107
DECL|macro|GL_SAMPLER_2D_MULTISAMPLE
define|#
directive|define
name|GL_SAMPLER_2D_MULTISAMPLE
value|0x9108
DECL|macro|GL_INT_SAMPLER_2D_MULTISAMPLE
define|#
directive|define
name|GL_INT_SAMPLER_2D_MULTISAMPLE
value|0x9109
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
value|0x910A
DECL|macro|GL_SAMPLER_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_SAMPLER_2D_MULTISAMPLE_ARRAY
value|0x910B
DECL|macro|GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
value|0x910C
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
value|0x910D
DECL|macro|GL_MAX_COLOR_TEXTURE_SAMPLES
define|#
directive|define
name|GL_MAX_COLOR_TEXTURE_SAMPLES
value|0x910E
DECL|macro|GL_MAX_DEPTH_TEXTURE_SAMPLES
define|#
directive|define
name|GL_MAX_DEPTH_TEXTURE_SAMPLES
value|0x910F
DECL|macro|GL_MAX_INTEGER_SAMPLES
define|#
directive|define
name|GL_MAX_INTEGER_SAMPLES
value|0x9110
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_array_bgra
comment|/* reuse GL_BGRA */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_buffers_blend
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_sample_shading
DECL|macro|GL_SAMPLE_SHADING_ARB
define|#
directive|define
name|GL_SAMPLE_SHADING_ARB
value|0x8C36
DECL|macro|GL_MIN_SAMPLE_SHADING_VALUE_ARB
define|#
directive|define
name|GL_MIN_SAMPLE_SHADING_VALUE_ARB
value|0x8C37
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_cube_map_array
DECL|macro|GL_TEXTURE_CUBE_MAP_ARRAY_ARB
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_ARRAY_ARB
value|0x9009
DECL|macro|GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB
define|#
directive|define
name|GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB
value|0x900A
DECL|macro|GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB
define|#
directive|define
name|GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB
value|0x900B
DECL|macro|GL_SAMPLER_CUBE_MAP_ARRAY_ARB
define|#
directive|define
name|GL_SAMPLER_CUBE_MAP_ARRAY_ARB
value|0x900C
DECL|macro|GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB
define|#
directive|define
name|GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB
value|0x900D
DECL|macro|GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
define|#
directive|define
name|GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
value|0x900E
DECL|macro|GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
value|0x900F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_gather
DECL|macro|GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
define|#
directive|define
name|GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
value|0x8E5E
DECL|macro|GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
define|#
directive|define
name|GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
value|0x8E5F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_query_lod
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_include
DECL|macro|GL_SHADER_INCLUDE_ARB
define|#
directive|define
name|GL_SHADER_INCLUDE_ARB
value|0x8DAE
DECL|macro|GL_NAMED_STRING_LENGTH_ARB
define|#
directive|define
name|GL_NAMED_STRING_LENGTH_ARB
value|0x8DE9
DECL|macro|GL_NAMED_STRING_TYPE_ARB
define|#
directive|define
name|GL_NAMED_STRING_TYPE_ARB
value|0x8DEA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_compression_bptc
DECL|macro|GL_COMPRESSED_RGBA_BPTC_UNORM_ARB
define|#
directive|define
name|GL_COMPRESSED_RGBA_BPTC_UNORM_ARB
value|0x8E8C
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
value|0x8E8D
DECL|macro|GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
define|#
directive|define
name|GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
value|0x8E8E
DECL|macro|GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
define|#
directive|define
name|GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
value|0x8E8F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_blend_func_extended
DECL|macro|GL_SRC1_COLOR
define|#
directive|define
name|GL_SRC1_COLOR
value|0x88F9
comment|/* reuse GL_SRC1_ALPHA */
DECL|macro|GL_ONE_MINUS_SRC1_COLOR
define|#
directive|define
name|GL_ONE_MINUS_SRC1_COLOR
value|0x88FA
DECL|macro|GL_ONE_MINUS_SRC1_ALPHA
define|#
directive|define
name|GL_ONE_MINUS_SRC1_ALPHA
value|0x88FB
DECL|macro|GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
define|#
directive|define
name|GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
value|0x88FC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_explicit_attrib_location
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_occlusion_query2
DECL|macro|GL_ANY_SAMPLES_PASSED
define|#
directive|define
name|GL_ANY_SAMPLES_PASSED
value|0x8C2F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_sampler_objects
DECL|macro|GL_SAMPLER_BINDING
define|#
directive|define
name|GL_SAMPLER_BINDING
value|0x8919
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_bit_encoding
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_rgb10_a2ui
DECL|macro|GL_RGB10_A2UI
define|#
directive|define
name|GL_RGB10_A2UI
value|0x906F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_swizzle
DECL|macro|GL_TEXTURE_SWIZZLE_R
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_R
value|0x8E42
DECL|macro|GL_TEXTURE_SWIZZLE_G
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_G
value|0x8E43
DECL|macro|GL_TEXTURE_SWIZZLE_B
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_B
value|0x8E44
DECL|macro|GL_TEXTURE_SWIZZLE_A
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_A
value|0x8E45
DECL|macro|GL_TEXTURE_SWIZZLE_RGBA
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_RGBA
value|0x8E46
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_timer_query
DECL|macro|GL_TIME_ELAPSED
define|#
directive|define
name|GL_TIME_ELAPSED
value|0x88BF
DECL|macro|GL_TIMESTAMP
define|#
directive|define
name|GL_TIMESTAMP
value|0x8E28
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_type_2_10_10_10_rev
comment|/* reuse GL_UNSIGNED_INT_2_10_10_10_REV */
DECL|macro|GL_INT_2_10_10_10_REV
define|#
directive|define
name|GL_INT_2_10_10_10_REV
value|0x8D9F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_indirect
DECL|macro|GL_DRAW_INDIRECT_BUFFER
define|#
directive|define
name|GL_DRAW_INDIRECT_BUFFER
value|0x8F3F
DECL|macro|GL_DRAW_INDIRECT_BUFFER_BINDING
define|#
directive|define
name|GL_DRAW_INDIRECT_BUFFER_BINDING
value|0x8F43
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_gpu_shader5
DECL|macro|GL_GEOMETRY_SHADER_INVOCATIONS
define|#
directive|define
name|GL_GEOMETRY_SHADER_INVOCATIONS
value|0x887F
DECL|macro|GL_MAX_GEOMETRY_SHADER_INVOCATIONS
define|#
directive|define
name|GL_MAX_GEOMETRY_SHADER_INVOCATIONS
value|0x8E5A
DECL|macro|GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
define|#
directive|define
name|GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
value|0x8E5B
DECL|macro|GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
define|#
directive|define
name|GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
value|0x8E5C
DECL|macro|GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
define|#
directive|define
name|GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
value|0x8E5D
comment|/* reuse GL_MAX_VERTEX_STREAMS */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_gpu_shader_fp64
comment|/* reuse GL_DOUBLE */
DECL|macro|GL_DOUBLE_VEC2
define|#
directive|define
name|GL_DOUBLE_VEC2
value|0x8FFC
DECL|macro|GL_DOUBLE_VEC3
define|#
directive|define
name|GL_DOUBLE_VEC3
value|0x8FFD
DECL|macro|GL_DOUBLE_VEC4
define|#
directive|define
name|GL_DOUBLE_VEC4
value|0x8FFE
DECL|macro|GL_DOUBLE_MAT2
define|#
directive|define
name|GL_DOUBLE_MAT2
value|0x8F46
DECL|macro|GL_DOUBLE_MAT3
define|#
directive|define
name|GL_DOUBLE_MAT3
value|0x8F47
DECL|macro|GL_DOUBLE_MAT4
define|#
directive|define
name|GL_DOUBLE_MAT4
value|0x8F48
DECL|macro|GL_DOUBLE_MAT2x3
define|#
directive|define
name|GL_DOUBLE_MAT2x3
value|0x8F49
DECL|macro|GL_DOUBLE_MAT2x4
define|#
directive|define
name|GL_DOUBLE_MAT2x4
value|0x8F4A
DECL|macro|GL_DOUBLE_MAT3x2
define|#
directive|define
name|GL_DOUBLE_MAT3x2
value|0x8F4B
DECL|macro|GL_DOUBLE_MAT3x4
define|#
directive|define
name|GL_DOUBLE_MAT3x4
value|0x8F4C
DECL|macro|GL_DOUBLE_MAT4x2
define|#
directive|define
name|GL_DOUBLE_MAT4x2
value|0x8F4D
DECL|macro|GL_DOUBLE_MAT4x3
define|#
directive|define
name|GL_DOUBLE_MAT4x3
value|0x8F4E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_subroutine
DECL|macro|GL_ACTIVE_SUBROUTINES
define|#
directive|define
name|GL_ACTIVE_SUBROUTINES
value|0x8DE5
DECL|macro|GL_ACTIVE_SUBROUTINE_UNIFORMS
define|#
directive|define
name|GL_ACTIVE_SUBROUTINE_UNIFORMS
value|0x8DE6
DECL|macro|GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
define|#
directive|define
name|GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
value|0x8E47
DECL|macro|GL_ACTIVE_SUBROUTINE_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_SUBROUTINE_MAX_LENGTH
value|0x8E48
DECL|macro|GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
define|#
directive|define
name|GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
value|0x8E49
DECL|macro|GL_MAX_SUBROUTINES
define|#
directive|define
name|GL_MAX_SUBROUTINES
value|0x8DE7
DECL|macro|GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
define|#
directive|define
name|GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
value|0x8DE8
DECL|macro|GL_NUM_COMPATIBLE_SUBROUTINES
define|#
directive|define
name|GL_NUM_COMPATIBLE_SUBROUTINES
value|0x8E4A
DECL|macro|GL_COMPATIBLE_SUBROUTINES
define|#
directive|define
name|GL_COMPATIBLE_SUBROUTINES
value|0x8E4B
comment|/* reuse GL_UNIFORM_SIZE */
comment|/* reuse GL_UNIFORM_NAME_LENGTH */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_tessellation_shader
DECL|macro|GL_PATCHES
define|#
directive|define
name|GL_PATCHES
value|0x000E
DECL|macro|GL_PATCH_VERTICES
define|#
directive|define
name|GL_PATCH_VERTICES
value|0x8E72
DECL|macro|GL_PATCH_DEFAULT_INNER_LEVEL
define|#
directive|define
name|GL_PATCH_DEFAULT_INNER_LEVEL
value|0x8E73
DECL|macro|GL_PATCH_DEFAULT_OUTER_LEVEL
define|#
directive|define
name|GL_PATCH_DEFAULT_OUTER_LEVEL
value|0x8E74
DECL|macro|GL_TESS_CONTROL_OUTPUT_VERTICES
define|#
directive|define
name|GL_TESS_CONTROL_OUTPUT_VERTICES
value|0x8E75
DECL|macro|GL_TESS_GEN_MODE
define|#
directive|define
name|GL_TESS_GEN_MODE
value|0x8E76
DECL|macro|GL_TESS_GEN_SPACING
define|#
directive|define
name|GL_TESS_GEN_SPACING
value|0x8E77
DECL|macro|GL_TESS_GEN_VERTEX_ORDER
define|#
directive|define
name|GL_TESS_GEN_VERTEX_ORDER
value|0x8E78
DECL|macro|GL_TESS_GEN_POINT_MODE
define|#
directive|define
name|GL_TESS_GEN_POINT_MODE
value|0x8E79
comment|/* reuse GL_TRIANGLES */
comment|/* reuse GL_QUADS */
DECL|macro|GL_ISOLINES
define|#
directive|define
name|GL_ISOLINES
value|0x8E7A
comment|/* reuse GL_EQUAL */
DECL|macro|GL_FRACTIONAL_ODD
define|#
directive|define
name|GL_FRACTIONAL_ODD
value|0x8E7B
DECL|macro|GL_FRACTIONAL_EVEN
define|#
directive|define
name|GL_FRACTIONAL_EVEN
value|0x8E7C
comment|/* reuse GL_CCW */
comment|/* reuse GL_CW */
DECL|macro|GL_MAX_PATCH_VERTICES
define|#
directive|define
name|GL_MAX_PATCH_VERTICES
value|0x8E7D
DECL|macro|GL_MAX_TESS_GEN_LEVEL
define|#
directive|define
name|GL_MAX_TESS_GEN_LEVEL
value|0x8E7E
DECL|macro|GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
value|0x8E7F
DECL|macro|GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
value|0x8E80
DECL|macro|GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
value|0x8E81
DECL|macro|GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
value|0x8E82
DECL|macro|GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
value|0x8E83
DECL|macro|GL_MAX_TESS_PATCH_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_PATCH_COMPONENTS
value|0x8E84
DECL|macro|GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
value|0x8E85
DECL|macro|GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
value|0x8E86
DECL|macro|GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
value|0x8E89
DECL|macro|GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
value|0x8E8A
DECL|macro|GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
value|0x886C
DECL|macro|GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
value|0x886D
DECL|macro|GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
value|0x8E1E
DECL|macro|GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
define|#
directive|define
name|GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
value|0x8E1F
DECL|macro|GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
define|#
directive|define
name|GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
value|0x84F0
DECL|macro|GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
define|#
directive|define
name|GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
value|0x84F1
DECL|macro|GL_TESS_EVALUATION_SHADER
define|#
directive|define
name|GL_TESS_EVALUATION_SHADER
value|0x8E87
DECL|macro|GL_TESS_CONTROL_SHADER
define|#
directive|define
name|GL_TESS_CONTROL_SHADER
value|0x8E88
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_buffer_object_rgb32
comment|/* reuse GL_RGB32F */
comment|/* reuse GL_RGB32UI */
comment|/* reuse GL_RGB32I */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transform_feedback2
DECL|macro|GL_TRANSFORM_FEEDBACK
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK
value|0x8E22
DECL|macro|GL_TRANSFORM_FEEDBACK_PAUSED
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_PAUSED
value|0x8E23
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
value|GL_TRANSFORM_FEEDBACK_PAUSED
DECL|macro|GL_TRANSFORM_FEEDBACK_ACTIVE
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_ACTIVE
value|0x8E24
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
value|GL_TRANSFORM_FEEDBACK_ACTIVE
DECL|macro|GL_TRANSFORM_FEEDBACK_BINDING
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BINDING
value|0x8E25
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transform_feedback3
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
value|0x8E70
DECL|macro|GL_MAX_VERTEX_STREAMS
define|#
directive|define
name|GL_MAX_VERTEX_STREAMS
value|0x8E71
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_ES2_compatibility
DECL|macro|GL_FIXED
define|#
directive|define
name|GL_FIXED
value|0x140C
DECL|macro|GL_IMPLEMENTATION_COLOR_READ_TYPE
define|#
directive|define
name|GL_IMPLEMENTATION_COLOR_READ_TYPE
value|0x8B9A
DECL|macro|GL_IMPLEMENTATION_COLOR_READ_FORMAT
define|#
directive|define
name|GL_IMPLEMENTATION_COLOR_READ_FORMAT
value|0x8B9B
DECL|macro|GL_LOW_FLOAT
define|#
directive|define
name|GL_LOW_FLOAT
value|0x8DF0
DECL|macro|GL_MEDIUM_FLOAT
define|#
directive|define
name|GL_MEDIUM_FLOAT
value|0x8DF1
DECL|macro|GL_HIGH_FLOAT
define|#
directive|define
name|GL_HIGH_FLOAT
value|0x8DF2
DECL|macro|GL_LOW_INT
define|#
directive|define
name|GL_LOW_INT
value|0x8DF3
DECL|macro|GL_MEDIUM_INT
define|#
directive|define
name|GL_MEDIUM_INT
value|0x8DF4
DECL|macro|GL_HIGH_INT
define|#
directive|define
name|GL_HIGH_INT
value|0x8DF5
DECL|macro|GL_SHADER_COMPILER
define|#
directive|define
name|GL_SHADER_COMPILER
value|0x8DFA
DECL|macro|GL_NUM_SHADER_BINARY_FORMATS
define|#
directive|define
name|GL_NUM_SHADER_BINARY_FORMATS
value|0x8DF9
DECL|macro|GL_MAX_VERTEX_UNIFORM_VECTORS
define|#
directive|define
name|GL_MAX_VERTEX_UNIFORM_VECTORS
value|0x8DFB
DECL|macro|GL_MAX_VARYING_VECTORS
define|#
directive|define
name|GL_MAX_VARYING_VECTORS
value|0x8DFC
DECL|macro|GL_MAX_FRAGMENT_UNIFORM_VECTORS
define|#
directive|define
name|GL_MAX_FRAGMENT_UNIFORM_VECTORS
value|0x8DFD
DECL|macro|GL_RGB565
define|#
directive|define
name|GL_RGB565
value|0x8D62
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_get_program_binary
DECL|macro|GL_PROGRAM_BINARY_RETRIEVABLE_HINT
define|#
directive|define
name|GL_PROGRAM_BINARY_RETRIEVABLE_HINT
value|0x8257
DECL|macro|GL_PROGRAM_BINARY_LENGTH
define|#
directive|define
name|GL_PROGRAM_BINARY_LENGTH
value|0x8741
DECL|macro|GL_NUM_PROGRAM_BINARY_FORMATS
define|#
directive|define
name|GL_NUM_PROGRAM_BINARY_FORMATS
value|0x87FE
DECL|macro|GL_PROGRAM_BINARY_FORMATS
define|#
directive|define
name|GL_PROGRAM_BINARY_FORMATS
value|0x87FF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_separate_shader_objects
DECL|macro|GL_VERTEX_SHADER_BIT
define|#
directive|define
name|GL_VERTEX_SHADER_BIT
value|0x00000001
DECL|macro|GL_FRAGMENT_SHADER_BIT
define|#
directive|define
name|GL_FRAGMENT_SHADER_BIT
value|0x00000002
DECL|macro|GL_GEOMETRY_SHADER_BIT
define|#
directive|define
name|GL_GEOMETRY_SHADER_BIT
value|0x00000004
DECL|macro|GL_TESS_CONTROL_SHADER_BIT
define|#
directive|define
name|GL_TESS_CONTROL_SHADER_BIT
value|0x00000008
DECL|macro|GL_TESS_EVALUATION_SHADER_BIT
define|#
directive|define
name|GL_TESS_EVALUATION_SHADER_BIT
value|0x00000010
DECL|macro|GL_ALL_SHADER_BITS
define|#
directive|define
name|GL_ALL_SHADER_BITS
value|0xFFFFFFFF
DECL|macro|GL_PROGRAM_SEPARABLE
define|#
directive|define
name|GL_PROGRAM_SEPARABLE
value|0x8258
DECL|macro|GL_ACTIVE_PROGRAM
define|#
directive|define
name|GL_ACTIVE_PROGRAM
value|0x8259
DECL|macro|GL_PROGRAM_PIPELINE_BINDING
define|#
directive|define
name|GL_PROGRAM_PIPELINE_BINDING
value|0x825A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_precision
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_attrib_64bit
comment|/* reuse GL_RGB32I */
comment|/* reuse GL_DOUBLE_VEC2 */
comment|/* reuse GL_DOUBLE_VEC3 */
comment|/* reuse GL_DOUBLE_VEC4 */
comment|/* reuse GL_DOUBLE_MAT2 */
comment|/* reuse GL_DOUBLE_MAT3 */
comment|/* reuse GL_DOUBLE_MAT4 */
comment|/* reuse GL_DOUBLE_MAT2x3 */
comment|/* reuse GL_DOUBLE_MAT2x4 */
comment|/* reuse GL_DOUBLE_MAT3x2 */
comment|/* reuse GL_DOUBLE_MAT3x4 */
comment|/* reuse GL_DOUBLE_MAT4x2 */
comment|/* reuse GL_DOUBLE_MAT4x3 */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_viewport_array
comment|/* reuse GL_SCISSOR_BOX */
comment|/* reuse GL_VIEWPORT */
comment|/* reuse GL_DEPTH_RANGE */
comment|/* reuse GL_SCISSOR_TEST */
DECL|macro|GL_MAX_VIEWPORTS
define|#
directive|define
name|GL_MAX_VIEWPORTS
value|0x825B
DECL|macro|GL_VIEWPORT_SUBPIXEL_BITS
define|#
directive|define
name|GL_VIEWPORT_SUBPIXEL_BITS
value|0x825C
DECL|macro|GL_VIEWPORT_BOUNDS_RANGE
define|#
directive|define
name|GL_VIEWPORT_BOUNDS_RANGE
value|0x825D
DECL|macro|GL_LAYER_PROVOKING_VERTEX
define|#
directive|define
name|GL_LAYER_PROVOKING_VERTEX
value|0x825E
DECL|macro|GL_VIEWPORT_INDEX_PROVOKING_VERTEX
define|#
directive|define
name|GL_VIEWPORT_INDEX_PROVOKING_VERTEX
value|0x825F
DECL|macro|GL_UNDEFINED_VERTEX
define|#
directive|define
name|GL_UNDEFINED_VERTEX
value|0x8260
comment|/* reuse GL_FIRST_VERTEX_CONVENTION */
comment|/* reuse GL_LAST_VERTEX_CONVENTION */
comment|/* reuse GL_PROVOKING_VERTEX */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_cl_event
DECL|macro|GL_SYNC_CL_EVENT_ARB
define|#
directive|define
name|GL_SYNC_CL_EVENT_ARB
value|0x8240
DECL|macro|GL_SYNC_CL_EVENT_COMPLETE_ARB
define|#
directive|define
name|GL_SYNC_CL_EVENT_COMPLETE_ARB
value|0x8241
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_debug_output
DECL|macro|GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
define|#
directive|define
name|GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
value|0x8242
DECL|macro|GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
define|#
directive|define
name|GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
value|0x8243
DECL|macro|GL_DEBUG_CALLBACK_FUNCTION_ARB
define|#
directive|define
name|GL_DEBUG_CALLBACK_FUNCTION_ARB
value|0x8244
DECL|macro|GL_DEBUG_CALLBACK_USER_PARAM_ARB
define|#
directive|define
name|GL_DEBUG_CALLBACK_USER_PARAM_ARB
value|0x8245
DECL|macro|GL_DEBUG_SOURCE_API_ARB
define|#
directive|define
name|GL_DEBUG_SOURCE_API_ARB
value|0x8246
DECL|macro|GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
define|#
directive|define
name|GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
value|0x8247
DECL|macro|GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
define|#
directive|define
name|GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
value|0x8248
DECL|macro|GL_DEBUG_SOURCE_THIRD_PARTY_ARB
define|#
directive|define
name|GL_DEBUG_SOURCE_THIRD_PARTY_ARB
value|0x8249
DECL|macro|GL_DEBUG_SOURCE_APPLICATION_ARB
define|#
directive|define
name|GL_DEBUG_SOURCE_APPLICATION_ARB
value|0x824A
DECL|macro|GL_DEBUG_SOURCE_OTHER_ARB
define|#
directive|define
name|GL_DEBUG_SOURCE_OTHER_ARB
value|0x824B
DECL|macro|GL_DEBUG_TYPE_ERROR_ARB
define|#
directive|define
name|GL_DEBUG_TYPE_ERROR_ARB
value|0x824C
DECL|macro|GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
define|#
directive|define
name|GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
value|0x824D
DECL|macro|GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
define|#
directive|define
name|GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
value|0x824E
DECL|macro|GL_DEBUG_TYPE_PORTABILITY_ARB
define|#
directive|define
name|GL_DEBUG_TYPE_PORTABILITY_ARB
value|0x824F
DECL|macro|GL_DEBUG_TYPE_PERFORMANCE_ARB
define|#
directive|define
name|GL_DEBUG_TYPE_PERFORMANCE_ARB
value|0x8250
DECL|macro|GL_DEBUG_TYPE_OTHER_ARB
define|#
directive|define
name|GL_DEBUG_TYPE_OTHER_ARB
value|0x8251
DECL|macro|GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
define|#
directive|define
name|GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
value|0x9143
DECL|macro|GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
define|#
directive|define
name|GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
value|0x9144
DECL|macro|GL_DEBUG_LOGGED_MESSAGES_ARB
define|#
directive|define
name|GL_DEBUG_LOGGED_MESSAGES_ARB
value|0x9145
DECL|macro|GL_DEBUG_SEVERITY_HIGH_ARB
define|#
directive|define
name|GL_DEBUG_SEVERITY_HIGH_ARB
value|0x9146
DECL|macro|GL_DEBUG_SEVERITY_MEDIUM_ARB
define|#
directive|define
name|GL_DEBUG_SEVERITY_MEDIUM_ARB
value|0x9147
DECL|macro|GL_DEBUG_SEVERITY_LOW_ARB
define|#
directive|define
name|GL_DEBUG_SEVERITY_LOW_ARB
value|0x9148
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_robustness
comment|/* reuse GL_NO_ERROR */
DECL|macro|GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
define|#
directive|define
name|GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
value|0x00000004
DECL|macro|GL_LOSE_CONTEXT_ON_RESET_ARB
define|#
directive|define
name|GL_LOSE_CONTEXT_ON_RESET_ARB
value|0x8252
DECL|macro|GL_GUILTY_CONTEXT_RESET_ARB
define|#
directive|define
name|GL_GUILTY_CONTEXT_RESET_ARB
value|0x8253
DECL|macro|GL_INNOCENT_CONTEXT_RESET_ARB
define|#
directive|define
name|GL_INNOCENT_CONTEXT_RESET_ARB
value|0x8254
DECL|macro|GL_UNKNOWN_CONTEXT_RESET_ARB
define|#
directive|define
name|GL_UNKNOWN_CONTEXT_RESET_ARB
value|0x8255
DECL|macro|GL_RESET_NOTIFICATION_STRATEGY_ARB
define|#
directive|define
name|GL_RESET_NOTIFICATION_STRATEGY_ARB
value|0x8256
DECL|macro|GL_NO_RESET_NOTIFICATION_ARB
define|#
directive|define
name|GL_NO_RESET_NOTIFICATION_ARB
value|0x8261
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_stencil_export
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_base_instance
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_420pack
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transform_feedback_instanced
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_compressed_texture_pixel_storage
DECL|macro|GL_UNPACK_COMPRESSED_BLOCK_WIDTH
define|#
directive|define
name|GL_UNPACK_COMPRESSED_BLOCK_WIDTH
value|0x9127
DECL|macro|GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
define|#
directive|define
name|GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
value|0x9128
DECL|macro|GL_UNPACK_COMPRESSED_BLOCK_DEPTH
define|#
directive|define
name|GL_UNPACK_COMPRESSED_BLOCK_DEPTH
value|0x9129
DECL|macro|GL_UNPACK_COMPRESSED_BLOCK_SIZE
define|#
directive|define
name|GL_UNPACK_COMPRESSED_BLOCK_SIZE
value|0x912A
DECL|macro|GL_PACK_COMPRESSED_BLOCK_WIDTH
define|#
directive|define
name|GL_PACK_COMPRESSED_BLOCK_WIDTH
value|0x912B
DECL|macro|GL_PACK_COMPRESSED_BLOCK_HEIGHT
define|#
directive|define
name|GL_PACK_COMPRESSED_BLOCK_HEIGHT
value|0x912C
DECL|macro|GL_PACK_COMPRESSED_BLOCK_DEPTH
define|#
directive|define
name|GL_PACK_COMPRESSED_BLOCK_DEPTH
value|0x912D
DECL|macro|GL_PACK_COMPRESSED_BLOCK_SIZE
define|#
directive|define
name|GL_PACK_COMPRESSED_BLOCK_SIZE
value|0x912E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_conservative_depth
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_internalformat_query
DECL|macro|GL_NUM_SAMPLE_COUNTS
define|#
directive|define
name|GL_NUM_SAMPLE_COUNTS
value|0x9380
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_map_buffer_alignment
DECL|macro|GL_MIN_MAP_BUFFER_ALIGNMENT
define|#
directive|define
name|GL_MIN_MAP_BUFFER_ALIGNMENT
value|0x90BC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_atomic_counters
DECL|macro|GL_ATOMIC_COUNTER_BUFFER
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER
value|0x92C0
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_BINDING
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_BINDING
value|0x92C1
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_START
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_START
value|0x92C2
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_SIZE
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_SIZE
value|0x92C3
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
value|0x92C4
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
value|0x92C5
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
value|0x92C6
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
value|0x92C7
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
value|0x92C8
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
value|0x92C9
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
value|0x92CA
DECL|macro|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
define|#
directive|define
name|GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
value|0x92CB
DECL|macro|GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
define|#
directive|define
name|GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
value|0x92CC
DECL|macro|GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
value|0x92CD
DECL|macro|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
value|0x92CE
DECL|macro|GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
define|#
directive|define
name|GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
value|0x92CF
DECL|macro|GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
define|#
directive|define
name|GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
value|0x92D0
DECL|macro|GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
define|#
directive|define
name|GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
value|0x92D1
DECL|macro|GL_MAX_VERTEX_ATOMIC_COUNTERS
define|#
directive|define
name|GL_MAX_VERTEX_ATOMIC_COUNTERS
value|0x92D2
DECL|macro|GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
value|0x92D3
DECL|macro|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
value|0x92D4
DECL|macro|GL_MAX_GEOMETRY_ATOMIC_COUNTERS
define|#
directive|define
name|GL_MAX_GEOMETRY_ATOMIC_COUNTERS
value|0x92D5
DECL|macro|GL_MAX_FRAGMENT_ATOMIC_COUNTERS
define|#
directive|define
name|GL_MAX_FRAGMENT_ATOMIC_COUNTERS
value|0x92D6
DECL|macro|GL_MAX_COMBINED_ATOMIC_COUNTERS
define|#
directive|define
name|GL_MAX_COMBINED_ATOMIC_COUNTERS
value|0x92D7
DECL|macro|GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
define|#
directive|define
name|GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
value|0x92D8
DECL|macro|GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
define|#
directive|define
name|GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
value|0x92DC
DECL|macro|GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
define|#
directive|define
name|GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
value|0x92D9
DECL|macro|GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
define|#
directive|define
name|GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
value|0x92DA
DECL|macro|GL_UNSIGNED_INT_ATOMIC_COUNTER
define|#
directive|define
name|GL_UNSIGNED_INT_ATOMIC_COUNTER
value|0x92DB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_image_load_store
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
value|0x00000001
DECL|macro|GL_ELEMENT_ARRAY_BARRIER_BIT
define|#
directive|define
name|GL_ELEMENT_ARRAY_BARRIER_BIT
value|0x00000002
DECL|macro|GL_UNIFORM_BARRIER_BIT
define|#
directive|define
name|GL_UNIFORM_BARRIER_BIT
value|0x00000004
DECL|macro|GL_TEXTURE_FETCH_BARRIER_BIT
define|#
directive|define
name|GL_TEXTURE_FETCH_BARRIER_BIT
value|0x00000008
DECL|macro|GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
define|#
directive|define
name|GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
value|0x00000020
DECL|macro|GL_COMMAND_BARRIER_BIT
define|#
directive|define
name|GL_COMMAND_BARRIER_BIT
value|0x00000040
DECL|macro|GL_PIXEL_BUFFER_BARRIER_BIT
define|#
directive|define
name|GL_PIXEL_BUFFER_BARRIER_BIT
value|0x00000080
DECL|macro|GL_TEXTURE_UPDATE_BARRIER_BIT
define|#
directive|define
name|GL_TEXTURE_UPDATE_BARRIER_BIT
value|0x00000100
DECL|macro|GL_BUFFER_UPDATE_BARRIER_BIT
define|#
directive|define
name|GL_BUFFER_UPDATE_BARRIER_BIT
value|0x00000200
DECL|macro|GL_FRAMEBUFFER_BARRIER_BIT
define|#
directive|define
name|GL_FRAMEBUFFER_BARRIER_BIT
value|0x00000400
DECL|macro|GL_TRANSFORM_FEEDBACK_BARRIER_BIT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BARRIER_BIT
value|0x00000800
DECL|macro|GL_ATOMIC_COUNTER_BARRIER_BIT
define|#
directive|define
name|GL_ATOMIC_COUNTER_BARRIER_BIT
value|0x00001000
DECL|macro|GL_ALL_BARRIER_BITS
define|#
directive|define
name|GL_ALL_BARRIER_BITS
value|0xFFFFFFFF
DECL|macro|GL_MAX_IMAGE_UNITS
define|#
directive|define
name|GL_MAX_IMAGE_UNITS
value|0x8F38
DECL|macro|GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
define|#
directive|define
name|GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
value|0x8F39
DECL|macro|GL_IMAGE_BINDING_NAME
define|#
directive|define
name|GL_IMAGE_BINDING_NAME
value|0x8F3A
DECL|macro|GL_IMAGE_BINDING_LEVEL
define|#
directive|define
name|GL_IMAGE_BINDING_LEVEL
value|0x8F3B
DECL|macro|GL_IMAGE_BINDING_LAYERED
define|#
directive|define
name|GL_IMAGE_BINDING_LAYERED
value|0x8F3C
DECL|macro|GL_IMAGE_BINDING_LAYER
define|#
directive|define
name|GL_IMAGE_BINDING_LAYER
value|0x8F3D
DECL|macro|GL_IMAGE_BINDING_ACCESS
define|#
directive|define
name|GL_IMAGE_BINDING_ACCESS
value|0x8F3E
DECL|macro|GL_IMAGE_1D
define|#
directive|define
name|GL_IMAGE_1D
value|0x904C
DECL|macro|GL_IMAGE_2D
define|#
directive|define
name|GL_IMAGE_2D
value|0x904D
DECL|macro|GL_IMAGE_3D
define|#
directive|define
name|GL_IMAGE_3D
value|0x904E
DECL|macro|GL_IMAGE_2D_RECT
define|#
directive|define
name|GL_IMAGE_2D_RECT
value|0x904F
DECL|macro|GL_IMAGE_CUBE
define|#
directive|define
name|GL_IMAGE_CUBE
value|0x9050
DECL|macro|GL_IMAGE_BUFFER
define|#
directive|define
name|GL_IMAGE_BUFFER
value|0x9051
DECL|macro|GL_IMAGE_1D_ARRAY
define|#
directive|define
name|GL_IMAGE_1D_ARRAY
value|0x9052
DECL|macro|GL_IMAGE_2D_ARRAY
define|#
directive|define
name|GL_IMAGE_2D_ARRAY
value|0x9053
DECL|macro|GL_IMAGE_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_IMAGE_CUBE_MAP_ARRAY
value|0x9054
DECL|macro|GL_IMAGE_2D_MULTISAMPLE
define|#
directive|define
name|GL_IMAGE_2D_MULTISAMPLE
value|0x9055
DECL|macro|GL_IMAGE_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_IMAGE_2D_MULTISAMPLE_ARRAY
value|0x9056
DECL|macro|GL_INT_IMAGE_1D
define|#
directive|define
name|GL_INT_IMAGE_1D
value|0x9057
DECL|macro|GL_INT_IMAGE_2D
define|#
directive|define
name|GL_INT_IMAGE_2D
value|0x9058
DECL|macro|GL_INT_IMAGE_3D
define|#
directive|define
name|GL_INT_IMAGE_3D
value|0x9059
DECL|macro|GL_INT_IMAGE_2D_RECT
define|#
directive|define
name|GL_INT_IMAGE_2D_RECT
value|0x905A
DECL|macro|GL_INT_IMAGE_CUBE
define|#
directive|define
name|GL_INT_IMAGE_CUBE
value|0x905B
DECL|macro|GL_INT_IMAGE_BUFFER
define|#
directive|define
name|GL_INT_IMAGE_BUFFER
value|0x905C
DECL|macro|GL_INT_IMAGE_1D_ARRAY
define|#
directive|define
name|GL_INT_IMAGE_1D_ARRAY
value|0x905D
DECL|macro|GL_INT_IMAGE_2D_ARRAY
define|#
directive|define
name|GL_INT_IMAGE_2D_ARRAY
value|0x905E
DECL|macro|GL_INT_IMAGE_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_INT_IMAGE_CUBE_MAP_ARRAY
value|0x905F
DECL|macro|GL_INT_IMAGE_2D_MULTISAMPLE
define|#
directive|define
name|GL_INT_IMAGE_2D_MULTISAMPLE
value|0x9060
DECL|macro|GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
value|0x9061
DECL|macro|GL_UNSIGNED_INT_IMAGE_1D
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_1D
value|0x9062
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D
value|0x9063
DECL|macro|GL_UNSIGNED_INT_IMAGE_3D
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_3D
value|0x9064
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_RECT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_RECT
value|0x9065
DECL|macro|GL_UNSIGNED_INT_IMAGE_CUBE
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_CUBE
value|0x9066
DECL|macro|GL_UNSIGNED_INT_IMAGE_BUFFER
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_BUFFER
value|0x9067
DECL|macro|GL_UNSIGNED_INT_IMAGE_1D_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_1D_ARRAY
value|0x9068
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_ARRAY
value|0x9069
DECL|macro|GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
value|0x906A
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
value|0x906B
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
value|0x906C
DECL|macro|GL_MAX_IMAGE_SAMPLES
define|#
directive|define
name|GL_MAX_IMAGE_SAMPLES
value|0x906D
DECL|macro|GL_IMAGE_BINDING_FORMAT
define|#
directive|define
name|GL_IMAGE_BINDING_FORMAT
value|0x906E
DECL|macro|GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
define|#
directive|define
name|GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
value|0x90C7
DECL|macro|GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
define|#
directive|define
name|GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
value|0x90C8
DECL|macro|GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
define|#
directive|define
name|GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
value|0x90C9
DECL|macro|GL_MAX_VERTEX_IMAGE_UNIFORMS
define|#
directive|define
name|GL_MAX_VERTEX_IMAGE_UNIFORMS
value|0x90CA
DECL|macro|GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
define|#
directive|define
name|GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
value|0x90CB
DECL|macro|GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
define|#
directive|define
name|GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
value|0x90CC
DECL|macro|GL_MAX_GEOMETRY_IMAGE_UNIFORMS
define|#
directive|define
name|GL_MAX_GEOMETRY_IMAGE_UNIFORMS
value|0x90CD
DECL|macro|GL_MAX_FRAGMENT_IMAGE_UNIFORMS
define|#
directive|define
name|GL_MAX_FRAGMENT_IMAGE_UNIFORMS
value|0x90CE
DECL|macro|GL_MAX_COMBINED_IMAGE_UNIFORMS
define|#
directive|define
name|GL_MAX_COMBINED_IMAGE_UNIFORMS
value|0x90CF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_packing
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_storage
DECL|macro|GL_TEXTURE_IMMUTABLE_FORMAT
define|#
directive|define
name|GL_TEXTURE_IMMUTABLE_FORMAT
value|0x912F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_abgr
DECL|macro|GL_ABGR_EXT
define|#
directive|define
name|GL_ABGR_EXT
value|0x8000
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_color
DECL|macro|GL_CONSTANT_COLOR_EXT
define|#
directive|define
name|GL_CONSTANT_COLOR_EXT
value|0x8001
DECL|macro|GL_ONE_MINUS_CONSTANT_COLOR_EXT
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_COLOR_EXT
value|0x8002
DECL|macro|GL_CONSTANT_ALPHA_EXT
define|#
directive|define
name|GL_CONSTANT_ALPHA_EXT
value|0x8003
DECL|macro|GL_ONE_MINUS_CONSTANT_ALPHA_EXT
define|#
directive|define
name|GL_ONE_MINUS_CONSTANT_ALPHA_EXT
value|0x8004
DECL|macro|GL_BLEND_COLOR_EXT
define|#
directive|define
name|GL_BLEND_COLOR_EXT
value|0x8005
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_polygon_offset
DECL|macro|GL_POLYGON_OFFSET_EXT
define|#
directive|define
name|GL_POLYGON_OFFSET_EXT
value|0x8037
DECL|macro|GL_POLYGON_OFFSET_FACTOR_EXT
define|#
directive|define
name|GL_POLYGON_OFFSET_FACTOR_EXT
value|0x8038
DECL|macro|GL_POLYGON_OFFSET_BIAS_EXT
define|#
directive|define
name|GL_POLYGON_OFFSET_BIAS_EXT
value|0x8039
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture
DECL|macro|GL_ALPHA4_EXT
define|#
directive|define
name|GL_ALPHA4_EXT
value|0x803B
DECL|macro|GL_ALPHA8_EXT
define|#
directive|define
name|GL_ALPHA8_EXT
value|0x803C
DECL|macro|GL_ALPHA12_EXT
define|#
directive|define
name|GL_ALPHA12_EXT
value|0x803D
DECL|macro|GL_ALPHA16_EXT
define|#
directive|define
name|GL_ALPHA16_EXT
value|0x803E
DECL|macro|GL_LUMINANCE4_EXT
define|#
directive|define
name|GL_LUMINANCE4_EXT
value|0x803F
DECL|macro|GL_LUMINANCE8_EXT
define|#
directive|define
name|GL_LUMINANCE8_EXT
value|0x8040
DECL|macro|GL_LUMINANCE12_EXT
define|#
directive|define
name|GL_LUMINANCE12_EXT
value|0x8041
DECL|macro|GL_LUMINANCE16_EXT
define|#
directive|define
name|GL_LUMINANCE16_EXT
value|0x8042
DECL|macro|GL_LUMINANCE4_ALPHA4_EXT
define|#
directive|define
name|GL_LUMINANCE4_ALPHA4_EXT
value|0x8043
DECL|macro|GL_LUMINANCE6_ALPHA2_EXT
define|#
directive|define
name|GL_LUMINANCE6_ALPHA2_EXT
value|0x8044
DECL|macro|GL_LUMINANCE8_ALPHA8_EXT
define|#
directive|define
name|GL_LUMINANCE8_ALPHA8_EXT
value|0x8045
DECL|macro|GL_LUMINANCE12_ALPHA4_EXT
define|#
directive|define
name|GL_LUMINANCE12_ALPHA4_EXT
value|0x8046
DECL|macro|GL_LUMINANCE12_ALPHA12_EXT
define|#
directive|define
name|GL_LUMINANCE12_ALPHA12_EXT
value|0x8047
DECL|macro|GL_LUMINANCE16_ALPHA16_EXT
define|#
directive|define
name|GL_LUMINANCE16_ALPHA16_EXT
value|0x8048
DECL|macro|GL_INTENSITY_EXT
define|#
directive|define
name|GL_INTENSITY_EXT
value|0x8049
DECL|macro|GL_INTENSITY4_EXT
define|#
directive|define
name|GL_INTENSITY4_EXT
value|0x804A
DECL|macro|GL_INTENSITY8_EXT
define|#
directive|define
name|GL_INTENSITY8_EXT
value|0x804B
DECL|macro|GL_INTENSITY12_EXT
define|#
directive|define
name|GL_INTENSITY12_EXT
value|0x804C
DECL|macro|GL_INTENSITY16_EXT
define|#
directive|define
name|GL_INTENSITY16_EXT
value|0x804D
DECL|macro|GL_RGB2_EXT
define|#
directive|define
name|GL_RGB2_EXT
value|0x804E
DECL|macro|GL_RGB4_EXT
define|#
directive|define
name|GL_RGB4_EXT
value|0x804F
DECL|macro|GL_RGB5_EXT
define|#
directive|define
name|GL_RGB5_EXT
value|0x8050
DECL|macro|GL_RGB8_EXT
define|#
directive|define
name|GL_RGB8_EXT
value|0x8051
DECL|macro|GL_RGB10_EXT
define|#
directive|define
name|GL_RGB10_EXT
value|0x8052
DECL|macro|GL_RGB12_EXT
define|#
directive|define
name|GL_RGB12_EXT
value|0x8053
DECL|macro|GL_RGB16_EXT
define|#
directive|define
name|GL_RGB16_EXT
value|0x8054
DECL|macro|GL_RGBA2_EXT
define|#
directive|define
name|GL_RGBA2_EXT
value|0x8055
DECL|macro|GL_RGBA4_EXT
define|#
directive|define
name|GL_RGBA4_EXT
value|0x8056
DECL|macro|GL_RGB5_A1_EXT
define|#
directive|define
name|GL_RGB5_A1_EXT
value|0x8057
DECL|macro|GL_RGBA8_EXT
define|#
directive|define
name|GL_RGBA8_EXT
value|0x8058
DECL|macro|GL_RGB10_A2_EXT
define|#
directive|define
name|GL_RGB10_A2_EXT
value|0x8059
DECL|macro|GL_RGBA12_EXT
define|#
directive|define
name|GL_RGBA12_EXT
value|0x805A
DECL|macro|GL_RGBA16_EXT
define|#
directive|define
name|GL_RGBA16_EXT
value|0x805B
DECL|macro|GL_TEXTURE_RED_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_RED_SIZE_EXT
value|0x805C
DECL|macro|GL_TEXTURE_GREEN_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_GREEN_SIZE_EXT
value|0x805D
DECL|macro|GL_TEXTURE_BLUE_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_BLUE_SIZE_EXT
value|0x805E
DECL|macro|GL_TEXTURE_ALPHA_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_ALPHA_SIZE_EXT
value|0x805F
DECL|macro|GL_TEXTURE_LUMINANCE_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_LUMINANCE_SIZE_EXT
value|0x8060
DECL|macro|GL_TEXTURE_INTENSITY_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_INTENSITY_SIZE_EXT
value|0x8061
DECL|macro|GL_REPLACE_EXT
define|#
directive|define
name|GL_REPLACE_EXT
value|0x8062
DECL|macro|GL_PROXY_TEXTURE_1D_EXT
define|#
directive|define
name|GL_PROXY_TEXTURE_1D_EXT
value|0x8063
DECL|macro|GL_PROXY_TEXTURE_2D_EXT
define|#
directive|define
name|GL_PROXY_TEXTURE_2D_EXT
value|0x8064
DECL|macro|GL_TEXTURE_TOO_LARGE_EXT
define|#
directive|define
name|GL_TEXTURE_TOO_LARGE_EXT
value|0x8065
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture3D
DECL|macro|GL_PACK_SKIP_IMAGES_EXT
define|#
directive|define
name|GL_PACK_SKIP_IMAGES_EXT
value|0x806B
DECL|macro|GL_PACK_IMAGE_HEIGHT_EXT
define|#
directive|define
name|GL_PACK_IMAGE_HEIGHT_EXT
value|0x806C
DECL|macro|GL_UNPACK_SKIP_IMAGES_EXT
define|#
directive|define
name|GL_UNPACK_SKIP_IMAGES_EXT
value|0x806D
DECL|macro|GL_UNPACK_IMAGE_HEIGHT_EXT
define|#
directive|define
name|GL_UNPACK_IMAGE_HEIGHT_EXT
value|0x806E
DECL|macro|GL_TEXTURE_3D_EXT
define|#
directive|define
name|GL_TEXTURE_3D_EXT
value|0x806F
DECL|macro|GL_PROXY_TEXTURE_3D_EXT
define|#
directive|define
name|GL_PROXY_TEXTURE_3D_EXT
value|0x8070
DECL|macro|GL_TEXTURE_DEPTH_EXT
define|#
directive|define
name|GL_TEXTURE_DEPTH_EXT
value|0x8071
DECL|macro|GL_TEXTURE_WRAP_R_EXT
define|#
directive|define
name|GL_TEXTURE_WRAP_R_EXT
value|0x8072
DECL|macro|GL_MAX_3D_TEXTURE_SIZE_EXT
define|#
directive|define
name|GL_MAX_3D_TEXTURE_SIZE_EXT
value|0x8073
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_filter4
DECL|macro|GL_FILTER4_SGIS
define|#
directive|define
name|GL_FILTER4_SGIS
value|0x8146
DECL|macro|GL_TEXTURE_FILTER4_SIZE_SGIS
define|#
directive|define
name|GL_TEXTURE_FILTER4_SIZE_SGIS
value|0x8147
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_subtexture
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_copy_texture
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_histogram
DECL|macro|GL_HISTOGRAM_EXT
define|#
directive|define
name|GL_HISTOGRAM_EXT
value|0x8024
DECL|macro|GL_PROXY_HISTOGRAM_EXT
define|#
directive|define
name|GL_PROXY_HISTOGRAM_EXT
value|0x8025
DECL|macro|GL_HISTOGRAM_WIDTH_EXT
define|#
directive|define
name|GL_HISTOGRAM_WIDTH_EXT
value|0x8026
DECL|macro|GL_HISTOGRAM_FORMAT_EXT
define|#
directive|define
name|GL_HISTOGRAM_FORMAT_EXT
value|0x8027
DECL|macro|GL_HISTOGRAM_RED_SIZE_EXT
define|#
directive|define
name|GL_HISTOGRAM_RED_SIZE_EXT
value|0x8028
DECL|macro|GL_HISTOGRAM_GREEN_SIZE_EXT
define|#
directive|define
name|GL_HISTOGRAM_GREEN_SIZE_EXT
value|0x8029
DECL|macro|GL_HISTOGRAM_BLUE_SIZE_EXT
define|#
directive|define
name|GL_HISTOGRAM_BLUE_SIZE_EXT
value|0x802A
DECL|macro|GL_HISTOGRAM_ALPHA_SIZE_EXT
define|#
directive|define
name|GL_HISTOGRAM_ALPHA_SIZE_EXT
value|0x802B
DECL|macro|GL_HISTOGRAM_LUMINANCE_SIZE_EXT
define|#
directive|define
name|GL_HISTOGRAM_LUMINANCE_SIZE_EXT
value|0x802C
DECL|macro|GL_HISTOGRAM_SINK_EXT
define|#
directive|define
name|GL_HISTOGRAM_SINK_EXT
value|0x802D
DECL|macro|GL_MINMAX_EXT
define|#
directive|define
name|GL_MINMAX_EXT
value|0x802E
DECL|macro|GL_MINMAX_FORMAT_EXT
define|#
directive|define
name|GL_MINMAX_FORMAT_EXT
value|0x802F
DECL|macro|GL_MINMAX_SINK_EXT
define|#
directive|define
name|GL_MINMAX_SINK_EXT
value|0x8030
DECL|macro|GL_TABLE_TOO_LARGE_EXT
define|#
directive|define
name|GL_TABLE_TOO_LARGE_EXT
value|0x8031
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_convolution
DECL|macro|GL_CONVOLUTION_1D_EXT
define|#
directive|define
name|GL_CONVOLUTION_1D_EXT
value|0x8010
DECL|macro|GL_CONVOLUTION_2D_EXT
define|#
directive|define
name|GL_CONVOLUTION_2D_EXT
value|0x8011
DECL|macro|GL_SEPARABLE_2D_EXT
define|#
directive|define
name|GL_SEPARABLE_2D_EXT
value|0x8012
DECL|macro|GL_CONVOLUTION_BORDER_MODE_EXT
define|#
directive|define
name|GL_CONVOLUTION_BORDER_MODE_EXT
value|0x8013
DECL|macro|GL_CONVOLUTION_FILTER_SCALE_EXT
define|#
directive|define
name|GL_CONVOLUTION_FILTER_SCALE_EXT
value|0x8014
DECL|macro|GL_CONVOLUTION_FILTER_BIAS_EXT
define|#
directive|define
name|GL_CONVOLUTION_FILTER_BIAS_EXT
value|0x8015
DECL|macro|GL_REDUCE_EXT
define|#
directive|define
name|GL_REDUCE_EXT
value|0x8016
DECL|macro|GL_CONVOLUTION_FORMAT_EXT
define|#
directive|define
name|GL_CONVOLUTION_FORMAT_EXT
value|0x8017
DECL|macro|GL_CONVOLUTION_WIDTH_EXT
define|#
directive|define
name|GL_CONVOLUTION_WIDTH_EXT
value|0x8018
DECL|macro|GL_CONVOLUTION_HEIGHT_EXT
define|#
directive|define
name|GL_CONVOLUTION_HEIGHT_EXT
value|0x8019
DECL|macro|GL_MAX_CONVOLUTION_WIDTH_EXT
define|#
directive|define
name|GL_MAX_CONVOLUTION_WIDTH_EXT
value|0x801A
DECL|macro|GL_MAX_CONVOLUTION_HEIGHT_EXT
define|#
directive|define
name|GL_MAX_CONVOLUTION_HEIGHT_EXT
value|0x801B
DECL|macro|GL_POST_CONVOLUTION_RED_SCALE_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_RED_SCALE_EXT
value|0x801C
DECL|macro|GL_POST_CONVOLUTION_GREEN_SCALE_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_GREEN_SCALE_EXT
value|0x801D
DECL|macro|GL_POST_CONVOLUTION_BLUE_SCALE_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_BLUE_SCALE_EXT
value|0x801E
DECL|macro|GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
value|0x801F
DECL|macro|GL_POST_CONVOLUTION_RED_BIAS_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_RED_BIAS_EXT
value|0x8020
DECL|macro|GL_POST_CONVOLUTION_GREEN_BIAS_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_GREEN_BIAS_EXT
value|0x8021
DECL|macro|GL_POST_CONVOLUTION_BLUE_BIAS_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_BLUE_BIAS_EXT
value|0x8022
DECL|macro|GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
define|#
directive|define
name|GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
value|0x8023
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGI_color_matrix
DECL|macro|GL_COLOR_MATRIX_SGI
define|#
directive|define
name|GL_COLOR_MATRIX_SGI
value|0x80B1
DECL|macro|GL_COLOR_MATRIX_STACK_DEPTH_SGI
define|#
directive|define
name|GL_COLOR_MATRIX_STACK_DEPTH_SGI
value|0x80B2
DECL|macro|GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
define|#
directive|define
name|GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
value|0x80B3
DECL|macro|GL_POST_COLOR_MATRIX_RED_SCALE_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_RED_SCALE_SGI
value|0x80B4
DECL|macro|GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
value|0x80B5
DECL|macro|GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
value|0x80B6
DECL|macro|GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
value|0x80B7
DECL|macro|GL_POST_COLOR_MATRIX_RED_BIAS_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_RED_BIAS_SGI
value|0x80B8
DECL|macro|GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
value|0x80B9
DECL|macro|GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
value|0x80BA
DECL|macro|GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
value|0x80BB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGI_color_table
DECL|macro|GL_COLOR_TABLE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_SGI
value|0x80D0
DECL|macro|GL_POST_CONVOLUTION_COLOR_TABLE_SGI
define|#
directive|define
name|GL_POST_CONVOLUTION_COLOR_TABLE_SGI
value|0x80D1
DECL|macro|GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
define|#
directive|define
name|GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
value|0x80D2
DECL|macro|GL_PROXY_COLOR_TABLE_SGI
define|#
directive|define
name|GL_PROXY_COLOR_TABLE_SGI
value|0x80D3
DECL|macro|GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
define|#
directive|define
name|GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
value|0x80D4
DECL|macro|GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
define|#
directive|define
name|GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
value|0x80D5
DECL|macro|GL_COLOR_TABLE_SCALE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_SCALE_SGI
value|0x80D6
DECL|macro|GL_COLOR_TABLE_BIAS_SGI
define|#
directive|define
name|GL_COLOR_TABLE_BIAS_SGI
value|0x80D7
DECL|macro|GL_COLOR_TABLE_FORMAT_SGI
define|#
directive|define
name|GL_COLOR_TABLE_FORMAT_SGI
value|0x80D8
DECL|macro|GL_COLOR_TABLE_WIDTH_SGI
define|#
directive|define
name|GL_COLOR_TABLE_WIDTH_SGI
value|0x80D9
DECL|macro|GL_COLOR_TABLE_RED_SIZE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_RED_SIZE_SGI
value|0x80DA
DECL|macro|GL_COLOR_TABLE_GREEN_SIZE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_GREEN_SIZE_SGI
value|0x80DB
DECL|macro|GL_COLOR_TABLE_BLUE_SIZE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_BLUE_SIZE_SGI
value|0x80DC
DECL|macro|GL_COLOR_TABLE_ALPHA_SIZE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_ALPHA_SIZE_SGI
value|0x80DD
DECL|macro|GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
value|0x80DE
DECL|macro|GL_COLOR_TABLE_INTENSITY_SIZE_SGI
define|#
directive|define
name|GL_COLOR_TABLE_INTENSITY_SIZE_SGI
value|0x80DF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_pixel_texture
DECL|macro|GL_PIXEL_TEXTURE_SGIS
define|#
directive|define
name|GL_PIXEL_TEXTURE_SGIS
value|0x8353
DECL|macro|GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
define|#
directive|define
name|GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
value|0x8354
DECL|macro|GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
define|#
directive|define
name|GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
value|0x8355
DECL|macro|GL_PIXEL_GROUP_COLOR_SGIS
define|#
directive|define
name|GL_PIXEL_GROUP_COLOR_SGIS
value|0x8356
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_pixel_texture
DECL|macro|GL_PIXEL_TEX_GEN_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_SGIX
value|0x8139
DECL|macro|GL_PIXEL_TEX_GEN_MODE_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_MODE_SGIX
value|0x832B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture4D
DECL|macro|GL_PACK_SKIP_VOLUMES_SGIS
define|#
directive|define
name|GL_PACK_SKIP_VOLUMES_SGIS
value|0x8130
DECL|macro|GL_PACK_IMAGE_DEPTH_SGIS
define|#
directive|define
name|GL_PACK_IMAGE_DEPTH_SGIS
value|0x8131
DECL|macro|GL_UNPACK_SKIP_VOLUMES_SGIS
define|#
directive|define
name|GL_UNPACK_SKIP_VOLUMES_SGIS
value|0x8132
DECL|macro|GL_UNPACK_IMAGE_DEPTH_SGIS
define|#
directive|define
name|GL_UNPACK_IMAGE_DEPTH_SGIS
value|0x8133
DECL|macro|GL_TEXTURE_4D_SGIS
define|#
directive|define
name|GL_TEXTURE_4D_SGIS
value|0x8134
DECL|macro|GL_PROXY_TEXTURE_4D_SGIS
define|#
directive|define
name|GL_PROXY_TEXTURE_4D_SGIS
value|0x8135
DECL|macro|GL_TEXTURE_4DSIZE_SGIS
define|#
directive|define
name|GL_TEXTURE_4DSIZE_SGIS
value|0x8136
DECL|macro|GL_TEXTURE_WRAP_Q_SGIS
define|#
directive|define
name|GL_TEXTURE_WRAP_Q_SGIS
value|0x8137
DECL|macro|GL_MAX_4D_TEXTURE_SIZE_SGIS
define|#
directive|define
name|GL_MAX_4D_TEXTURE_SIZE_SGIS
value|0x8138
DECL|macro|GL_TEXTURE_4D_BINDING_SGIS
define|#
directive|define
name|GL_TEXTURE_4D_BINDING_SGIS
value|0x814F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGI_texture_color_table
DECL|macro|GL_TEXTURE_COLOR_TABLE_SGI
define|#
directive|define
name|GL_TEXTURE_COLOR_TABLE_SGI
value|0x80BC
DECL|macro|GL_PROXY_TEXTURE_COLOR_TABLE_SGI
define|#
directive|define
name|GL_PROXY_TEXTURE_COLOR_TABLE_SGI
value|0x80BD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_cmyka
DECL|macro|GL_CMYK_EXT
define|#
directive|define
name|GL_CMYK_EXT
value|0x800C
DECL|macro|GL_CMYKA_EXT
define|#
directive|define
name|GL_CMYKA_EXT
value|0x800D
DECL|macro|GL_PACK_CMYK_HINT_EXT
define|#
directive|define
name|GL_PACK_CMYK_HINT_EXT
value|0x800E
DECL|macro|GL_UNPACK_CMYK_HINT_EXT
define|#
directive|define
name|GL_UNPACK_CMYK_HINT_EXT
value|0x800F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_object
DECL|macro|GL_TEXTURE_PRIORITY_EXT
define|#
directive|define
name|GL_TEXTURE_PRIORITY_EXT
value|0x8066
DECL|macro|GL_TEXTURE_RESIDENT_EXT
define|#
directive|define
name|GL_TEXTURE_RESIDENT_EXT
value|0x8067
DECL|macro|GL_TEXTURE_1D_BINDING_EXT
define|#
directive|define
name|GL_TEXTURE_1D_BINDING_EXT
value|0x8068
DECL|macro|GL_TEXTURE_2D_BINDING_EXT
define|#
directive|define
name|GL_TEXTURE_2D_BINDING_EXT
value|0x8069
DECL|macro|GL_TEXTURE_3D_BINDING_EXT
define|#
directive|define
name|GL_TEXTURE_3D_BINDING_EXT
value|0x806A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_detail_texture
DECL|macro|GL_DETAIL_TEXTURE_2D_SGIS
define|#
directive|define
name|GL_DETAIL_TEXTURE_2D_SGIS
value|0x8095
DECL|macro|GL_DETAIL_TEXTURE_2D_BINDING_SGIS
define|#
directive|define
name|GL_DETAIL_TEXTURE_2D_BINDING_SGIS
value|0x8096
DECL|macro|GL_LINEAR_DETAIL_SGIS
define|#
directive|define
name|GL_LINEAR_DETAIL_SGIS
value|0x8097
DECL|macro|GL_LINEAR_DETAIL_ALPHA_SGIS
define|#
directive|define
name|GL_LINEAR_DETAIL_ALPHA_SGIS
value|0x8098
DECL|macro|GL_LINEAR_DETAIL_COLOR_SGIS
define|#
directive|define
name|GL_LINEAR_DETAIL_COLOR_SGIS
value|0x8099
DECL|macro|GL_DETAIL_TEXTURE_LEVEL_SGIS
define|#
directive|define
name|GL_DETAIL_TEXTURE_LEVEL_SGIS
value|0x809A
DECL|macro|GL_DETAIL_TEXTURE_MODE_SGIS
define|#
directive|define
name|GL_DETAIL_TEXTURE_MODE_SGIS
value|0x809B
DECL|macro|GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
define|#
directive|define
name|GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
value|0x809C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_sharpen_texture
DECL|macro|GL_LINEAR_SHARPEN_SGIS
define|#
directive|define
name|GL_LINEAR_SHARPEN_SGIS
value|0x80AD
DECL|macro|GL_LINEAR_SHARPEN_ALPHA_SGIS
define|#
directive|define
name|GL_LINEAR_SHARPEN_ALPHA_SGIS
value|0x80AE
DECL|macro|GL_LINEAR_SHARPEN_COLOR_SGIS
define|#
directive|define
name|GL_LINEAR_SHARPEN_COLOR_SGIS
value|0x80AF
DECL|macro|GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
define|#
directive|define
name|GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
value|0x80B0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_packed_pixels
DECL|macro|GL_UNSIGNED_BYTE_3_3_2_EXT
define|#
directive|define
name|GL_UNSIGNED_BYTE_3_3_2_EXT
value|0x8032
DECL|macro|GL_UNSIGNED_SHORT_4_4_4_4_EXT
define|#
directive|define
name|GL_UNSIGNED_SHORT_4_4_4_4_EXT
value|0x8033
DECL|macro|GL_UNSIGNED_SHORT_5_5_5_1_EXT
define|#
directive|define
name|GL_UNSIGNED_SHORT_5_5_5_1_EXT
value|0x8034
DECL|macro|GL_UNSIGNED_INT_8_8_8_8_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_8_8_8_8_EXT
value|0x8035
DECL|macro|GL_UNSIGNED_INT_10_10_10_2_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_10_10_10_2_EXT
value|0x8036
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_lod
DECL|macro|GL_TEXTURE_MIN_LOD_SGIS
define|#
directive|define
name|GL_TEXTURE_MIN_LOD_SGIS
value|0x813A
DECL|macro|GL_TEXTURE_MAX_LOD_SGIS
define|#
directive|define
name|GL_TEXTURE_MAX_LOD_SGIS
value|0x813B
DECL|macro|GL_TEXTURE_BASE_LEVEL_SGIS
define|#
directive|define
name|GL_TEXTURE_BASE_LEVEL_SGIS
value|0x813C
DECL|macro|GL_TEXTURE_MAX_LEVEL_SGIS
define|#
directive|define
name|GL_TEXTURE_MAX_LEVEL_SGIS
value|0x813D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_multisample
DECL|macro|GL_MULTISAMPLE_SGIS
define|#
directive|define
name|GL_MULTISAMPLE_SGIS
value|0x809D
DECL|macro|GL_SAMPLE_ALPHA_TO_MASK_SGIS
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_MASK_SGIS
value|0x809E
DECL|macro|GL_SAMPLE_ALPHA_TO_ONE_SGIS
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_ONE_SGIS
value|0x809F
DECL|macro|GL_SAMPLE_MASK_SGIS
define|#
directive|define
name|GL_SAMPLE_MASK_SGIS
value|0x80A0
DECL|macro|GL_1PASS_SGIS
define|#
directive|define
name|GL_1PASS_SGIS
value|0x80A1
DECL|macro|GL_2PASS_0_SGIS
define|#
directive|define
name|GL_2PASS_0_SGIS
value|0x80A2
DECL|macro|GL_2PASS_1_SGIS
define|#
directive|define
name|GL_2PASS_1_SGIS
value|0x80A3
DECL|macro|GL_4PASS_0_SGIS
define|#
directive|define
name|GL_4PASS_0_SGIS
value|0x80A4
DECL|macro|GL_4PASS_1_SGIS
define|#
directive|define
name|GL_4PASS_1_SGIS
value|0x80A5
DECL|macro|GL_4PASS_2_SGIS
define|#
directive|define
name|GL_4PASS_2_SGIS
value|0x80A6
DECL|macro|GL_4PASS_3_SGIS
define|#
directive|define
name|GL_4PASS_3_SGIS
value|0x80A7
DECL|macro|GL_SAMPLE_BUFFERS_SGIS
define|#
directive|define
name|GL_SAMPLE_BUFFERS_SGIS
value|0x80A8
DECL|macro|GL_SAMPLES_SGIS
define|#
directive|define
name|GL_SAMPLES_SGIS
value|0x80A9
DECL|macro|GL_SAMPLE_MASK_VALUE_SGIS
define|#
directive|define
name|GL_SAMPLE_MASK_VALUE_SGIS
value|0x80AA
DECL|macro|GL_SAMPLE_MASK_INVERT_SGIS
define|#
directive|define
name|GL_SAMPLE_MASK_INVERT_SGIS
value|0x80AB
DECL|macro|GL_SAMPLE_PATTERN_SGIS
define|#
directive|define
name|GL_SAMPLE_PATTERN_SGIS
value|0x80AC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_rescale_normal
DECL|macro|GL_RESCALE_NORMAL_EXT
define|#
directive|define
name|GL_RESCALE_NORMAL_EXT
value|0x803A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_array
DECL|macro|GL_VERTEX_ARRAY_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_EXT
value|0x8074
DECL|macro|GL_NORMAL_ARRAY_EXT
define|#
directive|define
name|GL_NORMAL_ARRAY_EXT
value|0x8075
DECL|macro|GL_COLOR_ARRAY_EXT
define|#
directive|define
name|GL_COLOR_ARRAY_EXT
value|0x8076
DECL|macro|GL_INDEX_ARRAY_EXT
define|#
directive|define
name|GL_INDEX_ARRAY_EXT
value|0x8077
DECL|macro|GL_TEXTURE_COORD_ARRAY_EXT
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_EXT
value|0x8078
DECL|macro|GL_EDGE_FLAG_ARRAY_EXT
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_EXT
value|0x8079
DECL|macro|GL_VERTEX_ARRAY_SIZE_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_SIZE_EXT
value|0x807A
DECL|macro|GL_VERTEX_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_TYPE_EXT
value|0x807B
DECL|macro|GL_VERTEX_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_STRIDE_EXT
value|0x807C
DECL|macro|GL_VERTEX_ARRAY_COUNT_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_COUNT_EXT
value|0x807D
DECL|macro|GL_NORMAL_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_NORMAL_ARRAY_TYPE_EXT
value|0x807E
DECL|macro|GL_NORMAL_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_NORMAL_ARRAY_STRIDE_EXT
value|0x807F
DECL|macro|GL_NORMAL_ARRAY_COUNT_EXT
define|#
directive|define
name|GL_NORMAL_ARRAY_COUNT_EXT
value|0x8080
DECL|macro|GL_COLOR_ARRAY_SIZE_EXT
define|#
directive|define
name|GL_COLOR_ARRAY_SIZE_EXT
value|0x8081
DECL|macro|GL_COLOR_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_COLOR_ARRAY_TYPE_EXT
value|0x8082
DECL|macro|GL_COLOR_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_COLOR_ARRAY_STRIDE_EXT
value|0x8083
DECL|macro|GL_COLOR_ARRAY_COUNT_EXT
define|#
directive|define
name|GL_COLOR_ARRAY_COUNT_EXT
value|0x8084
DECL|macro|GL_INDEX_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_INDEX_ARRAY_TYPE_EXT
value|0x8085
DECL|macro|GL_INDEX_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_INDEX_ARRAY_STRIDE_EXT
value|0x8086
DECL|macro|GL_INDEX_ARRAY_COUNT_EXT
define|#
directive|define
name|GL_INDEX_ARRAY_COUNT_EXT
value|0x8087
DECL|macro|GL_TEXTURE_COORD_ARRAY_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_SIZE_EXT
value|0x8088
DECL|macro|GL_TEXTURE_COORD_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_TYPE_EXT
value|0x8089
DECL|macro|GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
value|0x808A
DECL|macro|GL_TEXTURE_COORD_ARRAY_COUNT_EXT
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_COUNT_EXT
value|0x808B
DECL|macro|GL_EDGE_FLAG_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_STRIDE_EXT
value|0x808C
DECL|macro|GL_EDGE_FLAG_ARRAY_COUNT_EXT
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_COUNT_EXT
value|0x808D
DECL|macro|GL_VERTEX_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_VERTEX_ARRAY_POINTER_EXT
value|0x808E
DECL|macro|GL_NORMAL_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_NORMAL_ARRAY_POINTER_EXT
value|0x808F
DECL|macro|GL_COLOR_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_COLOR_ARRAY_POINTER_EXT
value|0x8090
DECL|macro|GL_INDEX_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_INDEX_ARRAY_POINTER_EXT
value|0x8091
DECL|macro|GL_TEXTURE_COORD_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_POINTER_EXT
value|0x8092
DECL|macro|GL_EDGE_FLAG_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_POINTER_EXT
value|0x8093
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_misc_attribute
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_generate_mipmap
DECL|macro|GL_GENERATE_MIPMAP_SGIS
define|#
directive|define
name|GL_GENERATE_MIPMAP_SGIS
value|0x8191
DECL|macro|GL_GENERATE_MIPMAP_HINT_SGIS
define|#
directive|define
name|GL_GENERATE_MIPMAP_HINT_SGIS
value|0x8192
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_clipmap
DECL|macro|GL_LINEAR_CLIPMAP_LINEAR_SGIX
define|#
directive|define
name|GL_LINEAR_CLIPMAP_LINEAR_SGIX
value|0x8170
DECL|macro|GL_TEXTURE_CLIPMAP_CENTER_SGIX
define|#
directive|define
name|GL_TEXTURE_CLIPMAP_CENTER_SGIX
value|0x8171
DECL|macro|GL_TEXTURE_CLIPMAP_FRAME_SGIX
define|#
directive|define
name|GL_TEXTURE_CLIPMAP_FRAME_SGIX
value|0x8172
DECL|macro|GL_TEXTURE_CLIPMAP_OFFSET_SGIX
define|#
directive|define
name|GL_TEXTURE_CLIPMAP_OFFSET_SGIX
value|0x8173
DECL|macro|GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
define|#
directive|define
name|GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
value|0x8174
DECL|macro|GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
define|#
directive|define
name|GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
value|0x8175
DECL|macro|GL_TEXTURE_CLIPMAP_DEPTH_SGIX
define|#
directive|define
name|GL_TEXTURE_CLIPMAP_DEPTH_SGIX
value|0x8176
DECL|macro|GL_MAX_CLIPMAP_DEPTH_SGIX
define|#
directive|define
name|GL_MAX_CLIPMAP_DEPTH_SGIX
value|0x8177
DECL|macro|GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
define|#
directive|define
name|GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
value|0x8178
DECL|macro|GL_NEAREST_CLIPMAP_NEAREST_SGIX
define|#
directive|define
name|GL_NEAREST_CLIPMAP_NEAREST_SGIX
value|0x844D
DECL|macro|GL_NEAREST_CLIPMAP_LINEAR_SGIX
define|#
directive|define
name|GL_NEAREST_CLIPMAP_LINEAR_SGIX
value|0x844E
DECL|macro|GL_LINEAR_CLIPMAP_NEAREST_SGIX
define|#
directive|define
name|GL_LINEAR_CLIPMAP_NEAREST_SGIX
value|0x844F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_shadow
DECL|macro|GL_TEXTURE_COMPARE_SGIX
define|#
directive|define
name|GL_TEXTURE_COMPARE_SGIX
value|0x819A
DECL|macro|GL_TEXTURE_COMPARE_OPERATOR_SGIX
define|#
directive|define
name|GL_TEXTURE_COMPARE_OPERATOR_SGIX
value|0x819B
DECL|macro|GL_TEXTURE_LEQUAL_R_SGIX
define|#
directive|define
name|GL_TEXTURE_LEQUAL_R_SGIX
value|0x819C
DECL|macro|GL_TEXTURE_GEQUAL_R_SGIX
define|#
directive|define
name|GL_TEXTURE_GEQUAL_R_SGIX
value|0x819D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_edge_clamp
DECL|macro|GL_CLAMP_TO_EDGE_SGIS
define|#
directive|define
name|GL_CLAMP_TO_EDGE_SGIS
value|0x812F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_border_clamp
DECL|macro|GL_CLAMP_TO_BORDER_SGIS
define|#
directive|define
name|GL_CLAMP_TO_BORDER_SGIS
value|0x812D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_minmax
DECL|macro|GL_FUNC_ADD_EXT
define|#
directive|define
name|GL_FUNC_ADD_EXT
value|0x8006
DECL|macro|GL_MIN_EXT
define|#
directive|define
name|GL_MIN_EXT
value|0x8007
DECL|macro|GL_MAX_EXT
define|#
directive|define
name|GL_MAX_EXT
value|0x8008
DECL|macro|GL_BLEND_EQUATION_EXT
define|#
directive|define
name|GL_BLEND_EQUATION_EXT
value|0x8009
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_subtract
DECL|macro|GL_FUNC_SUBTRACT_EXT
define|#
directive|define
name|GL_FUNC_SUBTRACT_EXT
value|0x800A
DECL|macro|GL_FUNC_REVERSE_SUBTRACT_EXT
define|#
directive|define
name|GL_FUNC_REVERSE_SUBTRACT_EXT
value|0x800B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_logic_op
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_interlace
DECL|macro|GL_INTERLACE_SGIX
define|#
directive|define
name|GL_INTERLACE_SGIX
value|0x8094
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_pixel_tiles
DECL|macro|GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
value|0x813E
DECL|macro|GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
value|0x813F
DECL|macro|GL_PIXEL_TILE_WIDTH_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_WIDTH_SGIX
value|0x8140
DECL|macro|GL_PIXEL_TILE_HEIGHT_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_HEIGHT_SGIX
value|0x8141
DECL|macro|GL_PIXEL_TILE_GRID_WIDTH_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_GRID_WIDTH_SGIX
value|0x8142
DECL|macro|GL_PIXEL_TILE_GRID_HEIGHT_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_GRID_HEIGHT_SGIX
value|0x8143
DECL|macro|GL_PIXEL_TILE_GRID_DEPTH_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_GRID_DEPTH_SGIX
value|0x8144
DECL|macro|GL_PIXEL_TILE_CACHE_SIZE_SGIX
define|#
directive|define
name|GL_PIXEL_TILE_CACHE_SIZE_SGIX
value|0x8145
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_select
DECL|macro|GL_DUAL_ALPHA4_SGIS
define|#
directive|define
name|GL_DUAL_ALPHA4_SGIS
value|0x8110
DECL|macro|GL_DUAL_ALPHA8_SGIS
define|#
directive|define
name|GL_DUAL_ALPHA8_SGIS
value|0x8111
DECL|macro|GL_DUAL_ALPHA12_SGIS
define|#
directive|define
name|GL_DUAL_ALPHA12_SGIS
value|0x8112
DECL|macro|GL_DUAL_ALPHA16_SGIS
define|#
directive|define
name|GL_DUAL_ALPHA16_SGIS
value|0x8113
DECL|macro|GL_DUAL_LUMINANCE4_SGIS
define|#
directive|define
name|GL_DUAL_LUMINANCE4_SGIS
value|0x8114
DECL|macro|GL_DUAL_LUMINANCE8_SGIS
define|#
directive|define
name|GL_DUAL_LUMINANCE8_SGIS
value|0x8115
DECL|macro|GL_DUAL_LUMINANCE12_SGIS
define|#
directive|define
name|GL_DUAL_LUMINANCE12_SGIS
value|0x8116
DECL|macro|GL_DUAL_LUMINANCE16_SGIS
define|#
directive|define
name|GL_DUAL_LUMINANCE16_SGIS
value|0x8117
DECL|macro|GL_DUAL_INTENSITY4_SGIS
define|#
directive|define
name|GL_DUAL_INTENSITY4_SGIS
value|0x8118
DECL|macro|GL_DUAL_INTENSITY8_SGIS
define|#
directive|define
name|GL_DUAL_INTENSITY8_SGIS
value|0x8119
DECL|macro|GL_DUAL_INTENSITY12_SGIS
define|#
directive|define
name|GL_DUAL_INTENSITY12_SGIS
value|0x811A
DECL|macro|GL_DUAL_INTENSITY16_SGIS
define|#
directive|define
name|GL_DUAL_INTENSITY16_SGIS
value|0x811B
DECL|macro|GL_DUAL_LUMINANCE_ALPHA4_SGIS
define|#
directive|define
name|GL_DUAL_LUMINANCE_ALPHA4_SGIS
value|0x811C
DECL|macro|GL_DUAL_LUMINANCE_ALPHA8_SGIS
define|#
directive|define
name|GL_DUAL_LUMINANCE_ALPHA8_SGIS
value|0x811D
DECL|macro|GL_QUAD_ALPHA4_SGIS
define|#
directive|define
name|GL_QUAD_ALPHA4_SGIS
value|0x811E
DECL|macro|GL_QUAD_ALPHA8_SGIS
define|#
directive|define
name|GL_QUAD_ALPHA8_SGIS
value|0x811F
DECL|macro|GL_QUAD_LUMINANCE4_SGIS
define|#
directive|define
name|GL_QUAD_LUMINANCE4_SGIS
value|0x8120
DECL|macro|GL_QUAD_LUMINANCE8_SGIS
define|#
directive|define
name|GL_QUAD_LUMINANCE8_SGIS
value|0x8121
DECL|macro|GL_QUAD_INTENSITY4_SGIS
define|#
directive|define
name|GL_QUAD_INTENSITY4_SGIS
value|0x8122
DECL|macro|GL_QUAD_INTENSITY8_SGIS
define|#
directive|define
name|GL_QUAD_INTENSITY8_SGIS
value|0x8123
DECL|macro|GL_DUAL_TEXTURE_SELECT_SGIS
define|#
directive|define
name|GL_DUAL_TEXTURE_SELECT_SGIS
value|0x8124
DECL|macro|GL_QUAD_TEXTURE_SELECT_SGIS
define|#
directive|define
name|GL_QUAD_TEXTURE_SELECT_SGIS
value|0x8125
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_sprite
DECL|macro|GL_SPRITE_SGIX
define|#
directive|define
name|GL_SPRITE_SGIX
value|0x8148
DECL|macro|GL_SPRITE_MODE_SGIX
define|#
directive|define
name|GL_SPRITE_MODE_SGIX
value|0x8149
DECL|macro|GL_SPRITE_AXIS_SGIX
define|#
directive|define
name|GL_SPRITE_AXIS_SGIX
value|0x814A
DECL|macro|GL_SPRITE_TRANSLATION_SGIX
define|#
directive|define
name|GL_SPRITE_TRANSLATION_SGIX
value|0x814B
DECL|macro|GL_SPRITE_AXIAL_SGIX
define|#
directive|define
name|GL_SPRITE_AXIAL_SGIX
value|0x814C
DECL|macro|GL_SPRITE_OBJECT_ALIGNED_SGIX
define|#
directive|define
name|GL_SPRITE_OBJECT_ALIGNED_SGIX
value|0x814D
DECL|macro|GL_SPRITE_EYE_ALIGNED_SGIX
define|#
directive|define
name|GL_SPRITE_EYE_ALIGNED_SGIX
value|0x814E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_multi_buffer
DECL|macro|GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
define|#
directive|define
name|GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
value|0x812E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_point_parameters
DECL|macro|GL_POINT_SIZE_MIN_EXT
define|#
directive|define
name|GL_POINT_SIZE_MIN_EXT
value|0x8126
DECL|macro|GL_POINT_SIZE_MAX_EXT
define|#
directive|define
name|GL_POINT_SIZE_MAX_EXT
value|0x8127
DECL|macro|GL_POINT_FADE_THRESHOLD_SIZE_EXT
define|#
directive|define
name|GL_POINT_FADE_THRESHOLD_SIZE_EXT
value|0x8128
DECL|macro|GL_DISTANCE_ATTENUATION_EXT
define|#
directive|define
name|GL_DISTANCE_ATTENUATION_EXT
value|0x8129
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_point_parameters
DECL|macro|GL_POINT_SIZE_MIN_SGIS
define|#
directive|define
name|GL_POINT_SIZE_MIN_SGIS
value|0x8126
DECL|macro|GL_POINT_SIZE_MAX_SGIS
define|#
directive|define
name|GL_POINT_SIZE_MAX_SGIS
value|0x8127
DECL|macro|GL_POINT_FADE_THRESHOLD_SIZE_SGIS
define|#
directive|define
name|GL_POINT_FADE_THRESHOLD_SIZE_SGIS
value|0x8128
DECL|macro|GL_DISTANCE_ATTENUATION_SGIS
define|#
directive|define
name|GL_DISTANCE_ATTENUATION_SGIS
value|0x8129
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_instruments
DECL|macro|GL_INSTRUMENT_BUFFER_POINTER_SGIX
define|#
directive|define
name|GL_INSTRUMENT_BUFFER_POINTER_SGIX
value|0x8180
DECL|macro|GL_INSTRUMENT_MEASUREMENTS_SGIX
define|#
directive|define
name|GL_INSTRUMENT_MEASUREMENTS_SGIX
value|0x8181
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_scale_bias
DECL|macro|GL_POST_TEXTURE_FILTER_BIAS_SGIX
define|#
directive|define
name|GL_POST_TEXTURE_FILTER_BIAS_SGIX
value|0x8179
DECL|macro|GL_POST_TEXTURE_FILTER_SCALE_SGIX
define|#
directive|define
name|GL_POST_TEXTURE_FILTER_SCALE_SGIX
value|0x817A
DECL|macro|GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
define|#
directive|define
name|GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
value|0x817B
DECL|macro|GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
define|#
directive|define
name|GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
value|0x817C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_framezoom
DECL|macro|GL_FRAMEZOOM_SGIX
define|#
directive|define
name|GL_FRAMEZOOM_SGIX
value|0x818B
DECL|macro|GL_FRAMEZOOM_FACTOR_SGIX
define|#
directive|define
name|GL_FRAMEZOOM_FACTOR_SGIX
value|0x818C
DECL|macro|GL_MAX_FRAMEZOOM_FACTOR_SGIX
define|#
directive|define
name|GL_MAX_FRAMEZOOM_FACTOR_SGIX
value|0x818D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_tag_sample_buffer
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_FfdMaskSGIX
DECL|macro|GL_TEXTURE_DEFORMATION_BIT_SGIX
define|#
directive|define
name|GL_TEXTURE_DEFORMATION_BIT_SGIX
value|0x00000001
DECL|macro|GL_GEOMETRY_DEFORMATION_BIT_SGIX
define|#
directive|define
name|GL_GEOMETRY_DEFORMATION_BIT_SGIX
value|0x00000002
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_polynomial_ffd
DECL|macro|GL_GEOMETRY_DEFORMATION_SGIX
define|#
directive|define
name|GL_GEOMETRY_DEFORMATION_SGIX
value|0x8194
DECL|macro|GL_TEXTURE_DEFORMATION_SGIX
define|#
directive|define
name|GL_TEXTURE_DEFORMATION_SGIX
value|0x8195
DECL|macro|GL_DEFORMATIONS_MASK_SGIX
define|#
directive|define
name|GL_DEFORMATIONS_MASK_SGIX
value|0x8196
DECL|macro|GL_MAX_DEFORMATION_ORDER_SGIX
define|#
directive|define
name|GL_MAX_DEFORMATION_ORDER_SGIX
value|0x8197
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_reference_plane
DECL|macro|GL_REFERENCE_PLANE_SGIX
define|#
directive|define
name|GL_REFERENCE_PLANE_SGIX
value|0x817D
DECL|macro|GL_REFERENCE_PLANE_EQUATION_SGIX
define|#
directive|define
name|GL_REFERENCE_PLANE_EQUATION_SGIX
value|0x817E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_flush_raster
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_depth_texture
DECL|macro|GL_DEPTH_COMPONENT16_SGIX
define|#
directive|define
name|GL_DEPTH_COMPONENT16_SGIX
value|0x81A5
DECL|macro|GL_DEPTH_COMPONENT24_SGIX
define|#
directive|define
name|GL_DEPTH_COMPONENT24_SGIX
value|0x81A6
DECL|macro|GL_DEPTH_COMPONENT32_SGIX
define|#
directive|define
name|GL_DEPTH_COMPONENT32_SGIX
value|0x81A7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_fog_function
DECL|macro|GL_FOG_FUNC_SGIS
define|#
directive|define
name|GL_FOG_FUNC_SGIS
value|0x812A
DECL|macro|GL_FOG_FUNC_POINTS_SGIS
define|#
directive|define
name|GL_FOG_FUNC_POINTS_SGIS
value|0x812B
DECL|macro|GL_MAX_FOG_FUNC_POINTS_SGIS
define|#
directive|define
name|GL_MAX_FOG_FUNC_POINTS_SGIS
value|0x812C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_fog_offset
DECL|macro|GL_FOG_OFFSET_SGIX
define|#
directive|define
name|GL_FOG_OFFSET_SGIX
value|0x8198
DECL|macro|GL_FOG_OFFSET_VALUE_SGIX
define|#
directive|define
name|GL_FOG_OFFSET_VALUE_SGIX
value|0x8199
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_image_transform
DECL|macro|GL_IMAGE_SCALE_X_HP
define|#
directive|define
name|GL_IMAGE_SCALE_X_HP
value|0x8155
DECL|macro|GL_IMAGE_SCALE_Y_HP
define|#
directive|define
name|GL_IMAGE_SCALE_Y_HP
value|0x8156
DECL|macro|GL_IMAGE_TRANSLATE_X_HP
define|#
directive|define
name|GL_IMAGE_TRANSLATE_X_HP
value|0x8157
DECL|macro|GL_IMAGE_TRANSLATE_Y_HP
define|#
directive|define
name|GL_IMAGE_TRANSLATE_Y_HP
value|0x8158
DECL|macro|GL_IMAGE_ROTATE_ANGLE_HP
define|#
directive|define
name|GL_IMAGE_ROTATE_ANGLE_HP
value|0x8159
DECL|macro|GL_IMAGE_ROTATE_ORIGIN_X_HP
define|#
directive|define
name|GL_IMAGE_ROTATE_ORIGIN_X_HP
value|0x815A
DECL|macro|GL_IMAGE_ROTATE_ORIGIN_Y_HP
define|#
directive|define
name|GL_IMAGE_ROTATE_ORIGIN_Y_HP
value|0x815B
DECL|macro|GL_IMAGE_MAG_FILTER_HP
define|#
directive|define
name|GL_IMAGE_MAG_FILTER_HP
value|0x815C
DECL|macro|GL_IMAGE_MIN_FILTER_HP
define|#
directive|define
name|GL_IMAGE_MIN_FILTER_HP
value|0x815D
DECL|macro|GL_IMAGE_CUBIC_WEIGHT_HP
define|#
directive|define
name|GL_IMAGE_CUBIC_WEIGHT_HP
value|0x815E
DECL|macro|GL_CUBIC_HP
define|#
directive|define
name|GL_CUBIC_HP
value|0x815F
DECL|macro|GL_AVERAGE_HP
define|#
directive|define
name|GL_AVERAGE_HP
value|0x8160
DECL|macro|GL_IMAGE_TRANSFORM_2D_HP
define|#
directive|define
name|GL_IMAGE_TRANSFORM_2D_HP
value|0x8161
DECL|macro|GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
define|#
directive|define
name|GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
value|0x8162
DECL|macro|GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
define|#
directive|define
name|GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
value|0x8163
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_convolution_border_modes
DECL|macro|GL_IGNORE_BORDER_HP
define|#
directive|define
name|GL_IGNORE_BORDER_HP
value|0x8150
DECL|macro|GL_CONSTANT_BORDER_HP
define|#
directive|define
name|GL_CONSTANT_BORDER_HP
value|0x8151
DECL|macro|GL_REPLICATE_BORDER_HP
define|#
directive|define
name|GL_REPLICATE_BORDER_HP
value|0x8153
DECL|macro|GL_CONVOLUTION_BORDER_COLOR_HP
define|#
directive|define
name|GL_CONVOLUTION_BORDER_COLOR_HP
value|0x8154
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INGR_palette_buffer
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_add_env
DECL|macro|GL_TEXTURE_ENV_BIAS_SGIX
define|#
directive|define
name|GL_TEXTURE_ENV_BIAS_SGIX
value|0x80BE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_color_subtable
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PGI_vertex_hints
DECL|macro|GL_VERTEX_DATA_HINT_PGI
define|#
directive|define
name|GL_VERTEX_DATA_HINT_PGI
value|0x1A22A
DECL|macro|GL_VERTEX_CONSISTENT_HINT_PGI
define|#
directive|define
name|GL_VERTEX_CONSISTENT_HINT_PGI
value|0x1A22B
DECL|macro|GL_MATERIAL_SIDE_HINT_PGI
define|#
directive|define
name|GL_MATERIAL_SIDE_HINT_PGI
value|0x1A22C
DECL|macro|GL_MAX_VERTEX_HINT_PGI
define|#
directive|define
name|GL_MAX_VERTEX_HINT_PGI
value|0x1A22D
DECL|macro|GL_COLOR3_BIT_PGI
define|#
directive|define
name|GL_COLOR3_BIT_PGI
value|0x00010000
DECL|macro|GL_COLOR4_BIT_PGI
define|#
directive|define
name|GL_COLOR4_BIT_PGI
value|0x00020000
DECL|macro|GL_EDGEFLAG_BIT_PGI
define|#
directive|define
name|GL_EDGEFLAG_BIT_PGI
value|0x00040000
DECL|macro|GL_INDEX_BIT_PGI
define|#
directive|define
name|GL_INDEX_BIT_PGI
value|0x00080000
DECL|macro|GL_MAT_AMBIENT_BIT_PGI
define|#
directive|define
name|GL_MAT_AMBIENT_BIT_PGI
value|0x00100000
DECL|macro|GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
define|#
directive|define
name|GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
value|0x00200000
DECL|macro|GL_MAT_DIFFUSE_BIT_PGI
define|#
directive|define
name|GL_MAT_DIFFUSE_BIT_PGI
value|0x00400000
DECL|macro|GL_MAT_EMISSION_BIT_PGI
define|#
directive|define
name|GL_MAT_EMISSION_BIT_PGI
value|0x00800000
DECL|macro|GL_MAT_COLOR_INDEXES_BIT_PGI
define|#
directive|define
name|GL_MAT_COLOR_INDEXES_BIT_PGI
value|0x01000000
DECL|macro|GL_MAT_SHININESS_BIT_PGI
define|#
directive|define
name|GL_MAT_SHININESS_BIT_PGI
value|0x02000000
DECL|macro|GL_MAT_SPECULAR_BIT_PGI
define|#
directive|define
name|GL_MAT_SPECULAR_BIT_PGI
value|0x04000000
DECL|macro|GL_NORMAL_BIT_PGI
define|#
directive|define
name|GL_NORMAL_BIT_PGI
value|0x08000000
DECL|macro|GL_TEXCOORD1_BIT_PGI
define|#
directive|define
name|GL_TEXCOORD1_BIT_PGI
value|0x10000000
DECL|macro|GL_TEXCOORD2_BIT_PGI
define|#
directive|define
name|GL_TEXCOORD2_BIT_PGI
value|0x20000000
DECL|macro|GL_TEXCOORD3_BIT_PGI
define|#
directive|define
name|GL_TEXCOORD3_BIT_PGI
value|0x40000000
DECL|macro|GL_TEXCOORD4_BIT_PGI
define|#
directive|define
name|GL_TEXCOORD4_BIT_PGI
value|0x80000000
DECL|macro|GL_VERTEX23_BIT_PGI
define|#
directive|define
name|GL_VERTEX23_BIT_PGI
value|0x00000004
DECL|macro|GL_VERTEX4_BIT_PGI
define|#
directive|define
name|GL_VERTEX4_BIT_PGI
value|0x00000008
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PGI_misc_hints
DECL|macro|GL_PREFER_DOUBLEBUFFER_HINT_PGI
define|#
directive|define
name|GL_PREFER_DOUBLEBUFFER_HINT_PGI
value|0x1A1F8
DECL|macro|GL_CONSERVE_MEMORY_HINT_PGI
define|#
directive|define
name|GL_CONSERVE_MEMORY_HINT_PGI
value|0x1A1FD
DECL|macro|GL_RECLAIM_MEMORY_HINT_PGI
define|#
directive|define
name|GL_RECLAIM_MEMORY_HINT_PGI
value|0x1A1FE
DECL|macro|GL_NATIVE_GRAPHICS_HANDLE_PGI
define|#
directive|define
name|GL_NATIVE_GRAPHICS_HANDLE_PGI
value|0x1A202
DECL|macro|GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
define|#
directive|define
name|GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
value|0x1A203
DECL|macro|GL_NATIVE_GRAPHICS_END_HINT_PGI
define|#
directive|define
name|GL_NATIVE_GRAPHICS_END_HINT_PGI
value|0x1A204
DECL|macro|GL_ALWAYS_FAST_HINT_PGI
define|#
directive|define
name|GL_ALWAYS_FAST_HINT_PGI
value|0x1A20C
DECL|macro|GL_ALWAYS_SOFT_HINT_PGI
define|#
directive|define
name|GL_ALWAYS_SOFT_HINT_PGI
value|0x1A20D
DECL|macro|GL_ALLOW_DRAW_OBJ_HINT_PGI
define|#
directive|define
name|GL_ALLOW_DRAW_OBJ_HINT_PGI
value|0x1A20E
DECL|macro|GL_ALLOW_DRAW_WIN_HINT_PGI
define|#
directive|define
name|GL_ALLOW_DRAW_WIN_HINT_PGI
value|0x1A20F
DECL|macro|GL_ALLOW_DRAW_FRG_HINT_PGI
define|#
directive|define
name|GL_ALLOW_DRAW_FRG_HINT_PGI
value|0x1A210
DECL|macro|GL_ALLOW_DRAW_MEM_HINT_PGI
define|#
directive|define
name|GL_ALLOW_DRAW_MEM_HINT_PGI
value|0x1A211
DECL|macro|GL_STRICT_DEPTHFUNC_HINT_PGI
define|#
directive|define
name|GL_STRICT_DEPTHFUNC_HINT_PGI
value|0x1A216
DECL|macro|GL_STRICT_LIGHTING_HINT_PGI
define|#
directive|define
name|GL_STRICT_LIGHTING_HINT_PGI
value|0x1A217
DECL|macro|GL_STRICT_SCISSOR_HINT_PGI
define|#
directive|define
name|GL_STRICT_SCISSOR_HINT_PGI
value|0x1A218
DECL|macro|GL_FULL_STIPPLE_HINT_PGI
define|#
directive|define
name|GL_FULL_STIPPLE_HINT_PGI
value|0x1A219
DECL|macro|GL_CLIP_NEAR_HINT_PGI
define|#
directive|define
name|GL_CLIP_NEAR_HINT_PGI
value|0x1A220
DECL|macro|GL_CLIP_FAR_HINT_PGI
define|#
directive|define
name|GL_CLIP_FAR_HINT_PGI
value|0x1A221
DECL|macro|GL_WIDE_LINE_HINT_PGI
define|#
directive|define
name|GL_WIDE_LINE_HINT_PGI
value|0x1A222
DECL|macro|GL_BACK_NORMALS_HINT_PGI
define|#
directive|define
name|GL_BACK_NORMALS_HINT_PGI
value|0x1A223
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_paletted_texture
DECL|macro|GL_COLOR_INDEX1_EXT
define|#
directive|define
name|GL_COLOR_INDEX1_EXT
value|0x80E2
DECL|macro|GL_COLOR_INDEX2_EXT
define|#
directive|define
name|GL_COLOR_INDEX2_EXT
value|0x80E3
DECL|macro|GL_COLOR_INDEX4_EXT
define|#
directive|define
name|GL_COLOR_INDEX4_EXT
value|0x80E4
DECL|macro|GL_COLOR_INDEX8_EXT
define|#
directive|define
name|GL_COLOR_INDEX8_EXT
value|0x80E5
DECL|macro|GL_COLOR_INDEX12_EXT
define|#
directive|define
name|GL_COLOR_INDEX12_EXT
value|0x80E6
DECL|macro|GL_COLOR_INDEX16_EXT
define|#
directive|define
name|GL_COLOR_INDEX16_EXT
value|0x80E7
DECL|macro|GL_TEXTURE_INDEX_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_INDEX_SIZE_EXT
value|0x80ED
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_clip_volume_hint
DECL|macro|GL_CLIP_VOLUME_CLIPPING_HINT_EXT
define|#
directive|define
name|GL_CLIP_VOLUME_CLIPPING_HINT_EXT
value|0x80F0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_list_priority
DECL|macro|GL_LIST_PRIORITY_SGIX
define|#
directive|define
name|GL_LIST_PRIORITY_SGIX
value|0x8182
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ir_instrument1
DECL|macro|GL_IR_INSTRUMENT1_SGIX
define|#
directive|define
name|GL_IR_INSTRUMENT1_SGIX
value|0x817F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_calligraphic_fragment
DECL|macro|GL_CALLIGRAPHIC_FRAGMENT_SGIX
define|#
directive|define
name|GL_CALLIGRAPHIC_FRAGMENT_SGIX
value|0x8183
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_lod_bias
DECL|macro|GL_TEXTURE_LOD_BIAS_S_SGIX
define|#
directive|define
name|GL_TEXTURE_LOD_BIAS_S_SGIX
value|0x818E
DECL|macro|GL_TEXTURE_LOD_BIAS_T_SGIX
define|#
directive|define
name|GL_TEXTURE_LOD_BIAS_T_SGIX
value|0x818F
DECL|macro|GL_TEXTURE_LOD_BIAS_R_SGIX
define|#
directive|define
name|GL_TEXTURE_LOD_BIAS_R_SGIX
value|0x8190
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_shadow_ambient
DECL|macro|GL_SHADOW_AMBIENT_SGIX
define|#
directive|define
name|GL_SHADOW_AMBIENT_SGIX
value|0x80BF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_texture
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_material
DECL|macro|GL_INDEX_MATERIAL_EXT
define|#
directive|define
name|GL_INDEX_MATERIAL_EXT
value|0x81B8
DECL|macro|GL_INDEX_MATERIAL_PARAMETER_EXT
define|#
directive|define
name|GL_INDEX_MATERIAL_PARAMETER_EXT
value|0x81B9
DECL|macro|GL_INDEX_MATERIAL_FACE_EXT
define|#
directive|define
name|GL_INDEX_MATERIAL_FACE_EXT
value|0x81BA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_func
DECL|macro|GL_INDEX_TEST_EXT
define|#
directive|define
name|GL_INDEX_TEST_EXT
value|0x81B5
DECL|macro|GL_INDEX_TEST_FUNC_EXT
define|#
directive|define
name|GL_INDEX_TEST_FUNC_EXT
value|0x81B6
DECL|macro|GL_INDEX_TEST_REF_EXT
define|#
directive|define
name|GL_INDEX_TEST_REF_EXT
value|0x81B7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_array_formats
DECL|macro|GL_IUI_V2F_EXT
define|#
directive|define
name|GL_IUI_V2F_EXT
value|0x81AD
DECL|macro|GL_IUI_V3F_EXT
define|#
directive|define
name|GL_IUI_V3F_EXT
value|0x81AE
DECL|macro|GL_IUI_N3F_V2F_EXT
define|#
directive|define
name|GL_IUI_N3F_V2F_EXT
value|0x81AF
DECL|macro|GL_IUI_N3F_V3F_EXT
define|#
directive|define
name|GL_IUI_N3F_V3F_EXT
value|0x81B0
DECL|macro|GL_T2F_IUI_V2F_EXT
define|#
directive|define
name|GL_T2F_IUI_V2F_EXT
value|0x81B1
DECL|macro|GL_T2F_IUI_V3F_EXT
define|#
directive|define
name|GL_T2F_IUI_V3F_EXT
value|0x81B2
DECL|macro|GL_T2F_IUI_N3F_V2F_EXT
define|#
directive|define
name|GL_T2F_IUI_N3F_V2F_EXT
value|0x81B3
DECL|macro|GL_T2F_IUI_N3F_V3F_EXT
define|#
directive|define
name|GL_T2F_IUI_N3F_V3F_EXT
value|0x81B4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_compiled_vertex_array
DECL|macro|GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
define|#
directive|define
name|GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
value|0x81A8
DECL|macro|GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
define|#
directive|define
name|GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
value|0x81A9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_cull_vertex
DECL|macro|GL_CULL_VERTEX_EXT
define|#
directive|define
name|GL_CULL_VERTEX_EXT
value|0x81AA
DECL|macro|GL_CULL_VERTEX_EYE_POSITION_EXT
define|#
directive|define
name|GL_CULL_VERTEX_EYE_POSITION_EXT
value|0x81AB
DECL|macro|GL_CULL_VERTEX_OBJECT_POSITION_EXT
define|#
directive|define
name|GL_CULL_VERTEX_OBJECT_POSITION_EXT
value|0x81AC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ycrcb
DECL|macro|GL_YCRCB_422_SGIX
define|#
directive|define
name|GL_YCRCB_422_SGIX
value|0x81BB
DECL|macro|GL_YCRCB_444_SGIX
define|#
directive|define
name|GL_YCRCB_444_SGIX
value|0x81BC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_fragment_lighting
DECL|macro|GL_FRAGMENT_LIGHTING_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHTING_SGIX
value|0x8400
DECL|macro|GL_FRAGMENT_COLOR_MATERIAL_SGIX
define|#
directive|define
name|GL_FRAGMENT_COLOR_MATERIAL_SGIX
value|0x8401
DECL|macro|GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
define|#
directive|define
name|GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
value|0x8402
DECL|macro|GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
define|#
directive|define
name|GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
value|0x8403
DECL|macro|GL_MAX_FRAGMENT_LIGHTS_SGIX
define|#
directive|define
name|GL_MAX_FRAGMENT_LIGHTS_SGIX
value|0x8404
DECL|macro|GL_MAX_ACTIVE_LIGHTS_SGIX
define|#
directive|define
name|GL_MAX_ACTIVE_LIGHTS_SGIX
value|0x8405
DECL|macro|GL_CURRENT_RASTER_NORMAL_SGIX
define|#
directive|define
name|GL_CURRENT_RASTER_NORMAL_SGIX
value|0x8406
DECL|macro|GL_LIGHT_ENV_MODE_SGIX
define|#
directive|define
name|GL_LIGHT_ENV_MODE_SGIX
value|0x8407
DECL|macro|GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
value|0x8408
DECL|macro|GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
value|0x8409
DECL|macro|GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
value|0x840A
DECL|macro|GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
value|0x840B
DECL|macro|GL_FRAGMENT_LIGHT0_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT0_SGIX
value|0x840C
DECL|macro|GL_FRAGMENT_LIGHT1_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT1_SGIX
value|0x840D
DECL|macro|GL_FRAGMENT_LIGHT2_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT2_SGIX
value|0x840E
DECL|macro|GL_FRAGMENT_LIGHT3_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT3_SGIX
value|0x840F
DECL|macro|GL_FRAGMENT_LIGHT4_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT4_SGIX
value|0x8410
DECL|macro|GL_FRAGMENT_LIGHT5_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT5_SGIX
value|0x8411
DECL|macro|GL_FRAGMENT_LIGHT6_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT6_SGIX
value|0x8412
DECL|macro|GL_FRAGMENT_LIGHT7_SGIX
define|#
directive|define
name|GL_FRAGMENT_LIGHT7_SGIX
value|0x8413
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_rasterpos_clip
DECL|macro|GL_RASTER_POSITION_UNCLIPPED_IBM
define|#
directive|define
name|GL_RASTER_POSITION_UNCLIPPED_IBM
value|0x19262
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_texture_lighting
DECL|macro|GL_TEXTURE_LIGHTING_MODE_HP
define|#
directive|define
name|GL_TEXTURE_LIGHTING_MODE_HP
value|0x8167
DECL|macro|GL_TEXTURE_POST_SPECULAR_HP
define|#
directive|define
name|GL_TEXTURE_POST_SPECULAR_HP
value|0x8168
DECL|macro|GL_TEXTURE_PRE_SPECULAR_HP
define|#
directive|define
name|GL_TEXTURE_PRE_SPECULAR_HP
value|0x8169
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_draw_range_elements
DECL|macro|GL_MAX_ELEMENTS_VERTICES_EXT
define|#
directive|define
name|GL_MAX_ELEMENTS_VERTICES_EXT
value|0x80E8
DECL|macro|GL_MAX_ELEMENTS_INDICES_EXT
define|#
directive|define
name|GL_MAX_ELEMENTS_INDICES_EXT
value|0x80E9
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_WIN_phong_shading
DECL|macro|GL_PHONG_WIN
define|#
directive|define
name|GL_PHONG_WIN
value|0x80EA
DECL|macro|GL_PHONG_HINT_WIN
define|#
directive|define
name|GL_PHONG_HINT_WIN
value|0x80EB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_WIN_specular_fog
DECL|macro|GL_FOG_SPECULAR_TEXTURE_WIN
define|#
directive|define
name|GL_FOG_SPECULAR_TEXTURE_WIN
value|0x80EC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_light_texture
DECL|macro|GL_FRAGMENT_MATERIAL_EXT
define|#
directive|define
name|GL_FRAGMENT_MATERIAL_EXT
value|0x8349
DECL|macro|GL_FRAGMENT_NORMAL_EXT
define|#
directive|define
name|GL_FRAGMENT_NORMAL_EXT
value|0x834A
DECL|macro|GL_FRAGMENT_COLOR_EXT
define|#
directive|define
name|GL_FRAGMENT_COLOR_EXT
value|0x834C
DECL|macro|GL_ATTENUATION_EXT
define|#
directive|define
name|GL_ATTENUATION_EXT
value|0x834D
DECL|macro|GL_SHADOW_ATTENUATION_EXT
define|#
directive|define
name|GL_SHADOW_ATTENUATION_EXT
value|0x834E
DECL|macro|GL_TEXTURE_APPLICATION_MODE_EXT
define|#
directive|define
name|GL_TEXTURE_APPLICATION_MODE_EXT
value|0x834F
DECL|macro|GL_TEXTURE_LIGHT_EXT
define|#
directive|define
name|GL_TEXTURE_LIGHT_EXT
value|0x8350
DECL|macro|GL_TEXTURE_MATERIAL_FACE_EXT
define|#
directive|define
name|GL_TEXTURE_MATERIAL_FACE_EXT
value|0x8351
DECL|macro|GL_TEXTURE_MATERIAL_PARAMETER_EXT
define|#
directive|define
name|GL_TEXTURE_MATERIAL_PARAMETER_EXT
value|0x8352
comment|/* reuse GL_FRAGMENT_DEPTH_EXT */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_blend_alpha_minmax
DECL|macro|GL_ALPHA_MIN_SGIX
define|#
directive|define
name|GL_ALPHA_MIN_SGIX
value|0x8320
DECL|macro|GL_ALPHA_MAX_SGIX
define|#
directive|define
name|GL_ALPHA_MAX_SGIX
value|0x8321
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_impact_pixel_texture
DECL|macro|GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
value|0x8184
DECL|macro|GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
value|0x8185
DECL|macro|GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
value|0x8186
DECL|macro|GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
value|0x8187
DECL|macro|GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
value|0x8188
DECL|macro|GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
value|0x8189
DECL|macro|GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
define|#
directive|define
name|GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
value|0x818A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_bgra
DECL|macro|GL_BGR_EXT
define|#
directive|define
name|GL_BGR_EXT
value|0x80E0
DECL|macro|GL_BGRA_EXT
define|#
directive|define
name|GL_BGRA_EXT
value|0x80E1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_async
DECL|macro|GL_ASYNC_MARKER_SGIX
define|#
directive|define
name|GL_ASYNC_MARKER_SGIX
value|0x8329
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_async_pixel
DECL|macro|GL_ASYNC_TEX_IMAGE_SGIX
define|#
directive|define
name|GL_ASYNC_TEX_IMAGE_SGIX
value|0x835C
DECL|macro|GL_ASYNC_DRAW_PIXELS_SGIX
define|#
directive|define
name|GL_ASYNC_DRAW_PIXELS_SGIX
value|0x835D
DECL|macro|GL_ASYNC_READ_PIXELS_SGIX
define|#
directive|define
name|GL_ASYNC_READ_PIXELS_SGIX
value|0x835E
DECL|macro|GL_MAX_ASYNC_TEX_IMAGE_SGIX
define|#
directive|define
name|GL_MAX_ASYNC_TEX_IMAGE_SGIX
value|0x835F
DECL|macro|GL_MAX_ASYNC_DRAW_PIXELS_SGIX
define|#
directive|define
name|GL_MAX_ASYNC_DRAW_PIXELS_SGIX
value|0x8360
DECL|macro|GL_MAX_ASYNC_READ_PIXELS_SGIX
define|#
directive|define
name|GL_MAX_ASYNC_READ_PIXELS_SGIX
value|0x8361
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_async_histogram
DECL|macro|GL_ASYNC_HISTOGRAM_SGIX
define|#
directive|define
name|GL_ASYNC_HISTOGRAM_SGIX
value|0x832C
DECL|macro|GL_MAX_ASYNC_HISTOGRAM_SGIX
define|#
directive|define
name|GL_MAX_ASYNC_HISTOGRAM_SGIX
value|0x832D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INTEL_texture_scissor
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INTEL_parallel_arrays
DECL|macro|GL_PARALLEL_ARRAYS_INTEL
define|#
directive|define
name|GL_PARALLEL_ARRAYS_INTEL
value|0x83F4
DECL|macro|GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
define|#
directive|define
name|GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
value|0x83F5
DECL|macro|GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
define|#
directive|define
name|GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
value|0x83F6
DECL|macro|GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
define|#
directive|define
name|GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
value|0x83F7
DECL|macro|GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
value|0x83F8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_occlusion_test
DECL|macro|GL_OCCLUSION_TEST_HP
define|#
directive|define
name|GL_OCCLUSION_TEST_HP
value|0x8165
DECL|macro|GL_OCCLUSION_TEST_RESULT_HP
define|#
directive|define
name|GL_OCCLUSION_TEST_RESULT_HP
value|0x8166
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_pixel_transform
DECL|macro|GL_PIXEL_TRANSFORM_2D_EXT
define|#
directive|define
name|GL_PIXEL_TRANSFORM_2D_EXT
value|0x8330
DECL|macro|GL_PIXEL_MAG_FILTER_EXT
define|#
directive|define
name|GL_PIXEL_MAG_FILTER_EXT
value|0x8331
DECL|macro|GL_PIXEL_MIN_FILTER_EXT
define|#
directive|define
name|GL_PIXEL_MIN_FILTER_EXT
value|0x8332
DECL|macro|GL_PIXEL_CUBIC_WEIGHT_EXT
define|#
directive|define
name|GL_PIXEL_CUBIC_WEIGHT_EXT
value|0x8333
DECL|macro|GL_CUBIC_EXT
define|#
directive|define
name|GL_CUBIC_EXT
value|0x8334
DECL|macro|GL_AVERAGE_EXT
define|#
directive|define
name|GL_AVERAGE_EXT
value|0x8335
DECL|macro|GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
define|#
directive|define
name|GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
value|0x8336
DECL|macro|GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
define|#
directive|define
name|GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
value|0x8337
DECL|macro|GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
define|#
directive|define
name|GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
value|0x8338
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_pixel_transform_color_table
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_shared_texture_palette
DECL|macro|GL_SHARED_TEXTURE_PALETTE_EXT
define|#
directive|define
name|GL_SHARED_TEXTURE_PALETTE_EXT
value|0x81FB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_separate_specular_color
DECL|macro|GL_LIGHT_MODEL_COLOR_CONTROL_EXT
define|#
directive|define
name|GL_LIGHT_MODEL_COLOR_CONTROL_EXT
value|0x81F8
DECL|macro|GL_SINGLE_COLOR_EXT
define|#
directive|define
name|GL_SINGLE_COLOR_EXT
value|0x81F9
DECL|macro|GL_SEPARATE_SPECULAR_COLOR_EXT
define|#
directive|define
name|GL_SEPARATE_SPECULAR_COLOR_EXT
value|0x81FA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_secondary_color
DECL|macro|GL_COLOR_SUM_EXT
define|#
directive|define
name|GL_COLOR_SUM_EXT
value|0x8458
DECL|macro|GL_CURRENT_SECONDARY_COLOR_EXT
define|#
directive|define
name|GL_CURRENT_SECONDARY_COLOR_EXT
value|0x8459
DECL|macro|GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
value|0x845A
DECL|macro|GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
value|0x845B
DECL|macro|GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
value|0x845C
DECL|macro|GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
value|0x845D
DECL|macro|GL_SECONDARY_COLOR_ARRAY_EXT
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_EXT
value|0x845E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_perturb_normal
DECL|macro|GL_PERTURB_EXT
define|#
directive|define
name|GL_PERTURB_EXT
value|0x85AE
DECL|macro|GL_TEXTURE_NORMAL_EXT
define|#
directive|define
name|GL_TEXTURE_NORMAL_EXT
value|0x85AF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_multi_draw_arrays
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_fog_coord
DECL|macro|GL_FOG_COORDINATE_SOURCE_EXT
define|#
directive|define
name|GL_FOG_COORDINATE_SOURCE_EXT
value|0x8450
DECL|macro|GL_FOG_COORDINATE_EXT
define|#
directive|define
name|GL_FOG_COORDINATE_EXT
value|0x8451
DECL|macro|GL_FRAGMENT_DEPTH_EXT
define|#
directive|define
name|GL_FRAGMENT_DEPTH_EXT
value|0x8452
DECL|macro|GL_CURRENT_FOG_COORDINATE_EXT
define|#
directive|define
name|GL_CURRENT_FOG_COORDINATE_EXT
value|0x8453
DECL|macro|GL_FOG_COORDINATE_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_TYPE_EXT
value|0x8454
DECL|macro|GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
value|0x8455
DECL|macro|GL_FOG_COORDINATE_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_POINTER_EXT
value|0x8456
DECL|macro|GL_FOG_COORDINATE_ARRAY_EXT
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_EXT
value|0x8457
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_REND_screen_coordinates
DECL|macro|GL_SCREEN_COORDINATES_REND
define|#
directive|define
name|GL_SCREEN_COORDINATES_REND
value|0x8490
DECL|macro|GL_INVERTED_SCREEN_W_REND
define|#
directive|define
name|GL_INVERTED_SCREEN_W_REND
value|0x8491
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_coordinate_frame
DECL|macro|GL_TANGENT_ARRAY_EXT
define|#
directive|define
name|GL_TANGENT_ARRAY_EXT
value|0x8439
DECL|macro|GL_BINORMAL_ARRAY_EXT
define|#
directive|define
name|GL_BINORMAL_ARRAY_EXT
value|0x843A
DECL|macro|GL_CURRENT_TANGENT_EXT
define|#
directive|define
name|GL_CURRENT_TANGENT_EXT
value|0x843B
DECL|macro|GL_CURRENT_BINORMAL_EXT
define|#
directive|define
name|GL_CURRENT_BINORMAL_EXT
value|0x843C
DECL|macro|GL_TANGENT_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_TANGENT_ARRAY_TYPE_EXT
value|0x843E
DECL|macro|GL_TANGENT_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_TANGENT_ARRAY_STRIDE_EXT
value|0x843F
DECL|macro|GL_BINORMAL_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_BINORMAL_ARRAY_TYPE_EXT
value|0x8440
DECL|macro|GL_BINORMAL_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_BINORMAL_ARRAY_STRIDE_EXT
value|0x8441
DECL|macro|GL_TANGENT_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_TANGENT_ARRAY_POINTER_EXT
value|0x8442
DECL|macro|GL_BINORMAL_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_BINORMAL_ARRAY_POINTER_EXT
value|0x8443
DECL|macro|GL_MAP1_TANGENT_EXT
define|#
directive|define
name|GL_MAP1_TANGENT_EXT
value|0x8444
DECL|macro|GL_MAP2_TANGENT_EXT
define|#
directive|define
name|GL_MAP2_TANGENT_EXT
value|0x8445
DECL|macro|GL_MAP1_BINORMAL_EXT
define|#
directive|define
name|GL_MAP1_BINORMAL_EXT
value|0x8446
DECL|macro|GL_MAP2_BINORMAL_EXT
define|#
directive|define
name|GL_MAP2_BINORMAL_EXT
value|0x8447
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_env_combine
DECL|macro|GL_COMBINE_EXT
define|#
directive|define
name|GL_COMBINE_EXT
value|0x8570
DECL|macro|GL_COMBINE_RGB_EXT
define|#
directive|define
name|GL_COMBINE_RGB_EXT
value|0x8571
DECL|macro|GL_COMBINE_ALPHA_EXT
define|#
directive|define
name|GL_COMBINE_ALPHA_EXT
value|0x8572
DECL|macro|GL_RGB_SCALE_EXT
define|#
directive|define
name|GL_RGB_SCALE_EXT
value|0x8573
DECL|macro|GL_ADD_SIGNED_EXT
define|#
directive|define
name|GL_ADD_SIGNED_EXT
value|0x8574
DECL|macro|GL_INTERPOLATE_EXT
define|#
directive|define
name|GL_INTERPOLATE_EXT
value|0x8575
DECL|macro|GL_CONSTANT_EXT
define|#
directive|define
name|GL_CONSTANT_EXT
value|0x8576
DECL|macro|GL_PRIMARY_COLOR_EXT
define|#
directive|define
name|GL_PRIMARY_COLOR_EXT
value|0x8577
DECL|macro|GL_PREVIOUS_EXT
define|#
directive|define
name|GL_PREVIOUS_EXT
value|0x8578
DECL|macro|GL_SOURCE0_RGB_EXT
define|#
directive|define
name|GL_SOURCE0_RGB_EXT
value|0x8580
DECL|macro|GL_SOURCE1_RGB_EXT
define|#
directive|define
name|GL_SOURCE1_RGB_EXT
value|0x8581
DECL|macro|GL_SOURCE2_RGB_EXT
define|#
directive|define
name|GL_SOURCE2_RGB_EXT
value|0x8582
DECL|macro|GL_SOURCE0_ALPHA_EXT
define|#
directive|define
name|GL_SOURCE0_ALPHA_EXT
value|0x8588
DECL|macro|GL_SOURCE1_ALPHA_EXT
define|#
directive|define
name|GL_SOURCE1_ALPHA_EXT
value|0x8589
DECL|macro|GL_SOURCE2_ALPHA_EXT
define|#
directive|define
name|GL_SOURCE2_ALPHA_EXT
value|0x858A
DECL|macro|GL_OPERAND0_RGB_EXT
define|#
directive|define
name|GL_OPERAND0_RGB_EXT
value|0x8590
DECL|macro|GL_OPERAND1_RGB_EXT
define|#
directive|define
name|GL_OPERAND1_RGB_EXT
value|0x8591
DECL|macro|GL_OPERAND2_RGB_EXT
define|#
directive|define
name|GL_OPERAND2_RGB_EXT
value|0x8592
DECL|macro|GL_OPERAND0_ALPHA_EXT
define|#
directive|define
name|GL_OPERAND0_ALPHA_EXT
value|0x8598
DECL|macro|GL_OPERAND1_ALPHA_EXT
define|#
directive|define
name|GL_OPERAND1_ALPHA_EXT
value|0x8599
DECL|macro|GL_OPERAND2_ALPHA_EXT
define|#
directive|define
name|GL_OPERAND2_ALPHA_EXT
value|0x859A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_specular_vector
DECL|macro|GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
define|#
directive|define
name|GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
value|0x85B0
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_transform_hint
DECL|macro|GL_TRANSFORM_HINT_APPLE
define|#
directive|define
name|GL_TRANSFORM_HINT_APPLE
value|0x85B1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_fog_scale
DECL|macro|GL_FOG_SCALE_SGIX
define|#
directive|define
name|GL_FOG_SCALE_SGIX
value|0x81FC
DECL|macro|GL_FOG_SCALE_VALUE_SGIX
define|#
directive|define
name|GL_FOG_SCALE_VALUE_SGIX
value|0x81FD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUNX_constant_data
DECL|macro|GL_UNPACK_CONSTANT_DATA_SUNX
define|#
directive|define
name|GL_UNPACK_CONSTANT_DATA_SUNX
value|0x81D5
DECL|macro|GL_TEXTURE_CONSTANT_DATA_SUNX
define|#
directive|define
name|GL_TEXTURE_CONSTANT_DATA_SUNX
value|0x81D6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_global_alpha
DECL|macro|GL_GLOBAL_ALPHA_SUN
define|#
directive|define
name|GL_GLOBAL_ALPHA_SUN
value|0x81D9
DECL|macro|GL_GLOBAL_ALPHA_FACTOR_SUN
define|#
directive|define
name|GL_GLOBAL_ALPHA_FACTOR_SUN
value|0x81DA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_triangle_list
DECL|macro|GL_RESTART_SUN
define|#
directive|define
name|GL_RESTART_SUN
value|0x0001
DECL|macro|GL_REPLACE_MIDDLE_SUN
define|#
directive|define
name|GL_REPLACE_MIDDLE_SUN
value|0x0002
DECL|macro|GL_REPLACE_OLDEST_SUN
define|#
directive|define
name|GL_REPLACE_OLDEST_SUN
value|0x0003
DECL|macro|GL_TRIANGLE_LIST_SUN
define|#
directive|define
name|GL_TRIANGLE_LIST_SUN
value|0x81D7
DECL|macro|GL_REPLACEMENT_CODE_SUN
define|#
directive|define
name|GL_REPLACEMENT_CODE_SUN
value|0x81D8
DECL|macro|GL_REPLACEMENT_CODE_ARRAY_SUN
define|#
directive|define
name|GL_REPLACEMENT_CODE_ARRAY_SUN
value|0x85C0
DECL|macro|GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
define|#
directive|define
name|GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
value|0x85C1
DECL|macro|GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
define|#
directive|define
name|GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
value|0x85C2
DECL|macro|GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
define|#
directive|define
name|GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
value|0x85C3
DECL|macro|GL_R1UI_V3F_SUN
define|#
directive|define
name|GL_R1UI_V3F_SUN
value|0x85C4
DECL|macro|GL_R1UI_C4UB_V3F_SUN
define|#
directive|define
name|GL_R1UI_C4UB_V3F_SUN
value|0x85C5
DECL|macro|GL_R1UI_C3F_V3F_SUN
define|#
directive|define
name|GL_R1UI_C3F_V3F_SUN
value|0x85C6
DECL|macro|GL_R1UI_N3F_V3F_SUN
define|#
directive|define
name|GL_R1UI_N3F_V3F_SUN
value|0x85C7
DECL|macro|GL_R1UI_C4F_N3F_V3F_SUN
define|#
directive|define
name|GL_R1UI_C4F_N3F_V3F_SUN
value|0x85C8
DECL|macro|GL_R1UI_T2F_V3F_SUN
define|#
directive|define
name|GL_R1UI_T2F_V3F_SUN
value|0x85C9
DECL|macro|GL_R1UI_T2F_N3F_V3F_SUN
define|#
directive|define
name|GL_R1UI_T2F_N3F_V3F_SUN
value|0x85CA
DECL|macro|GL_R1UI_T2F_C4F_N3F_V3F_SUN
define|#
directive|define
name|GL_R1UI_T2F_C4F_N3F_V3F_SUN
value|0x85CB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_vertex
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_func_separate
DECL|macro|GL_BLEND_DST_RGB_EXT
define|#
directive|define
name|GL_BLEND_DST_RGB_EXT
value|0x80C8
DECL|macro|GL_BLEND_SRC_RGB_EXT
define|#
directive|define
name|GL_BLEND_SRC_RGB_EXT
value|0x80C9
DECL|macro|GL_BLEND_DST_ALPHA_EXT
define|#
directive|define
name|GL_BLEND_DST_ALPHA_EXT
value|0x80CA
DECL|macro|GL_BLEND_SRC_ALPHA_EXT
define|#
directive|define
name|GL_BLEND_SRC_ALPHA_EXT
value|0x80CB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INGR_color_clamp
DECL|macro|GL_RED_MIN_CLAMP_INGR
define|#
directive|define
name|GL_RED_MIN_CLAMP_INGR
value|0x8560
DECL|macro|GL_GREEN_MIN_CLAMP_INGR
define|#
directive|define
name|GL_GREEN_MIN_CLAMP_INGR
value|0x8561
DECL|macro|GL_BLUE_MIN_CLAMP_INGR
define|#
directive|define
name|GL_BLUE_MIN_CLAMP_INGR
value|0x8562
DECL|macro|GL_ALPHA_MIN_CLAMP_INGR
define|#
directive|define
name|GL_ALPHA_MIN_CLAMP_INGR
value|0x8563
DECL|macro|GL_RED_MAX_CLAMP_INGR
define|#
directive|define
name|GL_RED_MAX_CLAMP_INGR
value|0x8564
DECL|macro|GL_GREEN_MAX_CLAMP_INGR
define|#
directive|define
name|GL_GREEN_MAX_CLAMP_INGR
value|0x8565
DECL|macro|GL_BLUE_MAX_CLAMP_INGR
define|#
directive|define
name|GL_BLUE_MAX_CLAMP_INGR
value|0x8566
DECL|macro|GL_ALPHA_MAX_CLAMP_INGR
define|#
directive|define
name|GL_ALPHA_MAX_CLAMP_INGR
value|0x8567
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INGR_interlace_read
DECL|macro|GL_INTERLACE_READ_INGR
define|#
directive|define
name|GL_INTERLACE_READ_INGR
value|0x8568
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_stencil_wrap
DECL|macro|GL_INCR_WRAP_EXT
define|#
directive|define
name|GL_INCR_WRAP_EXT
value|0x8507
DECL|macro|GL_DECR_WRAP_EXT
define|#
directive|define
name|GL_DECR_WRAP_EXT
value|0x8508
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_422_pixels
DECL|macro|GL_422_EXT
define|#
directive|define
name|GL_422_EXT
value|0x80CC
DECL|macro|GL_422_REV_EXT
define|#
directive|define
name|GL_422_REV_EXT
value|0x80CD
DECL|macro|GL_422_AVERAGE_EXT
define|#
directive|define
name|GL_422_AVERAGE_EXT
value|0x80CE
DECL|macro|GL_422_REV_AVERAGE_EXT
define|#
directive|define
name|GL_422_REV_AVERAGE_EXT
value|0x80CF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texgen_reflection
DECL|macro|GL_NORMAL_MAP_NV
define|#
directive|define
name|GL_NORMAL_MAP_NV
value|0x8511
DECL|macro|GL_REFLECTION_MAP_NV
define|#
directive|define
name|GL_REFLECTION_MAP_NV
value|0x8512
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_cube_map
DECL|macro|GL_NORMAL_MAP_EXT
define|#
directive|define
name|GL_NORMAL_MAP_EXT
value|0x8511
DECL|macro|GL_REFLECTION_MAP_EXT
define|#
directive|define
name|GL_REFLECTION_MAP_EXT
value|0x8512
DECL|macro|GL_TEXTURE_CUBE_MAP_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_EXT
value|0x8513
DECL|macro|GL_TEXTURE_BINDING_CUBE_MAP_EXT
define|#
directive|define
name|GL_TEXTURE_BINDING_CUBE_MAP_EXT
value|0x8514
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
value|0x8515
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
value|0x8516
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
value|0x8517
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
value|0x8518
DECL|macro|GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
value|0x8519
DECL|macro|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
define|#
directive|define
name|GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
value|0x851A
DECL|macro|GL_PROXY_TEXTURE_CUBE_MAP_EXT
define|#
directive|define
name|GL_PROXY_TEXTURE_CUBE_MAP_EXT
value|0x851B
DECL|macro|GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
define|#
directive|define
name|GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
value|0x851C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_convolution_border_modes
DECL|macro|GL_WRAP_BORDER_SUN
define|#
directive|define
name|GL_WRAP_BORDER_SUN
value|0x81D4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_env_add
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_lod_bias
DECL|macro|GL_MAX_TEXTURE_LOD_BIAS_EXT
define|#
directive|define
name|GL_MAX_TEXTURE_LOD_BIAS_EXT
value|0x84FD
DECL|macro|GL_TEXTURE_FILTER_CONTROL_EXT
define|#
directive|define
name|GL_TEXTURE_FILTER_CONTROL_EXT
value|0x8500
DECL|macro|GL_TEXTURE_LOD_BIAS_EXT
define|#
directive|define
name|GL_TEXTURE_LOD_BIAS_EXT
value|0x8501
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_filter_anisotropic
DECL|macro|GL_TEXTURE_MAX_ANISOTROPY_EXT
define|#
directive|define
name|GL_TEXTURE_MAX_ANISOTROPY_EXT
value|0x84FE
DECL|macro|GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
define|#
directive|define
name|GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
value|0x84FF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_weighting
DECL|macro|GL_MODELVIEW0_STACK_DEPTH_EXT
define|#
directive|define
name|GL_MODELVIEW0_STACK_DEPTH_EXT
value|GL_MODELVIEW_STACK_DEPTH
DECL|macro|GL_MODELVIEW1_STACK_DEPTH_EXT
define|#
directive|define
name|GL_MODELVIEW1_STACK_DEPTH_EXT
value|0x8502
DECL|macro|GL_MODELVIEW0_MATRIX_EXT
define|#
directive|define
name|GL_MODELVIEW0_MATRIX_EXT
value|GL_MODELVIEW_MATRIX
DECL|macro|GL_MODELVIEW1_MATRIX_EXT
define|#
directive|define
name|GL_MODELVIEW1_MATRIX_EXT
value|0x8506
DECL|macro|GL_VERTEX_WEIGHTING_EXT
define|#
directive|define
name|GL_VERTEX_WEIGHTING_EXT
value|0x8509
DECL|macro|GL_MODELVIEW0_EXT
define|#
directive|define
name|GL_MODELVIEW0_EXT
value|GL_MODELVIEW
DECL|macro|GL_MODELVIEW1_EXT
define|#
directive|define
name|GL_MODELVIEW1_EXT
value|0x850A
DECL|macro|GL_CURRENT_VERTEX_WEIGHT_EXT
define|#
directive|define
name|GL_CURRENT_VERTEX_WEIGHT_EXT
value|0x850B
DECL|macro|GL_VERTEX_WEIGHT_ARRAY_EXT
define|#
directive|define
name|GL_VERTEX_WEIGHT_ARRAY_EXT
value|0x850C
DECL|macro|GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
define|#
directive|define
name|GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
value|0x850D
DECL|macro|GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
value|0x850E
DECL|macro|GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
value|0x850F
DECL|macro|GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
value|0x8510
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_light_max_exponent
DECL|macro|GL_MAX_SHININESS_NV
define|#
directive|define
name|GL_MAX_SHININESS_NV
value|0x8504
DECL|macro|GL_MAX_SPOT_EXPONENT_NV
define|#
directive|define
name|GL_MAX_SPOT_EXPONENT_NV
value|0x8505
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_array_range
DECL|macro|GL_VERTEX_ARRAY_RANGE_NV
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_NV
value|0x851D
DECL|macro|GL_VERTEX_ARRAY_RANGE_LENGTH_NV
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_LENGTH_NV
value|0x851E
DECL|macro|GL_VERTEX_ARRAY_RANGE_VALID_NV
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_VALID_NV
value|0x851F
DECL|macro|GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
define|#
directive|define
name|GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
value|0x8520
DECL|macro|GL_VERTEX_ARRAY_RANGE_POINTER_NV
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_POINTER_NV
value|0x8521
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_register_combiners
DECL|macro|GL_REGISTER_COMBINERS_NV
define|#
directive|define
name|GL_REGISTER_COMBINERS_NV
value|0x8522
DECL|macro|GL_VARIABLE_A_NV
define|#
directive|define
name|GL_VARIABLE_A_NV
value|0x8523
DECL|macro|GL_VARIABLE_B_NV
define|#
directive|define
name|GL_VARIABLE_B_NV
value|0x8524
DECL|macro|GL_VARIABLE_C_NV
define|#
directive|define
name|GL_VARIABLE_C_NV
value|0x8525
DECL|macro|GL_VARIABLE_D_NV
define|#
directive|define
name|GL_VARIABLE_D_NV
value|0x8526
DECL|macro|GL_VARIABLE_E_NV
define|#
directive|define
name|GL_VARIABLE_E_NV
value|0x8527
DECL|macro|GL_VARIABLE_F_NV
define|#
directive|define
name|GL_VARIABLE_F_NV
value|0x8528
DECL|macro|GL_VARIABLE_G_NV
define|#
directive|define
name|GL_VARIABLE_G_NV
value|0x8529
DECL|macro|GL_CONSTANT_COLOR0_NV
define|#
directive|define
name|GL_CONSTANT_COLOR0_NV
value|0x852A
DECL|macro|GL_CONSTANT_COLOR1_NV
define|#
directive|define
name|GL_CONSTANT_COLOR1_NV
value|0x852B
DECL|macro|GL_PRIMARY_COLOR_NV
define|#
directive|define
name|GL_PRIMARY_COLOR_NV
value|0x852C
DECL|macro|GL_SECONDARY_COLOR_NV
define|#
directive|define
name|GL_SECONDARY_COLOR_NV
value|0x852D
DECL|macro|GL_SPARE0_NV
define|#
directive|define
name|GL_SPARE0_NV
value|0x852E
DECL|macro|GL_SPARE1_NV
define|#
directive|define
name|GL_SPARE1_NV
value|0x852F
DECL|macro|GL_DISCARD_NV
define|#
directive|define
name|GL_DISCARD_NV
value|0x8530
DECL|macro|GL_E_TIMES_F_NV
define|#
directive|define
name|GL_E_TIMES_F_NV
value|0x8531
DECL|macro|GL_SPARE0_PLUS_SECONDARY_COLOR_NV
define|#
directive|define
name|GL_SPARE0_PLUS_SECONDARY_COLOR_NV
value|0x8532
DECL|macro|GL_UNSIGNED_IDENTITY_NV
define|#
directive|define
name|GL_UNSIGNED_IDENTITY_NV
value|0x8536
DECL|macro|GL_UNSIGNED_INVERT_NV
define|#
directive|define
name|GL_UNSIGNED_INVERT_NV
value|0x8537
DECL|macro|GL_EXPAND_NORMAL_NV
define|#
directive|define
name|GL_EXPAND_NORMAL_NV
value|0x8538
DECL|macro|GL_EXPAND_NEGATE_NV
define|#
directive|define
name|GL_EXPAND_NEGATE_NV
value|0x8539
DECL|macro|GL_HALF_BIAS_NORMAL_NV
define|#
directive|define
name|GL_HALF_BIAS_NORMAL_NV
value|0x853A
DECL|macro|GL_HALF_BIAS_NEGATE_NV
define|#
directive|define
name|GL_HALF_BIAS_NEGATE_NV
value|0x853B
DECL|macro|GL_SIGNED_IDENTITY_NV
define|#
directive|define
name|GL_SIGNED_IDENTITY_NV
value|0x853C
DECL|macro|GL_SIGNED_NEGATE_NV
define|#
directive|define
name|GL_SIGNED_NEGATE_NV
value|0x853D
DECL|macro|GL_SCALE_BY_TWO_NV
define|#
directive|define
name|GL_SCALE_BY_TWO_NV
value|0x853E
DECL|macro|GL_SCALE_BY_FOUR_NV
define|#
directive|define
name|GL_SCALE_BY_FOUR_NV
value|0x853F
DECL|macro|GL_SCALE_BY_ONE_HALF_NV
define|#
directive|define
name|GL_SCALE_BY_ONE_HALF_NV
value|0x8540
DECL|macro|GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
define|#
directive|define
name|GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
value|0x8541
DECL|macro|GL_COMBINER_INPUT_NV
define|#
directive|define
name|GL_COMBINER_INPUT_NV
value|0x8542
DECL|macro|GL_COMBINER_MAPPING_NV
define|#
directive|define
name|GL_COMBINER_MAPPING_NV
value|0x8543
DECL|macro|GL_COMBINER_COMPONENT_USAGE_NV
define|#
directive|define
name|GL_COMBINER_COMPONENT_USAGE_NV
value|0x8544
DECL|macro|GL_COMBINER_AB_DOT_PRODUCT_NV
define|#
directive|define
name|GL_COMBINER_AB_DOT_PRODUCT_NV
value|0x8545
DECL|macro|GL_COMBINER_CD_DOT_PRODUCT_NV
define|#
directive|define
name|GL_COMBINER_CD_DOT_PRODUCT_NV
value|0x8546
DECL|macro|GL_COMBINER_MUX_SUM_NV
define|#
directive|define
name|GL_COMBINER_MUX_SUM_NV
value|0x8547
DECL|macro|GL_COMBINER_SCALE_NV
define|#
directive|define
name|GL_COMBINER_SCALE_NV
value|0x8548
DECL|macro|GL_COMBINER_BIAS_NV
define|#
directive|define
name|GL_COMBINER_BIAS_NV
value|0x8549
DECL|macro|GL_COMBINER_AB_OUTPUT_NV
define|#
directive|define
name|GL_COMBINER_AB_OUTPUT_NV
value|0x854A
DECL|macro|GL_COMBINER_CD_OUTPUT_NV
define|#
directive|define
name|GL_COMBINER_CD_OUTPUT_NV
value|0x854B
DECL|macro|GL_COMBINER_SUM_OUTPUT_NV
define|#
directive|define
name|GL_COMBINER_SUM_OUTPUT_NV
value|0x854C
DECL|macro|GL_MAX_GENERAL_COMBINERS_NV
define|#
directive|define
name|GL_MAX_GENERAL_COMBINERS_NV
value|0x854D
DECL|macro|GL_NUM_GENERAL_COMBINERS_NV
define|#
directive|define
name|GL_NUM_GENERAL_COMBINERS_NV
value|0x854E
DECL|macro|GL_COLOR_SUM_CLAMP_NV
define|#
directive|define
name|GL_COLOR_SUM_CLAMP_NV
value|0x854F
DECL|macro|GL_COMBINER0_NV
define|#
directive|define
name|GL_COMBINER0_NV
value|0x8550
DECL|macro|GL_COMBINER1_NV
define|#
directive|define
name|GL_COMBINER1_NV
value|0x8551
DECL|macro|GL_COMBINER2_NV
define|#
directive|define
name|GL_COMBINER2_NV
value|0x8552
DECL|macro|GL_COMBINER3_NV
define|#
directive|define
name|GL_COMBINER3_NV
value|0x8553
DECL|macro|GL_COMBINER4_NV
define|#
directive|define
name|GL_COMBINER4_NV
value|0x8554
DECL|macro|GL_COMBINER5_NV
define|#
directive|define
name|GL_COMBINER5_NV
value|0x8555
DECL|macro|GL_COMBINER6_NV
define|#
directive|define
name|GL_COMBINER6_NV
value|0x8556
DECL|macro|GL_COMBINER7_NV
define|#
directive|define
name|GL_COMBINER7_NV
value|0x8557
comment|/* reuse GL_TEXTURE0_ARB */
comment|/* reuse GL_TEXTURE1_ARB */
comment|/* reuse GL_ZERO */
comment|/* reuse GL_NONE */
comment|/* reuse GL_FOG */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fog_distance
DECL|macro|GL_FOG_DISTANCE_MODE_NV
define|#
directive|define
name|GL_FOG_DISTANCE_MODE_NV
value|0x855A
DECL|macro|GL_EYE_RADIAL_NV
define|#
directive|define
name|GL_EYE_RADIAL_NV
value|0x855B
DECL|macro|GL_EYE_PLANE_ABSOLUTE_NV
define|#
directive|define
name|GL_EYE_PLANE_ABSOLUTE_NV
value|0x855C
comment|/* reuse GL_EYE_PLANE */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texgen_emboss
DECL|macro|GL_EMBOSS_LIGHT_NV
define|#
directive|define
name|GL_EMBOSS_LIGHT_NV
value|0x855D
DECL|macro|GL_EMBOSS_CONSTANT_NV
define|#
directive|define
name|GL_EMBOSS_CONSTANT_NV
value|0x855E
DECL|macro|GL_EMBOSS_MAP_NV
define|#
directive|define
name|GL_EMBOSS_MAP_NV
value|0x855F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_blend_square
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_env_combine4
DECL|macro|GL_COMBINE4_NV
define|#
directive|define
name|GL_COMBINE4_NV
value|0x8503
DECL|macro|GL_SOURCE3_RGB_NV
define|#
directive|define
name|GL_SOURCE3_RGB_NV
value|0x8583
DECL|macro|GL_SOURCE3_ALPHA_NV
define|#
directive|define
name|GL_SOURCE3_ALPHA_NV
value|0x858B
DECL|macro|GL_OPERAND3_RGB_NV
define|#
directive|define
name|GL_OPERAND3_RGB_NV
value|0x8593
DECL|macro|GL_OPERAND3_ALPHA_NV
define|#
directive|define
name|GL_OPERAND3_ALPHA_NV
value|0x859B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_resize_buffers
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_window_pos
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_s3tc
DECL|macro|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_RGB_S3TC_DXT1_EXT
value|0x83F0
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
value|0x83F1
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
value|0x83F2
DECL|macro|GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
define|#
directive|define
name|GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
value|0x83F3
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_cull_vertex
DECL|macro|GL_CULL_VERTEX_IBM
define|#
directive|define
name|GL_CULL_VERTEX_IBM
value|103050
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_multimode_draw_arrays
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_vertex_array_lists
DECL|macro|GL_VERTEX_ARRAY_LIST_IBM
define|#
directive|define
name|GL_VERTEX_ARRAY_LIST_IBM
value|103070
DECL|macro|GL_NORMAL_ARRAY_LIST_IBM
define|#
directive|define
name|GL_NORMAL_ARRAY_LIST_IBM
value|103071
DECL|macro|GL_COLOR_ARRAY_LIST_IBM
define|#
directive|define
name|GL_COLOR_ARRAY_LIST_IBM
value|103072
DECL|macro|GL_INDEX_ARRAY_LIST_IBM
define|#
directive|define
name|GL_INDEX_ARRAY_LIST_IBM
value|103073
DECL|macro|GL_TEXTURE_COORD_ARRAY_LIST_IBM
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_LIST_IBM
value|103074
DECL|macro|GL_EDGE_FLAG_ARRAY_LIST_IBM
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_LIST_IBM
value|103075
DECL|macro|GL_FOG_COORDINATE_ARRAY_LIST_IBM
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_LIST_IBM
value|103076
DECL|macro|GL_SECONDARY_COLOR_ARRAY_LIST_IBM
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_LIST_IBM
value|103077
DECL|macro|GL_VERTEX_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_VERTEX_ARRAY_LIST_STRIDE_IBM
value|103080
DECL|macro|GL_NORMAL_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_NORMAL_ARRAY_LIST_STRIDE_IBM
value|103081
DECL|macro|GL_COLOR_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_COLOR_ARRAY_LIST_STRIDE_IBM
value|103082
DECL|macro|GL_INDEX_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_INDEX_ARRAY_LIST_STRIDE_IBM
value|103083
DECL|macro|GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
value|103084
DECL|macro|GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
value|103085
DECL|macro|GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
value|103086
DECL|macro|GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
value|103087
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_subsample
DECL|macro|GL_PACK_SUBSAMPLE_RATE_SGIX
define|#
directive|define
name|GL_PACK_SUBSAMPLE_RATE_SGIX
value|0x85A0
DECL|macro|GL_UNPACK_SUBSAMPLE_RATE_SGIX
define|#
directive|define
name|GL_UNPACK_SUBSAMPLE_RATE_SGIX
value|0x85A1
DECL|macro|GL_PIXEL_SUBSAMPLE_4444_SGIX
define|#
directive|define
name|GL_PIXEL_SUBSAMPLE_4444_SGIX
value|0x85A2
DECL|macro|GL_PIXEL_SUBSAMPLE_2424_SGIX
define|#
directive|define
name|GL_PIXEL_SUBSAMPLE_2424_SGIX
value|0x85A3
DECL|macro|GL_PIXEL_SUBSAMPLE_4242_SGIX
define|#
directive|define
name|GL_PIXEL_SUBSAMPLE_4242_SGIX
value|0x85A4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ycrcb_subsample
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ycrcba
DECL|macro|GL_YCRCB_SGIX
define|#
directive|define
name|GL_YCRCB_SGIX
value|0x8318
DECL|macro|GL_YCRCBA_SGIX
define|#
directive|define
name|GL_YCRCBA_SGIX
value|0x8319
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGI_depth_pass_instrument
DECL|macro|GL_DEPTH_PASS_INSTRUMENT_SGIX
define|#
directive|define
name|GL_DEPTH_PASS_INSTRUMENT_SGIX
value|0x8310
DECL|macro|GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
define|#
directive|define
name|GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
value|0x8311
DECL|macro|GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
define|#
directive|define
name|GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
value|0x8312
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_3DFX_texture_compression_FXT1
DECL|macro|GL_COMPRESSED_RGB_FXT1_3DFX
define|#
directive|define
name|GL_COMPRESSED_RGB_FXT1_3DFX
value|0x86B0
DECL|macro|GL_COMPRESSED_RGBA_FXT1_3DFX
define|#
directive|define
name|GL_COMPRESSED_RGBA_FXT1_3DFX
value|0x86B1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_3DFX_multisample
DECL|macro|GL_MULTISAMPLE_3DFX
define|#
directive|define
name|GL_MULTISAMPLE_3DFX
value|0x86B2
DECL|macro|GL_SAMPLE_BUFFERS_3DFX
define|#
directive|define
name|GL_SAMPLE_BUFFERS_3DFX
value|0x86B3
DECL|macro|GL_SAMPLES_3DFX
define|#
directive|define
name|GL_SAMPLES_3DFX
value|0x86B4
DECL|macro|GL_MULTISAMPLE_BIT_3DFX
define|#
directive|define
name|GL_MULTISAMPLE_BIT_3DFX
value|0x20000000
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_3DFX_tbuffer
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_multisample
DECL|macro|GL_MULTISAMPLE_EXT
define|#
directive|define
name|GL_MULTISAMPLE_EXT
value|0x809D
DECL|macro|GL_SAMPLE_ALPHA_TO_MASK_EXT
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_MASK_EXT
value|0x809E
DECL|macro|GL_SAMPLE_ALPHA_TO_ONE_EXT
define|#
directive|define
name|GL_SAMPLE_ALPHA_TO_ONE_EXT
value|0x809F
DECL|macro|GL_SAMPLE_MASK_EXT
define|#
directive|define
name|GL_SAMPLE_MASK_EXT
value|0x80A0
DECL|macro|GL_1PASS_EXT
define|#
directive|define
name|GL_1PASS_EXT
value|0x80A1
DECL|macro|GL_2PASS_0_EXT
define|#
directive|define
name|GL_2PASS_0_EXT
value|0x80A2
DECL|macro|GL_2PASS_1_EXT
define|#
directive|define
name|GL_2PASS_1_EXT
value|0x80A3
DECL|macro|GL_4PASS_0_EXT
define|#
directive|define
name|GL_4PASS_0_EXT
value|0x80A4
DECL|macro|GL_4PASS_1_EXT
define|#
directive|define
name|GL_4PASS_1_EXT
value|0x80A5
DECL|macro|GL_4PASS_2_EXT
define|#
directive|define
name|GL_4PASS_2_EXT
value|0x80A6
DECL|macro|GL_4PASS_3_EXT
define|#
directive|define
name|GL_4PASS_3_EXT
value|0x80A7
DECL|macro|GL_SAMPLE_BUFFERS_EXT
define|#
directive|define
name|GL_SAMPLE_BUFFERS_EXT
value|0x80A8
DECL|macro|GL_SAMPLES_EXT
define|#
directive|define
name|GL_SAMPLES_EXT
value|0x80A9
DECL|macro|GL_SAMPLE_MASK_VALUE_EXT
define|#
directive|define
name|GL_SAMPLE_MASK_VALUE_EXT
value|0x80AA
DECL|macro|GL_SAMPLE_MASK_INVERT_EXT
define|#
directive|define
name|GL_SAMPLE_MASK_INVERT_EXT
value|0x80AB
DECL|macro|GL_SAMPLE_PATTERN_EXT
define|#
directive|define
name|GL_SAMPLE_PATTERN_EXT
value|0x80AC
DECL|macro|GL_MULTISAMPLE_BIT_EXT
define|#
directive|define
name|GL_MULTISAMPLE_BIT_EXT
value|0x20000000
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_vertex_preclip
DECL|macro|GL_VERTEX_PRECLIP_SGIX
define|#
directive|define
name|GL_VERTEX_PRECLIP_SGIX
value|0x83EE
DECL|macro|GL_VERTEX_PRECLIP_HINT_SGIX
define|#
directive|define
name|GL_VERTEX_PRECLIP_HINT_SGIX
value|0x83EF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_convolution_accuracy
DECL|macro|GL_CONVOLUTION_HINT_SGIX
define|#
directive|define
name|GL_CONVOLUTION_HINT_SGIX
value|0x8316
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_resample
DECL|macro|GL_PACK_RESAMPLE_SGIX
define|#
directive|define
name|GL_PACK_RESAMPLE_SGIX
value|0x842C
DECL|macro|GL_UNPACK_RESAMPLE_SGIX
define|#
directive|define
name|GL_UNPACK_RESAMPLE_SGIX
value|0x842D
DECL|macro|GL_RESAMPLE_REPLICATE_SGIX
define|#
directive|define
name|GL_RESAMPLE_REPLICATE_SGIX
value|0x842E
DECL|macro|GL_RESAMPLE_ZERO_FILL_SGIX
define|#
directive|define
name|GL_RESAMPLE_ZERO_FILL_SGIX
value|0x842F
DECL|macro|GL_RESAMPLE_DECIMATE_SGIX
define|#
directive|define
name|GL_RESAMPLE_DECIMATE_SGIX
value|0x8430
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_point_line_texgen
DECL|macro|GL_EYE_DISTANCE_TO_POINT_SGIS
define|#
directive|define
name|GL_EYE_DISTANCE_TO_POINT_SGIS
value|0x81F0
DECL|macro|GL_OBJECT_DISTANCE_TO_POINT_SGIS
define|#
directive|define
name|GL_OBJECT_DISTANCE_TO_POINT_SGIS
value|0x81F1
DECL|macro|GL_EYE_DISTANCE_TO_LINE_SGIS
define|#
directive|define
name|GL_EYE_DISTANCE_TO_LINE_SGIS
value|0x81F2
DECL|macro|GL_OBJECT_DISTANCE_TO_LINE_SGIS
define|#
directive|define
name|GL_OBJECT_DISTANCE_TO_LINE_SGIS
value|0x81F3
DECL|macro|GL_EYE_POINT_SGIS
define|#
directive|define
name|GL_EYE_POINT_SGIS
value|0x81F4
DECL|macro|GL_OBJECT_POINT_SGIS
define|#
directive|define
name|GL_OBJECT_POINT_SGIS
value|0x81F5
DECL|macro|GL_EYE_LINE_SGIS
define|#
directive|define
name|GL_EYE_LINE_SGIS
value|0x81F6
DECL|macro|GL_OBJECT_LINE_SGIS
define|#
directive|define
name|GL_OBJECT_LINE_SGIS
value|0x81F7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_color_mask
DECL|macro|GL_TEXTURE_COLOR_WRITEMASK_SGIS
define|#
directive|define
name|GL_TEXTURE_COLOR_WRITEMASK_SGIS
value|0x81EF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_env_dot3
DECL|macro|GL_DOT3_RGB_EXT
define|#
directive|define
name|GL_DOT3_RGB_EXT
value|0x8740
DECL|macro|GL_DOT3_RGBA_EXT
define|#
directive|define
name|GL_DOT3_RGBA_EXT
value|0x8741
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_texture_mirror_once
DECL|macro|GL_MIRROR_CLAMP_ATI
define|#
directive|define
name|GL_MIRROR_CLAMP_ATI
value|0x8742
DECL|macro|GL_MIRROR_CLAMP_TO_EDGE_ATI
define|#
directive|define
name|GL_MIRROR_CLAMP_TO_EDGE_ATI
value|0x8743
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fence
DECL|macro|GL_ALL_COMPLETED_NV
define|#
directive|define
name|GL_ALL_COMPLETED_NV
value|0x84F2
DECL|macro|GL_FENCE_STATUS_NV
define|#
directive|define
name|GL_FENCE_STATUS_NV
value|0x84F3
DECL|macro|GL_FENCE_CONDITION_NV
define|#
directive|define
name|GL_FENCE_CONDITION_NV
value|0x84F4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_texture_mirrored_repeat
DECL|macro|GL_MIRRORED_REPEAT_IBM
define|#
directive|define
name|GL_MIRRORED_REPEAT_IBM
value|0x8370
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_evaluators
DECL|macro|GL_EVAL_2D_NV
define|#
directive|define
name|GL_EVAL_2D_NV
value|0x86C0
DECL|macro|GL_EVAL_TRIANGULAR_2D_NV
define|#
directive|define
name|GL_EVAL_TRIANGULAR_2D_NV
value|0x86C1
DECL|macro|GL_MAP_TESSELLATION_NV
define|#
directive|define
name|GL_MAP_TESSELLATION_NV
value|0x86C2
DECL|macro|GL_MAP_ATTRIB_U_ORDER_NV
define|#
directive|define
name|GL_MAP_ATTRIB_U_ORDER_NV
value|0x86C3
DECL|macro|GL_MAP_ATTRIB_V_ORDER_NV
define|#
directive|define
name|GL_MAP_ATTRIB_V_ORDER_NV
value|0x86C4
DECL|macro|GL_EVAL_FRACTIONAL_TESSELLATION_NV
define|#
directive|define
name|GL_EVAL_FRACTIONAL_TESSELLATION_NV
value|0x86C5
DECL|macro|GL_EVAL_VERTEX_ATTRIB0_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB0_NV
value|0x86C6
DECL|macro|GL_EVAL_VERTEX_ATTRIB1_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB1_NV
value|0x86C7
DECL|macro|GL_EVAL_VERTEX_ATTRIB2_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB2_NV
value|0x86C8
DECL|macro|GL_EVAL_VERTEX_ATTRIB3_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB3_NV
value|0x86C9
DECL|macro|GL_EVAL_VERTEX_ATTRIB4_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB4_NV
value|0x86CA
DECL|macro|GL_EVAL_VERTEX_ATTRIB5_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB5_NV
value|0x86CB
DECL|macro|GL_EVAL_VERTEX_ATTRIB6_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB6_NV
value|0x86CC
DECL|macro|GL_EVAL_VERTEX_ATTRIB7_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB7_NV
value|0x86CD
DECL|macro|GL_EVAL_VERTEX_ATTRIB8_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB8_NV
value|0x86CE
DECL|macro|GL_EVAL_VERTEX_ATTRIB9_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB9_NV
value|0x86CF
DECL|macro|GL_EVAL_VERTEX_ATTRIB10_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB10_NV
value|0x86D0
DECL|macro|GL_EVAL_VERTEX_ATTRIB11_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB11_NV
value|0x86D1
DECL|macro|GL_EVAL_VERTEX_ATTRIB12_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB12_NV
value|0x86D2
DECL|macro|GL_EVAL_VERTEX_ATTRIB13_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB13_NV
value|0x86D3
DECL|macro|GL_EVAL_VERTEX_ATTRIB14_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB14_NV
value|0x86D4
DECL|macro|GL_EVAL_VERTEX_ATTRIB15_NV
define|#
directive|define
name|GL_EVAL_VERTEX_ATTRIB15_NV
value|0x86D5
DECL|macro|GL_MAX_MAP_TESSELLATION_NV
define|#
directive|define
name|GL_MAX_MAP_TESSELLATION_NV
value|0x86D6
DECL|macro|GL_MAX_RATIONAL_EVAL_ORDER_NV
define|#
directive|define
name|GL_MAX_RATIONAL_EVAL_ORDER_NV
value|0x86D7
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_packed_depth_stencil
DECL|macro|GL_DEPTH_STENCIL_NV
define|#
directive|define
name|GL_DEPTH_STENCIL_NV
value|0x84F9
DECL|macro|GL_UNSIGNED_INT_24_8_NV
define|#
directive|define
name|GL_UNSIGNED_INT_24_8_NV
value|0x84FA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_register_combiners2
DECL|macro|GL_PER_STAGE_CONSTANTS_NV
define|#
directive|define
name|GL_PER_STAGE_CONSTANTS_NV
value|0x8535
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_compression_vtc
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_rectangle
DECL|macro|GL_TEXTURE_RECTANGLE_NV
define|#
directive|define
name|GL_TEXTURE_RECTANGLE_NV
value|0x84F5
DECL|macro|GL_TEXTURE_BINDING_RECTANGLE_NV
define|#
directive|define
name|GL_TEXTURE_BINDING_RECTANGLE_NV
value|0x84F6
DECL|macro|GL_PROXY_TEXTURE_RECTANGLE_NV
define|#
directive|define
name|GL_PROXY_TEXTURE_RECTANGLE_NV
value|0x84F7
DECL|macro|GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
define|#
directive|define
name|GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
value|0x84F8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_shader
DECL|macro|GL_OFFSET_TEXTURE_RECTANGLE_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_RECTANGLE_NV
value|0x864C
DECL|macro|GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
value|0x864D
DECL|macro|GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
define|#
directive|define
name|GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
value|0x864E
DECL|macro|GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
define|#
directive|define
name|GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
value|0x86D9
DECL|macro|GL_UNSIGNED_INT_S8_S8_8_8_NV
define|#
directive|define
name|GL_UNSIGNED_INT_S8_S8_8_8_NV
value|0x86DA
DECL|macro|GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
define|#
directive|define
name|GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
value|0x86DB
DECL|macro|GL_DSDT_MAG_INTENSITY_NV
define|#
directive|define
name|GL_DSDT_MAG_INTENSITY_NV
value|0x86DC
DECL|macro|GL_SHADER_CONSISTENT_NV
define|#
directive|define
name|GL_SHADER_CONSISTENT_NV
value|0x86DD
DECL|macro|GL_TEXTURE_SHADER_NV
define|#
directive|define
name|GL_TEXTURE_SHADER_NV
value|0x86DE
DECL|macro|GL_SHADER_OPERATION_NV
define|#
directive|define
name|GL_SHADER_OPERATION_NV
value|0x86DF
DECL|macro|GL_CULL_MODES_NV
define|#
directive|define
name|GL_CULL_MODES_NV
value|0x86E0
DECL|macro|GL_OFFSET_TEXTURE_MATRIX_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_MATRIX_NV
value|0x86E1
DECL|macro|GL_OFFSET_TEXTURE_SCALE_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_SCALE_NV
value|0x86E2
DECL|macro|GL_OFFSET_TEXTURE_BIAS_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_BIAS_NV
value|0x86E3
DECL|macro|GL_OFFSET_TEXTURE_2D_MATRIX_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_2D_MATRIX_NV
value|GL_OFFSET_TEXTURE_MATRIX_NV
DECL|macro|GL_OFFSET_TEXTURE_2D_SCALE_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_2D_SCALE_NV
value|GL_OFFSET_TEXTURE_SCALE_NV
DECL|macro|GL_OFFSET_TEXTURE_2D_BIAS_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_2D_BIAS_NV
value|GL_OFFSET_TEXTURE_BIAS_NV
DECL|macro|GL_PREVIOUS_TEXTURE_INPUT_NV
define|#
directive|define
name|GL_PREVIOUS_TEXTURE_INPUT_NV
value|0x86E4
DECL|macro|GL_CONST_EYE_NV
define|#
directive|define
name|GL_CONST_EYE_NV
value|0x86E5
DECL|macro|GL_PASS_THROUGH_NV
define|#
directive|define
name|GL_PASS_THROUGH_NV
value|0x86E6
DECL|macro|GL_CULL_FRAGMENT_NV
define|#
directive|define
name|GL_CULL_FRAGMENT_NV
value|0x86E7
DECL|macro|GL_OFFSET_TEXTURE_2D_NV
define|#
directive|define
name|GL_OFFSET_TEXTURE_2D_NV
value|0x86E8
DECL|macro|GL_DEPENDENT_AR_TEXTURE_2D_NV
define|#
directive|define
name|GL_DEPENDENT_AR_TEXTURE_2D_NV
value|0x86E9
DECL|macro|GL_DEPENDENT_GB_TEXTURE_2D_NV
define|#
directive|define
name|GL_DEPENDENT_GB_TEXTURE_2D_NV
value|0x86EA
DECL|macro|GL_DOT_PRODUCT_NV
define|#
directive|define
name|GL_DOT_PRODUCT_NV
value|0x86EC
DECL|macro|GL_DOT_PRODUCT_DEPTH_REPLACE_NV
define|#
directive|define
name|GL_DOT_PRODUCT_DEPTH_REPLACE_NV
value|0x86ED
DECL|macro|GL_DOT_PRODUCT_TEXTURE_2D_NV
define|#
directive|define
name|GL_DOT_PRODUCT_TEXTURE_2D_NV
value|0x86EE
DECL|macro|GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
define|#
directive|define
name|GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
value|0x86F0
DECL|macro|GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
define|#
directive|define
name|GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
value|0x86F1
DECL|macro|GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
define|#
directive|define
name|GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
value|0x86F2
DECL|macro|GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
define|#
directive|define
name|GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
value|0x86F3
DECL|macro|GL_HILO_NV
define|#
directive|define
name|GL_HILO_NV
value|0x86F4
DECL|macro|GL_DSDT_NV
define|#
directive|define
name|GL_DSDT_NV
value|0x86F5
DECL|macro|GL_DSDT_MAG_NV
define|#
directive|define
name|GL_DSDT_MAG_NV
value|0x86F6
DECL|macro|GL_DSDT_MAG_VIB_NV
define|#
directive|define
name|GL_DSDT_MAG_VIB_NV
value|0x86F7
DECL|macro|GL_HILO16_NV
define|#
directive|define
name|GL_HILO16_NV
value|0x86F8
DECL|macro|GL_SIGNED_HILO_NV
define|#
directive|define
name|GL_SIGNED_HILO_NV
value|0x86F9
DECL|macro|GL_SIGNED_HILO16_NV
define|#
directive|define
name|GL_SIGNED_HILO16_NV
value|0x86FA
DECL|macro|GL_SIGNED_RGBA_NV
define|#
directive|define
name|GL_SIGNED_RGBA_NV
value|0x86FB
DECL|macro|GL_SIGNED_RGBA8_NV
define|#
directive|define
name|GL_SIGNED_RGBA8_NV
value|0x86FC
DECL|macro|GL_SIGNED_RGB_NV
define|#
directive|define
name|GL_SIGNED_RGB_NV
value|0x86FE
DECL|macro|GL_SIGNED_RGB8_NV
define|#
directive|define
name|GL_SIGNED_RGB8_NV
value|0x86FF
DECL|macro|GL_SIGNED_LUMINANCE_NV
define|#
directive|define
name|GL_SIGNED_LUMINANCE_NV
value|0x8701
DECL|macro|GL_SIGNED_LUMINANCE8_NV
define|#
directive|define
name|GL_SIGNED_LUMINANCE8_NV
value|0x8702
DECL|macro|GL_SIGNED_LUMINANCE_ALPHA_NV
define|#
directive|define
name|GL_SIGNED_LUMINANCE_ALPHA_NV
value|0x8703
DECL|macro|GL_SIGNED_LUMINANCE8_ALPHA8_NV
define|#
directive|define
name|GL_SIGNED_LUMINANCE8_ALPHA8_NV
value|0x8704
DECL|macro|GL_SIGNED_ALPHA_NV
define|#
directive|define
name|GL_SIGNED_ALPHA_NV
value|0x8705
DECL|macro|GL_SIGNED_ALPHA8_NV
define|#
directive|define
name|GL_SIGNED_ALPHA8_NV
value|0x8706
DECL|macro|GL_SIGNED_INTENSITY_NV
define|#
directive|define
name|GL_SIGNED_INTENSITY_NV
value|0x8707
DECL|macro|GL_SIGNED_INTENSITY8_NV
define|#
directive|define
name|GL_SIGNED_INTENSITY8_NV
value|0x8708
DECL|macro|GL_DSDT8_NV
define|#
directive|define
name|GL_DSDT8_NV
value|0x8709
DECL|macro|GL_DSDT8_MAG8_NV
define|#
directive|define
name|GL_DSDT8_MAG8_NV
value|0x870A
DECL|macro|GL_DSDT8_MAG8_INTENSITY8_NV
define|#
directive|define
name|GL_DSDT8_MAG8_INTENSITY8_NV
value|0x870B
DECL|macro|GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
define|#
directive|define
name|GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
value|0x870C
DECL|macro|GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
define|#
directive|define
name|GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
value|0x870D
DECL|macro|GL_HI_SCALE_NV
define|#
directive|define
name|GL_HI_SCALE_NV
value|0x870E
DECL|macro|GL_LO_SCALE_NV
define|#
directive|define
name|GL_LO_SCALE_NV
value|0x870F
DECL|macro|GL_DS_SCALE_NV
define|#
directive|define
name|GL_DS_SCALE_NV
value|0x8710
DECL|macro|GL_DT_SCALE_NV
define|#
directive|define
name|GL_DT_SCALE_NV
value|0x8711
DECL|macro|GL_MAGNITUDE_SCALE_NV
define|#
directive|define
name|GL_MAGNITUDE_SCALE_NV
value|0x8712
DECL|macro|GL_VIBRANCE_SCALE_NV
define|#
directive|define
name|GL_VIBRANCE_SCALE_NV
value|0x8713
DECL|macro|GL_HI_BIAS_NV
define|#
directive|define
name|GL_HI_BIAS_NV
value|0x8714
DECL|macro|GL_LO_BIAS_NV
define|#
directive|define
name|GL_LO_BIAS_NV
value|0x8715
DECL|macro|GL_DS_BIAS_NV
define|#
directive|define
name|GL_DS_BIAS_NV
value|0x8716
DECL|macro|GL_DT_BIAS_NV
define|#
directive|define
name|GL_DT_BIAS_NV
value|0x8717
DECL|macro|GL_MAGNITUDE_BIAS_NV
define|#
directive|define
name|GL_MAGNITUDE_BIAS_NV
value|0x8718
DECL|macro|GL_VIBRANCE_BIAS_NV
define|#
directive|define
name|GL_VIBRANCE_BIAS_NV
value|0x8719
DECL|macro|GL_TEXTURE_BORDER_VALUES_NV
define|#
directive|define
name|GL_TEXTURE_BORDER_VALUES_NV
value|0x871A
DECL|macro|GL_TEXTURE_HI_SIZE_NV
define|#
directive|define
name|GL_TEXTURE_HI_SIZE_NV
value|0x871B
DECL|macro|GL_TEXTURE_LO_SIZE_NV
define|#
directive|define
name|GL_TEXTURE_LO_SIZE_NV
value|0x871C
DECL|macro|GL_TEXTURE_DS_SIZE_NV
define|#
directive|define
name|GL_TEXTURE_DS_SIZE_NV
value|0x871D
DECL|macro|GL_TEXTURE_DT_SIZE_NV
define|#
directive|define
name|GL_TEXTURE_DT_SIZE_NV
value|0x871E
DECL|macro|GL_TEXTURE_MAG_SIZE_NV
define|#
directive|define
name|GL_TEXTURE_MAG_SIZE_NV
value|0x871F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_shader2
DECL|macro|GL_DOT_PRODUCT_TEXTURE_3D_NV
define|#
directive|define
name|GL_DOT_PRODUCT_TEXTURE_3D_NV
value|0x86EF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_array_range2
DECL|macro|GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
value|0x8533
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program
DECL|macro|GL_VERTEX_PROGRAM_NV
define|#
directive|define
name|GL_VERTEX_PROGRAM_NV
value|0x8620
DECL|macro|GL_VERTEX_STATE_PROGRAM_NV
define|#
directive|define
name|GL_VERTEX_STATE_PROGRAM_NV
value|0x8621
DECL|macro|GL_ATTRIB_ARRAY_SIZE_NV
define|#
directive|define
name|GL_ATTRIB_ARRAY_SIZE_NV
value|0x8623
DECL|macro|GL_ATTRIB_ARRAY_STRIDE_NV
define|#
directive|define
name|GL_ATTRIB_ARRAY_STRIDE_NV
value|0x8624
DECL|macro|GL_ATTRIB_ARRAY_TYPE_NV
define|#
directive|define
name|GL_ATTRIB_ARRAY_TYPE_NV
value|0x8625
DECL|macro|GL_CURRENT_ATTRIB_NV
define|#
directive|define
name|GL_CURRENT_ATTRIB_NV
value|0x8626
DECL|macro|GL_PROGRAM_LENGTH_NV
define|#
directive|define
name|GL_PROGRAM_LENGTH_NV
value|0x8627
DECL|macro|GL_PROGRAM_STRING_NV
define|#
directive|define
name|GL_PROGRAM_STRING_NV
value|0x8628
DECL|macro|GL_MODELVIEW_PROJECTION_NV
define|#
directive|define
name|GL_MODELVIEW_PROJECTION_NV
value|0x8629
DECL|macro|GL_IDENTITY_NV
define|#
directive|define
name|GL_IDENTITY_NV
value|0x862A
DECL|macro|GL_INVERSE_NV
define|#
directive|define
name|GL_INVERSE_NV
value|0x862B
DECL|macro|GL_TRANSPOSE_NV
define|#
directive|define
name|GL_TRANSPOSE_NV
value|0x862C
DECL|macro|GL_INVERSE_TRANSPOSE_NV
define|#
directive|define
name|GL_INVERSE_TRANSPOSE_NV
value|0x862D
DECL|macro|GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
define|#
directive|define
name|GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
value|0x862E
DECL|macro|GL_MAX_TRACK_MATRICES_NV
define|#
directive|define
name|GL_MAX_TRACK_MATRICES_NV
value|0x862F
DECL|macro|GL_MATRIX0_NV
define|#
directive|define
name|GL_MATRIX0_NV
value|0x8630
DECL|macro|GL_MATRIX1_NV
define|#
directive|define
name|GL_MATRIX1_NV
value|0x8631
DECL|macro|GL_MATRIX2_NV
define|#
directive|define
name|GL_MATRIX2_NV
value|0x8632
DECL|macro|GL_MATRIX3_NV
define|#
directive|define
name|GL_MATRIX3_NV
value|0x8633
DECL|macro|GL_MATRIX4_NV
define|#
directive|define
name|GL_MATRIX4_NV
value|0x8634
DECL|macro|GL_MATRIX5_NV
define|#
directive|define
name|GL_MATRIX5_NV
value|0x8635
DECL|macro|GL_MATRIX6_NV
define|#
directive|define
name|GL_MATRIX6_NV
value|0x8636
DECL|macro|GL_MATRIX7_NV
define|#
directive|define
name|GL_MATRIX7_NV
value|0x8637
DECL|macro|GL_CURRENT_MATRIX_STACK_DEPTH_NV
define|#
directive|define
name|GL_CURRENT_MATRIX_STACK_DEPTH_NV
value|0x8640
DECL|macro|GL_CURRENT_MATRIX_NV
define|#
directive|define
name|GL_CURRENT_MATRIX_NV
value|0x8641
DECL|macro|GL_VERTEX_PROGRAM_POINT_SIZE_NV
define|#
directive|define
name|GL_VERTEX_PROGRAM_POINT_SIZE_NV
value|0x8642
DECL|macro|GL_VERTEX_PROGRAM_TWO_SIDE_NV
define|#
directive|define
name|GL_VERTEX_PROGRAM_TWO_SIDE_NV
value|0x8643
DECL|macro|GL_PROGRAM_PARAMETER_NV
define|#
directive|define
name|GL_PROGRAM_PARAMETER_NV
value|0x8644
DECL|macro|GL_ATTRIB_ARRAY_POINTER_NV
define|#
directive|define
name|GL_ATTRIB_ARRAY_POINTER_NV
value|0x8645
DECL|macro|GL_PROGRAM_TARGET_NV
define|#
directive|define
name|GL_PROGRAM_TARGET_NV
value|0x8646
DECL|macro|GL_PROGRAM_RESIDENT_NV
define|#
directive|define
name|GL_PROGRAM_RESIDENT_NV
value|0x8647
DECL|macro|GL_TRACK_MATRIX_NV
define|#
directive|define
name|GL_TRACK_MATRIX_NV
value|0x8648
DECL|macro|GL_TRACK_MATRIX_TRANSFORM_NV
define|#
directive|define
name|GL_TRACK_MATRIX_TRANSFORM_NV
value|0x8649
DECL|macro|GL_VERTEX_PROGRAM_BINDING_NV
define|#
directive|define
name|GL_VERTEX_PROGRAM_BINDING_NV
value|0x864A
DECL|macro|GL_PROGRAM_ERROR_POSITION_NV
define|#
directive|define
name|GL_PROGRAM_ERROR_POSITION_NV
value|0x864B
DECL|macro|GL_VERTEX_ATTRIB_ARRAY0_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY0_NV
value|0x8650
DECL|macro|GL_VERTEX_ATTRIB_ARRAY1_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY1_NV
value|0x8651
DECL|macro|GL_VERTEX_ATTRIB_ARRAY2_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY2_NV
value|0x8652
DECL|macro|GL_VERTEX_ATTRIB_ARRAY3_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY3_NV
value|0x8653
DECL|macro|GL_VERTEX_ATTRIB_ARRAY4_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY4_NV
value|0x8654
DECL|macro|GL_VERTEX_ATTRIB_ARRAY5_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY5_NV
value|0x8655
DECL|macro|GL_VERTEX_ATTRIB_ARRAY6_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY6_NV
value|0x8656
DECL|macro|GL_VERTEX_ATTRIB_ARRAY7_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY7_NV
value|0x8657
DECL|macro|GL_VERTEX_ATTRIB_ARRAY8_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY8_NV
value|0x8658
DECL|macro|GL_VERTEX_ATTRIB_ARRAY9_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY9_NV
value|0x8659
DECL|macro|GL_VERTEX_ATTRIB_ARRAY10_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY10_NV
value|0x865A
DECL|macro|GL_VERTEX_ATTRIB_ARRAY11_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY11_NV
value|0x865B
DECL|macro|GL_VERTEX_ATTRIB_ARRAY12_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY12_NV
value|0x865C
DECL|macro|GL_VERTEX_ATTRIB_ARRAY13_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY13_NV
value|0x865D
DECL|macro|GL_VERTEX_ATTRIB_ARRAY14_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY14_NV
value|0x865E
DECL|macro|GL_VERTEX_ATTRIB_ARRAY15_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY15_NV
value|0x865F
DECL|macro|GL_MAP1_VERTEX_ATTRIB0_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB0_4_NV
value|0x8660
DECL|macro|GL_MAP1_VERTEX_ATTRIB1_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB1_4_NV
value|0x8661
DECL|macro|GL_MAP1_VERTEX_ATTRIB2_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB2_4_NV
value|0x8662
DECL|macro|GL_MAP1_VERTEX_ATTRIB3_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB3_4_NV
value|0x8663
DECL|macro|GL_MAP1_VERTEX_ATTRIB4_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB4_4_NV
value|0x8664
DECL|macro|GL_MAP1_VERTEX_ATTRIB5_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB5_4_NV
value|0x8665
DECL|macro|GL_MAP1_VERTEX_ATTRIB6_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB6_4_NV
value|0x8666
DECL|macro|GL_MAP1_VERTEX_ATTRIB7_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB7_4_NV
value|0x8667
DECL|macro|GL_MAP1_VERTEX_ATTRIB8_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB8_4_NV
value|0x8668
DECL|macro|GL_MAP1_VERTEX_ATTRIB9_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB9_4_NV
value|0x8669
DECL|macro|GL_MAP1_VERTEX_ATTRIB10_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB10_4_NV
value|0x866A
DECL|macro|GL_MAP1_VERTEX_ATTRIB11_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB11_4_NV
value|0x866B
DECL|macro|GL_MAP1_VERTEX_ATTRIB12_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB12_4_NV
value|0x866C
DECL|macro|GL_MAP1_VERTEX_ATTRIB13_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB13_4_NV
value|0x866D
DECL|macro|GL_MAP1_VERTEX_ATTRIB14_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB14_4_NV
value|0x866E
DECL|macro|GL_MAP1_VERTEX_ATTRIB15_4_NV
define|#
directive|define
name|GL_MAP1_VERTEX_ATTRIB15_4_NV
value|0x866F
DECL|macro|GL_MAP2_VERTEX_ATTRIB0_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB0_4_NV
value|0x8670
DECL|macro|GL_MAP2_VERTEX_ATTRIB1_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB1_4_NV
value|0x8671
DECL|macro|GL_MAP2_VERTEX_ATTRIB2_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB2_4_NV
value|0x8672
DECL|macro|GL_MAP2_VERTEX_ATTRIB3_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB3_4_NV
value|0x8673
DECL|macro|GL_MAP2_VERTEX_ATTRIB4_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB4_4_NV
value|0x8674
DECL|macro|GL_MAP2_VERTEX_ATTRIB5_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB5_4_NV
value|0x8675
DECL|macro|GL_MAP2_VERTEX_ATTRIB6_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB6_4_NV
value|0x8676
DECL|macro|GL_MAP2_VERTEX_ATTRIB7_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB7_4_NV
value|0x8677
DECL|macro|GL_MAP2_VERTEX_ATTRIB8_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB8_4_NV
value|0x8678
DECL|macro|GL_MAP2_VERTEX_ATTRIB9_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB9_4_NV
value|0x8679
DECL|macro|GL_MAP2_VERTEX_ATTRIB10_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB10_4_NV
value|0x867A
DECL|macro|GL_MAP2_VERTEX_ATTRIB11_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB11_4_NV
value|0x867B
DECL|macro|GL_MAP2_VERTEX_ATTRIB12_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB12_4_NV
value|0x867C
DECL|macro|GL_MAP2_VERTEX_ATTRIB13_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB13_4_NV
value|0x867D
DECL|macro|GL_MAP2_VERTEX_ATTRIB14_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB14_4_NV
value|0x867E
DECL|macro|GL_MAP2_VERTEX_ATTRIB15_4_NV
define|#
directive|define
name|GL_MAP2_VERTEX_ATTRIB15_4_NV
value|0x867F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_coordinate_clamp
DECL|macro|GL_TEXTURE_MAX_CLAMP_S_SGIX
define|#
directive|define
name|GL_TEXTURE_MAX_CLAMP_S_SGIX
value|0x8369
DECL|macro|GL_TEXTURE_MAX_CLAMP_T_SGIX
define|#
directive|define
name|GL_TEXTURE_MAX_CLAMP_T_SGIX
value|0x836A
DECL|macro|GL_TEXTURE_MAX_CLAMP_R_SGIX
define|#
directive|define
name|GL_TEXTURE_MAX_CLAMP_R_SGIX
value|0x836B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_scalebias_hint
DECL|macro|GL_SCALEBIAS_HINT_SGIX
define|#
directive|define
name|GL_SCALEBIAS_HINT_SGIX
value|0x8322
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OML_interlace
DECL|macro|GL_INTERLACE_OML
define|#
directive|define
name|GL_INTERLACE_OML
value|0x8980
DECL|macro|GL_INTERLACE_READ_OML
define|#
directive|define
name|GL_INTERLACE_READ_OML
value|0x8981
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OML_subsample
DECL|macro|GL_FORMAT_SUBSAMPLE_24_24_OML
define|#
directive|define
name|GL_FORMAT_SUBSAMPLE_24_24_OML
value|0x8982
DECL|macro|GL_FORMAT_SUBSAMPLE_244_244_OML
define|#
directive|define
name|GL_FORMAT_SUBSAMPLE_244_244_OML
value|0x8983
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OML_resample
DECL|macro|GL_PACK_RESAMPLE_OML
define|#
directive|define
name|GL_PACK_RESAMPLE_OML
value|0x8984
DECL|macro|GL_UNPACK_RESAMPLE_OML
define|#
directive|define
name|GL_UNPACK_RESAMPLE_OML
value|0x8985
DECL|macro|GL_RESAMPLE_REPLICATE_OML
define|#
directive|define
name|GL_RESAMPLE_REPLICATE_OML
value|0x8986
DECL|macro|GL_RESAMPLE_ZERO_FILL_OML
define|#
directive|define
name|GL_RESAMPLE_ZERO_FILL_OML
value|0x8987
DECL|macro|GL_RESAMPLE_AVERAGE_OML
define|#
directive|define
name|GL_RESAMPLE_AVERAGE_OML
value|0x8988
DECL|macro|GL_RESAMPLE_DECIMATE_OML
define|#
directive|define
name|GL_RESAMPLE_DECIMATE_OML
value|0x8989
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_copy_depth_to_color
DECL|macro|GL_DEPTH_STENCIL_TO_RGBA_NV
define|#
directive|define
name|GL_DEPTH_STENCIL_TO_RGBA_NV
value|0x886E
DECL|macro|GL_DEPTH_STENCIL_TO_BGRA_NV
define|#
directive|define
name|GL_DEPTH_STENCIL_TO_BGRA_NV
value|0x886F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_envmap_bumpmap
DECL|macro|GL_BUMP_ROT_MATRIX_ATI
define|#
directive|define
name|GL_BUMP_ROT_MATRIX_ATI
value|0x8775
DECL|macro|GL_BUMP_ROT_MATRIX_SIZE_ATI
define|#
directive|define
name|GL_BUMP_ROT_MATRIX_SIZE_ATI
value|0x8776
DECL|macro|GL_BUMP_NUM_TEX_UNITS_ATI
define|#
directive|define
name|GL_BUMP_NUM_TEX_UNITS_ATI
value|0x8777
DECL|macro|GL_BUMP_TEX_UNITS_ATI
define|#
directive|define
name|GL_BUMP_TEX_UNITS_ATI
value|0x8778
DECL|macro|GL_DUDV_ATI
define|#
directive|define
name|GL_DUDV_ATI
value|0x8779
DECL|macro|GL_DU8DV8_ATI
define|#
directive|define
name|GL_DU8DV8_ATI
value|0x877A
DECL|macro|GL_BUMP_ENVMAP_ATI
define|#
directive|define
name|GL_BUMP_ENVMAP_ATI
value|0x877B
DECL|macro|GL_BUMP_TARGET_ATI
define|#
directive|define
name|GL_BUMP_TARGET_ATI
value|0x877C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_fragment_shader
DECL|macro|GL_FRAGMENT_SHADER_ATI
define|#
directive|define
name|GL_FRAGMENT_SHADER_ATI
value|0x8920
DECL|macro|GL_REG_0_ATI
define|#
directive|define
name|GL_REG_0_ATI
value|0x8921
DECL|macro|GL_REG_1_ATI
define|#
directive|define
name|GL_REG_1_ATI
value|0x8922
DECL|macro|GL_REG_2_ATI
define|#
directive|define
name|GL_REG_2_ATI
value|0x8923
DECL|macro|GL_REG_3_ATI
define|#
directive|define
name|GL_REG_3_ATI
value|0x8924
DECL|macro|GL_REG_4_ATI
define|#
directive|define
name|GL_REG_4_ATI
value|0x8925
DECL|macro|GL_REG_5_ATI
define|#
directive|define
name|GL_REG_5_ATI
value|0x8926
DECL|macro|GL_REG_6_ATI
define|#
directive|define
name|GL_REG_6_ATI
value|0x8927
DECL|macro|GL_REG_7_ATI
define|#
directive|define
name|GL_REG_7_ATI
value|0x8928
DECL|macro|GL_REG_8_ATI
define|#
directive|define
name|GL_REG_8_ATI
value|0x8929
DECL|macro|GL_REG_9_ATI
define|#
directive|define
name|GL_REG_9_ATI
value|0x892A
DECL|macro|GL_REG_10_ATI
define|#
directive|define
name|GL_REG_10_ATI
value|0x892B
DECL|macro|GL_REG_11_ATI
define|#
directive|define
name|GL_REG_11_ATI
value|0x892C
DECL|macro|GL_REG_12_ATI
define|#
directive|define
name|GL_REG_12_ATI
value|0x892D
DECL|macro|GL_REG_13_ATI
define|#
directive|define
name|GL_REG_13_ATI
value|0x892E
DECL|macro|GL_REG_14_ATI
define|#
directive|define
name|GL_REG_14_ATI
value|0x892F
DECL|macro|GL_REG_15_ATI
define|#
directive|define
name|GL_REG_15_ATI
value|0x8930
DECL|macro|GL_REG_16_ATI
define|#
directive|define
name|GL_REG_16_ATI
value|0x8931
DECL|macro|GL_REG_17_ATI
define|#
directive|define
name|GL_REG_17_ATI
value|0x8932
DECL|macro|GL_REG_18_ATI
define|#
directive|define
name|GL_REG_18_ATI
value|0x8933
DECL|macro|GL_REG_19_ATI
define|#
directive|define
name|GL_REG_19_ATI
value|0x8934
DECL|macro|GL_REG_20_ATI
define|#
directive|define
name|GL_REG_20_ATI
value|0x8935
DECL|macro|GL_REG_21_ATI
define|#
directive|define
name|GL_REG_21_ATI
value|0x8936
DECL|macro|GL_REG_22_ATI
define|#
directive|define
name|GL_REG_22_ATI
value|0x8937
DECL|macro|GL_REG_23_ATI
define|#
directive|define
name|GL_REG_23_ATI
value|0x8938
DECL|macro|GL_REG_24_ATI
define|#
directive|define
name|GL_REG_24_ATI
value|0x8939
DECL|macro|GL_REG_25_ATI
define|#
directive|define
name|GL_REG_25_ATI
value|0x893A
DECL|macro|GL_REG_26_ATI
define|#
directive|define
name|GL_REG_26_ATI
value|0x893B
DECL|macro|GL_REG_27_ATI
define|#
directive|define
name|GL_REG_27_ATI
value|0x893C
DECL|macro|GL_REG_28_ATI
define|#
directive|define
name|GL_REG_28_ATI
value|0x893D
DECL|macro|GL_REG_29_ATI
define|#
directive|define
name|GL_REG_29_ATI
value|0x893E
DECL|macro|GL_REG_30_ATI
define|#
directive|define
name|GL_REG_30_ATI
value|0x893F
DECL|macro|GL_REG_31_ATI
define|#
directive|define
name|GL_REG_31_ATI
value|0x8940
DECL|macro|GL_CON_0_ATI
define|#
directive|define
name|GL_CON_0_ATI
value|0x8941
DECL|macro|GL_CON_1_ATI
define|#
directive|define
name|GL_CON_1_ATI
value|0x8942
DECL|macro|GL_CON_2_ATI
define|#
directive|define
name|GL_CON_2_ATI
value|0x8943
DECL|macro|GL_CON_3_ATI
define|#
directive|define
name|GL_CON_3_ATI
value|0x8944
DECL|macro|GL_CON_4_ATI
define|#
directive|define
name|GL_CON_4_ATI
value|0x8945
DECL|macro|GL_CON_5_ATI
define|#
directive|define
name|GL_CON_5_ATI
value|0x8946
DECL|macro|GL_CON_6_ATI
define|#
directive|define
name|GL_CON_6_ATI
value|0x8947
DECL|macro|GL_CON_7_ATI
define|#
directive|define
name|GL_CON_7_ATI
value|0x8948
DECL|macro|GL_CON_8_ATI
define|#
directive|define
name|GL_CON_8_ATI
value|0x8949
DECL|macro|GL_CON_9_ATI
define|#
directive|define
name|GL_CON_9_ATI
value|0x894A
DECL|macro|GL_CON_10_ATI
define|#
directive|define
name|GL_CON_10_ATI
value|0x894B
DECL|macro|GL_CON_11_ATI
define|#
directive|define
name|GL_CON_11_ATI
value|0x894C
DECL|macro|GL_CON_12_ATI
define|#
directive|define
name|GL_CON_12_ATI
value|0x894D
DECL|macro|GL_CON_13_ATI
define|#
directive|define
name|GL_CON_13_ATI
value|0x894E
DECL|macro|GL_CON_14_ATI
define|#
directive|define
name|GL_CON_14_ATI
value|0x894F
DECL|macro|GL_CON_15_ATI
define|#
directive|define
name|GL_CON_15_ATI
value|0x8950
DECL|macro|GL_CON_16_ATI
define|#
directive|define
name|GL_CON_16_ATI
value|0x8951
DECL|macro|GL_CON_17_ATI
define|#
directive|define
name|GL_CON_17_ATI
value|0x8952
DECL|macro|GL_CON_18_ATI
define|#
directive|define
name|GL_CON_18_ATI
value|0x8953
DECL|macro|GL_CON_19_ATI
define|#
directive|define
name|GL_CON_19_ATI
value|0x8954
DECL|macro|GL_CON_20_ATI
define|#
directive|define
name|GL_CON_20_ATI
value|0x8955
DECL|macro|GL_CON_21_ATI
define|#
directive|define
name|GL_CON_21_ATI
value|0x8956
DECL|macro|GL_CON_22_ATI
define|#
directive|define
name|GL_CON_22_ATI
value|0x8957
DECL|macro|GL_CON_23_ATI
define|#
directive|define
name|GL_CON_23_ATI
value|0x8958
DECL|macro|GL_CON_24_ATI
define|#
directive|define
name|GL_CON_24_ATI
value|0x8959
DECL|macro|GL_CON_25_ATI
define|#
directive|define
name|GL_CON_25_ATI
value|0x895A
DECL|macro|GL_CON_26_ATI
define|#
directive|define
name|GL_CON_26_ATI
value|0x895B
DECL|macro|GL_CON_27_ATI
define|#
directive|define
name|GL_CON_27_ATI
value|0x895C
DECL|macro|GL_CON_28_ATI
define|#
directive|define
name|GL_CON_28_ATI
value|0x895D
DECL|macro|GL_CON_29_ATI
define|#
directive|define
name|GL_CON_29_ATI
value|0x895E
DECL|macro|GL_CON_30_ATI
define|#
directive|define
name|GL_CON_30_ATI
value|0x895F
DECL|macro|GL_CON_31_ATI
define|#
directive|define
name|GL_CON_31_ATI
value|0x8960
DECL|macro|GL_MOV_ATI
define|#
directive|define
name|GL_MOV_ATI
value|0x8961
DECL|macro|GL_ADD_ATI
define|#
directive|define
name|GL_ADD_ATI
value|0x8963
DECL|macro|GL_MUL_ATI
define|#
directive|define
name|GL_MUL_ATI
value|0x8964
DECL|macro|GL_SUB_ATI
define|#
directive|define
name|GL_SUB_ATI
value|0x8965
DECL|macro|GL_DOT3_ATI
define|#
directive|define
name|GL_DOT3_ATI
value|0x8966
DECL|macro|GL_DOT4_ATI
define|#
directive|define
name|GL_DOT4_ATI
value|0x8967
DECL|macro|GL_MAD_ATI
define|#
directive|define
name|GL_MAD_ATI
value|0x8968
DECL|macro|GL_LERP_ATI
define|#
directive|define
name|GL_LERP_ATI
value|0x8969
DECL|macro|GL_CND_ATI
define|#
directive|define
name|GL_CND_ATI
value|0x896A
DECL|macro|GL_CND0_ATI
define|#
directive|define
name|GL_CND0_ATI
value|0x896B
DECL|macro|GL_DOT2_ADD_ATI
define|#
directive|define
name|GL_DOT2_ADD_ATI
value|0x896C
DECL|macro|GL_SECONDARY_INTERPOLATOR_ATI
define|#
directive|define
name|GL_SECONDARY_INTERPOLATOR_ATI
value|0x896D
DECL|macro|GL_NUM_FRAGMENT_REGISTERS_ATI
define|#
directive|define
name|GL_NUM_FRAGMENT_REGISTERS_ATI
value|0x896E
DECL|macro|GL_NUM_FRAGMENT_CONSTANTS_ATI
define|#
directive|define
name|GL_NUM_FRAGMENT_CONSTANTS_ATI
value|0x896F
DECL|macro|GL_NUM_PASSES_ATI
define|#
directive|define
name|GL_NUM_PASSES_ATI
value|0x8970
DECL|macro|GL_NUM_INSTRUCTIONS_PER_PASS_ATI
define|#
directive|define
name|GL_NUM_INSTRUCTIONS_PER_PASS_ATI
value|0x8971
DECL|macro|GL_NUM_INSTRUCTIONS_TOTAL_ATI
define|#
directive|define
name|GL_NUM_INSTRUCTIONS_TOTAL_ATI
value|0x8972
DECL|macro|GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
define|#
directive|define
name|GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
value|0x8973
DECL|macro|GL_NUM_LOOPBACK_COMPONENTS_ATI
define|#
directive|define
name|GL_NUM_LOOPBACK_COMPONENTS_ATI
value|0x8974
DECL|macro|GL_COLOR_ALPHA_PAIRING_ATI
define|#
directive|define
name|GL_COLOR_ALPHA_PAIRING_ATI
value|0x8975
DECL|macro|GL_SWIZZLE_STR_ATI
define|#
directive|define
name|GL_SWIZZLE_STR_ATI
value|0x8976
DECL|macro|GL_SWIZZLE_STQ_ATI
define|#
directive|define
name|GL_SWIZZLE_STQ_ATI
value|0x8977
DECL|macro|GL_SWIZZLE_STR_DR_ATI
define|#
directive|define
name|GL_SWIZZLE_STR_DR_ATI
value|0x8978
DECL|macro|GL_SWIZZLE_STQ_DQ_ATI
define|#
directive|define
name|GL_SWIZZLE_STQ_DQ_ATI
value|0x8979
DECL|macro|GL_SWIZZLE_STRQ_ATI
define|#
directive|define
name|GL_SWIZZLE_STRQ_ATI
value|0x897A
DECL|macro|GL_SWIZZLE_STRQ_DQ_ATI
define|#
directive|define
name|GL_SWIZZLE_STRQ_DQ_ATI
value|0x897B
DECL|macro|GL_RED_BIT_ATI
define|#
directive|define
name|GL_RED_BIT_ATI
value|0x00000001
DECL|macro|GL_GREEN_BIT_ATI
define|#
directive|define
name|GL_GREEN_BIT_ATI
value|0x00000002
DECL|macro|GL_BLUE_BIT_ATI
define|#
directive|define
name|GL_BLUE_BIT_ATI
value|0x00000004
DECL|macro|GL_2X_BIT_ATI
define|#
directive|define
name|GL_2X_BIT_ATI
value|0x00000001
DECL|macro|GL_4X_BIT_ATI
define|#
directive|define
name|GL_4X_BIT_ATI
value|0x00000002
DECL|macro|GL_8X_BIT_ATI
define|#
directive|define
name|GL_8X_BIT_ATI
value|0x00000004
DECL|macro|GL_HALF_BIT_ATI
define|#
directive|define
name|GL_HALF_BIT_ATI
value|0x00000008
DECL|macro|GL_QUARTER_BIT_ATI
define|#
directive|define
name|GL_QUARTER_BIT_ATI
value|0x00000010
DECL|macro|GL_EIGHTH_BIT_ATI
define|#
directive|define
name|GL_EIGHTH_BIT_ATI
value|0x00000020
DECL|macro|GL_SATURATE_BIT_ATI
define|#
directive|define
name|GL_SATURATE_BIT_ATI
value|0x00000040
DECL|macro|GL_COMP_BIT_ATI
define|#
directive|define
name|GL_COMP_BIT_ATI
value|0x00000002
DECL|macro|GL_NEGATE_BIT_ATI
define|#
directive|define
name|GL_NEGATE_BIT_ATI
value|0x00000004
DECL|macro|GL_BIAS_BIT_ATI
define|#
directive|define
name|GL_BIAS_BIT_ATI
value|0x00000008
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_pn_triangles
DECL|macro|GL_PN_TRIANGLES_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_ATI
value|0x87F0
DECL|macro|GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
define|#
directive|define
name|GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
value|0x87F1
DECL|macro|GL_PN_TRIANGLES_POINT_MODE_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_POINT_MODE_ATI
value|0x87F2
DECL|macro|GL_PN_TRIANGLES_NORMAL_MODE_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_NORMAL_MODE_ATI
value|0x87F3
DECL|macro|GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
value|0x87F4
DECL|macro|GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
value|0x87F5
DECL|macro|GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
value|0x87F6
DECL|macro|GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
value|0x87F7
DECL|macro|GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
define|#
directive|define
name|GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
value|0x87F8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_vertex_array_object
DECL|macro|GL_STATIC_ATI
define|#
directive|define
name|GL_STATIC_ATI
value|0x8760
DECL|macro|GL_DYNAMIC_ATI
define|#
directive|define
name|GL_DYNAMIC_ATI
value|0x8761
DECL|macro|GL_PRESERVE_ATI
define|#
directive|define
name|GL_PRESERVE_ATI
value|0x8762
DECL|macro|GL_DISCARD_ATI
define|#
directive|define
name|GL_DISCARD_ATI
value|0x8763
DECL|macro|GL_OBJECT_BUFFER_SIZE_ATI
define|#
directive|define
name|GL_OBJECT_BUFFER_SIZE_ATI
value|0x8764
DECL|macro|GL_OBJECT_BUFFER_USAGE_ATI
define|#
directive|define
name|GL_OBJECT_BUFFER_USAGE_ATI
value|0x8765
DECL|macro|GL_ARRAY_OBJECT_BUFFER_ATI
define|#
directive|define
name|GL_ARRAY_OBJECT_BUFFER_ATI
value|0x8766
DECL|macro|GL_ARRAY_OBJECT_OFFSET_ATI
define|#
directive|define
name|GL_ARRAY_OBJECT_OFFSET_ATI
value|0x8767
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_shader
DECL|macro|GL_VERTEX_SHADER_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_EXT
value|0x8780
DECL|macro|GL_VERTEX_SHADER_BINDING_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_BINDING_EXT
value|0x8781
DECL|macro|GL_OP_INDEX_EXT
define|#
directive|define
name|GL_OP_INDEX_EXT
value|0x8782
DECL|macro|GL_OP_NEGATE_EXT
define|#
directive|define
name|GL_OP_NEGATE_EXT
value|0x8783
DECL|macro|GL_OP_DOT3_EXT
define|#
directive|define
name|GL_OP_DOT3_EXT
value|0x8784
DECL|macro|GL_OP_DOT4_EXT
define|#
directive|define
name|GL_OP_DOT4_EXT
value|0x8785
DECL|macro|GL_OP_MUL_EXT
define|#
directive|define
name|GL_OP_MUL_EXT
value|0x8786
DECL|macro|GL_OP_ADD_EXT
define|#
directive|define
name|GL_OP_ADD_EXT
value|0x8787
DECL|macro|GL_OP_MADD_EXT
define|#
directive|define
name|GL_OP_MADD_EXT
value|0x8788
DECL|macro|GL_OP_FRAC_EXT
define|#
directive|define
name|GL_OP_FRAC_EXT
value|0x8789
DECL|macro|GL_OP_MAX_EXT
define|#
directive|define
name|GL_OP_MAX_EXT
value|0x878A
DECL|macro|GL_OP_MIN_EXT
define|#
directive|define
name|GL_OP_MIN_EXT
value|0x878B
DECL|macro|GL_OP_SET_GE_EXT
define|#
directive|define
name|GL_OP_SET_GE_EXT
value|0x878C
DECL|macro|GL_OP_SET_LT_EXT
define|#
directive|define
name|GL_OP_SET_LT_EXT
value|0x878D
DECL|macro|GL_OP_CLAMP_EXT
define|#
directive|define
name|GL_OP_CLAMP_EXT
value|0x878E
DECL|macro|GL_OP_FLOOR_EXT
define|#
directive|define
name|GL_OP_FLOOR_EXT
value|0x878F
DECL|macro|GL_OP_ROUND_EXT
define|#
directive|define
name|GL_OP_ROUND_EXT
value|0x8790
DECL|macro|GL_OP_EXP_BASE_2_EXT
define|#
directive|define
name|GL_OP_EXP_BASE_2_EXT
value|0x8791
DECL|macro|GL_OP_LOG_BASE_2_EXT
define|#
directive|define
name|GL_OP_LOG_BASE_2_EXT
value|0x8792
DECL|macro|GL_OP_POWER_EXT
define|#
directive|define
name|GL_OP_POWER_EXT
value|0x8793
DECL|macro|GL_OP_RECIP_EXT
define|#
directive|define
name|GL_OP_RECIP_EXT
value|0x8794
DECL|macro|GL_OP_RECIP_SQRT_EXT
define|#
directive|define
name|GL_OP_RECIP_SQRT_EXT
value|0x8795
DECL|macro|GL_OP_SUB_EXT
define|#
directive|define
name|GL_OP_SUB_EXT
value|0x8796
DECL|macro|GL_OP_CROSS_PRODUCT_EXT
define|#
directive|define
name|GL_OP_CROSS_PRODUCT_EXT
value|0x8797
DECL|macro|GL_OP_MULTIPLY_MATRIX_EXT
define|#
directive|define
name|GL_OP_MULTIPLY_MATRIX_EXT
value|0x8798
DECL|macro|GL_OP_MOV_EXT
define|#
directive|define
name|GL_OP_MOV_EXT
value|0x8799
DECL|macro|GL_OUTPUT_VERTEX_EXT
define|#
directive|define
name|GL_OUTPUT_VERTEX_EXT
value|0x879A
DECL|macro|GL_OUTPUT_COLOR0_EXT
define|#
directive|define
name|GL_OUTPUT_COLOR0_EXT
value|0x879B
DECL|macro|GL_OUTPUT_COLOR1_EXT
define|#
directive|define
name|GL_OUTPUT_COLOR1_EXT
value|0x879C
DECL|macro|GL_OUTPUT_TEXTURE_COORD0_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD0_EXT
value|0x879D
DECL|macro|GL_OUTPUT_TEXTURE_COORD1_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD1_EXT
value|0x879E
DECL|macro|GL_OUTPUT_TEXTURE_COORD2_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD2_EXT
value|0x879F
DECL|macro|GL_OUTPUT_TEXTURE_COORD3_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD3_EXT
value|0x87A0
DECL|macro|GL_OUTPUT_TEXTURE_COORD4_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD4_EXT
value|0x87A1
DECL|macro|GL_OUTPUT_TEXTURE_COORD5_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD5_EXT
value|0x87A2
DECL|macro|GL_OUTPUT_TEXTURE_COORD6_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD6_EXT
value|0x87A3
DECL|macro|GL_OUTPUT_TEXTURE_COORD7_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD7_EXT
value|0x87A4
DECL|macro|GL_OUTPUT_TEXTURE_COORD8_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD8_EXT
value|0x87A5
DECL|macro|GL_OUTPUT_TEXTURE_COORD9_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD9_EXT
value|0x87A6
DECL|macro|GL_OUTPUT_TEXTURE_COORD10_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD10_EXT
value|0x87A7
DECL|macro|GL_OUTPUT_TEXTURE_COORD11_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD11_EXT
value|0x87A8
DECL|macro|GL_OUTPUT_TEXTURE_COORD12_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD12_EXT
value|0x87A9
DECL|macro|GL_OUTPUT_TEXTURE_COORD13_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD13_EXT
value|0x87AA
DECL|macro|GL_OUTPUT_TEXTURE_COORD14_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD14_EXT
value|0x87AB
DECL|macro|GL_OUTPUT_TEXTURE_COORD15_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD15_EXT
value|0x87AC
DECL|macro|GL_OUTPUT_TEXTURE_COORD16_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD16_EXT
value|0x87AD
DECL|macro|GL_OUTPUT_TEXTURE_COORD17_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD17_EXT
value|0x87AE
DECL|macro|GL_OUTPUT_TEXTURE_COORD18_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD18_EXT
value|0x87AF
DECL|macro|GL_OUTPUT_TEXTURE_COORD19_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD19_EXT
value|0x87B0
DECL|macro|GL_OUTPUT_TEXTURE_COORD20_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD20_EXT
value|0x87B1
DECL|macro|GL_OUTPUT_TEXTURE_COORD21_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD21_EXT
value|0x87B2
DECL|macro|GL_OUTPUT_TEXTURE_COORD22_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD22_EXT
value|0x87B3
DECL|macro|GL_OUTPUT_TEXTURE_COORD23_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD23_EXT
value|0x87B4
DECL|macro|GL_OUTPUT_TEXTURE_COORD24_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD24_EXT
value|0x87B5
DECL|macro|GL_OUTPUT_TEXTURE_COORD25_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD25_EXT
value|0x87B6
DECL|macro|GL_OUTPUT_TEXTURE_COORD26_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD26_EXT
value|0x87B7
DECL|macro|GL_OUTPUT_TEXTURE_COORD27_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD27_EXT
value|0x87B8
DECL|macro|GL_OUTPUT_TEXTURE_COORD28_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD28_EXT
value|0x87B9
DECL|macro|GL_OUTPUT_TEXTURE_COORD29_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD29_EXT
value|0x87BA
DECL|macro|GL_OUTPUT_TEXTURE_COORD30_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD30_EXT
value|0x87BB
DECL|macro|GL_OUTPUT_TEXTURE_COORD31_EXT
define|#
directive|define
name|GL_OUTPUT_TEXTURE_COORD31_EXT
value|0x87BC
DECL|macro|GL_OUTPUT_FOG_EXT
define|#
directive|define
name|GL_OUTPUT_FOG_EXT
value|0x87BD
DECL|macro|GL_SCALAR_EXT
define|#
directive|define
name|GL_SCALAR_EXT
value|0x87BE
DECL|macro|GL_VECTOR_EXT
define|#
directive|define
name|GL_VECTOR_EXT
value|0x87BF
DECL|macro|GL_MATRIX_EXT
define|#
directive|define
name|GL_MATRIX_EXT
value|0x87C0
DECL|macro|GL_VARIANT_EXT
define|#
directive|define
name|GL_VARIANT_EXT
value|0x87C1
DECL|macro|GL_INVARIANT_EXT
define|#
directive|define
name|GL_INVARIANT_EXT
value|0x87C2
DECL|macro|GL_LOCAL_CONSTANT_EXT
define|#
directive|define
name|GL_LOCAL_CONSTANT_EXT
value|0x87C3
DECL|macro|GL_LOCAL_EXT
define|#
directive|define
name|GL_LOCAL_EXT
value|0x87C4
DECL|macro|GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
define|#
directive|define
name|GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
value|0x87C5
DECL|macro|GL_MAX_VERTEX_SHADER_VARIANTS_EXT
define|#
directive|define
name|GL_MAX_VERTEX_SHADER_VARIANTS_EXT
value|0x87C6
DECL|macro|GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
define|#
directive|define
name|GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
value|0x87C7
DECL|macro|GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
define|#
directive|define
name|GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
value|0x87C8
DECL|macro|GL_MAX_VERTEX_SHADER_LOCALS_EXT
define|#
directive|define
name|GL_MAX_VERTEX_SHADER_LOCALS_EXT
value|0x87C9
DECL|macro|GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
define|#
directive|define
name|GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
value|0x87CA
DECL|macro|GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
define|#
directive|define
name|GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
value|0x87CB
DECL|macro|GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
define|#
directive|define
name|GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
value|0x87CC
DECL|macro|GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
define|#
directive|define
name|GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
value|0x87CD
DECL|macro|GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
define|#
directive|define
name|GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
value|0x87CE
DECL|macro|GL_VERTEX_SHADER_INSTRUCTIONS_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_INSTRUCTIONS_EXT
value|0x87CF
DECL|macro|GL_VERTEX_SHADER_VARIANTS_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_VARIANTS_EXT
value|0x87D0
DECL|macro|GL_VERTEX_SHADER_INVARIANTS_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_INVARIANTS_EXT
value|0x87D1
DECL|macro|GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
value|0x87D2
DECL|macro|GL_VERTEX_SHADER_LOCALS_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_LOCALS_EXT
value|0x87D3
DECL|macro|GL_VERTEX_SHADER_OPTIMIZED_EXT
define|#
directive|define
name|GL_VERTEX_SHADER_OPTIMIZED_EXT
value|0x87D4
DECL|macro|GL_X_EXT
define|#
directive|define
name|GL_X_EXT
value|0x87D5
DECL|macro|GL_Y_EXT
define|#
directive|define
name|GL_Y_EXT
value|0x87D6
DECL|macro|GL_Z_EXT
define|#
directive|define
name|GL_Z_EXT
value|0x87D7
DECL|macro|GL_W_EXT
define|#
directive|define
name|GL_W_EXT
value|0x87D8
DECL|macro|GL_NEGATIVE_X_EXT
define|#
directive|define
name|GL_NEGATIVE_X_EXT
value|0x87D9
DECL|macro|GL_NEGATIVE_Y_EXT
define|#
directive|define
name|GL_NEGATIVE_Y_EXT
value|0x87DA
DECL|macro|GL_NEGATIVE_Z_EXT
define|#
directive|define
name|GL_NEGATIVE_Z_EXT
value|0x87DB
DECL|macro|GL_NEGATIVE_W_EXT
define|#
directive|define
name|GL_NEGATIVE_W_EXT
value|0x87DC
DECL|macro|GL_ZERO_EXT
define|#
directive|define
name|GL_ZERO_EXT
value|0x87DD
DECL|macro|GL_ONE_EXT
define|#
directive|define
name|GL_ONE_EXT
value|0x87DE
DECL|macro|GL_NEGATIVE_ONE_EXT
define|#
directive|define
name|GL_NEGATIVE_ONE_EXT
value|0x87DF
DECL|macro|GL_NORMALIZED_RANGE_EXT
define|#
directive|define
name|GL_NORMALIZED_RANGE_EXT
value|0x87E0
DECL|macro|GL_FULL_RANGE_EXT
define|#
directive|define
name|GL_FULL_RANGE_EXT
value|0x87E1
DECL|macro|GL_CURRENT_VERTEX_EXT
define|#
directive|define
name|GL_CURRENT_VERTEX_EXT
value|0x87E2
DECL|macro|GL_MVP_MATRIX_EXT
define|#
directive|define
name|GL_MVP_MATRIX_EXT
value|0x87E3
DECL|macro|GL_VARIANT_VALUE_EXT
define|#
directive|define
name|GL_VARIANT_VALUE_EXT
value|0x87E4
DECL|macro|GL_VARIANT_DATATYPE_EXT
define|#
directive|define
name|GL_VARIANT_DATATYPE_EXT
value|0x87E5
DECL|macro|GL_VARIANT_ARRAY_STRIDE_EXT
define|#
directive|define
name|GL_VARIANT_ARRAY_STRIDE_EXT
value|0x87E6
DECL|macro|GL_VARIANT_ARRAY_TYPE_EXT
define|#
directive|define
name|GL_VARIANT_ARRAY_TYPE_EXT
value|0x87E7
DECL|macro|GL_VARIANT_ARRAY_EXT
define|#
directive|define
name|GL_VARIANT_ARRAY_EXT
value|0x87E8
DECL|macro|GL_VARIANT_ARRAY_POINTER_EXT
define|#
directive|define
name|GL_VARIANT_ARRAY_POINTER_EXT
value|0x87E9
DECL|macro|GL_INVARIANT_VALUE_EXT
define|#
directive|define
name|GL_INVARIANT_VALUE_EXT
value|0x87EA
DECL|macro|GL_INVARIANT_DATATYPE_EXT
define|#
directive|define
name|GL_INVARIANT_DATATYPE_EXT
value|0x87EB
DECL|macro|GL_LOCAL_CONSTANT_VALUE_EXT
define|#
directive|define
name|GL_LOCAL_CONSTANT_VALUE_EXT
value|0x87EC
DECL|macro|GL_LOCAL_CONSTANT_DATATYPE_EXT
define|#
directive|define
name|GL_LOCAL_CONSTANT_DATATYPE_EXT
value|0x87ED
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_vertex_streams
DECL|macro|GL_MAX_VERTEX_STREAMS_ATI
define|#
directive|define
name|GL_MAX_VERTEX_STREAMS_ATI
value|0x876B
DECL|macro|GL_VERTEX_STREAM0_ATI
define|#
directive|define
name|GL_VERTEX_STREAM0_ATI
value|0x876C
DECL|macro|GL_VERTEX_STREAM1_ATI
define|#
directive|define
name|GL_VERTEX_STREAM1_ATI
value|0x876D
DECL|macro|GL_VERTEX_STREAM2_ATI
define|#
directive|define
name|GL_VERTEX_STREAM2_ATI
value|0x876E
DECL|macro|GL_VERTEX_STREAM3_ATI
define|#
directive|define
name|GL_VERTEX_STREAM3_ATI
value|0x876F
DECL|macro|GL_VERTEX_STREAM4_ATI
define|#
directive|define
name|GL_VERTEX_STREAM4_ATI
value|0x8770
DECL|macro|GL_VERTEX_STREAM5_ATI
define|#
directive|define
name|GL_VERTEX_STREAM5_ATI
value|0x8771
DECL|macro|GL_VERTEX_STREAM6_ATI
define|#
directive|define
name|GL_VERTEX_STREAM6_ATI
value|0x8772
DECL|macro|GL_VERTEX_STREAM7_ATI
define|#
directive|define
name|GL_VERTEX_STREAM7_ATI
value|0x8773
DECL|macro|GL_VERTEX_SOURCE_ATI
define|#
directive|define
name|GL_VERTEX_SOURCE_ATI
value|0x8774
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_element_array
DECL|macro|GL_ELEMENT_ARRAY_ATI
define|#
directive|define
name|GL_ELEMENT_ARRAY_ATI
value|0x8768
DECL|macro|GL_ELEMENT_ARRAY_TYPE_ATI
define|#
directive|define
name|GL_ELEMENT_ARRAY_TYPE_ATI
value|0x8769
DECL|macro|GL_ELEMENT_ARRAY_POINTER_ATI
define|#
directive|define
name|GL_ELEMENT_ARRAY_POINTER_ATI
value|0x876A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_mesh_array
DECL|macro|GL_QUAD_MESH_SUN
define|#
directive|define
name|GL_QUAD_MESH_SUN
value|0x8614
DECL|macro|GL_TRIANGLE_MESH_SUN
define|#
directive|define
name|GL_TRIANGLE_MESH_SUN
value|0x8615
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_slice_accum
DECL|macro|GL_SLICE_ACCUM_SUN
define|#
directive|define
name|GL_SLICE_ACCUM_SUN
value|0x85CC
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_multisample_filter_hint
DECL|macro|GL_MULTISAMPLE_FILTER_HINT_NV
define|#
directive|define
name|GL_MULTISAMPLE_FILTER_HINT_NV
value|0x8534
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_depth_clamp
DECL|macro|GL_DEPTH_CLAMP_NV
define|#
directive|define
name|GL_DEPTH_CLAMP_NV
value|0x864F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_occlusion_query
DECL|macro|GL_PIXEL_COUNTER_BITS_NV
define|#
directive|define
name|GL_PIXEL_COUNTER_BITS_NV
value|0x8864
DECL|macro|GL_CURRENT_OCCLUSION_QUERY_ID_NV
define|#
directive|define
name|GL_CURRENT_OCCLUSION_QUERY_ID_NV
value|0x8865
DECL|macro|GL_PIXEL_COUNT_NV
define|#
directive|define
name|GL_PIXEL_COUNT_NV
value|0x8866
DECL|macro|GL_PIXEL_COUNT_AVAILABLE_NV
define|#
directive|define
name|GL_PIXEL_COUNT_AVAILABLE_NV
value|0x8867
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_point_sprite
DECL|macro|GL_POINT_SPRITE_NV
define|#
directive|define
name|GL_POINT_SPRITE_NV
value|0x8861
DECL|macro|GL_COORD_REPLACE_NV
define|#
directive|define
name|GL_COORD_REPLACE_NV
value|0x8862
DECL|macro|GL_POINT_SPRITE_R_MODE_NV
define|#
directive|define
name|GL_POINT_SPRITE_R_MODE_NV
value|0x8863
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_shader3
DECL|macro|GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
define|#
directive|define
name|GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
value|0x8850
DECL|macro|GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
define|#
directive|define
name|GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
value|0x8851
DECL|macro|GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
define|#
directive|define
name|GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
value|0x8852
DECL|macro|GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
define|#
directive|define
name|GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
value|0x8853
DECL|macro|GL_OFFSET_HILO_TEXTURE_2D_NV
define|#
directive|define
name|GL_OFFSET_HILO_TEXTURE_2D_NV
value|0x8854
DECL|macro|GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
define|#
directive|define
name|GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
value|0x8855
DECL|macro|GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
define|#
directive|define
name|GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
value|0x8856
DECL|macro|GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
define|#
directive|define
name|GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
value|0x8857
DECL|macro|GL_DEPENDENT_HILO_TEXTURE_2D_NV
define|#
directive|define
name|GL_DEPENDENT_HILO_TEXTURE_2D_NV
value|0x8858
DECL|macro|GL_DEPENDENT_RGB_TEXTURE_3D_NV
define|#
directive|define
name|GL_DEPENDENT_RGB_TEXTURE_3D_NV
value|0x8859
DECL|macro|GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
define|#
directive|define
name|GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
value|0x885A
DECL|macro|GL_DOT_PRODUCT_PASS_THROUGH_NV
define|#
directive|define
name|GL_DOT_PRODUCT_PASS_THROUGH_NV
value|0x885B
DECL|macro|GL_DOT_PRODUCT_TEXTURE_1D_NV
define|#
directive|define
name|GL_DOT_PRODUCT_TEXTURE_1D_NV
value|0x885C
DECL|macro|GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
define|#
directive|define
name|GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
value|0x885D
DECL|macro|GL_HILO8_NV
define|#
directive|define
name|GL_HILO8_NV
value|0x885E
DECL|macro|GL_SIGNED_HILO8_NV
define|#
directive|define
name|GL_SIGNED_HILO8_NV
value|0x885F
DECL|macro|GL_FORCE_BLUE_TO_ONE_NV
define|#
directive|define
name|GL_FORCE_BLUE_TO_ONE_NV
value|0x8860
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program1_1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_shadow_funcs
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_stencil_two_side
DECL|macro|GL_STENCIL_TEST_TWO_SIDE_EXT
define|#
directive|define
name|GL_STENCIL_TEST_TWO_SIDE_EXT
value|0x8910
DECL|macro|GL_ACTIVE_STENCIL_FACE_EXT
define|#
directive|define
name|GL_ACTIVE_STENCIL_FACE_EXT
value|0x8911
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_text_fragment_shader
DECL|macro|GL_TEXT_FRAGMENT_SHADER_ATI
define|#
directive|define
name|GL_TEXT_FRAGMENT_SHADER_ATI
value|0x8200
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_client_storage
DECL|macro|GL_UNPACK_CLIENT_STORAGE_APPLE
define|#
directive|define
name|GL_UNPACK_CLIENT_STORAGE_APPLE
value|0x85B2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_element_array
DECL|macro|GL_ELEMENT_ARRAY_APPLE
define|#
directive|define
name|GL_ELEMENT_ARRAY_APPLE
value|0x8A0C
DECL|macro|GL_ELEMENT_ARRAY_TYPE_APPLE
define|#
directive|define
name|GL_ELEMENT_ARRAY_TYPE_APPLE
value|0x8A0D
DECL|macro|GL_ELEMENT_ARRAY_POINTER_APPLE
define|#
directive|define
name|GL_ELEMENT_ARRAY_POINTER_APPLE
value|0x8A0E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_fence
DECL|macro|GL_DRAW_PIXELS_APPLE
define|#
directive|define
name|GL_DRAW_PIXELS_APPLE
value|0x8A0A
DECL|macro|GL_FENCE_APPLE
define|#
directive|define
name|GL_FENCE_APPLE
value|0x8A0B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_vertex_array_object
DECL|macro|GL_VERTEX_ARRAY_BINDING_APPLE
define|#
directive|define
name|GL_VERTEX_ARRAY_BINDING_APPLE
value|0x85B5
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_vertex_array_range
DECL|macro|GL_VERTEX_ARRAY_RANGE_APPLE
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_APPLE
value|0x851D
DECL|macro|GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
value|0x851E
DECL|macro|GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
define|#
directive|define
name|GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
value|0x851F
DECL|macro|GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
define|#
directive|define
name|GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
value|0x8521
DECL|macro|GL_STORAGE_CLIENT_APPLE
define|#
directive|define
name|GL_STORAGE_CLIENT_APPLE
value|0x85B4
DECL|macro|GL_STORAGE_CACHED_APPLE
define|#
directive|define
name|GL_STORAGE_CACHED_APPLE
value|0x85BE
DECL|macro|GL_STORAGE_SHARED_APPLE
define|#
directive|define
name|GL_STORAGE_SHARED_APPLE
value|0x85BF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_ycbcr_422
DECL|macro|GL_YCBCR_422_APPLE
define|#
directive|define
name|GL_YCBCR_422_APPLE
value|0x85B9
DECL|macro|GL_UNSIGNED_SHORT_8_8_APPLE
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_APPLE
value|0x85BA
DECL|macro|GL_UNSIGNED_SHORT_8_8_REV_APPLE
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_REV_APPLE
value|0x85BB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_S3_s3tc
DECL|macro|GL_RGB_S3TC
define|#
directive|define
name|GL_RGB_S3TC
value|0x83A0
DECL|macro|GL_RGB4_S3TC
define|#
directive|define
name|GL_RGB4_S3TC
value|0x83A1
DECL|macro|GL_RGBA_S3TC
define|#
directive|define
name|GL_RGBA_S3TC
value|0x83A2
DECL|macro|GL_RGBA4_S3TC
define|#
directive|define
name|GL_RGBA4_S3TC
value|0x83A3
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_draw_buffers
DECL|macro|GL_MAX_DRAW_BUFFERS_ATI
define|#
directive|define
name|GL_MAX_DRAW_BUFFERS_ATI
value|0x8824
DECL|macro|GL_DRAW_BUFFER0_ATI
define|#
directive|define
name|GL_DRAW_BUFFER0_ATI
value|0x8825
DECL|macro|GL_DRAW_BUFFER1_ATI
define|#
directive|define
name|GL_DRAW_BUFFER1_ATI
value|0x8826
DECL|macro|GL_DRAW_BUFFER2_ATI
define|#
directive|define
name|GL_DRAW_BUFFER2_ATI
value|0x8827
DECL|macro|GL_DRAW_BUFFER3_ATI
define|#
directive|define
name|GL_DRAW_BUFFER3_ATI
value|0x8828
DECL|macro|GL_DRAW_BUFFER4_ATI
define|#
directive|define
name|GL_DRAW_BUFFER4_ATI
value|0x8829
DECL|macro|GL_DRAW_BUFFER5_ATI
define|#
directive|define
name|GL_DRAW_BUFFER5_ATI
value|0x882A
DECL|macro|GL_DRAW_BUFFER6_ATI
define|#
directive|define
name|GL_DRAW_BUFFER6_ATI
value|0x882B
DECL|macro|GL_DRAW_BUFFER7_ATI
define|#
directive|define
name|GL_DRAW_BUFFER7_ATI
value|0x882C
DECL|macro|GL_DRAW_BUFFER8_ATI
define|#
directive|define
name|GL_DRAW_BUFFER8_ATI
value|0x882D
DECL|macro|GL_DRAW_BUFFER9_ATI
define|#
directive|define
name|GL_DRAW_BUFFER9_ATI
value|0x882E
DECL|macro|GL_DRAW_BUFFER10_ATI
define|#
directive|define
name|GL_DRAW_BUFFER10_ATI
value|0x882F
DECL|macro|GL_DRAW_BUFFER11_ATI
define|#
directive|define
name|GL_DRAW_BUFFER11_ATI
value|0x8830
DECL|macro|GL_DRAW_BUFFER12_ATI
define|#
directive|define
name|GL_DRAW_BUFFER12_ATI
value|0x8831
DECL|macro|GL_DRAW_BUFFER13_ATI
define|#
directive|define
name|GL_DRAW_BUFFER13_ATI
value|0x8832
DECL|macro|GL_DRAW_BUFFER14_ATI
define|#
directive|define
name|GL_DRAW_BUFFER14_ATI
value|0x8833
DECL|macro|GL_DRAW_BUFFER15_ATI
define|#
directive|define
name|GL_DRAW_BUFFER15_ATI
value|0x8834
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_pixel_format_float
DECL|macro|GL_TYPE_RGBA_FLOAT_ATI
define|#
directive|define
name|GL_TYPE_RGBA_FLOAT_ATI
value|0x8820
DECL|macro|GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
define|#
directive|define
name|GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
value|0x8835
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_texture_env_combine3
DECL|macro|GL_MODULATE_ADD_ATI
define|#
directive|define
name|GL_MODULATE_ADD_ATI
value|0x8744
DECL|macro|GL_MODULATE_SIGNED_ADD_ATI
define|#
directive|define
name|GL_MODULATE_SIGNED_ADD_ATI
value|0x8745
DECL|macro|GL_MODULATE_SUBTRACT_ATI
define|#
directive|define
name|GL_MODULATE_SUBTRACT_ATI
value|0x8746
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_texture_float
DECL|macro|GL_RGBA_FLOAT32_ATI
define|#
directive|define
name|GL_RGBA_FLOAT32_ATI
value|0x8814
DECL|macro|GL_RGB_FLOAT32_ATI
define|#
directive|define
name|GL_RGB_FLOAT32_ATI
value|0x8815
DECL|macro|GL_ALPHA_FLOAT32_ATI
define|#
directive|define
name|GL_ALPHA_FLOAT32_ATI
value|0x8816
DECL|macro|GL_INTENSITY_FLOAT32_ATI
define|#
directive|define
name|GL_INTENSITY_FLOAT32_ATI
value|0x8817
DECL|macro|GL_LUMINANCE_FLOAT32_ATI
define|#
directive|define
name|GL_LUMINANCE_FLOAT32_ATI
value|0x8818
DECL|macro|GL_LUMINANCE_ALPHA_FLOAT32_ATI
define|#
directive|define
name|GL_LUMINANCE_ALPHA_FLOAT32_ATI
value|0x8819
DECL|macro|GL_RGBA_FLOAT16_ATI
define|#
directive|define
name|GL_RGBA_FLOAT16_ATI
value|0x881A
DECL|macro|GL_RGB_FLOAT16_ATI
define|#
directive|define
name|GL_RGB_FLOAT16_ATI
value|0x881B
DECL|macro|GL_ALPHA_FLOAT16_ATI
define|#
directive|define
name|GL_ALPHA_FLOAT16_ATI
value|0x881C
DECL|macro|GL_INTENSITY_FLOAT16_ATI
define|#
directive|define
name|GL_INTENSITY_FLOAT16_ATI
value|0x881D
DECL|macro|GL_LUMINANCE_FLOAT16_ATI
define|#
directive|define
name|GL_LUMINANCE_FLOAT16_ATI
value|0x881E
DECL|macro|GL_LUMINANCE_ALPHA_FLOAT16_ATI
define|#
directive|define
name|GL_LUMINANCE_ALPHA_FLOAT16_ATI
value|0x881F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_float_buffer
DECL|macro|GL_FLOAT_R_NV
define|#
directive|define
name|GL_FLOAT_R_NV
value|0x8880
DECL|macro|GL_FLOAT_RG_NV
define|#
directive|define
name|GL_FLOAT_RG_NV
value|0x8881
DECL|macro|GL_FLOAT_RGB_NV
define|#
directive|define
name|GL_FLOAT_RGB_NV
value|0x8882
DECL|macro|GL_FLOAT_RGBA_NV
define|#
directive|define
name|GL_FLOAT_RGBA_NV
value|0x8883
DECL|macro|GL_FLOAT_R16_NV
define|#
directive|define
name|GL_FLOAT_R16_NV
value|0x8884
DECL|macro|GL_FLOAT_R32_NV
define|#
directive|define
name|GL_FLOAT_R32_NV
value|0x8885
DECL|macro|GL_FLOAT_RG16_NV
define|#
directive|define
name|GL_FLOAT_RG16_NV
value|0x8886
DECL|macro|GL_FLOAT_RG32_NV
define|#
directive|define
name|GL_FLOAT_RG32_NV
value|0x8887
DECL|macro|GL_FLOAT_RGB16_NV
define|#
directive|define
name|GL_FLOAT_RGB16_NV
value|0x8888
DECL|macro|GL_FLOAT_RGB32_NV
define|#
directive|define
name|GL_FLOAT_RGB32_NV
value|0x8889
DECL|macro|GL_FLOAT_RGBA16_NV
define|#
directive|define
name|GL_FLOAT_RGBA16_NV
value|0x888A
DECL|macro|GL_FLOAT_RGBA32_NV
define|#
directive|define
name|GL_FLOAT_RGBA32_NV
value|0x888B
DECL|macro|GL_TEXTURE_FLOAT_COMPONENTS_NV
define|#
directive|define
name|GL_TEXTURE_FLOAT_COMPONENTS_NV
value|0x888C
DECL|macro|GL_FLOAT_CLEAR_COLOR_VALUE_NV
define|#
directive|define
name|GL_FLOAT_CLEAR_COLOR_VALUE_NV
value|0x888D
DECL|macro|GL_FLOAT_RGBA_MODE_NV
define|#
directive|define
name|GL_FLOAT_RGBA_MODE_NV
value|0x888E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program
DECL|macro|GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
define|#
directive|define
name|GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
value|0x8868
DECL|macro|GL_FRAGMENT_PROGRAM_NV
define|#
directive|define
name|GL_FRAGMENT_PROGRAM_NV
value|0x8870
DECL|macro|GL_MAX_TEXTURE_COORDS_NV
define|#
directive|define
name|GL_MAX_TEXTURE_COORDS_NV
value|0x8871
DECL|macro|GL_MAX_TEXTURE_IMAGE_UNITS_NV
define|#
directive|define
name|GL_MAX_TEXTURE_IMAGE_UNITS_NV
value|0x8872
DECL|macro|GL_FRAGMENT_PROGRAM_BINDING_NV
define|#
directive|define
name|GL_FRAGMENT_PROGRAM_BINDING_NV
value|0x8873
DECL|macro|GL_PROGRAM_ERROR_STRING_NV
define|#
directive|define
name|GL_PROGRAM_ERROR_STRING_NV
value|0x8874
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_half_float
DECL|macro|GL_HALF_FLOAT_NV
define|#
directive|define
name|GL_HALF_FLOAT_NV
value|0x140B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_pixel_data_range
DECL|macro|GL_WRITE_PIXEL_DATA_RANGE_NV
define|#
directive|define
name|GL_WRITE_PIXEL_DATA_RANGE_NV
value|0x8878
DECL|macro|GL_READ_PIXEL_DATA_RANGE_NV
define|#
directive|define
name|GL_READ_PIXEL_DATA_RANGE_NV
value|0x8879
DECL|macro|GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
define|#
directive|define
name|GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
value|0x887A
DECL|macro|GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
define|#
directive|define
name|GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
value|0x887B
DECL|macro|GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
define|#
directive|define
name|GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
value|0x887C
DECL|macro|GL_READ_PIXEL_DATA_RANGE_POINTER_NV
define|#
directive|define
name|GL_READ_PIXEL_DATA_RANGE_POINTER_NV
value|0x887D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_primitive_restart
DECL|macro|GL_PRIMITIVE_RESTART_NV
define|#
directive|define
name|GL_PRIMITIVE_RESTART_NV
value|0x8558
DECL|macro|GL_PRIMITIVE_RESTART_INDEX_NV
define|#
directive|define
name|GL_PRIMITIVE_RESTART_INDEX_NV
value|0x8559
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_expand_normal
DECL|macro|GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
define|#
directive|define
name|GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
value|0x888F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_map_object_buffer
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_separate_stencil
DECL|macro|GL_STENCIL_BACK_FUNC_ATI
define|#
directive|define
name|GL_STENCIL_BACK_FUNC_ATI
value|0x8800
DECL|macro|GL_STENCIL_BACK_FAIL_ATI
define|#
directive|define
name|GL_STENCIL_BACK_FAIL_ATI
value|0x8801
DECL|macro|GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
define|#
directive|define
name|GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
value|0x8802
DECL|macro|GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
define|#
directive|define
name|GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
value|0x8803
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_vertex_attrib_array_object
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OES_read_format
DECL|macro|GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
define|#
directive|define
name|GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
value|0x8B9A
DECL|macro|GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
define|#
directive|define
name|GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
value|0x8B9B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_depth_bounds_test
DECL|macro|GL_DEPTH_BOUNDS_TEST_EXT
define|#
directive|define
name|GL_DEPTH_BOUNDS_TEST_EXT
value|0x8890
DECL|macro|GL_DEPTH_BOUNDS_EXT
define|#
directive|define
name|GL_DEPTH_BOUNDS_EXT
value|0x8891
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_mirror_clamp
DECL|macro|GL_MIRROR_CLAMP_EXT
define|#
directive|define
name|GL_MIRROR_CLAMP_EXT
value|0x8742
DECL|macro|GL_MIRROR_CLAMP_TO_EDGE_EXT
define|#
directive|define
name|GL_MIRROR_CLAMP_TO_EDGE_EXT
value|0x8743
DECL|macro|GL_MIRROR_CLAMP_TO_BORDER_EXT
define|#
directive|define
name|GL_MIRROR_CLAMP_TO_BORDER_EXT
value|0x8912
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_equation_separate
DECL|macro|GL_BLEND_EQUATION_RGB_EXT
define|#
directive|define
name|GL_BLEND_EQUATION_RGB_EXT
value|0x8009
DECL|macro|GL_BLEND_EQUATION_ALPHA_EXT
define|#
directive|define
name|GL_BLEND_EQUATION_ALPHA_EXT
value|0x883D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_pack_invert
DECL|macro|GL_PACK_INVERT_MESA
define|#
directive|define
name|GL_PACK_INVERT_MESA
value|0x8758
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_ycbcr_texture
DECL|macro|GL_UNSIGNED_SHORT_8_8_MESA
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_MESA
value|0x85BA
DECL|macro|GL_UNSIGNED_SHORT_8_8_REV_MESA
define|#
directive|define
name|GL_UNSIGNED_SHORT_8_8_REV_MESA
value|0x85BB
DECL|macro|GL_YCBCR_MESA
define|#
directive|define
name|GL_YCBCR_MESA
value|0x8757
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_pixel_buffer_object
DECL|macro|GL_PIXEL_PACK_BUFFER_EXT
define|#
directive|define
name|GL_PIXEL_PACK_BUFFER_EXT
value|0x88EB
DECL|macro|GL_PIXEL_UNPACK_BUFFER_EXT
define|#
directive|define
name|GL_PIXEL_UNPACK_BUFFER_EXT
value|0x88EC
DECL|macro|GL_PIXEL_PACK_BUFFER_BINDING_EXT
define|#
directive|define
name|GL_PIXEL_PACK_BUFFER_BINDING_EXT
value|0x88ED
DECL|macro|GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
define|#
directive|define
name|GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
value|0x88EF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program_option
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program2
DECL|macro|GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
value|0x88F4
DECL|macro|GL_MAX_PROGRAM_CALL_DEPTH_NV
define|#
directive|define
name|GL_MAX_PROGRAM_CALL_DEPTH_NV
value|0x88F5
DECL|macro|GL_MAX_PROGRAM_IF_DEPTH_NV
define|#
directive|define
name|GL_MAX_PROGRAM_IF_DEPTH_NV
value|0x88F6
DECL|macro|GL_MAX_PROGRAM_LOOP_DEPTH_NV
define|#
directive|define
name|GL_MAX_PROGRAM_LOOP_DEPTH_NV
value|0x88F7
DECL|macro|GL_MAX_PROGRAM_LOOP_COUNT_NV
define|#
directive|define
name|GL_MAX_PROGRAM_LOOP_COUNT_NV
value|0x88F8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program2_option
comment|/* reuse GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV */
comment|/* reuse GL_MAX_PROGRAM_CALL_DEPTH_NV */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program3
comment|/* reuse GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_object
DECL|macro|GL_INVALID_FRAMEBUFFER_OPERATION_EXT
define|#
directive|define
name|GL_INVALID_FRAMEBUFFER_OPERATION_EXT
value|0x0506
DECL|macro|GL_MAX_RENDERBUFFER_SIZE_EXT
define|#
directive|define
name|GL_MAX_RENDERBUFFER_SIZE_EXT
value|0x84E8
DECL|macro|GL_FRAMEBUFFER_BINDING_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_BINDING_EXT
value|0x8CA6
DECL|macro|GL_RENDERBUFFER_BINDING_EXT
define|#
directive|define
name|GL_RENDERBUFFER_BINDING_EXT
value|0x8CA7
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
value|0x8CD0
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
value|0x8CD1
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
value|0x8CD2
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
value|0x8CD3
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
value|0x8CD4
DECL|macro|GL_FRAMEBUFFER_COMPLETE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_COMPLETE_EXT
value|0x8CD5
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
value|0x8CD6
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
value|0x8CD7
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
value|0x8CD9
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
value|0x8CDA
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
value|0x8CDB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
value|0x8CDC
DECL|macro|GL_FRAMEBUFFER_UNSUPPORTED_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_UNSUPPORTED_EXT
value|0x8CDD
DECL|macro|GL_MAX_COLOR_ATTACHMENTS_EXT
define|#
directive|define
name|GL_MAX_COLOR_ATTACHMENTS_EXT
value|0x8CDF
DECL|macro|GL_COLOR_ATTACHMENT0_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT0_EXT
value|0x8CE0
DECL|macro|GL_COLOR_ATTACHMENT1_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT1_EXT
value|0x8CE1
DECL|macro|GL_COLOR_ATTACHMENT2_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT2_EXT
value|0x8CE2
DECL|macro|GL_COLOR_ATTACHMENT3_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT3_EXT
value|0x8CE3
DECL|macro|GL_COLOR_ATTACHMENT4_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT4_EXT
value|0x8CE4
DECL|macro|GL_COLOR_ATTACHMENT5_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT5_EXT
value|0x8CE5
DECL|macro|GL_COLOR_ATTACHMENT6_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT6_EXT
value|0x8CE6
DECL|macro|GL_COLOR_ATTACHMENT7_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT7_EXT
value|0x8CE7
DECL|macro|GL_COLOR_ATTACHMENT8_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT8_EXT
value|0x8CE8
DECL|macro|GL_COLOR_ATTACHMENT9_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT9_EXT
value|0x8CE9
DECL|macro|GL_COLOR_ATTACHMENT10_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT10_EXT
value|0x8CEA
DECL|macro|GL_COLOR_ATTACHMENT11_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT11_EXT
value|0x8CEB
DECL|macro|GL_COLOR_ATTACHMENT12_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT12_EXT
value|0x8CEC
DECL|macro|GL_COLOR_ATTACHMENT13_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT13_EXT
value|0x8CED
DECL|macro|GL_COLOR_ATTACHMENT14_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT14_EXT
value|0x8CEE
DECL|macro|GL_COLOR_ATTACHMENT15_EXT
define|#
directive|define
name|GL_COLOR_ATTACHMENT15_EXT
value|0x8CEF
DECL|macro|GL_DEPTH_ATTACHMENT_EXT
define|#
directive|define
name|GL_DEPTH_ATTACHMENT_EXT
value|0x8D00
DECL|macro|GL_STENCIL_ATTACHMENT_EXT
define|#
directive|define
name|GL_STENCIL_ATTACHMENT_EXT
value|0x8D20
DECL|macro|GL_FRAMEBUFFER_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_EXT
value|0x8D40
DECL|macro|GL_RENDERBUFFER_EXT
define|#
directive|define
name|GL_RENDERBUFFER_EXT
value|0x8D41
DECL|macro|GL_RENDERBUFFER_WIDTH_EXT
define|#
directive|define
name|GL_RENDERBUFFER_WIDTH_EXT
value|0x8D42
DECL|macro|GL_RENDERBUFFER_HEIGHT_EXT
define|#
directive|define
name|GL_RENDERBUFFER_HEIGHT_EXT
value|0x8D43
DECL|macro|GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
define|#
directive|define
name|GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
value|0x8D44
DECL|macro|GL_STENCIL_INDEX1_EXT
define|#
directive|define
name|GL_STENCIL_INDEX1_EXT
value|0x8D46
DECL|macro|GL_STENCIL_INDEX4_EXT
define|#
directive|define
name|GL_STENCIL_INDEX4_EXT
value|0x8D47
DECL|macro|GL_STENCIL_INDEX8_EXT
define|#
directive|define
name|GL_STENCIL_INDEX8_EXT
value|0x8D48
DECL|macro|GL_STENCIL_INDEX16_EXT
define|#
directive|define
name|GL_STENCIL_INDEX16_EXT
value|0x8D49
DECL|macro|GL_RENDERBUFFER_RED_SIZE_EXT
define|#
directive|define
name|GL_RENDERBUFFER_RED_SIZE_EXT
value|0x8D50
DECL|macro|GL_RENDERBUFFER_GREEN_SIZE_EXT
define|#
directive|define
name|GL_RENDERBUFFER_GREEN_SIZE_EXT
value|0x8D51
DECL|macro|GL_RENDERBUFFER_BLUE_SIZE_EXT
define|#
directive|define
name|GL_RENDERBUFFER_BLUE_SIZE_EXT
value|0x8D52
DECL|macro|GL_RENDERBUFFER_ALPHA_SIZE_EXT
define|#
directive|define
name|GL_RENDERBUFFER_ALPHA_SIZE_EXT
value|0x8D53
DECL|macro|GL_RENDERBUFFER_DEPTH_SIZE_EXT
define|#
directive|define
name|GL_RENDERBUFFER_DEPTH_SIZE_EXT
value|0x8D54
DECL|macro|GL_RENDERBUFFER_STENCIL_SIZE_EXT
define|#
directive|define
name|GL_RENDERBUFFER_STENCIL_SIZE_EXT
value|0x8D55
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GREMEDY_string_marker
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_packed_depth_stencil
DECL|macro|GL_DEPTH_STENCIL_EXT
define|#
directive|define
name|GL_DEPTH_STENCIL_EXT
value|0x84F9
DECL|macro|GL_UNSIGNED_INT_24_8_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_24_8_EXT
value|0x84FA
DECL|macro|GL_DEPTH24_STENCIL8_EXT
define|#
directive|define
name|GL_DEPTH24_STENCIL8_EXT
value|0x88F0
DECL|macro|GL_TEXTURE_STENCIL_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_STENCIL_SIZE_EXT
value|0x88F1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_stencil_clear_tag
DECL|macro|GL_STENCIL_TAG_BITS_EXT
define|#
directive|define
name|GL_STENCIL_TAG_BITS_EXT
value|0x88F2
DECL|macro|GL_STENCIL_CLEAR_TAG_VALUE_EXT
define|#
directive|define
name|GL_STENCIL_CLEAR_TAG_VALUE_EXT
value|0x88F3
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_sRGB
DECL|macro|GL_SRGB_EXT
define|#
directive|define
name|GL_SRGB_EXT
value|0x8C40
DECL|macro|GL_SRGB8_EXT
define|#
directive|define
name|GL_SRGB8_EXT
value|0x8C41
DECL|macro|GL_SRGB_ALPHA_EXT
define|#
directive|define
name|GL_SRGB_ALPHA_EXT
value|0x8C42
DECL|macro|GL_SRGB8_ALPHA8_EXT
define|#
directive|define
name|GL_SRGB8_ALPHA8_EXT
value|0x8C43
DECL|macro|GL_SLUMINANCE_ALPHA_EXT
define|#
directive|define
name|GL_SLUMINANCE_ALPHA_EXT
value|0x8C44
DECL|macro|GL_SLUMINANCE8_ALPHA8_EXT
define|#
directive|define
name|GL_SLUMINANCE8_ALPHA8_EXT
value|0x8C45
DECL|macro|GL_SLUMINANCE_EXT
define|#
directive|define
name|GL_SLUMINANCE_EXT
value|0x8C46
DECL|macro|GL_SLUMINANCE8_EXT
define|#
directive|define
name|GL_SLUMINANCE8_EXT
value|0x8C47
DECL|macro|GL_COMPRESSED_SRGB_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_EXT
value|0x8C48
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_EXT
value|0x8C49
DECL|macro|GL_COMPRESSED_SLUMINANCE_EXT
define|#
directive|define
name|GL_COMPRESSED_SLUMINANCE_EXT
value|0x8C4A
DECL|macro|GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
define|#
directive|define
name|GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
value|0x8C4B
DECL|macro|GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
value|0x8C4C
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
value|0x8C4D
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
value|0x8C4E
DECL|macro|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
define|#
directive|define
name|GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
value|0x8C4F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_blit
DECL|macro|GL_READ_FRAMEBUFFER_EXT
define|#
directive|define
name|GL_READ_FRAMEBUFFER_EXT
value|0x8CA8
DECL|macro|GL_DRAW_FRAMEBUFFER_EXT
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_EXT
value|0x8CA9
DECL|macro|GL_DRAW_FRAMEBUFFER_BINDING_EXT
define|#
directive|define
name|GL_DRAW_FRAMEBUFFER_BINDING_EXT
value|GL_FRAMEBUFFER_BINDING_EXT
DECL|macro|GL_READ_FRAMEBUFFER_BINDING_EXT
define|#
directive|define
name|GL_READ_FRAMEBUFFER_BINDING_EXT
value|0x8CAA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_multisample
DECL|macro|GL_RENDERBUFFER_SAMPLES_EXT
define|#
directive|define
name|GL_RENDERBUFFER_SAMPLES_EXT
value|0x8CAB
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
value|0x8D56
DECL|macro|GL_MAX_SAMPLES_EXT
define|#
directive|define
name|GL_MAX_SAMPLES_EXT
value|0x8D57
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESAX_texture_stack
DECL|macro|GL_TEXTURE_1D_STACK_MESAX
define|#
directive|define
name|GL_TEXTURE_1D_STACK_MESAX
value|0x8759
DECL|macro|GL_TEXTURE_2D_STACK_MESAX
define|#
directive|define
name|GL_TEXTURE_2D_STACK_MESAX
value|0x875A
DECL|macro|GL_PROXY_TEXTURE_1D_STACK_MESAX
define|#
directive|define
name|GL_PROXY_TEXTURE_1D_STACK_MESAX
value|0x875B
DECL|macro|GL_PROXY_TEXTURE_2D_STACK_MESAX
define|#
directive|define
name|GL_PROXY_TEXTURE_2D_STACK_MESAX
value|0x875C
DECL|macro|GL_TEXTURE_1D_STACK_BINDING_MESAX
define|#
directive|define
name|GL_TEXTURE_1D_STACK_BINDING_MESAX
value|0x875D
DECL|macro|GL_TEXTURE_2D_STACK_BINDING_MESAX
define|#
directive|define
name|GL_TEXTURE_2D_STACK_BINDING_MESAX
value|0x875E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_timer_query
DECL|macro|GL_TIME_ELAPSED_EXT
define|#
directive|define
name|GL_TIME_ELAPSED_EXT
value|0x88BF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_gpu_program_parameters
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_flush_buffer_range
DECL|macro|GL_BUFFER_SERIALIZED_MODIFY_APPLE
define|#
directive|define
name|GL_BUFFER_SERIALIZED_MODIFY_APPLE
value|0x8A12
DECL|macro|GL_BUFFER_FLUSHING_UNMAP_APPLE
define|#
directive|define
name|GL_BUFFER_FLUSHING_UNMAP_APPLE
value|0x8A13
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_gpu_program4
DECL|macro|GL_MIN_PROGRAM_TEXEL_OFFSET_NV
define|#
directive|define
name|GL_MIN_PROGRAM_TEXEL_OFFSET_NV
value|0x8904
DECL|macro|GL_MAX_PROGRAM_TEXEL_OFFSET_NV
define|#
directive|define
name|GL_MAX_PROGRAM_TEXEL_OFFSET_NV
value|0x8905
DECL|macro|GL_PROGRAM_ATTRIB_COMPONENTS_NV
define|#
directive|define
name|GL_PROGRAM_ATTRIB_COMPONENTS_NV
value|0x8906
DECL|macro|GL_PROGRAM_RESULT_COMPONENTS_NV
define|#
directive|define
name|GL_PROGRAM_RESULT_COMPONENTS_NV
value|0x8907
DECL|macro|GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
value|0x8908
DECL|macro|GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
value|0x8909
DECL|macro|GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
value|0x8DA5
DECL|macro|GL_MAX_PROGRAM_GENERIC_RESULTS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_GENERIC_RESULTS_NV
value|0x8DA6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_geometry_program4
DECL|macro|GL_LINES_ADJACENCY_EXT
define|#
directive|define
name|GL_LINES_ADJACENCY_EXT
value|0x000A
DECL|macro|GL_LINE_STRIP_ADJACENCY_EXT
define|#
directive|define
name|GL_LINE_STRIP_ADJACENCY_EXT
value|0x000B
DECL|macro|GL_TRIANGLES_ADJACENCY_EXT
define|#
directive|define
name|GL_TRIANGLES_ADJACENCY_EXT
value|0x000C
DECL|macro|GL_TRIANGLE_STRIP_ADJACENCY_EXT
define|#
directive|define
name|GL_TRIANGLE_STRIP_ADJACENCY_EXT
value|0x000D
DECL|macro|GL_GEOMETRY_PROGRAM_NV
define|#
directive|define
name|GL_GEOMETRY_PROGRAM_NV
value|0x8C26
DECL|macro|GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
define|#
directive|define
name|GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
value|0x8C27
DECL|macro|GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
value|0x8C28
DECL|macro|GL_GEOMETRY_VERTICES_OUT_EXT
define|#
directive|define
name|GL_GEOMETRY_VERTICES_OUT_EXT
value|0x8DDA
DECL|macro|GL_GEOMETRY_INPUT_TYPE_EXT
define|#
directive|define
name|GL_GEOMETRY_INPUT_TYPE_EXT
value|0x8DDB
DECL|macro|GL_GEOMETRY_OUTPUT_TYPE_EXT
define|#
directive|define
name|GL_GEOMETRY_OUTPUT_TYPE_EXT
value|0x8DDC
DECL|macro|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
value|0x8C29
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
value|0x8DA7
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
value|0x8DA8
DECL|macro|GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
value|0x8DA9
DECL|macro|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
value|0x8CD4
DECL|macro|GL_PROGRAM_POINT_SIZE_EXT
define|#
directive|define
name|GL_PROGRAM_POINT_SIZE_EXT
value|0x8642
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_geometry_shader4
DECL|macro|GL_GEOMETRY_SHADER_EXT
define|#
directive|define
name|GL_GEOMETRY_SHADER_EXT
value|0x8DD9
comment|/* reuse GL_GEOMETRY_VERTICES_OUT_EXT */
comment|/* reuse GL_GEOMETRY_INPUT_TYPE_EXT */
comment|/* reuse GL_GEOMETRY_OUTPUT_TYPE_EXT */
comment|/* reuse GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT */
DECL|macro|GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
value|0x8DDD
DECL|macro|GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
value|0x8DDE
DECL|macro|GL_MAX_VARYING_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_VARYING_COMPONENTS_EXT
value|0x8B4B
DECL|macro|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
value|0x8DDF
DECL|macro|GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
value|0x8DE0
DECL|macro|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
value|0x8DE1
comment|/* reuse GL_LINES_ADJACENCY_EXT */
comment|/* reuse GL_LINE_STRIP_ADJACENCY_EXT */
comment|/* reuse GL_TRIANGLES_ADJACENCY_EXT */
comment|/* reuse GL_TRIANGLE_STRIP_ADJACENCY_EXT */
comment|/* reuse GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT */
comment|/* reuse GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT */
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT */
comment|/* reuse GL_PROGRAM_POINT_SIZE_EXT */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program4
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
value|0x88FD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_gpu_shader4
DECL|macro|GL_SAMPLER_1D_ARRAY_EXT
define|#
directive|define
name|GL_SAMPLER_1D_ARRAY_EXT
value|0x8DC0
DECL|macro|GL_SAMPLER_2D_ARRAY_EXT
define|#
directive|define
name|GL_SAMPLER_2D_ARRAY_EXT
value|0x8DC1
DECL|macro|GL_SAMPLER_BUFFER_EXT
define|#
directive|define
name|GL_SAMPLER_BUFFER_EXT
value|0x8DC2
DECL|macro|GL_SAMPLER_1D_ARRAY_SHADOW_EXT
define|#
directive|define
name|GL_SAMPLER_1D_ARRAY_SHADOW_EXT
value|0x8DC3
DECL|macro|GL_SAMPLER_2D_ARRAY_SHADOW_EXT
define|#
directive|define
name|GL_SAMPLER_2D_ARRAY_SHADOW_EXT
value|0x8DC4
DECL|macro|GL_SAMPLER_CUBE_SHADOW_EXT
define|#
directive|define
name|GL_SAMPLER_CUBE_SHADOW_EXT
value|0x8DC5
DECL|macro|GL_UNSIGNED_INT_VEC2_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_VEC2_EXT
value|0x8DC6
DECL|macro|GL_UNSIGNED_INT_VEC3_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_VEC3_EXT
value|0x8DC7
DECL|macro|GL_UNSIGNED_INT_VEC4_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_VEC4_EXT
value|0x8DC8
DECL|macro|GL_INT_SAMPLER_1D_EXT
define|#
directive|define
name|GL_INT_SAMPLER_1D_EXT
value|0x8DC9
DECL|macro|GL_INT_SAMPLER_2D_EXT
define|#
directive|define
name|GL_INT_SAMPLER_2D_EXT
value|0x8DCA
DECL|macro|GL_INT_SAMPLER_3D_EXT
define|#
directive|define
name|GL_INT_SAMPLER_3D_EXT
value|0x8DCB
DECL|macro|GL_INT_SAMPLER_CUBE_EXT
define|#
directive|define
name|GL_INT_SAMPLER_CUBE_EXT
value|0x8DCC
DECL|macro|GL_INT_SAMPLER_2D_RECT_EXT
define|#
directive|define
name|GL_INT_SAMPLER_2D_RECT_EXT
value|0x8DCD
DECL|macro|GL_INT_SAMPLER_1D_ARRAY_EXT
define|#
directive|define
name|GL_INT_SAMPLER_1D_ARRAY_EXT
value|0x8DCE
DECL|macro|GL_INT_SAMPLER_2D_ARRAY_EXT
define|#
directive|define
name|GL_INT_SAMPLER_2D_ARRAY_EXT
value|0x8DCF
DECL|macro|GL_INT_SAMPLER_BUFFER_EXT
define|#
directive|define
name|GL_INT_SAMPLER_BUFFER_EXT
value|0x8DD0
DECL|macro|GL_UNSIGNED_INT_SAMPLER_1D_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_1D_EXT
value|0x8DD1
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_EXT
value|0x8DD2
DECL|macro|GL_UNSIGNED_INT_SAMPLER_3D_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_3D_EXT
value|0x8DD3
DECL|macro|GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
value|0x8DD4
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
value|0x8DD5
DECL|macro|GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
value|0x8DD6
DECL|macro|GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
value|0x8DD7
DECL|macro|GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
value|0x8DD8
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_draw_instanced
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_packed_float
DECL|macro|GL_R11F_G11F_B10F_EXT
define|#
directive|define
name|GL_R11F_G11F_B10F_EXT
value|0x8C3A
DECL|macro|GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
value|0x8C3B
DECL|macro|GL_RGBA_SIGNED_COMPONENTS_EXT
define|#
directive|define
name|GL_RGBA_SIGNED_COMPONENTS_EXT
value|0x8C3C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_array
DECL|macro|GL_TEXTURE_1D_ARRAY_EXT
define|#
directive|define
name|GL_TEXTURE_1D_ARRAY_EXT
value|0x8C18
DECL|macro|GL_PROXY_TEXTURE_1D_ARRAY_EXT
define|#
directive|define
name|GL_PROXY_TEXTURE_1D_ARRAY_EXT
value|0x8C19
DECL|macro|GL_TEXTURE_2D_ARRAY_EXT
define|#
directive|define
name|GL_TEXTURE_2D_ARRAY_EXT
value|0x8C1A
DECL|macro|GL_PROXY_TEXTURE_2D_ARRAY_EXT
define|#
directive|define
name|GL_PROXY_TEXTURE_2D_ARRAY_EXT
value|0x8C1B
DECL|macro|GL_TEXTURE_BINDING_1D_ARRAY_EXT
define|#
directive|define
name|GL_TEXTURE_BINDING_1D_ARRAY_EXT
value|0x8C1C
DECL|macro|GL_TEXTURE_BINDING_2D_ARRAY_EXT
define|#
directive|define
name|GL_TEXTURE_BINDING_2D_ARRAY_EXT
value|0x8C1D
DECL|macro|GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
define|#
directive|define
name|GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
value|0x88FF
DECL|macro|GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
define|#
directive|define
name|GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
value|0x884E
comment|/* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_buffer_object
DECL|macro|GL_TEXTURE_BUFFER_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_EXT
value|0x8C2A
DECL|macro|GL_MAX_TEXTURE_BUFFER_SIZE_EXT
define|#
directive|define
name|GL_MAX_TEXTURE_BUFFER_SIZE_EXT
value|0x8C2B
DECL|macro|GL_TEXTURE_BINDING_BUFFER_EXT
define|#
directive|define
name|GL_TEXTURE_BINDING_BUFFER_EXT
value|0x8C2C
DECL|macro|GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
value|0x8C2D
DECL|macro|GL_TEXTURE_BUFFER_FORMAT_EXT
define|#
directive|define
name|GL_TEXTURE_BUFFER_FORMAT_EXT
value|0x8C2E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_latc
DECL|macro|GL_COMPRESSED_LUMINANCE_LATC1_EXT
define|#
directive|define
name|GL_COMPRESSED_LUMINANCE_LATC1_EXT
value|0x8C70
DECL|macro|GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
define|#
directive|define
name|GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
value|0x8C71
DECL|macro|GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
define|#
directive|define
name|GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
value|0x8C72
DECL|macro|GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
define|#
directive|define
name|GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
value|0x8C73
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_rgtc
DECL|macro|GL_COMPRESSED_RED_RGTC1_EXT
define|#
directive|define
name|GL_COMPRESSED_RED_RGTC1_EXT
value|0x8DBB
DECL|macro|GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
define|#
directive|define
name|GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
value|0x8DBC
DECL|macro|GL_COMPRESSED_RED_GREEN_RGTC2_EXT
define|#
directive|define
name|GL_COMPRESSED_RED_GREEN_RGTC2_EXT
value|0x8DBD
DECL|macro|GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
define|#
directive|define
name|GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
value|0x8DBE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_shared_exponent
DECL|macro|GL_RGB9_E5_EXT
define|#
directive|define
name|GL_RGB9_E5_EXT
value|0x8C3D
DECL|macro|GL_UNSIGNED_INT_5_9_9_9_REV_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_5_9_9_9_REV_EXT
value|0x8C3E
DECL|macro|GL_TEXTURE_SHARED_SIZE_EXT
define|#
directive|define
name|GL_TEXTURE_SHARED_SIZE_EXT
value|0x8C3F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_depth_buffer_float
DECL|macro|GL_DEPTH_COMPONENT32F_NV
define|#
directive|define
name|GL_DEPTH_COMPONENT32F_NV
value|0x8DAB
DECL|macro|GL_DEPTH32F_STENCIL8_NV
define|#
directive|define
name|GL_DEPTH32F_STENCIL8_NV
value|0x8DAC
DECL|macro|GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
define|#
directive|define
name|GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
value|0x8DAD
DECL|macro|GL_DEPTH_BUFFER_FLOAT_MODE_NV
define|#
directive|define
name|GL_DEPTH_BUFFER_FLOAT_MODE_NV
value|0x8DAF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_framebuffer_multisample_coverage
DECL|macro|GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
define|#
directive|define
name|GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
value|0x8CAB
DECL|macro|GL_RENDERBUFFER_COLOR_SAMPLES_NV
define|#
directive|define
name|GL_RENDERBUFFER_COLOR_SAMPLES_NV
value|0x8E10
DECL|macro|GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
define|#
directive|define
name|GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
value|0x8E11
DECL|macro|GL_MULTISAMPLE_COVERAGE_MODES_NV
define|#
directive|define
name|GL_MULTISAMPLE_COVERAGE_MODES_NV
value|0x8E12
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_sRGB
DECL|macro|GL_FRAMEBUFFER_SRGB_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_SRGB_EXT
value|0x8DB9
DECL|macro|GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
value|0x8DBA
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_geometry_shader4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_parameter_buffer_object
DECL|macro|GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
value|0x8DA0
DECL|macro|GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
define|#
directive|define
name|GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
value|0x8DA1
DECL|macro|GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
define|#
directive|define
name|GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
value|0x8DA2
DECL|macro|GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
define|#
directive|define
name|GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
value|0x8DA3
DECL|macro|GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
define|#
directive|define
name|GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
value|0x8DA4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_draw_buffers2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_transform_feedback
DECL|macro|GL_BACK_PRIMARY_COLOR_NV
define|#
directive|define
name|GL_BACK_PRIMARY_COLOR_NV
value|0x8C77
DECL|macro|GL_BACK_SECONDARY_COLOR_NV
define|#
directive|define
name|GL_BACK_SECONDARY_COLOR_NV
value|0x8C78
DECL|macro|GL_TEXTURE_COORD_NV
define|#
directive|define
name|GL_TEXTURE_COORD_NV
value|0x8C79
DECL|macro|GL_CLIP_DISTANCE_NV
define|#
directive|define
name|GL_CLIP_DISTANCE_NV
value|0x8C7A
DECL|macro|GL_VERTEX_ID_NV
define|#
directive|define
name|GL_VERTEX_ID_NV
value|0x8C7B
DECL|macro|GL_PRIMITIVE_ID_NV
define|#
directive|define
name|GL_PRIMITIVE_ID_NV
value|0x8C7C
DECL|macro|GL_GENERIC_ATTRIB_NV
define|#
directive|define
name|GL_GENERIC_ATTRIB_NV
value|0x8C7D
DECL|macro|GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
value|0x8C7E
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
value|0x8C7F
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
value|0x8C80
DECL|macro|GL_ACTIVE_VARYINGS_NV
define|#
directive|define
name|GL_ACTIVE_VARYINGS_NV
value|0x8C81
DECL|macro|GL_ACTIVE_VARYING_MAX_LENGTH_NV
define|#
directive|define
name|GL_ACTIVE_VARYING_MAX_LENGTH_NV
value|0x8C82
DECL|macro|GL_TRANSFORM_FEEDBACK_VARYINGS_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_VARYINGS_NV
value|0x8C83
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
value|0x8C84
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
value|0x8C85
DECL|macro|GL_TRANSFORM_FEEDBACK_RECORD_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_RECORD_NV
value|0x8C86
DECL|macro|GL_PRIMITIVES_GENERATED_NV
define|#
directive|define
name|GL_PRIMITIVES_GENERATED_NV
value|0x8C87
DECL|macro|GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
value|0x8C88
DECL|macro|GL_RASTERIZER_DISCARD_NV
define|#
directive|define
name|GL_RASTERIZER_DISCARD_NV
value|0x8C89
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV
value|0x8C8A
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
value|0x8C8B
DECL|macro|GL_INTERLEAVED_ATTRIBS_NV
define|#
directive|define
name|GL_INTERLEAVED_ATTRIBS_NV
value|0x8C8C
DECL|macro|GL_SEPARATE_ATTRIBS_NV
define|#
directive|define
name|GL_SEPARATE_ATTRIBS_NV
value|0x8C8D
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_NV
value|0x8C8E
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
value|0x8C8F
DECL|macro|GL_LAYER_NV
define|#
directive|define
name|GL_LAYER_NV
value|0x8DAA
DECL|macro|GL_NEXT_BUFFER_NV
define|#
directive|define
name|GL_NEXT_BUFFER_NV
value|-2
DECL|macro|GL_SKIP_COMPONENTS4_NV
define|#
directive|define
name|GL_SKIP_COMPONENTS4_NV
value|-3
DECL|macro|GL_SKIP_COMPONENTS3_NV
define|#
directive|define
name|GL_SKIP_COMPONENTS3_NV
value|-4
DECL|macro|GL_SKIP_COMPONENTS2_NV
define|#
directive|define
name|GL_SKIP_COMPONENTS2_NV
value|-5
DECL|macro|GL_SKIP_COMPONENTS1_NV
define|#
directive|define
name|GL_SKIP_COMPONENTS1_NV
value|-6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_bindable_uniform
DECL|macro|GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
define|#
directive|define
name|GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
value|0x8DE2
DECL|macro|GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
define|#
directive|define
name|GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
value|0x8DE3
DECL|macro|GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
define|#
directive|define
name|GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
value|0x8DE4
DECL|macro|GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
define|#
directive|define
name|GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
value|0x8DED
DECL|macro|GL_UNIFORM_BUFFER_EXT
define|#
directive|define
name|GL_UNIFORM_BUFFER_EXT
value|0x8DEE
DECL|macro|GL_UNIFORM_BUFFER_BINDING_EXT
define|#
directive|define
name|GL_UNIFORM_BUFFER_BINDING_EXT
value|0x8DEF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_integer
DECL|macro|GL_RGBA32UI_EXT
define|#
directive|define
name|GL_RGBA32UI_EXT
value|0x8D70
DECL|macro|GL_RGB32UI_EXT
define|#
directive|define
name|GL_RGB32UI_EXT
value|0x8D71
DECL|macro|GL_ALPHA32UI_EXT
define|#
directive|define
name|GL_ALPHA32UI_EXT
value|0x8D72
DECL|macro|GL_INTENSITY32UI_EXT
define|#
directive|define
name|GL_INTENSITY32UI_EXT
value|0x8D73
DECL|macro|GL_LUMINANCE32UI_EXT
define|#
directive|define
name|GL_LUMINANCE32UI_EXT
value|0x8D74
DECL|macro|GL_LUMINANCE_ALPHA32UI_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA32UI_EXT
value|0x8D75
DECL|macro|GL_RGBA16UI_EXT
define|#
directive|define
name|GL_RGBA16UI_EXT
value|0x8D76
DECL|macro|GL_RGB16UI_EXT
define|#
directive|define
name|GL_RGB16UI_EXT
value|0x8D77
DECL|macro|GL_ALPHA16UI_EXT
define|#
directive|define
name|GL_ALPHA16UI_EXT
value|0x8D78
DECL|macro|GL_INTENSITY16UI_EXT
define|#
directive|define
name|GL_INTENSITY16UI_EXT
value|0x8D79
DECL|macro|GL_LUMINANCE16UI_EXT
define|#
directive|define
name|GL_LUMINANCE16UI_EXT
value|0x8D7A
DECL|macro|GL_LUMINANCE_ALPHA16UI_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA16UI_EXT
value|0x8D7B
DECL|macro|GL_RGBA8UI_EXT
define|#
directive|define
name|GL_RGBA8UI_EXT
value|0x8D7C
DECL|macro|GL_RGB8UI_EXT
define|#
directive|define
name|GL_RGB8UI_EXT
value|0x8D7D
DECL|macro|GL_ALPHA8UI_EXT
define|#
directive|define
name|GL_ALPHA8UI_EXT
value|0x8D7E
DECL|macro|GL_INTENSITY8UI_EXT
define|#
directive|define
name|GL_INTENSITY8UI_EXT
value|0x8D7F
DECL|macro|GL_LUMINANCE8UI_EXT
define|#
directive|define
name|GL_LUMINANCE8UI_EXT
value|0x8D80
DECL|macro|GL_LUMINANCE_ALPHA8UI_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA8UI_EXT
value|0x8D81
DECL|macro|GL_RGBA32I_EXT
define|#
directive|define
name|GL_RGBA32I_EXT
value|0x8D82
DECL|macro|GL_RGB32I_EXT
define|#
directive|define
name|GL_RGB32I_EXT
value|0x8D83
DECL|macro|GL_ALPHA32I_EXT
define|#
directive|define
name|GL_ALPHA32I_EXT
value|0x8D84
DECL|macro|GL_INTENSITY32I_EXT
define|#
directive|define
name|GL_INTENSITY32I_EXT
value|0x8D85
DECL|macro|GL_LUMINANCE32I_EXT
define|#
directive|define
name|GL_LUMINANCE32I_EXT
value|0x8D86
DECL|macro|GL_LUMINANCE_ALPHA32I_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA32I_EXT
value|0x8D87
DECL|macro|GL_RGBA16I_EXT
define|#
directive|define
name|GL_RGBA16I_EXT
value|0x8D88
DECL|macro|GL_RGB16I_EXT
define|#
directive|define
name|GL_RGB16I_EXT
value|0x8D89
DECL|macro|GL_ALPHA16I_EXT
define|#
directive|define
name|GL_ALPHA16I_EXT
value|0x8D8A
DECL|macro|GL_INTENSITY16I_EXT
define|#
directive|define
name|GL_INTENSITY16I_EXT
value|0x8D8B
DECL|macro|GL_LUMINANCE16I_EXT
define|#
directive|define
name|GL_LUMINANCE16I_EXT
value|0x8D8C
DECL|macro|GL_LUMINANCE_ALPHA16I_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA16I_EXT
value|0x8D8D
DECL|macro|GL_RGBA8I_EXT
define|#
directive|define
name|GL_RGBA8I_EXT
value|0x8D8E
DECL|macro|GL_RGB8I_EXT
define|#
directive|define
name|GL_RGB8I_EXT
value|0x8D8F
DECL|macro|GL_ALPHA8I_EXT
define|#
directive|define
name|GL_ALPHA8I_EXT
value|0x8D90
DECL|macro|GL_INTENSITY8I_EXT
define|#
directive|define
name|GL_INTENSITY8I_EXT
value|0x8D91
DECL|macro|GL_LUMINANCE8I_EXT
define|#
directive|define
name|GL_LUMINANCE8I_EXT
value|0x8D92
DECL|macro|GL_LUMINANCE_ALPHA8I_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA8I_EXT
value|0x8D93
DECL|macro|GL_RED_INTEGER_EXT
define|#
directive|define
name|GL_RED_INTEGER_EXT
value|0x8D94
DECL|macro|GL_GREEN_INTEGER_EXT
define|#
directive|define
name|GL_GREEN_INTEGER_EXT
value|0x8D95
DECL|macro|GL_BLUE_INTEGER_EXT
define|#
directive|define
name|GL_BLUE_INTEGER_EXT
value|0x8D96
DECL|macro|GL_ALPHA_INTEGER_EXT
define|#
directive|define
name|GL_ALPHA_INTEGER_EXT
value|0x8D97
DECL|macro|GL_RGB_INTEGER_EXT
define|#
directive|define
name|GL_RGB_INTEGER_EXT
value|0x8D98
DECL|macro|GL_RGBA_INTEGER_EXT
define|#
directive|define
name|GL_RGBA_INTEGER_EXT
value|0x8D99
DECL|macro|GL_BGR_INTEGER_EXT
define|#
directive|define
name|GL_BGR_INTEGER_EXT
value|0x8D9A
DECL|macro|GL_BGRA_INTEGER_EXT
define|#
directive|define
name|GL_BGRA_INTEGER_EXT
value|0x8D9B
DECL|macro|GL_LUMINANCE_INTEGER_EXT
define|#
directive|define
name|GL_LUMINANCE_INTEGER_EXT
value|0x8D9C
DECL|macro|GL_LUMINANCE_ALPHA_INTEGER_EXT
define|#
directive|define
name|GL_LUMINANCE_ALPHA_INTEGER_EXT
value|0x8D9D
DECL|macro|GL_RGBA_INTEGER_MODE_EXT
define|#
directive|define
name|GL_RGBA_INTEGER_MODE_EXT
value|0x8D9E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GREMEDY_frame_terminator
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_conditional_render
DECL|macro|GL_QUERY_WAIT_NV
define|#
directive|define
name|GL_QUERY_WAIT_NV
value|0x8E13
DECL|macro|GL_QUERY_NO_WAIT_NV
define|#
directive|define
name|GL_QUERY_NO_WAIT_NV
value|0x8E14
DECL|macro|GL_QUERY_BY_REGION_WAIT_NV
define|#
directive|define
name|GL_QUERY_BY_REGION_WAIT_NV
value|0x8E15
DECL|macro|GL_QUERY_BY_REGION_NO_WAIT_NV
define|#
directive|define
name|GL_QUERY_BY_REGION_NO_WAIT_NV
value|0x8E16
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_present_video
DECL|macro|GL_FRAME_NV
define|#
directive|define
name|GL_FRAME_NV
value|0x8E26
DECL|macro|GL_FIELDS_NV
define|#
directive|define
name|GL_FIELDS_NV
value|0x8E27
DECL|macro|GL_CURRENT_TIME_NV
define|#
directive|define
name|GL_CURRENT_TIME_NV
value|0x8E28
DECL|macro|GL_NUM_FILL_STREAMS_NV
define|#
directive|define
name|GL_NUM_FILL_STREAMS_NV
value|0x8E29
DECL|macro|GL_PRESENT_TIME_NV
define|#
directive|define
name|GL_PRESENT_TIME_NV
value|0x8E2A
DECL|macro|GL_PRESENT_DURATION_NV
define|#
directive|define
name|GL_PRESENT_DURATION_NV
value|0x8E2B
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_transform_feedback
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_EXT
value|0x8C8E
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
value|0x8C84
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
value|0x8C85
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
value|0x8C8F
DECL|macro|GL_INTERLEAVED_ATTRIBS_EXT
define|#
directive|define
name|GL_INTERLEAVED_ATTRIBS_EXT
value|0x8C8C
DECL|macro|GL_SEPARATE_ATTRIBS_EXT
define|#
directive|define
name|GL_SEPARATE_ATTRIBS_EXT
value|0x8C8D
DECL|macro|GL_PRIMITIVES_GENERATED_EXT
define|#
directive|define
name|GL_PRIMITIVES_GENERATED_EXT
value|0x8C87
DECL|macro|GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
value|0x8C88
DECL|macro|GL_RASTERIZER_DISCARD_EXT
define|#
directive|define
name|GL_RASTERIZER_DISCARD_EXT
value|0x8C89
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
value|0x8C8A
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
value|0x8C8B
DECL|macro|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
define|#
directive|define
name|GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
value|0x8C80
DECL|macro|GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
value|0x8C83
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
value|0x8C7F
DECL|macro|GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
value|0x8C76
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_direct_state_access
DECL|macro|GL_PROGRAM_MATRIX_EXT
define|#
directive|define
name|GL_PROGRAM_MATRIX_EXT
value|0x8E2D
DECL|macro|GL_TRANSPOSE_PROGRAM_MATRIX_EXT
define|#
directive|define
name|GL_TRANSPOSE_PROGRAM_MATRIX_EXT
value|0x8E2E
DECL|macro|GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
define|#
directive|define
name|GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
value|0x8E2F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_array_bgra
comment|/* reuse GL_BGRA */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_swizzle
DECL|macro|GL_TEXTURE_SWIZZLE_R_EXT
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_R_EXT
value|0x8E42
DECL|macro|GL_TEXTURE_SWIZZLE_G_EXT
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_G_EXT
value|0x8E43
DECL|macro|GL_TEXTURE_SWIZZLE_B_EXT
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_B_EXT
value|0x8E44
DECL|macro|GL_TEXTURE_SWIZZLE_A_EXT
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_A_EXT
value|0x8E45
DECL|macro|GL_TEXTURE_SWIZZLE_RGBA_EXT
define|#
directive|define
name|GL_TEXTURE_SWIZZLE_RGBA_EXT
value|0x8E46
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_explicit_multisample
DECL|macro|GL_SAMPLE_POSITION_NV
define|#
directive|define
name|GL_SAMPLE_POSITION_NV
value|0x8E50
DECL|macro|GL_SAMPLE_MASK_NV
define|#
directive|define
name|GL_SAMPLE_MASK_NV
value|0x8E51
DECL|macro|GL_SAMPLE_MASK_VALUE_NV
define|#
directive|define
name|GL_SAMPLE_MASK_VALUE_NV
value|0x8E52
DECL|macro|GL_TEXTURE_BINDING_RENDERBUFFER_NV
define|#
directive|define
name|GL_TEXTURE_BINDING_RENDERBUFFER_NV
value|0x8E53
DECL|macro|GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
define|#
directive|define
name|GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
value|0x8E54
DECL|macro|GL_TEXTURE_RENDERBUFFER_NV
define|#
directive|define
name|GL_TEXTURE_RENDERBUFFER_NV
value|0x8E55
DECL|macro|GL_SAMPLER_RENDERBUFFER_NV
define|#
directive|define
name|GL_SAMPLER_RENDERBUFFER_NV
value|0x8E56
DECL|macro|GL_INT_SAMPLER_RENDERBUFFER_NV
define|#
directive|define
name|GL_INT_SAMPLER_RENDERBUFFER_NV
value|0x8E57
DECL|macro|GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
value|0x8E58
DECL|macro|GL_MAX_SAMPLE_MASK_WORDS_NV
define|#
directive|define
name|GL_MAX_SAMPLE_MASK_WORDS_NV
value|0x8E59
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_transform_feedback2
DECL|macro|GL_TRANSFORM_FEEDBACK_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_NV
value|0x8E22
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
value|0x8E23
DECL|macro|GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
value|0x8E24
DECL|macro|GL_TRANSFORM_FEEDBACK_BINDING_NV
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BINDING_NV
value|0x8E25
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_meminfo
DECL|macro|GL_VBO_FREE_MEMORY_ATI
define|#
directive|define
name|GL_VBO_FREE_MEMORY_ATI
value|0x87FB
DECL|macro|GL_TEXTURE_FREE_MEMORY_ATI
define|#
directive|define
name|GL_TEXTURE_FREE_MEMORY_ATI
value|0x87FC
DECL|macro|GL_RENDERBUFFER_FREE_MEMORY_ATI
define|#
directive|define
name|GL_RENDERBUFFER_FREE_MEMORY_ATI
value|0x87FD
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_performance_monitor
DECL|macro|GL_COUNTER_TYPE_AMD
define|#
directive|define
name|GL_COUNTER_TYPE_AMD
value|0x8BC0
DECL|macro|GL_COUNTER_RANGE_AMD
define|#
directive|define
name|GL_COUNTER_RANGE_AMD
value|0x8BC1
DECL|macro|GL_UNSIGNED_INT64_AMD
define|#
directive|define
name|GL_UNSIGNED_INT64_AMD
value|0x8BC2
DECL|macro|GL_PERCENTAGE_AMD
define|#
directive|define
name|GL_PERCENTAGE_AMD
value|0x8BC3
DECL|macro|GL_PERFMON_RESULT_AVAILABLE_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_AVAILABLE_AMD
value|0x8BC4
DECL|macro|GL_PERFMON_RESULT_SIZE_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_SIZE_AMD
value|0x8BC5
DECL|macro|GL_PERFMON_RESULT_AMD
define|#
directive|define
name|GL_PERFMON_RESULT_AMD
value|0x8BC6
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_texture_texture4
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_vertex_shader_tesselator
DECL|macro|GL_SAMPLER_BUFFER_AMD
define|#
directive|define
name|GL_SAMPLER_BUFFER_AMD
value|0x9001
DECL|macro|GL_INT_SAMPLER_BUFFER_AMD
define|#
directive|define
name|GL_INT_SAMPLER_BUFFER_AMD
value|0x9002
DECL|macro|GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
define|#
directive|define
name|GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
value|0x9003
DECL|macro|GL_TESSELLATION_MODE_AMD
define|#
directive|define
name|GL_TESSELLATION_MODE_AMD
value|0x9004
DECL|macro|GL_TESSELLATION_FACTOR_AMD
define|#
directive|define
name|GL_TESSELLATION_FACTOR_AMD
value|0x9005
DECL|macro|GL_DISCRETE_AMD
define|#
directive|define
name|GL_DISCRETE_AMD
value|0x9006
DECL|macro|GL_CONTINUOUS_AMD
define|#
directive|define
name|GL_CONTINUOUS_AMD
value|0x9007
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_provoking_vertex
DECL|macro|GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
define|#
directive|define
name|GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
value|0x8E4C
DECL|macro|GL_FIRST_VERTEX_CONVENTION_EXT
define|#
directive|define
name|GL_FIRST_VERTEX_CONVENTION_EXT
value|0x8E4D
DECL|macro|GL_LAST_VERTEX_CONVENTION_EXT
define|#
directive|define
name|GL_LAST_VERTEX_CONVENTION_EXT
value|0x8E4E
DECL|macro|GL_PROVOKING_VERTEX_EXT
define|#
directive|define
name|GL_PROVOKING_VERTEX_EXT
value|0x8E4F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_snorm
DECL|macro|GL_ALPHA_SNORM
define|#
directive|define
name|GL_ALPHA_SNORM
value|0x9010
DECL|macro|GL_LUMINANCE_SNORM
define|#
directive|define
name|GL_LUMINANCE_SNORM
value|0x9011
DECL|macro|GL_LUMINANCE_ALPHA_SNORM
define|#
directive|define
name|GL_LUMINANCE_ALPHA_SNORM
value|0x9012
DECL|macro|GL_INTENSITY_SNORM
define|#
directive|define
name|GL_INTENSITY_SNORM
value|0x9013
DECL|macro|GL_ALPHA8_SNORM
define|#
directive|define
name|GL_ALPHA8_SNORM
value|0x9014
DECL|macro|GL_LUMINANCE8_SNORM
define|#
directive|define
name|GL_LUMINANCE8_SNORM
value|0x9015
DECL|macro|GL_LUMINANCE8_ALPHA8_SNORM
define|#
directive|define
name|GL_LUMINANCE8_ALPHA8_SNORM
value|0x9016
DECL|macro|GL_INTENSITY8_SNORM
define|#
directive|define
name|GL_INTENSITY8_SNORM
value|0x9017
DECL|macro|GL_ALPHA16_SNORM
define|#
directive|define
name|GL_ALPHA16_SNORM
value|0x9018
DECL|macro|GL_LUMINANCE16_SNORM
define|#
directive|define
name|GL_LUMINANCE16_SNORM
value|0x9019
DECL|macro|GL_LUMINANCE16_ALPHA16_SNORM
define|#
directive|define
name|GL_LUMINANCE16_ALPHA16_SNORM
value|0x901A
DECL|macro|GL_INTENSITY16_SNORM
define|#
directive|define
name|GL_INTENSITY16_SNORM
value|0x901B
comment|/* reuse GL_RED_SNORM */
comment|/* reuse GL_RG_SNORM */
comment|/* reuse GL_RGB_SNORM */
comment|/* reuse GL_RGBA_SNORM */
comment|/* reuse GL_R8_SNORM */
comment|/* reuse GL_RG8_SNORM */
comment|/* reuse GL_RGB8_SNORM */
comment|/* reuse GL_RGBA8_SNORM */
comment|/* reuse GL_R16_SNORM */
comment|/* reuse GL_RG16_SNORM */
comment|/* reuse GL_RGB16_SNORM */
comment|/* reuse GL_RGBA16_SNORM */
comment|/* reuse GL_SIGNED_NORMALIZED */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_draw_buffers_blend
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_texture_range
DECL|macro|GL_TEXTURE_RANGE_LENGTH_APPLE
define|#
directive|define
name|GL_TEXTURE_RANGE_LENGTH_APPLE
value|0x85B7
DECL|macro|GL_TEXTURE_RANGE_POINTER_APPLE
define|#
directive|define
name|GL_TEXTURE_RANGE_POINTER_APPLE
value|0x85B8
DECL|macro|GL_TEXTURE_STORAGE_HINT_APPLE
define|#
directive|define
name|GL_TEXTURE_STORAGE_HINT_APPLE
value|0x85BC
DECL|macro|GL_STORAGE_PRIVATE_APPLE
define|#
directive|define
name|GL_STORAGE_PRIVATE_APPLE
value|0x85BD
comment|/* reuse GL_STORAGE_CACHED_APPLE */
comment|/* reuse GL_STORAGE_SHARED_APPLE */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_float_pixels
DECL|macro|GL_HALF_APPLE
define|#
directive|define
name|GL_HALF_APPLE
value|0x140B
DECL|macro|GL_RGBA_FLOAT32_APPLE
define|#
directive|define
name|GL_RGBA_FLOAT32_APPLE
value|0x8814
DECL|macro|GL_RGB_FLOAT32_APPLE
define|#
directive|define
name|GL_RGB_FLOAT32_APPLE
value|0x8815
DECL|macro|GL_ALPHA_FLOAT32_APPLE
define|#
directive|define
name|GL_ALPHA_FLOAT32_APPLE
value|0x8816
DECL|macro|GL_INTENSITY_FLOAT32_APPLE
define|#
directive|define
name|GL_INTENSITY_FLOAT32_APPLE
value|0x8817
DECL|macro|GL_LUMINANCE_FLOAT32_APPLE
define|#
directive|define
name|GL_LUMINANCE_FLOAT32_APPLE
value|0x8818
DECL|macro|GL_LUMINANCE_ALPHA_FLOAT32_APPLE
define|#
directive|define
name|GL_LUMINANCE_ALPHA_FLOAT32_APPLE
value|0x8819
DECL|macro|GL_RGBA_FLOAT16_APPLE
define|#
directive|define
name|GL_RGBA_FLOAT16_APPLE
value|0x881A
DECL|macro|GL_RGB_FLOAT16_APPLE
define|#
directive|define
name|GL_RGB_FLOAT16_APPLE
value|0x881B
DECL|macro|GL_ALPHA_FLOAT16_APPLE
define|#
directive|define
name|GL_ALPHA_FLOAT16_APPLE
value|0x881C
DECL|macro|GL_INTENSITY_FLOAT16_APPLE
define|#
directive|define
name|GL_INTENSITY_FLOAT16_APPLE
value|0x881D
DECL|macro|GL_LUMINANCE_FLOAT16_APPLE
define|#
directive|define
name|GL_LUMINANCE_FLOAT16_APPLE
value|0x881E
DECL|macro|GL_LUMINANCE_ALPHA_FLOAT16_APPLE
define|#
directive|define
name|GL_LUMINANCE_ALPHA_FLOAT16_APPLE
value|0x881F
DECL|macro|GL_COLOR_FLOAT_APPLE
define|#
directive|define
name|GL_COLOR_FLOAT_APPLE
value|0x8A0F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_vertex_program_evaluators
DECL|macro|GL_VERTEX_ATTRIB_MAP1_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP1_APPLE
value|0x8A00
DECL|macro|GL_VERTEX_ATTRIB_MAP2_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP2_APPLE
value|0x8A01
DECL|macro|GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
value|0x8A02
DECL|macro|GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
value|0x8A03
DECL|macro|GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
value|0x8A04
DECL|macro|GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
value|0x8A05
DECL|macro|GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
value|0x8A06
DECL|macro|GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
value|0x8A07
DECL|macro|GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
value|0x8A08
DECL|macro|GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
define|#
directive|define
name|GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
value|0x8A09
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_aux_depth_stencil
DECL|macro|GL_AUX_DEPTH_STENCIL_APPLE
define|#
directive|define
name|GL_AUX_DEPTH_STENCIL_APPLE
value|0x8A14
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_object_purgeable
DECL|macro|GL_BUFFER_OBJECT_APPLE
define|#
directive|define
name|GL_BUFFER_OBJECT_APPLE
value|0x85B3
DECL|macro|GL_RELEASED_APPLE
define|#
directive|define
name|GL_RELEASED_APPLE
value|0x8A19
DECL|macro|GL_VOLATILE_APPLE
define|#
directive|define
name|GL_VOLATILE_APPLE
value|0x8A1A
DECL|macro|GL_RETAINED_APPLE
define|#
directive|define
name|GL_RETAINED_APPLE
value|0x8A1B
DECL|macro|GL_UNDEFINED_APPLE
define|#
directive|define
name|GL_UNDEFINED_APPLE
value|0x8A1C
DECL|macro|GL_PURGEABLE_APPLE
define|#
directive|define
name|GL_PURGEABLE_APPLE
value|0x8A1D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_row_bytes
DECL|macro|GL_PACK_ROW_BYTES_APPLE
define|#
directive|define
name|GL_PACK_ROW_BYTES_APPLE
value|0x8A15
DECL|macro|GL_UNPACK_ROW_BYTES_APPLE
define|#
directive|define
name|GL_UNPACK_ROW_BYTES_APPLE
value|0x8A16
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_rgb_422
DECL|macro|GL_RGB_422_APPLE
define|#
directive|define
name|GL_RGB_422_APPLE
value|0x8A1F
comment|/* reuse GL_UNSIGNED_SHORT_8_8_APPLE */
comment|/* reuse GL_UNSIGNED_SHORT_8_8_REV_APPLE */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_video_capture
DECL|macro|GL_VIDEO_BUFFER_NV
define|#
directive|define
name|GL_VIDEO_BUFFER_NV
value|0x9020
DECL|macro|GL_VIDEO_BUFFER_BINDING_NV
define|#
directive|define
name|GL_VIDEO_BUFFER_BINDING_NV
value|0x9021
DECL|macro|GL_FIELD_UPPER_NV
define|#
directive|define
name|GL_FIELD_UPPER_NV
value|0x9022
DECL|macro|GL_FIELD_LOWER_NV
define|#
directive|define
name|GL_FIELD_LOWER_NV
value|0x9023
DECL|macro|GL_NUM_VIDEO_CAPTURE_STREAMS_NV
define|#
directive|define
name|GL_NUM_VIDEO_CAPTURE_STREAMS_NV
value|0x9024
DECL|macro|GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
define|#
directive|define
name|GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
value|0x9025
DECL|macro|GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
define|#
directive|define
name|GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
value|0x9026
DECL|macro|GL_LAST_VIDEO_CAPTURE_STATUS_NV
define|#
directive|define
name|GL_LAST_VIDEO_CAPTURE_STATUS_NV
value|0x9027
DECL|macro|GL_VIDEO_BUFFER_PITCH_NV
define|#
directive|define
name|GL_VIDEO_BUFFER_PITCH_NV
value|0x9028
DECL|macro|GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
define|#
directive|define
name|GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
value|0x9029
DECL|macro|GL_VIDEO_COLOR_CONVERSION_MAX_NV
define|#
directive|define
name|GL_VIDEO_COLOR_CONVERSION_MAX_NV
value|0x902A
DECL|macro|GL_VIDEO_COLOR_CONVERSION_MIN_NV
define|#
directive|define
name|GL_VIDEO_COLOR_CONVERSION_MIN_NV
value|0x902B
DECL|macro|GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
define|#
directive|define
name|GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
value|0x902C
DECL|macro|GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
define|#
directive|define
name|GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
value|0x902D
DECL|macro|GL_PARTIAL_SUCCESS_NV
define|#
directive|define
name|GL_PARTIAL_SUCCESS_NV
value|0x902E
DECL|macro|GL_SUCCESS_NV
define|#
directive|define
name|GL_SUCCESS_NV
value|0x902F
DECL|macro|GL_FAILURE_NV
define|#
directive|define
name|GL_FAILURE_NV
value|0x9030
DECL|macro|GL_YCBYCR8_422_NV
define|#
directive|define
name|GL_YCBYCR8_422_NV
value|0x9031
DECL|macro|GL_YCBAYCR8A_4224_NV
define|#
directive|define
name|GL_YCBAYCR8A_4224_NV
value|0x9032
DECL|macro|GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
define|#
directive|define
name|GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
value|0x9033
DECL|macro|GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
define|#
directive|define
name|GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
value|0x9034
DECL|macro|GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
define|#
directive|define
name|GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
value|0x9035
DECL|macro|GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
define|#
directive|define
name|GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
value|0x9036
DECL|macro|GL_Z4Y12Z4CB12Z4CR12_444_NV
define|#
directive|define
name|GL_Z4Y12Z4CB12Z4CR12_444_NV
value|0x9037
DECL|macro|GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
define|#
directive|define
name|GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
value|0x9038
DECL|macro|GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
define|#
directive|define
name|GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
value|0x9039
DECL|macro|GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
define|#
directive|define
name|GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
value|0x903A
DECL|macro|GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
define|#
directive|define
name|GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
value|0x903B
DECL|macro|GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
define|#
directive|define
name|GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
value|0x903C
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_copy_image
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_separate_shader_objects
DECL|macro|GL_ACTIVE_PROGRAM_EXT
define|#
directive|define
name|GL_ACTIVE_PROGRAM_EXT
value|0x8B8D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_parameter_buffer_object2
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_shader_buffer_load
DECL|macro|GL_BUFFER_GPU_ADDRESS_NV
define|#
directive|define
name|GL_BUFFER_GPU_ADDRESS_NV
value|0x8F1D
DECL|macro|GL_GPU_ADDRESS_NV
define|#
directive|define
name|GL_GPU_ADDRESS_NV
value|0x8F34
DECL|macro|GL_MAX_SHADER_BUFFER_ADDRESS_NV
define|#
directive|define
name|GL_MAX_SHADER_BUFFER_ADDRESS_NV
value|0x8F35
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_buffer_unified_memory
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
value|0x8F1E
DECL|macro|GL_ELEMENT_ARRAY_UNIFIED_NV
define|#
directive|define
name|GL_ELEMENT_ARRAY_UNIFIED_NV
value|0x8F1F
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
value|0x8F20
DECL|macro|GL_VERTEX_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_VERTEX_ARRAY_ADDRESS_NV
value|0x8F21
DECL|macro|GL_NORMAL_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_NORMAL_ARRAY_ADDRESS_NV
value|0x8F22
DECL|macro|GL_COLOR_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_COLOR_ARRAY_ADDRESS_NV
value|0x8F23
DECL|macro|GL_INDEX_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_INDEX_ARRAY_ADDRESS_NV
value|0x8F24
DECL|macro|GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
value|0x8F25
DECL|macro|GL_EDGE_FLAG_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_ADDRESS_NV
value|0x8F26
DECL|macro|GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
value|0x8F27
DECL|macro|GL_FOG_COORD_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_FOG_COORD_ARRAY_ADDRESS_NV
value|0x8F28
DECL|macro|GL_ELEMENT_ARRAY_ADDRESS_NV
define|#
directive|define
name|GL_ELEMENT_ARRAY_ADDRESS_NV
value|0x8F29
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
value|0x8F2A
DECL|macro|GL_VERTEX_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_VERTEX_ARRAY_LENGTH_NV
value|0x8F2B
DECL|macro|GL_NORMAL_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_NORMAL_ARRAY_LENGTH_NV
value|0x8F2C
DECL|macro|GL_COLOR_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_COLOR_ARRAY_LENGTH_NV
value|0x8F2D
DECL|macro|GL_INDEX_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_INDEX_ARRAY_LENGTH_NV
value|0x8F2E
DECL|macro|GL_TEXTURE_COORD_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_TEXTURE_COORD_ARRAY_LENGTH_NV
value|0x8F2F
DECL|macro|GL_EDGE_FLAG_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_EDGE_FLAG_ARRAY_LENGTH_NV
value|0x8F30
DECL|macro|GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
value|0x8F31
DECL|macro|GL_FOG_COORD_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_FOG_COORD_ARRAY_LENGTH_NV
value|0x8F32
DECL|macro|GL_ELEMENT_ARRAY_LENGTH_NV
define|#
directive|define
name|GL_ELEMENT_ARRAY_LENGTH_NV
value|0x8F33
DECL|macro|GL_DRAW_INDIRECT_UNIFIED_NV
define|#
directive|define
name|GL_DRAW_INDIRECT_UNIFIED_NV
value|0x8F40
DECL|macro|GL_DRAW_INDIRECT_ADDRESS_NV
define|#
directive|define
name|GL_DRAW_INDIRECT_ADDRESS_NV
value|0x8F41
DECL|macro|GL_DRAW_INDIRECT_LENGTH_NV
define|#
directive|define
name|GL_DRAW_INDIRECT_LENGTH_NV
value|0x8F42
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_barrier
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_shader_stencil_export
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_seamless_cubemap_per_texture
comment|/* reuse GL_TEXTURE_CUBE_MAP_SEAMLESS */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_conservative_depth
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_shader_image_load_store
DECL|macro|GL_MAX_IMAGE_UNITS_EXT
define|#
directive|define
name|GL_MAX_IMAGE_UNITS_EXT
value|0x8F38
DECL|macro|GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
define|#
directive|define
name|GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
value|0x8F39
DECL|macro|GL_IMAGE_BINDING_NAME_EXT
define|#
directive|define
name|GL_IMAGE_BINDING_NAME_EXT
value|0x8F3A
DECL|macro|GL_IMAGE_BINDING_LEVEL_EXT
define|#
directive|define
name|GL_IMAGE_BINDING_LEVEL_EXT
value|0x8F3B
DECL|macro|GL_IMAGE_BINDING_LAYERED_EXT
define|#
directive|define
name|GL_IMAGE_BINDING_LAYERED_EXT
value|0x8F3C
DECL|macro|GL_IMAGE_BINDING_LAYER_EXT
define|#
directive|define
name|GL_IMAGE_BINDING_LAYER_EXT
value|0x8F3D
DECL|macro|GL_IMAGE_BINDING_ACCESS_EXT
define|#
directive|define
name|GL_IMAGE_BINDING_ACCESS_EXT
value|0x8F3E
DECL|macro|GL_IMAGE_1D_EXT
define|#
directive|define
name|GL_IMAGE_1D_EXT
value|0x904C
DECL|macro|GL_IMAGE_2D_EXT
define|#
directive|define
name|GL_IMAGE_2D_EXT
value|0x904D
DECL|macro|GL_IMAGE_3D_EXT
define|#
directive|define
name|GL_IMAGE_3D_EXT
value|0x904E
DECL|macro|GL_IMAGE_2D_RECT_EXT
define|#
directive|define
name|GL_IMAGE_2D_RECT_EXT
value|0x904F
DECL|macro|GL_IMAGE_CUBE_EXT
define|#
directive|define
name|GL_IMAGE_CUBE_EXT
value|0x9050
DECL|macro|GL_IMAGE_BUFFER_EXT
define|#
directive|define
name|GL_IMAGE_BUFFER_EXT
value|0x9051
DECL|macro|GL_IMAGE_1D_ARRAY_EXT
define|#
directive|define
name|GL_IMAGE_1D_ARRAY_EXT
value|0x9052
DECL|macro|GL_IMAGE_2D_ARRAY_EXT
define|#
directive|define
name|GL_IMAGE_2D_ARRAY_EXT
value|0x9053
DECL|macro|GL_IMAGE_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_IMAGE_CUBE_MAP_ARRAY_EXT
value|0x9054
DECL|macro|GL_IMAGE_2D_MULTISAMPLE_EXT
define|#
directive|define
name|GL_IMAGE_2D_MULTISAMPLE_EXT
value|0x9055
DECL|macro|GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
define|#
directive|define
name|GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
value|0x9056
DECL|macro|GL_INT_IMAGE_1D_EXT
define|#
directive|define
name|GL_INT_IMAGE_1D_EXT
value|0x9057
DECL|macro|GL_INT_IMAGE_2D_EXT
define|#
directive|define
name|GL_INT_IMAGE_2D_EXT
value|0x9058
DECL|macro|GL_INT_IMAGE_3D_EXT
define|#
directive|define
name|GL_INT_IMAGE_3D_EXT
value|0x9059
DECL|macro|GL_INT_IMAGE_2D_RECT_EXT
define|#
directive|define
name|GL_INT_IMAGE_2D_RECT_EXT
value|0x905A
DECL|macro|GL_INT_IMAGE_CUBE_EXT
define|#
directive|define
name|GL_INT_IMAGE_CUBE_EXT
value|0x905B
DECL|macro|GL_INT_IMAGE_BUFFER_EXT
define|#
directive|define
name|GL_INT_IMAGE_BUFFER_EXT
value|0x905C
DECL|macro|GL_INT_IMAGE_1D_ARRAY_EXT
define|#
directive|define
name|GL_INT_IMAGE_1D_ARRAY_EXT
value|0x905D
DECL|macro|GL_INT_IMAGE_2D_ARRAY_EXT
define|#
directive|define
name|GL_INT_IMAGE_2D_ARRAY_EXT
value|0x905E
DECL|macro|GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
value|0x905F
DECL|macro|GL_INT_IMAGE_2D_MULTISAMPLE_EXT
define|#
directive|define
name|GL_INT_IMAGE_2D_MULTISAMPLE_EXT
value|0x9060
DECL|macro|GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
define|#
directive|define
name|GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
value|0x9061
DECL|macro|GL_UNSIGNED_INT_IMAGE_1D_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_1D_EXT
value|0x9062
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_EXT
value|0x9063
DECL|macro|GL_UNSIGNED_INT_IMAGE_3D_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_3D_EXT
value|0x9064
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
value|0x9065
DECL|macro|GL_UNSIGNED_INT_IMAGE_CUBE_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_CUBE_EXT
value|0x9066
DECL|macro|GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
value|0x9067
DECL|macro|GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
value|0x9068
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
value|0x9069
DECL|macro|GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
value|0x906A
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
value|0x906B
DECL|macro|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
define|#
directive|define
name|GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
value|0x906C
DECL|macro|GL_MAX_IMAGE_SAMPLES_EXT
define|#
directive|define
name|GL_MAX_IMAGE_SAMPLES_EXT
value|0x906D
DECL|macro|GL_IMAGE_BINDING_FORMAT_EXT
define|#
directive|define
name|GL_IMAGE_BINDING_FORMAT_EXT
value|0x906E
DECL|macro|GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
define|#
directive|define
name|GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
value|0x00000001
DECL|macro|GL_ELEMENT_ARRAY_BARRIER_BIT_EXT
define|#
directive|define
name|GL_ELEMENT_ARRAY_BARRIER_BIT_EXT
value|0x00000002
DECL|macro|GL_UNIFORM_BARRIER_BIT_EXT
define|#
directive|define
name|GL_UNIFORM_BARRIER_BIT_EXT
value|0x00000004
DECL|macro|GL_TEXTURE_FETCH_BARRIER_BIT_EXT
define|#
directive|define
name|GL_TEXTURE_FETCH_BARRIER_BIT_EXT
value|0x00000008
DECL|macro|GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
define|#
directive|define
name|GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
value|0x00000020
DECL|macro|GL_COMMAND_BARRIER_BIT_EXT
define|#
directive|define
name|GL_COMMAND_BARRIER_BIT_EXT
value|0x00000040
DECL|macro|GL_PIXEL_BUFFER_BARRIER_BIT_EXT
define|#
directive|define
name|GL_PIXEL_BUFFER_BARRIER_BIT_EXT
value|0x00000080
DECL|macro|GL_TEXTURE_UPDATE_BARRIER_BIT_EXT
define|#
directive|define
name|GL_TEXTURE_UPDATE_BARRIER_BIT_EXT
value|0x00000100
DECL|macro|GL_BUFFER_UPDATE_BARRIER_BIT_EXT
define|#
directive|define
name|GL_BUFFER_UPDATE_BARRIER_BIT_EXT
value|0x00000200
DECL|macro|GL_FRAMEBUFFER_BARRIER_BIT_EXT
define|#
directive|define
name|GL_FRAMEBUFFER_BARRIER_BIT_EXT
value|0x00000400
DECL|macro|GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
define|#
directive|define
name|GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
value|0x00000800
DECL|macro|GL_ATOMIC_COUNTER_BARRIER_BIT_EXT
define|#
directive|define
name|GL_ATOMIC_COUNTER_BARRIER_BIT_EXT
value|0x00001000
DECL|macro|GL_ALL_BARRIER_BITS_EXT
define|#
directive|define
name|GL_ALL_BARRIER_BITS_EXT
value|0xFFFFFFFF
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_attrib_64bit
comment|/* reuse GL_DOUBLE */
DECL|macro|GL_DOUBLE_VEC2_EXT
define|#
directive|define
name|GL_DOUBLE_VEC2_EXT
value|0x8FFC
DECL|macro|GL_DOUBLE_VEC3_EXT
define|#
directive|define
name|GL_DOUBLE_VEC3_EXT
value|0x8FFD
DECL|macro|GL_DOUBLE_VEC4_EXT
define|#
directive|define
name|GL_DOUBLE_VEC4_EXT
value|0x8FFE
DECL|macro|GL_DOUBLE_MAT2_EXT
define|#
directive|define
name|GL_DOUBLE_MAT2_EXT
value|0x8F46
DECL|macro|GL_DOUBLE_MAT3_EXT
define|#
directive|define
name|GL_DOUBLE_MAT3_EXT
value|0x8F47
DECL|macro|GL_DOUBLE_MAT4_EXT
define|#
directive|define
name|GL_DOUBLE_MAT4_EXT
value|0x8F48
DECL|macro|GL_DOUBLE_MAT2x3_EXT
define|#
directive|define
name|GL_DOUBLE_MAT2x3_EXT
value|0x8F49
DECL|macro|GL_DOUBLE_MAT2x4_EXT
define|#
directive|define
name|GL_DOUBLE_MAT2x4_EXT
value|0x8F4A
DECL|macro|GL_DOUBLE_MAT3x2_EXT
define|#
directive|define
name|GL_DOUBLE_MAT3x2_EXT
value|0x8F4B
DECL|macro|GL_DOUBLE_MAT3x4_EXT
define|#
directive|define
name|GL_DOUBLE_MAT3x4_EXT
value|0x8F4C
DECL|macro|GL_DOUBLE_MAT4x2_EXT
define|#
directive|define
name|GL_DOUBLE_MAT4x2_EXT
value|0x8F4D
DECL|macro|GL_DOUBLE_MAT4x3_EXT
define|#
directive|define
name|GL_DOUBLE_MAT4x3_EXT
value|0x8F4E
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_gpu_program5
DECL|macro|GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
define|#
directive|define
name|GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
value|0x8E5A
DECL|macro|GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
define|#
directive|define
name|GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
value|0x8E5B
DECL|macro|GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
define|#
directive|define
name|GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
value|0x8E5C
DECL|macro|GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
define|#
directive|define
name|GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
value|0x8E5D
DECL|macro|GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
define|#
directive|define
name|GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
value|0x8E5E
DECL|macro|GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
define|#
directive|define
name|GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
value|0x8E5F
DECL|macro|GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV
value|0x8F44
DECL|macro|GL_MAX_PROGRAM_SUBROUTINE_NUM_NV
define|#
directive|define
name|GL_MAX_PROGRAM_SUBROUTINE_NUM_NV
value|0x8F45
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_gpu_shader5
DECL|macro|GL_INT64_NV
define|#
directive|define
name|GL_INT64_NV
value|0x140E
DECL|macro|GL_UNSIGNED_INT64_NV
define|#
directive|define
name|GL_UNSIGNED_INT64_NV
value|0x140F
DECL|macro|GL_INT8_NV
define|#
directive|define
name|GL_INT8_NV
value|0x8FE0
DECL|macro|GL_INT8_VEC2_NV
define|#
directive|define
name|GL_INT8_VEC2_NV
value|0x8FE1
DECL|macro|GL_INT8_VEC3_NV
define|#
directive|define
name|GL_INT8_VEC3_NV
value|0x8FE2
DECL|macro|GL_INT8_VEC4_NV
define|#
directive|define
name|GL_INT8_VEC4_NV
value|0x8FE3
DECL|macro|GL_INT16_NV
define|#
directive|define
name|GL_INT16_NV
value|0x8FE4
DECL|macro|GL_INT16_VEC2_NV
define|#
directive|define
name|GL_INT16_VEC2_NV
value|0x8FE5
DECL|macro|GL_INT16_VEC3_NV
define|#
directive|define
name|GL_INT16_VEC3_NV
value|0x8FE6
DECL|macro|GL_INT16_VEC4_NV
define|#
directive|define
name|GL_INT16_VEC4_NV
value|0x8FE7
DECL|macro|GL_INT64_VEC2_NV
define|#
directive|define
name|GL_INT64_VEC2_NV
value|0x8FE9
DECL|macro|GL_INT64_VEC3_NV
define|#
directive|define
name|GL_INT64_VEC3_NV
value|0x8FEA
DECL|macro|GL_INT64_VEC4_NV
define|#
directive|define
name|GL_INT64_VEC4_NV
value|0x8FEB
DECL|macro|GL_UNSIGNED_INT8_NV
define|#
directive|define
name|GL_UNSIGNED_INT8_NV
value|0x8FEC
DECL|macro|GL_UNSIGNED_INT8_VEC2_NV
define|#
directive|define
name|GL_UNSIGNED_INT8_VEC2_NV
value|0x8FED
DECL|macro|GL_UNSIGNED_INT8_VEC3_NV
define|#
directive|define
name|GL_UNSIGNED_INT8_VEC3_NV
value|0x8FEE
DECL|macro|GL_UNSIGNED_INT8_VEC4_NV
define|#
directive|define
name|GL_UNSIGNED_INT8_VEC4_NV
value|0x8FEF
DECL|macro|GL_UNSIGNED_INT16_NV
define|#
directive|define
name|GL_UNSIGNED_INT16_NV
value|0x8FF0
DECL|macro|GL_UNSIGNED_INT16_VEC2_NV
define|#
directive|define
name|GL_UNSIGNED_INT16_VEC2_NV
value|0x8FF1
DECL|macro|GL_UNSIGNED_INT16_VEC3_NV
define|#
directive|define
name|GL_UNSIGNED_INT16_VEC3_NV
value|0x8FF2
DECL|macro|GL_UNSIGNED_INT16_VEC4_NV
define|#
directive|define
name|GL_UNSIGNED_INT16_VEC4_NV
value|0x8FF3
DECL|macro|GL_UNSIGNED_INT64_VEC2_NV
define|#
directive|define
name|GL_UNSIGNED_INT64_VEC2_NV
value|0x8FF5
DECL|macro|GL_UNSIGNED_INT64_VEC3_NV
define|#
directive|define
name|GL_UNSIGNED_INT64_VEC3_NV
value|0x8FF6
DECL|macro|GL_UNSIGNED_INT64_VEC4_NV
define|#
directive|define
name|GL_UNSIGNED_INT64_VEC4_NV
value|0x8FF7
DECL|macro|GL_FLOAT16_NV
define|#
directive|define
name|GL_FLOAT16_NV
value|0x8FF8
DECL|macro|GL_FLOAT16_VEC2_NV
define|#
directive|define
name|GL_FLOAT16_VEC2_NV
value|0x8FF9
DECL|macro|GL_FLOAT16_VEC3_NV
define|#
directive|define
name|GL_FLOAT16_VEC3_NV
value|0x8FFA
DECL|macro|GL_FLOAT16_VEC4_NV
define|#
directive|define
name|GL_FLOAT16_VEC4_NV
value|0x8FFB
comment|/* reuse GL_PATCHES */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_shader_buffer_store
DECL|macro|GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV
define|#
directive|define
name|GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV
value|0x00000010
comment|/* reuse GL_READ_WRITE */
comment|/* reuse GL_WRITE_ONLY */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_tessellation_program5
DECL|macro|GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
define|#
directive|define
name|GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
value|0x86D8
DECL|macro|GL_TESS_CONTROL_PROGRAM_NV
define|#
directive|define
name|GL_TESS_CONTROL_PROGRAM_NV
value|0x891E
DECL|macro|GL_TESS_EVALUATION_PROGRAM_NV
define|#
directive|define
name|GL_TESS_EVALUATION_PROGRAM_NV
value|0x891F
DECL|macro|GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
define|#
directive|define
name|GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
value|0x8C74
DECL|macro|GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
define|#
directive|define
name|GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
value|0x8C75
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_attrib_integer_64bit
comment|/* reuse GL_INT64_NV */
comment|/* reuse GL_UNSIGNED_INT64_NV */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_multisample_coverage
DECL|macro|GL_COVERAGE_SAMPLES_NV
define|#
directive|define
name|GL_COVERAGE_SAMPLES_NV
value|0x80A9
DECL|macro|GL_COLOR_SAMPLES_NV
define|#
directive|define
name|GL_COLOR_SAMPLES_NV
value|0x8E20
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_name_gen_delete
DECL|macro|GL_DATA_BUFFER_AMD
define|#
directive|define
name|GL_DATA_BUFFER_AMD
value|0x9151
DECL|macro|GL_PERFORMANCE_MONITOR_AMD
define|#
directive|define
name|GL_PERFORMANCE_MONITOR_AMD
value|0x9152
DECL|macro|GL_QUERY_OBJECT_AMD
define|#
directive|define
name|GL_QUERY_OBJECT_AMD
value|0x9153
DECL|macro|GL_VERTEX_ARRAY_OBJECT_AMD
define|#
directive|define
name|GL_VERTEX_ARRAY_OBJECT_AMD
value|0x9154
DECL|macro|GL_SAMPLER_OBJECT_AMD
define|#
directive|define
name|GL_SAMPLER_OBJECT_AMD
value|0x9155
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_debug_output
DECL|macro|GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
define|#
directive|define
name|GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
value|0x9144
DECL|macro|GL_DEBUG_LOGGED_MESSAGES_AMD
define|#
directive|define
name|GL_DEBUG_LOGGED_MESSAGES_AMD
value|0x9145
DECL|macro|GL_DEBUG_SEVERITY_HIGH_AMD
define|#
directive|define
name|GL_DEBUG_SEVERITY_HIGH_AMD
value|0x9146
DECL|macro|GL_DEBUG_SEVERITY_MEDIUM_AMD
define|#
directive|define
name|GL_DEBUG_SEVERITY_MEDIUM_AMD
value|0x9147
DECL|macro|GL_DEBUG_SEVERITY_LOW_AMD
define|#
directive|define
name|GL_DEBUG_SEVERITY_LOW_AMD
value|0x9148
DECL|macro|GL_DEBUG_CATEGORY_API_ERROR_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_API_ERROR_AMD
value|0x9149
DECL|macro|GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
value|0x914A
DECL|macro|GL_DEBUG_CATEGORY_DEPRECATION_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_DEPRECATION_AMD
value|0x914B
DECL|macro|GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
value|0x914C
DECL|macro|GL_DEBUG_CATEGORY_PERFORMANCE_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_PERFORMANCE_AMD
value|0x914D
DECL|macro|GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
value|0x914E
DECL|macro|GL_DEBUG_CATEGORY_APPLICATION_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_APPLICATION_AMD
value|0x914F
DECL|macro|GL_DEBUG_CATEGORY_OTHER_AMD
define|#
directive|define
name|GL_DEBUG_CATEGORY_OTHER_AMD
value|0x9150
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vdpau_interop
DECL|macro|GL_SURFACE_STATE_NV
define|#
directive|define
name|GL_SURFACE_STATE_NV
value|0x86EB
DECL|macro|GL_SURFACE_REGISTERED_NV
define|#
directive|define
name|GL_SURFACE_REGISTERED_NV
value|0x86FD
DECL|macro|GL_SURFACE_MAPPED_NV
define|#
directive|define
name|GL_SURFACE_MAPPED_NV
value|0x8700
DECL|macro|GL_WRITE_DISCARD_NV
define|#
directive|define
name|GL_WRITE_DISCARD_NV
value|0x88BE
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_transform_feedback3_lines_triangles
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_depth_clamp_separate
DECL|macro|GL_DEPTH_CLAMP_NEAR_AMD
define|#
directive|define
name|GL_DEPTH_CLAMP_NEAR_AMD
value|0x901E
DECL|macro|GL_DEPTH_CLAMP_FAR_AMD
define|#
directive|define
name|GL_DEPTH_CLAMP_FAR_AMD
value|0x901F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_sRGB_decode
DECL|macro|GL_TEXTURE_SRGB_DECODE_EXT
define|#
directive|define
name|GL_TEXTURE_SRGB_DECODE_EXT
value|0x8A48
DECL|macro|GL_DECODE_EXT
define|#
directive|define
name|GL_DECODE_EXT
value|0x8A49
DECL|macro|GL_SKIP_DECODE_EXT
define|#
directive|define
name|GL_SKIP_DECODE_EXT
value|0x8A4A
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_multisample
DECL|macro|GL_TEXTURE_COVERAGE_SAMPLES_NV
define|#
directive|define
name|GL_TEXTURE_COVERAGE_SAMPLES_NV
value|0x9045
DECL|macro|GL_TEXTURE_COLOR_SAMPLES_NV
define|#
directive|define
name|GL_TEXTURE_COLOR_SAMPLES_NV
value|0x9046
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_blend_minmax_factor
DECL|macro|GL_FACTOR_MIN_AMD
define|#
directive|define
name|GL_FACTOR_MIN_AMD
value|0x901C
DECL|macro|GL_FACTOR_MAX_AMD
define|#
directive|define
name|GL_FACTOR_MAX_AMD
value|0x901D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_sample_positions
DECL|macro|GL_SUBSAMPLE_DISTANCE_AMD
define|#
directive|define
name|GL_SUBSAMPLE_DISTANCE_AMD
value|0x883F
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_x11_sync_object
DECL|macro|GL_SYNC_X11_FENCE_EXT
define|#
directive|define
name|GL_SYNC_X11_FENCE_EXT
value|0x90E1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_multi_draw_indirect
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_multisample_blit_scaled
DECL|macro|GL_SCALED_RESOLVE_FASTEST_EXT
define|#
directive|define
name|GL_SCALED_RESOLVE_FASTEST_EXT
value|0x90BA
DECL|macro|GL_SCALED_RESOLVE_NICEST_EXT
define|#
directive|define
name|GL_SCALED_RESOLVE_NICEST_EXT
value|0x90BB
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_path_rendering
DECL|macro|GL_PATH_FORMAT_SVG_NV
define|#
directive|define
name|GL_PATH_FORMAT_SVG_NV
value|0x9070
DECL|macro|GL_PATH_FORMAT_PS_NV
define|#
directive|define
name|GL_PATH_FORMAT_PS_NV
value|0x9071
DECL|macro|GL_STANDARD_FONT_NAME_NV
define|#
directive|define
name|GL_STANDARD_FONT_NAME_NV
value|0x9072
DECL|macro|GL_SYSTEM_FONT_NAME_NV
define|#
directive|define
name|GL_SYSTEM_FONT_NAME_NV
value|0x9073
DECL|macro|GL_FILE_NAME_NV
define|#
directive|define
name|GL_FILE_NAME_NV
value|0x9074
DECL|macro|GL_PATH_STROKE_WIDTH_NV
define|#
directive|define
name|GL_PATH_STROKE_WIDTH_NV
value|0x9075
DECL|macro|GL_PATH_END_CAPS_NV
define|#
directive|define
name|GL_PATH_END_CAPS_NV
value|0x9076
DECL|macro|GL_PATH_INITIAL_END_CAP_NV
define|#
directive|define
name|GL_PATH_INITIAL_END_CAP_NV
value|0x9077
DECL|macro|GL_PATH_TERMINAL_END_CAP_NV
define|#
directive|define
name|GL_PATH_TERMINAL_END_CAP_NV
value|0x9078
DECL|macro|GL_PATH_JOIN_STYLE_NV
define|#
directive|define
name|GL_PATH_JOIN_STYLE_NV
value|0x9079
DECL|macro|GL_PATH_MITER_LIMIT_NV
define|#
directive|define
name|GL_PATH_MITER_LIMIT_NV
value|0x907A
DECL|macro|GL_PATH_DASH_CAPS_NV
define|#
directive|define
name|GL_PATH_DASH_CAPS_NV
value|0x907B
DECL|macro|GL_PATH_INITIAL_DASH_CAP_NV
define|#
directive|define
name|GL_PATH_INITIAL_DASH_CAP_NV
value|0x907C
DECL|macro|GL_PATH_TERMINAL_DASH_CAP_NV
define|#
directive|define
name|GL_PATH_TERMINAL_DASH_CAP_NV
value|0x907D
DECL|macro|GL_PATH_DASH_OFFSET_NV
define|#
directive|define
name|GL_PATH_DASH_OFFSET_NV
value|0x907E
DECL|macro|GL_PATH_CLIENT_LENGTH_NV
define|#
directive|define
name|GL_PATH_CLIENT_LENGTH_NV
value|0x907F
DECL|macro|GL_PATH_FILL_MODE_NV
define|#
directive|define
name|GL_PATH_FILL_MODE_NV
value|0x9080
DECL|macro|GL_PATH_FILL_MASK_NV
define|#
directive|define
name|GL_PATH_FILL_MASK_NV
value|0x9081
DECL|macro|GL_PATH_FILL_COVER_MODE_NV
define|#
directive|define
name|GL_PATH_FILL_COVER_MODE_NV
value|0x9082
DECL|macro|GL_PATH_STROKE_COVER_MODE_NV
define|#
directive|define
name|GL_PATH_STROKE_COVER_MODE_NV
value|0x9083
DECL|macro|GL_PATH_STROKE_MASK_NV
define|#
directive|define
name|GL_PATH_STROKE_MASK_NV
value|0x9084
DECL|macro|GL_PATH_SAMPLE_QUALITY_NV
define|#
directive|define
name|GL_PATH_SAMPLE_QUALITY_NV
value|0x9085
DECL|macro|GL_PATH_STROKE_BOUND_NV
define|#
directive|define
name|GL_PATH_STROKE_BOUND_NV
value|0x9086
DECL|macro|GL_PATH_STROKE_OVERSAMPLE_COUNT_NV
define|#
directive|define
name|GL_PATH_STROKE_OVERSAMPLE_COUNT_NV
value|0x9087
DECL|macro|GL_COUNT_UP_NV
define|#
directive|define
name|GL_COUNT_UP_NV
value|0x9088
DECL|macro|GL_COUNT_DOWN_NV
define|#
directive|define
name|GL_COUNT_DOWN_NV
value|0x9089
DECL|macro|GL_PATH_OBJECT_BOUNDING_BOX_NV
define|#
directive|define
name|GL_PATH_OBJECT_BOUNDING_BOX_NV
value|0x908A
DECL|macro|GL_CONVEX_HULL_NV
define|#
directive|define
name|GL_CONVEX_HULL_NV
value|0x908B
DECL|macro|GL_MULTI_HULLS_NV
define|#
directive|define
name|GL_MULTI_HULLS_NV
value|0x908C
DECL|macro|GL_BOUNDING_BOX_NV
define|#
directive|define
name|GL_BOUNDING_BOX_NV
value|0x908D
DECL|macro|GL_TRANSLATE_X_NV
define|#
directive|define
name|GL_TRANSLATE_X_NV
value|0x908E
DECL|macro|GL_TRANSLATE_Y_NV
define|#
directive|define
name|GL_TRANSLATE_Y_NV
value|0x908F
DECL|macro|GL_TRANSLATE_2D_NV
define|#
directive|define
name|GL_TRANSLATE_2D_NV
value|0x9090
DECL|macro|GL_TRANSLATE_3D_NV
define|#
directive|define
name|GL_TRANSLATE_3D_NV
value|0x9091
DECL|macro|GL_AFFINE_2D_NV
define|#
directive|define
name|GL_AFFINE_2D_NV
value|0x9092
DECL|macro|GL_PROJECTIVE_2D_NV
define|#
directive|define
name|GL_PROJECTIVE_2D_NV
value|0x9093
DECL|macro|GL_AFFINE_3D_NV
define|#
directive|define
name|GL_AFFINE_3D_NV
value|0x9094
DECL|macro|GL_PROJECTIVE_3D_NV
define|#
directive|define
name|GL_PROJECTIVE_3D_NV
value|0x9095
DECL|macro|GL_TRANSPOSE_AFFINE_2D_NV
define|#
directive|define
name|GL_TRANSPOSE_AFFINE_2D_NV
value|0x9096
DECL|macro|GL_TRANSPOSE_PROJECTIVE_2D_NV
define|#
directive|define
name|GL_TRANSPOSE_PROJECTIVE_2D_NV
value|0x9097
DECL|macro|GL_TRANSPOSE_AFFINE_3D_NV
define|#
directive|define
name|GL_TRANSPOSE_AFFINE_3D_NV
value|0x9098
DECL|macro|GL_TRANSPOSE_PROJECTIVE_3D_NV
define|#
directive|define
name|GL_TRANSPOSE_PROJECTIVE_3D_NV
value|0x9099
DECL|macro|GL_UTF8_NV
define|#
directive|define
name|GL_UTF8_NV
value|0x909A
DECL|macro|GL_UTF16_NV
define|#
directive|define
name|GL_UTF16_NV
value|0x909B
DECL|macro|GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
define|#
directive|define
name|GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
value|0x909C
DECL|macro|GL_PATH_COMMAND_COUNT_NV
define|#
directive|define
name|GL_PATH_COMMAND_COUNT_NV
value|0x909D
DECL|macro|GL_PATH_COORD_COUNT_NV
define|#
directive|define
name|GL_PATH_COORD_COUNT_NV
value|0x909E
DECL|macro|GL_PATH_DASH_ARRAY_COUNT_NV
define|#
directive|define
name|GL_PATH_DASH_ARRAY_COUNT_NV
value|0x909F
DECL|macro|GL_PATH_COMPUTED_LENGTH_NV
define|#
directive|define
name|GL_PATH_COMPUTED_LENGTH_NV
value|0x90A0
DECL|macro|GL_PATH_FILL_BOUNDING_BOX_NV
define|#
directive|define
name|GL_PATH_FILL_BOUNDING_BOX_NV
value|0x90A1
DECL|macro|GL_PATH_STROKE_BOUNDING_BOX_NV
define|#
directive|define
name|GL_PATH_STROKE_BOUNDING_BOX_NV
value|0x90A2
DECL|macro|GL_SQUARE_NV
define|#
directive|define
name|GL_SQUARE_NV
value|0x90A3
DECL|macro|GL_ROUND_NV
define|#
directive|define
name|GL_ROUND_NV
value|0x90A4
DECL|macro|GL_TRIANGULAR_NV
define|#
directive|define
name|GL_TRIANGULAR_NV
value|0x90A5
DECL|macro|GL_BEVEL_NV
define|#
directive|define
name|GL_BEVEL_NV
value|0x90A6
DECL|macro|GL_MITER_REVERT_NV
define|#
directive|define
name|GL_MITER_REVERT_NV
value|0x90A7
DECL|macro|GL_MITER_TRUNCATE_NV
define|#
directive|define
name|GL_MITER_TRUNCATE_NV
value|0x90A8
DECL|macro|GL_SKIP_MISSING_GLYPH_NV
define|#
directive|define
name|GL_SKIP_MISSING_GLYPH_NV
value|0x90A9
DECL|macro|GL_USE_MISSING_GLYPH_NV
define|#
directive|define
name|GL_USE_MISSING_GLYPH_NV
value|0x90AA
DECL|macro|GL_PATH_ERROR_POSITION_NV
define|#
directive|define
name|GL_PATH_ERROR_POSITION_NV
value|0x90AB
DECL|macro|GL_PATH_FOG_GEN_MODE_NV
define|#
directive|define
name|GL_PATH_FOG_GEN_MODE_NV
value|0x90AC
DECL|macro|GL_ACCUM_ADJACENT_PAIRS_NV
define|#
directive|define
name|GL_ACCUM_ADJACENT_PAIRS_NV
value|0x90AD
DECL|macro|GL_ADJACENT_PAIRS_NV
define|#
directive|define
name|GL_ADJACENT_PAIRS_NV
value|0x90AE
DECL|macro|GL_FIRST_TO_REST_NV
define|#
directive|define
name|GL_FIRST_TO_REST_NV
value|0x90AF
DECL|macro|GL_PATH_GEN_MODE_NV
define|#
directive|define
name|GL_PATH_GEN_MODE_NV
value|0x90B0
DECL|macro|GL_PATH_GEN_COEFF_NV
define|#
directive|define
name|GL_PATH_GEN_COEFF_NV
value|0x90B1
DECL|macro|GL_PATH_GEN_COLOR_FORMAT_NV
define|#
directive|define
name|GL_PATH_GEN_COLOR_FORMAT_NV
value|0x90B2
DECL|macro|GL_PATH_GEN_COMPONENTS_NV
define|#
directive|define
name|GL_PATH_GEN_COMPONENTS_NV
value|0x90B3
DECL|macro|GL_PATH_STENCIL_FUNC_NV
define|#
directive|define
name|GL_PATH_STENCIL_FUNC_NV
value|0x90B7
DECL|macro|GL_PATH_STENCIL_REF_NV
define|#
directive|define
name|GL_PATH_STENCIL_REF_NV
value|0x90B8
DECL|macro|GL_PATH_STENCIL_VALUE_MASK_NV
define|#
directive|define
name|GL_PATH_STENCIL_VALUE_MASK_NV
value|0x90B9
DECL|macro|GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
define|#
directive|define
name|GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
value|0x90BD
DECL|macro|GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
define|#
directive|define
name|GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
value|0x90BE
DECL|macro|GL_PATH_COVER_DEPTH_FUNC_NV
define|#
directive|define
name|GL_PATH_COVER_DEPTH_FUNC_NV
value|0x90BF
DECL|macro|GL_PATH_DASH_OFFSET_RESET_NV
define|#
directive|define
name|GL_PATH_DASH_OFFSET_RESET_NV
value|0x90B4
DECL|macro|GL_MOVE_TO_RESETS_NV
define|#
directive|define
name|GL_MOVE_TO_RESETS_NV
value|0x90B5
DECL|macro|GL_MOVE_TO_CONTINUES_NV
define|#
directive|define
name|GL_MOVE_TO_CONTINUES_NV
value|0x90B6
DECL|macro|GL_CLOSE_PATH_NV
define|#
directive|define
name|GL_CLOSE_PATH_NV
value|0x00
DECL|macro|GL_MOVE_TO_NV
define|#
directive|define
name|GL_MOVE_TO_NV
value|0x02
DECL|macro|GL_RELATIVE_MOVE_TO_NV
define|#
directive|define
name|GL_RELATIVE_MOVE_TO_NV
value|0x03
DECL|macro|GL_LINE_TO_NV
define|#
directive|define
name|GL_LINE_TO_NV
value|0x04
DECL|macro|GL_RELATIVE_LINE_TO_NV
define|#
directive|define
name|GL_RELATIVE_LINE_TO_NV
value|0x05
DECL|macro|GL_HORIZONTAL_LINE_TO_NV
define|#
directive|define
name|GL_HORIZONTAL_LINE_TO_NV
value|0x06
DECL|macro|GL_RELATIVE_HORIZONTAL_LINE_TO_NV
define|#
directive|define
name|GL_RELATIVE_HORIZONTAL_LINE_TO_NV
value|0x07
DECL|macro|GL_VERTICAL_LINE_TO_NV
define|#
directive|define
name|GL_VERTICAL_LINE_TO_NV
value|0x08
DECL|macro|GL_RELATIVE_VERTICAL_LINE_TO_NV
define|#
directive|define
name|GL_RELATIVE_VERTICAL_LINE_TO_NV
value|0x09
DECL|macro|GL_QUADRATIC_CURVE_TO_NV
define|#
directive|define
name|GL_QUADRATIC_CURVE_TO_NV
value|0x0A
DECL|macro|GL_RELATIVE_QUADRATIC_CURVE_TO_NV
define|#
directive|define
name|GL_RELATIVE_QUADRATIC_CURVE_TO_NV
value|0x0B
DECL|macro|GL_CUBIC_CURVE_TO_NV
define|#
directive|define
name|GL_CUBIC_CURVE_TO_NV
value|0x0C
DECL|macro|GL_RELATIVE_CUBIC_CURVE_TO_NV
define|#
directive|define
name|GL_RELATIVE_CUBIC_CURVE_TO_NV
value|0x0D
DECL|macro|GL_SMOOTH_QUADRATIC_CURVE_TO_NV
define|#
directive|define
name|GL_SMOOTH_QUADRATIC_CURVE_TO_NV
value|0x0E
DECL|macro|GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
define|#
directive|define
name|GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
value|0x0F
DECL|macro|GL_SMOOTH_CUBIC_CURVE_TO_NV
define|#
directive|define
name|GL_SMOOTH_CUBIC_CURVE_TO_NV
value|0x10
DECL|macro|GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
define|#
directive|define
name|GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
value|0x11
DECL|macro|GL_SMALL_CCW_ARC_TO_NV
define|#
directive|define
name|GL_SMALL_CCW_ARC_TO_NV
value|0x12
DECL|macro|GL_RELATIVE_SMALL_CCW_ARC_TO_NV
define|#
directive|define
name|GL_RELATIVE_SMALL_CCW_ARC_TO_NV
value|0x13
DECL|macro|GL_SMALL_CW_ARC_TO_NV
define|#
directive|define
name|GL_SMALL_CW_ARC_TO_NV
value|0x14
DECL|macro|GL_RELATIVE_SMALL_CW_ARC_TO_NV
define|#
directive|define
name|GL_RELATIVE_SMALL_CW_ARC_TO_NV
value|0x15
DECL|macro|GL_LARGE_CCW_ARC_TO_NV
define|#
directive|define
name|GL_LARGE_CCW_ARC_TO_NV
value|0x16
DECL|macro|GL_RELATIVE_LARGE_CCW_ARC_TO_NV
define|#
directive|define
name|GL_RELATIVE_LARGE_CCW_ARC_TO_NV
value|0x17
DECL|macro|GL_LARGE_CW_ARC_TO_NV
define|#
directive|define
name|GL_LARGE_CW_ARC_TO_NV
value|0x18
DECL|macro|GL_RELATIVE_LARGE_CW_ARC_TO_NV
define|#
directive|define
name|GL_RELATIVE_LARGE_CW_ARC_TO_NV
value|0x19
DECL|macro|GL_RESTART_PATH_NV
define|#
directive|define
name|GL_RESTART_PATH_NV
value|0xF0
DECL|macro|GL_DUP_FIRST_CUBIC_CURVE_TO_NV
define|#
directive|define
name|GL_DUP_FIRST_CUBIC_CURVE_TO_NV
value|0xF2
DECL|macro|GL_DUP_LAST_CUBIC_CURVE_TO_NV
define|#
directive|define
name|GL_DUP_LAST_CUBIC_CURVE_TO_NV
value|0xF4
DECL|macro|GL_RECT_NV
define|#
directive|define
name|GL_RECT_NV
value|0xF6
DECL|macro|GL_CIRCULAR_CCW_ARC_TO_NV
define|#
directive|define
name|GL_CIRCULAR_CCW_ARC_TO_NV
value|0xF8
DECL|macro|GL_CIRCULAR_CW_ARC_TO_NV
define|#
directive|define
name|GL_CIRCULAR_CW_ARC_TO_NV
value|0xFA
DECL|macro|GL_CIRCULAR_TANGENT_ARC_TO_NV
define|#
directive|define
name|GL_CIRCULAR_TANGENT_ARC_TO_NV
value|0xFC
DECL|macro|GL_ARC_TO_NV
define|#
directive|define
name|GL_ARC_TO_NV
value|0xFE
DECL|macro|GL_RELATIVE_ARC_TO_NV
define|#
directive|define
name|GL_RELATIVE_ARC_TO_NV
value|0xFF
DECL|macro|GL_BOLD_BIT_NV
define|#
directive|define
name|GL_BOLD_BIT_NV
value|0x01
DECL|macro|GL_ITALIC_BIT_NV
define|#
directive|define
name|GL_ITALIC_BIT_NV
value|0x02
DECL|macro|GL_GLYPH_WIDTH_BIT_NV
define|#
directive|define
name|GL_GLYPH_WIDTH_BIT_NV
value|0x01
DECL|macro|GL_GLYPH_HEIGHT_BIT_NV
define|#
directive|define
name|GL_GLYPH_HEIGHT_BIT_NV
value|0x02
DECL|macro|GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
define|#
directive|define
name|GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
value|0x04
DECL|macro|GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
define|#
directive|define
name|GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
value|0x08
DECL|macro|GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
define|#
directive|define
name|GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
value|0x10
DECL|macro|GL_GLYPH_VERTICAL_BEARING_X_BIT_NV
define|#
directive|define
name|GL_GLYPH_VERTICAL_BEARING_X_BIT_NV
value|0x20
DECL|macro|GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV
define|#
directive|define
name|GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV
value|0x40
DECL|macro|GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
define|#
directive|define
name|GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
value|0x80
DECL|macro|GL_GLYPH_HAS_KERNING_NV
define|#
directive|define
name|GL_GLYPH_HAS_KERNING_NV
value|0x100
DECL|macro|GL_FONT_X_MIN_BOUNDS_NV
define|#
directive|define
name|GL_FONT_X_MIN_BOUNDS_NV
value|0x00010000
DECL|macro|GL_FONT_Y_MIN_BOUNDS_NV
define|#
directive|define
name|GL_FONT_Y_MIN_BOUNDS_NV
value|0x00020000
DECL|macro|GL_FONT_X_MAX_BOUNDS_NV
define|#
directive|define
name|GL_FONT_X_MAX_BOUNDS_NV
value|0x00040000
DECL|macro|GL_FONT_Y_MAX_BOUNDS_NV
define|#
directive|define
name|GL_FONT_Y_MAX_BOUNDS_NV
value|0x00080000
DECL|macro|GL_FONT_UNITS_PER_EM_NV
define|#
directive|define
name|GL_FONT_UNITS_PER_EM_NV
value|0x00100000
DECL|macro|GL_FONT_ASCENDER_NV
define|#
directive|define
name|GL_FONT_ASCENDER_NV
value|0x00200000
DECL|macro|GL_FONT_DESCENDER_NV
define|#
directive|define
name|GL_FONT_DESCENDER_NV
value|0x00400000
DECL|macro|GL_FONT_HEIGHT_NV
define|#
directive|define
name|GL_FONT_HEIGHT_NV
value|0x00800000
DECL|macro|GL_FONT_MAX_ADVANCE_WIDTH_NV
define|#
directive|define
name|GL_FONT_MAX_ADVANCE_WIDTH_NV
value|0x01000000
DECL|macro|GL_FONT_MAX_ADVANCE_HEIGHT_NV
define|#
directive|define
name|GL_FONT_MAX_ADVANCE_HEIGHT_NV
value|0x02000000
DECL|macro|GL_FONT_UNDERLINE_POSITION_NV
define|#
directive|define
name|GL_FONT_UNDERLINE_POSITION_NV
value|0x04000000
DECL|macro|GL_FONT_UNDERLINE_THICKNESS_NV
define|#
directive|define
name|GL_FONT_UNDERLINE_THICKNESS_NV
value|0x08000000
DECL|macro|GL_FONT_HAS_KERNING_NV
define|#
directive|define
name|GL_FONT_HAS_KERNING_NV
value|0x10000000
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_pinned_memory
DECL|macro|GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
define|#
directive|define
name|GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
value|0x9160
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_stencil_operation_extended
DECL|macro|GL_SET_AMD
define|#
directive|define
name|GL_SET_AMD
value|0x874A
DECL|macro|GL_REPLACE_VALUE_AMD
define|#
directive|define
name|GL_REPLACE_VALUE_AMD
value|0x874B
DECL|macro|GL_STENCIL_OP_VALUE_AMD
define|#
directive|define
name|GL_STENCIL_OP_VALUE_AMD
value|0x874C
DECL|macro|GL_STENCIL_BACK_OP_VALUE_AMD
define|#
directive|define
name|GL_STENCIL_BACK_OP_VALUE_AMD
value|0x874D
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_vertex_shader_viewport_index
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_vertex_shader_layer
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_bindless_texture
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_shader_atomic_float
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_query_buffer_object
DECL|macro|GL_QUERY_BUFFER_AMD
define|#
directive|define
name|GL_QUERY_BUFFER_AMD
value|0x9192
DECL|macro|GL_QUERY_BUFFER_BINDING_AMD
define|#
directive|define
name|GL_QUERY_BUFFER_BINDING_AMD
value|0x9193
DECL|macro|GL_QUERY_RESULT_NO_WAIT_AMD
define|#
directive|define
name|GL_QUERY_RESULT_NO_WAIT_AMD
value|0x9194
endif|#
directive|endif
comment|/*************************************************************/
include|#
directive|include
file|<stddef.h>
ifndef|#
directive|ifndef
name|GL_VERSION_2_0
comment|/* GL type for program/shader text */
DECL|typedef|GLchar
typedef|typedef
name|char
name|GLchar
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_5
comment|/* GL types for handling large vertex buffer objects */
DECL|typedef|GLintptr
typedef|typedef
name|ptrdiff_t
name|GLintptr
typedef|;
DECL|typedef|GLsizeiptr
typedef|typedef
name|ptrdiff_t
name|GLsizeiptr
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_buffer_object
comment|/* GL types for handling large vertex buffer objects */
DECL|typedef|GLintptrARB
typedef|typedef
name|ptrdiff_t
name|GLintptrARB
typedef|;
DECL|typedef|GLsizeiptrARB
typedef|typedef
name|ptrdiff_t
name|GLsizeiptrARB
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_objects
comment|/* GL types for program/shader text and shader object handles */
DECL|typedef|GLcharARB
typedef|typedef
name|char
name|GLcharARB
typedef|;
DECL|typedef|GLhandleARB
typedef|typedef
name|unsigned
name|int
name|GLhandleARB
typedef|;
endif|#
directive|endif
comment|/* GL type for "half" precision (s10e5) float data in host memory */
ifndef|#
directive|ifndef
name|GL_ARB_half_float_pixel
DECL|typedef|GLhalfARB
typedef|typedef
name|unsigned
name|short
name|GLhalfARB
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_half_float
DECL|typedef|GLhalfNV
typedef|typedef
name|unsigned
name|short
name|GLhalfNV
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GLEXT_64_TYPES_DEFINED
comment|/* This code block is duplicated in glxext.h, so must be protected */
DECL|macro|GLEXT_64_TYPES_DEFINED
define|#
directive|define
name|GLEXT_64_TYPES_DEFINED
comment|/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
comment|/* (as used in the GL_EXT_timer_query extension). */
if|#
directive|if
name|defined
argument_list|(
name|__STDC_VERSION__
argument_list|)
operator|&&
name|__STDC_VERSION__
operator|>=
literal|199901L
include|#
directive|include
file|<inttypes.h>
elif|#
directive|elif
name|defined
argument_list|(
name|__sun__
argument_list|)
operator|||
name|defined
argument_list|(
name|__digital__
argument_list|)
include|#
directive|include
file|<inttypes.h>
if|#
directive|if
name|defined
argument_list|(
name|__STDC__
argument_list|)
if|#
directive|if
name|defined
argument_list|(
name|__arch64__
argument_list|)
operator|||
name|defined
argument_list|(
name|_LP64
argument_list|)
DECL|typedef|int64_t
typedef|typedef
name|long
name|int
name|int64_t
typedef|;
DECL|typedef|uint64_t
typedef|typedef
name|unsigned
name|long
name|int
name|uint64_t
typedef|;
else|#
directive|else
DECL|typedef|int64_t
typedef|typedef
name|long
name|long
name|int
name|int64_t
typedef|;
DECL|typedef|uint64_t
typedef|typedef
name|unsigned
name|long
name|long
name|int
name|uint64_t
typedef|;
endif|#
directive|endif
comment|/* __arch64__ */
endif|#
directive|endif
comment|/* __STDC__ */
elif|#
directive|elif
name|defined
argument_list|(
name|__VMS
argument_list|)
operator|||
name|defined
argument_list|(
name|__sgi
argument_list|)
include|#
directive|include
file|<inttypes.h>
elif|#
directive|elif
name|defined
argument_list|(
name|__SCO__
argument_list|)
operator|||
name|defined
argument_list|(
name|__USLC__
argument_list|)
include|#
directive|include
file|<stdint.h>
elif|#
directive|elif
name|defined
argument_list|(
name|__UNIXOS2__
argument_list|)
operator|||
name|defined
argument_list|(
name|__SOL64__
argument_list|)
DECL|typedef|int32_t
typedef|typedef
name|long
name|int
name|int32_t
typedef|;
DECL|typedef|int64_t
typedef|typedef
name|long
name|long
name|int
name|int64_t
typedef|;
DECL|typedef|uint64_t
typedef|typedef
name|unsigned
name|long
name|long
name|int
name|uint64_t
typedef|;
elif|#
directive|elif
name|defined
argument_list|(
name|_WIN32
argument_list|)
operator|&&
name|defined
argument_list|(
name|__GNUC__
argument_list|)
include|#
directive|include
file|<stdint.h>
elif|#
directive|elif
name|defined
argument_list|(
name|_WIN32
argument_list|)
DECL|typedef|int32_t
typedef|typedef
name|__int32
name|int32_t
typedef|;
DECL|typedef|int64_t
typedef|typedef
name|__int64
name|int64_t
typedef|;
DECL|typedef|uint64_t
typedef|typedef
name|unsigned
name|__int64
name|uint64_t
typedef|;
else|#
directive|else
comment|/* Fallback if nothing above works */
include|#
directive|include
file|<inttypes.h>
endif|#
directive|endif
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_timer_query
DECL|typedef|GLint64EXT
typedef|typedef
name|int64_t
name|GLint64EXT
typedef|;
DECL|typedef|GLuint64EXT
typedef|typedef
name|uint64_t
name|GLuint64EXT
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_sync
DECL|typedef|GLint64
typedef|typedef
name|int64_t
name|GLint64
typedef|;
DECL|typedef|GLuint64
typedef|typedef
name|uint64_t
name|GLuint64
typedef|;
DECL|typedef|GLsync
typedef|typedef
name|struct
name|__GLsync
modifier|*
name|GLsync
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_cl_event
comment|/* These incomplete types let us declare types compatible with OpenCL's cl_context and cl_event */
struct_decl|struct
name|_cl_context
struct_decl|;
struct_decl|struct
name|_cl_event
struct_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_debug_output
DECL|typedef|GLDEBUGPROCARB
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GLDEBUGPROCARB
function_decl|)
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|message
parameter_list|,
name|GLvoid
modifier|*
name|userParam
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_debug_output
DECL|typedef|GLDEBUGPROCAMD
typedef|typedef
name|void
function_decl|(
name|APIENTRY
modifier|*
name|GLDEBUGPROCAMD
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|category
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|message
parameter_list|,
name|GLvoid
modifier|*
name|userParam
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vdpau_interop
DECL|typedef|GLvdpauSurfaceNV
typedef|typedef
name|GLintptr
name|GLvdpauSurfaceNV
typedef|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_2
DECL|macro|GL_VERSION_1_2
define|#
directive|define
name|GL_VERSION_1_2
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendColor
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquation
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawRangeElements
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexImage3D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexSubImage3D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTexSubImage3D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDCOLORPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDCOLORPROC
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWRANGEELEMENTSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWRANGEELEMENTSPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXIMAGE3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXIMAGE3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSUBIMAGE3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSUBIMAGE3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXSUBIMAGE3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXSUBIMAGE3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_2_DEPRECATED
DECL|macro|GL_VERSION_1_2_DEPRECATED
define|#
directive|define
name|GL_VERSION_1_2_DEPRECATED
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColorTable
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorTableParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorTableParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyColorTable
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTable
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorSubTable
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyColorSubTable
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionFilter1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionFilter2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameterf
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameteri
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyConvolutionFilter1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyConvolutionFilter2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetConvolutionFilter
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetConvolutionParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetConvolutionParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSeparableFilter
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|row
parameter_list|,
name|GLvoid
modifier|*
name|column
parameter_list|,
name|GLvoid
modifier|*
name|span
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSeparableFilter2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|row
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|column
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetHistogram
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetHistogramParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetHistogramParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMinmax
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMinmaxParameterfv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMinmaxParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glHistogram
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMinmax
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glResetHistogram
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glResetMinmax
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLORTABLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORTABLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORTABLEPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORTABLEPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORTABLEPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORTABLEPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCOLORTABLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCOLORTABLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORSUBTABLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORSUBTABLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCOLORSUBTABLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCOLORSUBTABLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONFILTER1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONFILTER1DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONFILTER2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONFILTER2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERFPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCONVOLUTIONFILTER1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCONVOLUTIONFILTER1DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCONVOLUTIONFILTER2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCONVOLUTIONFILTER2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCONVOLUTIONFILTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCONVOLUTIONFILTERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCONVOLUTIONPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCONVOLUTIONPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCONVOLUTIONPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCONVOLUTIONPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSEPARABLEFILTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSEPARABLEFILTERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|row
parameter_list|,
name|GLvoid
modifier|*
name|column
parameter_list|,
name|GLvoid
modifier|*
name|span
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSEPARABLEFILTER2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSEPARABLEFILTER2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|row
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|column
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETHISTOGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETHISTOGRAMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETHISTOGRAMPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETHISTOGRAMPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETHISTOGRAMPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETHISTOGRAMPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMINMAXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMINMAXPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMINMAXPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMINMAXPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMINMAXPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMINMAXPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLHISTOGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLHISTOGRAMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMINMAXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMINMAXPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESETHISTOGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRESETHISTOGRAMPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESETMINMAXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRESETMINMAXPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_3
DECL|macro|GL_VERSION_1_3
define|#
directive|define
name|GL_VERSION_1_3
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glActiveTexture
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSampleCoverage
parameter_list|(
name|GLfloat
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexImage3D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexImage1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexSubImage3D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexSubImage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexSubImage1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCompressedTexImage
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLACTIVETEXTUREPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLACTIVETEXTUREPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLECOVERAGEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLECOVERAGEPROC
function_decl|)
parameter_list|(
name|GLfloat
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE1DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMPRESSEDTEXIMAGEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMPRESSEDTEXIMAGEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_3_DEPRECATED
DECL|macro|GL_VERSION_1_3_DEPRECATED
define|#
directive|define
name|GL_VERSION_1_3_DEPRECATED
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glClientActiveTexture
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1d
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1dv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1f
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1fv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1i
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1iv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1s
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1sv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2d
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2dv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2f
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2fv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2i
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2iv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2s
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2sv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3d
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3dv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3f
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3fv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3i
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3iv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3s
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3sv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4d
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|,
name|GLdouble
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4dv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4f
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4fv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4i
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|,
name|GLint
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4iv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4s
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|,
name|GLshort
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4sv
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLoadTransposeMatrixf
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLoadTransposeMatrixd
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultTransposeMatrixf
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultTransposeMatrixd
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCLIENTACTIVETEXTUREPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLIENTACTIVETEXTUREPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1DVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1FPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1FVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1IPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1IVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1SPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1SVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2DVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2FPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2FVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2IPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2IVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2SPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2SVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3DVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3FPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3FVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3IPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3IVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3SPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3SVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|,
name|GLdouble
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4DVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4FPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4FVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4IPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|,
name|GLint
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4IVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4SPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|,
name|GLshort
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4SVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLOADTRANSPOSEMATRIXFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLOADTRANSPOSEMATRIXFPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLOADTRANSPOSEMATRIXDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLOADTRANSPOSEMATRIXDPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTTRANSPOSEMATRIXFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTTRANSPOSEMATRIXFPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTTRANSPOSEMATRIXDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTTRANSPOSEMATRIXDPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_4
DECL|macro|GL_VERSION_1_4
define|#
directive|define
name|GL_VERSION_1_4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendFuncSeparate
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawArrays
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawElements
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterf
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterfv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameteri
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameteriv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDFUNCSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWARRAYSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWARRAYSPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWELEMENTSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWELEMENTSPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_4_DEPRECATED
DECL|macro|GL_VERSION_1_4_DEPRECATED
define|#
directive|define
name|GL_VERSION_1_4_DEPRECATED
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordf
parameter_list|(
name|GLfloat
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordfv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordd
parameter_list|(
name|GLdouble
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoorddv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordPointer
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3b
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3bv
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3d
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3f
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3i
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3s
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3ub
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3ubv
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3ui
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3uiv
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3us
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3usv
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColorPointer
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3d
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3dv
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3f
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3fv
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3i
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3iv
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3s
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3sv
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFOGCOORDFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDFPROC
function_decl|)
parameter_list|(
name|GLfloat
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDFVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDDPROC
function_decl|)
parameter_list|(
name|GLdouble
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDDVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDDVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDPOINTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDPOINTERPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3BPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3BPROC
function_decl|)
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3BVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3BVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3DPROC
function_decl|)
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3DVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3FPROC
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3FVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3IPROC
function_decl|)
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3IVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3SPROC
function_decl|)
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3SVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UBPROC
function_decl|)
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UBVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UBVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UIVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3USPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3USPROC
function_decl|)
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3USVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3USVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLORPOINTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLORPOINTERPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2DPROC
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2DVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2FPROC
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2FVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2IPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2IVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2SPROC
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2SVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3DPROC
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3DVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3FPROC
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3FVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3IPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3IVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3SPROC
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3SVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_1_5
DECL|macro|GL_VERSION_1_5
define|#
directive|define
name|GL_VERSION_1_5
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGenQueries
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteQueries
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsQuery
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginQuery
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndQuery
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryiv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjectiv
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjectuiv
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsBuffer
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBufferData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBufferSubData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferSubData
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|GLvoid
modifier|*
name|APIENTRY
name|glMapBuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glUnmapBuffer
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferPointerv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENQUERIESPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENQUERIESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEQUERIESPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEQUERIESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISQUERYPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISQUERYPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINQUERYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINQUERYPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDQUERYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDQUERYPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTUIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISBUFFERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISBUFFERPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBUFFERDATAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBUFFERDATAPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBUFFERSUBDATAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBUFFERSUBDATAPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERSUBDATAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERSUBDATAPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPBUFFERPROC
typedef|typedef
name|GLvoid
modifier|*
function_decl|(
name|APIENTRYP
name|PFNGLMAPBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNMAPBUFFERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLUNMAPBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPOINTERVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERPOINTERVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_2_0
DECL|macro|GL_VERSION_2_0
define|#
directive|define
name|GL_VERSION_2_0
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationSeparate
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawBuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilOpSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|sfail
parameter_list|,
name|GLenum
name|dpfail
parameter_list|,
name|GLenum
name|dppass
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilFuncSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilMaskSeparate
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glAttachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompileShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glCreateProgram
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glCreateShader
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDetachShader
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDisableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEnableVertexAttribArray
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveAttrib
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveUniform
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetAttachedShaders
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxCount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|obj
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetAttribLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramInfoLog
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetShaderiv
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetShaderInfoLog
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetUniformLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformfv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribdv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribfv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribPointerv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsShader
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLinkProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glShaderSource
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUseProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4f
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4i
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4iv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glValidateProgram
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1s
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1sv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2s
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2sv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3s
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3sv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4Nbv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4Niv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4Nsv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4Nub
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLubyte
name|x
parameter_list|,
name|GLubyte
name|y
parameter_list|,
name|GLubyte
name|z
parameter_list|,
name|GLubyte
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4Nubv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4Nuiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4Nusv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4bv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4f
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4fv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4iv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4s
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4sv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4ubv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4usv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribPointer
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDEQUATIONSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILOPSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILOPSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|sfail
parameter_list|,
name|GLenum
name|dpfail
parameter_list|,
name|GLenum
name|dppass
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILFUNCSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILFUNCSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILMASKSEPARATEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILMASKSEPARATEPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLATTACHSHADERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLATTACHSHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDATTRIBLOCATIONPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDATTRIBLOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPILESHADERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPILESHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATEPROGRAMPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLCREATEPROGRAMPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATESHADERPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLCREATESHADERPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETESHADERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETESHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDETACHSHADERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDETACHSHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEVERTEXATTRIBARRAYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDISABLEVERTEXATTRIBARRAYPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEVERTEXATTRIBARRAYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENABLEVERTEXATTRIBARRAYPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEATTRIBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEATTRIBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEUNIFORMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEUNIFORMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETATTACHEDSHADERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETATTACHEDSHADERSPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|maxCount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLuint
modifier|*
name|obj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETATTRIBLOCATIONPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETATTRIBLOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMINFOLOGPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMINFOLOGPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSHADERIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERINFOLOGPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSHADERINFOLOGPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERSOURCEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSHADERSOURCEPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|source
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMLOCATIONPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMLOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMFVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBDVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBDVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBFVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBPOINTERVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBPOINTERVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPROGRAMPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISSHADERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISSHADERPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLINKPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLINKPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADERSOURCEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSHADERSOURCEPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUSEPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUSEPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4FPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4IPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4IVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX2FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX3FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX4FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVALIDATEPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVALIDATEPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1SPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1SVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2SPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2SVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3SPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3SVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NBVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NBVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NSVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NSVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLubyte
name|x
parameter_list|,
name|GLubyte
name|y
parameter_list|,
name|GLubyte
name|z
parameter_list|,
name|GLubyte
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUBVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUBVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUSVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUSVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4BVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4BVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4FPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4SPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4SPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4SVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4UBVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4UBVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4USVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4USVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBPOINTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBPOINTERPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_2_1
DECL|macro|GL_VERSION_2_1
define|#
directive|define
name|GL_VERSION_2_1
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix2x3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix3x2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix2x4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix4x2fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix3x4fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix4x3fv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLUNIFORMMATRIX2X3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX2X3FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3X2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX3X2FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2X4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX2X4FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4X2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX4X2FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3X4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX3X4FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4X3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX4X3FVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_0
DECL|macro|GL_VERSION_3_0
define|#
directive|define
name|GL_VERSION_3_0
value|1
comment|/* OpenGL 3.0 also reuses entry points from these extensions: */
comment|/* ARB_framebuffer_object */
comment|/* ARB_map_buffer_range */
comment|/* ARB_vertex_array_object */
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColorMaski
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLboolean
name|r
parameter_list|,
name|GLboolean
name|g
parameter_list|,
name|GLboolean
name|b
parameter_list|,
name|GLboolean
name|a
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBooleani_v
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetIntegeri_v
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEnablei
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDisablei
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsEnabledi
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginTransformFeedback
parameter_list|(
name|GLenum
name|primitiveMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndTransformFeedback
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferRange
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferBase
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTransformFeedbackVaryings
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|varyings
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTransformFeedbackVarying
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLsizei
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClampColor
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|clamp
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginConditionalRender
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndConditionalRender
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribIPointer
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribIiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribIuiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1i
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2i
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3i
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4i
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1iv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2iv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3iv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4iv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4bv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4sv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4ubv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4usv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformuiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindFragDataLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|color
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetFragDataLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1ui
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2ui
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3ui
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4ui
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4uiv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexParameterIiv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexParameterIuiv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTexParameterIiv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTexParameterIuiv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearBufferiv
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearBufferuiv
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearBufferfv
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearBufferfi
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
name|GLfloat
name|depth
parameter_list|,
name|GLint
name|stencil
parameter_list|)
function_decl|;
name|GLAPI
specifier|const
name|GLubyte
modifier|*
name|APIENTRY
name|glGetStringi
parameter_list|(
name|GLenum
name|name
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLORMASKIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORMASKIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLboolean
name|r
parameter_list|,
name|GLboolean
name|g
parameter_list|,
name|GLboolean
name|b
parameter_list|,
name|GLboolean
name|a
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBOOLEANI_VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBOOLEANI_VPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGERI_VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINTEGERI_VPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENABLEIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDISABLEIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISENABLEDIPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISENABLEDIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINTRANSFORMFEEDBACKPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINTRANSFORMFEEDBACKPROC
function_decl|)
parameter_list|(
name|GLenum
name|primitiveMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDTRANSFORMFEEDBACKPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDTRANSFORMFEEDBACKPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERRANGEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERRANGEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERBASEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERBASEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTRANSFORMFEEDBACKVARYINGSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTRANSFORMFEEDBACKVARYINGSPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|varyings
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLsizei
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLAMPCOLORPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLAMPCOLORPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|clamp
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINCONDITIONALRENDERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINCONDITIONALRENDERPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDCONDITIONALRENDERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDCONDITIONALRENDERPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBIPOINTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBIPOINTERPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBIIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBIUIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI1IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1IPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2IPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3IPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4IPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI1UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI1IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI1UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4BVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4BVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4SVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4SVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4UBVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4UBVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4USVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4USVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMUIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDFRAGDATALOCATIONPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDFRAGDATALOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|color
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAGDATALOCATIONPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAGDATALOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1UIPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2UIPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3UIPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4UIPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1UIVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2UIVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3UIVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4UIVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERIIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXPARAMETERIIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERIUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXPARAMETERIUIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERIIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXPARAMETERIIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERIUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXPARAMETERIUIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARBUFFERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARBUFFERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARBUFFERUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARBUFFERUIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARBUFFERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARBUFFERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARBUFFERFIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARBUFFERFIPROC
function_decl|)
parameter_list|(
name|GLenum
name|buffer
parameter_list|,
name|GLint
name|drawbuffer
parameter_list|,
name|GLfloat
name|depth
parameter_list|,
name|GLint
name|stencil
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSTRINGIPROC
typedef|typedef
specifier|const
name|GLubyte
modifier|*
function_decl|(
name|APIENTRYP
name|PFNGLGETSTRINGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|name
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_1
DECL|macro|GL_VERSION_3_1
define|#
directive|define
name|GL_VERSION_3_1
value|1
comment|/* OpenGL 3.1 also reuses entry points from these extensions: */
comment|/* ARB_copy_buffer */
comment|/* ARB_uniform_buffer_object */
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawArraysInstanced
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsInstanced
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexBuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPrimitiveRestartIndex
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWARRAYSINSTANCEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWARRAYSINSTANCEDPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPRIMITIVERESTARTINDEXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPRIMITIVERESTARTINDEXPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_2
DECL|macro|GL_VERSION_3_2
define|#
directive|define
name|GL_VERSION_3_2
value|1
comment|/* OpenGL 3.2 also reuses entry points from these extensions: */
comment|/* ARB_draw_elements_base_vertex */
comment|/* ARB_provoking_vertex */
comment|/* ARB_sync */
comment|/* ARB_texture_multisample */
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetInteger64i_v
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint64
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferParameteri64v
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTexture
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETINTEGER64I_VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINTEGER64I_VPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint64
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPARAMETERI64VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERPARAMETERI64VPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTUREPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTUREPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_3_3
DECL|macro|GL_VERSION_3_3
define|#
directive|define
name|GL_VERSION_3_3
value|1
comment|/* OpenGL 3.3 also reuses entry points from these extensions: */
comment|/* ARB_blend_func_extended */
comment|/* ARB_sampler_objects */
comment|/* ARB_explicit_attrib_location, but it has none */
comment|/* ARB_occlusion_query2 (no entry points) */
comment|/* ARB_shader_bit_encoding (no entry points) */
comment|/* ARB_texture_rgb10_a2ui (no entry points) */
comment|/* ARB_texture_swizzle (no entry points) */
comment|/* ARB_timer_query */
comment|/* ARB_vertex_type_2_10_10_10_rev */
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribDivisor
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIBDIVISORPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBDIVISORPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_4_0
DECL|macro|GL_VERSION_4_0
define|#
directive|define
name|GL_VERSION_4_0
value|1
comment|/* OpenGL 4.0 also reuses entry points from these extensions: */
comment|/* ARB_texture_query_lod (no entry points) */
comment|/* ARB_draw_indirect */
comment|/* ARB_gpu_shader5 (no entry points) */
comment|/* ARB_gpu_shader_fp64 */
comment|/* ARB_shader_subroutine */
comment|/* ARB_tessellation_shader */
comment|/* ARB_texture_buffer_object_rgb32 (no entry points) */
comment|/* ARB_texture_cube_map_array (no entry points) */
comment|/* ARB_texture_gather (no entry points) */
comment|/* ARB_transform_feedback2 */
comment|/* ARB_transform_feedback3 */
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glMinSampleShading
parameter_list|(
name|GLfloat
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationi
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationSeparatei
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendFunci
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendFuncSeparatei
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMINSAMPLESHADINGPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMINSAMPLESHADINGPROC
function_decl|)
parameter_list|(
name|GLfloat
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONSEPARATEIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONSEPARATEIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCSEPARATEIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCSEPARATEIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_4_1
DECL|macro|GL_VERSION_4_1
define|#
directive|define
name|GL_VERSION_4_1
value|1
comment|/* OpenGL 4.1 reuses entry points from these extensions: */
comment|/* ARB_ES2_compatibility */
comment|/* ARB_get_program_binary */
comment|/* ARB_separate_shader_objects */
comment|/* ARB_shader_precision (no entry points) */
comment|/* ARB_vertex_attrib_64bit */
comment|/* ARB_viewport_array */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_VERSION_4_2
DECL|macro|GL_VERSION_4_2
define|#
directive|define
name|GL_VERSION_4_2
value|1
comment|/* OpenGL 4.2 reuses entry points from these extensions: */
comment|/* ARB_base_instance */
comment|/* ARB_shading_language_420pack (no entry points) */
comment|/* ARB_transform_feedback_instanced */
comment|/* ARB_compressed_texture_pixel_storage (no entry points) */
comment|/* ARB_conservative_depth (no entry points) */
comment|/* ARB_internalformat_query */
comment|/* ARB_map_buffer_alignment (no entry points) */
comment|/* ARB_shader_atomic_counters */
comment|/* ARB_shader_image_load_store */
comment|/* ARB_shading_language_packing (no entry points) */
comment|/* ARB_texture_storage */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_multitexture
DECL|macro|GL_ARB_multitexture
define|#
directive|define
name|GL_ARB_multitexture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glActiveTextureARB
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClientActiveTextureARB
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1dARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1dvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1fARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1fvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1iARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1ivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1sARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1svARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2dARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2dvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2fARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2fvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2iARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2ivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2sARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2svARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3dARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3dvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3fARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3fvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3iARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3ivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3sARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3svARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4dARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|,
name|GLdouble
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4dvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4fARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4fvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4iARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|,
name|GLint
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4ivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4sARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|,
name|GLshort
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4svARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLACTIVETEXTUREARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLACTIVETEXTUREARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLIENTACTIVETEXTUREARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLIENTACTIVETEXTUREARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1DVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1FARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1FVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1IARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1IVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1SARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1SVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2DVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2FARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2FVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2IARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2IVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2SARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2SVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3DVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3FARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3FVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3IARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3IVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3SARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3SVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|s
parameter_list|,
name|GLdouble
name|t
parameter_list|,
name|GLdouble
name|r
parameter_list|,
name|GLdouble
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4DVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4FARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4FVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4IARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|s
parameter_list|,
name|GLint
name|t
parameter_list|,
name|GLint
name|r
parameter_list|,
name|GLint
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4IVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4SARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLshort
name|s
parameter_list|,
name|GLshort
name|t
parameter_list|,
name|GLshort
name|r
parameter_list|,
name|GLshort
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4SVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transpose_matrix
DECL|macro|GL_ARB_transpose_matrix
define|#
directive|define
name|GL_ARB_transpose_matrix
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glLoadTransposeMatrixfARB
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLoadTransposeMatrixdARB
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultTransposeMatrixfARB
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultTransposeMatrixdARB
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLLOADTRANSPOSEMATRIXFARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLOADTRANSPOSEMATRIXFARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLOADTRANSPOSEMATRIXDARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLOADTRANSPOSEMATRIXDARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTTRANSPOSEMATRIXFARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTTRANSPOSEMATRIXFARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTTRANSPOSEMATRIXDARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTTRANSPOSEMATRIXDARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_multisample
DECL|macro|GL_ARB_multisample
define|#
directive|define
name|GL_ARB_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glSampleCoverageARB
parameter_list|(
name|GLfloat
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSAMPLECOVERAGEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLECOVERAGEARBPROC
function_decl|)
parameter_list|(
name|GLfloat
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_add
DECL|macro|GL_ARB_texture_env_add
define|#
directive|define
name|GL_ARB_texture_env_add
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_cube_map
DECL|macro|GL_ARB_texture_cube_map
define|#
directive|define
name|GL_ARB_texture_cube_map
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_compression
DECL|macro|GL_ARB_texture_compression
define|#
directive|define
name|GL_ARB_texture_compression
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexImage3DARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexImage2DARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexImage1DARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexSubImage3DARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexSubImage2DARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTexSubImage1DARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCompressedTexImageARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_border_clamp
DECL|macro|GL_ARB_texture_border_clamp
define|#
directive|define
name|GL_ARB_texture_border_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_point_parameters
DECL|macro|GL_ARB_point_parameters
define|#
directive|define
name|GL_ARB_point_parameters
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterfARB
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterfvARB
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPOINTPARAMETERFARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_blend
DECL|macro|GL_ARB_vertex_blend
define|#
directive|define
name|GL_ARB_vertex_blend
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glWeightbvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightsvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightivARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLint
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightfvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightdvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightubvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightusvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightuivARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightPointerARB
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexBlendARB
parameter_list|(
name|GLint
name|count
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLWEIGHTBVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTBVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTSVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTSVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTIVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLint
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTFVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTDVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTDVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTUBVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTUBVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTUSVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTUSVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTUIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTUIVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTPOINTERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTPOINTERARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXBLENDARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXBLENDARBPROC
function_decl|)
parameter_list|(
name|GLint
name|count
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_matrix_palette
DECL|macro|GL_ARB_matrix_palette
define|#
directive|define
name|GL_ARB_matrix_palette
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCurrentPaletteMatrixARB
parameter_list|(
name|GLint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixIndexubvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|indices
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixIndexusvARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|indices
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixIndexuivARB
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|indices
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixIndexPointerARB
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCURRENTPALETTEMATRIXARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCURRENTPALETTEMATRIXARBPROC
function_decl|)
parameter_list|(
name|GLint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXINDEXUBVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXINDEXUBVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXINDEXUSVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXINDEXUSVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXINDEXUIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXINDEXUIVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXINDEXPOINTERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXINDEXPOINTERARBPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_combine
DECL|macro|GL_ARB_texture_env_combine
define|#
directive|define
name|GL_ARB_texture_env_combine
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_crossbar
DECL|macro|GL_ARB_texture_env_crossbar
define|#
directive|define
name|GL_ARB_texture_env_crossbar
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_env_dot3
DECL|macro|GL_ARB_texture_env_dot3
define|#
directive|define
name|GL_ARB_texture_env_dot3
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_mirrored_repeat
DECL|macro|GL_ARB_texture_mirrored_repeat
define|#
directive|define
name|GL_ARB_texture_mirrored_repeat
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_depth_texture
DECL|macro|GL_ARB_depth_texture
define|#
directive|define
name|GL_ARB_depth_texture
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shadow
DECL|macro|GL_ARB_shadow
define|#
directive|define
name|GL_ARB_shadow
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shadow_ambient
DECL|macro|GL_ARB_shadow_ambient
define|#
directive|define
name|GL_ARB_shadow_ambient
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_window_pos
DECL|macro|GL_ARB_window_pos
define|#
directive|define
name|GL_ARB_window_pos
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2dARB
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2dvARB
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2fARB
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2fvARB
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2iARB
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2ivARB
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2sARB
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2svARB
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3dARB
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3dvARB
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3fARB
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3fvARB
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3iARB
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3ivARB
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3sARB
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3svARB
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLWINDOWPOS2DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2DARBPROC
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2DVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2FARBPROC
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2FVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2IARBPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2IVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2SARBPROC
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2SVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3DARBPROC
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3DVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3FARBPROC
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3FVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3IARBPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3IVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3SARBPROC
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3SVARBPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_program
DECL|macro|GL_ARB_vertex_program
define|#
directive|define
name|GL_ARB_vertex_program
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1dARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1dvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1fARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1fvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1sARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1svARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2dARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2dvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2fARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2fvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2sARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2svARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3dARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3dvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3fARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3fvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3sARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3svARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4NbvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4NivARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4NsvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4NubARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLubyte
name|x
parameter_list|,
name|GLubyte
name|y
parameter_list|,
name|GLubyte
name|z
parameter_list|,
name|GLubyte
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4NubvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4NuivARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4NusvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4bvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4dARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4dvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4fARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4fvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4ivARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4sARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4svARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4ubvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4uivARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4usvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribPointerARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEnableVertexAttribArrayARB
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDisableVertexAttribArrayARB
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramStringARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindProgramARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteProgramsARB
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenProgramsARB
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameter4dARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameter4dvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameter4fARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameter4fvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameter4dARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameter4dvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameter4fARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameter4fvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramEnvParameterdvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramEnvParameterfvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramLocalParameterdvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramLocalParameterfvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramStringARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribdvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribfvARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribivARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribPointervARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsProgramARB
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIB1DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1DARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1DVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1FARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1FVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1SARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1SVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2DARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2DVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2FARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2FVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2SARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2SVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3DARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3DVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3FARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3FVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3SARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3SVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NBVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NBVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NSVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NSVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUBARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUBARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLubyte
name|x
parameter_list|,
name|GLubyte
name|y
parameter_list|,
name|GLubyte
name|z
parameter_list|,
name|GLubyte
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUBVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUBVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4NUSVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4NUSVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4BVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4BVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4DARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4DVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4FARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4FVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4IVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4SARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4SARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4SVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4SVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4UBVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4UBVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4UIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4UIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4USVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4USVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBPOINTERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBPOINTERARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEVERTEXATTRIBARRAYARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENABLEVERTEXATTRIBARRAYARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMSTRINGARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMSTRINGARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDPROGRAMARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDPROGRAMARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPROGRAMSARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEPROGRAMSARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPROGRAMSARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENPROGRAMSARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETER4DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETER4DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETER4DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETER4DVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETER4FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETER4FARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETER4FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETER4FVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETER4DARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETER4DARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETER4FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETER4FARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMENVPARAMETERDVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMENVPARAMETERDVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMENVPARAMETERFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMENVPARAMETERFVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMIVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMSTRINGARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMSTRINGARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBDVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBDVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBFVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBPOINTERVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBPOINTERVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPROGRAMARBPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISPROGRAMARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_program
DECL|macro|GL_ARB_fragment_program
define|#
directive|define
name|GL_ARB_fragment_program
value|1
comment|/* All ARB_fragment_program entry points are shared with ARB_vertex_program. */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_buffer_object
DECL|macro|GL_ARB_vertex_buffer_object
define|#
directive|define
name|GL_ARB_vertex_buffer_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteBuffersARB
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenBuffersARB
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsBufferARB
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBufferDataARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptrARB
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBufferSubDataARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptrARB
name|offset
parameter_list|,
name|GLsizeiptrARB
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferSubDataARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptrARB
name|offset
parameter_list|,
name|GLsizeiptrARB
name|size
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|GLvoid
modifier|*
name|APIENTRY
name|glMapBufferARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glUnmapBufferARB
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferParameterivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferPointervARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDBUFFERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEBUFFERSARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEBUFFERSARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENBUFFERSARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENBUFFERSARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|buffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISBUFFERARBPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISBUFFERARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBUFFERDATAARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBUFFERDATAARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizeiptrARB
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBUFFERSUBDATAARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBUFFERSUBDATAARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptrARB
name|offset
parameter_list|,
name|GLsizeiptrARB
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERSUBDATAARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERSUBDATAARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptrARB
name|offset
parameter_list|,
name|GLsizeiptrARB
name|size
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPBUFFERARBPROC
typedef|typedef
name|GLvoid
modifier|*
function_decl|(
name|APIENTRYP
name|PFNGLMAPBUFFERARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNMAPBUFFERARBPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLUNMAPBUFFERARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPARAMETERIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERPARAMETERIVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPOINTERVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERPOINTERVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_occlusion_query
DECL|macro|GL_ARB_occlusion_query
define|#
directive|define
name|GL_ARB_occlusion_query
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGenQueriesARB
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteQueriesARB
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsQueryARB
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginQueryARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndQueryARB
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjectivARB
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjectuivARB
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENQUERIESARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENQUERIESARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEQUERIESARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEQUERIESARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISQUERYARBPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISQUERYARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINQUERYARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINQUERYARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDQUERYARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDQUERYARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYIVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTUIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTUIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_objects
DECL|macro|GL_ARB_shader_objects
define|#
directive|define
name|GL_ARB_shader_objects
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDeleteObjectARB
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|)
function_decl|;
name|GLAPI
name|GLhandleARB
name|APIENTRY
name|glGetHandleARB
parameter_list|(
name|GLenum
name|pname
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDetachObjectARB
parameter_list|(
name|GLhandleARB
name|containerObj
parameter_list|,
name|GLhandleARB
name|attachedObj
parameter_list|)
function_decl|;
name|GLAPI
name|GLhandleARB
name|APIENTRY
name|glCreateShaderObjectARB
parameter_list|(
name|GLenum
name|shaderType
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glShaderSourceARB
parameter_list|(
name|GLhandleARB
name|shaderObj
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompileShaderARB
parameter_list|(
name|GLhandleARB
name|shaderObj
parameter_list|)
function_decl|;
name|GLAPI
name|GLhandleARB
name|APIENTRY
name|glCreateProgramObjectARB
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glAttachObjectARB
parameter_list|(
name|GLhandleARB
name|containerObj
parameter_list|,
name|GLhandleARB
name|obj
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLinkProgramARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUseProgramObjectARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glValidateProgramARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1fARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2fARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3fARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4fARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1iARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2iARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3iARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4iARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1fvARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2fvARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3fvARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4fvARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1ivARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2ivARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3ivARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4ivARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix2fvARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix3fvARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix4fvARB
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetObjectParameterfvARB
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetObjectParameterivARB
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetInfoLogARB
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLcharARB
modifier|*
name|infoLog
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetAttachedObjectsARB
parameter_list|(
name|GLhandleARB
name|containerObj
parameter_list|,
name|GLsizei
name|maxCount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLhandleARB
modifier|*
name|obj
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetUniformLocationARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveUniformARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformfvARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformivARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetShaderSourceARB
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLcharARB
modifier|*
name|source
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDELETEOBJECTARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEOBJECTARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETHANDLEARBPROC
typedef|typedef
name|GLhandleARB
function_decl|(
name|APIENTRYP
name|PFNGLGETHANDLEARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDETACHOBJECTARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDETACHOBJECTARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|containerObj
parameter_list|,
name|GLhandleARB
name|attachedObj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATESHADEROBJECTARBPROC
typedef|typedef
name|GLhandleARB
function_decl|(
name|APIENTRYP
name|PFNGLCREATESHADEROBJECTARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|shaderType
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADERSOURCEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSHADERSOURCEARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|shaderObj
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
modifier|*
name|string
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPILESHADERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPILESHADERARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|shaderObj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATEPROGRAMOBJECTARBPROC
typedef|typedef
name|GLhandleARB
function_decl|(
name|APIENTRYP
name|PFNGLCREATEPROGRAMOBJECTARBPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLATTACHOBJECTARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLATTACHOBJECTARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|containerObj
parameter_list|,
name|GLhandleARB
name|obj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLINKPROGRAMARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLINKPROGRAMARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUSEPROGRAMOBJECTARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUSEPROGRAMOBJECTARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVALIDATEPROGRAMARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVALIDATEPROGRAMARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1FARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2FARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3FARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4FARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4FARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1IARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2IARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3IARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4IARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4IARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1FVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2FVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3FVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4FVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1IVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2IVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3IVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4IVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4IVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX2FVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX3FVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4FVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX4FVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTPARAMETERFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETOBJECTPARAMETERFVARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTPARAMETERIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETOBJECTPARAMETERIVARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINFOLOGARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINFOLOGARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLcharARB
modifier|*
name|infoLog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETATTACHEDOBJECTSARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETATTACHEDOBJECTSARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|containerObj
parameter_list|,
name|GLsizei
name|maxCount
parameter_list|,
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLhandleARB
modifier|*
name|obj
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMLOCATIONARBPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMLOCATIONARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEUNIFORMARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEUNIFORMARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMFVARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMIVARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERSOURCEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSHADERSOURCEARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|obj
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLcharARB
modifier|*
name|source
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_shader
DECL|macro|GL_ARB_vertex_shader
define|#
directive|define
name|GL_ARB_vertex_shader
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindAttribLocationARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveAttribARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetAttribLocationARB
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDATTRIBLOCATIONARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDATTRIBLOCATIONARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEATTRIBARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEATTRIBARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|maxLength
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETATTRIBLOCATIONARBPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETATTRIBLOCATIONARBPROC
function_decl|)
parameter_list|(
name|GLhandleARB
name|programObj
parameter_list|,
specifier|const
name|GLcharARB
modifier|*
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_shader
DECL|macro|GL_ARB_fragment_shader
define|#
directive|define
name|GL_ARB_fragment_shader
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_100
DECL|macro|GL_ARB_shading_language_100
define|#
directive|define
name|GL_ARB_shading_language_100
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_non_power_of_two
DECL|macro|GL_ARB_texture_non_power_of_two
define|#
directive|define
name|GL_ARB_texture_non_power_of_two
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_point_sprite
DECL|macro|GL_ARB_point_sprite
define|#
directive|define
name|GL_ARB_point_sprite
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_program_shadow
DECL|macro|GL_ARB_fragment_program_shadow
define|#
directive|define
name|GL_ARB_fragment_program_shadow
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_buffers
DECL|macro|GL_ARB_draw_buffers
define|#
directive|define
name|GL_ARB_draw_buffers
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawBuffersARB
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWBUFFERSARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWBUFFERSARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_rectangle
DECL|macro|GL_ARB_texture_rectangle
define|#
directive|define
name|GL_ARB_texture_rectangle
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_color_buffer_float
DECL|macro|GL_ARB_color_buffer_float
define|#
directive|define
name|GL_ARB_color_buffer_float
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glClampColorARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|clamp
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCLAMPCOLORARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLAMPCOLORARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|clamp
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_half_float_pixel
DECL|macro|GL_ARB_half_float_pixel
define|#
directive|define
name|GL_ARB_half_float_pixel
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_float
DECL|macro|GL_ARB_texture_float
define|#
directive|define
name|GL_ARB_texture_float
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_pixel_buffer_object
DECL|macro|GL_ARB_pixel_buffer_object
define|#
directive|define
name|GL_ARB_pixel_buffer_object
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_depth_buffer_float
DECL|macro|GL_ARB_depth_buffer_float
define|#
directive|define
name|GL_ARB_depth_buffer_float
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_instanced
DECL|macro|GL_ARB_draw_instanced
define|#
directive|define
name|GL_ARB_draw_instanced
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawArraysInstancedARB
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsInstancedARB
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWARRAYSINSTANCEDARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWARRAYSINSTANCEDARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_framebuffer_object
DECL|macro|GL_ARB_framebuffer_object
define|#
directive|define
name|GL_ARB_framebuffer_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsRenderbuffer
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenRenderbuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glRenderbufferStorage
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetRenderbufferParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsFramebuffer
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindFramebuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenFramebuffers
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|GLAPI
name|GLenum
name|APIENTRY
name|glCheckFramebufferStatus
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTexture1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTexture2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTexture3D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferRenderbuffer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFramebufferAttachmentParameteriv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenerateMipmap
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlitFramebuffer
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glRenderbufferStorageMultisample
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTextureLayer
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLISRENDERBUFFERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISRENDERBUFFERPROC
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDRENDERBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDRENDERBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETERENDERBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETERENDERBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENRENDERBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENRENDERBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRENDERBUFFERSTORAGEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETRENDERBUFFERPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETRENDERBUFFERPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISFRAMEBUFFERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISFRAMEBUFFERPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDFRAMEBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDFRAMEBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEFRAMEBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEFRAMEBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENFRAMEBUFFERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENFRAMEBUFFERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCHECKFRAMEBUFFERSTATUSPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLCHECKFRAMEBUFFERSTATUSPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE1DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERRENDERBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERRENDERBUFFERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENERATEMIPMAPPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENERATEMIPMAPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLITFRAMEBUFFERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLITFRAMEBUFFERPROC
function_decl|)
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURELAYERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURELAYERPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_framebuffer_sRGB
DECL|macro|GL_ARB_framebuffer_sRGB
define|#
directive|define
name|GL_ARB_framebuffer_sRGB
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_geometry_shader4
DECL|macro|GL_ARB_geometry_shader4
define|#
directive|define
name|GL_ARB_geometry_shader4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameteriARB
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTextureARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTextureLayerARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTextureFaceARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|face
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMPARAMETERIARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETERIARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTUREARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTUREARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|face
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_half_float_vertex
DECL|macro|GL_ARB_half_float_vertex
define|#
directive|define
name|GL_ARB_half_float_vertex
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_instanced_arrays
DECL|macro|GL_ARB_instanced_arrays
define|#
directive|define
name|GL_ARB_instanced_arrays
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribDivisorARB
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIBDIVISORARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBDIVISORARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|divisor
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_map_buffer_range
DECL|macro|GL_ARB_map_buffer_range
define|#
directive|define
name|GL_ARB_map_buffer_range
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLvoid
modifier|*
name|APIENTRY
name|glMapBufferRange
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|,
name|GLbitfield
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFlushMappedBufferRange
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMAPBUFFERRANGEPROC
typedef|typedef
name|GLvoid
modifier|*
function_decl|(
name|APIENTRYP
name|PFNGLMAPBUFFERRANGEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|,
name|GLbitfield
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFLUSHMAPPEDBUFFERRANGEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFLUSHMAPPEDBUFFERRANGEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_buffer_object
DECL|macro|GL_ARB_texture_buffer_object
define|#
directive|define
name|GL_ARB_texture_buffer_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexBufferARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXBUFFERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXBUFFERARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_compression_rgtc
DECL|macro|GL_ARB_texture_compression_rgtc
define|#
directive|define
name|GL_ARB_texture_compression_rgtc
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_rg
DECL|macro|GL_ARB_texture_rg
define|#
directive|define
name|GL_ARB_texture_rg
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_array_object
DECL|macro|GL_ARB_vertex_array_object
define|#
directive|define
name|GL_ARB_vertex_array_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindVertexArray
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteVertexArrays
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenVertexArrays
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsVertexArray
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDVERTEXARRAYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDVERTEXARRAYPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEVERTEXARRAYSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEVERTEXARRAYSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENVERTEXARRAYSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENVERTEXARRAYSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISVERTEXARRAYPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISVERTEXARRAYPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_uniform_buffer_object
DECL|macro|GL_ARB_uniform_buffer_object
define|#
directive|define
name|GL_ARB_uniform_buffer_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformIndices
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|uniformCount
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|uniformNames
parameter_list|,
name|GLuint
modifier|*
name|uniformIndices
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveUniformsiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|uniformCount
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|uniformIndices
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveUniformName
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformIndex
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|uniformName
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glGetUniformBlockIndex
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|uniformBlockName
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveUniformBlockiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformBlockIndex
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveUniformBlockName
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformBlockIndex
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|uniformBlockName
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformBlockBinding
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformBlockIndex
parameter_list|,
name|GLuint
name|uniformBlockBinding
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETUNIFORMINDICESPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMINDICESPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|uniformCount
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|uniformNames
parameter_list|,
name|GLuint
modifier|*
name|uniformIndices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEUNIFORMSIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEUNIFORMSIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|uniformCount
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|uniformIndices
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEUNIFORMNAMEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEUNIFORMNAMEPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformIndex
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|uniformName
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMBLOCKINDEXPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMBLOCKINDEXPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|uniformBlockName
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEUNIFORMBLOCKIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEUNIFORMBLOCKIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformBlockIndex
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformBlockIndex
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|uniformBlockName
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMBLOCKBINDINGPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMBLOCKBINDINGPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|uniformBlockIndex
parameter_list|,
name|GLuint
name|uniformBlockBinding
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_compatibility
DECL|macro|GL_ARB_compatibility
define|#
directive|define
name|GL_ARB_compatibility
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_copy_buffer
DECL|macro|GL_ARB_copy_buffer
define|#
directive|define
name|GL_ARB_copy_buffer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCopyBufferSubData
parameter_list|(
name|GLenum
name|readTarget
parameter_list|,
name|GLenum
name|writeTarget
parameter_list|,
name|GLintptr
name|readOffset
parameter_list|,
name|GLintptr
name|writeOffset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOPYBUFFERSUBDATAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYBUFFERSUBDATAPROC
function_decl|)
parameter_list|(
name|GLenum
name|readTarget
parameter_list|,
name|GLenum
name|writeTarget
parameter_list|,
name|GLintptr
name|readOffset
parameter_list|,
name|GLintptr
name|writeOffset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_texture_lod
DECL|macro|GL_ARB_shader_texture_lod
define|#
directive|define
name|GL_ARB_shader_texture_lod
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_depth_clamp
DECL|macro|GL_ARB_depth_clamp
define|#
directive|define
name|GL_ARB_depth_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_elements_base_vertex
DECL|macro|GL_ARB_draw_elements_base_vertex
define|#
directive|define
name|GL_ARB_draw_elements_base_vertex
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsBaseVertex
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLint
name|basevertex
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawRangeElementsBaseVertex
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLint
name|basevertex
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsInstancedBaseVertex
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|basevertex
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawElementsBaseVertex
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
specifier|const
name|GLint
modifier|*
name|basevertex
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWELEMENTSBASEVERTEXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSBASEVERTEXPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLint
name|basevertex
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLint
name|basevertex
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|basevertex
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
specifier|const
name|GLint
modifier|*
name|basevertex
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_fragment_coord_conventions
DECL|macro|GL_ARB_fragment_coord_conventions
define|#
directive|define
name|GL_ARB_fragment_coord_conventions
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_provoking_vertex
DECL|macro|GL_ARB_provoking_vertex
define|#
directive|define
name|GL_ARB_provoking_vertex
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProvokingVertex
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROVOKINGVERTEXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROVOKINGVERTEXPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_seamless_cube_map
DECL|macro|GL_ARB_seamless_cube_map
define|#
directive|define
name|GL_ARB_seamless_cube_map
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_sync
DECL|macro|GL_ARB_sync
define|#
directive|define
name|GL_ARB_sync
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLsync
name|APIENTRY
name|glFenceSync
parameter_list|(
name|GLenum
name|condition
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsSync
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteSync
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
name|GLAPI
name|GLenum
name|APIENTRY
name|glClientWaitSync
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWaitSync
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetInteger64v
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSynciv
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFENCESYNCPROC
typedef|typedef
name|GLsync
function_decl|(
name|APIENTRYP
name|PFNGLFENCESYNCPROC
function_decl|)
parameter_list|(
name|GLenum
name|condition
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISSYNCPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISSYNCPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETESYNCPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETESYNCPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLIENTWAITSYNCPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLCLIENTWAITSYNCPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWAITSYNCPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWAITSYNCPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|,
name|GLuint64
name|timeout
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGER64VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINTEGER64VPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSYNCIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSYNCIVPROC
function_decl|)
parameter_list|(
name|GLsync
name|sync
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_multisample
DECL|macro|GL_ARB_texture_multisample
define|#
directive|define
name|GL_ARB_texture_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexImage2DMultisample
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedsamplelocations
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexImage3DMultisample
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedsamplelocations
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultisamplefv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|val
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSampleMaski
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXIMAGE2DMULTISAMPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXIMAGE2DMULTISAMPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedsamplelocations
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXIMAGE3DMULTISAMPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXIMAGE3DMULTISAMPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedsamplelocations
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTISAMPLEFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTISAMPLEFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|val
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLEMASKIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLEMASKIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_array_bgra
DECL|macro|GL_ARB_vertex_array_bgra
define|#
directive|define
name|GL_ARB_vertex_array_bgra
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_buffers_blend
DECL|macro|GL_ARB_draw_buffers_blend
define|#
directive|define
name|GL_ARB_draw_buffers_blend
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationiARB
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationSeparateiARB
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendFunciARB
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendFuncSeparateiARB
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDEQUATIONIARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONIARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONSEPARATEIARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONSEPARATEIARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCIARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCIARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCSEPARATEIARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCSEPARATEIARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_sample_shading
DECL|macro|GL_ARB_sample_shading
define|#
directive|define
name|GL_ARB_sample_shading
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glMinSampleShadingARB
parameter_list|(
name|GLfloat
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMINSAMPLESHADINGARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMINSAMPLESHADINGARBPROC
function_decl|)
parameter_list|(
name|GLfloat
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_cube_map_array
DECL|macro|GL_ARB_texture_cube_map_array
define|#
directive|define
name|GL_ARB_texture_cube_map_array
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_gather
DECL|macro|GL_ARB_texture_gather
define|#
directive|define
name|GL_ARB_texture_gather
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_query_lod
DECL|macro|GL_ARB_texture_query_lod
define|#
directive|define
name|GL_ARB_texture_query_lod
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_include
DECL|macro|GL_ARB_shading_language_include
define|#
directive|define
name|GL_ARB_shading_language_include
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glNamedStringARB
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|,
name|GLint
name|stringlen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|string
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteNamedStringARB
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompileShaderIncludeARB
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|path
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsNamedStringARB
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedStringARB
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|stringlen
parameter_list|,
name|GLchar
modifier|*
name|string
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedStringivARB
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLNAMEDSTRINGARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDSTRINGARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|,
name|GLint
name|stringlen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|string
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETENAMEDSTRINGARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETENAMEDSTRINGARBPROC
function_decl|)
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPILESHADERINCLUDEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPILESHADERINCLUDEARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|shader
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|path
parameter_list|,
specifier|const
name|GLint
modifier|*
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISNAMEDSTRINGARBPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISNAMEDSTRINGARBPROC
function_decl|)
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDSTRINGARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDSTRINGARBPROC
function_decl|)
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|stringlen
parameter_list|,
name|GLchar
modifier|*
name|string
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDSTRINGIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDSTRINGIVARBPROC
function_decl|)
parameter_list|(
name|GLint
name|namelen
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_compression_bptc
DECL|macro|GL_ARB_texture_compression_bptc
define|#
directive|define
name|GL_ARB_texture_compression_bptc
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_blend_func_extended
DECL|macro|GL_ARB_blend_func_extended
define|#
directive|define
name|GL_ARB_blend_func_extended
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindFragDataLocationIndexed
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|colorNumber
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetFragDataIndex
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|colorNumber
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAGDATAINDEXPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAGDATAINDEXPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_explicit_attrib_location
DECL|macro|GL_ARB_explicit_attrib_location
define|#
directive|define
name|GL_ARB_explicit_attrib_location
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_occlusion_query2
DECL|macro|GL_ARB_occlusion_query2
define|#
directive|define
name|GL_ARB_occlusion_query2
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_sampler_objects
DECL|macro|GL_ARB_sampler_objects
define|#
directive|define
name|GL_ARB_sampler_objects
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGenSamplers
parameter_list|(
name|GLsizei
name|count
parameter_list|,
name|GLuint
modifier|*
name|samplers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteSamplers
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|samplers
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsSampler
parameter_list|(
name|GLuint
name|sampler
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindSampler
parameter_list|(
name|GLuint
name|unit
parameter_list|,
name|GLuint
name|sampler
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplerParameteri
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplerParameteriv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplerParameterf
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplerParameterfv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplerParameterIiv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplerParameterIuiv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSamplerParameteriv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSamplerParameterIiv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSamplerParameterfv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSamplerParameterIuiv
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENSAMPLERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENSAMPLERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|count
parameter_list|,
name|GLuint
modifier|*
name|samplers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETESAMPLERSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETESAMPLERSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|samplers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISSAMPLERPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISSAMPLERPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDSAMPLERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDSAMPLERPROC
function_decl|)
parameter_list|(
name|GLuint
name|unit
parameter_list|,
name|GLuint
name|sampler
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLERPARAMETERIPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLERPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLERPARAMETERFPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLERPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERIIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLERPARAMETERIIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLERPARAMETERIUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLERPARAMETERIUIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSAMPLERPARAMETERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSAMPLERPARAMETERIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSAMPLERPARAMETERIIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSAMPLERPARAMETERIIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSAMPLERPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSAMPLERPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSAMPLERPARAMETERIUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSAMPLERPARAMETERIUIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|sampler
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_bit_encoding
DECL|macro|GL_ARB_shader_bit_encoding
define|#
directive|define
name|GL_ARB_shader_bit_encoding
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_rgb10_a2ui
DECL|macro|GL_ARB_texture_rgb10_a2ui
define|#
directive|define
name|GL_ARB_texture_rgb10_a2ui
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_swizzle
DECL|macro|GL_ARB_texture_swizzle
define|#
directive|define
name|GL_ARB_texture_swizzle
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_timer_query
DECL|macro|GL_ARB_timer_query
define|#
directive|define
name|GL_ARB_timer_query
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glQueryCounter
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjecti64v
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjectui64v
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLQUERYCOUNTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLQUERYCOUNTERPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTI64VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTI64VPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTUI64VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTUI64VPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_type_2_10_10_10_rev
DECL|macro|GL_ARB_vertex_type_2_10_10_10_rev
define|#
directive|define
name|GL_ARB_vertex_type_2_10_10_10_rev
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexP2ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexP2uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexP3ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexP3uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexP4ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexP4uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP1ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP1uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP2ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP2uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP3ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP3uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP4ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordP4uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP1ui
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP1uiv
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP2ui
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP2uiv
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP3ui
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP3uiv
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP4ui
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordP4uiv
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalP3ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalP3uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorP3ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|color
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorP3uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|color
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorP4ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|color
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorP4uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|color
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColorP3ui
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|color
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColorP3uiv
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|color
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP1ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP1uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP2ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP2uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP3ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP3uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP4ui
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribP4uiv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXP2UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXP2UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXP2UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXP2UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXP3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXP3UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXP3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXP3UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXP4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXP4UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXP4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXP4UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP1UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP1UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP1UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP1UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP2UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP2UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP2UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP2UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP3UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP3UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP4UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDP4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDP4UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP1UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP1UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP1UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP1UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP2UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP2UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP2UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP2UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP3UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP3UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP4UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDP4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDP4UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|texture
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALP3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALP3UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALP3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALP3UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORP3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORP3UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|color
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORP3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORP3UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|color
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORP4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORP4UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|color
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORP4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORP4UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|color
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLORP3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLORP3UIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|color
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLORP3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLORP3UIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|color
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP1UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP1UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP1UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP1UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP2UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP2UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP2UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP2UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP3UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP3UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP4UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBP4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBP4UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_draw_indirect
DECL|macro|GL_ARB_draw_indirect
define|#
directive|define
name|GL_ARB_draw_indirect
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawArraysIndirect
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsIndirect
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWARRAYSINDIRECTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWARRAYSINDIRECTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINDIRECTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSINDIRECTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_gpu_shader5
DECL|macro|GL_ARB_gpu_shader5
define|#
directive|define
name|GL_ARB_gpu_shader5
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_gpu_shader_fp64
DECL|macro|GL_ARB_gpu_shader_fp64
define|#
directive|define
name|GL_ARB_gpu_shader_fp64
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glUniform1d
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2d
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3d
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4d
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix2dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix3dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix4dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix2x3dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix2x4dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix3x2dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix3x4dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix4x2dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformMatrix4x3dv
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformdv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLUNIFORM1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1DPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2DPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3DPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4DPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX2DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX3DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX4DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2X3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX2X3DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX2X4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX2X4DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3X2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX3X2DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX3X4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX3X4DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4X2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX4X2DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMMATRIX4X3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMMATRIX4X3DVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMDVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMDVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_subroutine
DECL|macro|GL_ARB_shader_subroutine
define|#
directive|define
name|GL_ARB_shader_subroutine
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLint
name|APIENTRY
name|glGetSubroutineUniformLocation
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glGetSubroutineIndex
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveSubroutineUniformiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveSubroutineUniformName
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveSubroutineName
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformSubroutinesuiv
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|indices
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformSubroutineuiv
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramStageiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSUBROUTINEINDEXPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGETSUBROUTINEINDEXPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVESUBROUTINENAMEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVESUBROUTINENAMEPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMSUBROUTINESUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMSUBROUTINESUIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|indices
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMSUBROUTINEUIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMSUBROUTINEUIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMSTAGEIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMSTAGEIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_tessellation_shader
DECL|macro|GL_ARB_tessellation_shader
define|#
directive|define
name|GL_ARB_tessellation_shader
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPatchParameteri
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPatchParameterfv
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPATCHPARAMETERIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATCHPARAMETERIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATCHPARAMETERFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATCHPARAMETERFVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_buffer_object_rgb32
DECL|macro|GL_ARB_texture_buffer_object_rgb32
define|#
directive|define
name|GL_ARB_texture_buffer_object_rgb32
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transform_feedback2
DECL|macro|GL_ARB_transform_feedback2
define|#
directive|define
name|GL_ARB_transform_feedback2
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindTransformFeedback
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteTransformFeedbacks
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenTransformFeedbacks
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsTransformFeedback
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPauseTransformFeedback
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glResumeTransformFeedback
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawTransformFeedback
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDTRANSFORMFEEDBACKPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDTRANSFORMFEEDBACKPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETETRANSFORMFEEDBACKSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETETRANSFORMFEEDBACKSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENTRANSFORMFEEDBACKSPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENTRANSFORMFEEDBACKSPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISTRANSFORMFEEDBACKPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISTRANSFORMFEEDBACKPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPAUSETRANSFORMFEEDBACKPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPAUSETRANSFORMFEEDBACKPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESUMETRANSFORMFEEDBACKPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRESUMETRANSFORMFEEDBACKPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWTRANSFORMFEEDBACKPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWTRANSFORMFEEDBACKPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transform_feedback3
DECL|macro|GL_ARB_transform_feedback3
define|#
directive|define
name|GL_ARB_transform_feedback3
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawTransformFeedbackStream
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLuint
name|stream
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginQueryIndexed
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndQueryIndexed
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryIndexediv
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLuint
name|stream
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINQUERYINDEXEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINQUERYINDEXEDPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDQUERYINDEXEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDQUERYINDEXEDPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYINDEXEDIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYINDEXEDIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_ES2_compatibility
DECL|macro|GL_ARB_ES2_compatibility
define|#
directive|define
name|GL_ARB_ES2_compatibility
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glReleaseShaderCompiler
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glShaderBinary
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetShaderPrecisionFormat
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDepthRangef
parameter_list|(
name|GLfloat
name|n
parameter_list|,
name|GLfloat
name|f
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearDepthf
parameter_list|(
name|GLfloat
name|d
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLRELEASESHADERCOMPILERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRELEASESHADERCOMPILERPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADERBINARYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSHADERBINARYPROC
function_decl|)
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|shaders
parameter_list|,
name|GLenum
name|binaryformat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHADERPRECISIONFORMATPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSHADERPRECISIONFORMATPROC
function_decl|)
parameter_list|(
name|GLenum
name|shadertype
parameter_list|,
name|GLenum
name|precisiontype
parameter_list|,
name|GLint
modifier|*
name|range
parameter_list|,
name|GLint
modifier|*
name|precision
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEPTHRANGEFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEPTHRANGEFPROC
function_decl|)
parameter_list|(
name|GLfloat
name|n
parameter_list|,
name|GLfloat
name|f
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARDEPTHFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARDEPTHFPROC
function_decl|)
parameter_list|(
name|GLfloat
name|d
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_get_program_binary
DECL|macro|GL_ARB_get_program_binary
define|#
directive|define
name|GL_ARB_get_program_binary
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramBinary
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLenum
modifier|*
name|binaryFormat
parameter_list|,
name|GLvoid
modifier|*
name|binary
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramBinary
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameteri
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETPROGRAMBINARYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMBINARYPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLenum
modifier|*
name|binaryFormat
parameter_list|,
name|GLvoid
modifier|*
name|binary
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMBINARYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMBINARYPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|binaryFormat
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|binary
parameter_list|,
name|GLsizei
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETERIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETERIPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_separate_shader_objects
DECL|macro|GL_ARB_separate_shader_objects
define|#
directive|define
name|GL_ARB_separate_shader_objects
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glUseProgramStages
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLbitfield
name|stages
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glActiveShaderProgram
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glCreateShaderProgramv
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|strings
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindProgramPipeline
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteProgramPipelines
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenProgramPipelines
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsProgramPipeline
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramPipelineiv
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1i
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1iv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1f
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1d
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1ui
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1uiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2i
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2iv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2f
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2d
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|,
name|GLdouble
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2ui
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2uiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3i
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3iv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3f
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3d
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3ui
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3uiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4i
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4iv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4f
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4d
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLdouble
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4ui
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4uiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x3fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x2fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x4fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x2fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x4fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x3fv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x3dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x2dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x4dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x2dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x4dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x3dv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glValidateProgramPipeline
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramPipelineInfoLog
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLUSEPROGRAMSTAGESPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUSEPROGRAMSTAGESPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLbitfield
name|stages
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLACTIVESHADERPROGRAMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLACTIVESHADERPROGRAMPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATESHADERPROGRAMVPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLCREATESHADERPROGRAMVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
specifier|const
modifier|*
name|strings
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDPROGRAMPIPELINEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDPROGRAMPIPELINEPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPROGRAMPIPELINESPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEPROGRAMPIPELINESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPROGRAMPIPELINESPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENPROGRAMPIPELINESPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|pipelines
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPROGRAMPIPELINEPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISPROGRAMPIPELINEPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPIPELINEIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMPIPELINEIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1IPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1FPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1DPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2IPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2FPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2DPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|,
name|GLdouble
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3IPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3FPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3DPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4IPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4IVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4FPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4DPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|v0
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLdouble
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4UIPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4UIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVALIDATEPROGRAMPIPELINEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVALIDATEPROGRAMPIPELINEPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPIPELINEINFOLOGPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMPIPELINEINFOLOGPROC
function_decl|)
parameter_list|(
name|GLuint
name|pipeline
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|infoLog
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_vertex_attrib_64bit
DECL|macro|GL_ARB_vertex_attrib_64bit
define|#
directive|define
name|GL_ARB_vertex_attrib_64bit
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4d
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4dv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribLPointer
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribLdv
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIBL1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4DPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL1DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4DVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4DVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBLPOINTERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBLPOINTERPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBLDVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBLDVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_viewport_array
DECL|macro|GL_ARB_viewport_array
define|#
directive|define
name|GL_ARB_viewport_array
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glViewportArrayv
parameter_list|(
name|GLuint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glViewportIndexedf
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|w
parameter_list|,
name|GLfloat
name|h
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glViewportIndexedfv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glScissorArrayv
parameter_list|(
name|GLuint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glScissorIndexed
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|left
parameter_list|,
name|GLint
name|bottom
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glScissorIndexedv
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDepthRangeArrayv
parameter_list|(
name|GLuint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDepthRangeIndexed
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|n
parameter_list|,
name|GLdouble
name|f
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFloati_v
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetDoublei_v
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|data
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVIEWPORTARRAYVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVIEWPORTARRAYVPROC
function_decl|)
parameter_list|(
name|GLuint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVIEWPORTINDEXEDFPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVIEWPORTINDEXEDFPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|w
parameter_list|,
name|GLfloat
name|h
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVIEWPORTINDEXEDFVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVIEWPORTINDEXEDFVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSCISSORARRAYVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSCISSORARRAYVPROC
function_decl|)
parameter_list|(
name|GLuint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSCISSORINDEXEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSCISSORINDEXEDPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|left
parameter_list|,
name|GLint
name|bottom
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSCISSORINDEXEDVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSCISSORINDEXEDVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEPTHRANGEARRAYVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEPTHRANGEARRAYVPROC
function_decl|)
parameter_list|(
name|GLuint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEPTHRANGEINDEXEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEPTHRANGEINDEXEDPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|n
parameter_list|,
name|GLdouble
name|f
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFLOATI_VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFLOATI_VPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDOUBLEI_VPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETDOUBLEI_VPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|data
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_cl_event
DECL|macro|GL_ARB_cl_event
define|#
directive|define
name|GL_ARB_cl_event
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLsync
name|APIENTRY
name|glCreateSyncFromCLeventARB
parameter_list|(
name|struct
name|_cl_context
modifier|*
name|context
parameter_list|,
name|struct
name|_cl_event
modifier|*
name|event
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCREATESYNCFROMCLEVENTARBPROC
typedef|typedef
name|GLsync
function_decl|(
name|APIENTRYP
name|PFNGLCREATESYNCFROMCLEVENTARBPROC
function_decl|)
parameter_list|(
name|struct
name|_cl_context
modifier|*
name|context
parameter_list|,
name|struct
name|_cl_event
modifier|*
name|event
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_debug_output
DECL|macro|GL_ARB_debug_output
define|#
directive|define
name|GL_ARB_debug_output
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDebugMessageControlARB
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLboolean
name|enabled
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDebugMessageInsertARB
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|buf
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDebugMessageCallbackARB
parameter_list|(
name|GLDEBUGPROCARB
name|callback
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|userParam
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glGetDebugMessageLogARB
parameter_list|(
name|GLuint
name|count
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLenum
modifier|*
name|sources
parameter_list|,
name|GLenum
modifier|*
name|types
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLenum
modifier|*
name|severities
parameter_list|,
name|GLsizei
modifier|*
name|lengths
parameter_list|,
name|GLchar
modifier|*
name|messageLog
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDEBUGMESSAGECONTROLARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEBUGMESSAGECONTROLARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLboolean
name|enabled
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEBUGMESSAGEINSERTARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEBUGMESSAGEINSERTARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|source
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|buf
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEBUGMESSAGECALLBACKARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEBUGMESSAGECALLBACKARBPROC
function_decl|)
parameter_list|(
name|GLDEBUGPROCARB
name|callback
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|userParam
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDEBUGMESSAGELOGARBPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGETDEBUGMESSAGELOGARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|count
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLenum
modifier|*
name|sources
parameter_list|,
name|GLenum
modifier|*
name|types
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLenum
modifier|*
name|severities
parameter_list|,
name|GLsizei
modifier|*
name|lengths
parameter_list|,
name|GLchar
modifier|*
name|messageLog
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_robustness
DECL|macro|GL_ARB_robustness
define|#
directive|define
name|GL_ARB_robustness
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLenum
name|APIENTRY
name|glGetGraphicsResetStatusARB
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnMapdvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnMapfvARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnMapivARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnPixelMapfvARB
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnPixelMapuivARB
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLuint
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnPixelMapusvARB
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLushort
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnPolygonStippleARB
parameter_list|(
name|GLsizei
name|bufSize
parameter_list|,
name|GLubyte
modifier|*
name|pattern
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnColorTableARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnConvolutionFilterARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnSeparableFilterARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|rowBufSize
parameter_list|,
name|GLvoid
modifier|*
name|row
parameter_list|,
name|GLsizei
name|columnBufSize
parameter_list|,
name|GLvoid
modifier|*
name|column
parameter_list|,
name|GLvoid
modifier|*
name|span
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnHistogramARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnMinmaxARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnTexImageARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReadnPixelsARB
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnCompressedTexImageARB
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|lod
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnUniformfvARB
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnUniformivARB
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnUniformuivARB
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetnUniformdvARB
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETGRAPHICSRESETSTATUSARBPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLGETGRAPHICSRESETSTATUSARBPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNMAPDVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNMAPDVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNMAPFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNMAPFVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNMAPIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNMAPIVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|query
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNPIXELMAPFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNPIXELMAPFVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNPIXELMAPUIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNPIXELMAPUIVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLuint
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNPIXELMAPUSVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNPIXELMAPUSVARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|map
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLushort
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNPOLYGONSTIPPLEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNPOLYGONSTIPPLEARBPROC
function_decl|)
parameter_list|(
name|GLsizei
name|bufSize
parameter_list|,
name|GLubyte
modifier|*
name|pattern
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNCOLORTABLEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNCOLORTABLEARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNCONVOLUTIONFILTERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNCONVOLUTIONFILTERARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNSEPARABLEFILTERARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNSEPARABLEFILTERARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|rowBufSize
parameter_list|,
name|GLvoid
modifier|*
name|row
parameter_list|,
name|GLsizei
name|columnBufSize
parameter_list|,
name|GLvoid
modifier|*
name|column
parameter_list|,
name|GLvoid
modifier|*
name|span
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNHISTOGRAMARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNHISTOGRAMARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNMINMAXARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNMINMAXARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNTEXIMAGEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNTEXIMAGEARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREADNPIXELSARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREADNPIXELSARBPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|lod
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMFVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNUNIFORMFVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNUNIFORMIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMUIVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNUNIFORMUIVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNUNIFORMDVARBPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNUNIFORMDVARBPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_stencil_export
DECL|macro|GL_ARB_shader_stencil_export
define|#
directive|define
name|GL_ARB_shader_stencil_export
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_base_instance
DECL|macro|GL_ARB_base_instance
define|#
directive|define
name|GL_ARB_base_instance
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawArraysInstancedBaseInstance
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLuint
name|baseinstance
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsInstancedBaseInstance
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLuint
name|baseinstance
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsInstancedBaseVertexBaseInstance
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|basevertex
parameter_list|,
name|GLuint
name|baseinstance
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLuint
name|baseinstance
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLuint
name|baseinstance
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|void
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|basevertex
parameter_list|,
name|GLuint
name|baseinstance
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_420pack
DECL|macro|GL_ARB_shading_language_420pack
define|#
directive|define
name|GL_ARB_shading_language_420pack
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_transform_feedback_instanced
DECL|macro|GL_ARB_transform_feedback_instanced
define|#
directive|define
name|GL_ARB_transform_feedback_instanced
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawTransformFeedbackInstanced
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawTransformFeedbackStreamInstanced
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_compressed_texture_pixel_storage
DECL|macro|GL_ARB_compressed_texture_pixel_storage
define|#
directive|define
name|GL_ARB_compressed_texture_pixel_storage
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_conservative_depth
DECL|macro|GL_ARB_conservative_depth
define|#
directive|define
name|GL_ARB_conservative_depth
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_internalformat_query
DECL|macro|GL_ARB_internalformat_query
define|#
directive|define
name|GL_ARB_internalformat_query
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetInternalformativ
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETINTERNALFORMATIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINTERNALFORMATIVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_map_buffer_alignment
DECL|macro|GL_ARB_map_buffer_alignment
define|#
directive|define
name|GL_ARB_map_buffer_alignment
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_atomic_counters
DECL|macro|GL_ARB_shader_atomic_counters
define|#
directive|define
name|GL_ARB_shader_atomic_counters
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveAtomicCounterBufferiv
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|bufferIndex
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|bufferIndex
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shader_image_load_store
DECL|macro|GL_ARB_shader_image_load_store
define|#
directive|define
name|GL_ARB_shader_image_load_store
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindImageTexture
parameter_list|(
name|GLuint
name|unit
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLboolean
name|layered
parameter_list|,
name|GLint
name|layer
parameter_list|,
name|GLenum
name|access
parameter_list|,
name|GLenum
name|format
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMemoryBarrier
parameter_list|(
name|GLbitfield
name|barriers
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDIMAGETEXTUREPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDIMAGETEXTUREPROC
function_decl|)
parameter_list|(
name|GLuint
name|unit
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLboolean
name|layered
parameter_list|,
name|GLint
name|layer
parameter_list|,
name|GLenum
name|access
parameter_list|,
name|GLenum
name|format
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMEMORYBARRIERPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMEMORYBARRIERPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|barriers
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_shading_language_packing
DECL|macro|GL_ARB_shading_language_packing
define|#
directive|define
name|GL_ARB_shading_language_packing
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ARB_texture_storage
DECL|macro|GL_ARB_texture_storage
define|#
directive|define
name|GL_ARB_texture_storage
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexStorage1D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexStorage2D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexStorage3D
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureStorage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureStorage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureStorage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXSTORAGE1DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSTORAGE1DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSTORAGE2DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSTORAGE2DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSTORAGE3DPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSTORAGE3DPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURESTORAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURESTORAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESTORAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURESTORAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|levels
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_abgr
DECL|macro|GL_EXT_abgr
define|#
directive|define
name|GL_EXT_abgr
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_color
DECL|macro|GL_EXT_blend_color
define|#
directive|define
name|GL_EXT_blend_color
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendColorEXT
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDCOLOREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDCOLOREXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|,
name|GLfloat
name|alpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_polygon_offset
DECL|macro|GL_EXT_polygon_offset
define|#
directive|define
name|GL_EXT_polygon_offset
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPolygonOffsetEXT
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|bias
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPOLYGONOFFSETEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOLYGONOFFSETEXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|bias
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture
DECL|macro|GL_EXT_texture
define|#
directive|define
name|GL_EXT_texture
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture3D
DECL|macro|GL_EXT_texture3D
define|#
directive|define
name|GL_EXT_texture3D
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexImage3DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexSubImage3DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_filter4
DECL|macro|GL_SGIS_texture_filter4
define|#
directive|define
name|GL_SGIS_texture_filter4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetTexFilterFuncSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|filter
parameter_list|,
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexFilterFuncSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|filter
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETTEXFILTERFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXFILTERFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|filter
parameter_list|,
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXFILTERFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXFILTERFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|filter
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_subtexture
DECL|macro|GL_EXT_subtexture
define|#
directive|define
name|GL_EXT_subtexture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexSubImage1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexSubImage2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXSUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_copy_texture
DECL|macro|GL_EXT_copy_texture
define|#
directive|define
name|GL_EXT_copy_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCopyTexImage1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTexImage2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTexSubImage1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTexSubImage2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTexSubImage3DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOPYTEXIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXSUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXSUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXSUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXSUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXSUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXSUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_histogram
DECL|macro|GL_EXT_histogram
define|#
directive|define
name|GL_EXT_histogram
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetHistogramEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetHistogramParameterfvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetHistogramParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMinmaxEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMinmaxParameterfvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMinmaxParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glHistogramEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMinmaxEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glResetHistogramEXT
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glResetMinmaxEXT
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETHISTOGRAMEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETHISTOGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMINMAXEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMINMAXEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLboolean
name|reset
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMINMAXPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMINMAXPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMINMAXPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMINMAXPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLHISTOGRAMEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLHISTOGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMINMAXEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMINMAXEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLboolean
name|sink
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESETHISTOGRAMEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRESETHISTOGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESETMINMAXEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRESETMINMAXEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_convolution
DECL|macro|GL_EXT_convolution
define|#
directive|define
name|GL_EXT_convolution
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionFilter1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionFilter2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameterfEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameterfvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameteriEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glConvolutionParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyConvolutionFilter1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyConvolutionFilter2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetConvolutionFilterEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetConvolutionParameterfvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetConvolutionParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSeparableFilterEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|row
parameter_list|,
name|GLvoid
modifier|*
name|column
parameter_list|,
name|GLvoid
modifier|*
name|span
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSeparableFilter2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|row
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|column
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCONVOLUTIONFILTER1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONFILTER1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONFILTER2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONFILTER2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCONVOLUTIONPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCONVOLUTIONPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCONVOLUTIONFILTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCONVOLUTIONFILTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|image
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSEPARABLEFILTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSEPARABLEFILTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|row
parameter_list|,
name|GLvoid
modifier|*
name|column
parameter_list|,
name|GLvoid
modifier|*
name|span
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSEPARABLEFILTER2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSEPARABLEFILTER2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|row
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|column
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGI_color_matrix
DECL|macro|GL_SGI_color_matrix
define|#
directive|define
name|GL_SGI_color_matrix
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGI_color_table
DECL|macro|GL_SGI_color_table
define|#
directive|define
name|GL_SGI_color_table
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColorTableSGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorTableParameterfvSGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorTableParameterivSGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyColorTableSGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableSGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableParameterfvSGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableParameterivSGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLORTABLESGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORTABLESGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORTABLEPARAMETERFVSGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORTABLEPARAMETERFVSGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORTABLEPARAMETERIVSGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORTABLEPARAMETERIVSGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCOLORTABLESGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCOLORTABLESGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLESGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLESGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_pixel_texture
DECL|macro|GL_SGIX_pixel_texture
define|#
directive|define
name|GL_SGIX_pixel_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPixelTexGenSGIX
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPIXELTEXGENSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTEXGENSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_pixel_texture
DECL|macro|GL_SGIS_pixel_texture
define|#
directive|define
name|GL_SGIS_pixel_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPixelTexGenParameteriSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPixelTexGenParameterivSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPixelTexGenParameterfSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPixelTexGenParameterfvSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPixelTexGenParameterivSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPixelTexGenParameterfvSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPIXELTEXGENPARAMETERISGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTEXGENPARAMETERISGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPIXELTEXGENPARAMETERIVSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTEXGENPARAMETERIVSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPIXELTEXGENPARAMETERFSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTEXGENPARAMETERFSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPIXELTEXGENPARAMETERFVSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTEXGENPARAMETERFVSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture4D
DECL|macro|GL_SGIS_texture4D
define|#
directive|define
name|GL_SGIS_texture4D
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexImage4DSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLsizei
name|size4d
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexSubImage4DSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|woffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLsizei
name|size4d
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXIMAGE4DSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXIMAGE4DSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLsizei
name|size4d
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXSUBIMAGE4DSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXSUBIMAGE4DSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|woffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLsizei
name|size4d
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGI_texture_color_table
DECL|macro|GL_SGI_texture_color_table
define|#
directive|define
name|GL_SGI_texture_color_table
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_cmyka
DECL|macro|GL_EXT_cmyka
define|#
directive|define
name|GL_EXT_cmyka
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_object
DECL|macro|GL_EXT_texture_object
define|#
directive|define
name|GL_EXT_texture_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLboolean
name|APIENTRY
name|glAreTexturesResidentEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLboolean
modifier|*
name|residences
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindTextureEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteTexturesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenTexturesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsTextureEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPrioritizeTexturesEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
specifier|const
name|GLclampf
modifier|*
name|priorities
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLARETEXTURESRESIDENTEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLARETEXTURESRESIDENTEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
name|GLboolean
modifier|*
name|residences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDTEXTUREEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDTEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETETEXTURESEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETETEXTURESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENTEXTURESEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENTEXTURESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|textures
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISTEXTUREEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISTEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPRIORITIZETEXTURESEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPRIORITIZETEXTURESEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textures
parameter_list|,
specifier|const
name|GLclampf
modifier|*
name|priorities
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_detail_texture
DECL|macro|GL_SGIS_detail_texture
define|#
directive|define
name|GL_SGIS_detail_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDetailTexFuncSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetDetailTexFuncSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDETAILTEXFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDETAILTEXFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDETAILTEXFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETDETAILTEXFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_sharpen_texture
DECL|macro|GL_SGIS_sharpen_texture
define|#
directive|define
name|GL_SGIS_sharpen_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glSharpenTexFuncSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetSharpenTexFuncSGIS
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSHARPENTEXFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSHARPENTEXFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETSHARPENTEXFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETSHARPENTEXFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_packed_pixels
DECL|macro|GL_EXT_packed_pixels
define|#
directive|define
name|GL_EXT_packed_pixels
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_lod
DECL|macro|GL_SGIS_texture_lod
define|#
directive|define
name|GL_SGIS_texture_lod
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_multisample
DECL|macro|GL_SGIS_multisample
define|#
directive|define
name|GL_SGIS_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glSampleMaskSGIS
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplePatternSGIS
parameter_list|(
name|GLenum
name|pattern
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSAMPLEMASKSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLEMASKSGISPROC
function_decl|)
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLEPATTERNSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLEPATTERNSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pattern
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_rescale_normal
DECL|macro|GL_EXT_rescale_normal
define|#
directive|define
name|GL_EXT_rescale_normal
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_array
DECL|macro|GL_EXT_vertex_array
define|#
directive|define
name|GL_EXT_vertex_array
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glArrayElementEXT
parameter_list|(
name|GLint
name|i
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorPointerEXT
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawArraysEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEdgeFlagPointerEXT
parameter_list|(
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLboolean
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPointervEXT
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glIndexPointerEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalPointerEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordPointerEXT
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexPointerEXT
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLARRAYELEMENTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLARRAYELEMENTEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|i
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWARRAYSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWARRAYSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEDGEFLAGPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLEDGEFLAGPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLboolean
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPOINTERVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPOINTERVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLINDEXPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINDEXPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_misc_attribute
DECL|macro|GL_EXT_misc_attribute
define|#
directive|define
name|GL_EXT_misc_attribute
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_generate_mipmap
DECL|macro|GL_SGIS_generate_mipmap
define|#
directive|define
name|GL_SGIS_generate_mipmap
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_clipmap
DECL|macro|GL_SGIX_clipmap
define|#
directive|define
name|GL_SGIX_clipmap
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_shadow
DECL|macro|GL_SGIX_shadow
define|#
directive|define
name|GL_SGIX_shadow
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_edge_clamp
DECL|macro|GL_SGIS_texture_edge_clamp
define|#
directive|define
name|GL_SGIS_texture_edge_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_border_clamp
DECL|macro|GL_SGIS_texture_border_clamp
define|#
directive|define
name|GL_SGIS_texture_border_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_minmax
DECL|macro|GL_EXT_blend_minmax
define|#
directive|define
name|GL_EXT_blend_minmax
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDEQUATIONEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_subtract
DECL|macro|GL_EXT_blend_subtract
define|#
directive|define
name|GL_EXT_blend_subtract
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_logic_op
DECL|macro|GL_EXT_blend_logic_op
define|#
directive|define
name|GL_EXT_blend_logic_op
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_interlace
DECL|macro|GL_SGIX_interlace
define|#
directive|define
name|GL_SGIX_interlace
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_pixel_tiles
DECL|macro|GL_SGIX_pixel_tiles
define|#
directive|define
name|GL_SGIX_pixel_tiles
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_select
DECL|macro|GL_SGIX_texture_select
define|#
directive|define
name|GL_SGIX_texture_select
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_sprite
DECL|macro|GL_SGIX_sprite
define|#
directive|define
name|GL_SGIX_sprite
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glSpriteParameterfSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSpriteParameterfvSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSpriteParameteriSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSpriteParameterivSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSPRITEPARAMETERFSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSPRITEPARAMETERFSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSPRITEPARAMETERFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSPRITEPARAMETERFVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSPRITEPARAMETERISGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSPRITEPARAMETERISGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSPRITEPARAMETERIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSPRITEPARAMETERIVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_multi_buffer
DECL|macro|GL_SGIX_texture_multi_buffer
define|#
directive|define
name|GL_SGIX_texture_multi_buffer
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_point_parameters
DECL|macro|GL_EXT_point_parameters
define|#
directive|define
name|GL_EXT_point_parameters
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterfEXT
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterfvEXT
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPOINTPARAMETERFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_point_parameters
DECL|macro|GL_SGIS_point_parameters
define|#
directive|define
name|GL_SGIS_point_parameters
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterfSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterfvSGIS
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPOINTPARAMETERFSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERFVSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERFVSGISPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_instruments
DECL|macro|GL_SGIX_instruments
define|#
directive|define
name|GL_SGIX_instruments
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLint
name|APIENTRY
name|glGetInstrumentsSGIX
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glInstrumentsBufferSGIX
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLint
modifier|*
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glPollInstrumentsSGIX
parameter_list|(
name|GLint
modifier|*
name|marker_p
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReadInstrumentsSGIX
parameter_list|(
name|GLint
name|marker
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStartInstrumentsSGIX
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStopInstrumentsSGIX
parameter_list|(
name|GLint
name|marker
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETINSTRUMENTSSGIXPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETINSTRUMENTSSGIXPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLINSTRUMENTSBUFFERSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINSTRUMENTSBUFFERSGIXPROC
function_decl|)
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLint
modifier|*
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOLLINSTRUMENTSSGIXPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLPOLLINSTRUMENTSSGIXPROC
function_decl|)
parameter_list|(
name|GLint
modifier|*
name|marker_p
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREADINSTRUMENTSSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREADINSTRUMENTSSGIXPROC
function_decl|)
parameter_list|(
name|GLint
name|marker
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTARTINSTRUMENTSSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTARTINSTRUMENTSSGIXPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTOPINSTRUMENTSSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTOPINSTRUMENTSSGIXPROC
function_decl|)
parameter_list|(
name|GLint
name|marker
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_scale_bias
DECL|macro|GL_SGIX_texture_scale_bias
define|#
directive|define
name|GL_SGIX_texture_scale_bias
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_framezoom
DECL|macro|GL_SGIX_framezoom
define|#
directive|define
name|GL_SGIX_framezoom
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFrameZoomSGIX
parameter_list|(
name|GLint
name|factor
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFRAMEZOOMSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEZOOMSGIXPROC
function_decl|)
parameter_list|(
name|GLint
name|factor
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_tag_sample_buffer
DECL|macro|GL_SGIX_tag_sample_buffer
define|#
directive|define
name|GL_SGIX_tag_sample_buffer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTagSampleBufferSGIX
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTAGSAMPLEBUFFERSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTAGSAMPLEBUFFERSGIXPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_polynomial_ffd
DECL|macro|GL_SGIX_polynomial_ffd
define|#
directive|define
name|GL_SGIX_polynomial_ffd
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDeformationMap3dSGIX
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
name|GLdouble
name|w1
parameter_list|,
name|GLdouble
name|w2
parameter_list|,
name|GLint
name|wstride
parameter_list|,
name|GLint
name|worder
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeformationMap3fSGIX
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
name|GLfloat
name|w1
parameter_list|,
name|GLfloat
name|w2
parameter_list|,
name|GLint
name|wstride
parameter_list|,
name|GLint
name|worder
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeformSGIX
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLoadIdentityDeformationMapSGIX
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDEFORMATIONMAP3DSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEFORMATIONMAP3DSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
name|GLdouble
name|w1
parameter_list|,
name|GLdouble
name|w2
parameter_list|,
name|GLint
name|wstride
parameter_list|,
name|GLint
name|worder
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEFORMATIONMAP3FSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEFORMATIONMAP3FSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
name|GLfloat
name|w1
parameter_list|,
name|GLfloat
name|w2
parameter_list|,
name|GLint
name|wstride
parameter_list|,
name|GLint
name|worder
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEFORMSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEFORMSGIXPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_reference_plane
DECL|macro|GL_SGIX_reference_plane
define|#
directive|define
name|GL_SGIX_reference_plane
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glReferencePlaneSGIX
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|equation
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLREFERENCEPLANESGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREFERENCEPLANESGIXPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|equation
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_flush_raster
DECL|macro|GL_SGIX_flush_raster
define|#
directive|define
name|GL_SGIX_flush_raster
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFlushRasterSGIX
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFLUSHRASTERSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFLUSHRASTERSGIXPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_depth_texture
DECL|macro|GL_SGIX_depth_texture
define|#
directive|define
name|GL_SGIX_depth_texture
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_fog_function
DECL|macro|GL_SGIS_fog_function
define|#
directive|define
name|GL_SGIS_fog_function
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFogFuncSGIS
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFogFuncSGIS
parameter_list|(
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFOGFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFOGFUNCSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFOGFUNCSGISPROC
function_decl|)
parameter_list|(
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_fog_offset
DECL|macro|GL_SGIX_fog_offset
define|#
directive|define
name|GL_SGIX_fog_offset
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_image_transform
DECL|macro|GL_HP_image_transform
define|#
directive|define
name|GL_HP_image_transform
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glImageTransformParameteriHP
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glImageTransformParameterfHP
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glImageTransformParameterivHP
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glImageTransformParameterfvHP
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetImageTransformParameterivHP
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetImageTransformParameterfvHP
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLIMAGETRANSFORMPARAMETERIHPPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLIMAGETRANSFORMPARAMETERIHPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLIMAGETRANSFORMPARAMETERFHPPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLIMAGETRANSFORMPARAMETERFHPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_convolution_border_modes
DECL|macro|GL_HP_convolution_border_modes
define|#
directive|define
name|GL_HP_convolution_border_modes
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_add_env
DECL|macro|GL_SGIX_texture_add_env
define|#
directive|define
name|GL_SGIX_texture_add_env
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_color_subtable
DECL|macro|GL_EXT_color_subtable
define|#
directive|define
name|GL_EXT_color_subtable
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColorSubTableEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyColorSubTableEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLORSUBTABLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORSUBTABLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYCOLORSUBTABLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYCOLORSUBTABLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|start
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PGI_vertex_hints
DECL|macro|GL_PGI_vertex_hints
define|#
directive|define
name|GL_PGI_vertex_hints
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_PGI_misc_hints
DECL|macro|GL_PGI_misc_hints
define|#
directive|define
name|GL_PGI_misc_hints
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glHintPGI
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLHINTPGIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLHINTPGIPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_paletted_texture
DECL|macro|GL_EXT_paletted_texture
define|#
directive|define
name|GL_EXT_paletted_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColorTableEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetColorTableParameterfvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLORTABLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORTABLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|table
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_clip_volume_hint
DECL|macro|GL_EXT_clip_volume_hint
define|#
directive|define
name|GL_EXT_clip_volume_hint
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_list_priority
DECL|macro|GL_SGIX_list_priority
define|#
directive|define
name|GL_SGIX_list_priority
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetListParameterfvSGIX
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetListParameterivSGIX
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glListParameterfSGIX
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glListParameterfvSGIX
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glListParameteriSGIX
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glListParameterivSGIX
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETLISTPARAMETERFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETLISTPARAMETERFVSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETLISTPARAMETERIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETLISTPARAMETERIVSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLISTPARAMETERFSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLISTPARAMETERFSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLISTPARAMETERFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLISTPARAMETERFVSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLISTPARAMETERISGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLISTPARAMETERISGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLISTPARAMETERIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLISTPARAMETERIVSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|list
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ir_instrument1
DECL|macro|GL_SGIX_ir_instrument1
define|#
directive|define
name|GL_SGIX_ir_instrument1
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_calligraphic_fragment
DECL|macro|GL_SGIX_calligraphic_fragment
define|#
directive|define
name|GL_SGIX_calligraphic_fragment
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_lod_bias
DECL|macro|GL_SGIX_texture_lod_bias
define|#
directive|define
name|GL_SGIX_texture_lod_bias
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_shadow_ambient
DECL|macro|GL_SGIX_shadow_ambient
define|#
directive|define
name|GL_SGIX_shadow_ambient
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_texture
DECL|macro|GL_EXT_index_texture
define|#
directive|define
name|GL_EXT_index_texture
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_material
DECL|macro|GL_EXT_index_material
define|#
directive|define
name|GL_EXT_index_material
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glIndexMaterialEXT
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLINDEXMATERIALEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINDEXMATERIALEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_func
DECL|macro|GL_EXT_index_func
define|#
directive|define
name|GL_EXT_index_func
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glIndexFuncEXT
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLclampf
name|ref
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLINDEXFUNCEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINDEXFUNCEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLclampf
name|ref
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_index_array_formats
DECL|macro|GL_EXT_index_array_formats
define|#
directive|define
name|GL_EXT_index_array_formats
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_compiled_vertex_array
DECL|macro|GL_EXT_compiled_vertex_array
define|#
directive|define
name|GL_EXT_compiled_vertex_array
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glLockArraysEXT
parameter_list|(
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUnlockArraysEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLLOCKARRAYSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLOCKARRAYSEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNLOCKARRAYSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNLOCKARRAYSEXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_cull_vertex
DECL|macro|GL_EXT_cull_vertex
define|#
directive|define
name|GL_EXT_cull_vertex
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCullParameterdvEXT
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCullParameterfvEXT
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCULLPARAMETERDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCULLPARAMETERDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCULLPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCULLPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ycrcb
DECL|macro|GL_SGIX_ycrcb
define|#
directive|define
name|GL_SGIX_ycrcb
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_fragment_lighting
DECL|macro|GL_SGIX_fragment_lighting
define|#
directive|define
name|GL_SGIX_fragment_lighting
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFragmentColorMaterialSGIX
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightfSGIX
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightfvSGIX
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightiSGIX
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightivSGIX
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightModelfSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightModelfvSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightModeliSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentLightModelivSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentMaterialfSGIX
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentMaterialfvSGIX
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentMaterialiSGIX
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFragmentMaterialivSGIX
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFragmentLightfvSGIX
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFragmentLightivSGIX
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFragmentMaterialfvSGIX
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFragmentMaterialivSGIX
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLightEnviSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFRAGMENTCOLORMATERIALSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTCOLORMATERIALSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTFSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTFSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTFVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTISGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTISGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTIVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTMODELFSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTMODELFSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTMODELISGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTMODELISGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTMATERIALFSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTMATERIALFSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTMATERIALFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTMATERIALFVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTMATERIALISGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTMATERIALISGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAGMENTMATERIALIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAGMENTMATERIALIVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAGMENTLIGHTFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAGMENTLIGHTFVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAGMENTLIGHTIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAGMENTLIGHTIVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAGMENTMATERIALFVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAGMENTMATERIALFVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAGMENTMATERIALIVSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAGMENTMATERIALIVSGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLIGHTENVISGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLIGHTENVISGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_rasterpos_clip
DECL|macro|GL_IBM_rasterpos_clip
define|#
directive|define
name|GL_IBM_rasterpos_clip
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_texture_lighting
DECL|macro|GL_HP_texture_lighting
define|#
directive|define
name|GL_HP_texture_lighting
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_draw_range_elements
DECL|macro|GL_EXT_draw_range_elements
define|#
directive|define
name|GL_EXT_draw_range_elements
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawRangeElementsEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWRANGEELEMENTSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWRANGEELEMENTSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_WIN_phong_shading
DECL|macro|GL_WIN_phong_shading
define|#
directive|define
name|GL_WIN_phong_shading
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_WIN_specular_fog
DECL|macro|GL_WIN_specular_fog
define|#
directive|define
name|GL_WIN_specular_fog
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_light_texture
DECL|macro|GL_EXT_light_texture
define|#
directive|define
name|GL_EXT_light_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glApplyTextureEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureLightEXT
parameter_list|(
name|GLenum
name|pname
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureMaterialEXT
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLAPPLYTEXTUREEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLAPPLYTEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURELIGHTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURELIGHTEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREMATERIALEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREMATERIALEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_blend_alpha_minmax
DECL|macro|GL_SGIX_blend_alpha_minmax
define|#
directive|define
name|GL_SGIX_blend_alpha_minmax
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_bgra
DECL|macro|GL_EXT_bgra
define|#
directive|define
name|GL_EXT_bgra
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_async
DECL|macro|GL_SGIX_async
define|#
directive|define
name|GL_SGIX_async
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glAsyncMarkerSGIX
parameter_list|(
name|GLuint
name|marker
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glFinishAsyncSGIX
parameter_list|(
name|GLuint
modifier|*
name|markerp
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glPollAsyncSGIX
parameter_list|(
name|GLuint
modifier|*
name|markerp
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glGenAsyncMarkersSGIX
parameter_list|(
name|GLsizei
name|range
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteAsyncMarkersSGIX
parameter_list|(
name|GLuint
name|marker
parameter_list|,
name|GLsizei
name|range
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsAsyncMarkerSGIX
parameter_list|(
name|GLuint
name|marker
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLASYNCMARKERSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLASYNCMARKERSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|marker
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINISHASYNCSGIXPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLFINISHASYNCSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|markerp
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOLLASYNCSGIXPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLPOLLASYNCSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
modifier|*
name|markerp
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENASYNCMARKERSSGIXPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGENASYNCMARKERSSGIXPROC
function_decl|)
parameter_list|(
name|GLsizei
name|range
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEASYNCMARKERSSGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEASYNCMARKERSSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|marker
parameter_list|,
name|GLsizei
name|range
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISASYNCMARKERSGIXPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISASYNCMARKERSGIXPROC
function_decl|)
parameter_list|(
name|GLuint
name|marker
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_async_pixel
DECL|macro|GL_SGIX_async_pixel
define|#
directive|define
name|GL_SGIX_async_pixel
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_async_histogram
DECL|macro|GL_SGIX_async_histogram
define|#
directive|define
name|GL_SGIX_async_histogram
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INTEL_parallel_arrays
DECL|macro|GL_INTEL_parallel_arrays
define|#
directive|define
name|GL_INTEL_parallel_arrays
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexPointervINTEL
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalPointervINTEL
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorPointervINTEL
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordPointervINTEL
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXPOINTERVINTELPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXPOINTERVINTELPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALPOINTERVINTELPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALPOINTERVINTELPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORPOINTERVINTELPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORPOINTERVINTELPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDPOINTERVINTELPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDPOINTERVINTELPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_HP_occlusion_test
DECL|macro|GL_HP_occlusion_test
define|#
directive|define
name|GL_HP_occlusion_test
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_pixel_transform
DECL|macro|GL_EXT_pixel_transform
define|#
directive|define
name|GL_EXT_pixel_transform
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPixelTransformParameteriEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPixelTransformParameterfEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPixelTransformParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPixelTransformParameterfvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_pixel_transform_color_table
DECL|macro|GL_EXT_pixel_transform_color_table
define|#
directive|define
name|GL_EXT_pixel_transform_color_table
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_shared_texture_palette
DECL|macro|GL_EXT_shared_texture_palette
define|#
directive|define
name|GL_EXT_shared_texture_palette
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_separate_specular_color
DECL|macro|GL_EXT_separate_specular_color
define|#
directive|define
name|GL_EXT_separate_specular_color
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_secondary_color
DECL|macro|GL_EXT_secondary_color
define|#
directive|define
name|GL_EXT_secondary_color
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3bEXT
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3bvEXT
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3dEXT
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3dvEXT
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3fEXT
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3fvEXT
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3iEXT
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3ivEXT
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3sEXT
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3svEXT
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3ubEXT
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3ubvEXT
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3uiEXT
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3uivEXT
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3usEXT
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3usvEXT
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColorPointerEXT
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSECONDARYCOLOR3BEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3BEXTPROC
function_decl|)
parameter_list|(
name|GLbyte
name|red
parameter_list|,
name|GLbyte
name|green
parameter_list|,
name|GLbyte
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3BVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3BVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3DEXTPROC
function_decl|)
parameter_list|(
name|GLdouble
name|red
parameter_list|,
name|GLdouble
name|green
parameter_list|,
name|GLdouble
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3DVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3FEXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|red
parameter_list|,
name|GLfloat
name|green
parameter_list|,
name|GLfloat
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3FVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3IEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3IVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3SEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3SEXTPROC
function_decl|)
parameter_list|(
name|GLshort
name|red
parameter_list|,
name|GLshort
name|green
parameter_list|,
name|GLshort
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3SVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3SVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UBEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UBEXTPROC
function_decl|)
parameter_list|(
name|GLubyte
name|red
parameter_list|,
name|GLubyte
name|green
parameter_list|,
name|GLubyte
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UBVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UBVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3UIVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3USEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3USEXTPROC
function_decl|)
parameter_list|(
name|GLushort
name|red
parameter_list|,
name|GLushort
name|green
parameter_list|,
name|GLushort
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3USVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3USVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLORPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLORPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_perturb_normal
DECL|macro|GL_EXT_texture_perturb_normal
define|#
directive|define
name|GL_EXT_texture_perturb_normal
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTextureNormalEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXTURENORMALEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURENORMALEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_multi_draw_arrays
DECL|macro|GL_EXT_multi_draw_arrays
define|#
directive|define
name|GL_EXT_multi_draw_arrays
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawArraysEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawElementsEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMULTIDRAWARRAYSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWARRAYSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWELEMENTSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWELEMENTSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_fog_coord
DECL|macro|GL_EXT_fog_coord
define|#
directive|define
name|GL_EXT_fog_coord
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordfEXT
parameter_list|(
name|GLfloat
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordfvEXT
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoorddEXT
parameter_list|(
name|GLdouble
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoorddvEXT
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|coord
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordPointerEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFOGCOORDFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDFEXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDFVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDDEXTPROC
function_decl|)
parameter_list|(
name|GLdouble
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDDVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|coord
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_REND_screen_coordinates
DECL|macro|GL_REND_screen_coordinates
define|#
directive|define
name|GL_REND_screen_coordinates
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_coordinate_frame
DECL|macro|GL_EXT_coordinate_frame
define|#
directive|define
name|GL_EXT_coordinate_frame
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTangent3bEXT
parameter_list|(
name|GLbyte
name|tx
parameter_list|,
name|GLbyte
name|ty
parameter_list|,
name|GLbyte
name|tz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3bvEXT
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3dEXT
parameter_list|(
name|GLdouble
name|tx
parameter_list|,
name|GLdouble
name|ty
parameter_list|,
name|GLdouble
name|tz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3dvEXT
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3fEXT
parameter_list|(
name|GLfloat
name|tx
parameter_list|,
name|GLfloat
name|ty
parameter_list|,
name|GLfloat
name|tz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3fvEXT
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3iEXT
parameter_list|(
name|GLint
name|tx
parameter_list|,
name|GLint
name|ty
parameter_list|,
name|GLint
name|tz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3ivEXT
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3sEXT
parameter_list|(
name|GLshort
name|tx
parameter_list|,
name|GLshort
name|ty
parameter_list|,
name|GLshort
name|tz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangent3svEXT
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3bEXT
parameter_list|(
name|GLbyte
name|bx
parameter_list|,
name|GLbyte
name|by
parameter_list|,
name|GLbyte
name|bz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3bvEXT
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3dEXT
parameter_list|(
name|GLdouble
name|bx
parameter_list|,
name|GLdouble
name|by
parameter_list|,
name|GLdouble
name|bz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3dvEXT
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3fEXT
parameter_list|(
name|GLfloat
name|bx
parameter_list|,
name|GLfloat
name|by
parameter_list|,
name|GLfloat
name|bz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3fvEXT
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3iEXT
parameter_list|(
name|GLint
name|bx
parameter_list|,
name|GLint
name|by
parameter_list|,
name|GLint
name|bz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3ivEXT
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3sEXT
parameter_list|(
name|GLshort
name|bx
parameter_list|,
name|GLshort
name|by
parameter_list|,
name|GLshort
name|bz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormal3svEXT
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTangentPointerEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBinormalPointerEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTANGENT3BEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3BEXTPROC
function_decl|)
parameter_list|(
name|GLbyte
name|tx
parameter_list|,
name|GLbyte
name|ty
parameter_list|,
name|GLbyte
name|tz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3BVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3BVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3DEXTPROC
function_decl|)
parameter_list|(
name|GLdouble
name|tx
parameter_list|,
name|GLdouble
name|ty
parameter_list|,
name|GLdouble
name|tz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3DVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3FEXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|tx
parameter_list|,
name|GLfloat
name|ty
parameter_list|,
name|GLfloat
name|tz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3FVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3IEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|tx
parameter_list|,
name|GLint
name|ty
parameter_list|,
name|GLint
name|tz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3IVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3SEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3SEXTPROC
function_decl|)
parameter_list|(
name|GLshort
name|tx
parameter_list|,
name|GLshort
name|ty
parameter_list|,
name|GLshort
name|tz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENT3SVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENT3SVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3BEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3BEXTPROC
function_decl|)
parameter_list|(
name|GLbyte
name|bx
parameter_list|,
name|GLbyte
name|by
parameter_list|,
name|GLbyte
name|bz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3BVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3BVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3DEXTPROC
function_decl|)
parameter_list|(
name|GLdouble
name|bx
parameter_list|,
name|GLdouble
name|by
parameter_list|,
name|GLdouble
name|bz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3DVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3FEXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|bx
parameter_list|,
name|GLfloat
name|by
parameter_list|,
name|GLfloat
name|bz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3FVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3IEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|bx
parameter_list|,
name|GLint
name|by
parameter_list|,
name|GLint
name|bz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3IVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3SEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3SEXTPROC
function_decl|)
parameter_list|(
name|GLshort
name|bx
parameter_list|,
name|GLshort
name|by
parameter_list|,
name|GLshort
name|bz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMAL3SVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMAL3SVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTANGENTPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTANGENTPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINORMALPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINORMALPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_env_combine
DECL|macro|GL_EXT_texture_env_combine
define|#
directive|define
name|GL_EXT_texture_env_combine
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_specular_vector
DECL|macro|GL_APPLE_specular_vector
define|#
directive|define
name|GL_APPLE_specular_vector
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_transform_hint
DECL|macro|GL_APPLE_transform_hint
define|#
directive|define
name|GL_APPLE_transform_hint
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_fog_scale
DECL|macro|GL_SGIX_fog_scale
define|#
directive|define
name|GL_SGIX_fog_scale
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUNX_constant_data
DECL|macro|GL_SUNX_constant_data
define|#
directive|define
name|GL_SUNX_constant_data
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFinishTextureSUNX
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFINISHTEXTURESUNXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFINISHTEXTURESUNXPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_global_alpha
DECL|macro|GL_SUN_global_alpha
define|#
directive|define
name|GL_SUN_global_alpha
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactorbSUN
parameter_list|(
name|GLbyte
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactorsSUN
parameter_list|(
name|GLshort
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactoriSUN
parameter_list|(
name|GLint
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactorfSUN
parameter_list|(
name|GLfloat
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactordSUN
parameter_list|(
name|GLdouble
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactorubSUN
parameter_list|(
name|GLubyte
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactorusSUN
parameter_list|(
name|GLushort
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGlobalAlphaFactoruiSUN
parameter_list|(
name|GLuint
name|factor
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGLOBALALPHAFACTORBSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORBSUNPROC
function_decl|)
parameter_list|(
name|GLbyte
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGLOBALALPHAFACTORSSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORSSUNPROC
function_decl|)
parameter_list|(
name|GLshort
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGLOBALALPHAFACTORISUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORISUNPROC
function_decl|)
parameter_list|(
name|GLint
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGLOBALALPHAFACTORFSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORFSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGLOBALALPHAFACTORDSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORDSUNPROC
function_decl|)
parameter_list|(
name|GLdouble
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGLOBALALPHAFACTORUBSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORUBSUNPROC
function_decl|)
parameter_list|(
name|GLubyte
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGLOBALALPHAFACTORUSSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORUSSUNPROC
function_decl|)
parameter_list|(
name|GLushort
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGLOBALALPHAFACTORUISUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGLOBALALPHAFACTORUISUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|factor
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_triangle_list
DECL|macro|GL_SUN_triangle_list
define|#
directive|define
name|GL_SUN_triangle_list
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiSUN
parameter_list|(
name|GLuint
name|code
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeusSUN
parameter_list|(
name|GLushort
name|code
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeubSUN
parameter_list|(
name|GLubyte
name|code
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuivSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|code
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeusvSUN
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|code
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeubvSUN
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|code
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodePointerSUN
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLREPLACEMENTCODEUISUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUISUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|code
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUSSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUSSUNPROC
function_decl|)
parameter_list|(
name|GLushort
name|code
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUBSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUBSUNPROC
function_decl|)
parameter_list|(
name|GLubyte
name|code
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUIVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUIVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|code
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUSVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUSVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLushort
modifier|*
name|code
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUBVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUBVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|code
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEPOINTERSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEPOINTERSUNPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_vertex
DECL|macro|GL_SUN_vertex
define|#
directive|define
name|GL_SUN_vertex
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColor4ubVertex2fSUN
parameter_list|(
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor4ubVertex2fvSUN
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor4ubVertex3fSUN
parameter_list|(
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor4ubVertex3fvSUN
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor3fVertex3fSUN
parameter_list|(
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormal3fVertex3fSUN
parameter_list|(
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor4fNormal3fVertex3fSUN
parameter_list|(
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor4fNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fVertex3fSUN
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord4fVertex4fSUN
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|p
parameter_list|,
name|GLfloat
name|q
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord4fVertex4fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fColor4ubVertex3fSUN
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fColor4ubVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fColor3fVertex3fSUN
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fColor3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fNormal3fVertex3fSUN
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fColor4fNormal3fVertex3fSUN
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2fColor4fNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord4fColor4fNormal3fVertex4fSUN
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|p
parameter_list|,
name|GLfloat
name|q
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord4fColor4fNormal3fVertex4fvSUN
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiColor4ubVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiColor4ubVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiColor3fVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiColor3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiNormal3fVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiColor4fNormal3fVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiColor4fNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiTexCoord2fVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiTexCoord2fVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLOR4UBVERTEX2FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4UBVERTEX2FSUNPROC
function_decl|)
parameter_list|(
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR4UBVERTEX2FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4UBVERTEX2FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR4UBVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4UBVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR4UBVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4UBVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD4FVERTEX4FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD4FVERTEX4FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|p
parameter_list|,
name|GLfloat
name|q
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD4FVERTEX4FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD4FVERTEX4FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
function_decl|)
parameter_list|(
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|p
parameter_list|,
name|GLfloat
name|q
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLubyte
name|r
parameter_list|,
name|GLubyte
name|g
parameter_list|,
name|GLubyte
name|b
parameter_list|,
name|GLubyte
name|a
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
function_decl|)
parameter_list|(
name|GLuint
name|rc
parameter_list|,
name|GLfloat
name|s
parameter_list|,
name|GLfloat
name|t
parameter_list|,
name|GLfloat
name|r
parameter_list|,
name|GLfloat
name|g
parameter_list|,
name|GLfloat
name|b
parameter_list|,
name|GLfloat
name|a
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
function_decl|)
parameter_list|(
specifier|const
name|GLuint
modifier|*
name|rc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|tc
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|c
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|n
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_func_separate
DECL|macro|GL_EXT_blend_func_separate
define|#
directive|define
name|GL_EXT_blend_func_separate
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendFuncSeparateEXT
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDFUNCSEPARATEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCSEPARATEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INGR_blend_func_separate
DECL|macro|GL_INGR_blend_func_separate
define|#
directive|define
name|GL_INGR_blend_func_separate
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendFuncSeparateINGR
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDFUNCSEPARATEINGRPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCSEPARATEINGRPROC
function_decl|)
parameter_list|(
name|GLenum
name|sfactorRGB
parameter_list|,
name|GLenum
name|dfactorRGB
parameter_list|,
name|GLenum
name|sfactorAlpha
parameter_list|,
name|GLenum
name|dfactorAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INGR_color_clamp
DECL|macro|GL_INGR_color_clamp
define|#
directive|define
name|GL_INGR_color_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_INGR_interlace_read
DECL|macro|GL_INGR_interlace_read
define|#
directive|define
name|GL_INGR_interlace_read
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_stencil_wrap
DECL|macro|GL_EXT_stencil_wrap
define|#
directive|define
name|GL_EXT_stencil_wrap
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_422_pixels
DECL|macro|GL_EXT_422_pixels
define|#
directive|define
name|GL_EXT_422_pixels
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texgen_reflection
DECL|macro|GL_NV_texgen_reflection
define|#
directive|define
name|GL_NV_texgen_reflection
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_convolution_border_modes
DECL|macro|GL_SUN_convolution_border_modes
define|#
directive|define
name|GL_SUN_convolution_border_modes
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_env_add
DECL|macro|GL_EXT_texture_env_add
define|#
directive|define
name|GL_EXT_texture_env_add
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_lod_bias
DECL|macro|GL_EXT_texture_lod_bias
define|#
directive|define
name|GL_EXT_texture_lod_bias
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_filter_anisotropic
DECL|macro|GL_EXT_texture_filter_anisotropic
define|#
directive|define
name|GL_EXT_texture_filter_anisotropic
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_weighting
DECL|macro|GL_EXT_vertex_weighting
define|#
directive|define
name|GL_EXT_vertex_weighting
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexWeightfEXT
parameter_list|(
name|GLfloat
name|weight
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexWeightfvEXT
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|weight
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexWeightPointerEXT
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXWEIGHTFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXWEIGHTFEXTPROC
function_decl|)
parameter_list|(
name|GLfloat
name|weight
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXWEIGHTFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXWEIGHTFVEXTPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|weight
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXWEIGHTPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXWEIGHTPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_light_max_exponent
DECL|macro|GL_NV_light_max_exponent
define|#
directive|define
name|GL_NV_light_max_exponent
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_array_range
DECL|macro|GL_NV_vertex_array_range
define|#
directive|define
name|GL_NV_vertex_array_range
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFlushVertexArrayRangeNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexArrayRangeNV
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFLUSHVERTEXARRAYRANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFLUSHVERTEXARRAYRANGENVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXARRAYRANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXARRAYRANGENVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_register_combiners
DECL|macro|GL_NV_register_combiners
define|#
directive|define
name|GL_NV_register_combiners
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCombinerParameterfvNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCombinerParameterfNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCombinerParameterivNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCombinerParameteriNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCombinerInputNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|input
parameter_list|,
name|GLenum
name|mapping
parameter_list|,
name|GLenum
name|componentUsage
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCombinerOutputNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|abOutput
parameter_list|,
name|GLenum
name|cdOutput
parameter_list|,
name|GLenum
name|sumOutput
parameter_list|,
name|GLenum
name|scale
parameter_list|,
name|GLenum
name|bias
parameter_list|,
name|GLboolean
name|abDotProduct
parameter_list|,
name|GLboolean
name|cdDotProduct
parameter_list|,
name|GLboolean
name|muxSum
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFinalCombinerInputNV
parameter_list|(
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|input
parameter_list|,
name|GLenum
name|mapping
parameter_list|,
name|GLenum
name|componentUsage
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCombinerInputParameterfvNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCombinerInputParameterivNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCombinerOutputParameterfvNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCombinerOutputParameterivNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFinalCombinerInputParameterfvNV
parameter_list|(
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFinalCombinerInputParameterivNV
parameter_list|(
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOMBINERPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMBINERPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMBINERPARAMETERFNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMBINERPARAMETERFNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMBINERPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMBINERPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMBINERPARAMETERINVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMBINERPARAMETERINVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMBINERINPUTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMBINERINPUTNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|input
parameter_list|,
name|GLenum
name|mapping
parameter_list|,
name|GLenum
name|componentUsage
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMBINEROUTPUTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMBINEROUTPUTNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|abOutput
parameter_list|,
name|GLenum
name|cdOutput
parameter_list|,
name|GLenum
name|sumOutput
parameter_list|,
name|GLenum
name|scale
parameter_list|,
name|GLenum
name|bias
parameter_list|,
name|GLboolean
name|abDotProduct
parameter_list|,
name|GLboolean
name|cdDotProduct
parameter_list|,
name|GLboolean
name|muxSum
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINALCOMBINERINPUTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFINALCOMBINERINPUTNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|input
parameter_list|,
name|GLenum
name|mapping
parameter_list|,
name|GLenum
name|componentUsage
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|portion
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|variable
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fog_distance
DECL|macro|GL_NV_fog_distance
define|#
directive|define
name|GL_NV_fog_distance
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texgen_emboss
DECL|macro|GL_NV_texgen_emboss
define|#
directive|define
name|GL_NV_texgen_emboss
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_blend_square
DECL|macro|GL_NV_blend_square
define|#
directive|define
name|GL_NV_blend_square
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_env_combine4
DECL|macro|GL_NV_texture_env_combine4
define|#
directive|define
name|GL_NV_texture_env_combine4
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_resize_buffers
DECL|macro|GL_MESA_resize_buffers
define|#
directive|define
name|GL_MESA_resize_buffers
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glResizeBuffersMESA
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLRESIZEBUFFERSMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRESIZEBUFFERSMESAPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_window_pos
DECL|macro|GL_MESA_window_pos
define|#
directive|define
name|GL_MESA_window_pos
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2dMESA
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2dvMESA
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2fMESA
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2fvMESA
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2iMESA
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2ivMESA
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2sMESA
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos2svMESA
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3dMESA
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3dvMESA
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3fMESA
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3fvMESA
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3iMESA
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3ivMESA
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3sMESA
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos3svMESA
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4dMESA
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4dvMESA
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4fMESA
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4fvMESA
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4iMESA
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4ivMESA
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4sMESA
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWindowPos4svMESA
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLWINDOWPOS2DMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2DMESAPROC
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2DVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2DVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2FMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2FMESAPROC
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2FVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2FVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2IMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2IMESAPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2IVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2IVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2SMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2SMESAPROC
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS2SVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS2SVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3DMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3DMESAPROC
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3DVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3DVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3FMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3FMESAPROC
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3FVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3FVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3IMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3IMESAPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3IVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3IVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3SMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3SMESAPROC
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS3SVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS3SVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4DMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4DMESAPROC
function_decl|)
parameter_list|(
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4DVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4DVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4FMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4FMESAPROC
function_decl|)
parameter_list|(
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4FVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4FVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4IMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4IMESAPROC
function_decl|)
parameter_list|(
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4IVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4IVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4SMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4SMESAPROC
function_decl|)
parameter_list|(
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWINDOWPOS4SVMESAPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWINDOWPOS4SVMESAPROC
function_decl|)
parameter_list|(
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_cull_vertex
DECL|macro|GL_IBM_cull_vertex
define|#
directive|define
name|GL_IBM_cull_vertex
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_multimode_draw_arrays
DECL|macro|GL_IBM_multimode_draw_arrays
define|#
directive|define
name|GL_IBM_multimode_draw_arrays
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glMultiModeDrawArraysIBM
parameter_list|(
specifier|const
name|GLenum
modifier|*
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|modestride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiModeDrawElementsIBM
parameter_list|(
specifier|const
name|GLenum
modifier|*
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|modestride
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMULTIMODEDRAWARRAYSIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIMODEDRAWARRAYSIBMPROC
function_decl|)
parameter_list|(
specifier|const
name|GLenum
modifier|*
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|modestride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIMODEDRAWELEMENTSIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIMODEDRAWELEMENTSIBMPROC
function_decl|)
parameter_list|(
specifier|const
name|GLenum
modifier|*
name|mode
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
specifier|const
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLint
name|modestride
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_IBM_vertex_array_lists
DECL|macro|GL_IBM_vertex_array_lists
define|#
directive|define
name|GL_IBM_vertex_array_lists
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColorPointerListIBM
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColorPointerListIBM
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEdgeFlagPointerListIBM
parameter_list|(
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLboolean
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordPointerListIBM
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glIndexPointerListIBM
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalPointerListIBM
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordPointerListIBM
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexPointerListIBM
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLORPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEDGEFLAGPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLEDGEFLAGPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLboolean
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLINDEXPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINDEXPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXPOINTERLISTIBMPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXPOINTERLISTIBMPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|,
name|GLint
name|ptrstride
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_subsample
DECL|macro|GL_SGIX_subsample
define|#
directive|define
name|GL_SGIX_subsample
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ycrcba
DECL|macro|GL_SGIX_ycrcba
define|#
directive|define
name|GL_SGIX_ycrcba
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_ycrcb_subsample
DECL|macro|GL_SGIX_ycrcb_subsample
define|#
directive|define
name|GL_SGIX_ycrcb_subsample
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_depth_pass_instrument
DECL|macro|GL_SGIX_depth_pass_instrument
define|#
directive|define
name|GL_SGIX_depth_pass_instrument
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_3DFX_texture_compression_FXT1
DECL|macro|GL_3DFX_texture_compression_FXT1
define|#
directive|define
name|GL_3DFX_texture_compression_FXT1
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_3DFX_multisample
DECL|macro|GL_3DFX_multisample
define|#
directive|define
name|GL_3DFX_multisample
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_3DFX_tbuffer
DECL|macro|GL_3DFX_tbuffer
define|#
directive|define
name|GL_3DFX_tbuffer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTbufferMask3DFX
parameter_list|(
name|GLuint
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTBUFFERMASK3DFXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTBUFFERMASK3DFXPROC
function_decl|)
parameter_list|(
name|GLuint
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_multisample
DECL|macro|GL_EXT_multisample
define|#
directive|define
name|GL_EXT_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glSampleMaskEXT
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSamplePatternEXT
parameter_list|(
name|GLenum
name|pattern
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSAMPLEMASKEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLEMASKEXTPROC
function_decl|)
parameter_list|(
name|GLclampf
name|value
parameter_list|,
name|GLboolean
name|invert
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLEPATTERNEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLEPATTERNEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|pattern
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_vertex_preclip
DECL|macro|GL_SGIX_vertex_preclip
define|#
directive|define
name|GL_SGIX_vertex_preclip
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_convolution_accuracy
DECL|macro|GL_SGIX_convolution_accuracy
define|#
directive|define
name|GL_SGIX_convolution_accuracy
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_resample
DECL|macro|GL_SGIX_resample
define|#
directive|define
name|GL_SGIX_resample
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_point_line_texgen
DECL|macro|GL_SGIS_point_line_texgen
define|#
directive|define
name|GL_SGIS_point_line_texgen
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIS_texture_color_mask
DECL|macro|GL_SGIS_texture_color_mask
define|#
directive|define
name|GL_SGIS_texture_color_mask
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTextureColorMaskSGIS
parameter_list|(
name|GLboolean
name|red
parameter_list|,
name|GLboolean
name|green
parameter_list|,
name|GLboolean
name|blue
parameter_list|,
name|GLboolean
name|alpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXTURECOLORMASKSGISPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURECOLORMASKSGISPROC
function_decl|)
parameter_list|(
name|GLboolean
name|red
parameter_list|,
name|GLboolean
name|green
parameter_list|,
name|GLboolean
name|blue
parameter_list|,
name|GLboolean
name|alpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_igloo_interface
DECL|macro|GL_SGIX_igloo_interface
define|#
directive|define
name|GL_SGIX_igloo_interface
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glIglooInterfaceSGIX
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLIGLOOINTERFACESGIXPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLIGLOOINTERFACESGIXPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_env_dot3
DECL|macro|GL_EXT_texture_env_dot3
define|#
directive|define
name|GL_EXT_texture_env_dot3
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_texture_mirror_once
DECL|macro|GL_ATI_texture_mirror_once
define|#
directive|define
name|GL_ATI_texture_mirror_once
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fence
DECL|macro|GL_NV_fence
define|#
directive|define
name|GL_NV_fence
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDeleteFencesNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenFencesNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glTestFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFenceivNV
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFinishFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSetFenceNV
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|condition
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDELETEFENCESNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEFENCESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENFENCESNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENFENCESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISFENCENVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTESTFENCENVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLTESTFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFENCEIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFENCEIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINISHFENCENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFINISHFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSETFENCENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSETFENCENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|,
name|GLenum
name|condition
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_evaluators
DECL|macro|GL_NV_evaluators
define|#
directive|define
name|GL_NV_evaluators
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glMapControlPointsNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|ustride
parameter_list|,
name|GLsizei
name|vstride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLint
name|vorder
parameter_list|,
name|GLboolean
name|packed
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMapParameterivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMapParameterfvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMapControlPointsNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|ustride
parameter_list|,
name|GLsizei
name|vstride
parameter_list|,
name|GLboolean
name|packed
parameter_list|,
name|GLvoid
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMapParameterivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMapParameterfvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMapAttribParameterivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMapAttribParameterfvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEvalMapsNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMAPCONTROLPOINTSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAPCONTROLPOINTSNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|ustride
parameter_list|,
name|GLsizei
name|vstride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLint
name|vorder
parameter_list|,
name|GLboolean
name|packed
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAPPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAPPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMAPCONTROLPOINTSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMAPCONTROLPOINTSNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|ustride
parameter_list|,
name|GLsizei
name|vstride
parameter_list|,
name|GLboolean
name|packed
parameter_list|,
name|GLvoid
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMAPPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMAPPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMAPPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMAPPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMAPATTRIBPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMAPATTRIBPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMAPATTRIBPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMAPATTRIBPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEVALMAPSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLEVALMAPSNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_packed_depth_stencil
DECL|macro|GL_NV_packed_depth_stencil
define|#
directive|define
name|GL_NV_packed_depth_stencil
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_register_combiners2
DECL|macro|GL_NV_register_combiners2
define|#
directive|define
name|GL_NV_register_combiners2
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCombinerStageParameterfvNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCombinerStageParameterfvNV
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|stage
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_compression_vtc
DECL|macro|GL_NV_texture_compression_vtc
define|#
directive|define
name|GL_NV_texture_compression_vtc
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_rectangle
DECL|macro|GL_NV_texture_rectangle
define|#
directive|define
name|GL_NV_texture_rectangle
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_shader
DECL|macro|GL_NV_texture_shader
define|#
directive|define
name|GL_NV_texture_shader
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_shader2
DECL|macro|GL_NV_texture_shader2
define|#
directive|define
name|GL_NV_texture_shader2
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_array_range2
DECL|macro|GL_NV_vertex_array_range2
define|#
directive|define
name|GL_NV_vertex_array_range2
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program
DECL|macro|GL_NV_vertex_program
define|#
directive|define
name|GL_NV_vertex_program
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLboolean
name|APIENTRY
name|glAreProgramsResidentNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|,
name|GLboolean
modifier|*
name|residences
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindProgramNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteProgramsNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glExecuteProgramNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenProgramsNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramParameterdvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramParameterfvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramivNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramStringNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLubyte
modifier|*
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTrackMatrixivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|address
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribdvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribfvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribivNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribPointervNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsProgramNV
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glLoadProgramNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameter4dNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameter4dvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameter4fNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameter4fvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameters4dvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameters4fvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glRequestResidentProgramsNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTrackMatrixNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|address
parameter_list|,
name|GLenum
name|matrix
parameter_list|,
name|GLenum
name|transform
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribPointerNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|fsize
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1dNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1fNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1sNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2dNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2fNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2sNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3dNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3fNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3sNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4dNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4fNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4sNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4ubNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLubyte
name|x
parameter_list|,
name|GLubyte
name|y
parameter_list|,
name|GLubyte
name|z
parameter_list|,
name|GLubyte
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4ubvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs1dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs1fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs1svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs2dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs2fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs2svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs3dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs3fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs3svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs4dvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs4fvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs4svNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs4ubvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLAREPROGRAMSRESIDENTNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLAREPROGRAMSRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|,
name|GLboolean
modifier|*
name|residences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDPROGRAMNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDPROGRAMNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPROGRAMSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEPROGRAMSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXECUTEPROGRAMNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLEXECUTEPROGRAMNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPROGRAMSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENPROGRAMSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPARAMETERDVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMPARAMETERDVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMSTRINGNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMSTRINGNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLubyte
modifier|*
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTRACKMATRIXIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTRACKMATRIXIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|address
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBDVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBDVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBFVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBPOINTERVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBPOINTERVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPROGRAMNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISPROGRAMNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLLOADPROGRAMNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLLOADPROGRAMNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETER4DNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETER4DNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETER4DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETER4DVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETER4FNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETER4FNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETER4FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETER4FVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETERS4DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETERS4DVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMPARAMETERS4FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETERS4FVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLREQUESTRESIDENTPROGRAMSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLREQUESTRESIDENTPROGRAMSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|programs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTRACKMATRIXNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTRACKMATRIXNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|address
parameter_list|,
name|GLenum
name|matrix
parameter_list|,
name|GLenum
name|transform
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBPOINTERNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBPOINTERNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|fsize
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1DNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1DNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1FNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1SNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1SNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2DNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2DNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2FNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2SNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2SNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3DNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3DNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3FNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3SNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3SNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4DNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4DNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4FNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4SNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4SNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4UBNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4UBNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLubyte
name|x
parameter_list|,
name|GLubyte
name|y
parameter_list|,
name|GLubyte
name|z
parameter_list|,
name|GLubyte
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4UBVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4UBVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS1DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS1DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS1FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS1FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS1SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS1SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS2DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS2DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS2FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS2FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS2SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS2SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS3DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS3DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS3FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS3FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS3SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS3SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS4DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS4DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS4FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS4FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS4SVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS4SVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS4UBVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS4UBVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_texture_coordinate_clamp
DECL|macro|GL_SGIX_texture_coordinate_clamp
define|#
directive|define
name|GL_SGIX_texture_coordinate_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SGIX_scalebias_hint
DECL|macro|GL_SGIX_scalebias_hint
define|#
directive|define
name|GL_SGIX_scalebias_hint
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OML_interlace
DECL|macro|GL_OML_interlace
define|#
directive|define
name|GL_OML_interlace
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OML_subsample
DECL|macro|GL_OML_subsample
define|#
directive|define
name|GL_OML_subsample
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OML_resample
DECL|macro|GL_OML_resample
define|#
directive|define
name|GL_OML_resample
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_copy_depth_to_color
DECL|macro|GL_NV_copy_depth_to_color
define|#
directive|define
name|GL_NV_copy_depth_to_color
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_envmap_bumpmap
DECL|macro|GL_ATI_envmap_bumpmap
define|#
directive|define
name|GL_ATI_envmap_bumpmap
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexBumpParameterivATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexBumpParameterfvATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTexBumpParameterivATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTexBumpParameterfvATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXBUMPPARAMETERIVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXBUMPPARAMETERIVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXBUMPPARAMETERFVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXBUMPPARAMETERFVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXBUMPPARAMETERIVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXBUMPPARAMETERIVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXBUMPPARAMETERFVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXBUMPPARAMETERFVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_fragment_shader
DECL|macro|GL_ATI_fragment_shader
define|#
directive|define
name|GL_ATI_fragment_shader
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLuint
name|APIENTRY
name|glGenFragmentShadersATI
parameter_list|(
name|GLuint
name|range
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindFragmentShaderATI
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteFragmentShaderATI
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginFragmentShaderATI
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndFragmentShaderATI
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPassTexCoordATI
parameter_list|(
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|coord
parameter_list|,
name|GLenum
name|swizzle
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSampleMapATI
parameter_list|(
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|interp
parameter_list|,
name|GLenum
name|swizzle
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorFragmentOp1ATI
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMask
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorFragmentOp2ATI
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMask
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorFragmentOp3ATI
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMask
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|,
name|GLuint
name|arg3
parameter_list|,
name|GLuint
name|arg3Rep
parameter_list|,
name|GLuint
name|arg3Mod
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glAlphaFragmentOp1ATI
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glAlphaFragmentOp2ATI
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glAlphaFragmentOp3ATI
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|,
name|GLuint
name|arg3
parameter_list|,
name|GLuint
name|arg3Rep
parameter_list|,
name|GLuint
name|arg3Mod
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSetFragmentShaderConstantATI
parameter_list|(
name|GLuint
name|dst
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENFRAGMENTSHADERSATIPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGENFRAGMENTSHADERSATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|range
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDFRAGMENTSHADERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDFRAGMENTSHADERATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEFRAGMENTSHADERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEFRAGMENTSHADERATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINFRAGMENTSHADERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINFRAGMENTSHADERATIPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDFRAGMENTSHADERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDFRAGMENTSHADERATIPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPASSTEXCOORDATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPASSTEXCOORDATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|coord
parameter_list|,
name|GLenum
name|swizzle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLEMAPATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLEMAPATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|interp
parameter_list|,
name|GLenum
name|swizzle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORFRAGMENTOP1ATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORFRAGMENTOP1ATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMask
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORFRAGMENTOP2ATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORFRAGMENTOP2ATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMask
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORFRAGMENTOP3ATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORFRAGMENTOP3ATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMask
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|,
name|GLuint
name|arg3
parameter_list|,
name|GLuint
name|arg3Rep
parameter_list|,
name|GLuint
name|arg3Mod
parameter_list|)
function_decl|;
DECL|typedef|PFNGLALPHAFRAGMENTOP1ATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLALPHAFRAGMENTOP1ATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|)
function_decl|;
DECL|typedef|PFNGLALPHAFRAGMENTOP2ATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLALPHAFRAGMENTOP2ATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|)
function_decl|;
DECL|typedef|PFNGLALPHAFRAGMENTOP3ATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLALPHAFRAGMENTOP3ATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|dst
parameter_list|,
name|GLuint
name|dstMod
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg1Rep
parameter_list|,
name|GLuint
name|arg1Mod
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg2Rep
parameter_list|,
name|GLuint
name|arg2Mod
parameter_list|,
name|GLuint
name|arg3
parameter_list|,
name|GLuint
name|arg3Rep
parameter_list|,
name|GLuint
name|arg3Mod
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|dst
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_pn_triangles
DECL|macro|GL_ATI_pn_triangles
define|#
directive|define
name|GL_ATI_pn_triangles
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPNTrianglesiATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPNTrianglesfATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPNTRIANGLESIATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPNTRIANGLESIATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPNTRIANGLESFATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPNTRIANGLESFATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_vertex_array_object
DECL|macro|GL_ATI_vertex_array_object
define|#
directive|define
name|GL_ATI_vertex_array_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLuint
name|APIENTRY
name|glNewObjectBufferATI
parameter_list|(
name|GLsizei
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsObjectBufferATI
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUpdateObjectBufferATI
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|,
name|GLsizei
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|,
name|GLenum
name|preserve
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetObjectBufferfvATI
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetObjectBufferivATI
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFreeObjectBufferATI
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glArrayObjectATI
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetArrayObjectfvATI
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetArrayObjectivATI
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantArrayObjectATI
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVariantArrayObjectfvATI
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVariantArrayObjectivATI
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLNEWOBJECTBUFFERATIPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLNEWOBJECTBUFFERATIPROC
function_decl|)
parameter_list|(
name|GLsizei
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISOBJECTBUFFERATIPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISOBJECTBUFFERATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUPDATEOBJECTBUFFERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUPDATEOBJECTBUFFERATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|,
name|GLsizei
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|,
name|GLenum
name|preserve
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTBUFFERFVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETOBJECTBUFFERFVATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTBUFFERIVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETOBJECTBUFFERIVATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFREEOBJECTBUFFERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFREEOBJECTBUFFERATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLARRAYOBJECTATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLARRAYOBJECTATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETARRAYOBJECTFVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETARRAYOBJECTFVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETARRAYOBJECTIVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETARRAYOBJECTIVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTARRAYOBJECTATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTARRAYOBJECTATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVARIANTARRAYOBJECTFVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVARIANTARRAYOBJECTFVATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVARIANTARRAYOBJECTIVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVARIANTARRAYOBJECTIVATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_shader
DECL|macro|GL_EXT_vertex_shader
define|#
directive|define
name|GL_EXT_vertex_shader
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBeginVertexShaderEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndVertexShaderEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindVertexShaderEXT
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glGenVertexShadersEXT
parameter_list|(
name|GLuint
name|range
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteVertexShaderEXT
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glShaderOp1EXT
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|res
parameter_list|,
name|GLuint
name|arg1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glShaderOp2EXT
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|res
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glShaderOp3EXT
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|res
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSwizzleEXT
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|in
parameter_list|,
name|GLenum
name|outX
parameter_list|,
name|GLenum
name|outY
parameter_list|,
name|GLenum
name|outZ
parameter_list|,
name|GLenum
name|outW
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWriteMaskEXT
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|in
parameter_list|,
name|GLenum
name|outX
parameter_list|,
name|GLenum
name|outY
parameter_list|,
name|GLenum
name|outZ
parameter_list|,
name|GLenum
name|outW
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glInsertComponentEXT
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|src
parameter_list|,
name|GLuint
name|num
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glExtractComponentEXT
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|src
parameter_list|,
name|GLuint
name|num
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glGenSymbolsEXT
parameter_list|(
name|GLenum
name|datatype
parameter_list|,
name|GLenum
name|storagetype
parameter_list|,
name|GLenum
name|range
parameter_list|,
name|GLuint
name|components
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSetInvariantEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSetLocalConstantEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantbvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantsvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantivEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLint
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantfvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantdvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantubvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantusvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantuivEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVariantPointerEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|addr
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEnableVariantClientStateEXT
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDisableVariantClientStateEXT
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glBindLightParameterEXT
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glBindMaterialParameterEXT
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glBindTexGenParameterEXT
parameter_list|(
name|GLenum
name|unit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glBindTextureUnitParameterEXT
parameter_list|(
name|GLenum
name|unit
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glBindParameterEXT
parameter_list|(
name|GLenum
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsVariantEnabledEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|cap
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVariantBooleanvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVariantIntegervEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVariantFloatvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVariantPointervEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetInvariantBooleanvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetInvariantIntegervEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetInvariantFloatvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetLocalConstantBooleanvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetLocalConstantIntegervEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetLocalConstantFloatvEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBEGINVERTEXSHADEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINVERTEXSHADEREXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDVERTEXSHADEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDVERTEXSHADEREXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDVERTEXSHADEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDVERTEXSHADEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENVERTEXSHADERSEXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGENVERTEXSHADERSEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|range
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEVERTEXSHADEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEVERTEXSHADEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADEROP1EXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSHADEROP1EXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|res
parameter_list|,
name|GLuint
name|arg1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADEROP2EXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSHADEROP2EXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|res
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSHADEROP3EXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSHADEROP3EXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|op
parameter_list|,
name|GLuint
name|res
parameter_list|,
name|GLuint
name|arg1
parameter_list|,
name|GLuint
name|arg2
parameter_list|,
name|GLuint
name|arg3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSWIZZLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSWIZZLEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|in
parameter_list|,
name|GLenum
name|outX
parameter_list|,
name|GLenum
name|outY
parameter_list|,
name|GLenum
name|outZ
parameter_list|,
name|GLenum
name|outW
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWRITEMASKEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWRITEMASKEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|in
parameter_list|,
name|GLenum
name|outX
parameter_list|,
name|GLenum
name|outY
parameter_list|,
name|GLenum
name|outZ
parameter_list|,
name|GLenum
name|outW
parameter_list|)
function_decl|;
DECL|typedef|PFNGLINSERTCOMPONENTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINSERTCOMPONENTEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|src
parameter_list|,
name|GLuint
name|num
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEXTRACTCOMPONENTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLEXTRACTCOMPONENTEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|res
parameter_list|,
name|GLuint
name|src
parameter_list|,
name|GLuint
name|num
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENSYMBOLSEXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGENSYMBOLSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|datatype
parameter_list|,
name|GLenum
name|storagetype
parameter_list|,
name|GLenum
name|range
parameter_list|,
name|GLuint
name|components
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSETINVARIANTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSETINVARIANTEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSETLOCALCONSTANTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSETLOCALCONSTANTEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTBVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTBVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTSVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTSVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLint
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTFVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTDVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTUBVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTUBVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTUSVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTUSVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVARIANTPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVARIANTPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLuint
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|addr
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDLIGHTPARAMETEREXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLBINDLIGHTPARAMETEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|light
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDMATERIALPARAMETEREXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLBINDMATERIALPARAMETEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDTEXGENPARAMETEREXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLBINDTEXGENPARAMETEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|unit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|unit
parameter_list|,
name|GLenum
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDPARAMETEREXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLBINDPARAMETEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISVARIANTENABLEDEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISVARIANTENABLEDEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|cap
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVARIANTBOOLEANVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVARIANTBOOLEANVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVARIANTINTEGERVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVARIANTINTEGERVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVARIANTFLOATVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVARIANTFLOATVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVARIANTPOINTERVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVARIANTPOINTERVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINVARIANTBOOLEANVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINVARIANTBOOLEANVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINVARIANTINTEGERVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINVARIANTINTEGERVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINVARIANTFLOATVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINVARIANTFLOATVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETLOCALCONSTANTFLOATVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETLOCALCONSTANTFLOATVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|value
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_vertex_streams
DECL|macro|GL_ATI_vertex_streams
define|#
directive|define
name|GL_ATI_vertex_streams
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1sATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1svATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1iATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1ivATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1fATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1fvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1dATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream1dvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2sATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2svATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2iATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2ivATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2fATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2fvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2dATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream2dvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3sATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3svATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3iATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3ivATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3fATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3fvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3dATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream3dvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4sATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4svATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4iATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4ivATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4fATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4fvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4dATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexStream4dvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3bATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLbyte
name|nx
parameter_list|,
name|GLbyte
name|ny
parameter_list|,
name|GLbyte
name|nz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3bvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3sATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|nx
parameter_list|,
name|GLshort
name|ny
parameter_list|,
name|GLshort
name|nz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3svATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3iATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|nx
parameter_list|,
name|GLint
name|ny
parameter_list|,
name|GLint
name|nz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3ivATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3fATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3fvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3dATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|nx
parameter_list|,
name|GLdouble
name|ny
parameter_list|,
name|GLdouble
name|nz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalStream3dvATI
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClientActiveVertexStreamATI
parameter_list|(
name|GLenum
name|stream
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexBlendEnviATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexBlendEnvfATI
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXSTREAM1SATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1SATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM1SVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1SVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM1IATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1IATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM1IVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1IVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM1FATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1FATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM1FVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1FVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM1DATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1DATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM1DVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM1DVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2SATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2SATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2SVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2SVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2IATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2IATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2IVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2IVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2FATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2FATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2FVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2FVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2DATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2DATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM2DVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM2DVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3SATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3SATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3SVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3SVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3IATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3IATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3IVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3IVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3FATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3FATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3FVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3FVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3DATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3DATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM3DVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM3DVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4SATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4SATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|x
parameter_list|,
name|GLshort
name|y
parameter_list|,
name|GLshort
name|z
parameter_list|,
name|GLshort
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4SVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4SVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4IATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4IATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4IVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4IVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4FATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4FATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4FVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4FVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4DATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4DATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXSTREAM4DVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXSTREAM4DVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3BATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3BATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLbyte
name|nx
parameter_list|,
name|GLbyte
name|ny
parameter_list|,
name|GLbyte
name|nz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3BVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3BVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3SATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3SATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLshort
name|nx
parameter_list|,
name|GLshort
name|ny
parameter_list|,
name|GLshort
name|nz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3SVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3SVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3IATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3IATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLint
name|nx
parameter_list|,
name|GLint
name|ny
parameter_list|,
name|GLint
name|nz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3IVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3IVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLint
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3FATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3FATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLfloat
name|nx
parameter_list|,
name|GLfloat
name|ny
parameter_list|,
name|GLfloat
name|nz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3FVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3FVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3DATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3DATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
name|GLdouble
name|nx
parameter_list|,
name|GLdouble
name|ny
parameter_list|,
name|GLdouble
name|nz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALSTREAM3DVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALSTREAM3DVATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|stream
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXBLENDENVIATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXBLENDENVIATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXBLENDENVFATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXBLENDENVFATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_element_array
DECL|macro|GL_ATI_element_array
define|#
directive|define
name|GL_ATI_element_array
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glElementPointerATI
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementArrayATI
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawRangeElementArrayATI
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLELEMENTPOINTERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLELEMENTPOINTERATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTARRAYATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTARRAYATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWRANGEELEMENTARRAYATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWRANGEELEMENTARRAYATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_mesh_array
DECL|macro|GL_SUN_mesh_array
define|#
directive|define
name|GL_SUN_mesh_array
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawMeshArraysSUN
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWMESHARRAYSSUNPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWMESHARRAYSSUNPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_SUN_slice_accum
DECL|macro|GL_SUN_slice_accum
define|#
directive|define
name|GL_SUN_slice_accum
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_multisample_filter_hint
DECL|macro|GL_NV_multisample_filter_hint
define|#
directive|define
name|GL_NV_multisample_filter_hint
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_depth_clamp
DECL|macro|GL_NV_depth_clamp
define|#
directive|define
name|GL_NV_depth_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_occlusion_query
DECL|macro|GL_NV_occlusion_query
define|#
directive|define
name|GL_NV_occlusion_query
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGenOcclusionQueriesNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteOcclusionQueriesNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsOcclusionQueryNV
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginOcclusionQueryNV
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndOcclusionQueryNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetOcclusionQueryivNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetOcclusionQueryuivNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENOCCLUSIONQUERIESNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENOCCLUSIONQUERIESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEOCCLUSIONQUERIESNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEOCCLUSIONQUERIESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISOCCLUSIONQUERYNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISOCCLUSIONQUERYNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINOCCLUSIONQUERYNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINOCCLUSIONQUERYNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDOCCLUSIONQUERYNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDOCCLUSIONQUERYNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOCCLUSIONQUERYIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETOCCLUSIONQUERYIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOCCLUSIONQUERYUIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETOCCLUSIONQUERYUIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_point_sprite
DECL|macro|GL_NV_point_sprite
define|#
directive|define
name|GL_NV_point_sprite
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPointParameteriNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPointParameterivNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPOINTPARAMETERINVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERINVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPOINTPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_shader3
DECL|macro|GL_NV_texture_shader3
define|#
directive|define
name|GL_NV_texture_shader3
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program1_1
DECL|macro|GL_NV_vertex_program1_1
define|#
directive|define
name|GL_NV_vertex_program1_1
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_shadow_funcs
DECL|macro|GL_EXT_shadow_funcs
define|#
directive|define
name|GL_EXT_shadow_funcs
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_stencil_two_side
DECL|macro|GL_EXT_stencil_two_side
define|#
directive|define
name|GL_EXT_stencil_two_side
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glActiveStencilFaceEXT
parameter_list|(
name|GLenum
name|face
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLACTIVESTENCILFACEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLACTIVESTENCILFACEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_text_fragment_shader
DECL|macro|GL_ATI_text_fragment_shader
define|#
directive|define
name|GL_ATI_text_fragment_shader
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_client_storage
DECL|macro|GL_APPLE_client_storage
define|#
directive|define
name|GL_APPLE_client_storage
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_element_array
DECL|macro|GL_APPLE_element_array
define|#
directive|define
name|GL_APPLE_element_array
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glElementPointerAPPLE
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementArrayAPPLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawRangeElementArrayAPPLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawElementArrayAPPLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawRangeElementArrayAPPLE
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLELEMENTPOINTERAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLELEMENTPOINTERAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTARRAYAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTARRAYAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
name|GLint
name|first
parameter_list|,
name|GLsizei
name|count
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|start
parameter_list|,
name|GLuint
name|end
parameter_list|,
specifier|const
name|GLint
modifier|*
name|first
parameter_list|,
specifier|const
name|GLsizei
modifier|*
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_fence
DECL|macro|GL_APPLE_fence
define|#
directive|define
name|GL_APPLE_fence
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGenFencesAPPLE
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteFencesAPPLE
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSetFenceAPPLE
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsFenceAPPLE
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glTestFenceAPPLE
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFinishFenceAPPLE
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glTestObjectAPPLE
parameter_list|(
name|GLenum
name|object
parameter_list|,
name|GLuint
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFinishObjectAPPLE
parameter_list|(
name|GLenum
name|object
parameter_list|,
name|GLint
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENFENCESAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENFENCESAPPLEPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEFENCESAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEFENCESAPPLEPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|fences
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSETFENCEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSETFENCEAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISFENCEAPPLEPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISFENCEAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTESTFENCEAPPLEPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLTESTFENCEAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINISHFENCEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFINISHFENCEAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|fence
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTESTOBJECTAPPLEPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLTESTOBJECTAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|object
parameter_list|,
name|GLuint
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFINISHOBJECTAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFINISHOBJECTAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|object
parameter_list|,
name|GLint
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_vertex_array_object
DECL|macro|GL_APPLE_vertex_array_object
define|#
directive|define
name|GL_APPLE_vertex_array_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindVertexArrayAPPLE
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteVertexArraysAPPLE
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenVertexArraysAPPLE
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsVertexArrayAPPLE
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDVERTEXARRAYAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDVERTEXARRAYAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEVERTEXARRAYSAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEVERTEXARRAYSAPPLEPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENVERTEXARRAYSAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENVERTEXARRAYSAPPLEPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|arrays
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISVERTEXARRAYAPPLEPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISVERTEXARRAYAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|array
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_vertex_array_range
DECL|macro|GL_APPLE_vertex_array_range
define|#
directive|define
name|GL_APPLE_vertex_array_range
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexArrayRangeAPPLE
parameter_list|(
name|GLsizei
name|length
parameter_list|,
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFlushVertexArrayRangeAPPLE
parameter_list|(
name|GLsizei
name|length
parameter_list|,
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexArrayParameteriAPPLE
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXARRAYRANGEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXARRAYRANGEAPPLEPROC
function_decl|)
parameter_list|(
name|GLsizei
name|length
parameter_list|,
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
function_decl|)
parameter_list|(
name|GLsizei
name|length
parameter_list|,
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_ycbcr_422
DECL|macro|GL_APPLE_ycbcr_422
define|#
directive|define
name|GL_APPLE_ycbcr_422
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_S3_s3tc
DECL|macro|GL_S3_s3tc
define|#
directive|define
name|GL_S3_s3tc
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_draw_buffers
DECL|macro|GL_ATI_draw_buffers
define|#
directive|define
name|GL_ATI_draw_buffers
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawBuffersATI
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWBUFFERSATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWBUFFERSATIPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_pixel_format_float
DECL|macro|GL_ATI_pixel_format_float
define|#
directive|define
name|GL_ATI_pixel_format_float
value|1
comment|/* This is really a WGL extension, but defines some associated GL enums.  * ATI does not export "GL_ATI_pixel_format_float" in the GL_EXTENSIONS string.  */
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_texture_env_combine3
DECL|macro|GL_ATI_texture_env_combine3
define|#
directive|define
name|GL_ATI_texture_env_combine3
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_texture_float
DECL|macro|GL_ATI_texture_float
define|#
directive|define
name|GL_ATI_texture_float
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_float_buffer
DECL|macro|GL_NV_float_buffer
define|#
directive|define
name|GL_NV_float_buffer
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program
DECL|macro|GL_NV_fragment_program
define|#
directive|define
name|GL_NV_fragment_program
value|1
comment|/* Some NV_fragment_program entry points are shared with ARB_vertex_program. */
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramNamedParameter4fNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramNamedParameter4dNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramNamedParameter4fvNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramNamedParameter4dvNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramNamedParameterfvNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramNamedParameterdvNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|name
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_half_float
DECL|macro|GL_NV_half_float
define|#
directive|define
name|GL_NV_half_float
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertex2hNV
parameter_list|(
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertex2hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertex3hNV
parameter_list|(
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertex3hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertex4hNV
parameter_list|(
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|,
name|GLhalfNV
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertex4hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormal3hNV
parameter_list|(
name|GLhalfNV
name|nx
parameter_list|,
name|GLhalfNV
name|ny
parameter_list|,
name|GLhalfNV
name|nz
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormal3hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor3hNV
parameter_list|(
name|GLhalfNV
name|red
parameter_list|,
name|GLhalfNV
name|green
parameter_list|,
name|GLhalfNV
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor3hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor4hNV
parameter_list|(
name|GLhalfNV
name|red
parameter_list|,
name|GLhalfNV
name|green
parameter_list|,
name|GLhalfNV
name|blue
parameter_list|,
name|GLhalfNV
name|alpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColor4hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord1hNV
parameter_list|(
name|GLhalfNV
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord1hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2hNV
parameter_list|(
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord2hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord3hNV
parameter_list|(
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord3hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord4hNV
parameter_list|(
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|,
name|GLhalfNV
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoord4hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1hNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord1hvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2hNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord2hvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3hNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord3hvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4hNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|,
name|GLhalfNV
name|q
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoord4hvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordhNV
parameter_list|(
name|GLhalfNV
name|fog
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordhvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|fog
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3hNV
parameter_list|(
name|GLhalfNV
name|red
parameter_list|,
name|GLhalfNV
name|green
parameter_list|,
name|GLhalfNV
name|blue
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColor3hvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexWeighthNV
parameter_list|(
name|GLhalfNV
name|weight
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexWeighthvNV
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|weight
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1hNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib1hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2hNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib2hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3hNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib3hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4hNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|,
name|GLhalfNV
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttrib4hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs1hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs2hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs3hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribs4hvNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEX2HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEX2HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEX2HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEX2HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEX3HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEX3HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEX3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEX3HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEX4HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEX4HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|,
name|GLhalfNV
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEX4HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEX4HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMAL3HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMAL3HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|nx
parameter_list|,
name|GLhalfNV
name|ny
parameter_list|,
name|GLhalfNV
name|nz
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMAL3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMAL3HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR3HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR3HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|red
parameter_list|,
name|GLhalfNV
name|green
parameter_list|,
name|GLhalfNV
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR3HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR4HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|red
parameter_list|,
name|GLhalfNV
name|green
parameter_list|,
name|GLhalfNV
name|blue
parameter_list|,
name|GLhalfNV
name|alpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLOR4HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLOR4HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD1HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD1HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD1HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD1HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD2HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD2HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD3HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD3HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD3HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD4HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD4HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|,
name|GLhalfNV
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORD4HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORD4HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1HNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD1HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD1HVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2HNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD2HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD2HVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3HNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD3HVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4HNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLhalfNV
name|s
parameter_list|,
name|GLhalfNV
name|t
parameter_list|,
name|GLhalfNV
name|r
parameter_list|,
name|GLhalfNV
name|q
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORD4HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORD4HVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDHNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|fog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDHVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDHVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|fog
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3HNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|red
parameter_list|,
name|GLhalfNV
name|green
parameter_list|,
name|GLhalfNV
name|blue
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLOR3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLOR3HVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXWEIGHTHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXWEIGHTHNVPROC
function_decl|)
parameter_list|(
name|GLhalfNV
name|weight
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXWEIGHTHVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXWEIGHTHVNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLhalfNV
modifier|*
name|weight
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1HNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB1HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB1HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2HNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB2HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB2HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3HNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB3HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4HNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4HNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLhalfNV
name|x
parameter_list|,
name|GLhalfNV
name|y
parameter_list|,
name|GLhalfNV
name|z
parameter_list|,
name|GLhalfNV
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIB4HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIB4HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS1HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS1HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS2HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS2HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS3HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS3HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBS4HVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBS4HVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLhalfNV
modifier|*
name|v
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_pixel_data_range
DECL|macro|GL_NV_pixel_data_range
define|#
directive|define
name|GL_NV_pixel_data_range
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPixelDataRangeNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|length
parameter_list|,
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFlushPixelDataRangeNV
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPIXELDATARANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPIXELDATARANGENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|length
parameter_list|,
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFLUSHPIXELDATARANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFLUSHPIXELDATARANGENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_primitive_restart
DECL|macro|GL_NV_primitive_restart
define|#
directive|define
name|GL_NV_primitive_restart
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPrimitiveRestartNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPrimitiveRestartIndexNV
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPRIMITIVERESTARTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPRIMITIVERESTARTNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPRIMITIVERESTARTINDEXNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPRIMITIVERESTARTINDEXNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_expand_normal
DECL|macro|GL_NV_texture_expand_normal
define|#
directive|define
name|GL_NV_texture_expand_normal
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program2
DECL|macro|GL_NV_vertex_program2
define|#
directive|define
name|GL_NV_vertex_program2
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_map_object_buffer
DECL|macro|GL_ATI_map_object_buffer
define|#
directive|define
name|GL_ATI_map_object_buffer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLvoid
modifier|*
name|APIENTRY
name|glMapObjectBufferATI
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUnmapObjectBufferATI
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMAPOBJECTBUFFERATIPROC
typedef|typedef
name|GLvoid
modifier|*
function_decl|(
name|APIENTRYP
name|PFNGLMAPOBJECTBUFFERATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNMAPOBJECTBUFFERATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNMAPOBJECTBUFFERATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_separate_stencil
DECL|macro|GL_ATI_separate_stencil
define|#
directive|define
name|GL_ATI_separate_stencil
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glStencilOpSeparateATI
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|sfail
parameter_list|,
name|GLenum
name|dpfail
parameter_list|,
name|GLenum
name|dppass
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilFuncSeparateATI
parameter_list|(
name|GLenum
name|frontfunc
parameter_list|,
name|GLenum
name|backfunc
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSTENCILOPSEPARATEATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILOPSEPARATEATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLenum
name|sfail
parameter_list|,
name|GLenum
name|dpfail
parameter_list|,
name|GLenum
name|dppass
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILFUNCSEPARATEATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILFUNCSEPARATEATIPROC
function_decl|)
parameter_list|(
name|GLenum
name|frontfunc
parameter_list|,
name|GLenum
name|backfunc
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_vertex_attrib_array_object
DECL|macro|GL_ATI_vertex_attrib_array_object
define|#
directive|define
name|GL_ATI_vertex_attrib_array_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribArrayObjectATI
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribArrayObjectfvATI
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribArrayObjectivATI
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|offset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_OES_read_format
DECL|macro|GL_OES_read_format
define|#
directive|define
name|GL_OES_read_format
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_depth_bounds_test
DECL|macro|GL_EXT_depth_bounds_test
define|#
directive|define
name|GL_EXT_depth_bounds_test
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDepthBoundsEXT
parameter_list|(
name|GLclampd
name|zmin
parameter_list|,
name|GLclampd
name|zmax
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDEPTHBOUNDSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEPTHBOUNDSEXTPROC
function_decl|)
parameter_list|(
name|GLclampd
name|zmin
parameter_list|,
name|GLclampd
name|zmax
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_mirror_clamp
DECL|macro|GL_EXT_texture_mirror_clamp
define|#
directive|define
name|GL_EXT_texture_mirror_clamp
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_blend_equation_separate
DECL|macro|GL_EXT_blend_equation_separate
define|#
directive|define
name|GL_EXT_blend_equation_separate
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationSeparateEXT
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDEQUATIONSEPARATEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONSEPARATEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_pack_invert
DECL|macro|GL_MESA_pack_invert
define|#
directive|define
name|GL_MESA_pack_invert
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESA_ycbcr_texture
DECL|macro|GL_MESA_ycbcr_texture
define|#
directive|define
name|GL_MESA_ycbcr_texture
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_pixel_buffer_object
DECL|macro|GL_EXT_pixel_buffer_object
define|#
directive|define
name|GL_EXT_pixel_buffer_object
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program_option
DECL|macro|GL_NV_fragment_program_option
define|#
directive|define
name|GL_NV_fragment_program_option
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program2
DECL|macro|GL_NV_fragment_program2
define|#
directive|define
name|GL_NV_fragment_program2
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program2_option
DECL|macro|GL_NV_vertex_program2_option
define|#
directive|define
name|GL_NV_vertex_program2_option
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program3
DECL|macro|GL_NV_vertex_program3
define|#
directive|define
name|GL_NV_vertex_program3
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_object
DECL|macro|GL_EXT_framebuffer_object
define|#
directive|define
name|GL_EXT_framebuffer_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsRenderbufferEXT
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindRenderbufferEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteRenderbuffersEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenRenderbuffersEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glRenderbufferStorageEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetRenderbufferParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsFramebufferEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindFramebufferEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteFramebuffersEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenFramebuffersEXT
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
name|GLAPI
name|GLenum
name|APIENTRY
name|glCheckFramebufferStatusEXT
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTexture1DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTexture2DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTexture3DEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferRenderbufferEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFramebufferAttachmentParameterivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenerateMipmapEXT
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLISRENDERBUFFEREXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISRENDERBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDRENDERBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDRENDERBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETERENDERBUFFERSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETERENDERBUFFERSEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENRENDERBUFFERSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENRENDERBUFFERSEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|renderbuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRENDERBUFFERSTORAGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISFRAMEBUFFEREXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISFRAMEBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDFRAMEBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDFRAMEBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|framebuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEFRAMEBUFFERSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEFRAMEBUFFERSEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENFRAMEBUFFERSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENFRAMEBUFFERSEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|framebuffers
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENERATEMIPMAPEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENERATEMIPMAPEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GREMEDY_string_marker
DECL|macro|GL_GREMEDY_string_marker
define|#
directive|define
name|GL_GREMEDY_string_marker
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glStringMarkerGREMEDY
parameter_list|(
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSTRINGMARKERGREMEDYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTRINGMARKERGREMEDYPROC
function_decl|)
parameter_list|(
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_packed_depth_stencil
DECL|macro|GL_EXT_packed_depth_stencil
define|#
directive|define
name|GL_EXT_packed_depth_stencil
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_stencil_clear_tag
DECL|macro|GL_EXT_stencil_clear_tag
define|#
directive|define
name|GL_EXT_stencil_clear_tag
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glStencilClearTagEXT
parameter_list|(
name|GLsizei
name|stencilTagBits
parameter_list|,
name|GLuint
name|stencilClearTag
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSTENCILCLEARTAGEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILCLEARTAGEXTPROC
function_decl|)
parameter_list|(
name|GLsizei
name|stencilTagBits
parameter_list|,
name|GLuint
name|stencilClearTag
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_sRGB
DECL|macro|GL_EXT_texture_sRGB
define|#
directive|define
name|GL_EXT_texture_sRGB
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_blit
DECL|macro|GL_EXT_framebuffer_blit
define|#
directive|define
name|GL_EXT_framebuffer_blit
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlitFramebufferEXT
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLITFRAMEBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLITFRAMEBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLint
name|srcX0
parameter_list|,
name|GLint
name|srcY0
parameter_list|,
name|GLint
name|srcX1
parameter_list|,
name|GLint
name|srcY1
parameter_list|,
name|GLint
name|dstX0
parameter_list|,
name|GLint
name|dstY0
parameter_list|,
name|GLint
name|dstX1
parameter_list|,
name|GLint
name|dstY1
parameter_list|,
name|GLbitfield
name|mask
parameter_list|,
name|GLenum
name|filter
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_multisample
DECL|macro|GL_EXT_framebuffer_multisample
define|#
directive|define
name|GL_EXT_framebuffer_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glRenderbufferStorageMultisampleEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_MESAX_texture_stack
DECL|macro|GL_MESAX_texture_stack
define|#
directive|define
name|GL_MESAX_texture_stack
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_timer_query
DECL|macro|GL_EXT_timer_query
define|#
directive|define
name|GL_EXT_timer_query
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjecti64vEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetQueryObjectui64vEXT
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETQUERYOBJECTI64VEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTI64VEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETQUERYOBJECTUI64VEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETQUERYOBJECTUI64VEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_gpu_program_parameters
DECL|macro|GL_EXT_gpu_program_parameters
define|#
directive|define
name|GL_EXT_gpu_program_parameters
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameters4fvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameters4fvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_flush_buffer_range
DECL|macro|GL_APPLE_flush_buffer_range
define|#
directive|define
name|GL_APPLE_flush_buffer_range
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBufferParameteriAPPLE
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFlushMappedBufferRangeAPPLE
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBUFFERPARAMETERIAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBUFFERPARAMETERIAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_gpu_program4
DECL|macro|GL_NV_gpu_program4
define|#
directive|define
name|GL_NV_gpu_program4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameterI4iNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameterI4ivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParametersI4ivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameterI4uiNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParameterI4uivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramLocalParametersI4uivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameterI4iNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameterI4ivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParametersI4ivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameterI4uiNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParameterI4uivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramEnvParametersI4uivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramLocalParameterIivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramLocalParameterIuivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramEnvParameterIivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramEnvParameterIuivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMLOCALPARAMETERI4INVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETERI4INVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETERI4INVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETERI4INVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETERI4IVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETERI4IVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETERI4UINVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETERI4UINVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_geometry_program4
DECL|macro|GL_NV_geometry_program4
define|#
directive|define
name|GL_NV_geometry_program4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramVertexLimitNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|limit
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTextureEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTextureLayerEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferTextureFaceEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|face
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMVERTEXLIMITNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMVERTEXLIMITNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLint
name|limit
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTUREEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|face
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_geometry_shader4
DECL|macro|GL_EXT_geometry_shader4
define|#
directive|define
name|GL_EXT_geometry_shader4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramParameteriEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_program4
DECL|macro|GL_NV_vertex_program4
define|#
directive|define
name|GL_NV_vertex_program4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1iEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2iEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3iEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4iEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1uiEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2uiEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3uiEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4uiEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1ivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2ivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3ivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4ivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI1uivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI2uivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI3uivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4uivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4bvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4svEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4ubvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribI4usvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribIPointerEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribIivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribIuivEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIBI1IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI1UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI1IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI1UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI1UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI2UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI2UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI3UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI3UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4BVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4BVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLbyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4SVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4SVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLshort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4UBVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4UBVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBI4USVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBI4USVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLushort
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBIPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBIPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBIIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_gpu_shader4
DECL|macro|GL_EXT_gpu_shader4
define|#
directive|define
name|GL_EXT_gpu_shader4
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformuivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindFragDataLocationEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|color
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetFragDataLocationEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1uiEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2uiEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3uiEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4uiEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1uivEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2uivEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3uivEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4uivEXT
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETUNIFORMUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDFRAGDATALOCATIONEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDFRAGDATALOCATIONEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|color
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAGDATALOCATIONEXTPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAGDATALOCATIONEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1UIEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2UIEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3UIEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4UIEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1UIVEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2UIVEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3UIVEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4UIVEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_draw_instanced
DECL|macro|GL_EXT_draw_instanced
define|#
directive|define
name|GL_EXT_draw_instanced
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDrawArraysInstancedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawElementsInstancedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDRAWARRAYSINSTANCEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWARRAYSINSTANCEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLint
name|start
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWELEMENTSINSTANCEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWELEMENTSINSTANCEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indices
parameter_list|,
name|GLsizei
name|primcount
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_packed_float
DECL|macro|GL_EXT_packed_float
define|#
directive|define
name|GL_EXT_packed_float
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_array
DECL|macro|GL_EXT_texture_array
define|#
directive|define
name|GL_EXT_texture_array
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_buffer_object
DECL|macro|GL_EXT_texture_buffer_object
define|#
directive|define
name|GL_EXT_texture_buffer_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexBufferEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_latc
DECL|macro|GL_EXT_texture_compression_latc
define|#
directive|define
name|GL_EXT_texture_compression_latc
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_compression_rgtc
DECL|macro|GL_EXT_texture_compression_rgtc
define|#
directive|define
name|GL_EXT_texture_compression_rgtc
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_shared_exponent
DECL|macro|GL_EXT_texture_shared_exponent
define|#
directive|define
name|GL_EXT_texture_shared_exponent
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_depth_buffer_float
DECL|macro|GL_NV_depth_buffer_float
define|#
directive|define
name|GL_NV_depth_buffer_float
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDepthRangedNV
parameter_list|(
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearDepthdNV
parameter_list|(
name|GLdouble
name|depth
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDepthBoundsdNV
parameter_list|(
name|GLdouble
name|zmin
parameter_list|,
name|GLdouble
name|zmax
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDEPTHRANGEDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEPTHRANGEDNVPROC
function_decl|)
parameter_list|(
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARDEPTHDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARDEPTHDNVPROC
function_decl|)
parameter_list|(
name|GLdouble
name|depth
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEPTHBOUNDSDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEPTHBOUNDSDNVPROC
function_decl|)
parameter_list|(
name|GLdouble
name|zmin
parameter_list|,
name|GLdouble
name|zmax
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_fragment_program4
DECL|macro|GL_NV_fragment_program4
define|#
directive|define
name|GL_NV_fragment_program4
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_framebuffer_multisample_coverage
DECL|macro|GL_NV_framebuffer_multisample_coverage
define|#
directive|define
name|GL_NV_framebuffer_multisample_coverage
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glRenderbufferStorageMultisampleCoverageNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_sRGB
DECL|macro|GL_EXT_framebuffer_sRGB
define|#
directive|define
name|GL_EXT_framebuffer_sRGB
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_geometry_shader4
DECL|macro|GL_NV_geometry_shader4
define|#
directive|define
name|GL_NV_geometry_shader4
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_parameter_buffer_object
DECL|macro|GL_NV_parameter_buffer_object
define|#
directive|define
name|GL_NV_parameter_buffer_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramBufferParametersfvNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramBufferParametersIivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramBufferParametersIuivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_draw_buffers2
DECL|macro|GL_EXT_draw_buffers2
define|#
directive|define
name|GL_EXT_draw_buffers2
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glColorMaskIndexedEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLboolean
name|r
parameter_list|,
name|GLboolean
name|g
parameter_list|,
name|GLboolean
name|b
parameter_list|,
name|GLboolean
name|a
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBooleanIndexedvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetIntegerIndexedvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEnableIndexedEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDisableIndexedEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsEnabledIndexedEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOLORMASKINDEXEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORMASKINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLboolean
name|r
parameter_list|,
name|GLboolean
name|g
parameter_list|,
name|GLboolean
name|b
parameter_list|,
name|GLboolean
name|a
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBOOLEANINDEXEDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBOOLEANINDEXEDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLboolean
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGERINDEXEDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINTEGERINDEXEDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLEINDEXEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENABLEINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEINDEXEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDISABLEINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISENABLEDINDEXEDEXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISENABLEDINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_transform_feedback
DECL|macro|GL_NV_transform_feedback
define|#
directive|define
name|GL_NV_transform_feedback
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBeginTransformFeedbackNV
parameter_list|(
name|GLenum
name|primitiveMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndTransformFeedbackNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTransformFeedbackAttribsNV
parameter_list|(
name|GLuint
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|attribs
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferRangeNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferOffsetNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferBaseNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTransformFeedbackVaryingsNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|locations
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glActiveVaryingNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetVaryingLocationNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetActiveVaryingNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLsizei
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTransformFeedbackVaryingNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|location
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTransformFeedbackStreamAttribsNV
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|attribs
parameter_list|,
name|GLsizei
name|nbuffers
parameter_list|,
specifier|const
name|GLint
modifier|*
name|bufstreams
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBEGINTRANSFORMFEEDBACKNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINTRANSFORMFEEDBACKNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|primitiveMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDTRANSFORMFEEDBACKNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDTRANSFORMFEEDBACKNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|attribs
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERRANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERRANGENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFEROFFSETNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFEROFFSETNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERBASENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERBASENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|locations
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLACTIVEVARYINGNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLACTIVEVARYINGNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVARYINGLOCATIONNVPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETVARYINGLOCATIONNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETACTIVEVARYINGNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETACTIVEVARYINGNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLsizei
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|location
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|attribs
parameter_list|,
name|GLsizei
name|nbuffers
parameter_list|,
specifier|const
name|GLint
modifier|*
name|bufstreams
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_bindable_uniform
DECL|macro|GL_EXT_bindable_uniform
define|#
directive|define
name|GL_EXT_bindable_uniform
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glUniformBufferEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|GLint
name|APIENTRY
name|glGetUniformBufferSizeEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|)
function_decl|;
name|GLAPI
name|GLintptr
name|APIENTRY
name|glGetUniformOffsetEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLUNIFORMBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMBUFFERSIZEEXTPROC
typedef|typedef
name|GLint
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMBUFFERSIZEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMOFFSETEXTPROC
typedef|typedef
name|GLintptr
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMOFFSETEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_integer
DECL|macro|GL_EXT_texture_integer
define|#
directive|define
name|GL_EXT_texture_integer
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexParameterIivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexParameterIuivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTexParameterIivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTexParameterIuivEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearColorIiEXT
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|,
name|GLint
name|alpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glClearColorIuiEXT
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|,
name|GLuint
name|alpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARCOLORIIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARCOLORIIEXTPROC
function_decl|)
parameter_list|(
name|GLint
name|red
parameter_list|,
name|GLint
name|green
parameter_list|,
name|GLint
name|blue
parameter_list|,
name|GLint
name|alpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCLEARCOLORIUIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLEARCOLORIUIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|red
parameter_list|,
name|GLuint
name|green
parameter_list|,
name|GLuint
name|blue
parameter_list|,
name|GLuint
name|alpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_GREMEDY_frame_terminator
DECL|macro|GL_GREMEDY_frame_terminator
define|#
directive|define
name|GL_GREMEDY_frame_terminator
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glFrameTerminatorGREMEDY
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLFRAMETERMINATORGREMEDYPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMETERMINATORGREMEDYPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_conditional_render
DECL|macro|GL_NV_conditional_render
define|#
directive|define
name|GL_NV_conditional_render
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBeginConditionalRenderNV
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndConditionalRenderNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBEGINCONDITIONALRENDERNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINCONDITIONALRENDERNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDCONDITIONALRENDERNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDCONDITIONALRENDERNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_present_video
DECL|macro|GL_NV_present_video
define|#
directive|define
name|GL_NV_present_video
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glPresentFrameKeyedNV
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLuint64EXT
name|minPresentTime
parameter_list|,
name|GLuint
name|beginPresentTimeId
parameter_list|,
name|GLuint
name|presentDurationId
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|target0
parameter_list|,
name|GLuint
name|fill0
parameter_list|,
name|GLuint
name|key0
parameter_list|,
name|GLenum
name|target1
parameter_list|,
name|GLuint
name|fill1
parameter_list|,
name|GLuint
name|key1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPresentFrameDualFillNV
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLuint64EXT
name|minPresentTime
parameter_list|,
name|GLuint
name|beginPresentTimeId
parameter_list|,
name|GLuint
name|presentDurationId
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|target0
parameter_list|,
name|GLuint
name|fill0
parameter_list|,
name|GLenum
name|target1
parameter_list|,
name|GLuint
name|fill1
parameter_list|,
name|GLenum
name|target2
parameter_list|,
name|GLuint
name|fill2
parameter_list|,
name|GLenum
name|target3
parameter_list|,
name|GLuint
name|fill3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideoivNV
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideouivNV
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideoi64vNV
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideoui64vNV
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPRESENTFRAMEKEYEDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPRESENTFRAMEKEYEDNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLuint64EXT
name|minPresentTime
parameter_list|,
name|GLuint
name|beginPresentTimeId
parameter_list|,
name|GLuint
name|presentDurationId
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|target0
parameter_list|,
name|GLuint
name|fill0
parameter_list|,
name|GLuint
name|key0
parameter_list|,
name|GLenum
name|target1
parameter_list|,
name|GLuint
name|fill1
parameter_list|,
name|GLuint
name|key1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPRESENTFRAMEDUALFILLNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPRESENTFRAMEDUALFILLNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLuint64EXT
name|minPresentTime
parameter_list|,
name|GLuint
name|beginPresentTimeId
parameter_list|,
name|GLuint
name|presentDurationId
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLenum
name|target0
parameter_list|,
name|GLuint
name|fill0
parameter_list|,
name|GLenum
name|target1
parameter_list|,
name|GLuint
name|fill1
parameter_list|,
name|GLenum
name|target2
parameter_list|,
name|GLuint
name|fill2
parameter_list|,
name|GLenum
name|target3
parameter_list|,
name|GLuint
name|fill3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOUIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOUIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOUI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_transform_feedback
DECL|macro|GL_EXT_transform_feedback
define|#
directive|define
name|GL_EXT_transform_feedback
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBeginTransformFeedbackEXT
parameter_list|(
name|GLenum
name|primitiveMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndTransformFeedbackEXT
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferRangeEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferOffsetEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindBufferBaseEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTransformFeedbackVaryingsEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|varyings
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTransformFeedbackVaryingEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLsizei
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|primitiveMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDTRANSFORMFEEDBACKEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDTRANSFORMFEEDBACKEXTPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERRANGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERRANGEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFEROFFSETEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFEROFFSETEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDBUFFERBASEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDBUFFERBASEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLchar
modifier|*
modifier|*
name|varyings
parameter_list|,
name|GLenum
name|bufferMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLsizei
modifier|*
name|size
parameter_list|,
name|GLenum
modifier|*
name|type
parameter_list|,
name|GLchar
modifier|*
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_direct_state_access
DECL|macro|GL_EXT_direct_state_access
define|#
directive|define
name|GL_EXT_direct_state_access
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glClientAttribDefaultEXT
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPushClientAttribDefaultEXT
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixLoadfEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixLoaddEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixMultfEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixMultdEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixLoadIdentityEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixRotatefEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLfloat
name|angle
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixRotatedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|angle
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixScalefEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixScaledEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixTranslatefEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixTranslatedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixFrustumEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixOrthoEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixPopEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixPushEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixLoadTransposefEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixLoadTransposedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixMultTransposefEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMatrixMultTransposedEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureParameterfEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureParameterfvEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureParameteriEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureParameterivEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureImage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureImage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureSubImage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureSubImage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTextureImage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTextureImage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTextureSubImage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTextureSubImage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTextureImageEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTextureParameterfvEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTextureParameterivEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTextureLevelParameterfvEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTextureLevelParameterivEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureImage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureSubImage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyTextureSubImage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexParameterfEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexParameterfvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexParameteriEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexParameterivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexImage1DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexImage2DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexSubImage1DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexSubImage2DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyMultiTexImage1DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyMultiTexImage2DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyMultiTexSubImage1DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyMultiTexSubImage2DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexImageEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexParameterfvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexParameterivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexLevelParameterfvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexLevelParameterivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexImage3DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexSubImage3DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyMultiTexSubImage3DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindMultiTextureEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEnableClientStateIndexedEXT
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDisableClientStateIndexedEXT
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexCoordPointerEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexEnvfEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexEnvfvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexEnviEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexEnvivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexGendEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexGendvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexGenfEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexGenfvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexGeniEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexGenivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexEnvfvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexEnvivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexGendvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexGenfvEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexGenivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFloatIndexedvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetDoubleIndexedvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPointerIndexedvEXT
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTextureImage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTextureImage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTextureImage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTextureSubImage3DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTextureSubImage2DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedTextureSubImage1DEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCompressedTextureImageEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|lod
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedMultiTexImage3DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedMultiTexImage2DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedMultiTexImage1DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedMultiTexSubImage3DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedMultiTexSubImage2DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCompressedMultiTexSubImage1DEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetCompressedMultiTexImageEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|lod
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramStringEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameter4dEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameter4dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameter4fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameter4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedProgramLocalParameterdvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedProgramLocalParameterfvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedProgramivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedProgramStringEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameters4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameterI4iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameterI4ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParametersI4ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameterI4uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParameterI4uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedProgramLocalParametersI4uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedProgramLocalParameterIivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedProgramLocalParameterIuivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureParameterIivEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureParameterIuivEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTextureParameterIivEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTextureParameterIuivEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexParameterIivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexParameterIuivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexParameterIivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetMultiTexParameterIuivEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4fEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4iEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4ivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x2fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x4fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x3fvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4uiEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4uivEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedBufferDataEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedBufferSubDataEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|GLvoid
modifier|*
name|APIENTRY
name|glMapNamedBufferEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glUnmapNamedBufferEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|GLvoid
modifier|*
name|APIENTRY
name|glMapNamedBufferRangeEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|,
name|GLbitfield
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFlushMappedNamedBufferRangeEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedCopyBufferSubDataEXT
parameter_list|(
name|GLuint
name|readBuffer
parameter_list|,
name|GLuint
name|writeBuffer
parameter_list|,
name|GLintptr
name|readOffset
parameter_list|,
name|GLintptr
name|writeOffset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedBufferParameterivEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedBufferPointervEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedBufferSubDataEXT
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureBufferEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexBufferEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedRenderbufferStorageEXT
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedRenderbufferParameterivEXT
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|GLenum
name|APIENTRY
name|glCheckNamedFramebufferStatusEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedFramebufferTexture1DEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedFramebufferTexture2DEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedFramebufferTexture3DEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedFramebufferRenderbufferEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedFramebufferAttachmentParameterivEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenerateTextureMipmapEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenerateMultiTexMipmapEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferDrawBufferEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferDrawBuffersEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFramebufferReadBufferEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetFramebufferParameterivEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedRenderbufferStorageMultisampleEXT
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedRenderbufferStorageMultisampleCoverageEXT
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedFramebufferTextureEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedFramebufferTextureLayerEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNamedFramebufferTextureFaceEXT
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|face
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureRenderbufferEXT
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiTexRenderbufferEXT
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1dEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2dEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3dEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4dEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x3dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix2x4dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x2dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix3x4dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x2dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformMatrix4x3dvEXT
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCLIENTATTRIBDEFAULTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCLIENTATTRIBDEFAULTEXTPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXLOADFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXLOADFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXLOADDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXLOADDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXMULTFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXMULTFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXMULTDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXMULTDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXLOADIDENTITYEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXLOADIDENTITYEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXROTATEFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXROTATEFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLfloat
name|angle
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXROTATEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXROTATEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|angle
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXSCALEFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXSCALEFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXSCALEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXSCALEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXTRANSLATEFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXTRANSLATEFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXTRANSLATEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXTRANSLATEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXFRUSTUMEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXFRUSTUMEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXORTHOEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXORTHOEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLdouble
name|left
parameter_list|,
name|GLdouble
name|right
parameter_list|,
name|GLdouble
name|bottom
parameter_list|,
name|GLdouble
name|top
parameter_list|,
name|GLdouble
name|zNear
parameter_list|,
name|GLdouble
name|zFar
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXPOPEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXPOPEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXPUSHEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXPUSHEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXLOADTRANSPOSEFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXLOADTRANSPOSEFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXLOADTRANSPOSEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXLOADTRANSPOSEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXMULTTRANSPOSEFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXMULTTRANSPOSEFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMATRIXMULTTRANSPOSEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMATRIXMULTTRANSPOSEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|m
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREPARAMETERFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREPARAMETERFEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURESUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURESUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXTUREIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXTUREIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXTUREIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXTUREIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTUREIMAGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTUREIMAGEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTUREPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTUREPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTUREPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTUREPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURESUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURESUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXPARAMETERFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXPARAMETERFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXPARAMETERIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXPARAMETERIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXSUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXSUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXSUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXSUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYMULTITEXIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYMULTITEXIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYMULTITEXIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYMULTITEXIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXIMAGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXIMAGEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXSUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXSUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pixels
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDMULTITEXTUREEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDMULTITEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|array
parameter_list|,
name|GLuint
name|index
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXCOORDPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXCOORDPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXENVFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXENVFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXENVFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXENVFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXENVIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXENVIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXENVIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXENVIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXGENDEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXGENDEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXGENDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXGENDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXGENFEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXGENFEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXGENFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXGENFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXGENIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXGENIEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|param
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXGENIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXGENIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXENVFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXENVFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXENVIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXENVIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXGENDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXGENDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXGENFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXGENFVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXGENIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXGENIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|coord
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFLOATINDEXEDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFLOATINDEXEDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDOUBLEINDEXEDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETDOUBLEINDEXEDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPOINTERINDEXEDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPOINTERINDEXEDVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|lod
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLint
name|border
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLint
name|zoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLint
name|yoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|xoffset
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|imageSize
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|bits
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLint
name|lod
parameter_list|,
name|GLvoid
modifier|*
name|img
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMSTRINGEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMSTRINGEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|len
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|,
name|GLfloat
name|z
parameter_list|,
name|GLfloat
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDPROGRAMIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDPROGRAMIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|string
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|x
parameter_list|,
name|GLint
name|y
parameter_list|,
name|GLint
name|z
parameter_list|,
name|GLint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
name|x
parameter_list|,
name|GLuint
name|y
parameter_list|,
name|GLuint
name|z
parameter_list|,
name|GLuint
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTUREPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTUREPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXPARAMETERIIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXPARAMETERIIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4FEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLfloat
name|v0
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLfloat
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4IEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint
name|v0
parameter_list|,
name|GLint
name|v1
parameter_list|,
name|GLint
name|v2
parameter_list|,
name|GLint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4IVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4IVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UIEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4UIEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint
name|v0
parameter_list|,
name|GLuint
name|v1
parameter_list|,
name|GLuint
name|v2
parameter_list|,
name|GLuint
name|v3
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4UIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDBUFFERDATAEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDBUFFERDATAEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|,
name|GLenum
name|usage
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDBUFFERSUBDATAEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDBUFFERSUBDATAEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPNAMEDBUFFEREXTPROC
typedef|typedef
name|GLvoid
modifier|*
function_decl|(
name|APIENTRYP
name|PFNGLMAPNAMEDBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNMAPNAMEDBUFFEREXTPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLUNMAPNAMEDBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPNAMEDBUFFERRANGEEXTPROC
typedef|typedef
name|GLvoid
modifier|*
function_decl|(
name|APIENTRYP
name|PFNGLMAPNAMEDBUFFERRANGEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|,
name|GLbitfield
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|readBuffer
parameter_list|,
name|GLuint
name|writeBuffer
parameter_list|,
name|GLintptr
name|readOffset
parameter_list|,
name|GLintptr
name|writeOffset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLintptr
name|offset
parameter_list|,
name|GLsizeiptr
name|size
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|textarget
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|zoffset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|renderbuffertarget
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENERATETEXTUREMIPMAPEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENERATETEXTUREMIPMAPEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENERATEMULTITEXMIPMAPEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENERATEMULTITEXMIPMAPEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLenum
modifier|*
name|bufs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFRAMEBUFFERREADBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFRAMEBUFFERREADBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|renderbuffer
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLenum
name|internalformat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLint
name|layer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|framebuffer
parameter_list|,
name|GLenum
name|attachment
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLenum
name|face
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTURERENDERBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURERENDERBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTITEXRENDERBUFFEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTITEXRENDERBUFFEREXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|texunit
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
name|GLboolean
name|transpose
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_array_bgra
DECL|macro|GL_EXT_vertex_array_bgra
define|#
directive|define
name|GL_EXT_vertex_array_bgra
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_swizzle
DECL|macro|GL_EXT_texture_swizzle
define|#
directive|define
name|GL_EXT_texture_swizzle
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_explicit_multisample
DECL|macro|GL_NV_explicit_multisample
define|#
directive|define
name|GL_NV_explicit_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetMultisamplefvNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|val
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSampleMaskIndexedNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexRenderbufferNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETMULTISAMPLEFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETMULTISAMPLEFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLfloat
modifier|*
name|val
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSAMPLEMASKINDEXEDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSAMPLEMASKINDEXEDNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLbitfield
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXRENDERBUFFERNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXRENDERBUFFERNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|renderbuffer
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_transform_feedback2
DECL|macro|GL_NV_transform_feedback2
define|#
directive|define
name|GL_NV_transform_feedback2
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindTransformFeedbackNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteTransformFeedbacksNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenTransformFeedbacksNV
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsTransformFeedbackNV
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPauseTransformFeedbackNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glResumeTransformFeedbackNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDrawTransformFeedbackNV
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDTRANSFORMFEEDBACKNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDTRANSFORMFEEDBACKNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETETRANSFORMFEEDBACKSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETETRANSFORMFEEDBACKSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENTRANSFORMFEEDBACKSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENTRANSFORMFEEDBACKSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISTRANSFORMFEEDBACKNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISTRANSFORMFEEDBACKNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|id
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPAUSETRANSFORMFEEDBACKNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPAUSETRANSFORMFEEDBACKNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLRESUMETRANSFORMFEEDBACKNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLRESUMETRANSFORMFEEDBACKNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDRAWTRANSFORMFEEDBACKNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDRAWTRANSFORMFEEDBACKNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLuint
name|id
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_ATI_meminfo
DECL|macro|GL_ATI_meminfo
define|#
directive|define
name|GL_ATI_meminfo
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_performance_monitor
DECL|macro|GL_AMD_performance_monitor
define|#
directive|define
name|GL_AMD_performance_monitor
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGetPerfMonitorGroupsAMD
parameter_list|(
name|GLint
modifier|*
name|numGroups
parameter_list|,
name|GLsizei
name|groupsSize
parameter_list|,
name|GLuint
modifier|*
name|groups
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPerfMonitorCountersAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLint
modifier|*
name|numCounters
parameter_list|,
name|GLint
modifier|*
name|maxActiveCounters
parameter_list|,
name|GLsizei
name|counterSize
parameter_list|,
name|GLuint
modifier|*
name|counters
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPerfMonitorGroupStringAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|groupString
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPerfMonitorCounterStringAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|counterString
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPerfMonitorCounterInfoAMD
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGenPerfMonitorsAMD
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeletePerfMonitorsAMD
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSelectPerfMonitorCountersAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLboolean
name|enable
parameter_list|,
name|GLuint
name|group
parameter_list|,
name|GLint
name|numCounters
parameter_list|,
name|GLuint
modifier|*
name|counterList
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBeginPerfMonitorAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndPerfMonitorAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPerfMonitorCounterDataAMD
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|data
parameter_list|,
name|GLint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETPERFMONITORGROUPSAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPERFMONITORGROUPSAMDPROC
function_decl|)
parameter_list|(
name|GLint
modifier|*
name|numGroups
parameter_list|,
name|GLsizei
name|groupsSize
parameter_list|,
name|GLuint
modifier|*
name|groups
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERSAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERSAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLint
modifier|*
name|numCounters
parameter_list|,
name|GLint
modifier|*
name|maxActiveCounters
parameter_list|,
name|GLsizei
name|counterSize
parameter_list|,
name|GLuint
modifier|*
name|counters
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|groupString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLchar
modifier|*
name|counterString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|group
parameter_list|,
name|GLuint
name|counter
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
name|data
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGENPERFMONITORSAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENPERFMONITORSAMDPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPERFMONITORSAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEPERFMONITORSAMDPROC
function_decl|)
parameter_list|(
name|GLsizei
name|n
parameter_list|,
name|GLuint
modifier|*
name|monitors
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLboolean
name|enable
parameter_list|,
name|GLuint
name|group
parameter_list|,
name|GLint
name|numCounters
parameter_list|,
name|GLuint
modifier|*
name|counterList
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBEGINPERFMONITORAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINPERFMONITORAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDPERFMONITORAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDPERFMONITORAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|monitor
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|dataSize
parameter_list|,
name|GLuint
modifier|*
name|data
parameter_list|,
name|GLint
modifier|*
name|bytesWritten
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_texture_texture4
DECL|macro|GL_AMD_texture_texture4
define|#
directive|define
name|GL_AMD_texture_texture4
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_vertex_shader_tesselator
DECL|macro|GL_AMD_vertex_shader_tesselator
define|#
directive|define
name|GL_AMD_vertex_shader_tesselator
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTessellationFactorAMD
parameter_list|(
name|GLfloat
name|factor
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTessellationModeAMD
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTESSELLATIONFACTORAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTESSELLATIONFACTORAMDPROC
function_decl|)
parameter_list|(
name|GLfloat
name|factor
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTESSELLATIONMODEAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTESSELLATIONMODEAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_provoking_vertex
DECL|macro|GL_EXT_provoking_vertex
define|#
directive|define
name|GL_EXT_provoking_vertex
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProvokingVertexEXT
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROVOKINGVERTEXEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROVOKINGVERTEXEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_snorm
DECL|macro|GL_EXT_texture_snorm
define|#
directive|define
name|GL_EXT_texture_snorm
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_draw_buffers_blend
DECL|macro|GL_AMD_draw_buffers_blend
define|#
directive|define
name|GL_AMD_draw_buffers_blend
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBlendFuncIndexedAMD
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendFuncSeparateIndexedAMD
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationIndexedAMD
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBlendEquationSeparateIndexedAMD
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBLENDFUNCINDEXEDAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCINDEXEDAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|src
parameter_list|,
name|GLenum
name|dst
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|srcRGB
parameter_list|,
name|GLenum
name|dstRGB
parameter_list|,
name|GLenum
name|srcAlpha
parameter_list|,
name|GLenum
name|dstAlpha
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONINDEXEDAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONINDEXEDAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|mode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|buf
parameter_list|,
name|GLenum
name|modeRGB
parameter_list|,
name|GLenum
name|modeAlpha
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_texture_range
DECL|macro|GL_APPLE_texture_range
define|#
directive|define
name|GL_APPLE_texture_range
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTextureRangeAPPLE
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetTexParameterPointervAPPLE
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXTURERANGEAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTURERANGEAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLvoid
modifier|*
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_float_pixels
DECL|macro|GL_APPLE_float_pixels
define|#
directive|define
name|GL_APPLE_float_pixels
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_vertex_program_evaluators
DECL|macro|GL_APPLE_vertex_program_evaluators
define|#
directive|define
name|GL_APPLE_vertex_program_evaluators
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glEnableVertexAttribAPPLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDisableVertexAttribAPPLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsVertexAttribEnabledAPPLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMapVertexAttrib1dAPPLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMapVertexAttrib1fAPPLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMapVertexAttrib2dAPPLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMapVertexAttrib2fAPPLE
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLENABLEVERTEXATTRIBAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENABLEVERTEXATTRIBAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDISABLEVERTEXATTRIBAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDISABLEVERTEXATTRIBAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPVERTEXATTRIB1DAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAPVERTEXATTRIB1DAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPVERTEXATTRIB1FAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAPVERTEXATTRIB1FAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|stride
parameter_list|,
name|GLint
name|order
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPVERTEXATTRIB2DAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAPVERTEXATTRIB2DAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLdouble
name|u1
parameter_list|,
name|GLdouble
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLdouble
name|v1
parameter_list|,
name|GLdouble
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|points
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAPVERTEXATTRIB2FAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAPVERTEXATTRIB2FAPPLEPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|size
parameter_list|,
name|GLfloat
name|u1
parameter_list|,
name|GLfloat
name|u2
parameter_list|,
name|GLint
name|ustride
parameter_list|,
name|GLint
name|uorder
parameter_list|,
name|GLfloat
name|v1
parameter_list|,
name|GLfloat
name|v2
parameter_list|,
name|GLint
name|vstride
parameter_list|,
name|GLint
name|vorder
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|points
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_aux_depth_stencil
DECL|macro|GL_APPLE_aux_depth_stencil
define|#
directive|define
name|GL_APPLE_aux_depth_stencil
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_object_purgeable
DECL|macro|GL_APPLE_object_purgeable
define|#
directive|define
name|GL_APPLE_object_purgeable
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLenum
name|APIENTRY
name|glObjectPurgeableAPPLE
parameter_list|(
name|GLenum
name|objectType
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLenum
name|option
parameter_list|)
function_decl|;
name|GLAPI
name|GLenum
name|APIENTRY
name|glObjectUnpurgeableAPPLE
parameter_list|(
name|GLenum
name|objectType
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLenum
name|option
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetObjectParameterivAPPLE
parameter_list|(
name|GLenum
name|objectType
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLOBJECTPURGEABLEAPPLEPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLOBJECTPURGEABLEAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|objectType
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLenum
name|option
parameter_list|)
function_decl|;
DECL|typedef|PFNGLOBJECTUNPURGEABLEAPPLEPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLOBJECTUNPURGEABLEAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|objectType
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLenum
name|option
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETOBJECTPARAMETERIVAPPLEPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETOBJECTPARAMETERIVAPPLEPROC
function_decl|)
parameter_list|(
name|GLenum
name|objectType
parameter_list|,
name|GLuint
name|name
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_row_bytes
DECL|macro|GL_APPLE_row_bytes
define|#
directive|define
name|GL_APPLE_row_bytes
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_APPLE_rgb_422
DECL|macro|GL_APPLE_rgb_422
define|#
directive|define
name|GL_APPLE_rgb_422
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_video_capture
DECL|macro|GL_NV_video_capture
define|#
directive|define
name|GL_NV_video_capture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBeginVideoCaptureNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindVideoCaptureStreamBufferNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|frame_region
parameter_list|,
name|GLintptrARB
name|offset
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glBindVideoCaptureStreamTextureNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|frame_region
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEndVideoCaptureNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideoCaptureivNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideoCaptureStreamivNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideoCaptureStreamfvNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVideoCaptureStreamdvNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|GLenum
name|APIENTRY
name|glVideoCaptureNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
modifier|*
name|sequence_num
parameter_list|,
name|GLuint64EXT
modifier|*
name|capture_time
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVideoCaptureStreamParameterivNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVideoCaptureStreamParameterfvNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVideoCaptureStreamParameterdvNV
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBEGINVIDEOCAPTURENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBEGINVIDEOCAPTURENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|frame_region
parameter_list|,
name|GLintptrARB
name|offset
parameter_list|)
function_decl|;
DECL|typedef|PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|frame_region
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLENDVIDEOCAPTURENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLENDVIDEOCAPTURENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOCAPTUREIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOCAPTUREIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVIDEOCAPTURENVPROC
typedef|typedef
name|GLenum
function_decl|(
name|APIENTRYP
name|PFNGLVIDEOCAPTURENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
modifier|*
name|sequence_num
parameter_list|,
name|GLuint64EXT
modifier|*
name|capture_time
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|video_capture_slot
parameter_list|,
name|GLuint
name|stream
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_copy_image
DECL|macro|GL_NV_copy_image
define|#
directive|define
name|GL_NV_copy_image
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glCopyImageSubDataNV
parameter_list|(
name|GLuint
name|srcName
parameter_list|,
name|GLenum
name|srcTarget
parameter_list|,
name|GLint
name|srcLevel
parameter_list|,
name|GLint
name|srcX
parameter_list|,
name|GLint
name|srcY
parameter_list|,
name|GLint
name|srcZ
parameter_list|,
name|GLuint
name|dstName
parameter_list|,
name|GLenum
name|dstTarget
parameter_list|,
name|GLint
name|dstLevel
parameter_list|,
name|GLint
name|dstX
parameter_list|,
name|GLint
name|dstY
parameter_list|,
name|GLint
name|dstZ
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLCOPYIMAGESUBDATANVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYIMAGESUBDATANVPROC
function_decl|)
parameter_list|(
name|GLuint
name|srcName
parameter_list|,
name|GLenum
name|srcTarget
parameter_list|,
name|GLint
name|srcLevel
parameter_list|,
name|GLint
name|srcX
parameter_list|,
name|GLint
name|srcY
parameter_list|,
name|GLint
name|srcZ
parameter_list|,
name|GLuint
name|dstName
parameter_list|,
name|GLenum
name|dstTarget
parameter_list|,
name|GLint
name|dstLevel
parameter_list|,
name|GLint
name|dstX
parameter_list|,
name|GLint
name|dstY
parameter_list|,
name|GLint
name|dstZ
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_separate_shader_objects
DECL|macro|GL_EXT_separate_shader_objects
define|#
directive|define
name|GL_EXT_separate_shader_objects
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glUseShaderProgramEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glActiveProgramEXT
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glCreateShaderProgramEXT
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|string
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLUSESHADERPROGRAMEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUSESHADERPROGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLACTIVEPROGRAMEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLACTIVEPROGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCREATESHADERPROGRAMEXTPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLCREATESHADERPROGRAMEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|string
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_parameter_buffer_object2
DECL|macro|GL_NV_parameter_buffer_object2
define|#
directive|define
name|GL_NV_parameter_buffer_object2
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_shader_buffer_load
DECL|macro|GL_NV_shader_buffer_load
define|#
directive|define
name|GL_NV_shader_buffer_load
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glMakeBufferResidentNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMakeBufferNonResidentNV
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsBufferResidentNV
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMakeNamedBufferResidentNV
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMakeNamedBufferNonResidentNV
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsNamedBufferResidentNV
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetBufferParameterui64vNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetNamedBufferParameterui64vNV
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetIntegerui64vNV
parameter_list|(
name|GLenum
name|value
parameter_list|,
name|GLuint64EXT
modifier|*
name|result
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformui64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformui64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformui64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformui64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformui64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMAKEBUFFERRESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKEBUFFERRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAKEBUFFERNONRESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKEBUFFERNONRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISBUFFERRESIDENTNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISBUFFERRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISNAMEDBUFFERRESIDENTNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISNAMEDBUFFERRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETBUFFERPARAMETERUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETBUFFERPARAMETERUI64VNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|buffer
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGERUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINTEGERUI64VNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|value
parameter_list|,
name|GLuint64EXT
modifier|*
name|result
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMUI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMUI64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMUI64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMUI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMUI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMUI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMUI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_buffer_unified_memory
DECL|macro|GL_NV_vertex_buffer_unified_memory
define|#
directive|define
name|GL_NV_vertex_buffer_unified_memory
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBufferAddressRangeNV
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|address
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexFormatNV
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glNormalFormatNV
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glColorFormatNV
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glIndexFormatNV
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexCoordFormatNV
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glEdgeFlagFormatNV
parameter_list|(
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glSecondaryColorFormatNV
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glFogCoordFormatNV
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribFormatNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribIFormatNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetIntegerui64i_vNV
parameter_list|(
name|GLenum
name|value
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
modifier|*
name|result
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBUFFERADDRESSRANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBUFFERADDRESSRANGENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|address
parameter_list|,
name|GLsizeiptr
name|length
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXFORMATNVPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLNORMALFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLNORMALFORMATNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOLORFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOLORFORMATNVPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLINDEXFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINDEXFORMATNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXCOORDFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXCOORDFORMATNVPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLEDGEFLAGFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLEDGEFLAGFORMATNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSECONDARYCOLORFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSECONDARYCOLORFORMATNVPROC
function_decl|)
parameter_list|(
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLFOGCOORDFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLFOGCOORDFORMATNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBFORMATNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLboolean
name|normalized
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBIFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBIFORMATNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETINTEGERUI64I_VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETINTEGERUI64I_VNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|value
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
modifier|*
name|result
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_barrier
DECL|macro|GL_NV_texture_barrier
define|#
directive|define
name|GL_NV_texture_barrier
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTextureBarrierNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXTUREBARRIERNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREBARRIERNVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_shader_stencil_export
DECL|macro|GL_AMD_shader_stencil_export
define|#
directive|define
name|GL_AMD_shader_stencil_export
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_seamless_cubemap_per_texture
DECL|macro|GL_AMD_seamless_cubemap_per_texture
define|#
directive|define
name|GL_AMD_seamless_cubemap_per_texture
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_conservative_depth
DECL|macro|GL_AMD_conservative_depth
define|#
directive|define
name|GL_AMD_conservative_depth
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_shader_image_load_store
DECL|macro|GL_EXT_shader_image_load_store
define|#
directive|define
name|GL_EXT_shader_image_load_store
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glBindImageTextureEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLboolean
name|layered
parameter_list|,
name|GLint
name|layer
parameter_list|,
name|GLenum
name|access
parameter_list|,
name|GLint
name|format
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMemoryBarrierEXT
parameter_list|(
name|GLbitfield
name|barriers
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLBINDIMAGETEXTUREEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLBINDIMAGETEXTUREEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLboolean
name|layered
parameter_list|,
name|GLint
name|layer
parameter_list|,
name|GLenum
name|access
parameter_list|,
name|GLint
name|format
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMEMORYBARRIEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMEMORYBARRIEREXTPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|barriers
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_vertex_attrib_64bit
DECL|macro|GL_EXT_vertex_attrib_64bit
define|#
directive|define
name|GL_EXT_vertex_attrib_64bit
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1dEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2dEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3dEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4dEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1dvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2dvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3dvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4dvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribLPointerEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribLdvEXT
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexArrayVertexAttribLOffsetEXT
parameter_list|(
name|GLuint
name|vaobj
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLintptr
name|offset
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIBL1DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4DEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4DEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLdouble
name|x
parameter_list|,
name|GLdouble
name|y
parameter_list|,
name|GLdouble
name|z
parameter_list|,
name|GLdouble
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL1DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4DVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4DVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLdouble
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBLPOINTEREXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBLPOINTEREXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pointer
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBLDVEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBLDVEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLdouble
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
function_decl|)
parameter_list|(
name|GLuint
name|vaobj
parameter_list|,
name|GLuint
name|buffer
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLintptr
name|offset
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_gpu_program5
DECL|macro|GL_NV_gpu_program5
define|#
directive|define
name|GL_NV_gpu_program5
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glProgramSubroutineParametersuivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetProgramSubroutineParameteruivNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLuint
name|index
parameter_list|,
name|GLuint
modifier|*
name|param
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_gpu_shader5
DECL|macro|GL_NV_gpu_shader5
define|#
directive|define
name|GL_NV_gpu_shader5
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glUniform1i64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2i64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3i64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4i64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|,
name|GLint64EXT
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1i64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2i64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3i64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4i64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1ui64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2ui64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3ui64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4ui64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|,
name|GLuint64EXT
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform1ui64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform2ui64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform3ui64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniform4ui64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetUniformi64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1i64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2i64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3i64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4i64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|,
name|GLint64EXT
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1i64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2i64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3i64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4i64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1ui64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2ui64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3ui64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4ui64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|,
name|GLuint64EXT
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform1ui64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform2ui64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform3ui64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniform4ui64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLUNIFORM1I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1I64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2I64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3I64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4I64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|,
name|GLint64EXT
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1I64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2I64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3I64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4I64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1UI64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2UI64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3UI64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4UI64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|,
name|GLuint64EXT
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM1UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM1UI64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM2UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM2UI64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM3UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM3UI64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORM4UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORM4UI64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETUNIFORMI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETUNIFORMI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|,
name|GLint64EXT
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|,
name|GLuint64EXT
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM1UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM1UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM2UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM2UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM3UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM3UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORM4UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORM4UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_shader_buffer_store
DECL|macro|GL_NV_shader_buffer_store
define|#
directive|define
name|GL_NV_shader_buffer_store
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_tessellation_program5
DECL|macro|GL_NV_tessellation_program5
define|#
directive|define
name|GL_NV_tessellation_program5
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vertex_attrib_integer_64bit
DECL|macro|GL_NV_vertex_attrib_integer_64bit
define|#
directive|define
name|GL_NV_vertex_attrib_integer_64bit
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1i64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2i64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3i64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4i64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|,
name|GLint64EXT
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1i64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2i64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3i64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4i64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1ui64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2ui64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3ui64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4ui64NV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|,
name|GLuint64EXT
name|w
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL1ui64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL2ui64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL3ui64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribL4ui64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribLi64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetVertexAttribLui64vNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVertexAttribLFormatNV
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVERTEXATTRIBL1I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4I64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4I64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint64EXT
name|x
parameter_list|,
name|GLint64EXT
name|y
parameter_list|,
name|GLint64EXT
name|z
parameter_list|,
name|GLint64EXT
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL1I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4I64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4I64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL1UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4UI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4UI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLuint64EXT
name|x
parameter_list|,
name|GLuint64EXT
name|y
parameter_list|,
name|GLuint64EXT
name|z
parameter_list|,
name|GLuint64EXT
name|w
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL1UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL1UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL2UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL2UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL3UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL3UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBL4UI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBL4UI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLuint64EXT
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBLI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBLI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETVERTEXATTRIBLUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETVERTEXATTRIBLUI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLuint64EXT
modifier|*
name|params
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVERTEXATTRIBLFORMATNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVERTEXATTRIBLFORMATNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|index
parameter_list|,
name|GLint
name|size
parameter_list|,
name|GLenum
name|type
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_multisample_coverage
DECL|macro|GL_NV_multisample_coverage
define|#
directive|define
name|GL_NV_multisample_coverage
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_name_gen_delete
DECL|macro|GL_AMD_name_gen_delete
define|#
directive|define
name|GL_AMD_name_gen_delete
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glGenNamesAMD
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|num
parameter_list|,
name|GLuint
modifier|*
name|names
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeleteNamesAMD
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|num
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|names
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsNameAMD
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENNAMESAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGENNAMESAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|num
parameter_list|,
name|GLuint
modifier|*
name|names
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETENAMESAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETENAMESAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|num
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|names
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISNAMEAMDPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISNAMEAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|identifier
parameter_list|,
name|GLuint
name|name
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_debug_output
DECL|macro|GL_AMD_debug_output
define|#
directive|define
name|GL_AMD_debug_output
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glDebugMessageEnableAMD
parameter_list|(
name|GLenum
name|category
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLboolean
name|enabled
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDebugMessageInsertAMD
parameter_list|(
name|GLenum
name|category
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|buf
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDebugMessageCallbackAMD
parameter_list|(
name|GLDEBUGPROCAMD
name|callback
parameter_list|,
name|GLvoid
modifier|*
name|userParam
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint
name|APIENTRY
name|glGetDebugMessageLogAMD
parameter_list|(
name|GLuint
name|count
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLenum
modifier|*
name|categories
parameter_list|,
name|GLuint
modifier|*
name|severities
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLsizei
modifier|*
name|lengths
parameter_list|,
name|GLchar
modifier|*
name|message
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLDEBUGMESSAGEENABLEAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEBUGMESSAGEENABLEAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|category
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLboolean
name|enabled
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEBUGMESSAGEINSERTAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEBUGMESSAGEINSERTAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|category
parameter_list|,
name|GLenum
name|severity
parameter_list|,
name|GLuint
name|id
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLchar
modifier|*
name|buf
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDEBUGMESSAGECALLBACKAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDEBUGMESSAGECALLBACKAMDPROC
function_decl|)
parameter_list|(
name|GLDEBUGPROCAMD
name|callback
parameter_list|,
name|GLvoid
modifier|*
name|userParam
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETDEBUGMESSAGELOGAMDPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGETDEBUGMESSAGELOGAMDPROC
function_decl|)
parameter_list|(
name|GLuint
name|count
parameter_list|,
name|GLsizei
name|bufsize
parameter_list|,
name|GLenum
modifier|*
name|categories
parameter_list|,
name|GLuint
modifier|*
name|severities
parameter_list|,
name|GLuint
modifier|*
name|ids
parameter_list|,
name|GLsizei
modifier|*
name|lengths
parameter_list|,
name|GLchar
modifier|*
name|message
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_vdpau_interop
DECL|macro|GL_NV_vdpau_interop
define|#
directive|define
name|GL_NV_vdpau_interop
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUInitNV
parameter_list|(
specifier|const
name|GLvoid
modifier|*
name|vdpDevice
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|getProcAddress
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUFiniNV
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GLAPI
name|GLvdpauSurfaceNV
name|APIENTRY
name|glVDPAURegisterVideoSurfaceNV
parameter_list|(
name|GLvoid
modifier|*
name|vdpSurface
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numTextureNames
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textureNames
parameter_list|)
function_decl|;
name|GLAPI
name|GLvdpauSurfaceNV
name|APIENTRY
name|glVDPAURegisterOutputSurfaceNV
parameter_list|(
name|GLvoid
modifier|*
name|vdpSurface
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numTextureNames
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textureNames
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUIsSurfaceNV
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUUnregisterSurfaceNV
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUGetSurfaceivNV
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUSurfaceAccessNV
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUMapSurfacesNV
parameter_list|(
name|GLsizei
name|numSurfaces
parameter_list|,
specifier|const
name|GLvdpauSurfaceNV
modifier|*
name|surfaces
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glVDPAUUnmapSurfacesNV
parameter_list|(
name|GLsizei
name|numSurface
parameter_list|,
specifier|const
name|GLvdpauSurfaceNV
modifier|*
name|surfaces
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLVDPAUINITNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUINITNVPROC
function_decl|)
parameter_list|(
specifier|const
name|GLvoid
modifier|*
name|vdpDevice
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|getProcAddress
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUFININVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUFININVPROC
function_decl|)
parameter_list|(
name|void
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
typedef|typedef
name|GLvdpauSurfaceNV
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
function_decl|)
parameter_list|(
name|GLvoid
modifier|*
name|vdpSurface
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numTextureNames
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textureNames
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
typedef|typedef
name|GLvdpauSurfaceNV
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
function_decl|)
parameter_list|(
name|GLvoid
modifier|*
name|vdpSurface
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|numTextureNames
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|textureNames
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUISSURFACENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUISSURFACENVPROC
function_decl|)
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUUNREGISTERSURFACENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUUNREGISTERSURFACENVPROC
function_decl|)
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUGETSURFACEIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUGETSURFACEIVNVPROC
function_decl|)
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLsizei
name|bufSize
parameter_list|,
name|GLsizei
modifier|*
name|length
parameter_list|,
name|GLint
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUSURFACEACCESSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUSURFACEACCESSNVPROC
function_decl|)
parameter_list|(
name|GLvdpauSurfaceNV
name|surface
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUMAPSURFACESNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUMAPSURFACESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|numSurfaces
parameter_list|,
specifier|const
name|GLvdpauSurfaceNV
modifier|*
name|surfaces
parameter_list|)
function_decl|;
DECL|typedef|PFNGLVDPAUUNMAPSURFACESNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLVDPAUUNMAPSURFACESNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|numSurface
parameter_list|,
specifier|const
name|GLvdpauSurfaceNV
modifier|*
name|surfaces
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_transform_feedback3_lines_triangles
DECL|macro|GL_AMD_transform_feedback3_lines_triangles
define|#
directive|define
name|GL_AMD_transform_feedback3_lines_triangles
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_depth_clamp_separate
DECL|macro|GL_AMD_depth_clamp_separate
define|#
directive|define
name|GL_AMD_depth_clamp_separate
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_texture_sRGB_decode
DECL|macro|GL_EXT_texture_sRGB_decode
define|#
directive|define
name|GL_EXT_texture_sRGB_decode
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_texture_multisample
DECL|macro|GL_NV_texture_multisample
define|#
directive|define
name|GL_NV_texture_multisample
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glTexImage2DMultisampleCoverageNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTexImage3DMultisampleCoverageNV
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureImage2DMultisampleNV
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureImage3DMultisampleNV
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureImage2DMultisampleCoverageNV
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTextureImage3DMultisampleCoverageNV
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
function_decl|)
parameter_list|(
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|samples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLenum
name|target
parameter_list|,
name|GLsizei
name|coverageSamples
parameter_list|,
name|GLsizei
name|colorSamples
parameter_list|,
name|GLint
name|internalFormat
parameter_list|,
name|GLsizei
name|width
parameter_list|,
name|GLsizei
name|height
parameter_list|,
name|GLsizei
name|depth
parameter_list|,
name|GLboolean
name|fixedSampleLocations
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_blend_minmax_factor
DECL|macro|GL_AMD_blend_minmax_factor
define|#
directive|define
name|GL_AMD_blend_minmax_factor
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_sample_positions
DECL|macro|GL_AMD_sample_positions
define|#
directive|define
name|GL_AMD_sample_positions
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glSetMultisamplefvAMD
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|val
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSETMULTISAMPLEFVAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSETMULTISAMPLEFVAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|pname
parameter_list|,
name|GLuint
name|index
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|val
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_x11_sync_object
DECL|macro|GL_EXT_x11_sync_object
define|#
directive|define
name|GL_EXT_x11_sync_object
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLsync
name|APIENTRY
name|glImportSyncEXT
parameter_list|(
name|GLenum
name|external_sync_type
parameter_list|,
name|GLintptr
name|external_sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLIMPORTSYNCEXTPROC
typedef|typedef
name|GLsync
function_decl|(
name|APIENTRYP
name|PFNGLIMPORTSYNCEXTPROC
function_decl|)
parameter_list|(
name|GLenum
name|external_sync_type
parameter_list|,
name|GLintptr
name|external_sync
parameter_list|,
name|GLbitfield
name|flags
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_multi_draw_indirect
DECL|macro|GL_AMD_multi_draw_indirect
define|#
directive|define
name|GL_AMD_multi_draw_indirect
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawArraysIndirectAMD
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMultiDrawElementsIndirectAMD
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|mode
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|indirect
parameter_list|,
name|GLsizei
name|primcount
parameter_list|,
name|GLsizei
name|stride
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_EXT_framebuffer_multisample_blit_scaled
DECL|macro|GL_EXT_framebuffer_multisample_blit_scaled
define|#
directive|define
name|GL_EXT_framebuffer_multisample_blit_scaled
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_path_rendering
DECL|macro|GL_NV_path_rendering
define|#
directive|define
name|GL_NV_path_rendering
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLuint
name|APIENTRY
name|glGenPathsNV
parameter_list|(
name|GLsizei
name|range
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glDeletePathsNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|range
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsPathNV
parameter_list|(
name|GLuint
name|path
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathCommandsNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|numCommands
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|commands
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathCoordsNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathSubCommandsNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|commandStart
parameter_list|,
name|GLsizei
name|commandsToDelete
parameter_list|,
name|GLsizei
name|numCommands
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|commands
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathSubCoordsNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|coordStart
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathStringNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pathString
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathGlyphsNV
parameter_list|(
name|GLuint
name|firstPathName
parameter_list|,
name|GLenum
name|fontTarget
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|fontName
parameter_list|,
name|GLbitfield
name|fontStyle
parameter_list|,
name|GLsizei
name|numGlyphs
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|charcodes
parameter_list|,
name|GLenum
name|handleMissingGlyphs
parameter_list|,
name|GLuint
name|pathParameterTemplate
parameter_list|,
name|GLfloat
name|emScale
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathGlyphRangeNV
parameter_list|(
name|GLuint
name|firstPathName
parameter_list|,
name|GLenum
name|fontTarget
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|fontName
parameter_list|,
name|GLbitfield
name|fontStyle
parameter_list|,
name|GLuint
name|firstGlyph
parameter_list|,
name|GLsizei
name|numGlyphs
parameter_list|,
name|GLenum
name|handleMissingGlyphs
parameter_list|,
name|GLuint
name|pathParameterTemplate
parameter_list|,
name|GLfloat
name|emScale
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glWeightPathsNV
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|paths
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCopyPathNV
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLuint
name|srcPath
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glInterpolatePathsNV
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLuint
name|pathA
parameter_list|,
name|GLuint
name|pathB
parameter_list|,
name|GLfloat
name|weight
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glTransformPathNV
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLuint
name|srcPath
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathParameterivNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathParameteriNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathParameterfvNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathParameterfNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathDashArrayNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|dashCount
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|dashArray
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathStencilFuncNV
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathStencilDepthOffsetNV
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|units
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilFillPathNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|fillMode
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilStrokePathNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLint
name|reference
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilFillPathInstancedNV
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLenum
name|fillMode
parameter_list|,
name|GLuint
name|mask
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glStencilStrokePathInstancedNV
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLint
name|reference
parameter_list|,
name|GLuint
name|mask
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathCoverDepthFuncNV
parameter_list|(
name|GLenum
name|func
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathColorGenNV
parameter_list|(
name|GLenum
name|color
parameter_list|,
name|GLenum
name|genMode
parameter_list|,
name|GLenum
name|colorFormat
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coeffs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathTexGenNV
parameter_list|(
name|GLenum
name|texCoordSet
parameter_list|,
name|GLenum
name|genMode
parameter_list|,
name|GLint
name|components
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coeffs
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glPathFogGenNV
parameter_list|(
name|GLenum
name|genMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCoverFillPathNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|coverMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCoverStrokePathNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|coverMode
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCoverFillPathInstancedNV
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLenum
name|coverMode
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glCoverStrokePathInstancedNV
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLenum
name|coverMode
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathParameterivNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathParameterfvNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathCommandsNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLubyte
modifier|*
name|commands
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathCoordsNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathDashArrayNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLfloat
modifier|*
name|dashArray
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathMetricsNV
parameter_list|(
name|GLbitfield
name|metricQueryMask
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLfloat
modifier|*
name|metrics
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathMetricRangeNV
parameter_list|(
name|GLbitfield
name|metricQueryMask
parameter_list|,
name|GLuint
name|firstPathName
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLfloat
modifier|*
name|metrics
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathSpacingNV
parameter_list|(
name|GLenum
name|pathListMode
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLfloat
name|advanceScale
parameter_list|,
name|GLfloat
name|kerningScale
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
name|GLfloat
modifier|*
name|returnedSpacing
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathColorGenivNV
parameter_list|(
name|GLenum
name|color
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathColorGenfvNV
parameter_list|(
name|GLenum
name|color
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathTexGenivNV
parameter_list|(
name|GLenum
name|texCoordSet
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glGetPathTexGenfvNV
parameter_list|(
name|GLenum
name|texCoordSet
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsPointInFillPathNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLuint
name|mask
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsPointInStrokePathNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
name|GLAPI
name|GLfloat
name|APIENTRY
name|glGetPathLengthNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|startSegment
parameter_list|,
name|GLsizei
name|numSegments
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glPointAlongPathNV
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|startSegment
parameter_list|,
name|GLsizei
name|numSegments
parameter_list|,
name|GLfloat
name|distance
parameter_list|,
name|GLfloat
modifier|*
name|x
parameter_list|,
name|GLfloat
modifier|*
name|y
parameter_list|,
name|GLfloat
modifier|*
name|tangentX
parameter_list|,
name|GLfloat
modifier|*
name|tangentY
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGENPATHSNVPROC
typedef|typedef
name|GLuint
function_decl|(
name|APIENTRYP
name|PFNGLGENPATHSNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|range
parameter_list|)
function_decl|;
DECL|typedef|PFNGLDELETEPATHSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLDELETEPATHSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|range
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPATHNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHCOMMANDSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHCOMMANDSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|numCommands
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|commands
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHCOORDSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHCOORDSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHSUBCOMMANDSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHSUBCOMMANDSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|commandStart
parameter_list|,
name|GLsizei
name|commandsToDelete
parameter_list|,
name|GLsizei
name|numCommands
parameter_list|,
specifier|const
name|GLubyte
modifier|*
name|commands
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHSUBCOORDSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHSUBCOORDSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|coordStart
parameter_list|,
name|GLsizei
name|numCoords
parameter_list|,
name|GLenum
name|coordType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHSTRINGNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHSTRINGNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|format
parameter_list|,
name|GLsizei
name|length
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|pathString
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHGLYPHSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHGLYPHSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|firstPathName
parameter_list|,
name|GLenum
name|fontTarget
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|fontName
parameter_list|,
name|GLbitfield
name|fontStyle
parameter_list|,
name|GLsizei
name|numGlyphs
parameter_list|,
name|GLenum
name|type
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|charcodes
parameter_list|,
name|GLenum
name|handleMissingGlyphs
parameter_list|,
name|GLuint
name|pathParameterTemplate
parameter_list|,
name|GLfloat
name|emScale
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHGLYPHRANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHGLYPHRANGENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|firstPathName
parameter_list|,
name|GLenum
name|fontTarget
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|fontName
parameter_list|,
name|GLbitfield
name|fontStyle
parameter_list|,
name|GLuint
name|firstGlyph
parameter_list|,
name|GLsizei
name|numGlyphs
parameter_list|,
name|GLenum
name|handleMissingGlyphs
parameter_list|,
name|GLuint
name|pathParameterTemplate
parameter_list|,
name|GLfloat
name|emScale
parameter_list|)
function_decl|;
DECL|typedef|PFNGLWEIGHTPATHSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLWEIGHTPATHSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
specifier|const
name|GLuint
modifier|*
name|paths
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|weights
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOPYPATHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOPYPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLuint
name|srcPath
parameter_list|)
function_decl|;
DECL|typedef|PFNGLINTERPOLATEPATHSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLINTERPOLATEPATHSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLuint
name|pathA
parameter_list|,
name|GLuint
name|pathB
parameter_list|,
name|GLfloat
name|weight
parameter_list|)
function_decl|;
DECL|typedef|PFNGLTRANSFORMPATHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLTRANSFORMPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|resultPath
parameter_list|,
name|GLuint
name|srcPath
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHPARAMETERINVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHPARAMETERINVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHPARAMETERFNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHPARAMETERFNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHDASHARRAYNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHDASHARRAYNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|dashCount
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|dashArray
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHSTENCILFUNCNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHSTENCILFUNCNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|,
name|GLint
name|ref
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHSTENCILDEPTHOFFSETNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHSTENCILDEPTHOFFSETNVPROC
function_decl|)
parameter_list|(
name|GLfloat
name|factor
parameter_list|,
name|GLfloat
name|units
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILFILLPATHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILFILLPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|fillMode
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILSTROKEPATHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILSTROKEPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLint
name|reference
parameter_list|,
name|GLuint
name|mask
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILFILLPATHINSTANCEDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILFILLPATHINSTANCEDNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLenum
name|fillMode
parameter_list|,
name|GLuint
name|mask
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
DECL|typedef|PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLint
name|reference
parameter_list|,
name|GLuint
name|mask
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHCOVERDEPTHFUNCNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHCOVERDEPTHFUNCNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|func
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHCOLORGENNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHCOLORGENNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|color
parameter_list|,
name|GLenum
name|genMode
parameter_list|,
name|GLenum
name|colorFormat
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coeffs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHTEXGENNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHTEXGENNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|texCoordSet
parameter_list|,
name|GLenum
name|genMode
parameter_list|,
name|GLint
name|components
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|coeffs
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPATHFOGGENNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPATHFOGGENNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|genMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOVERFILLPATHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOVERFILLPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|coverMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOVERSTROKEPATHNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOVERSTROKEPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|coverMode
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOVERFILLPATHINSTANCEDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOVERFILLPATHINSTANCEDNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLenum
name|coverMode
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
DECL|typedef|PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
function_decl|)
parameter_list|(
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLenum
name|coverMode
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
specifier|const
name|GLfloat
modifier|*
name|transformValues
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHPARAMETERIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHPARAMETERIVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHPARAMETERFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHPARAMETERFVNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHCOMMANDSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHCOMMANDSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLubyte
modifier|*
name|commands
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHCOORDSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHCOORDSNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLfloat
modifier|*
name|coords
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHDASHARRAYNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHDASHARRAYNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLfloat
modifier|*
name|dashArray
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHMETRICSNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHMETRICSNVPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|metricQueryMask
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLfloat
modifier|*
name|metrics
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHMETRICRANGENVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHMETRICRANGENVPROC
function_decl|)
parameter_list|(
name|GLbitfield
name|metricQueryMask
parameter_list|,
name|GLuint
name|firstPathName
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
name|GLsizei
name|stride
parameter_list|,
name|GLfloat
modifier|*
name|metrics
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHSPACINGNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHSPACINGNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|pathListMode
parameter_list|,
name|GLsizei
name|numPaths
parameter_list|,
name|GLenum
name|pathNameType
parameter_list|,
specifier|const
name|GLvoid
modifier|*
name|paths
parameter_list|,
name|GLuint
name|pathBase
parameter_list|,
name|GLfloat
name|advanceScale
parameter_list|,
name|GLfloat
name|kerningScale
parameter_list|,
name|GLenum
name|transformType
parameter_list|,
name|GLfloat
modifier|*
name|returnedSpacing
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHCOLORGENIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHCOLORGENIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|color
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHCOLORGENFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHCOLORGENFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|color
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHTEXGENIVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHTEXGENIVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|texCoordSet
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLint
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHTEXGENFVNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHTEXGENFVNVPROC
function_decl|)
parameter_list|(
name|GLenum
name|texCoordSet
parameter_list|,
name|GLenum
name|pname
parameter_list|,
name|GLfloat
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPOINTINFILLPATHNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISPOINTINFILLPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLuint
name|mask
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISPOINTINSTROKEPATHNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISPOINTINSTROKEPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLfloat
name|x
parameter_list|,
name|GLfloat
name|y
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETPATHLENGTHNVPROC
typedef|typedef
name|GLfloat
function_decl|(
name|APIENTRYP
name|PFNGLGETPATHLENGTHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|startSegment
parameter_list|,
name|GLsizei
name|numSegments
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPOINTALONGPATHNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLPOINTALONGPATHNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|path
parameter_list|,
name|GLsizei
name|startSegment
parameter_list|,
name|GLsizei
name|numSegments
parameter_list|,
name|GLfloat
name|distance
parameter_list|,
name|GLfloat
modifier|*
name|x
parameter_list|,
name|GLfloat
modifier|*
name|y
parameter_list|,
name|GLfloat
modifier|*
name|tangentX
parameter_list|,
name|GLfloat
modifier|*
name|tangentY
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_pinned_memory
DECL|macro|GL_AMD_pinned_memory
define|#
directive|define
name|GL_AMD_pinned_memory
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_stencil_operation_extended
DECL|macro|GL_AMD_stencil_operation_extended
define|#
directive|define
name|GL_AMD_stencil_operation_extended
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|void
name|APIENTRY
name|glStencilOpValueAMD
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLSTENCILOPVALUEAMDPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLSTENCILOPVALUEAMDPROC
function_decl|)
parameter_list|(
name|GLenum
name|face
parameter_list|,
name|GLuint
name|value
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_vertex_shader_viewport_index
DECL|macro|GL_AMD_vertex_shader_viewport_index
define|#
directive|define
name|GL_AMD_vertex_shader_viewport_index
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_vertex_shader_layer
DECL|macro|GL_AMD_vertex_shader_layer
define|#
directive|define
name|GL_AMD_vertex_shader_layer
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_bindless_texture
DECL|macro|GL_NV_bindless_texture
define|#
directive|define
name|GL_NV_bindless_texture
value|1
ifdef|#
directive|ifdef
name|GL_GLEXT_PROTOTYPES
name|GLAPI
name|GLuint64
name|APIENTRY
name|glGetTextureHandleNV
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint64
name|APIENTRY
name|glGetTextureSamplerHandleNV
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLuint
name|sampler
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMakeTextureHandleResidentNV
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMakeTextureHandleNonResidentNV
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
name|GLAPI
name|GLuint64
name|APIENTRY
name|glGetImageHandleNV
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLboolean
name|layered
parameter_list|,
name|GLint
name|layer
parameter_list|,
name|GLenum
name|format
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMakeImageHandleResidentNV
parameter_list|(
name|GLuint64
name|handle
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glMakeImageHandleNonResidentNV
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformHandleui64NV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glUniformHandleui64vNV
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64
modifier|*
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformHandleui64NV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64
name|value
parameter_list|)
function_decl|;
name|GLAPI
name|void
name|APIENTRY
name|glProgramUniformHandleui64vNV
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64
modifier|*
name|values
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsTextureHandleResidentNV
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
name|GLAPI
name|GLboolean
name|APIENTRY
name|glIsImageHandleResidentNV
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
endif|#
directive|endif
comment|/* GL_GLEXT_PROTOTYPES */
DECL|typedef|PFNGLGETTEXTUREHANDLENVPROC
typedef|typedef
name|GLuint64
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTUREHANDLENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETTEXTURESAMPLERHANDLENVPROC
typedef|typedef
name|GLuint64
function_decl|(
name|APIENTRYP
name|PFNGLGETTEXTURESAMPLERHANDLENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLuint
name|sampler
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLGETIMAGEHANDLENVPROC
typedef|typedef
name|GLuint64
function_decl|(
name|APIENTRYP
name|PFNGLGETIMAGEHANDLENVPROC
function_decl|)
parameter_list|(
name|GLuint
name|texture
parameter_list|,
name|GLint
name|level
parameter_list|,
name|GLboolean
name|layered
parameter_list|,
name|GLint
name|layer
parameter_list|,
name|GLenum
name|format
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint64
name|handle
parameter_list|,
name|GLenum
name|access
parameter_list|)
function_decl|;
DECL|typedef|PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMHANDLEUI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMHANDLEUI64NVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLuint64
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLUNIFORMHANDLEUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLUNIFORMHANDLEUI64VNVPROC
function_decl|)
parameter_list|(
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64
modifier|*
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLuint64
name|value
parameter_list|)
function_decl|;
DECL|typedef|PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
typedef|typedef
name|void
function_decl|(
name|APIENTRYP
name|PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
function_decl|)
parameter_list|(
name|GLuint
name|program
parameter_list|,
name|GLint
name|location
parameter_list|,
name|GLsizei
name|count
parameter_list|,
specifier|const
name|GLuint64
modifier|*
name|values
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISTEXTUREHANDLERESIDENTNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISTEXTUREHANDLERESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
DECL|typedef|PFNGLISIMAGEHANDLERESIDENTNVPROC
typedef|typedef
name|GLboolean
function_decl|(
name|APIENTRYP
name|PFNGLISIMAGEHANDLERESIDENTNVPROC
function_decl|)
parameter_list|(
name|GLuint64
name|handle
parameter_list|)
function_decl|;
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_NV_shader_atomic_float
DECL|macro|GL_NV_shader_atomic_float
define|#
directive|define
name|GL_NV_shader_atomic_float
value|1
endif|#
directive|endif
ifndef|#
directive|ifndef
name|GL_AMD_query_buffer_object
DECL|macro|GL_AMD_query_buffer_object
define|#
directive|define
name|GL_AMD_query_buffer_object
value|1
endif|#
directive|endif
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern
begin_endif
endif|#
directive|endif
end_endif
begin_endif
endif|#
directive|endif
end_endif
end_unit
