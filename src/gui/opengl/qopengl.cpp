begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 The Qt Company Ltd. ** Contact: http://www.qt.io/licensing/ ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see http://www.qt.io/terms-conditions. For further ** information use the contact form at http://www.qt.io/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** As a special exception, The Qt Company gives you certain additional ** rights. These rights are described in The Qt Company LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ****************************************************************************/
end_comment
begin_include
include|#
directive|include
file|"qopengl.h"
end_include
begin_include
include|#
directive|include
file|"qopengl_p.h"
end_include
begin_include
include|#
directive|include
file|"qopenglcontext.h"
end_include
begin_include
include|#
directive|include
file|"qopenglfunctions.h"
end_include
begin_macro
name|QT_BEGIN_NAMESPACE
end_macro
begin_if
if|#
directive|if
name|defined
argument_list|(
name|QT_OPENGL_3
argument_list|)
end_if
begin_typedef
DECL|typedef|qt_glGetStringi
typedef|typedef
specifier|const
name|GLubyte
modifier|*
function_decl|(
name|QOPENGLF_APIENTRYP
name|qt_glGetStringi
function_decl|)
parameter_list|(
name|GLenum
parameter_list|,
name|GLuint
parameter_list|)
function_decl|;
end_typedef
begin_endif
endif|#
directive|endif
end_endif
begin_constructor
DECL|function|QOpenGLExtensionMatcher
name|QOpenGLExtensionMatcher
operator|::
name|QOpenGLExtensionMatcher
parameter_list|()
block|{
name|QOpenGLContext
modifier|*
name|ctx
init|=
name|QOpenGLContext
operator|::
name|currentContext
argument_list|()
decl_stmt|;
name|QOpenGLFunctions
modifier|*
name|funcs
init|=
name|ctx
operator|->
name|functions
argument_list|()
decl_stmt|;
specifier|const
name|char
modifier|*
name|extensionStr
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|ctx
operator|->
name|isOpenGLES
argument_list|()
operator|||
name|ctx
operator|->
name|format
argument_list|()
operator|.
name|majorVersion
argument_list|()
operator|<
literal|3
condition|)
name|extensionStr
operator|=
cast|reinterpret_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|funcs
operator|->
name|glGetString
argument_list|(
name|GL_EXTENSIONS
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|extensionStr
condition|)
block|{
name|QByteArray
name|ba
argument_list|(
name|extensionStr
argument_list|)
decl_stmt|;
name|QList
argument_list|<
name|QByteArray
argument_list|>
name|extensions
init|=
name|ba
operator|.
name|split
argument_list|(
literal|' '
argument_list|)
decl_stmt|;
name|m_extensions
operator|=
name|extensions
operator|.
name|toSet
argument_list|()
expr_stmt|;
block|}
else|else
block|{
ifdef|#
directive|ifdef
name|QT_OPENGL_3
comment|// clear error state
while|while
condition|(
name|funcs
operator|->
name|glGetError
argument_list|()
condition|)
block|{}
if|if
condition|(
name|ctx
condition|)
block|{
name|qt_glGetStringi
name|glGetStringi
init|=
operator|(
name|qt_glGetStringi
operator|)
name|ctx
operator|->
name|getProcAddress
argument_list|(
literal|"glGetStringi"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|glGetStringi
condition|)
return|return;
name|GLint
name|numExtensions
decl_stmt|;
name|funcs
operator|->
name|glGetIntegerv
argument_list|(
name|GL_NUM_EXTENSIONS
argument_list|,
operator|&
name|numExtensions
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numExtensions
condition|;
operator|++
name|i
control|)
block|{
specifier|const
name|char
modifier|*
name|str
init|=
cast|reinterpret_cast
argument_list|<
specifier|const
name|char
operator|*
argument_list|>
argument_list|(
name|glGetStringi
argument_list|(
name|GL_EXTENSIONS
argument_list|,
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|m_extensions
operator|.
name|insert
argument_list|(
name|str
argument_list|)
expr_stmt|;
block|}
block|}
endif|#
directive|endif
comment|// QT_OPENGL_3
block|}
block|}
end_constructor
begin_macro
name|QT_END_NAMESPACE
end_macro
end_unit
