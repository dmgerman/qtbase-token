begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2015 Klaralvdalens Datakonsult AB (KDAB) ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtWidgets module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ** ** This file was generated by glgen version 0.1 ** Command line was: glgen ** ** glgen is Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** ** This is an auto-generated file. ** Do not edit! All changes made to it will be lost. ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGLVERSIONFUNCTIONS_4_5_COMPATIBILITY_H
end_ifndef
begin_define
DECL|macro|QOPENGLVERSIONFUNCTIONS_4_5_COMPATIBILITY_H
define|#
directive|define
name|QOPENGLVERSIONFUNCTIONS_4_5_COMPATIBILITY_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_OPENGL
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_include
include|#
directive|include
file|<QtGui/QOpenGLVersionFunctions>
end_include
begin_include
include|#
directive|include
file|<QtGui/qopenglcontext.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|Q_GUI_EXPORT
name|QOpenGLFunctions_4_5_Compatibility
range|:
name|public
name|QAbstractOpenGLFunctions
block|{
name|public
operator|:
name|QOpenGLFunctions_4_5_Compatibility
argument_list|()
block|;
operator|~
name|QOpenGLFunctions_4_5_Compatibility
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_OVERRIDE
block|;
comment|// OpenGL 1.0 core functions
name|void
name|glViewport
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glDepthRange
argument_list|(
argument|GLdouble nearVal
argument_list|,
argument|GLdouble farVal
argument_list|)
block|;
name|GLboolean
name|glIsEnabled
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glGetTexLevelParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexLevelParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *pixels
argument_list|)
block|;
specifier|const
name|GLubyte
operator|*
name|glGetString
argument_list|(
argument|GLenum name
argument_list|)
block|;
name|void
name|glGetIntegerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *data
argument_list|)
block|;
name|void
name|glGetFloatv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *data
argument_list|)
block|;
name|GLenum
name|glGetError
argument_list|()
block|;
name|void
name|glGetDoublev
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *data
argument_list|)
block|;
name|void
name|glGetBooleanv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLboolean *data
argument_list|)
block|;
name|void
name|glReadPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *pixels
argument_list|)
block|;
name|void
name|glReadBuffer
argument_list|(
argument|GLenum src
argument_list|)
block|;
name|void
name|glPixelStorei
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPixelStoref
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glDepthFunc
argument_list|(
argument|GLenum func
argument_list|)
block|;
name|void
name|glStencilOp
argument_list|(
argument|GLenum fail
argument_list|,
argument|GLenum zfail
argument_list|,
argument|GLenum zpass
argument_list|)
block|;
name|void
name|glStencilFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glLogicOp
argument_list|(
argument|GLenum opcode
argument_list|)
block|;
name|void
name|glBlendFunc
argument_list|(
argument|GLenum sfactor
argument_list|,
argument|GLenum dfactor
argument_list|)
block|;
name|void
name|glFlush
argument_list|()
block|;
name|void
name|glFinish
argument_list|()
block|;
name|void
name|glEnable
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glDisable
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glDepthMask
argument_list|(
argument|GLboolean flag
argument_list|)
block|;
name|void
name|glColorMask
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|;
name|void
name|glStencilMask
argument_list|(
argument|GLuint mask
argument_list|)
block|;
name|void
name|glClearDepth
argument_list|(
argument|GLdouble depth
argument_list|)
block|;
name|void
name|glClearStencil
argument_list|(
argument|GLint s
argument_list|)
block|;
name|void
name|glClearColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glClear
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glDrawBuffer
argument_list|(
argument|GLenum buf
argument_list|)
block|;
name|void
name|glTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTexParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTexParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glScissor
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glPolygonMode
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glPointSize
argument_list|(
argument|GLfloat size
argument_list|)
block|;
name|void
name|glLineWidth
argument_list|(
argument|GLfloat width
argument_list|)
block|;
name|void
name|glHint
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glFrontFace
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glCullFace
argument_list|(
argument|GLenum mode
argument_list|)
block|;
comment|// OpenGL 1.1 core functions
name|GLboolean
name|glIsTexture
argument_list|(
argument|GLuint texture
argument_list|)
block|;
name|void
name|glGenTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|;
name|void
name|glDeleteTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|;
name|void
name|glBindTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|;
name|void
name|glTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glCopyTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCopyTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glCopyTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glPolygonOffset
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|;
name|void
name|glDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|)
block|;
name|void
name|glDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|;
comment|// OpenGL 1.2 core functions
name|void
name|glBlendColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glBlendEquation
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glCopyTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glDrawRangeElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|)
block|;
comment|// OpenGL 1.3 core functions
name|void
name|glGetCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|void *img
argument_list|)
block|;
name|void
name|glCompressedTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCompressedTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCompressedTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCompressedTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glSampleCoverage
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|;
name|void
name|glActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|;
comment|// OpenGL 1.4 core functions
name|void
name|glPointParameteriv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glPointParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPointParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPointParameterf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glMultiDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|;
name|void
name|glMultiDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|;
name|void
name|glBlendFuncSeparate
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|;
comment|// OpenGL 1.5 core functions
name|void
name|glGetBufferPointerv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|void * *params
argument_list|)
block|;
name|void
name|glGetBufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLboolean
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
operator|*
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|void
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|void *data
argument_list|)
block|;
name|void
name|glBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const void *data
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|GLboolean
name|glIsBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGenBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|;
name|void
name|glDeleteBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|;
name|void
name|glBindBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGetQueryObjectuiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetQueryObjectiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetQueryiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndQuery
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glBeginQuery
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|GLboolean
name|glIsQuery
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glDeleteQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glGenQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
comment|// OpenGL 2.0 core functions
name|void
name|glVertexAttribPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glVertexAttrib4usv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4ubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glVertexAttrib4iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib4f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glVertexAttrib4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexAttrib4bv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nusv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nub
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|;
name|void
name|glVertexAttrib4Nsv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Niv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nbv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib3sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib3s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glVertexAttrib3fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib3f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glVertexAttrib3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexAttrib2sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib2s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glVertexAttrib2fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib2f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glVertexAttrib2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexAttrib1sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib1s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|;
name|void
name|glVertexAttrib1fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib1f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|;
name|void
name|glVertexAttrib1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|void
name|glValidateProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glUniformMatrix4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform3iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform2iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform1iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform1fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|;
name|void
name|glUniform3i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|;
name|void
name|glUniform2i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|;
name|void
name|glUniform1i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|;
name|void
name|glUniform4f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|;
name|void
name|glUniform3f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glUniform2f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|;
name|void
name|glUniform1f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|;
name|void
name|glUseProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *string
argument_list|,
argument|const GLint *length
argument_list|)
block|;
name|void
name|glLinkProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|GLboolean
name|glIsShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|GLboolean
name|glIsProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glGetVertexAttribPointerv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|void * *pointer
argument_list|)
block|;
name|void
name|glGetVertexAttribiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribfv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetVertexAttribdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|GLint
name|glGetUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|;
name|void
name|glGetShaderInfoLog
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glGetShaderiv
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramInfoLog
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glGetProgramiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLint
name|glGetAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetAttachedShaders
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLuint *shaders
argument_list|)
block|;
name|void
name|glGetActiveUniform
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glGetActiveAttrib
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glEnableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glDisableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glDetachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|;
name|void
name|glDeleteShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|void
name|glDeleteProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|GLuint
name|glCreateShader
argument_list|(
argument|GLenum type
argument_list|)
block|;
name|GLuint
name|glCreateProgram
argument_list|()
block|;
name|void
name|glCompileShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|void
name|glBindAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glAttachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|;
name|void
name|glStencilMaskSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilFuncSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilOpSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|;
name|void
name|glDrawBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|void
name|glBlendEquationSeparate
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|;
comment|// OpenGL 2.1 core functions
name|void
name|glUniformMatrix4x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix4x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
comment|// OpenGL 3.0 core functions
name|GLboolean
name|glIsVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|void
name|glGenVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|;
name|void
name|glDeleteVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|;
name|void
name|glBindVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|void
name|glFlushMappedBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|;
name|void
operator|*
name|glMapBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|;
name|void
name|glFramebufferTextureLayer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|;
name|void
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|;
name|void
name|glGenerateMipmap
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetFramebufferAttachmentParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFramebufferRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glFramebufferTexture3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|;
name|void
name|glFramebufferTexture2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glFramebufferTexture1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|GLenum
name|glCheckFramebufferStatus
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGenFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|;
name|void
name|glDeleteFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|;
name|void
name|glBindFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|;
name|GLboolean
name|glIsFramebuffer
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|;
name|void
name|glGetRenderbufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glRenderbufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glGenRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glDeleteRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glBindRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|GLboolean
name|glIsRenderbuffer
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|;
specifier|const
name|GLubyte
operator|*
name|glGetStringi
argument_list|(
argument|GLenum name
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glClearBufferfi
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|GLfloat depth
argument_list|,
argument|GLint stencil
argument_list|)
block|;
name|void
name|glClearBufferfv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glClearBufferuiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glClearBufferiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glGetTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glUniform4uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform3uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform2uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform1uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform4ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|;
name|void
name|glUniform3ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|;
name|void
name|glUniform2ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|;
name|void
name|glUniform1ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|;
name|GLint
name|glGetFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glBindFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint color
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetUniformuiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glVertexAttribI4usv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttribI4ubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttribI4sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttribI4bv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttribI4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI3uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI2uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI1uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttribI4iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI3iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI2iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI1iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttribI4ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|;
name|void
name|glVertexAttribI3ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|)
block|;
name|void
name|glVertexAttribI2ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|)
block|;
name|void
name|glVertexAttribI1ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|)
block|;
name|void
name|glVertexAttribI4i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glVertexAttribI3i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glVertexAttribI2i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glVertexAttribI1i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|)
block|;
name|void
name|glGetVertexAttribIuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribIiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glVertexAttribIPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glEndConditionalRender
argument_list|()
block|;
name|void
name|glBeginConditionalRender
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glClampColor
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum clamp
argument_list|)
block|;
name|void
name|glGetTransformFeedbackVarying
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glTransformFeedbackVaryings
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *varyings
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|;
name|void
name|glBindBufferBase
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glBindBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glEndTransformFeedback
argument_list|()
block|;
name|void
name|glBeginTransformFeedback
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|;
name|GLboolean
name|glIsEnabledi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glDisablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glEnablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glGetIntegeri_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *data
argument_list|)
block|;
name|void
name|glGetBooleani_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLboolean *data
argument_list|)
block|;
name|void
name|glColorMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLboolean r
argument_list|,
argument|GLboolean g
argument_list|,
argument|GLboolean b
argument_list|,
argument|GLboolean a
argument_list|)
block|;
comment|// OpenGL 3.1 core functions
name|void
name|glUniformBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLuint uniformBlockBinding
argument_list|)
block|;
name|void
name|glGetActiveUniformBlockName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformBlockName
argument_list|)
block|;
name|void
name|glGetActiveUniformBlockiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLuint
name|glGetUniformBlockIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *uniformBlockName
argument_list|)
block|;
name|void
name|glGetActiveUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformName
argument_list|)
block|;
name|void
name|glGetActiveUniformsiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLuint *uniformIndices
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetUniformIndices
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLchar *const *uniformNames
argument_list|,
argument|GLuint *uniformIndices
argument_list|)
block|;
name|void
name|glCopyBufferSubData
argument_list|(
argument|GLenum readTarget
argument_list|,
argument|GLenum writeTarget
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glPrimitiveRestartIndex
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glTexBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glDrawElementsInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
name|void
name|glDrawArraysInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
comment|// OpenGL 3.2 core functions
name|void
name|glSampleMaski
argument_list|(
argument|GLuint maskNumber
argument_list|,
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glGetMultisamplefv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|;
name|void
name|glTexImage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTexImage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glFramebufferTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glGetBufferParameteri64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glGetInteger64i_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint64 *data
argument_list|)
block|;
name|void
name|glGetSynciv
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|void
name|glGetInteger64v
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint64 *data
argument_list|)
block|;
name|void
name|glWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|;
name|GLenum
name|glClientWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|;
name|void
name|glDeleteSync
argument_list|(
argument|GLsync sync
argument_list|)
block|;
name|GLboolean
name|glIsSync
argument_list|(
argument|GLsync sync
argument_list|)
block|;
name|GLsync
name|glFenceSync
argument_list|(
argument|GLenum condition
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
name|void
name|glProvokingVertex
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glMultiDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|const GLint *basevertex
argument_list|)
block|;
name|void
name|glDrawElementsInstancedBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|void
name|glDrawRangeElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|void
name|glDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
comment|// OpenGL 3.3 core functions
name|void
name|glVertexAttribP4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP4ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexAttribP3uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP3ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexAttribP2uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP2ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexAttribP1uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexAttribP1ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexAttribDivisor
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint divisor
argument_list|)
block|;
name|void
name|glGetQueryObjectui64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64 *params
argument_list|)
block|;
name|void
name|glGetQueryObjecti64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glQueryCounter
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *param
argument_list|)
block|;
name|void
name|glSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|;
name|void
name|glSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|;
name|void
name|glSamplerParameterf
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|;
name|void
name|glSamplerParameteri
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glBindSampler
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint sampler
argument_list|)
block|;
name|GLboolean
name|glIsSampler
argument_list|(
argument|GLuint sampler
argument_list|)
block|;
name|void
name|glDeleteSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *samplers
argument_list|)
block|;
name|void
name|glGenSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|GLuint *samplers
argument_list|)
block|;
name|GLint
name|glGetFragDataIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glBindFragDataLocationIndexed
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint colorNumber
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
comment|// OpenGL 4.0 core functions
name|void
name|glGetQueryIndexediv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glBeginQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|void
name|glDrawTransformFeedbackStream
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|)
block|;
name|void
name|glDrawTransformFeedback
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|void
name|glResumeTransformFeedback
argument_list|()
block|;
name|void
name|glPauseTransformFeedback
argument_list|()
block|;
name|GLboolean
name|glIsTransformFeedback
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glGenTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|void
name|glDeleteTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glBindTransformFeedback
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|void
name|glPatchParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *values
argument_list|)
block|;
name|void
name|glPatchParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|void
name|glGetProgramStageiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|void
name|glGetUniformSubroutineuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glUniformSubroutinesuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *indices
argument_list|)
block|;
name|void
name|glGetActiveSubroutineName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glGetActiveSubroutineUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glGetActiveSubroutineUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|GLuint
name|glGetSubroutineIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|GLint
name|glGetSubroutineUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetUniformdv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glUniformMatrix4x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix4x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniformMatrix2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform1dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glUniform4d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glUniform3d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glUniform2d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glUniform1d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|void
name|glDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indirect
argument_list|)
block|;
name|void
name|glDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const void *indirect
argument_list|)
block|;
name|void
name|glBlendFuncSeparatei
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum srcRGB
argument_list|,
argument|GLenum dstRGB
argument_list|,
argument|GLenum srcAlpha
argument_list|,
argument|GLenum dstAlpha
argument_list|)
block|;
name|void
name|glBlendFunci
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum src
argument_list|,
argument|GLenum dst
argument_list|)
block|;
name|void
name|glBlendEquationSeparatei
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|;
name|void
name|glBlendEquationi
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glMinSampleShading
argument_list|(
argument|GLfloat value
argument_list|)
block|;
comment|// OpenGL 4.1 core functions
name|void
name|glGetDoublei_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *data
argument_list|)
block|;
name|void
name|glGetFloati_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *data
argument_list|)
block|;
name|void
name|glDepthRangeIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble n
argument_list|,
argument|GLdouble f
argument_list|)
block|;
name|void
name|glDepthRangeArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glScissorIndexedv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glScissorIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint left
argument_list|,
argument|GLint bottom
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glScissorArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glViewportIndexedfv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glViewportIndexedf
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat w
argument_list|,
argument|GLfloat h
argument_list|)
block|;
name|void
name|glViewportArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glGetVertexAttribLdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glVertexAttribLPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glVertexAttribL4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttribL4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexAttribL3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexAttribL2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexAttribL1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|;
name|void
name|glGetProgramPipelineInfoLog
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glValidateProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniformMatrix2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform4uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform4ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|;
name|void
name|glProgramUniform4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform4d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLdouble v3
argument_list|)
block|;
name|void
name|glProgramUniform4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform4f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|;
name|void
name|glProgramUniform4iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform4i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|;
name|void
name|glProgramUniform3uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform3ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|;
name|void
name|glProgramUniform3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform3d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|;
name|void
name|glProgramUniform3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform3f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glProgramUniform3iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform3i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|;
name|void
name|glProgramUniform2uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform2ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|;
name|void
name|glProgramUniform2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform2d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|)
block|;
name|void
name|glProgramUniform2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform2f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|;
name|void
name|glProgramUniform2iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform2i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|;
name|void
name|glProgramUniform1uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glProgramUniform1ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|;
name|void
name|glProgramUniform1dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|;
name|void
name|glProgramUniform1d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|)
block|;
name|void
name|glProgramUniform1fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glProgramUniform1f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|;
name|void
name|glProgramUniform1iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glProgramUniform1i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|;
name|void
name|glGetProgramPipelineiv
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLboolean
name|glIsProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|void
name|glGenProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|;
name|void
name|glDeleteProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *pipelines
argument_list|)
block|;
name|void
name|glBindProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|;
name|GLuint
name|glCreateShaderProgramv
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *strings
argument_list|)
block|;
name|void
name|glActiveShaderProgram
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|void
name|glUseProgramStages
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLbitfield stages
argument_list|,
argument|GLuint program
argument_list|)
block|;
name|void
name|glProgramParameteri
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|;
name|void
name|glProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum binaryFormat
argument_list|,
argument|const void *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|;
name|void
name|glGetProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLenum *binaryFormat
argument_list|,
argument|void *binary
argument_list|)
block|;
name|void
name|glClearDepthf
argument_list|(
argument|GLfloat dd
argument_list|)
block|;
name|void
name|glDepthRangef
argument_list|(
argument|GLfloat n
argument_list|,
argument|GLfloat f
argument_list|)
block|;
name|void
name|glGetShaderPrecisionFormat
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLenum precisiontype
argument_list|,
argument|GLint *range
argument_list|,
argument|GLint *precision
argument_list|)
block|;
name|void
name|glShaderBinary
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *shaders
argument_list|,
argument|GLenum binaryformat
argument_list|,
argument|const void *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|;
name|void
name|glReleaseShaderCompiler
argument_list|()
block|;
comment|// OpenGL 4.2 core functions
name|void
name|glDrawTransformFeedbackStreamInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
name|void
name|glDrawTransformFeedbackInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
name|void
name|glTexStorage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|void
name|glTexStorage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTexStorage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glMemoryBarrier
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|;
name|void
name|glBindImageTexture
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum access
argument_list|,
argument|GLenum format
argument_list|)
block|;
name|void
name|glGetActiveAtomicCounterBufferiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint bufferIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetInternalformativ
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glDrawElementsInstancedBaseVertexBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|;
name|void
name|glDrawElementsInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|;
name|void
name|glDrawArraysInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|;
comment|// OpenGL 4.3 core functions
name|void
name|glGetObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|;
name|void
name|glObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|;
name|void
name|glGetObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|;
name|void
name|glObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|;
name|void
name|glPopDebugGroup
argument_list|()
block|;
name|void
name|glPushDebugGroup
argument_list|(
argument|GLenum source
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *message
argument_list|)
block|;
name|GLuint
name|glGetDebugMessageLog
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLenum *sources
argument_list|,
argument|GLenum *types
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLenum *severities
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *messageLog
argument_list|)
block|;
name|void
name|glDebugMessageCallback
argument_list|(
argument|GLDEBUGPROC callback
argument_list|,
argument|const void *userParam
argument_list|)
block|;
name|void
name|glDebugMessageInsert
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint id
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|;
name|void
name|glDebugMessageControl
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|;
name|void
name|glVertexBindingDivisor
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|;
name|void
name|glVertexAttribBinding
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|;
name|void
name|glVertexAttribLFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexAttribIFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexAttribFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glBindVertexBuffer
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glTextureView
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint origtexture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint minlevel
argument_list|,
argument|GLuint numlevels
argument_list|,
argument|GLuint minlayer
argument_list|,
argument|GLuint numlayers
argument_list|)
block|;
name|void
name|glTexStorage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTexStorage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTexBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glShaderStorageBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint storageBlockIndex
argument_list|,
argument|GLuint storageBlockBinding
argument_list|)
block|;
name|GLint
name|glGetProgramResourceLocationIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|GLint
name|glGetProgramResourceLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetProgramResourceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei propCount
argument_list|,
argument|const GLenum *props
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramResourceName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|GLuint
name|glGetProgramResourceIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetProgramInterfaceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glMultiDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glMultiDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glInvalidateSubFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glInvalidateFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|;
name|void
name|glInvalidateBufferData
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glInvalidateBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|;
name|void
name|glInvalidateTexImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glInvalidateTexSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|void
name|glGetInternalformati64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glGetFramebufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFramebufferParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glCopyImageSubData
argument_list|(
argument|GLuint srcName
argument_list|,
argument|GLenum srcTarget
argument_list|,
argument|GLint srcLevel
argument_list|,
argument|GLint srcX
argument_list|,
argument|GLint srcY
argument_list|,
argument|GLint srcZ
argument_list|,
argument|GLuint dstName
argument_list|,
argument|GLenum dstTarget
argument_list|,
argument|GLint dstLevel
argument_list|,
argument|GLint dstX
argument_list|,
argument|GLint dstY
argument_list|,
argument|GLint dstZ
argument_list|,
argument|GLsizei srcWidth
argument_list|,
argument|GLsizei srcHeight
argument_list|,
argument|GLsizei srcDepth
argument_list|)
block|;
name|void
name|glDispatchComputeIndirect
argument_list|(
argument|GLintptr indirect
argument_list|)
block|;
name|void
name|glDispatchCompute
argument_list|(
argument|GLuint num_groups_x
argument_list|,
argument|GLuint num_groups_y
argument_list|,
argument|GLuint num_groups_z
argument_list|)
block|;
name|void
name|glClearBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glClearBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
comment|// OpenGL 4.4 core functions
name|void
name|glBindVertexBuffers
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|,
argument|const GLintptr *offsets
argument_list|,
argument|const GLsizei *strides
argument_list|)
block|;
name|void
name|glBindImageTextures
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *textures
argument_list|)
block|;
name|void
name|glBindSamplers
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *samplers
argument_list|)
block|;
name|void
name|glBindTextures
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *textures
argument_list|)
block|;
name|void
name|glBindBuffersRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|,
argument|const GLintptr *offsets
argument_list|,
argument|const GLsizeiptr *sizes
argument_list|)
block|;
name|void
name|glBindBuffersBase
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|;
name|void
name|glClearTexSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glClearTexImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glBufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const void *data
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
comment|// OpenGL 4.5 core functions
name|void
name|glTextureBarrier
argument_list|()
block|;
name|void
name|glReadnPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *data
argument_list|)
block|;
name|void
name|glGetnUniformuiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetnUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetnUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetnUniformdv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetnTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|;
name|void
name|glGetnCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|;
name|GLenum
name|glGetGraphicsResetStatus
argument_list|()
block|;
name|void
name|glGetCompressedTextureSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|;
name|void
name|glGetTextureSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|;
name|void
name|glMemoryBarrierByRegion
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|;
name|void
name|glCreateQueries
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|void
name|glCreateProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|;
name|void
name|glCreateSamplers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *samplers
argument_list|)
block|;
name|void
name|glGetVertexArrayIndexed64iv
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *param
argument_list|)
block|;
name|void
name|glGetVertexArrayIndexediv
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|;
name|void
name|glGetVertexArrayiv
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|;
name|void
name|glVertexArrayBindingDivisor
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|;
name|void
name|glVertexArrayAttribLFormat
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexArrayAttribIFormat
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexArrayAttribFormat
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|;
name|void
name|glVertexArrayAttribBinding
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|;
name|void
name|glVertexArrayVertexBuffers
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|,
argument|const GLintptr *offsets
argument_list|,
argument|const GLsizei *strides
argument_list|)
block|;
name|void
name|glVertexArrayVertexBuffer
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|;
name|void
name|glVertexArrayElementBuffer
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glEnableVertexArrayAttrib
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glDisableVertexArrayAttrib
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glCreateVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|;
name|void
name|glGetTextureParameteriv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTextureParameterIuiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetTextureParameterIiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTextureParameterfv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTextureLevelParameteriv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTextureLevelParameterfv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetCompressedTextureImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|;
name|void
name|glGetTextureImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|;
name|void
name|glBindTextureUnit
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint texture
argument_list|)
block|;
name|void
name|glGenerateTextureMipmap
argument_list|(
argument|GLuint texture
argument_list|)
block|;
name|void
name|glTextureParameteriv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|;
name|void
name|glTextureParameterIuiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glTextureParameterIiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTextureParameteri
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTextureParameterfv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|;
name|void
name|glTextureParameterf
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glCopyTextureSubImage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTextureSubImage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTextureSubImage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCompressedTextureSubImage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCompressedTextureSubImage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCompressedTextureSubImage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glTextureSubImage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glTextureSubImage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glTextureSubImage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glTextureStorage3DMultisample
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTextureStorage2DMultisample
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTextureStorage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|;
name|void
name|glTextureStorage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTextureStorage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glTextureBufferRange
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|)
block|;
name|void
name|glTextureBuffer
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glCreateTextures
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|;
name|void
name|glGetNamedRenderbufferParameteriv
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glNamedRenderbufferStorageMultisample
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glNamedRenderbufferStorage
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCreateRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glGetNamedFramebufferAttachmentParameteriv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetNamedFramebufferParameteriv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|;
name|GLenum
name|glCheckNamedFramebufferStatus
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum target
argument_list|)
block|;
name|void
name|glBlitNamedFramebuffer
argument_list|(
argument|GLuint readFramebuffer
argument_list|,
argument|GLuint drawFramebuffer
argument_list|,
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|;
name|void
name|glClearNamedFramebufferfi
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLfloat depth
argument_list|,
argument|GLint stencil
argument_list|)
block|;
name|void
name|glClearNamedFramebufferfv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glClearNamedFramebufferuiv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glClearNamedFramebufferiv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glInvalidateNamedFramebufferSubData
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glInvalidateNamedFramebufferData
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|;
name|void
name|glNamedFramebufferReadBuffer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum src
argument_list|)
block|;
name|void
name|glNamedFramebufferDrawBuffers
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|void
name|glNamedFramebufferDrawBuffer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buf
argument_list|)
block|;
name|void
name|glNamedFramebufferTextureLayer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|;
name|void
name|glNamedFramebufferTexture
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glNamedFramebufferParameteri
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glNamedFramebufferRenderbuffer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glCreateFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|;
name|void
name|glGetNamedBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|void *data
argument_list|)
block|;
name|void
name|glGetNamedBufferPointerv
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|void * *params
argument_list|)
block|;
name|void
name|glGetNamedBufferParameteri64v
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glGetNamedBufferParameteriv
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFlushMappedNamedBufferRange
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei length
argument_list|)
block|;
name|GLboolean
name|glUnmapNamedBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
operator|*
name|glMapNamedBufferRange
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei length
argument_list|,
argument|GLbitfield access
argument_list|)
block|;
name|void
operator|*
name|glMapNamedBuffer
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|void
name|glClearNamedBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glClearNamedBufferData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCopyNamedBufferSubData
argument_list|(
argument|GLuint readBuffer
argument_list|,
argument|GLuint writeBuffer
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizei size
argument_list|)
block|;
name|void
name|glNamedBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glNamedBufferData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLsizei size
argument_list|,
argument|const void *data
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|void
name|glNamedBufferStorage
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLsizei size
argument_list|,
argument|const void *data
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
name|void
name|glCreateBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|;
name|void
name|glGetTransformFeedbacki64_v
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint64 *param
argument_list|)
block|;
name|void
name|glGetTransformFeedbacki_v
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *param
argument_list|)
block|;
name|void
name|glGetTransformFeedbackiv
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|;
name|void
name|glTransformFeedbackBufferRange
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|)
block|;
name|void
name|glTransformFeedbackBufferBase
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glCreateTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
name|void
name|glClipControl
argument_list|(
argument|GLenum origin
argument_list|,
argument|GLenum depth
argument_list|)
block|;
comment|// OpenGL 1.0 deprecated functions
name|void
name|glTranslatef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glTranslated
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glScalef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glScaled
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glRotatef
argument_list|(
argument|GLfloat angle
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glRotated
argument_list|(
argument|GLdouble angle
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glPushMatrix
argument_list|()
block|;
name|void
name|glPopMatrix
argument_list|()
block|;
name|void
name|glOrtho
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|;
name|void
name|glMultMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glMultMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glMatrixMode
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glLoadMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadIdentity
argument_list|()
block|;
name|void
name|glFrustum
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|;
name|GLboolean
name|glIsList
argument_list|(
argument|GLuint list
argument_list|)
block|;
name|void
name|glGetTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetPolygonStipple
argument_list|(
name|GLubyte
operator|*
name|mask
argument_list|)
block|;
name|void
name|glGetPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLushort *values
argument_list|)
block|;
name|void
name|glGetPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLuint *values
argument_list|)
block|;
name|void
name|glGetPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLfloat *values
argument_list|)
block|;
name|void
name|glGetMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMapiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLint *v
argument_list|)
block|;
name|void
name|glGetMapfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLfloat *v
argument_list|)
block|;
name|void
name|glGetMapdv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLdouble *v
argument_list|)
block|;
name|void
name|glGetLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|GLdouble *equation
argument_list|)
block|;
name|void
name|glDrawPixels
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|;
name|void
name|glCopyPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum type
argument_list|)
block|;
name|void
name|glPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei mapsize
argument_list|,
argument|const GLushort *values
argument_list|)
block|;
name|void
name|glPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei mapsize
argument_list|,
argument|const GLuint *values
argument_list|)
block|;
name|void
name|glPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei mapsize
argument_list|,
argument|const GLfloat *values
argument_list|)
block|;
name|void
name|glPixelTransferi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPixelTransferf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glPixelZoom
argument_list|(
argument|GLfloat xfactor
argument_list|,
argument|GLfloat yfactor
argument_list|)
block|;
name|void
name|glAlphaFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLfloat ref
argument_list|)
block|;
name|void
name|glEvalPoint2
argument_list|(
argument|GLint i
argument_list|,
argument|GLint j
argument_list|)
block|;
name|void
name|glEvalMesh2
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|,
argument|GLint j1
argument_list|,
argument|GLint j2
argument_list|)
block|;
name|void
name|glEvalPoint1
argument_list|(
argument|GLint i
argument_list|)
block|;
name|void
name|glEvalMesh1
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|)
block|;
name|void
name|glEvalCoord2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord2f
argument_list|(
argument|GLfloat u
argument_list|,
argument|GLfloat v
argument_list|)
block|;
name|void
name|glEvalCoord2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord2d
argument_list|(
argument|GLdouble u
argument_list|,
argument|GLdouble v
argument_list|)
block|;
name|void
name|glEvalCoord1fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord1f
argument_list|(
argument|GLfloat u
argument_list|)
block|;
name|void
name|glEvalCoord1dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord1d
argument_list|(
argument|GLdouble u
argument_list|)
block|;
name|void
name|glMapGrid2f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glMapGrid2d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|;
name|void
name|glMapGrid1f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|)
block|;
name|void
name|glMapGrid1d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|)
block|;
name|void
name|glMap2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|void
name|glMap2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|;
name|void
name|glMap1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|void
name|glMap1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLdouble *points
argument_list|)
block|;
name|void
name|glPushAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glPopAttrib
argument_list|()
block|;
name|void
name|glAccum
argument_list|(
argument|GLenum op
argument_list|,
argument|GLfloat value
argument_list|)
block|;
name|void
name|glIndexMask
argument_list|(
argument|GLuint mask
argument_list|)
block|;
name|void
name|glClearIndex
argument_list|(
argument|GLfloat c
argument_list|)
block|;
name|void
name|glClearAccum
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glPushName
argument_list|(
argument|GLuint name
argument_list|)
block|;
name|void
name|glPopName
argument_list|()
block|;
name|void
name|glPassThrough
argument_list|(
argument|GLfloat token
argument_list|)
block|;
name|void
name|glLoadName
argument_list|(
argument|GLuint name
argument_list|)
block|;
name|void
name|glInitNames
argument_list|()
block|;
name|GLint
name|glRenderMode
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glSelectBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLuint *buffer
argument_list|)
block|;
name|void
name|glFeedbackBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLfloat *buffer
argument_list|)
block|;
name|void
name|glTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTexGeni
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTexGenf
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|;
name|void
name|glTexGend
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble param
argument_list|)
block|;
name|void
name|glTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTexEnvi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTexEnvf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glShadeModel
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glPolygonStipple
argument_list|(
specifier|const
name|GLubyte
operator|*
name|mask
argument_list|)
block|;
name|void
name|glMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glMateriali
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glMaterialf
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glLineStipple
argument_list|(
argument|GLint factor
argument_list|,
argument|GLushort pattern
argument_list|)
block|;
name|void
name|glLightModeliv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glLightModeli
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glLightModelfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glLightModelf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glLighti
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glLightf
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glFogiv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glFogi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glFogfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glFogf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glColorMaterial
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|const GLdouble *equation
argument_list|)
block|;
name|void
name|glVertex4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glVertex4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glVertex4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glVertex4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertex3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glVertex3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glVertex3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glVertex3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertex2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glVertex2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glVertex2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glVertex2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glTexCoord4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|;
name|void
name|glTexCoord4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|;
name|void
name|glTexCoord4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|;
name|void
name|glTexCoord4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|;
name|void
name|glTexCoord3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|;
name|void
name|glTexCoord3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|;
name|void
name|glTexCoord3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|;
name|void
name|glTexCoord3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|;
name|void
name|glTexCoord2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|;
name|void
name|glTexCoord2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|;
name|void
name|glTexCoord2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|;
name|void
name|glTexCoord2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|;
name|void
name|glTexCoord1sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1s
argument_list|(
argument|GLshort s
argument_list|)
block|;
name|void
name|glTexCoord1iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1i
argument_list|(
argument|GLint s
argument_list|)
block|;
name|void
name|glTexCoord1fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1f
argument_list|(
argument|GLfloat s
argument_list|)
block|;
name|void
name|glTexCoord1dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1d
argument_list|(
argument|GLdouble s
argument_list|)
block|;
name|void
name|glRectsv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v1
argument_list|,
specifier|const
name|GLshort
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRects
argument_list|(
argument|GLshort x1
argument_list|,
argument|GLshort y1
argument_list|,
argument|GLshort x2
argument_list|,
argument|GLshort y2
argument_list|)
block|;
name|void
name|glRectiv
argument_list|(
specifier|const
name|GLint
operator|*
name|v1
argument_list|,
specifier|const
name|GLint
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRecti
argument_list|(
argument|GLint x1
argument_list|,
argument|GLint y1
argument_list|,
argument|GLint x2
argument_list|,
argument|GLint y2
argument_list|)
block|;
name|void
name|glRectfv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v1
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRectf
argument_list|(
argument|GLfloat x1
argument_list|,
argument|GLfloat y1
argument_list|,
argument|GLfloat x2
argument_list|,
argument|GLfloat y2
argument_list|)
block|;
name|void
name|glRectdv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v1
argument_list|,
specifier|const
name|GLdouble
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRectd
argument_list|(
argument|GLdouble x1
argument_list|,
argument|GLdouble y1
argument_list|,
argument|GLdouble x2
argument_list|,
argument|GLdouble y2
argument_list|)
block|;
name|void
name|glRasterPos4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glRasterPos4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glRasterPos4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glRasterPos4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glRasterPos3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glRasterPos3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glRasterPos3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glRasterPos3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glRasterPos2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glRasterPos2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glRasterPos2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glRasterPos2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glNormal3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3s
argument_list|(
argument|GLshort nx
argument_list|,
argument|GLshort ny
argument_list|,
argument|GLshort nz
argument_list|)
block|;
name|void
name|glNormal3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3i
argument_list|(
argument|GLint nx
argument_list|,
argument|GLint ny
argument_list|,
argument|GLint nz
argument_list|)
block|;
name|void
name|glNormal3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3f
argument_list|(
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|)
block|;
name|void
name|glNormal3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3d
argument_list|(
argument|GLdouble nx
argument_list|,
argument|GLdouble ny
argument_list|,
argument|GLdouble nz
argument_list|)
block|;
name|void
name|glNormal3bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3b
argument_list|(
argument|GLbyte nx
argument_list|,
argument|GLbyte ny
argument_list|,
argument|GLbyte nz
argument_list|)
block|;
name|void
name|glIndexsv
argument_list|(
specifier|const
name|GLshort
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexs
argument_list|(
argument|GLshort c
argument_list|)
block|;
name|void
name|glIndexiv
argument_list|(
specifier|const
name|GLint
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexi
argument_list|(
argument|GLint c
argument_list|)
block|;
name|void
name|glIndexfv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexf
argument_list|(
argument|GLfloat c
argument_list|)
block|;
name|void
name|glIndexdv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexd
argument_list|(
argument|GLdouble c
argument_list|)
block|;
name|void
name|glEnd
argument_list|()
block|;
name|void
name|glEdgeFlagv
argument_list|(
specifier|const
name|GLboolean
operator|*
name|flag
argument_list|)
block|;
name|void
name|glEdgeFlag
argument_list|(
argument|GLboolean flag
argument_list|)
block|;
name|void
name|glColor4usv
argument_list|(
specifier|const
name|GLushort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|,
argument|GLushort alpha
argument_list|)
block|;
name|void
name|glColor4uiv
argument_list|(
specifier|const
name|GLuint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|,
argument|GLuint alpha
argument_list|)
block|;
name|void
name|glColor4ubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|,
argument|GLubyte alpha
argument_list|)
block|;
name|void
name|glColor4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|,
argument|GLshort alpha
argument_list|)
block|;
name|void
name|glColor4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|,
argument|GLint alpha
argument_list|)
block|;
name|void
name|glColor4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glColor4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|,
argument|GLdouble alpha
argument_list|)
block|;
name|void
name|glColor4bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|,
argument|GLbyte alpha
argument_list|)
block|;
name|void
name|glColor3usv
argument_list|(
specifier|const
name|GLushort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|;
name|void
name|glColor3uiv
argument_list|(
specifier|const
name|GLuint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|;
name|void
name|glColor3ubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|;
name|void
name|glColor3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|;
name|void
name|glColor3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|;
name|void
name|glColor3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|;
name|void
name|glColor3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|;
name|void
name|glColor3bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|;
name|void
name|glBitmap
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLfloat xorig
argument_list|,
argument|GLfloat yorig
argument_list|,
argument|GLfloat xmove
argument_list|,
argument|GLfloat ymove
argument_list|,
argument|const GLubyte *bitmap
argument_list|)
block|;
name|void
name|glBegin
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glListBase
argument_list|(
argument|GLuint base
argument_list|)
block|;
name|GLuint
name|glGenLists
argument_list|(
argument|GLsizei range
argument_list|)
block|;
name|void
name|glDeleteLists
argument_list|(
argument|GLuint list
argument_list|,
argument|GLsizei range
argument_list|)
block|;
name|void
name|glCallLists
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *lists
argument_list|)
block|;
name|void
name|glCallList
argument_list|(
argument|GLuint list
argument_list|)
block|;
name|void
name|glEndList
argument_list|()
block|;
name|void
name|glNewList
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum mode
argument_list|)
block|;
comment|// OpenGL 1.1 deprecated functions
name|void
name|glPushClientAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glPopClientAttrib
argument_list|()
block|;
name|void
name|glIndexubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexub
argument_list|(
argument|GLubyte c
argument_list|)
block|;
name|void
name|glPrioritizeTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|const GLfloat *priorities
argument_list|)
block|;
name|GLboolean
name|glAreTexturesResident
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|GLboolean *residences
argument_list|)
block|;
name|void
name|glVertexPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glTexCoordPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glNormalPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glInterleavedArrays
argument_list|(
argument|GLenum format
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glGetPointerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|void * *params
argument_list|)
block|;
name|void
name|glIndexPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glEnableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|;
name|void
name|glEdgeFlagPointer
argument_list|(
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glDisableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|;
name|void
name|glColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glArrayElement
argument_list|(
argument|GLint i
argument_list|)
block|;
comment|// OpenGL 1.2 deprecated functions
name|void
name|glColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *table
argument_list|)
block|;
name|void
name|glColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glCopyColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glGetColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *table
argument_list|)
block|;
name|void
name|glGetColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|;
name|void
name|glCopyColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *image
argument_list|)
block|;
name|void
name|glConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *image
argument_list|)
block|;
name|void
name|glConvolutionParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat params
argument_list|)
block|;
name|void
name|glConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glConvolutionParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint params
argument_list|)
block|;
name|void
name|glConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glCopyConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCopyConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glGetConvolutionFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *image
argument_list|)
block|;
name|void
name|glGetConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetSeparableFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *row
argument_list|,
argument|void *column
argument_list|,
argument|void *span
argument_list|)
block|;
name|void
name|glSeparableFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *row
argument_list|,
argument|const void *column
argument_list|)
block|;
name|void
name|glGetHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *values
argument_list|)
block|;
name|void
name|glGetHistogramParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetHistogramParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *values
argument_list|)
block|;
name|void
name|glGetMinmaxParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMinmaxParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|;
name|void
name|glMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|;
name|void
name|glResetHistogram
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glResetMinmax
argument_list|(
argument|GLenum target
argument_list|)
block|;
comment|// OpenGL 1.3 deprecated functions
name|void
name|glMultTransposeMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glMultTransposeMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadTransposeMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadTransposeMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glMultiTexCoord4sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|;
name|void
name|glMultiTexCoord4iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|;
name|void
name|glMultiTexCoord4fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|;
name|void
name|glMultiTexCoord4dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|;
name|void
name|glMultiTexCoord3sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|;
name|void
name|glMultiTexCoord3iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|;
name|void
name|glMultiTexCoord3fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|;
name|void
name|glMultiTexCoord3dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|;
name|void
name|glMultiTexCoord2sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|;
name|void
name|glMultiTexCoord2iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|;
name|void
name|glMultiTexCoord2fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|;
name|void
name|glMultiTexCoord2dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|;
name|void
name|glMultiTexCoord1sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|)
block|;
name|void
name|glMultiTexCoord1iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|)
block|;
name|void
name|glMultiTexCoord1fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|)
block|;
name|void
name|glMultiTexCoord1dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|)
block|;
name|void
name|glClientActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|;
comment|// OpenGL 1.4 deprecated functions
name|void
name|glWindowPos3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glWindowPos3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glWindowPos3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glWindowPos3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glWindowPos2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glWindowPos2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glWindowPos2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glWindowPos2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glSecondaryColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glSecondaryColor3usv
argument_list|(
specifier|const
name|GLushort
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|;
name|void
name|glSecondaryColor3uiv
argument_list|(
specifier|const
name|GLuint
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|;
name|void
name|glSecondaryColor3ubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|;
name|void
name|glSecondaryColor3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|;
name|void
name|glSecondaryColor3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|;
name|void
name|glSecondaryColor3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|;
name|void
name|glSecondaryColor3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|;
name|void
name|glSecondaryColor3bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|;
name|void
name|glFogCoordPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|;
name|void
name|glFogCoorddv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|coord
argument_list|)
block|;
name|void
name|glFogCoordd
argument_list|(
argument|GLdouble coord
argument_list|)
block|;
name|void
name|glFogCoordfv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|coord
argument_list|)
block|;
name|void
name|glFogCoordf
argument_list|(
argument|GLfloat coord
argument_list|)
block|;
comment|// OpenGL 1.5 deprecated functions
comment|// OpenGL 2.0 deprecated functions
comment|// OpenGL 2.1 deprecated functions
comment|// OpenGL 3.0 deprecated functions
comment|// OpenGL 3.1 deprecated functions
comment|// OpenGL 3.2 deprecated functions
comment|// OpenGL 3.3 deprecated functions
name|void
name|glSecondaryColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|;
name|void
name|glSecondaryColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|;
name|void
name|glColorP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|;
name|void
name|glColorP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|;
name|void
name|glColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|;
name|void
name|glColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|;
name|void
name|glNormalP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glNormalP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP4uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP4ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP3uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP3ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP2uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP2ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP1uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glMultiTexCoordP1ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glTexCoordP1uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|;
name|void
name|glTexCoordP1ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|;
name|void
name|glVertexP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|;
name|void
name|glVertexP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glVertexP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|;
comment|// OpenGL 4.0 deprecated functions
comment|// OpenGL 4.1 deprecated functions
comment|// OpenGL 4.2 deprecated functions
comment|// OpenGL 4.3 deprecated functions
comment|// OpenGL 4.4 deprecated functions
comment|// OpenGL 4.5 deprecated functions
name|void
name|glGetnMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *values
argument_list|)
block|;
name|void
name|glGetnHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *values
argument_list|)
block|;
name|void
name|glGetnSeparableFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei rowBufSize
argument_list|,
argument|void *row
argument_list|,
argument|GLsizei columnBufSize
argument_list|,
argument|void *column
argument_list|,
argument|void *span
argument_list|)
block|;
name|void
name|glGetnConvolutionFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *image
argument_list|)
block|;
name|void
name|glGetnColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *table
argument_list|)
block|;
name|void
name|glGetnPolygonStipple
argument_list|(
argument|GLsizei bufSize
argument_list|,
argument|GLubyte *pattern
argument_list|)
block|;
name|void
name|glGetnPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLushort *values
argument_list|)
block|;
name|void
name|glGetnPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *values
argument_list|)
block|;
name|void
name|glGetnPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *values
argument_list|)
block|;
name|void
name|glGetnMapiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *v
argument_list|)
block|;
name|void
name|glGetnMapfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *v
argument_list|)
block|;
name|void
name|glGetnMapdv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *v
argument_list|)
block|;
name|private
operator|:
name|friend
name|class
name|QOpenGLContext
block|;
specifier|static
name|bool
name|isContextCompatible
argument_list|(
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
specifier|static
name|QOpenGLVersionProfile
name|versionProfile
argument_list|()
block|;
name|QOpenGLFunctions_1_0_CoreBackend
operator|*
name|d_1_0_Core
block|;
name|QOpenGLFunctions_1_1_CoreBackend
operator|*
name|d_1_1_Core
block|;
name|QOpenGLFunctions_1_2_CoreBackend
operator|*
name|d_1_2_Core
block|;
name|QOpenGLFunctions_1_3_CoreBackend
operator|*
name|d_1_3_Core
block|;
name|QOpenGLFunctions_1_4_CoreBackend
operator|*
name|d_1_4_Core
block|;
name|QOpenGLFunctions_1_5_CoreBackend
operator|*
name|d_1_5_Core
block|;
name|QOpenGLFunctions_2_0_CoreBackend
operator|*
name|d_2_0_Core
block|;
name|QOpenGLFunctions_2_1_CoreBackend
operator|*
name|d_2_1_Core
block|;
name|QOpenGLFunctions_3_0_CoreBackend
operator|*
name|d_3_0_Core
block|;
name|QOpenGLFunctions_3_1_CoreBackend
operator|*
name|d_3_1_Core
block|;
name|QOpenGLFunctions_3_2_CoreBackend
operator|*
name|d_3_2_Core
block|;
name|QOpenGLFunctions_3_3_CoreBackend
operator|*
name|d_3_3_Core
block|;
name|QOpenGLFunctions_4_0_CoreBackend
operator|*
name|d_4_0_Core
block|;
name|QOpenGLFunctions_4_1_CoreBackend
operator|*
name|d_4_1_Core
block|;
name|QOpenGLFunctions_4_2_CoreBackend
operator|*
name|d_4_2_Core
block|;
name|QOpenGLFunctions_4_3_CoreBackend
operator|*
name|d_4_3_Core
block|;
name|QOpenGLFunctions_4_4_CoreBackend
operator|*
name|d_4_4_Core
block|;
name|QOpenGLFunctions_4_5_CoreBackend
operator|*
name|d_4_5_Core
block|;
name|QOpenGLFunctions_1_0_DeprecatedBackend
operator|*
name|d_1_0_Deprecated
block|;
name|QOpenGLFunctions_1_1_DeprecatedBackend
operator|*
name|d_1_1_Deprecated
block|;
name|QOpenGLFunctions_1_2_DeprecatedBackend
operator|*
name|d_1_2_Deprecated
block|;
name|QOpenGLFunctions_1_3_DeprecatedBackend
operator|*
name|d_1_3_Deprecated
block|;
name|QOpenGLFunctions_1_4_DeprecatedBackend
operator|*
name|d_1_4_Deprecated
block|;
name|QOpenGLFunctions_3_3_DeprecatedBackend
operator|*
name|d_3_3_Deprecated
block|;
name|QOpenGLFunctions_4_5_DeprecatedBackend
operator|*
name|d_4_5_Deprecated
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|// OpenGL 1.0 core functions
end_comment
begin_expr_stmt
DECL|function|glViewport
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glViewport
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Viewport
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glDepthRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDepthRange
argument_list|(
argument|GLdouble nearVal
argument_list|,
argument|GLdouble farVal
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthRange
argument_list|(
name|nearVal
argument_list|,
name|farVal
argument_list|)
block|; }
DECL|function|glIsEnabled
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsEnabled
argument_list|(
argument|GLenum cap
argument_list|)
block|{
return|return
name|d_1_0_Core
operator|->
name|IsEnabled
argument_list|(
name|cap
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetTexLevelParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexLevelParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexLevelParameteriv
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexLevelParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexLevelParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexLevelParameterfv
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexImage
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetString
specifier|inline
specifier|const
name|GLubyte
operator|*
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetString
argument_list|(
argument|GLenum name
argument_list|)
block|{
return|return
name|d_1_0_Core
operator|->
name|GetString
argument_list|(
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetIntegerv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetIntegerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *data
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetIntegerv
argument_list|(
name|pname
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetFloatv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetFloatv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *data
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetFloatv
argument_list|(
name|pname
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetError
specifier|inline
name|GLenum
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetError
argument_list|()
block|{
return|return
name|d_1_0_Core
operator|->
name|GetError
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetDoublev
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetDoublev
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *data
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetDoublev
argument_list|(
name|pname
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetBooleanv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetBooleanv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLboolean *data
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetBooleanv
argument_list|(
name|pname
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glReadPixels
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glReadPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ReadPixels
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glReadBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glReadBuffer
argument_list|(
argument|GLenum src
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ReadBuffer
argument_list|(
name|src
argument_list|)
block|; }
DECL|function|glPixelStorei
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelStorei
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PixelStorei
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelStoref
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelStoref
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PixelStoref
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glDepthFunc
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDepthFunc
argument_list|(
argument|GLenum func
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthFunc
argument_list|(
name|func
argument_list|)
block|; }
DECL|function|glStencilOp
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glStencilOp
argument_list|(
argument|GLenum fail
argument_list|,
argument|GLenum zfail
argument_list|,
argument|GLenum zpass
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilOp
argument_list|(
name|fail
argument_list|,
name|zfail
argument_list|,
name|zpass
argument_list|)
block|; }
DECL|function|glStencilFunc
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glStencilFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilFunc
argument_list|(
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glLogicOp
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLogicOp
argument_list|(
argument|GLenum opcode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|LogicOp
argument_list|(
name|opcode
argument_list|)
block|; }
DECL|function|glBlendFunc
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendFunc
argument_list|(
argument|GLenum sfactor
argument_list|,
argument|GLenum dfactor
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|BlendFunc
argument_list|(
name|sfactor
argument_list|,
name|dfactor
argument_list|)
block|; }
DECL|function|glFlush
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFlush
argument_list|()
block|{
name|d_1_0_Core
operator|->
name|Flush
argument_list|()
block|; }
DECL|function|glFinish
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFinish
argument_list|()
block|{
name|d_1_0_Core
operator|->
name|Finish
argument_list|()
block|; }
DECL|function|glEnable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEnable
argument_list|(
argument|GLenum cap
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Enable
argument_list|(
name|cap
argument_list|)
block|; }
DECL|function|glDisable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDisable
argument_list|(
argument|GLenum cap
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Disable
argument_list|(
name|cap
argument_list|)
block|; }
DECL|function|glDepthMask
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDepthMask
argument_list|(
argument|GLboolean flag
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthMask
argument_list|(
name|flag
argument_list|)
block|; }
DECL|function|glColorMask
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorMask
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ColorMask
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glStencilMask
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glStencilMask
argument_list|(
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilMask
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glClearDepth
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearDepth
argument_list|(
argument|GLdouble depth
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearDepth
argument_list|(
name|depth
argument_list|)
block|; }
DECL|function|glClearStencil
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearStencil
argument_list|(
argument|GLint s
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearStencil
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glClearColor
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glClear
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClear
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Clear
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glDrawBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawBuffer
argument_list|(
argument|GLenum buf
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DrawBuffer
argument_list|(
name|buf
argument_list|)
block|; }
DECL|function|glTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameterf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glScissor
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glScissor
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Scissor
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glPolygonMode
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPolygonMode
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PolygonMode
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glPointSize
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPointSize
argument_list|(
argument|GLfloat size
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PointSize
argument_list|(
name|size
argument_list|)
block|; }
DECL|function|glLineWidth
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLineWidth
argument_list|(
argument|GLfloat width
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|LineWidth
argument_list|(
name|width
argument_list|)
block|; }
DECL|function|glHint
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glHint
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Hint
argument_list|(
name|target
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glFrontFace
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFrontFace
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|FrontFace
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glCullFace
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCullFace
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|CullFace
argument_list|(
name|mode
argument_list|)
block|; }
comment|// OpenGL 1.1 core functions
DECL|function|glIsTexture
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsTexture
argument_list|(
argument|GLuint texture
argument_list|)
block|{
return|return
name|d_1_1_Core
operator|->
name|IsTexture
argument_list|(
name|texture
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenTextures
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|GenTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glDeleteTextures
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DeleteTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glBindTexture
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|BindTexture
argument_list|(
name|target
argument_list|,
name|texture
argument_list|)
block|; }
DECL|function|glTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|TexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|TexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCopyTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glCopyTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glPolygonOffset
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPolygonOffset
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|PolygonOffset
argument_list|(
name|factor
argument_list|,
name|units
argument_list|)
block|; }
DECL|function|glDrawElements
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DrawElements
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glDrawArrays
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DrawArrays
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|)
block|; }
comment|// OpenGL 1.2 core functions
DECL|function|glBlendColor
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|BlendColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glBlendEquation
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendEquation
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|BlendEquation
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glCopyTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|CopyTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|TexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|TexImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glDrawRangeElements
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawRangeElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|DrawRangeElements
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
block|; }
comment|// OpenGL 1.3 core functions
DECL|function|glGetCompressedTexImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|void *img
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|GetCompressedTexImage
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glSampleCoverage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSampleCoverage
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|SampleCoverage
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|; }
DECL|function|glActiveTexture
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|ActiveTexture
argument_list|(
name|texture
argument_list|)
block|; }
comment|// OpenGL 1.4 core functions
DECL|function|glPointParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPointParameteriv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameteriv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPointParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameteri
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPointParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPointParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameterfv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameterf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPointParameterf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameterf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiDrawElements
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|MultiDrawElements
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|drawcount
argument_list|)
block|; }
DECL|function|glMultiDrawArrays
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|MultiDrawArrays
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|drawcount
argument_list|)
block|; }
DECL|function|glBlendFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendFuncSeparate
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|BlendFuncSeparate
argument_list|(
name|sfactorRGB
argument_list|,
name|dfactorRGB
argument_list|,
name|sfactorAlpha
argument_list|,
name|dfactorAlpha
argument_list|)
block|; }
comment|// OpenGL 1.5 core functions
DECL|function|glGetBufferPointerv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetBufferPointerv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|void * *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferPointerv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetBufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetBufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUnmapBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|UnmapBuffer
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMapBuffer
specifier|inline
name|void
operator|*
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|MapBuffer
argument_list|(
name|target
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|void *data
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const void *data
argument_list|,
argument|GLenum usage
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BufferData
argument_list|(
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|; }
DECL|function|glIsBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|IsBuffer
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenBuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GenBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glDeleteBuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|DeleteBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glBindBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BindBuffer
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glGetQueryObjectuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetQueryObjectuiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryObjectuiv
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjectiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetQueryObjectiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryObjectiv
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetQueryiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndQuery
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEndQuery
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|EndQuery
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glBeginQuery
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBeginQuery
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BeginQuery
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glIsQuery
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsQuery
argument_list|(
argument|GLuint id
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|IsQuery
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteQueries
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|DeleteQueries
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glGenQueries
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GenQueries
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
comment|// OpenGL 2.0 core functions
DECL|function|glVertexAttribPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttribPointer
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexAttrib4usv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4usv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4usv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4uiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4ubv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4ubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4ubv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4s
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4iv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4f
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4bv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4bv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4bv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nusv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4Nusv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nusv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4Nuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nuiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nubv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4Nubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nubv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nub
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4Nub
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nub
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nsv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4Nsv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nsv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Niv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4Niv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Niv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nbv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib4Nbv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nbv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib3sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib3s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3s
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib3fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib3f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3f
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib2sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib2sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib2s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2s
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib2fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib2f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2f
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib1sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib1sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib1s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1s
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib1fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib1f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1f
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttrib1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1d
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glValidateProgram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glValidateProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|ValidateProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glUniformMatrix4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glUniform4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glUseProgram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUseProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UseProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glShaderSource
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar *const *string
argument_list|,
argument|const GLint *length
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|ShaderSource
argument_list|(
name|shader
argument_list|,
name|count
argument_list|,
name|string
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glLinkProgram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLinkProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|LinkProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glIsShader
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|IsShader
argument_list|(
name|shader
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsProgram
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|IsProgram
argument_list|(
name|program
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribPointerv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexAttribPointerv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|void * *pointer
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribPointerv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glGetVertexAttribiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexAttribiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexAttribfv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribfv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexAttribdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribdv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetUniformiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetUniformfv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|GetUniformLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetShaderSource
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderSource
argument_list|(
name|shader
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
block|; }
DECL|function|glGetShaderInfoLog
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetShaderInfoLog
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderInfoLog
argument_list|(
name|shader
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glGetShaderiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetShaderiv
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderiv
argument_list|(
name|shader
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramInfoLog
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramInfoLog
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetProgramInfoLog
argument_list|(
name|program
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glGetProgramiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetProgramiv
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetAttribLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|GetAttribLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetAttachedShaders
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetAttachedShaders
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLuint *shaders
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetAttachedShaders
argument_list|(
name|program
argument_list|,
name|maxCount
argument_list|,
name|count
argument_list|,
name|shaders
argument_list|)
block|; }
DECL|function|glGetActiveUniform
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveUniform
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetActiveUniform
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetActiveAttrib
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveAttrib
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetActiveAttrib
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glEnableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEnableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|EnableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glDisableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDisableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DisableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glDetachShader
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDetachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DetachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|; }
DECL|function|glDeleteShader
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DeleteShader
argument_list|(
name|shader
argument_list|)
block|; }
DECL|function|glDeleteProgram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DeleteProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glCreateShader
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateShader
argument_list|(
argument|GLenum type
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|CreateShader
argument_list|(
name|type
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCreateProgram
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateProgram
argument_list|()
block|{
return|return
name|d_2_0_Core
operator|->
name|CreateProgram
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCompileShader
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompileShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|CompileShader
argument_list|(
name|shader
argument_list|)
block|; }
DECL|function|glBindAttribLocation
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|BindAttribLocation
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glAttachShader
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glAttachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|AttachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|; }
DECL|function|glStencilMaskSeparate
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glStencilMaskSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilMaskSeparate
argument_list|(
name|face
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glStencilFuncSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilFuncSeparate
argument_list|(
name|face
argument_list|,
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilOpSeparate
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glStencilOpSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilOpSeparate
argument_list|(
name|face
argument_list|,
name|sfail
argument_list|,
name|dpfail
argument_list|,
name|dppass
argument_list|)
block|; }
DECL|function|glDrawBuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DrawBuffers
argument_list|(
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
DECL|function|glBlendEquationSeparate
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendEquationSeparate
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|BlendEquationSeparate
argument_list|(
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|; }
comment|// OpenGL 2.1 core functions
DECL|function|glUniformMatrix4x3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix4x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix4x3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix3x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix3x4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix4x2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix4x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix4x2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix2x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix2x4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix3x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix3x2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix2x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix2x3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
comment|// OpenGL 3.0 core functions
DECL|function|glIsVertexArray
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsVertexArray
argument_list|(
name|array
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenVertexArrays
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenVertexArrays
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glDeleteVertexArrays
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|DeleteVertexArrays
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glBindVertexArray
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindVertexArray
argument_list|(
name|array
argument_list|)
block|; }
DECL|function|glFlushMappedBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFlushMappedBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FlushMappedBufferRange
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glMapBufferRange
specifier|inline
name|void
operator|*
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|MapBufferRange
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glFramebufferTextureLayer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFramebufferTextureLayer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTextureLayer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layer
argument_list|)
block|; }
DECL|function|glRenderbufferStorageMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|RenderbufferStorageMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glBlitFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BlitFramebuffer
argument_list|(
name|srcX0
argument_list|,
name|srcY0
argument_list|,
name|srcX1
argument_list|,
name|srcY1
argument_list|,
name|dstX0
argument_list|,
name|dstY0
argument_list|,
name|dstX1
argument_list|,
name|dstY1
argument_list|,
name|mask
argument_list|,
name|filter
argument_list|)
block|; }
DECL|function|glGenerateMipmap
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenerateMipmap
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenerateMipmap
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glGetFramebufferAttachmentParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetFramebufferAttachmentParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetFramebufferAttachmentParameteriv
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFramebufferRenderbuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFramebufferRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferRenderbuffer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glFramebufferTexture3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFramebufferTexture3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTexture3D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|zoffset
argument_list|)
block|; }
DECL|function|glFramebufferTexture2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFramebufferTexture2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTexture2D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glFramebufferTexture1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFramebufferTexture1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTexture1D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glCheckFramebufferStatus
specifier|inline
name|GLenum
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCheckFramebufferStatus
argument_list|(
argument|GLenum target
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|CheckFramebufferStatus
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenFramebuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glDeleteFramebuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|DeleteFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glBindFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindFramebuffer
argument_list|(
name|target
argument_list|,
name|framebuffer
argument_list|)
block|; }
DECL|function|glIsFramebuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsFramebuffer
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsFramebuffer
argument_list|(
name|framebuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetRenderbufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetRenderbufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetRenderbufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glRenderbufferStorage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRenderbufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|RenderbufferStorage
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glGenRenderbuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glDeleteRenderbuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|DeleteRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glBindRenderbuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindRenderbuffer
argument_list|(
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glIsRenderbuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsRenderbuffer
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsRenderbuffer
argument_list|(
name|renderbuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetStringi
specifier|inline
specifier|const
name|GLubyte
operator|*
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetStringi
argument_list|(
argument|GLenum name
argument_list|,
argument|GLuint index
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|GetStringi
argument_list|(
name|name
argument_list|,
name|index
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glClearBufferfi
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearBufferfi
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|GLfloat depth
argument_list|,
argument|GLint stencil
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferfi
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|depth
argument_list|,
name|stencil
argument_list|)
block|; }
DECL|function|glClearBufferfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearBufferfv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferfv
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glClearBufferuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearBufferuiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferuiv
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glClearBufferiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearBufferiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferiv
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetTexParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetTexParameterIuiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetTexParameterIiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|TexParameterIuiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|TexParameterIiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniform4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform4uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform3uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform2uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform1uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform4ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform3ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform2ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform1ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glGetFragDataLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|GetFragDataLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindFragDataLocation
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint color
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindFragDataLocation
argument_list|(
name|program
argument_list|,
name|color
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetUniformuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformuiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetUniformuiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribI4usv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4usv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4usv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4ubv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4ubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4ubv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4bv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4bv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4bv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4uiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI3uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI3uiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI2uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI2uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI2uiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI1uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI1uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI1uiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4iv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI3iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI3iv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI2iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI2iv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI1iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI1iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI1iv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribI4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|,
argument|GLuint w
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4ui
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribI3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI3ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|,
argument|GLuint z
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI3ui
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribI2ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI2ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|,
argument|GLuint y
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI2ui
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribI1ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI1ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint x
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI1ui
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttribI4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI4i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI4i
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribI3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI3i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI3i
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribI2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI2i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI2i
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribI1i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribI1i
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint x
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribI1i
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glGetVertexAttribIuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexAttribIuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetVertexAttribIuiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribIiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexAttribIiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetVertexAttribIiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribIPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribIPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribIPointer
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glEndConditionalRender
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEndConditionalRender
argument_list|()
block|{
name|d_3_0_Core
operator|->
name|EndConditionalRender
argument_list|()
block|; }
DECL|function|glBeginConditionalRender
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBeginConditionalRender
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BeginConditionalRender
argument_list|(
name|id
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glClampColor
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClampColor
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum clamp
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClampColor
argument_list|(
name|target
argument_list|,
name|clamp
argument_list|)
block|; }
DECL|function|glGetTransformFeedbackVarying
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTransformFeedbackVarying
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetTransformFeedbackVarying
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glTransformFeedbackVaryings
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTransformFeedbackVaryings
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar *const *varyings
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|TransformFeedbackVaryings
argument_list|(
name|program
argument_list|,
name|count
argument_list|,
name|varyings
argument_list|,
name|bufferMode
argument_list|)
block|; }
DECL|function|glBindBufferBase
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindBufferBase
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindBufferBase
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glBindBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindBufferRange
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glEndTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEndTransformFeedback
argument_list|()
block|{
name|d_3_0_Core
operator|->
name|EndTransformFeedback
argument_list|()
block|; }
DECL|function|glBeginTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBeginTransformFeedback
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BeginTransformFeedback
argument_list|(
name|primitiveMode
argument_list|)
block|; }
DECL|function|glIsEnabledi
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsEnabledi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsEnabledi
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDisablei
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDisablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Disablei
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glEnablei
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEnablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Enablei
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glGetIntegeri_v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetIntegeri_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *data
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetIntegeri_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetBooleani_v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetBooleani_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLboolean *data
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetBooleani_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glColorMaski
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLboolean r
argument_list|,
argument|GLboolean g
argument_list|,
argument|GLboolean b
argument_list|,
argument|GLboolean a
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ColorMaski
argument_list|(
name|index
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|)
block|; }
comment|// OpenGL 3.1 core functions
DECL|function|glUniformBlockBinding
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLuint uniformBlockBinding
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|UniformBlockBinding
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|uniformBlockBinding
argument_list|)
block|; }
DECL|function|glGetActiveUniformBlockName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveUniformBlockName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformBlockName
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformBlockName
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|uniformBlockName
argument_list|)
block|; }
DECL|function|glGetActiveUniformBlockiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveUniformBlockiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformBlockiv
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformBlockIndex
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformBlockIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *uniformBlockName
argument_list|)
block|{
return|return
name|d_3_1_Core
operator|->
name|GetUniformBlockIndex
argument_list|(
name|program
argument_list|,
name|uniformBlockName
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetActiveUniformName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformName
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformName
argument_list|(
name|program
argument_list|,
name|uniformIndex
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|uniformName
argument_list|)
block|; }
DECL|function|glGetActiveUniformsiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveUniformsiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLuint *uniformIndices
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformsiv
argument_list|(
name|program
argument_list|,
name|uniformCount
argument_list|,
name|uniformIndices
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformIndices
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformIndices
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLchar *const *uniformNames
argument_list|,
argument|GLuint *uniformIndices
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetUniformIndices
argument_list|(
name|program
argument_list|,
name|uniformCount
argument_list|,
name|uniformNames
argument_list|,
name|uniformIndices
argument_list|)
block|; }
DECL|function|glCopyBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyBufferSubData
argument_list|(
argument|GLenum readTarget
argument_list|,
argument|GLenum writeTarget
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|CopyBufferSubData
argument_list|(
name|readTarget
argument_list|,
name|writeTarget
argument_list|,
name|readOffset
argument_list|,
name|writeOffset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glPrimitiveRestartIndex
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPrimitiveRestartIndex
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|PrimitiveRestartIndex
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glTexBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|TexBuffer
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glDrawElementsInstanced
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawElementsInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|DrawElementsInstanced
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|)
block|; }
DECL|function|glDrawArraysInstanced
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawArraysInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|DrawArraysInstanced
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|instancecount
argument_list|)
block|; }
comment|// OpenGL 3.2 core functions
DECL|function|glSampleMaski
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSampleMaski
argument_list|(
argument|GLuint maskNumber
argument_list|,
argument|GLbitfield mask
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|SampleMaski
argument_list|(
name|maskNumber
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glGetMultisamplefv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMultisamplefv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetMultisamplefv
argument_list|(
name|pname
argument_list|,
name|index
argument_list|,
name|val
argument_list|)
block|; }
DECL|function|glTexImage3DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexImage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|TexImage3DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTexImage2DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexImage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|TexImage2DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glFramebufferTexture
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFramebufferTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|FramebufferTexture
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glGetBufferParameteri64v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetBufferParameteri64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetBufferParameteri64v
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetInteger64i_v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetInteger64i_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint64 *data
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetInteger64i_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetSynciv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSynciv
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetSynciv
argument_list|(
name|sync
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetInteger64v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetInteger64v
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint64 *data
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetInteger64v
argument_list|(
name|pname
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glWaitSync
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|WaitSync
argument_list|(
name|sync
argument_list|,
name|flags
argument_list|,
name|timeout
argument_list|)
block|; }
DECL|function|glClientWaitSync
specifier|inline
name|GLenum
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClientWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|{
return|return
name|d_3_2_Core
operator|->
name|ClientWaitSync
argument_list|(
name|sync
argument_list|,
name|flags
argument_list|,
name|timeout
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteSync
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteSync
argument_list|(
argument|GLsync sync
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DeleteSync
argument_list|(
name|sync
argument_list|)
block|; }
DECL|function|glIsSync
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsSync
argument_list|(
argument|GLsync sync
argument_list|)
block|{
return|return
name|d_3_2_Core
operator|->
name|IsSync
argument_list|(
name|sync
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glFenceSync
specifier|inline
name|GLsync
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFenceSync
argument_list|(
argument|GLenum condition
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
return|return
name|d_3_2_Core
operator|->
name|FenceSync
argument_list|(
name|condition
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glProvokingVertex
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProvokingVertex
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|ProvokingVertex
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glMultiDrawElementsBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|const GLint *basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|MultiDrawElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|drawcount
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawElementsInstancedBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawElementsInstancedBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DrawElementsInstancedBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawRangeElementsBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawRangeElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DrawRangeElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawElementsBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DrawElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|basevertex
argument_list|)
block|; }
comment|// OpenGL 3.3 core functions
DECL|function|glVertexAttribP4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP4uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP4ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP4ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP3uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP3uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP3ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP3ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP2uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP2uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP2uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP2ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP2ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP2ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP1uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP1uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP1uiv
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribP1ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribP1ui
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribP1ui
argument_list|(
name|index
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexAttribDivisor
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribDivisor
argument_list|(
argument|GLuint index
argument_list|,
argument|GLuint divisor
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|VertexAttribDivisor
argument_list|(
name|index
argument_list|,
name|divisor
argument_list|)
block|; }
DECL|function|glGetQueryObjectui64v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetQueryObjectui64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint64 *params
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|GetQueryObjectui64v
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjecti64v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetQueryObjecti64v
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|GetQueryObjecti64v
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glQueryCounter
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glQueryCounter
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum target
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|QueryCounter
argument_list|(
name|id
argument_list|,
name|target
argument_list|)
block|; }
DECL|function|glGetSamplerParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|GetSamplerParameterIuiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetSamplerParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|GetSamplerParameterfv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetSamplerParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|GetSamplerParameterIiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetSamplerParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|GetSamplerParameteriv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glSamplerParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSamplerParameterIuiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *param
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|SamplerParameterIuiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSamplerParameterIiv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|SamplerParameterIiv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSamplerParameterfv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|SamplerParameterfv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameterf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSamplerParameterf
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|SamplerParameterf
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSamplerParameteriv
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|SamplerParameteriv
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glSamplerParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSamplerParameteri
argument_list|(
argument|GLuint sampler
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|SamplerParameteri
argument_list|(
name|sampler
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glBindSampler
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindSampler
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint sampler
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|BindSampler
argument_list|(
name|unit
argument_list|,
name|sampler
argument_list|)
block|; }
DECL|function|glIsSampler
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsSampler
argument_list|(
argument|GLuint sampler
argument_list|)
block|{
return|return
name|d_3_3_Core
operator|->
name|IsSampler
argument_list|(
name|sampler
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteSamplers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *samplers
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|DeleteSamplers
argument_list|(
name|count
argument_list|,
name|samplers
argument_list|)
block|; }
DECL|function|glGenSamplers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenSamplers
argument_list|(
argument|GLsizei count
argument_list|,
argument|GLuint *samplers
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|GenSamplers
argument_list|(
name|count
argument_list|,
name|samplers
argument_list|)
block|; }
DECL|function|glGetFragDataIndex
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetFragDataIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_3_3_Core
operator|->
name|GetFragDataIndex
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindFragDataLocationIndexed
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindFragDataLocationIndexed
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint colorNumber
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|d_3_3_Core
operator|->
name|BindFragDataLocationIndexed
argument_list|(
name|program
argument_list|,
name|colorNumber
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|; }
comment|// OpenGL 4.0 core functions
DECL|function|glGetQueryIndexediv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetQueryIndexediv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GetQueryIndexediv
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndQueryIndexed
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEndQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|EndQueryIndexed
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glBeginQueryIndexed
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBeginQueryIndexed
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|BeginQueryIndexed
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glDrawTransformFeedbackStream
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawTransformFeedbackStream
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|DrawTransformFeedbackStream
argument_list|(
name|mode
argument_list|,
name|id
argument_list|,
name|stream
argument_list|)
block|; }
DECL|function|glDrawTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawTransformFeedback
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|DrawTransformFeedback
argument_list|(
name|mode
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glResumeTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glResumeTransformFeedback
argument_list|()
block|{
name|d_4_0_Core
operator|->
name|ResumeTransformFeedback
argument_list|()
block|; }
DECL|function|glPauseTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPauseTransformFeedback
argument_list|()
block|{
name|d_4_0_Core
operator|->
name|PauseTransformFeedback
argument_list|()
block|; }
DECL|function|glIsTransformFeedback
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsTransformFeedback
argument_list|(
argument|GLuint id
argument_list|)
block|{
return|return
name|d_4_0_Core
operator|->
name|IsTransformFeedback
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenTransformFeedbacks
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GenTransformFeedbacks
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glDeleteTransformFeedbacks
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|DeleteTransformFeedbacks
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glBindTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindTransformFeedback
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|BindTransformFeedback
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glPatchParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPatchParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *values
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|PatchParameterfv
argument_list|(
name|pname
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPatchParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPatchParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|PatchParameteri
argument_list|(
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetProgramStageiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramStageiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GetProgramStageiv
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|pname
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetUniformSubroutineuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformSubroutineuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GetUniformSubroutineuiv
argument_list|(
name|shadertype
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniformSubroutinesuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformSubroutinesuiv
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *indices
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformSubroutinesuiv
argument_list|(
name|shadertype
argument_list|,
name|count
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glGetActiveSubroutineName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveSubroutineName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GetActiveSubroutineName
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetActiveSubroutineUniformName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveSubroutineUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufsize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GetActiveSubroutineUniformName
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|index
argument_list|,
name|bufsize
argument_list|,
name|length
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetActiveSubroutineUniformiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveSubroutineUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GetActiveSubroutineUniformiv
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetSubroutineIndex
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSubroutineIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_4_0_Core
operator|->
name|GetSubroutineIndex
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetSubroutineUniformLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSubroutineUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum shadertype
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_4_0_Core
operator|->
name|GetSubroutineUniformLocation
argument_list|(
name|program
argument_list|,
name|shadertype
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetUniformdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetUniformdv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|GetUniformdv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniformMatrix4x3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix4x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix4x3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix4x2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix4x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix4x2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix3x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix3x4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix3x2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix3x2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix2x4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix2x4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix2x3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix2x3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniformMatrix2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|UniformMatrix2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform4dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform3dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform2dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1dv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform1dv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform4d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform4d
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glUniform3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform3d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform3d
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glUniform2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform2d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform2d
argument_list|(
name|location
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glUniform1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUniform1d
argument_list|(
argument|GLint location
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|Uniform1d
argument_list|(
name|location
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glDrawElementsIndirect
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indirect
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|DrawElementsIndirect
argument_list|(
name|mode
argument_list|,
name|type
argument_list|,
name|indirect
argument_list|)
block|; }
DECL|function|glDrawArraysIndirect
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const void *indirect
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|DrawArraysIndirect
argument_list|(
name|mode
argument_list|,
name|indirect
argument_list|)
block|; }
DECL|function|glBlendFuncSeparatei
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendFuncSeparatei
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum srcRGB
argument_list|,
argument|GLenum dstRGB
argument_list|,
argument|GLenum srcAlpha
argument_list|,
argument|GLenum dstAlpha
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|BlendFuncSeparatei
argument_list|(
name|buf
argument_list|,
name|srcRGB
argument_list|,
name|dstRGB
argument_list|,
name|srcAlpha
argument_list|,
name|dstAlpha
argument_list|)
block|; }
DECL|function|glBlendFunci
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendFunci
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum src
argument_list|,
argument|GLenum dst
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|BlendFunci
argument_list|(
name|buf
argument_list|,
name|src
argument_list|,
name|dst
argument_list|)
block|; }
DECL|function|glBlendEquationSeparatei
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendEquationSeparatei
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|BlendEquationSeparatei
argument_list|(
name|buf
argument_list|,
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|; }
DECL|function|glBlendEquationi
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlendEquationi
argument_list|(
argument|GLuint buf
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|BlendEquationi
argument_list|(
name|buf
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glMinSampleShading
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMinSampleShading
argument_list|(
argument|GLfloat value
argument_list|)
block|{
name|d_4_0_Core
operator|->
name|MinSampleShading
argument_list|(
name|value
argument_list|)
block|; }
comment|// OpenGL 4.1 core functions
DECL|function|glGetDoublei_v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetDoublei_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLdouble *data
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GetDoublei_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetFloati_v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetFloati_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *data
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GetFloati_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glDepthRangeIndexed
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDepthRangeIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble n
argument_list|,
argument|GLdouble f
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|DepthRangeIndexed
argument_list|(
name|index
argument_list|,
name|n
argument_list|,
name|f
argument_list|)
block|; }
DECL|function|glDepthRangeArrayv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDepthRangeArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|DepthRangeArrayv
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glScissorIndexedv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glScissorIndexedv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ScissorIndexedv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glScissorIndexed
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glScissorIndexed
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint left
argument_list|,
argument|GLint bottom
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ScissorIndexed
argument_list|(
name|index
argument_list|,
name|left
argument_list|,
name|bottom
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glScissorArrayv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glScissorArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ScissorArrayv
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glViewportIndexedfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glViewportIndexedfv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ViewportIndexedfv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glViewportIndexedf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glViewportIndexedf
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat w
argument_list|,
argument|GLfloat h
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ViewportIndexedf
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
block|; }
DECL|function|glViewportArrayv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glViewportArrayv
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ViewportArrayv
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetVertexAttribLdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexAttribLdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GetVertexAttribLdv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribLPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribLPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribLPointer
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glVertexAttribL4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL4dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL3dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL2dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL1dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL1dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttribL4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL4d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttribL3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL3d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttribL2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL2d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttribL1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribL1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|VertexAttribL1d
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glGetProgramPipelineInfoLog
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramPipelineInfoLog
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GetProgramPipelineInfoLog
argument_list|(
name|pipeline
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glValidateProgramPipeline
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glValidateProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ValidateProgramPipeline
argument_list|(
name|pipeline
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix4x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix4x3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix3x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix3x4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix4x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix4x2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix2x4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix2x4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix3x2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix3x2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix2x3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix2x3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix4x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix4x3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix3x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix3x4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4x2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix4x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix4x2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix2x4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix2x4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3x2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix3x2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix3x2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2x3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix2x3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix2x3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniformMatrix2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniformMatrix2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniformMatrix2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLdouble v3
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform4i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform4i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glProgramUniform3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform3i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform3i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glProgramUniform2uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|,
argument|GLdouble v1
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform2i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform2i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glProgramUniform1uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1uiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1uiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1ui
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1ui
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniform1dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1dv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLdouble *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1dv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1d
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLdouble v0
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1d
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniform1fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1fv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1fv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1f
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1f
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glProgramUniform1iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1iv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1iv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramUniform1i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramUniform1i
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramUniform1i
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glGetProgramPipelineiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramPipelineiv
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GetProgramPipelineiv
argument_list|(
name|pipeline
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glIsProgramPipeline
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
return|return
name|d_4_1_Core
operator|->
name|IsProgramPipeline
argument_list|(
name|pipeline
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenProgramPipelines
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GenProgramPipelines
argument_list|(
name|n
argument_list|,
name|pipelines
argument_list|)
block|; }
DECL|function|glDeleteProgramPipelines
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *pipelines
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|DeleteProgramPipelines
argument_list|(
name|n
argument_list|,
name|pipelines
argument_list|)
block|; }
DECL|function|glBindProgramPipeline
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindProgramPipeline
argument_list|(
argument|GLuint pipeline
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|BindProgramPipeline
argument_list|(
name|pipeline
argument_list|)
block|; }
DECL|function|glCreateShaderProgramv
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateShaderProgramv
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar *const *strings
argument_list|)
block|{
return|return
name|d_4_1_Core
operator|->
name|CreateShaderProgramv
argument_list|(
name|type
argument_list|,
name|count
argument_list|,
name|strings
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glActiveShaderProgram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glActiveShaderProgram
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ActiveShaderProgram
argument_list|(
name|pipeline
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glUseProgramStages
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUseProgramStages
argument_list|(
argument|GLuint pipeline
argument_list|,
argument|GLbitfield stages
argument_list|,
argument|GLuint program
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|UseProgramStages
argument_list|(
name|pipeline
argument_list|,
name|stages
argument_list|,
name|program
argument_list|)
block|; }
DECL|function|glProgramParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramParameteri
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint value
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramParameteri
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glProgramBinary
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum binaryFormat
argument_list|,
argument|const void *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ProgramBinary
argument_list|(
name|program
argument_list|,
name|binaryFormat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glGetProgramBinary
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramBinary
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLenum *binaryFormat
argument_list|,
argument|void *binary
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GetProgramBinary
argument_list|(
name|program
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|binaryFormat
argument_list|,
name|binary
argument_list|)
block|; }
DECL|function|glClearDepthf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearDepthf
argument_list|(
argument|GLfloat dd
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ClearDepthf
argument_list|(
name|dd
argument_list|)
block|; }
DECL|function|glDepthRangef
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDepthRangef
argument_list|(
argument|GLfloat n
argument_list|,
argument|GLfloat f
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|DepthRangef
argument_list|(
name|n
argument_list|,
name|f
argument_list|)
block|; }
DECL|function|glGetShaderPrecisionFormat
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetShaderPrecisionFormat
argument_list|(
argument|GLenum shadertype
argument_list|,
argument|GLenum precisiontype
argument_list|,
argument|GLint *range
argument_list|,
argument|GLint *precision
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|GetShaderPrecisionFormat
argument_list|(
name|shadertype
argument_list|,
name|precisiontype
argument_list|,
name|range
argument_list|,
name|precision
argument_list|)
block|; }
DECL|function|glShaderBinary
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glShaderBinary
argument_list|(
argument|GLsizei count
argument_list|,
argument|const GLuint *shaders
argument_list|,
argument|GLenum binaryformat
argument_list|,
argument|const void *binary
argument_list|,
argument|GLsizei length
argument_list|)
block|{
name|d_4_1_Core
operator|->
name|ShaderBinary
argument_list|(
name|count
argument_list|,
name|shaders
argument_list|,
name|binaryformat
argument_list|,
name|binary
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glReleaseShaderCompiler
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glReleaseShaderCompiler
argument_list|()
block|{
name|d_4_1_Core
operator|->
name|ReleaseShaderCompiler
argument_list|()
block|; }
comment|// OpenGL 4.2 core functions
DECL|function|glDrawTransformFeedbackStreamInstanced
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawTransformFeedbackStreamInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLuint stream
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|DrawTransformFeedbackStreamInstanced
argument_list|(
name|mode
argument_list|,
name|id
argument_list|,
name|stream
argument_list|,
name|instancecount
argument_list|)
block|; }
DECL|function|glDrawTransformFeedbackInstanced
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawTransformFeedbackInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|DrawTransformFeedbackInstanced
argument_list|(
name|mode
argument_list|,
name|id
argument_list|,
name|instancecount
argument_list|)
block|; }
DECL|function|glTexStorage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexStorage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|TexStorage3D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
DECL|function|glTexStorage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexStorage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|TexStorage2D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTexStorage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexStorage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|TexStorage1D
argument_list|(
name|target
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glMemoryBarrier
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMemoryBarrier
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|MemoryBarrier
argument_list|(
name|barriers
argument_list|)
block|; }
DECL|function|glBindImageTexture
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindImageTexture
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLboolean layered
argument_list|,
argument|GLint layer
argument_list|,
argument|GLenum access
argument_list|,
argument|GLenum format
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|BindImageTexture
argument_list|(
name|unit
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layered
argument_list|,
name|layer
argument_list|,
name|access
argument_list|,
name|format
argument_list|)
block|; }
DECL|function|glGetActiveAtomicCounterBufferiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetActiveAtomicCounterBufferiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint bufferIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|GetActiveAtomicCounterBufferiv
argument_list|(
name|program
argument_list|,
name|bufferIndex
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetInternalformativ
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetInternalformativ
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|GetInternalformativ
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glDrawElementsInstancedBaseVertexBaseInstance
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawElementsInstancedBaseVertexBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|DrawElementsInstancedBaseVertexBaseInstance
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|,
name|basevertex
argument_list|,
name|baseinstance
argument_list|)
block|; }
DECL|function|glDrawElementsInstancedBaseInstance
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawElementsInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|DrawElementsInstancedBaseInstance
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|,
name|baseinstance
argument_list|)
block|; }
DECL|function|glDrawArraysInstancedBaseInstance
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawArraysInstancedBaseInstance
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLuint baseinstance
argument_list|)
block|{
name|d_4_2_Core
operator|->
name|DrawArraysInstancedBaseInstance
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|instancecount
argument_list|,
name|baseinstance
argument_list|)
block|; }
comment|// OpenGL 4.3 core functions
DECL|function|glGetObjectPtrLabel
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|GetObjectPtrLabel
argument_list|(
name|ptr
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glObjectPtrLabel
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glObjectPtrLabel
argument_list|(
argument|const void *ptr
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|ObjectPtrLabel
argument_list|(
name|ptr
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glGetObjectLabel
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *label
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|GetObjectLabel
argument_list|(
name|identifier
argument_list|,
name|name
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glObjectLabel
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glObjectLabel
argument_list|(
argument|GLenum identifier
argument_list|,
argument|GLuint name
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *label
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|ObjectLabel
argument_list|(
name|identifier
argument_list|,
name|name
argument_list|,
name|length
argument_list|,
name|label
argument_list|)
block|; }
DECL|function|glPopDebugGroup
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPopDebugGroup
argument_list|()
block|{
name|d_4_3_Core
operator|->
name|PopDebugGroup
argument_list|()
block|; }
DECL|function|glPushDebugGroup
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPushDebugGroup
argument_list|(
argument|GLenum source
argument_list|,
argument|GLuint id
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *message
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|PushDebugGroup
argument_list|(
name|source
argument_list|,
name|id
argument_list|,
name|length
argument_list|,
name|message
argument_list|)
block|; }
DECL|function|glGetDebugMessageLog
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetDebugMessageLog
argument_list|(
argument|GLuint count
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLenum *sources
argument_list|,
argument|GLenum *types
argument_list|,
argument|GLuint *ids
argument_list|,
argument|GLenum *severities
argument_list|,
argument|GLsizei *lengths
argument_list|,
argument|GLchar *messageLog
argument_list|)
block|{
return|return
name|d_4_3_Core
operator|->
name|GetDebugMessageLog
argument_list|(
name|count
argument_list|,
name|bufSize
argument_list|,
name|sources
argument_list|,
name|types
argument_list|,
name|ids
argument_list|,
name|severities
argument_list|,
name|lengths
argument_list|,
name|messageLog
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDebugMessageCallback
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDebugMessageCallback
argument_list|(
argument|GLDEBUGPROC callback
argument_list|,
argument|const void *userParam
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|DebugMessageCallback
argument_list|(
name|callback
argument_list|,
name|userParam
argument_list|)
block|; }
DECL|function|glDebugMessageInsert
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDebugMessageInsert
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint id
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei length
argument_list|,
argument|const GLchar *buf
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|DebugMessageInsert
argument_list|(
name|source
argument_list|,
name|type
argument_list|,
name|id
argument_list|,
name|severity
argument_list|,
name|length
argument_list|,
name|buf
argument_list|)
block|; }
DECL|function|glDebugMessageControl
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDebugMessageControl
argument_list|(
argument|GLenum source
argument_list|,
argument|GLenum type
argument_list|,
argument|GLenum severity
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *ids
argument_list|,
argument|GLboolean enabled
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|DebugMessageControl
argument_list|(
name|source
argument_list|,
name|type
argument_list|,
name|severity
argument_list|,
name|count
argument_list|,
name|ids
argument_list|,
name|enabled
argument_list|)
block|; }
DECL|function|glVertexBindingDivisor
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexBindingDivisor
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|VertexBindingDivisor
argument_list|(
name|bindingindex
argument_list|,
name|divisor
argument_list|)
block|; }
DECL|function|glVertexAttribBinding
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribBinding
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|VertexAttribBinding
argument_list|(
name|attribindex
argument_list|,
name|bindingindex
argument_list|)
block|; }
DECL|function|glVertexAttribLFormat
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribLFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|VertexAttribLFormat
argument_list|(
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexAttribIFormat
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribIFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|VertexAttribIFormat
argument_list|(
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexAttribFormat
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexAttribFormat
argument_list|(
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|VertexAttribFormat
argument_list|(
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glBindVertexBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindVertexBuffer
argument_list|(
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|BindVertexBuffer
argument_list|(
name|bindingindex
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glTextureView
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureView
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum target
argument_list|,
argument|GLuint origtexture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint minlevel
argument_list|,
argument|GLuint numlevels
argument_list|,
argument|GLuint minlayer
argument_list|,
argument|GLuint numlayers
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|TextureView
argument_list|(
name|texture
argument_list|,
name|target
argument_list|,
name|origtexture
argument_list|,
name|internalformat
argument_list|,
name|minlevel
argument_list|,
name|numlevels
argument_list|,
name|minlayer
argument_list|,
name|numlayers
argument_list|)
block|; }
DECL|function|glTexStorage3DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexStorage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|TexStorage3DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTexStorage2DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexStorage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|TexStorage2DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTexBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|TexBufferRange
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glShaderStorageBlockBinding
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glShaderStorageBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint storageBlockIndex
argument_list|,
argument|GLuint storageBlockBinding
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|ShaderStorageBlockBinding
argument_list|(
name|program
argument_list|,
name|storageBlockIndex
argument_list|,
name|storageBlockBinding
argument_list|)
block|; }
DECL|function|glGetProgramResourceLocationIndex
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramResourceLocationIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_4_3_Core
operator|->
name|GetProgramResourceLocationIndex
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetProgramResourceLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramResourceLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_4_3_Core
operator|->
name|GetProgramResourceLocation
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetProgramResourceiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramResourceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei propCount
argument_list|,
argument|const GLenum *props
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|GetProgramResourceiv
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|index
argument_list|,
name|propCount
argument_list|,
name|props
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramResourceName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramResourceName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|GetProgramResourceName
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetProgramResourceIndex
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramResourceIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_4_3_Core
operator|->
name|GetProgramResourceIndex
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetProgramInterfaceiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetProgramInterfaceiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum programInterface
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|GetProgramInterfaceiv
argument_list|(
name|program
argument_list|,
name|programInterface
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMultiDrawElementsIndirect
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiDrawElementsIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|MultiDrawElementsIndirect
argument_list|(
name|mode
argument_list|,
name|type
argument_list|,
name|indirect
argument_list|,
name|drawcount
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glMultiDrawArraysIndirect
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiDrawArraysIndirect
argument_list|(
argument|GLenum mode
argument_list|,
argument|const void *indirect
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|MultiDrawArraysIndirect
argument_list|(
name|mode
argument_list|,
name|indirect
argument_list|,
name|drawcount
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glInvalidateSubFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateSubFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|InvalidateSubFramebuffer
argument_list|(
name|target
argument_list|,
name|numAttachments
argument_list|,
name|attachments
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glInvalidateFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|InvalidateFramebuffer
argument_list|(
name|target
argument_list|,
name|numAttachments
argument_list|,
name|attachments
argument_list|)
block|; }
DECL|function|glInvalidateBufferData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateBufferData
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|InvalidateBufferData
argument_list|(
name|buffer
argument_list|)
block|; }
DECL|function|glInvalidateBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|InvalidateBufferSubData
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glInvalidateTexImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateTexImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|InvalidateTexImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glInvalidateTexSubImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateTexSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|InvalidateTexSubImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
DECL|function|glGetInternalformati64v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetInternalformati64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|GetInternalformati64v
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetFramebufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetFramebufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|GetFramebufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFramebufferParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFramebufferParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|FramebufferParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glCopyImageSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyImageSubData
argument_list|(
argument|GLuint srcName
argument_list|,
argument|GLenum srcTarget
argument_list|,
argument|GLint srcLevel
argument_list|,
argument|GLint srcX
argument_list|,
argument|GLint srcY
argument_list|,
argument|GLint srcZ
argument_list|,
argument|GLuint dstName
argument_list|,
argument|GLenum dstTarget
argument_list|,
argument|GLint dstLevel
argument_list|,
argument|GLint dstX
argument_list|,
argument|GLint dstY
argument_list|,
argument|GLint dstZ
argument_list|,
argument|GLsizei srcWidth
argument_list|,
argument|GLsizei srcHeight
argument_list|,
argument|GLsizei srcDepth
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|CopyImageSubData
argument_list|(
name|srcName
argument_list|,
name|srcTarget
argument_list|,
name|srcLevel
argument_list|,
name|srcX
argument_list|,
name|srcY
argument_list|,
name|srcZ
argument_list|,
name|dstName
argument_list|,
name|dstTarget
argument_list|,
name|dstLevel
argument_list|,
name|dstX
argument_list|,
name|dstY
argument_list|,
name|dstZ
argument_list|,
name|srcWidth
argument_list|,
name|srcHeight
argument_list|,
name|srcDepth
argument_list|)
block|; }
DECL|function|glDispatchComputeIndirect
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDispatchComputeIndirect
argument_list|(
argument|GLintptr indirect
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|DispatchComputeIndirect
argument_list|(
name|indirect
argument_list|)
block|; }
DECL|function|glDispatchCompute
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDispatchCompute
argument_list|(
argument|GLuint num_groups_x
argument_list|,
argument|GLuint num_groups_y
argument_list|,
argument|GLuint num_groups_z
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|DispatchCompute
argument_list|(
name|num_groups_x
argument_list|,
name|num_groups_y
argument_list|,
name|num_groups_z
argument_list|)
block|; }
DECL|function|glClearBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|ClearBufferSubData
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glClearBufferData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_3_Core
operator|->
name|ClearBufferData
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
comment|// OpenGL 4.4 core functions
DECL|function|glBindVertexBuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindVertexBuffers
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|,
argument|const GLintptr *offsets
argument_list|,
argument|const GLsizei *strides
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|BindVertexBuffers
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|buffers
argument_list|,
name|offsets
argument_list|,
name|strides
argument_list|)
block|; }
DECL|function|glBindImageTextures
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindImageTextures
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *textures
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|BindImageTextures
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glBindSamplers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindSamplers
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *samplers
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|BindSamplers
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|samplers
argument_list|)
block|; }
DECL|function|glBindTextures
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindTextures
argument_list|(
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *textures
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|BindTextures
argument_list|(
name|first
argument_list|,
name|count
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glBindBuffersRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindBuffersRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|,
argument|const GLintptr *offsets
argument_list|,
argument|const GLsizeiptr *sizes
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|BindBuffersRange
argument_list|(
name|target
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|buffers
argument_list|,
name|offsets
argument_list|,
name|sizes
argument_list|)
block|; }
DECL|function|glBindBuffersBase
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindBuffersBase
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|BindBuffersBase
argument_list|(
name|target
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glClearTexSubImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearTexSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|ClearTexSubImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glClearTexImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearTexImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|ClearTexImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferStorage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const void *data
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
name|d_4_4_Core
operator|->
name|BufferStorage
argument_list|(
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|flags
argument_list|)
block|; }
comment|// OpenGL 4.5 core functions
DECL|function|glTextureBarrier
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureBarrier
argument_list|()
block|{
name|d_4_5_Core
operator|->
name|TextureBarrier
argument_list|()
block|; }
DECL|function|glReadnPixels
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glReadnPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ReadnPixels
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetnUniformuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnUniformuiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetnUniformuiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnUniformiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetnUniformiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnUniformfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetnUniformfv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnUniformdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnUniformdv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetnUniformdv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|bufSize
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetnTexImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetnTexImage
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetnCompressedTexImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint lod
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetnCompressedTexImage
argument_list|(
name|target
argument_list|,
name|lod
argument_list|,
name|bufSize
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetGraphicsResetStatus
specifier|inline
name|GLenum
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetGraphicsResetStatus
argument_list|()
block|{
return|return
name|d_4_5_Core
operator|->
name|GetGraphicsResetStatus
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetCompressedTextureSubImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetCompressedTextureSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetCompressedTextureSubImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|bufSize
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetTextureSubImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureSubImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureSubImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glMemoryBarrierByRegion
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMemoryBarrierByRegion
argument_list|(
argument|GLbitfield barriers
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|MemoryBarrierByRegion
argument_list|(
name|barriers
argument_list|)
block|; }
DECL|function|glCreateQueries
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateQueries
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateQueries
argument_list|(
name|target
argument_list|,
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glCreateProgramPipelines
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateProgramPipelines
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *pipelines
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateProgramPipelines
argument_list|(
name|n
argument_list|,
name|pipelines
argument_list|)
block|; }
DECL|function|glCreateSamplers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateSamplers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *samplers
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateSamplers
argument_list|(
name|n
argument_list|,
name|samplers
argument_list|)
block|; }
DECL|function|glGetVertexArrayIndexed64iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexArrayIndexed64iv
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetVertexArrayIndexed64iv
argument_list|(
name|vaobj
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glGetVertexArrayIndexediv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexArrayIndexediv
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetVertexArrayIndexediv
argument_list|(
name|vaobj
argument_list|,
name|index
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glGetVertexArrayiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetVertexArrayiv
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetVertexArrayiv
argument_list|(
name|vaobj
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glVertexArrayBindingDivisor
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayBindingDivisor
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint divisor
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayBindingDivisor
argument_list|(
name|vaobj
argument_list|,
name|bindingindex
argument_list|,
name|divisor
argument_list|)
block|; }
DECL|function|glVertexArrayAttribLFormat
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayAttribLFormat
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayAttribLFormat
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexArrayAttribIFormat
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayAttribIFormat
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayAttribIFormat
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexArrayAttribFormat
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayAttribFormat
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLuint relativeoffset
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayAttribFormat
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|relativeoffset
argument_list|)
block|; }
DECL|function|glVertexArrayAttribBinding
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayAttribBinding
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint attribindex
argument_list|,
argument|GLuint bindingindex
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayAttribBinding
argument_list|(
name|vaobj
argument_list|,
name|attribindex
argument_list|,
name|bindingindex
argument_list|)
block|; }
DECL|function|glVertexArrayVertexBuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayVertexBuffers
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *buffers
argument_list|,
argument|const GLintptr *offsets
argument_list|,
argument|const GLsizei *strides
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayVertexBuffers
argument_list|(
name|vaobj
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|buffers
argument_list|,
name|offsets
argument_list|,
name|strides
argument_list|)
block|; }
DECL|function|glVertexArrayVertexBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayVertexBuffer
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint bindingindex
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei stride
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayVertexBuffer
argument_list|(
name|vaobj
argument_list|,
name|bindingindex
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|stride
argument_list|)
block|; }
DECL|function|glVertexArrayElementBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexArrayElementBuffer
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|VertexArrayElementBuffer
argument_list|(
name|vaobj
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glEnableVertexArrayAttrib
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEnableVertexArrayAttrib
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|EnableVertexArrayAttrib
argument_list|(
name|vaobj
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glDisableVertexArrayAttrib
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDisableVertexArrayAttrib
argument_list|(
argument|GLuint vaobj
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|DisableVertexArrayAttrib
argument_list|(
name|vaobj
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glCreateVertexArrays
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateVertexArrays
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glGetTextureParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureParameteriv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureParameteriv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureParameterIuiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureParameterIuiv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureParameterIiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureParameterIiv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureParameterfv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureParameterfv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureLevelParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureLevelParameteriv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureLevelParameteriv
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTextureLevelParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureLevelParameterfv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureLevelParameterfv
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetCompressedTextureImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetCompressedTextureImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetCompressedTextureImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|bufSize
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetTextureImage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTextureImage
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTextureImage
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glBindTextureUnit
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBindTextureUnit
argument_list|(
argument|GLuint unit
argument_list|,
argument|GLuint texture
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|BindTextureUnit
argument_list|(
name|unit
argument_list|,
name|texture
argument_list|)
block|; }
DECL|function|glGenerateTextureMipmap
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenerateTextureMipmap
argument_list|(
argument|GLuint texture
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GenerateTextureMipmap
argument_list|(
name|texture
argument_list|)
block|; }
DECL|function|glTextureParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureParameteriv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureParameteriv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTextureParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureParameterIuiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureParameterIuiv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTextureParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureParameterIiv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureParameterIiv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTextureParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureParameteri
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureParameteri
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTextureParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureParameterfv
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureParameterfv
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTextureParameterf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureParameterf
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureParameterf
argument_list|(
name|texture
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glCopyTextureSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTextureSubImage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CopyTextureSubImage3D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTextureSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTextureSubImage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CopyTextureSubImage2D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTextureSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyTextureSubImage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CopyTextureSubImage1D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCompressedTextureSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTextureSubImage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CompressedTextureSubImage3D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTextureSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTextureSubImage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CompressedTextureSubImage2D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTextureSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCompressedTextureSubImage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CompressedTextureSubImage1D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glTextureSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureSubImage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureSubImage3D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureSubImage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureSubImage2D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureSubImage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureSubImage1D
argument_list|(
name|texture
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTextureStorage3DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureStorage3DMultisample
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureStorage3DMultisample
argument_list|(
name|texture
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTextureStorage2DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureStorage2DMultisample
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureStorage2DMultisample
argument_list|(
name|texture
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTextureStorage3D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureStorage3D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureStorage3D
argument_list|(
name|texture
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|)
block|; }
DECL|function|glTextureStorage2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureStorage2D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureStorage2D
argument_list|(
name|texture
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTextureStorage1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureStorage1D
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLsizei levels
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureStorage1D
argument_list|(
name|texture
argument_list|,
name|levels
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glTextureBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureBufferRange
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureBufferRange
argument_list|(
name|texture
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glTextureBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTextureBuffer
argument_list|(
argument|GLuint texture
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TextureBuffer
argument_list|(
name|texture
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glCreateTextures
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateTextures
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateTextures
argument_list|(
name|target
argument_list|,
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glGetNamedRenderbufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetNamedRenderbufferParameteriv
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetNamedRenderbufferParameteriv
argument_list|(
name|renderbuffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glNamedRenderbufferStorageMultisample
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedRenderbufferStorageMultisample
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedRenderbufferStorageMultisample
argument_list|(
name|renderbuffer
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glNamedRenderbufferStorage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedRenderbufferStorage
argument_list|(
argument|GLuint renderbuffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedRenderbufferStorage
argument_list|(
name|renderbuffer
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCreateRenderbuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glGetNamedFramebufferAttachmentParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetNamedFramebufferAttachmentParameteriv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetNamedFramebufferAttachmentParameteriv
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedFramebufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetNamedFramebufferParameteriv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetNamedFramebufferParameteriv
argument_list|(
name|framebuffer
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glCheckNamedFramebufferStatus
specifier|inline
name|GLenum
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCheckNamedFramebufferStatus
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum target
argument_list|)
block|{
return|return
name|d_4_5_Core
operator|->
name|CheckNamedFramebufferStatus
argument_list|(
name|framebuffer
argument_list|,
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBlitNamedFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBlitNamedFramebuffer
argument_list|(
argument|GLuint readFramebuffer
argument_list|,
argument|GLuint drawFramebuffer
argument_list|,
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|BlitNamedFramebuffer
argument_list|(
name|readFramebuffer
argument_list|,
name|drawFramebuffer
argument_list|,
name|srcX0
argument_list|,
name|srcY0
argument_list|,
name|srcX1
argument_list|,
name|srcY1
argument_list|,
name|dstX0
argument_list|,
name|dstY0
argument_list|,
name|dstX1
argument_list|,
name|dstY1
argument_list|,
name|mask
argument_list|,
name|filter
argument_list|)
block|; }
DECL|function|glClearNamedFramebufferfi
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearNamedFramebufferfi
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLfloat depth
argument_list|,
argument|GLint stencil
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ClearNamedFramebufferfi
argument_list|(
name|framebuffer
argument_list|,
name|buffer
argument_list|,
name|depth
argument_list|,
name|stencil
argument_list|)
block|; }
DECL|function|glClearNamedFramebufferfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearNamedFramebufferfv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ClearNamedFramebufferfv
argument_list|(
name|framebuffer
argument_list|,
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glClearNamedFramebufferuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearNamedFramebufferuiv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ClearNamedFramebufferuiv
argument_list|(
name|framebuffer
argument_list|,
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glClearNamedFramebufferiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearNamedFramebufferiv
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ClearNamedFramebufferiv
argument_list|(
name|framebuffer
argument_list|,
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glInvalidateNamedFramebufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateNamedFramebufferSubData
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|InvalidateNamedFramebufferSubData
argument_list|(
name|framebuffer
argument_list|,
name|numAttachments
argument_list|,
name|attachments
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glInvalidateNamedFramebufferData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInvalidateNamedFramebufferData
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei numAttachments
argument_list|,
argument|const GLenum *attachments
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|InvalidateNamedFramebufferData
argument_list|(
name|framebuffer
argument_list|,
name|numAttachments
argument_list|,
name|attachments
argument_list|)
block|; }
DECL|function|glNamedFramebufferReadBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedFramebufferReadBuffer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum src
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedFramebufferReadBuffer
argument_list|(
name|framebuffer
argument_list|,
name|src
argument_list|)
block|; }
DECL|function|glNamedFramebufferDrawBuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedFramebufferDrawBuffers
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedFramebufferDrawBuffers
argument_list|(
name|framebuffer
argument_list|,
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
DECL|function|glNamedFramebufferDrawBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedFramebufferDrawBuffer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum buf
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedFramebufferDrawBuffer
argument_list|(
name|framebuffer
argument_list|,
name|buf
argument_list|)
block|; }
DECL|function|glNamedFramebufferTextureLayer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedFramebufferTextureLayer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedFramebufferTextureLayer
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layer
argument_list|)
block|; }
DECL|function|glNamedFramebufferTexture
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedFramebufferTexture
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedFramebufferTexture
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glNamedFramebufferParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedFramebufferParameteri
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedFramebufferParameteri
argument_list|(
name|framebuffer
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glNamedFramebufferRenderbuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedFramebufferRenderbuffer
argument_list|(
argument|GLuint framebuffer
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedFramebufferRenderbuffer
argument_list|(
name|framebuffer
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glCreateFramebuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glGetNamedBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetNamedBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetNamedBufferSubData
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetNamedBufferPointerv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetNamedBufferPointerv
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|void * *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetNamedBufferPointerv
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedBufferParameteri64v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetNamedBufferParameteri64v
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetNamedBufferParameteri64v
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetNamedBufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetNamedBufferParameteriv
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetNamedBufferParameteriv
argument_list|(
name|buffer
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFlushMappedNamedBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFlushMappedNamedBufferRange
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei length
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|FlushMappedNamedBufferRange
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glUnmapNamedBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glUnmapNamedBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
return|return
name|d_4_5_Core
operator|->
name|UnmapNamedBuffer
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMapNamedBufferRange
specifier|inline
name|void
operator|*
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapNamedBufferRange
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei length
argument_list|,
argument|GLbitfield access
argument_list|)
block|{
return|return
name|d_4_5_Core
operator|->
name|MapNamedBufferRange
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMapNamedBuffer
specifier|inline
name|void
operator|*
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapNamedBuffer
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum access
argument_list|)
block|{
return|return
name|d_4_5_Core
operator|->
name|MapNamedBuffer
argument_list|(
name|buffer
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glClearNamedBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearNamedBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ClearNamedBufferSubData
argument_list|(
name|buffer
argument_list|,
name|internalformat
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glClearNamedBufferData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearNamedBufferData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ClearNamedBufferData
argument_list|(
name|buffer
argument_list|,
name|internalformat
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCopyNamedBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyNamedBufferSubData
argument_list|(
argument|GLuint readBuffer
argument_list|,
argument|GLuint writeBuffer
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizei size
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CopyNamedBufferSubData
argument_list|(
name|readBuffer
argument_list|,
name|writeBuffer
argument_list|,
name|readOffset
argument_list|,
name|writeOffset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glNamedBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedBufferSubData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedBufferSubData
argument_list|(
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glNamedBufferData
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedBufferData
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLsizei size
argument_list|,
argument|const void *data
argument_list|,
argument|GLenum usage
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedBufferData
argument_list|(
name|buffer
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|; }
DECL|function|glNamedBufferStorage
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNamedBufferStorage
argument_list|(
argument|GLuint buffer
argument_list|,
argument|GLsizei size
argument_list|,
argument|const void *data
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|NamedBufferStorage
argument_list|(
name|buffer
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|flags
argument_list|)
block|; }
DECL|function|glCreateBuffers
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glGetTransformFeedbacki64_v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTransformFeedbacki64_v
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint64 *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTransformFeedbacki64_v
argument_list|(
name|xfb
argument_list|,
name|pname
argument_list|,
name|index
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glGetTransformFeedbacki_v
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTransformFeedbacki_v
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTransformFeedbacki_v
argument_list|(
name|xfb
argument_list|,
name|pname
argument_list|,
name|index
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glGetTransformFeedbackiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTransformFeedbackiv
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *param
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|GetTransformFeedbackiv
argument_list|(
name|xfb
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTransformFeedbackBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTransformFeedbackBufferRange
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizei size
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TransformFeedbackBufferRange
argument_list|(
name|xfb
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glTransformFeedbackBufferBase
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTransformFeedbackBufferBase
argument_list|(
argument|GLuint xfb
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|TransformFeedbackBufferBase
argument_list|(
name|xfb
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glCreateTransformFeedbacks
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCreateTransformFeedbacks
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|CreateTransformFeedbacks
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glClipControl
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClipControl
argument_list|(
argument|GLenum origin
argument_list|,
argument|GLenum depth
argument_list|)
block|{
name|d_4_5_Core
operator|->
name|ClipControl
argument_list|(
name|origin
argument_list|,
name|depth
argument_list|)
block|; }
comment|// OpenGL 1.0 deprecated functions
DECL|function|glTranslatef
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTranslatef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Translatef
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glTranslated
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTranslated
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Translated
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glScalef
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glScalef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Scalef
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glScaled
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glScaled
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Scaled
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRotatef
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRotatef
argument_list|(
argument|GLfloat angle
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rotatef
argument_list|(
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRotated
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRotated
argument_list|(
argument|GLdouble angle
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rotated
argument_list|(
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glPushMatrix
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPushMatrix
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PushMatrix
argument_list|()
block|; }
DECL|function|glPopMatrix
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPopMatrix
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PopMatrix
argument_list|()
block|; }
DECL|function|glOrtho
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glOrtho
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Ortho
argument_list|(
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
block|; }
DECL|function|glMultMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MultMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMultMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MultMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMatrixMode
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMatrixMode
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MatrixMode
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glLoadMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLoadMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LoadMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLoadMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LoadMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadIdentity
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLoadIdentity
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|LoadIdentity
argument_list|()
block|; }
DECL|function|glFrustum
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFrustum
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Frustum
argument_list|(
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
block|; }
DECL|function|glIsList
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIsList
argument_list|(
argument|GLuint list
argument_list|)
block|{
return|return
name|d_1_0_Deprecated
operator|->
name|IsList
argument_list|(
name|list
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetTexGeniv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexGeniv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexGenfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexGenfv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexGendv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexGendv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexEnviv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexEnviv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexEnvfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexEnvfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetPolygonStipple
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetPolygonStipple
argument_list|(
argument|GLubyte *mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPolygonStipple
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glGetPixelMapusv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLushort *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPixelMapusv
argument_list|(
name|map
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetPixelMapuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLuint *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPixelMapuiv
argument_list|(
name|map
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetPixelMapfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLfloat *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPixelMapfv
argument_list|(
name|map
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetMaterialiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMaterialiv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMaterialfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMaterialfv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMapiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMapiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMapiv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetMapfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMapfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMapfv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetMapdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMapdv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMapdv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetLightiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetLightiv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetLightfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetLightfv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetClipPlane
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|GLdouble *equation
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetClipPlane
argument_list|(
name|plane
argument_list|,
name|equation
argument_list|)
block|; }
DECL|function|glDrawPixels
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDrawPixels
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *pixels
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|DrawPixels
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyPixels
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum type
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|CopyPixels
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|type
argument_list|)
block|; }
DECL|function|glPixelMapusv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei mapsize
argument_list|,
argument|const GLushort *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelMapusv
argument_list|(
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPixelMapuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei mapsize
argument_list|,
argument|const GLuint *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelMapuiv
argument_list|(
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPixelMapfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei mapsize
argument_list|,
argument|const GLfloat *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelMapfv
argument_list|(
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPixelTransferi
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelTransferi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelTransferi
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelTransferf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelTransferf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelTransferf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelZoom
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPixelZoom
argument_list|(
argument|GLfloat xfactor
argument_list|,
argument|GLfloat yfactor
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelZoom
argument_list|(
name|xfactor
argument_list|,
name|yfactor
argument_list|)
block|; }
DECL|function|glAlphaFunc
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glAlphaFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLfloat ref
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|AlphaFunc
argument_list|(
name|func
argument_list|,
name|ref
argument_list|)
block|; }
DECL|function|glEvalPoint2
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalPoint2
argument_list|(
argument|GLint i
argument_list|,
argument|GLint j
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalPoint2
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
block|; }
DECL|function|glEvalMesh2
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalMesh2
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|,
argument|GLint j1
argument_list|,
argument|GLint j2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalMesh2
argument_list|(
name|mode
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|,
name|j1
argument_list|,
name|j2
argument_list|)
block|; }
DECL|function|glEvalPoint1
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalPoint1
argument_list|(
argument|GLint i
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalPoint1
argument_list|(
name|i
argument_list|)
block|; }
DECL|function|glEvalMesh1
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalMesh1
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalMesh1
argument_list|(
name|mode
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|)
block|; }
DECL|function|glEvalCoord2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord2fv
argument_list|(
argument|const GLfloat *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2fv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord2f
argument_list|(
argument|GLfloat u
argument_list|,
argument|GLfloat v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2f
argument_list|(
name|u
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glEvalCoord2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord2dv
argument_list|(
argument|const GLdouble *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2dv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord2d
argument_list|(
argument|GLdouble u
argument_list|,
argument|GLdouble v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2d
argument_list|(
name|u
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glEvalCoord1fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord1fv
argument_list|(
argument|const GLfloat *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1fv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord1f
argument_list|(
argument|GLfloat u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1f
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord1dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord1dv
argument_list|(
argument|const GLdouble *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1dv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEvalCoord1d
argument_list|(
argument|GLdouble u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1d
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glMapGrid2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapGrid2f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid2f
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|vn
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glMapGrid2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapGrid2d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid2d
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|vn
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glMapGrid1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapGrid1f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid1f
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|)
block|; }
DECL|function|glMapGrid1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMapGrid1d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid1d
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|)
block|; }
DECL|function|glMap2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMap2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map2f
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMap2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMap2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map2d
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMap1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMap1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map1f
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMap1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMap1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLdouble *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map1d
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glPushAttrib
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPushAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PushAttrib
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glPopAttrib
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPopAttrib
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PopAttrib
argument_list|()
block|; }
DECL|function|glAccum
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glAccum
argument_list|(
argument|GLenum op
argument_list|,
argument|GLfloat value
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Accum
argument_list|(
name|op
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glIndexMask
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexMask
argument_list|(
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|IndexMask
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glClearIndex
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearIndex
argument_list|(
argument|GLfloat c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ClearIndex
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glClearAccum
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClearAccum
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ClearAccum
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glPushName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPushName
argument_list|(
argument|GLuint name
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PushName
argument_list|(
name|name
argument_list|)
block|; }
DECL|function|glPopName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPopName
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PopName
argument_list|()
block|; }
DECL|function|glPassThrough
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPassThrough
argument_list|(
argument|GLfloat token
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PassThrough
argument_list|(
name|token
argument_list|)
block|; }
DECL|function|glLoadName
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLoadName
argument_list|(
argument|GLuint name
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LoadName
argument_list|(
name|name
argument_list|)
block|; }
DECL|function|glInitNames
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInitNames
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|InitNames
argument_list|()
block|; }
DECL|function|glRenderMode
specifier|inline
name|GLint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRenderMode
argument_list|(
argument|GLenum mode
argument_list|)
block|{
return|return
name|d_1_0_Deprecated
operator|->
name|RenderMode
argument_list|(
name|mode
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glSelectBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSelectBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLuint *buffer
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|SelectBuffer
argument_list|(
name|size
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glFeedbackBuffer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFeedbackBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLfloat *buffer
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|FeedbackBuffer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glTexGeniv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGeniv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexGeni
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexGeni
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGeni
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexGenfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGenfv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexGenf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexGenf
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGenf
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexGendv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGendv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexGend
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexGend
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGend
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexEnviv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnviv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexEnvi
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexEnvi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnvi
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexEnvfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnvfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexEnvf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexEnvf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnvf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glShadeModel
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glShadeModel
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ShadeModel
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glPolygonStipple
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPolygonStipple
argument_list|(
argument|const GLubyte *mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PolygonStipple
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glMaterialiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materialiv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMateriali
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMateriali
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materiali
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMaterialfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materialfv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMaterialf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMaterialf
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materialf
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLineStipple
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLineStipple
argument_list|(
argument|GLint factor
argument_list|,
argument|GLushort pattern
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LineStipple
argument_list|(
name|factor
argument_list|,
name|pattern
argument_list|)
block|; }
DECL|function|glLightModeliv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLightModeliv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModeliv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLightModeli
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLightModeli
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModeli
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLightModelfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLightModelfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModelfv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLightModelf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLightModelf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModelf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLightiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lightiv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLighti
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLighti
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lighti
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLightfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lightfv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLightf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLightf
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lightf
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFogiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogiv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogiv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFogi
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogi
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFogfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogfv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFogf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glColorMaterial
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorMaterial
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ColorMaterial
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glClipPlane
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|const GLdouble *equation
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ClipPlane
argument_list|(
name|plane
argument_list|,
name|equation
argument_list|)
block|; }
DECL|function|glVertex4sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex2sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2s
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertex2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2i
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertex2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2f
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertex2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertex2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2d
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glTexCoord4sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4s
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4i
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4f
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord4d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4d
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3s
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3i
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3f
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord3d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3d
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord2sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2s
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2i
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2f
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord2d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2d
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord1sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1s
argument_list|(
argument|GLshort s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1s
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glTexCoord1iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1i
argument_list|(
argument|GLint s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1i
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glTexCoord1fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1f
argument_list|(
argument|GLfloat s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1f
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glTexCoord1dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoord1d
argument_list|(
argument|GLdouble s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1d
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glRectsv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRectsv
argument_list|(
argument|const GLshort *v1
argument_list|,
argument|const GLshort *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectsv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRects
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRects
argument_list|(
argument|GLshort x1
argument_list|,
argument|GLshort y1
argument_list|,
argument|GLshort x2
argument_list|,
argument|GLshort y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rects
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRectiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRectiv
argument_list|(
argument|const GLint *v1
argument_list|,
argument|const GLint *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectiv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRecti
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRecti
argument_list|(
argument|GLint x1
argument_list|,
argument|GLint y1
argument_list|,
argument|GLint x2
argument_list|,
argument|GLint y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Recti
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRectfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRectfv
argument_list|(
argument|const GLfloat *v1
argument_list|,
argument|const GLfloat *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectfv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRectf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRectf
argument_list|(
argument|GLfloat x1
argument_list|,
argument|GLfloat y1
argument_list|,
argument|GLfloat x2
argument_list|,
argument|GLfloat y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectf
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRectdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRectdv
argument_list|(
argument|const GLdouble *v1
argument_list|,
argument|const GLdouble *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectdv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRectd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRectd
argument_list|(
argument|GLdouble x1
argument_list|,
argument|GLdouble y1
argument_list|,
argument|GLdouble x2
argument_list|,
argument|GLdouble y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectd
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRasterPos4sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos2sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2s
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glRasterPos2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2i
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glRasterPos2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2f
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glRasterPos2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glRasterPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2d
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glNormal3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3s
argument_list|(
argument|GLshort nx
argument_list|,
argument|GLshort ny
argument_list|,
argument|GLshort nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3s
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3i
argument_list|(
argument|GLint nx
argument_list|,
argument|GLint ny
argument_list|,
argument|GLint nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3i
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3f
argument_list|(
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3f
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3d
argument_list|(
argument|GLdouble nx
argument_list|,
argument|GLdouble ny
argument_list|,
argument|GLdouble nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3d
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3bv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3b
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormal3b
argument_list|(
argument|GLbyte nx
argument_list|,
argument|GLbyte ny
argument_list|,
argument|GLbyte nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3b
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glIndexsv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexsv
argument_list|(
argument|const GLshort *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexsv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexs
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexs
argument_list|(
argument|GLshort c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexs
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexiv
argument_list|(
argument|const GLint *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexiv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexi
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexi
argument_list|(
argument|GLint c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexi
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexfv
argument_list|(
argument|const GLfloat *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexfv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexf
argument_list|(
argument|GLfloat c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexf
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexdv
argument_list|(
argument|const GLdouble *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexdv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexd
argument_list|(
argument|GLdouble c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexd
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glEnd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEnd
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|End
argument_list|()
block|; }
DECL|function|glEdgeFlagv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEdgeFlagv
argument_list|(
argument|const GLboolean *flag
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EdgeFlagv
argument_list|(
name|flag
argument_list|)
block|; }
DECL|function|glEdgeFlag
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEdgeFlag
argument_list|(
argument|GLboolean flag
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EdgeFlag
argument_list|(
name|flag
argument_list|)
block|; }
DECL|function|glColor4usv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4usv
argument_list|(
argument|const GLushort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4usv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4us
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|,
argument|GLushort alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4us
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4uiv
argument_list|(
argument|const GLuint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4uiv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|,
argument|GLuint alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4ui
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4ubv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4ubv
argument_list|(
argument|const GLubyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4ubv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4ub
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|,
argument|GLubyte alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4ub
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|,
argument|GLshort alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4s
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|,
argument|GLint alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4i
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4f
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|,
argument|GLdouble alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4d
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4bv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4b
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor4b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|,
argument|GLbyte alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4b
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor3usv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3usv
argument_list|(
argument|const GLushort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3usv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3us
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3us
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3uiv
argument_list|(
argument|const GLuint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3uiv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3ui
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3ubv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3ubv
argument_list|(
argument|const GLubyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3ubv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3ub
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3ub
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3s
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3i
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3f
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3d
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3bv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3b
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3b
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glBitmap
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBitmap
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLfloat xorig
argument_list|,
argument|GLfloat yorig
argument_list|,
argument|GLfloat xmove
argument_list|,
argument|GLfloat ymove
argument_list|,
argument|const GLubyte *bitmap
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Bitmap
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|xorig
argument_list|,
name|yorig
argument_list|,
name|xmove
argument_list|,
name|ymove
argument_list|,
name|bitmap
argument_list|)
block|; }
DECL|function|glBegin
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glBegin
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Begin
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glListBase
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glListBase
argument_list|(
argument|GLuint base
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ListBase
argument_list|(
name|base
argument_list|)
block|; }
DECL|function|glGenLists
specifier|inline
name|GLuint
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGenLists
argument_list|(
argument|GLsizei range
argument_list|)
block|{
return|return
name|d_1_0_Deprecated
operator|->
name|GenLists
argument_list|(
name|range
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteLists
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDeleteLists
argument_list|(
argument|GLuint list
argument_list|,
argument|GLsizei range
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|DeleteLists
argument_list|(
name|list
argument_list|,
name|range
argument_list|)
block|; }
DECL|function|glCallLists
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCallLists
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *lists
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|CallLists
argument_list|(
name|n
argument_list|,
name|type
argument_list|,
name|lists
argument_list|)
block|; }
DECL|function|glCallList
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCallList
argument_list|(
argument|GLuint list
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|CallList
argument_list|(
name|list
argument_list|)
block|; }
DECL|function|glEndList
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEndList
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|EndList
argument_list|()
block|; }
DECL|function|glNewList
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNewList
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|NewList
argument_list|(
name|list
argument_list|,
name|mode
argument_list|)
block|; }
comment|// OpenGL 1.1 deprecated functions
DECL|function|glPushClientAttrib
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPushClientAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|PushClientAttrib
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glPopClientAttrib
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPopClientAttrib
argument_list|()
block|{
name|d_1_1_Deprecated
operator|->
name|PopClientAttrib
argument_list|()
block|; }
DECL|function|glIndexubv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexubv
argument_list|(
argument|const GLubyte *c
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|Indexubv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexub
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexub
argument_list|(
argument|GLubyte c
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|Indexub
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glPrioritizeTextures
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glPrioritizeTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|const GLfloat *priorities
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|PrioritizeTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|,
name|priorities
argument_list|)
block|; }
DECL|function|glAreTexturesResident
specifier|inline
name|GLboolean
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glAreTexturesResident
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|GLboolean *residences
argument_list|)
block|{
return|return
name|d_1_1_Deprecated
operator|->
name|AreTexturesResident
argument_list|(
name|n
argument_list|,
name|textures
argument_list|,
name|residences
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glVertexPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|VertexPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glTexCoordPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|TexCoordPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glNormalPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormalPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|NormalPointer
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glInterleavedArrays
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glInterleavedArrays
argument_list|(
argument|GLenum format
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|InterleavedArrays
argument_list|(
name|format
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glGetPointerv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetPointerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|void * *params
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|GetPointerv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glIndexPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glIndexPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|IndexPointer
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glEnableClientState
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEnableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|EnableClientState
argument_list|(
name|array
argument_list|)
block|; }
DECL|function|glEdgeFlagPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glEdgeFlagPointer
argument_list|(
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|EdgeFlagPointer
argument_list|(
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glDisableClientState
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glDisableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|DisableClientState
argument_list|(
name|array
argument_list|)
block|; }
DECL|function|glColorPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|ColorPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glArrayElement
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glArrayElement
argument_list|(
argument|GLint i
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|ArrayElement
argument_list|(
name|i
argument_list|)
block|; }
comment|// OpenGL 1.2 deprecated functions
DECL|function|glColorTable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *table
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorTable
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|table
argument_list|)
block|; }
DECL|function|glColorTableParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorTableParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glColorTableParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorTableParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glCopyColorTable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyColorTable
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glGetColorTable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *table
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetColorTable
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|table
argument_list|)
block|; }
DECL|function|glGetColorTableParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetColorTableParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetColorTableParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetColorTableParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glColorSubTable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *data
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorSubTable
argument_list|(
name|target
argument_list|,
name|start
argument_list|,
name|count
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCopyColorSubTable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyColorSubTable
argument_list|(
name|target
argument_list|,
name|start
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glConvolutionFilter1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *image
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionFilter1D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glConvolutionFilter2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *image
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionFilter2D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glConvolutionParameterf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glConvolutionParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameterf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameteri
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glConvolutionParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glCopyConvolutionFilter1D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyConvolutionFilter1D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCopyConvolutionFilter2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glCopyConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyConvolutionFilter2D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glGetConvolutionFilter
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetConvolutionFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *image
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetConvolutionFilter
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glGetConvolutionParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetConvolutionParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetConvolutionParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetConvolutionParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetSeparableFilter
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetSeparableFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *row
argument_list|,
argument|void *column
argument_list|,
argument|void *span
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetSeparableFilter
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|span
argument_list|)
block|; }
DECL|function|glSeparableFilter2D
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSeparableFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const void *row
argument_list|,
argument|const void *column
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|SeparableFilter2D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
block|; }
DECL|function|glGetHistogram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *values
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetHistogram
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetHistogramParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetHistogramParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetHistogramParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetHistogramParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetHistogramParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetHistogramParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMinmax
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|void *values
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetMinmax
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetMinmaxParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMinmaxParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetMinmaxParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMinmaxParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetMinmaxParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetMinmaxParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glHistogram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|Histogram
argument_list|(
name|target
argument_list|,
name|width
argument_list|,
name|internalformat
argument_list|,
name|sink
argument_list|)
block|; }
DECL|function|glMinmax
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|Minmax
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|sink
argument_list|)
block|; }
DECL|function|glResetHistogram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glResetHistogram
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ResetHistogram
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glResetMinmax
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glResetMinmax
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ResetMinmax
argument_list|(
name|target
argument_list|)
block|; }
comment|// OpenGL 1.3 deprecated functions
DECL|function|glMultTransposeMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultTransposeMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultTransposeMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMultTransposeMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultTransposeMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultTransposeMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadTransposeMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLoadTransposeMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|LoadTransposeMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadTransposeMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glLoadTransposeMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|LoadTransposeMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMultiTexCoord4sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4s
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4i
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4f
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord4d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4d
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3s
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3i
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3f
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord3d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3d
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord2sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2s
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2i
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2f
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2d
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord1sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1s
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1i
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1f
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoord1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1d
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glClientActiveTexture
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glClientActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|ClientActiveTexture
argument_list|(
name|texture
argument_list|)
block|; }
comment|// OpenGL 1.4 deprecated functions
DECL|function|glWindowPos3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos2sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2s
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2i
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2f
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glWindowPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2d
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glSecondaryColorPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColorPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glSecondaryColor3usv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3usv
argument_list|(
argument|const GLushort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3usv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3us
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3us
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3uiv
argument_list|(
argument|const GLuint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3uiv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3ui
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3ubv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3ubv
argument_list|(
argument|const GLubyte *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3ubv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3ub
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3ub
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3sv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3s
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3s
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3iv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3i
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3i
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3fv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3f
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3f
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3dv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3d
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3d
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3bv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3b
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3b
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glFogCoordPointer
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogCoordPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const void *pointer
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordPointer
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glFogCoorddv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogCoorddv
argument_list|(
argument|const GLdouble *coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoorddv
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordd
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogCoordd
argument_list|(
argument|GLdouble coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordd
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogCoordfv
argument_list|(
argument|const GLfloat *coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordfv
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordf
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glFogCoordf
argument_list|(
argument|GLfloat coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordf
argument_list|(
name|coord
argument_list|)
block|; }
comment|// OpenGL 1.5 deprecated functions
comment|// OpenGL 2.0 deprecated functions
comment|// OpenGL 2.1 deprecated functions
comment|// OpenGL 3.0 deprecated functions
comment|// OpenGL 3.1 deprecated functions
comment|// OpenGL 3.2 deprecated functions
comment|// OpenGL 3.3 deprecated functions
DECL|function|glSecondaryColorP3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|SecondaryColorP3uiv
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glSecondaryColorP3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glSecondaryColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|SecondaryColorP3ui
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|ColorP4uiv
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|ColorP4ui
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *color
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|ColorP3uiv
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glColorP3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glColorP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint color
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|ColorP3ui
argument_list|(
name|type
argument_list|,
name|color
argument_list|)
block|; }
DECL|function|glNormalP3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormalP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|NormalP3uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glNormalP3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glNormalP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|NormalP3ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP4uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP4uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP4ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP4ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP3uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP3uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP3ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP3ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP2uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP2uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP2uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP2ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP2ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP2ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP1uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP1uiv
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP1uiv
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glMultiTexCoordP1ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glMultiTexCoordP1ui
argument_list|(
argument|GLenum texture
argument_list|,
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|MultiTexCoordP1ui
argument_list|(
name|texture
argument_list|,
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP4uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP4ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP3uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP3ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP2uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP2uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP2ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP2ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP1uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP1uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP1uiv
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glTexCoordP1ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glTexCoordP1ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint coords
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|TexCoordP1ui
argument_list|(
name|type
argument_list|,
name|coords
argument_list|)
block|; }
DECL|function|glVertexP4uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexP4uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|VertexP4uiv
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP4ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexP4ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|VertexP4ui
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP3uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexP3uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|VertexP3uiv
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP3ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexP3ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|VertexP3ui
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP2uiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexP2uiv
argument_list|(
argument|GLenum type
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|VertexP2uiv
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glVertexP2ui
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glVertexP2ui
argument_list|(
argument|GLenum type
argument_list|,
argument|GLuint value
argument_list|)
block|{
name|d_3_3_Deprecated
operator|->
name|VertexP2ui
argument_list|(
name|type
argument_list|,
name|value
argument_list|)
block|; }
comment|// OpenGL 4.0 deprecated functions
comment|// OpenGL 4.1 deprecated functions
comment|// OpenGL 4.2 deprecated functions
comment|// OpenGL 4.3 deprecated functions
comment|// OpenGL 4.4 deprecated functions
comment|// OpenGL 4.5 deprecated functions
DECL|function|glGetnMinmax
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *values
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnMinmax
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnHistogram
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *values
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnHistogram
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnSeparableFilter
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnSeparableFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei rowBufSize
argument_list|,
argument|void *row
argument_list|,
argument|GLsizei columnBufSize
argument_list|,
argument|void *column
argument_list|,
argument|void *span
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnSeparableFilter
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|rowBufSize
argument_list|,
name|row
argument_list|,
name|columnBufSize
argument_list|,
name|column
argument_list|,
name|span
argument_list|)
block|; }
DECL|function|glGetnConvolutionFilter
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnConvolutionFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *image
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnConvolutionFilter
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glGetnColorTable
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|void *table
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnColorTable
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|bufSize
argument_list|,
name|table
argument_list|)
block|; }
DECL|function|glGetnPolygonStipple
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnPolygonStipple
argument_list|(
argument|GLsizei bufSize
argument_list|,
argument|GLubyte *pattern
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnPolygonStipple
argument_list|(
name|bufSize
argument_list|,
name|pattern
argument_list|)
block|; }
DECL|function|glGetnPixelMapusv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLushort *values
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnPixelMapusv
argument_list|(
name|map
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnPixelMapuiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLuint *values
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnPixelMapuiv
argument_list|(
name|map
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnPixelMapfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *values
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnPixelMapfv
argument_list|(
name|map
argument_list|,
name|bufSize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetnMapiv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnMapiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLint *v
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnMapiv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|bufSize
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetnMapfv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnMapfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLfloat *v
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnMapfv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|bufSize
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetnMapdv
specifier|inline
name|void
name|QOpenGLFunctions_4_5_Compatibility
operator|::
name|glGetnMapdv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLdouble *v
argument_list|)
block|{
name|d_4_5_Deprecated
operator|->
name|GetnMapdv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|bufSize
argument_list|,
name|v
argument_list|)
block|; }
name|QT_END_NAMESPACE
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_OPENGL&& !QT_OPENGL_ES_2
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
