begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia.  For licensing terms and ** conditions see http://qt.digia.com/licensing.  For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 as published by the Free Software ** Foundation and appearing in the file LICENSE.LGPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU Lesser General Public License version 2.1 requirements ** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights.  These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** GNU General Public License Usage ** Alternatively, this file may be used under the terms of the GNU ** General Public License version 3.0 as published by the Free Software ** Foundation and appearing in the file LICENSE.GPL included in the ** packaging of this file.  Please review the following information to ** ensure the GNU General Public License version 3.0 requirements will be ** met: http://www.gnu.org/copyleft/gpl.html. ** ** ** $QT_END_LICENSE$ ** ** ** This file was generated by glgen version 0.1 ** Command line was: glgen ** ** glgen is Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** ** This is an auto-generated file. ** Do not edit! All changes made to it will be lost. ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGLVERSIONFUNCTIONS_3_2_CORE_H
end_ifndef
begin_define
DECL|macro|QOPENGLVERSIONFUNCTIONS_3_2_CORE_H
define|#
directive|define
name|QOPENGLVERSIONFUNCTIONS_3_2_CORE_H
end_define
begin_ifndef
ifndef|#
directive|ifndef
name|QT_NO_OPENGL
end_ifndef
begin_include
include|#
directive|include
file|<QtGui/QOpenGLVersionFunctions>
end_include
begin_include
include|#
directive|include
file|<QtGui/qopenglcontext.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|Q_GUI_EXPORT
name|QOpenGLFunctions_3_2_Core
range|:
name|public
name|QAbstractOpenGLFunctions
block|{
name|public
operator|:
name|QOpenGLFunctions_3_2_Core
argument_list|()
block|;
operator|~
name|QOpenGLFunctions_3_2_Core
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_OVERRIDE
block|;
comment|// OpenGL 1.0 core functions
name|void
name|glViewport
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glDepthRange
argument_list|(
argument|GLdouble nearVal
argument_list|,
argument|GLdouble farVal
argument_list|)
block|;
name|GLboolean
name|glIsEnabled
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glGetTexLevelParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexLevelParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|;
specifier|const
name|GLubyte
operator|*
name|glGetString
argument_list|(
argument|GLenum name
argument_list|)
block|;
name|void
name|glGetIntegerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetFloatv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|GLenum
name|glGetError
argument_list|()
block|;
name|void
name|glGetDoublev
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetBooleanv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLboolean *params
argument_list|)
block|;
name|void
name|glReadPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|;
name|void
name|glReadBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glPixelStorei
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPixelStoref
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glDepthFunc
argument_list|(
argument|GLenum func
argument_list|)
block|;
name|void
name|glStencilOp
argument_list|(
argument|GLenum fail
argument_list|,
argument|GLenum zfail
argument_list|,
argument|GLenum zpass
argument_list|)
block|;
name|void
name|glStencilFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glLogicOp
argument_list|(
argument|GLenum opcode
argument_list|)
block|;
name|void
name|glBlendFunc
argument_list|(
argument|GLenum sfactor
argument_list|,
argument|GLenum dfactor
argument_list|)
block|;
name|void
name|glFlush
argument_list|()
block|;
name|void
name|glFinish
argument_list|()
block|;
name|void
name|glEnable
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glDisable
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glDepthMask
argument_list|(
argument|GLboolean flag
argument_list|)
block|;
name|void
name|glColorMask
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|;
name|void
name|glStencilMask
argument_list|(
argument|GLuint mask
argument_list|)
block|;
name|void
name|glClearDepth
argument_list|(
argument|GLdouble depth
argument_list|)
block|;
name|void
name|glClearStencil
argument_list|(
argument|GLint s
argument_list|)
block|;
name|void
name|glClearColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glClear
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glDrawBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTexParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTexParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glScissor
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glPolygonMode
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glPointSize
argument_list|(
argument|GLfloat size
argument_list|)
block|;
name|void
name|glLineWidth
argument_list|(
argument|GLfloat width
argument_list|)
block|;
name|void
name|glHint
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glFrontFace
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glCullFace
argument_list|(
argument|GLenum mode
argument_list|)
block|;
comment|// OpenGL 1.1 core functions
name|void
name|glIndexubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexub
argument_list|(
argument|GLubyte c
argument_list|)
block|;
name|GLboolean
name|glIsTexture
argument_list|(
argument|GLuint texture
argument_list|)
block|;
name|void
name|glGenTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|;
name|void
name|glDeleteTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|;
name|void
name|glBindTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|;
name|void
name|glTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glCopyTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCopyTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glCopyTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glPolygonOffset
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|;
name|void
name|glGetPointerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|;
name|void
name|glDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|;
comment|// OpenGL 1.2 core functions
name|void
name|glCopyTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glDrawRangeElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|;
name|void
name|glBlendEquation
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glBlendColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
comment|// OpenGL 1.3 core functions
name|void
name|glGetCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLvoid *img
argument_list|)
block|;
name|void
name|glCompressedTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glSampleCoverage
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|;
name|void
name|glActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|;
comment|// OpenGL 1.4 core functions
name|void
name|glPointParameteriv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glPointParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPointParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPointParameterf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glMultiDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|;
name|void
name|glMultiDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|;
name|void
name|glBlendFuncSeparate
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|;
comment|// OpenGL 1.5 core functions
name|void
name|glGetBufferPointerv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glGetBufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLboolean
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|void
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|GLboolean
name|glIsBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGenBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|;
name|void
name|glDeleteBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|;
name|void
name|glBindBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGetQueryObjectuiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetQueryObjectiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetQueryiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndQuery
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glBeginQuery
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|GLboolean
name|glIsQuery
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glDeleteQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glGenQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
comment|// OpenGL 2.0 core functions
name|void
name|glVertexAttribPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glValidateProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glUniformMatrix4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform3iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform2iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform1iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform1fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|;
name|void
name|glUniform3i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|;
name|void
name|glUniform2i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|;
name|void
name|glUniform1i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|;
name|void
name|glUniform4f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|;
name|void
name|glUniform3f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glUniform2f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|;
name|void
name|glUniform1f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|;
name|void
name|glUseProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *string
argument_list|,
argument|const GLint *length
argument_list|)
block|;
name|void
name|glLinkProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|GLboolean
name|glIsShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|GLboolean
name|glIsProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glGetVertexAttribPointerv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|;
name|void
name|glGetVertexAttribiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribfv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetVertexAttribdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|GLint
name|glGetUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|;
name|void
name|glGetShaderInfoLog
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glGetShaderiv
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramInfoLog
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glGetProgramiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLint
name|glGetAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetAttachedShaders
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLuint *obj
argument_list|)
block|;
name|void
name|glGetActiveUniform
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glGetActiveAttrib
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glEnableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glDisableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glDetachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|;
name|void
name|glDeleteShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|void
name|glDeleteProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|GLuint
name|glCreateShader
argument_list|(
argument|GLenum type
argument_list|)
block|;
name|GLuint
name|glCreateProgram
argument_list|()
block|;
name|void
name|glCompileShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|void
name|glBindAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glAttachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|;
name|void
name|glStencilMaskSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilFuncSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilOpSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|;
name|void
name|glDrawBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|void
name|glBlendEquationSeparate
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|;
comment|// OpenGL 2.1 core functions
name|void
name|glUniformMatrix4x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix4x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
comment|// OpenGL 3.0 core functions
name|GLboolean
name|glIsVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|void
name|glGenVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|;
name|void
name|glDeleteVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|;
name|void
name|glBindVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|;
name|void
name|glFlushMappedBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|;
name|void
name|glFramebufferTextureLayer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|;
name|void
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|;
name|void
name|glGenerateMipmap
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGetFramebufferAttachmentParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glFramebufferRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|void
name|glFramebufferTexture3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|;
name|void
name|glFramebufferTexture2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glFramebufferTexture1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|GLenum
name|glCheckFramebufferStatus
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glGenFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|;
name|void
name|glDeleteFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|;
name|void
name|glBindFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|;
name|GLboolean
name|glIsFramebuffer
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|;
name|void
name|glGetRenderbufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glRenderbufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glGenRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glDeleteRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|;
name|void
name|glBindRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|;
name|GLboolean
name|glIsRenderbuffer
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|;
specifier|const
name|GLubyte
operator|*
name|glGetStringi
argument_list|(
argument|GLenum name
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glClearBufferfi
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|GLfloat depth
argument_list|,
argument|GLint stencil
argument_list|)
block|;
name|void
name|glClearBufferfv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glClearBufferuiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glClearBufferiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glGetTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|;
name|void
name|glTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glUniform4uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform3uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform2uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform1uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|;
name|void
name|glUniform4ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|;
name|void
name|glUniform3ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|;
name|void
name|glUniform2ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|;
name|void
name|glUniform1ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|;
name|GLint
name|glGetFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glBindFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint color
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetUniformuiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribIuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribIiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glVertexAttribIPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glEndConditionalRender
argument_list|()
block|;
name|void
name|glBeginConditionalRender
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glClampColor
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum clamp
argument_list|)
block|;
name|void
name|glGetTransformFeedbackVarying
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glTransformFeedbackVaryings
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *varyings
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|;
name|void
name|glBindBufferBase
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glBindBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glEndTransformFeedback
argument_list|()
block|;
name|void
name|glBeginTransformFeedback
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|;
name|GLboolean
name|glIsEnabledi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glDisablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glEnablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|;
name|void
name|glGetIntegeri_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *data
argument_list|)
block|;
name|void
name|glGetBooleani_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLboolean *data
argument_list|)
block|;
name|void
name|glColorMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLboolean r
argument_list|,
argument|GLboolean g
argument_list|,
argument|GLboolean b
argument_list|,
argument|GLboolean a
argument_list|)
block|;
comment|// OpenGL 3.1 core functions
name|void
name|glCopyBufferSubData
argument_list|(
argument|GLenum readTarget
argument_list|,
argument|GLenum writeTarget
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|;
name|void
name|glUniformBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLuint uniformBlockBinding
argument_list|)
block|;
name|void
name|glGetActiveUniformBlockName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformBlockName
argument_list|)
block|;
name|void
name|glGetActiveUniformBlockiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLuint
name|glGetUniformBlockIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *uniformBlockName
argument_list|)
block|;
name|void
name|glGetActiveUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformName
argument_list|)
block|;
name|void
name|glGetActiveUniformsiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLuint *uniformIndices
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetUniformIndices
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLchar* const *uniformNames
argument_list|,
argument|GLuint *uniformIndices
argument_list|)
block|;
name|void
name|glPrimitiveRestartIndex
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glTexBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glDrawElementsInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
name|void
name|glDrawArraysInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|;
comment|// OpenGL 3.2 core functions
name|void
name|glSampleMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glGetMultisamplefv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|;
name|void
name|glTexImage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glTexImage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|;
name|void
name|glGetSynciv
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|;
name|void
name|glGetInteger64v
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|;
name|GLenum
name|glClientWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|;
name|void
name|glDeleteSync
argument_list|(
argument|GLsync sync
argument_list|)
block|;
name|GLboolean
name|glIsSync
argument_list|(
argument|GLsync sync
argument_list|)
block|;
name|GLsync
name|glFenceSync
argument_list|(
argument|GLenum condition
argument_list|,
argument|GLbitfield flags
argument_list|)
block|;
name|void
name|glProvokingVertex
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glMultiDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|const GLint *basevertex
argument_list|)
block|;
name|void
name|glDrawElementsInstancedBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|void
name|glDrawRangeElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|void
name|glDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|;
name|void
name|glFramebufferTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|;
name|void
name|glGetBufferParameteri64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|;
name|void
name|glGetInteger64i_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint64 *data
argument_list|)
block|;
name|private
operator|:
name|friend
name|class
name|QOpenGLContext
block|;
specifier|static
name|bool
name|isContextCompatible
argument_list|(
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
specifier|static
name|QOpenGLVersionProfile
name|versionProfile
argument_list|()
block|;
name|QOpenGLFunctions_1_0_CoreBackend
operator|*
name|d_1_0_Core
block|;
name|QOpenGLFunctions_1_1_CoreBackend
operator|*
name|d_1_1_Core
block|;
name|QOpenGLFunctions_1_2_CoreBackend
operator|*
name|d_1_2_Core
block|;
name|QOpenGLFunctions_1_3_CoreBackend
operator|*
name|d_1_3_Core
block|;
name|QOpenGLFunctions_1_4_CoreBackend
operator|*
name|d_1_4_Core
block|;
name|QOpenGLFunctions_1_5_CoreBackend
operator|*
name|d_1_5_Core
block|;
name|QOpenGLFunctions_2_0_CoreBackend
operator|*
name|d_2_0_Core
block|;
name|QOpenGLFunctions_2_1_CoreBackend
operator|*
name|d_2_1_Core
block|;
name|QOpenGLFunctions_3_0_CoreBackend
operator|*
name|d_3_0_Core
block|;
name|QOpenGLFunctions_3_1_CoreBackend
operator|*
name|d_3_1_Core
block|;
name|QOpenGLFunctions_3_2_CoreBackend
operator|*
name|d_3_2_Core
block|; }
decl_stmt|;
end_decl_stmt
begin_comment
comment|// OpenGL 1.0 core functions
end_comment
begin_expr_stmt
DECL|function|glViewport
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glViewport
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Viewport
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glDepthRange
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDepthRange
argument_list|(
argument|GLdouble nearVal
argument_list|,
argument|GLdouble farVal
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthRange
argument_list|(
name|nearVal
argument_list|,
name|farVal
argument_list|)
block|; }
DECL|function|glIsEnabled
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsEnabled
argument_list|(
argument|GLenum cap
argument_list|)
block|{
return|return
name|d_1_0_Core
operator|->
name|IsEnabled
argument_list|(
name|cap
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetTexLevelParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTexLevelParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexLevelParameteriv
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexLevelParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTexLevelParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexLevelParameterfv
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexImage
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexImage
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetString
specifier|inline
specifier|const
name|GLubyte
operator|*
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetString
argument_list|(
argument|GLenum name
argument_list|)
block|{
return|return
name|d_1_0_Core
operator|->
name|GetString
argument_list|(
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetIntegerv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetIntegerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetIntegerv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetFloatv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetFloatv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetFloatv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetError
specifier|inline
name|GLenum
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetError
argument_list|()
block|{
return|return
name|d_1_0_Core
operator|->
name|GetError
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetDoublev
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetDoublev
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetDoublev
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetBooleanv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetBooleanv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLboolean *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetBooleanv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glReadPixels
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glReadPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ReadPixels
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glReadBuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glReadBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ReadBuffer
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glPixelStorei
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPixelStorei
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PixelStorei
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelStoref
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPixelStoref
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PixelStoref
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glDepthFunc
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDepthFunc
argument_list|(
argument|GLenum func
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthFunc
argument_list|(
name|func
argument_list|)
block|; }
DECL|function|glStencilOp
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glStencilOp
argument_list|(
argument|GLenum fail
argument_list|,
argument|GLenum zfail
argument_list|,
argument|GLenum zpass
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilOp
argument_list|(
name|fail
argument_list|,
name|zfail
argument_list|,
name|zpass
argument_list|)
block|; }
DECL|function|glStencilFunc
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glStencilFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilFunc
argument_list|(
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glLogicOp
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glLogicOp
argument_list|(
argument|GLenum opcode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|LogicOp
argument_list|(
name|opcode
argument_list|)
block|; }
DECL|function|glBlendFunc
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBlendFunc
argument_list|(
argument|GLenum sfactor
argument_list|,
argument|GLenum dfactor
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|BlendFunc
argument_list|(
name|sfactor
argument_list|,
name|dfactor
argument_list|)
block|; }
DECL|function|glFlush
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFlush
argument_list|()
block|{
name|d_1_0_Core
operator|->
name|Flush
argument_list|()
block|; }
DECL|function|glFinish
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFinish
argument_list|()
block|{
name|d_1_0_Core
operator|->
name|Finish
argument_list|()
block|; }
DECL|function|glEnable
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glEnable
argument_list|(
argument|GLenum cap
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Enable
argument_list|(
name|cap
argument_list|)
block|; }
DECL|function|glDisable
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDisable
argument_list|(
argument|GLenum cap
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Disable
argument_list|(
name|cap
argument_list|)
block|; }
DECL|function|glDepthMask
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDepthMask
argument_list|(
argument|GLboolean flag
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthMask
argument_list|(
name|flag
argument_list|)
block|; }
DECL|function|glColorMask
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glColorMask
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ColorMask
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glStencilMask
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glStencilMask
argument_list|(
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilMask
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glClearDepth
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClearDepth
argument_list|(
argument|GLdouble depth
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearDepth
argument_list|(
name|depth
argument_list|)
block|; }
DECL|function|glClearStencil
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClearStencil
argument_list|(
argument|GLint s
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearStencil
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glClearColor
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClearColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glClear
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClear
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Clear
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glDrawBuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DrawBuffer
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameteri
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterf
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameterf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glScissor
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glScissor
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Scissor
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glPolygonMode
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPolygonMode
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PolygonMode
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glPointSize
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPointSize
argument_list|(
argument|GLfloat size
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PointSize
argument_list|(
name|size
argument_list|)
block|; }
DECL|function|glLineWidth
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glLineWidth
argument_list|(
argument|GLfloat width
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|LineWidth
argument_list|(
name|width
argument_list|)
block|; }
DECL|function|glHint
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glHint
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Hint
argument_list|(
name|target
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glFrontFace
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFrontFace
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|FrontFace
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glCullFace
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCullFace
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|CullFace
argument_list|(
name|mode
argument_list|)
block|; }
comment|// OpenGL 1.1 core functions
DECL|function|glIndexubv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIndexubv
argument_list|(
argument|const GLubyte *c
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|Indexubv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexub
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIndexub
argument_list|(
argument|GLubyte c
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|Indexub
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIsTexture
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsTexture
argument_list|(
argument|GLuint texture
argument_list|)
block|{
return|return
name|d_1_1_Core
operator|->
name|IsTexture
argument_list|(
name|texture
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenTextures
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGenTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|GenTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glDeleteTextures
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DeleteTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glBindTexture
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|BindTexture
argument_list|(
name|target
argument_list|,
name|texture
argument_list|)
block|; }
DECL|function|glTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|TexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|TexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCopyTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCopyTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCopyTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCopyTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glCopyTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCopyTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glPolygonOffset
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPolygonOffset
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|PolygonOffset
argument_list|(
name|factor
argument_list|,
name|units
argument_list|)
block|; }
DECL|function|glGetPointerv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetPointerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|GetPointerv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glDrawElements
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DrawElements
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glDrawArrays
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DrawArrays
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|)
block|; }
comment|// OpenGL 1.2 core functions
DECL|function|glCopyTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCopyTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|CopyTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|TexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glDrawRangeElements
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawRangeElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|DrawRangeElements
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glBlendEquation
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBlendEquation
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|BlendEquation
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glBlendColor
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBlendColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|BlendColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
comment|// OpenGL 1.3 core functions
DECL|function|glGetCompressedTexImage
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLvoid *img
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|GetCompressedTexImage
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCompressedTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCompressedTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCompressedTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCompressedTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCompressedTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage3D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCompressedTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glSampleCoverage
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glSampleCoverage
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|SampleCoverage
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|; }
DECL|function|glActiveTexture
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|ActiveTexture
argument_list|(
name|texture
argument_list|)
block|; }
comment|// OpenGL 1.4 core functions
DECL|function|glPointParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPointParameteriv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameteriv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameteri
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPointParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameteri
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPointParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPointParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameterfv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameterf
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPointParameterf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameterf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiDrawElements
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glMultiDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|MultiDrawElements
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|drawcount
argument_list|)
block|; }
DECL|function|glMultiDrawArrays
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glMultiDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|MultiDrawArrays
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|drawcount
argument_list|)
block|; }
DECL|function|glBlendFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBlendFuncSeparate
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|BlendFuncSeparate
argument_list|(
name|sfactorRGB
argument_list|,
name|dfactorRGB
argument_list|,
name|sfactorAlpha
argument_list|,
name|dfactorAlpha
argument_list|)
block|; }
comment|// OpenGL 1.5 core functions
DECL|function|glGetBufferPointerv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetBufferPointerv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferPointerv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetBufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetBufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUnmapBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|UnmapBuffer
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMapBuffer
specifier|inline
name|GLvoid
operator|*
name|QOpenGLFunctions_3_2_Core
operator|::
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|MapBuffer
argument_list|(
name|target
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferData
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BufferData
argument_list|(
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|; }
DECL|function|glIsBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|IsBuffer
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenBuffers
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGenBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GenBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glDeleteBuffers
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|DeleteBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glBindBuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BindBuffer
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glGetQueryObjectuiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetQueryObjectuiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryObjectuiv
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjectiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetQueryObjectiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryObjectiv
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetQueryiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndQuery
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glEndQuery
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|EndQuery
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glBeginQuery
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBeginQuery
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BeginQuery
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glIsQuery
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsQuery
argument_list|(
argument|GLuint id
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|IsQuery
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteQueries
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|DeleteQueries
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glGenQueries
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGenQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GenQueries
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
comment|// OpenGL 2.0 core functions
DECL|function|glVertexAttribPointer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glVertexAttribPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttribPointer
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glValidateProgram
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glValidateProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|ValidateProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glUniformMatrix4fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4iv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform4iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3iv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform3iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2iv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform2iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1iv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform1iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform1fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4i
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform4i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3i
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform3i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2i
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform2i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1i
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform1i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glUniform4f
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform4f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3f
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform3f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2f
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform2f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1f
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform1f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glUseProgram
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUseProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UseProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glShaderSource
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *string
argument_list|,
argument|const GLint *length
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|ShaderSource
argument_list|(
name|shader
argument_list|,
name|count
argument_list|,
name|string
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glLinkProgram
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glLinkProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|LinkProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glIsShader
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|IsShader
argument_list|(
name|shader
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsProgram
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|IsProgram
argument_list|(
name|program
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribPointerv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetVertexAttribPointerv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribPointerv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glGetVertexAttribiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetVertexAttribiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribfv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetVertexAttribfv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribfv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribdv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetVertexAttribdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribdv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetUniformiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformfv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetUniformfv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|GetUniformLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetShaderSource
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderSource
argument_list|(
name|shader
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
block|; }
DECL|function|glGetShaderInfoLog
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetShaderInfoLog
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderInfoLog
argument_list|(
name|shader
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glGetShaderiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetShaderiv
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderiv
argument_list|(
name|shader
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramInfoLog
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetProgramInfoLog
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetProgramInfoLog
argument_list|(
name|program
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glGetProgramiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetProgramiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetProgramiv
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetAttribLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|GetAttribLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetAttachedShaders
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetAttachedShaders
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLuint *obj
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetAttachedShaders
argument_list|(
name|program
argument_list|,
name|maxCount
argument_list|,
name|count
argument_list|,
name|obj
argument_list|)
block|; }
DECL|function|glGetActiveUniform
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetActiveUniform
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetActiveUniform
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetActiveAttrib
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetActiveAttrib
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetActiveAttrib
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glEnableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glEnableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|EnableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glDisableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDisableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DisableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glDetachShader
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDetachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DetachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|; }
DECL|function|glDeleteShader
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DeleteShader
argument_list|(
name|shader
argument_list|)
block|; }
DECL|function|glDeleteProgram
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DeleteProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glCreateShader
specifier|inline
name|GLuint
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCreateShader
argument_list|(
argument|GLenum type
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|CreateShader
argument_list|(
name|type
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCreateProgram
specifier|inline
name|GLuint
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCreateProgram
argument_list|()
block|{
return|return
name|d_2_0_Core
operator|->
name|CreateProgram
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCompileShader
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCompileShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|CompileShader
argument_list|(
name|shader
argument_list|)
block|; }
DECL|function|glBindAttribLocation
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|BindAttribLocation
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glAttachShader
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glAttachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|AttachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|; }
DECL|function|glStencilMaskSeparate
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glStencilMaskSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilMaskSeparate
argument_list|(
name|face
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glStencilFuncSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilFuncSeparate
argument_list|(
name|face
argument_list|,
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilOpSeparate
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glStencilOpSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilOpSeparate
argument_list|(
name|face
argument_list|,
name|sfail
argument_list|,
name|dpfail
argument_list|,
name|dppass
argument_list|)
block|; }
DECL|function|glDrawBuffers
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DrawBuffers
argument_list|(
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
DECL|function|glBlendEquationSeparate
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBlendEquationSeparate
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|BlendEquationSeparate
argument_list|(
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|; }
comment|// OpenGL 2.1 core functions
DECL|function|glUniformMatrix4x3fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix4x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix4x3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x4fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix3x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix3x4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix4x2fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix4x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix4x2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x4fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix2x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix2x4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x2fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix3x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix3x2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x3fv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformMatrix2x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix2x3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
comment|// OpenGL 3.0 core functions
DECL|function|glIsVertexArray
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsVertexArray
argument_list|(
name|array
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenVertexArrays
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGenVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *arrays
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenVertexArrays
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glDeleteVertexArrays
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteVertexArrays
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *arrays
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|DeleteVertexArrays
argument_list|(
name|n
argument_list|,
name|arrays
argument_list|)
block|; }
DECL|function|glBindVertexArray
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindVertexArray
argument_list|(
argument|GLuint array
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindVertexArray
argument_list|(
name|array
argument_list|)
block|; }
DECL|function|glFlushMappedBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFlushMappedBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FlushMappedBufferRange
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glMapBufferRange
specifier|inline
name|GLvoid
operator|*
name|QOpenGLFunctions_3_2_Core
operator|::
name|glMapBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr length
argument_list|,
argument|GLbitfield access
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|MapBufferRange
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glFramebufferTextureLayer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFramebufferTextureLayer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint layer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTextureLayer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|layer
argument_list|)
block|; }
DECL|function|glRenderbufferStorageMultisample
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glRenderbufferStorageMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|RenderbufferStorageMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glBlitFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBlitFramebuffer
argument_list|(
argument|GLint srcX0
argument_list|,
argument|GLint srcY0
argument_list|,
argument|GLint srcX1
argument_list|,
argument|GLint srcY1
argument_list|,
argument|GLint dstX0
argument_list|,
argument|GLint dstY0
argument_list|,
argument|GLint dstX1
argument_list|,
argument|GLint dstY1
argument_list|,
argument|GLbitfield mask
argument_list|,
argument|GLenum filter
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BlitFramebuffer
argument_list|(
name|srcX0
argument_list|,
name|srcY0
argument_list|,
name|srcX1
argument_list|,
name|srcY1
argument_list|,
name|dstX0
argument_list|,
name|dstY0
argument_list|,
name|dstX1
argument_list|,
name|dstY1
argument_list|,
name|mask
argument_list|,
name|filter
argument_list|)
block|; }
DECL|function|glGenerateMipmap
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGenerateMipmap
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenerateMipmap
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glGetFramebufferAttachmentParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetFramebufferAttachmentParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetFramebufferAttachmentParameteriv
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFramebufferRenderbuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFramebufferRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum renderbuffertarget
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferRenderbuffer
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|renderbuffertarget
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glFramebufferTexture3D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFramebufferTexture3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|,
argument|GLint zoffset
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTexture3D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|,
name|zoffset
argument_list|)
block|; }
DECL|function|glFramebufferTexture2D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFramebufferTexture2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTexture2D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glFramebufferTexture1D
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFramebufferTexture1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLenum textarget
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|FramebufferTexture1D
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|textarget
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glCheckFramebufferStatus
specifier|inline
name|GLenum
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCheckFramebufferStatus
argument_list|(
argument|GLenum target
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|CheckFramebufferStatus
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenFramebuffers
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGenFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *framebuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glDeleteFramebuffers
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteFramebuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *framebuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|DeleteFramebuffers
argument_list|(
name|n
argument_list|,
name|framebuffers
argument_list|)
block|; }
DECL|function|glBindFramebuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindFramebuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint framebuffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindFramebuffer
argument_list|(
name|target
argument_list|,
name|framebuffer
argument_list|)
block|; }
DECL|function|glIsFramebuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsFramebuffer
argument_list|(
argument|GLuint framebuffer
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsFramebuffer
argument_list|(
name|framebuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetRenderbufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetRenderbufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetRenderbufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glRenderbufferStorage
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glRenderbufferStorage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|RenderbufferStorage
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glGenRenderbuffers
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGenRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *renderbuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GenRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glDeleteRenderbuffers
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteRenderbuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *renderbuffers
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|DeleteRenderbuffers
argument_list|(
name|n
argument_list|,
name|renderbuffers
argument_list|)
block|; }
DECL|function|glBindRenderbuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindRenderbuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint renderbuffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindRenderbuffer
argument_list|(
name|target
argument_list|,
name|renderbuffer
argument_list|)
block|; }
DECL|function|glIsRenderbuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsRenderbuffer
argument_list|(
argument|GLuint renderbuffer
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsRenderbuffer
argument_list|(
name|renderbuffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetStringi
specifier|inline
specifier|const
name|GLubyte
operator|*
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetStringi
argument_list|(
argument|GLenum name
argument_list|,
argument|GLuint index
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|GetStringi
argument_list|(
name|name
argument_list|,
name|index
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glClearBufferfi
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClearBufferfi
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|GLfloat depth
argument_list|,
argument|GLint stencil
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferfi
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|depth
argument_list|,
name|stencil
argument_list|)
block|; }
DECL|function|glClearBufferfv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClearBufferfv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferfv
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glClearBufferuiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClearBufferuiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferuiv
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glClearBufferiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClearBufferiv
argument_list|(
argument|GLenum buffer
argument_list|,
argument|GLint drawbuffer
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClearBufferiv
argument_list|(
name|buffer
argument_list|,
name|drawbuffer
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glGetTexParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetTexParameterIuiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetTexParameterIiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterIuiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexParameterIuiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|TexParameterIuiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterIiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexParameterIiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|TexParameterIiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUniform4uiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform4uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform4uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3uiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform3uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform3uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2uiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform2uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform2uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1uiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform1uiv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLuint *value
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform1uiv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4ui
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform4ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|,
argument|GLuint v3
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform4ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3ui
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform3ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|,
argument|GLuint v2
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform3ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2ui
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform2ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|,
argument|GLuint v1
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform2ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1ui
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniform1ui
argument_list|(
argument|GLint location
argument_list|,
argument|GLuint v0
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Uniform1ui
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glGetFragDataLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|GetFragDataLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glBindFragDataLocation
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindFragDataLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint color
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindFragDataLocation
argument_list|(
name|program
argument_list|,
name|color
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetUniformuiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetUniformuiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetUniformuiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribIuiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetVertexAttribIuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetVertexAttribIuiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribIiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetVertexAttribIiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetVertexAttribIiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glVertexAttribIPointer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glVertexAttribIPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|VertexAttribIPointer
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glEndConditionalRender
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glEndConditionalRender
argument_list|()
block|{
name|d_3_0_Core
operator|->
name|EndConditionalRender
argument_list|()
block|; }
DECL|function|glBeginConditionalRender
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBeginConditionalRender
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BeginConditionalRender
argument_list|(
name|id
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glClampColor
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClampColor
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum clamp
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ClampColor
argument_list|(
name|target
argument_list|,
name|clamp
argument_list|)
block|; }
DECL|function|glGetTransformFeedbackVarying
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetTransformFeedbackVarying
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLsizei *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetTransformFeedbackVarying
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glTransformFeedbackVaryings
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTransformFeedbackVaryings
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *varyings
argument_list|,
argument|GLenum bufferMode
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|TransformFeedbackVaryings
argument_list|(
name|program
argument_list|,
name|count
argument_list|,
name|varyings
argument_list|,
name|bufferMode
argument_list|)
block|; }
DECL|function|glBindBufferBase
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindBufferBase
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindBufferBase
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glBindBufferRange
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBindBufferRange
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLuint buffer
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BindBufferRange
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|buffer
argument_list|,
name|offset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glEndTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glEndTransformFeedback
argument_list|()
block|{
name|d_3_0_Core
operator|->
name|EndTransformFeedback
argument_list|()
block|; }
DECL|function|glBeginTransformFeedback
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glBeginTransformFeedback
argument_list|(
argument|GLenum primitiveMode
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|BeginTransformFeedback
argument_list|(
name|primitiveMode
argument_list|)
block|; }
DECL|function|glIsEnabledi
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsEnabledi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
return|return
name|d_3_0_Core
operator|->
name|IsEnabledi
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDisablei
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDisablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Disablei
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glEnablei
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glEnablei
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|Enablei
argument_list|(
name|target
argument_list|,
name|index
argument_list|)
block|; }
DECL|function|glGetIntegeri_v
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetIntegeri_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint *data
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetIntegeri_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetBooleani_v
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetBooleani_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLboolean *data
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|GetBooleani_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glColorMaski
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glColorMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLboolean r
argument_list|,
argument|GLboolean g
argument_list|,
argument|GLboolean b
argument_list|,
argument|GLboolean a
argument_list|)
block|{
name|d_3_0_Core
operator|->
name|ColorMaski
argument_list|(
name|index
argument_list|,
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|)
block|; }
comment|// OpenGL 3.1 core functions
DECL|function|glCopyBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glCopyBufferSubData
argument_list|(
argument|GLenum readTarget
argument_list|,
argument|GLenum writeTarget
argument_list|,
argument|GLintptr readOffset
argument_list|,
argument|GLintptr writeOffset
argument_list|,
argument|GLsizeiptr size
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|CopyBufferSubData
argument_list|(
name|readTarget
argument_list|,
name|writeTarget
argument_list|,
name|readOffset
argument_list|,
name|writeOffset
argument_list|,
name|size
argument_list|)
block|; }
DECL|function|glUniformBlockBinding
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glUniformBlockBinding
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLuint uniformBlockBinding
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|UniformBlockBinding
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|uniformBlockBinding
argument_list|)
block|; }
DECL|function|glGetActiveUniformBlockName
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetActiveUniformBlockName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformBlockName
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformBlockName
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|uniformBlockName
argument_list|)
block|; }
DECL|function|glGetActiveUniformBlockiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetActiveUniformBlockiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformBlockIndex
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformBlockiv
argument_list|(
name|program
argument_list|,
name|uniformBlockIndex
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformBlockIndex
specifier|inline
name|GLuint
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetUniformBlockIndex
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *uniformBlockName
argument_list|)
block|{
return|return
name|d_3_1_Core
operator|->
name|GetUniformBlockIndex
argument_list|(
name|program
argument_list|,
name|uniformBlockName
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetActiveUniformName
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetActiveUniformName
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint uniformIndex
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *uniformName
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformName
argument_list|(
name|program
argument_list|,
name|uniformIndex
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|uniformName
argument_list|)
block|; }
DECL|function|glGetActiveUniformsiv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetActiveUniformsiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLuint *uniformIndices
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetActiveUniformsiv
argument_list|(
name|program
argument_list|,
name|uniformCount
argument_list|,
name|uniformIndices
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformIndices
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetUniformIndices
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei uniformCount
argument_list|,
argument|const GLchar* const *uniformNames
argument_list|,
argument|GLuint *uniformIndices
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|GetUniformIndices
argument_list|(
name|program
argument_list|,
name|uniformCount
argument_list|,
name|uniformNames
argument_list|,
name|uniformIndices
argument_list|)
block|; }
DECL|function|glPrimitiveRestartIndex
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glPrimitiveRestartIndex
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|PrimitiveRestartIndex
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glTexBuffer
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|TexBuffer
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glDrawElementsInstanced
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawElementsInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|DrawElementsInstanced
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|)
block|; }
DECL|function|glDrawArraysInstanced
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawArraysInstanced
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLsizei instancecount
argument_list|)
block|{
name|d_3_1_Core
operator|->
name|DrawArraysInstanced
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|instancecount
argument_list|)
block|; }
comment|// OpenGL 3.2 core functions
DECL|function|glSampleMaski
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glSampleMaski
argument_list|(
argument|GLuint index
argument_list|,
argument|GLbitfield mask
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|SampleMaski
argument_list|(
name|index
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glGetMultisamplefv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetMultisamplefv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLuint index
argument_list|,
argument|GLfloat *val
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetMultisamplefv
argument_list|(
name|pname
argument_list|,
name|index
argument_list|,
name|val
argument_list|)
block|; }
DECL|function|glTexImage3DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexImage3DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|TexImage3DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glTexImage2DMultisample
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glTexImage2DMultisample
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei samples
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLboolean fixedsamplelocations
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|TexImage2DMultisample
argument_list|(
name|target
argument_list|,
name|samples
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|fixedsamplelocations
argument_list|)
block|; }
DECL|function|glGetSynciv
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetSynciv
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *values
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetSynciv
argument_list|(
name|sync
argument_list|,
name|pname
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetInteger64v
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetInteger64v
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetInteger64v
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glWaitSync
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|WaitSync
argument_list|(
name|sync
argument_list|,
name|flags
argument_list|,
name|timeout
argument_list|)
block|; }
DECL|function|glClientWaitSync
specifier|inline
name|GLenum
name|QOpenGLFunctions_3_2_Core
operator|::
name|glClientWaitSync
argument_list|(
argument|GLsync sync
argument_list|,
argument|GLbitfield flags
argument_list|,
argument|GLuint64 timeout
argument_list|)
block|{
return|return
name|d_3_2_Core
operator|->
name|ClientWaitSync
argument_list|(
name|sync
argument_list|,
name|flags
argument_list|,
name|timeout
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteSync
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDeleteSync
argument_list|(
argument|GLsync sync
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DeleteSync
argument_list|(
name|sync
argument_list|)
block|; }
DECL|function|glIsSync
specifier|inline
name|GLboolean
name|QOpenGLFunctions_3_2_Core
operator|::
name|glIsSync
argument_list|(
argument|GLsync sync
argument_list|)
block|{
return|return
name|d_3_2_Core
operator|->
name|IsSync
argument_list|(
name|sync
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glFenceSync
specifier|inline
name|GLsync
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFenceSync
argument_list|(
argument|GLenum condition
argument_list|,
argument|GLbitfield flags
argument_list|)
block|{
return|return
name|d_3_2_Core
operator|->
name|FenceSync
argument_list|(
name|condition
argument_list|,
name|flags
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glProvokingVertex
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glProvokingVertex
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|ProvokingVertex
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glMultiDrawElementsBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glMultiDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|,
argument|const GLint *basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|MultiDrawElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|drawcount
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawElementsInstancedBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawElementsInstancedBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLsizei instancecount
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DrawElementsInstancedBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|instancecount
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawRangeElementsBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawRangeElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DrawRangeElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glDrawElementsBaseVertex
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glDrawElementsBaseVertex
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|,
argument|GLint basevertex
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|DrawElementsBaseVertex
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|basevertex
argument_list|)
block|; }
DECL|function|glFramebufferTexture
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glFramebufferTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum attachment
argument_list|,
argument|GLuint texture
argument_list|,
argument|GLint level
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|FramebufferTexture
argument_list|(
name|target
argument_list|,
name|attachment
argument_list|,
name|texture
argument_list|,
name|level
argument_list|)
block|; }
DECL|function|glGetBufferParameteri64v
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetBufferParameteri64v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint64 *params
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetBufferParameteri64v
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetInteger64i_v
specifier|inline
name|void
name|QOpenGLFunctions_3_2_Core
operator|::
name|glGetInteger64i_v
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint index
argument_list|,
argument|GLint64 *data
argument_list|)
block|{
name|d_3_2_Core
operator|->
name|GetInteger64i_v
argument_list|(
name|target
argument_list|,
name|index
argument_list|,
name|data
argument_list|)
block|; }
name|QT_END_NAMESPACE
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_OPENGL
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
