begin_unit
begin_comment
comment|/**************************************************************************** ** ** Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** Contact: http://www.qt-project.org/legal ** ** This file is part of the QtGui module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:LGPL21$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and Digia. For licensing terms and ** conditions see http://qt.digia.com/licensing. For further information ** use the contact form at http://qt.digia.com/contact-us. ** ** GNU Lesser General Public License Usage ** Alternatively, this file may be used under the terms of the GNU Lesser ** General Public License version 2.1 or version 3 as published by the Free ** Software Foundation and appearing in the file LICENSE.LGPLv21 and ** LICENSE.LGPLv3 included in the packaging of this file. Please review the ** following information to ensure the GNU Lesser General Public License ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html. ** ** In addition, as a special exception, Digia gives you certain additional ** rights. These rights are described in the Digia Qt LGPL Exception ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package. ** ** $QT_END_LICENSE$ ** ** ** This file was generated by glgen version 0.1 ** Command line was: glgen ** ** glgen is Copyright (C) 2013 Klaralvdalens Datakonsult AB (KDAB) ** ** This is an auto-generated file. ** Do not edit! All changes made to it will be lost. ** ****************************************************************************/
end_comment
begin_ifndef
ifndef|#
directive|ifndef
name|QOPENGLVERSIONFUNCTIONS_2_1_H
end_ifndef
begin_define
DECL|macro|QOPENGLVERSIONFUNCTIONS_2_1_H
define|#
directive|define
name|QOPENGLVERSIONFUNCTIONS_2_1_H
end_define
begin_include
include|#
directive|include
file|<QtCore/qglobal.h>
end_include
begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|QT_NO_OPENGL
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|QT_OPENGL_ES_2
argument_list|)
end_if
begin_include
include|#
directive|include
file|<QtGui/QOpenGLVersionFunctions>
end_include
begin_include
include|#
directive|include
file|<QtGui/qopenglcontext.h>
end_include
begin_decl_stmt
name|QT_BEGIN_NAMESPACE
name|class
name|Q_GUI_EXPORT
name|QOpenGLFunctions_2_1
range|:
name|public
name|QAbstractOpenGLFunctions
block|{
name|public
operator|:
name|QOpenGLFunctions_2_1
argument_list|()
block|;
operator|~
name|QOpenGLFunctions_2_1
argument_list|()
block|;
name|bool
name|initializeOpenGLFunctions
argument_list|()
name|Q_DECL_OVERRIDE
block|;
comment|// OpenGL 1.0 core functions
name|void
name|glViewport
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glDepthRange
argument_list|(
argument|GLdouble nearVal
argument_list|,
argument|GLdouble farVal
argument_list|)
block|;
name|GLboolean
name|glIsEnabled
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glGetTexLevelParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexLevelParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|;
specifier|const
name|GLubyte
operator|*
name|glGetString
argument_list|(
argument|GLenum name
argument_list|)
block|;
name|void
name|glGetIntegerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetFloatv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|GLenum
name|glGetError
argument_list|()
block|;
name|void
name|glGetDoublev
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetBooleanv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLboolean *params
argument_list|)
block|;
name|void
name|glReadPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|;
name|void
name|glReadBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glPixelStorei
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPixelStoref
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glDepthFunc
argument_list|(
argument|GLenum func
argument_list|)
block|;
name|void
name|glStencilOp
argument_list|(
argument|GLenum fail
argument_list|,
argument|GLenum zfail
argument_list|,
argument|GLenum zpass
argument_list|)
block|;
name|void
name|glStencilFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glLogicOp
argument_list|(
argument|GLenum opcode
argument_list|)
block|;
name|void
name|glBlendFunc
argument_list|(
argument|GLenum sfactor
argument_list|,
argument|GLenum dfactor
argument_list|)
block|;
name|void
name|glFlush
argument_list|()
block|;
name|void
name|glFinish
argument_list|()
block|;
name|void
name|glEnable
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glDisable
argument_list|(
argument|GLenum cap
argument_list|)
block|;
name|void
name|glDepthMask
argument_list|(
argument|GLboolean flag
argument_list|)
block|;
name|void
name|glColorMask
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|;
name|void
name|glStencilMask
argument_list|(
argument|GLuint mask
argument_list|)
block|;
name|void
name|glClearDepth
argument_list|(
argument|GLdouble depth
argument_list|)
block|;
name|void
name|glClearStencil
argument_list|(
argument|GLint s
argument_list|)
block|;
name|void
name|glClearColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glClear
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glDrawBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTexParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTexParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glScissor
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glPolygonMode
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glPointSize
argument_list|(
argument|GLfloat size
argument_list|)
block|;
name|void
name|glLineWidth
argument_list|(
argument|GLfloat width
argument_list|)
block|;
name|void
name|glHint
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glFrontFace
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glCullFace
argument_list|(
argument|GLenum mode
argument_list|)
block|;
comment|// OpenGL 1.1 core functions
name|void
name|glIndexubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexub
argument_list|(
argument|GLubyte c
argument_list|)
block|;
name|GLboolean
name|glIsTexture
argument_list|(
argument|GLuint texture
argument_list|)
block|;
name|void
name|glGenTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|;
name|void
name|glDeleteTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|;
name|void
name|glBindTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|;
name|void
name|glTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glCopyTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glCopyTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glCopyTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|;
name|void
name|glPolygonOffset
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|;
name|void
name|glGetPointerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|;
name|void
name|glDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|;
comment|// OpenGL 1.2 core functions
name|void
name|glCopyTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glDrawRangeElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|;
name|void
name|glBlendEquation
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glBlendColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
comment|// OpenGL 1.3 core functions
name|void
name|glGetCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLvoid *img
argument_list|)
block|;
name|void
name|glCompressedTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glCompressedTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glSampleCoverage
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|;
name|void
name|glActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|;
comment|// OpenGL 1.4 core functions
name|void
name|glPointParameteriv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glPointParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPointParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glPointParameterf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glMultiDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|;
name|void
name|glMultiDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|;
name|void
name|glBlendFuncSeparate
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|;
comment|// OpenGL 1.5 core functions
name|void
name|glGetBufferPointerv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|;
name|void
name|glGetBufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLboolean
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|GLvoid
operator|*
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|;
name|void
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|;
name|void
name|glBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|;
name|GLboolean
name|glIsBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGenBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|;
name|void
name|glDeleteBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|;
name|void
name|glBindBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|;
name|void
name|glGetQueryObjectuiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|;
name|void
name|glGetQueryObjectiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetQueryiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glEndQuery
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glBeginQuery
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|;
name|GLboolean
name|glIsQuery
argument_list|(
argument|GLuint id
argument_list|)
block|;
name|void
name|glDeleteQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|;
name|void
name|glGenQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|;
comment|// OpenGL 2.0 core functions
name|void
name|glVertexAttribPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glValidateProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glUniformMatrix4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform3iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform2iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform1iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|;
name|void
name|glUniform4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform1fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniform4i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|;
name|void
name|glUniform3i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|;
name|void
name|glUniform2i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|;
name|void
name|glUniform1i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|;
name|void
name|glUniform4f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|;
name|void
name|glUniform3f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glUniform2f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|;
name|void
name|glUniform1f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|;
name|void
name|glUseProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *string
argument_list|,
argument|const GLint *length
argument_list|)
block|;
name|void
name|glLinkProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|GLboolean
name|glIsShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|GLboolean
name|glIsProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|void
name|glGetVertexAttribPointerv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|;
name|void
name|glGetVertexAttribiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetVertexAttribfv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetVertexAttribdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|GLint
name|glGetUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|;
name|void
name|glGetShaderInfoLog
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glGetShaderiv
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetProgramInfoLog
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|;
name|void
name|glGetProgramiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|GLint
name|glGetAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glGetAttachedShaders
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLuint *obj
argument_list|)
block|;
name|void
name|glGetActiveUniform
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glGetActiveAttrib
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|;
name|void
name|glEnableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glDisableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|;
name|void
name|glDetachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|;
name|void
name|glDeleteShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|void
name|glDeleteProgram
argument_list|(
argument|GLuint program
argument_list|)
block|;
name|GLuint
name|glCreateShader
argument_list|(
argument|GLenum type
argument_list|)
block|;
name|GLuint
name|glCreateProgram
argument_list|()
block|;
name|void
name|glCompileShader
argument_list|(
argument|GLuint shader
argument_list|)
block|;
name|void
name|glBindAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|;
name|void
name|glAttachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|;
name|void
name|glStencilMaskSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilFuncSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|;
name|void
name|glStencilOpSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|;
name|void
name|glDrawBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|;
name|void
name|glBlendEquationSeparate
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|;
comment|// OpenGL 2.1 core functions
name|void
name|glUniformMatrix4x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix4x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix3x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
name|void
name|glUniformMatrix2x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|;
comment|// OpenGL 1.0 deprecated functions
name|void
name|glTranslatef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glTranslated
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glScalef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glScaled
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glRotatef
argument_list|(
argument|GLfloat angle
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glRotated
argument_list|(
argument|GLdouble angle
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glPushMatrix
argument_list|()
block|;
name|void
name|glPopMatrix
argument_list|()
block|;
name|void
name|glOrtho
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|;
name|void
name|glMultMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glMultMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glMatrixMode
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glLoadMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadIdentity
argument_list|()
block|;
name|void
name|glFrustum
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|;
name|GLboolean
name|glIsList
argument_list|(
argument|GLuint list
argument_list|)
block|;
name|void
name|glGetTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|;
name|void
name|glGetTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetPolygonStipple
argument_list|(
name|GLubyte
operator|*
name|mask
argument_list|)
block|;
name|void
name|glGetPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLushort *values
argument_list|)
block|;
name|void
name|glGetPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLuint *values
argument_list|)
block|;
name|void
name|glGetPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLfloat *values
argument_list|)
block|;
name|void
name|glGetMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMapiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLint *v
argument_list|)
block|;
name|void
name|glGetMapfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLfloat *v
argument_list|)
block|;
name|void
name|glGetMapdv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLdouble *v
argument_list|)
block|;
name|void
name|glGetLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|GLdouble *equation
argument_list|)
block|;
name|void
name|glDrawPixels
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|;
name|void
name|glCopyPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum type
argument_list|)
block|;
name|void
name|glPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLint mapsize
argument_list|,
argument|const GLushort *values
argument_list|)
block|;
name|void
name|glPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLint mapsize
argument_list|,
argument|const GLuint *values
argument_list|)
block|;
name|void
name|glPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLint mapsize
argument_list|,
argument|const GLfloat *values
argument_list|)
block|;
name|void
name|glPixelTransferi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glPixelTransferf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glPixelZoom
argument_list|(
argument|GLfloat xfactor
argument_list|,
argument|GLfloat yfactor
argument_list|)
block|;
name|void
name|glAlphaFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLfloat ref
argument_list|)
block|;
name|void
name|glEvalPoint2
argument_list|(
argument|GLint i
argument_list|,
argument|GLint j
argument_list|)
block|;
name|void
name|glEvalMesh2
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|,
argument|GLint j1
argument_list|,
argument|GLint j2
argument_list|)
block|;
name|void
name|glEvalPoint1
argument_list|(
argument|GLint i
argument_list|)
block|;
name|void
name|glEvalMesh1
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|)
block|;
name|void
name|glEvalCoord2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord2f
argument_list|(
argument|GLfloat u
argument_list|,
argument|GLfloat v
argument_list|)
block|;
name|void
name|glEvalCoord2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord2d
argument_list|(
argument|GLdouble u
argument_list|,
argument|GLdouble v
argument_list|)
block|;
name|void
name|glEvalCoord1fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord1f
argument_list|(
argument|GLfloat u
argument_list|)
block|;
name|void
name|glEvalCoord1dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|u
argument_list|)
block|;
name|void
name|glEvalCoord1d
argument_list|(
argument|GLdouble u
argument_list|)
block|;
name|void
name|glMapGrid2f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|;
name|void
name|glMapGrid2d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|;
name|void
name|glMapGrid1f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|)
block|;
name|void
name|glMapGrid1d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|)
block|;
name|void
name|glMap2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|void
name|glMap2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|;
name|void
name|glMap1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLfloat *points
argument_list|)
block|;
name|void
name|glMap1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLdouble *points
argument_list|)
block|;
name|void
name|glPushAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glPopAttrib
argument_list|()
block|;
name|void
name|glAccum
argument_list|(
argument|GLenum op
argument_list|,
argument|GLfloat value
argument_list|)
block|;
name|void
name|glIndexMask
argument_list|(
argument|GLuint mask
argument_list|)
block|;
name|void
name|glClearIndex
argument_list|(
argument|GLfloat c
argument_list|)
block|;
name|void
name|glClearAccum
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glPushName
argument_list|(
argument|GLuint name
argument_list|)
block|;
name|void
name|glPopName
argument_list|()
block|;
name|void
name|glPassThrough
argument_list|(
argument|GLfloat token
argument_list|)
block|;
name|void
name|glLoadName
argument_list|(
argument|GLuint name
argument_list|)
block|;
name|void
name|glInitNames
argument_list|()
block|;
name|GLint
name|glRenderMode
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glSelectBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLuint *buffer
argument_list|)
block|;
name|void
name|glFeedbackBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLfloat *buffer
argument_list|)
block|;
name|void
name|glTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTexGeni
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTexGenf
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|;
name|void
name|glTexGend
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble param
argument_list|)
block|;
name|void
name|glTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glTexEnvi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glTexEnvf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glShadeModel
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glPolygonStipple
argument_list|(
specifier|const
name|GLubyte
operator|*
name|mask
argument_list|)
block|;
name|void
name|glMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glMateriali
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glMaterialf
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glLineStipple
argument_list|(
argument|GLint factor
argument_list|,
argument|GLushort pattern
argument_list|)
block|;
name|void
name|glLightModeliv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glLightModeli
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glLightModelfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glLightModelf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glLighti
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glLightf
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glFogiv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glFogi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|;
name|void
name|glFogfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glFogf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|;
name|void
name|glColorMaterial
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|;
name|void
name|glClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|const GLdouble *equation
argument_list|)
block|;
name|void
name|glVertex4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glVertex4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glVertex4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glVertex4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertex3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glVertex3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glVertex3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glVertex3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertex2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glVertex2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glVertex2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glVertex2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glVertex2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glTexCoord4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|;
name|void
name|glTexCoord4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|;
name|void
name|glTexCoord4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|;
name|void
name|glTexCoord4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord4d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|;
name|void
name|glTexCoord3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|;
name|void
name|glTexCoord3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|;
name|void
name|glTexCoord3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|;
name|void
name|glTexCoord3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord3d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|;
name|void
name|glTexCoord2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|;
name|void
name|glTexCoord2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|;
name|void
name|glTexCoord2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|;
name|void
name|glTexCoord2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord2d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|;
name|void
name|glTexCoord1sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1s
argument_list|(
argument|GLshort s
argument_list|)
block|;
name|void
name|glTexCoord1iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1i
argument_list|(
argument|GLint s
argument_list|)
block|;
name|void
name|glTexCoord1fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1f
argument_list|(
argument|GLfloat s
argument_list|)
block|;
name|void
name|glTexCoord1dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glTexCoord1d
argument_list|(
argument|GLdouble s
argument_list|)
block|;
name|void
name|glRectsv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v1
argument_list|,
specifier|const
name|GLshort
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRects
argument_list|(
argument|GLshort x1
argument_list|,
argument|GLshort y1
argument_list|,
argument|GLshort x2
argument_list|,
argument|GLshort y2
argument_list|)
block|;
name|void
name|glRectiv
argument_list|(
specifier|const
name|GLint
operator|*
name|v1
argument_list|,
specifier|const
name|GLint
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRecti
argument_list|(
argument|GLint x1
argument_list|,
argument|GLint y1
argument_list|,
argument|GLint x2
argument_list|,
argument|GLint y2
argument_list|)
block|;
name|void
name|glRectfv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v1
argument_list|,
specifier|const
name|GLfloat
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRectf
argument_list|(
argument|GLfloat x1
argument_list|,
argument|GLfloat y1
argument_list|,
argument|GLfloat x2
argument_list|,
argument|GLfloat y2
argument_list|)
block|;
name|void
name|glRectdv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v1
argument_list|,
specifier|const
name|GLdouble
operator|*
name|v2
argument_list|)
block|;
name|void
name|glRectd
argument_list|(
argument|GLdouble x1
argument_list|,
argument|GLdouble y1
argument_list|,
argument|GLdouble x2
argument_list|,
argument|GLdouble y2
argument_list|)
block|;
name|void
name|glRasterPos4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glRasterPos4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|;
name|void
name|glRasterPos4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glRasterPos4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glRasterPos3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glRasterPos3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glRasterPos3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glRasterPos3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glRasterPos2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glRasterPos2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glRasterPos2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glRasterPos2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glRasterPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glNormal3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3s
argument_list|(
argument|GLshort nx
argument_list|,
argument|GLshort ny
argument_list|,
argument|GLshort nz
argument_list|)
block|;
name|void
name|glNormal3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3i
argument_list|(
argument|GLint nx
argument_list|,
argument|GLint ny
argument_list|,
argument|GLint nz
argument_list|)
block|;
name|void
name|glNormal3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3f
argument_list|(
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|)
block|;
name|void
name|glNormal3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3d
argument_list|(
argument|GLdouble nx
argument_list|,
argument|GLdouble ny
argument_list|,
argument|GLdouble nz
argument_list|)
block|;
name|void
name|glNormal3bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glNormal3b
argument_list|(
argument|GLbyte nx
argument_list|,
argument|GLbyte ny
argument_list|,
argument|GLbyte nz
argument_list|)
block|;
name|void
name|glIndexsv
argument_list|(
specifier|const
name|GLshort
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexs
argument_list|(
argument|GLshort c
argument_list|)
block|;
name|void
name|glIndexiv
argument_list|(
specifier|const
name|GLint
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexi
argument_list|(
argument|GLint c
argument_list|)
block|;
name|void
name|glIndexfv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexf
argument_list|(
argument|GLfloat c
argument_list|)
block|;
name|void
name|glIndexdv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|c
argument_list|)
block|;
name|void
name|glIndexd
argument_list|(
argument|GLdouble c
argument_list|)
block|;
name|void
name|glEnd
argument_list|()
block|;
name|void
name|glEdgeFlagv
argument_list|(
specifier|const
name|GLboolean
operator|*
name|flag
argument_list|)
block|;
name|void
name|glEdgeFlag
argument_list|(
argument|GLboolean flag
argument_list|)
block|;
name|void
name|glColor4usv
argument_list|(
specifier|const
name|GLushort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|,
argument|GLushort alpha
argument_list|)
block|;
name|void
name|glColor4uiv
argument_list|(
specifier|const
name|GLuint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|,
argument|GLuint alpha
argument_list|)
block|;
name|void
name|glColor4ubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|,
argument|GLubyte alpha
argument_list|)
block|;
name|void
name|glColor4sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|,
argument|GLshort alpha
argument_list|)
block|;
name|void
name|glColor4iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|,
argument|GLint alpha
argument_list|)
block|;
name|void
name|glColor4fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|;
name|void
name|glColor4dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|,
argument|GLdouble alpha
argument_list|)
block|;
name|void
name|glColor4bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor4b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|,
argument|GLbyte alpha
argument_list|)
block|;
name|void
name|glColor3usv
argument_list|(
specifier|const
name|GLushort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|;
name|void
name|glColor3uiv
argument_list|(
specifier|const
name|GLuint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|;
name|void
name|glColor3ubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|;
name|void
name|glColor3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|;
name|void
name|glColor3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|;
name|void
name|glColor3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|;
name|void
name|glColor3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|;
name|void
name|glColor3bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|;
name|void
name|glBitmap
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLfloat xorig
argument_list|,
argument|GLfloat yorig
argument_list|,
argument|GLfloat xmove
argument_list|,
argument|GLfloat ymove
argument_list|,
argument|const GLubyte *bitmap
argument_list|)
block|;
name|void
name|glBegin
argument_list|(
argument|GLenum mode
argument_list|)
block|;
name|void
name|glListBase
argument_list|(
argument|GLuint base
argument_list|)
block|;
name|GLuint
name|glGenLists
argument_list|(
argument|GLsizei range
argument_list|)
block|;
name|void
name|glDeleteLists
argument_list|(
argument|GLuint list
argument_list|,
argument|GLsizei range
argument_list|)
block|;
name|void
name|glCallLists
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *lists
argument_list|)
block|;
name|void
name|glCallList
argument_list|(
argument|GLuint list
argument_list|)
block|;
name|void
name|glEndList
argument_list|()
block|;
name|void
name|glNewList
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum mode
argument_list|)
block|;
comment|// OpenGL 1.1 deprecated functions
name|void
name|glPushClientAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|;
name|void
name|glPopClientAttrib
argument_list|()
block|;
name|void
name|glPrioritizeTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|const GLfloat *priorities
argument_list|)
block|;
name|GLboolean
name|glAreTexturesResident
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|GLboolean *residences
argument_list|)
block|;
name|void
name|glVertexPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glTexCoordPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glNormalPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glInterleavedArrays
argument_list|(
argument|GLenum format
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glIndexPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glEnableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|;
name|void
name|glEdgeFlagPointer
argument_list|(
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glDisableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|;
name|void
name|glColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glArrayElement
argument_list|(
argument|GLint i
argument_list|)
block|;
comment|// OpenGL 1.2 deprecated functions
name|void
name|glResetMinmax
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glResetHistogram
argument_list|(
argument|GLenum target
argument_list|)
block|;
name|void
name|glMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|;
name|void
name|glHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|;
name|void
name|glGetMinmaxParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetMinmaxParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|;
name|void
name|glGetHistogramParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetHistogramParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|;
name|void
name|glSeparableFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *row
argument_list|,
argument|const GLvoid *column
argument_list|)
block|;
name|void
name|glGetSeparableFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *row
argument_list|,
argument|GLvoid *column
argument_list|,
argument|GLvoid *span
argument_list|)
block|;
name|void
name|glGetConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetConvolutionFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *image
argument_list|)
block|;
name|void
name|glCopyConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|;
name|void
name|glCopyConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glConvolutionParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint params
argument_list|)
block|;
name|void
name|glConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glConvolutionParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat params
argument_list|)
block|;
name|void
name|glConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|;
name|void
name|glConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|;
name|void
name|glCopyColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *data
argument_list|)
block|;
name|void
name|glGetColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|;
name|void
name|glGetColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|;
name|void
name|glGetColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *table
argument_list|)
block|;
name|void
name|glCopyColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|;
name|void
name|glColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|;
name|void
name|glColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|;
name|void
name|glColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *table
argument_list|)
block|;
comment|// OpenGL 1.3 deprecated functions
name|void
name|glMultTransposeMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glMultTransposeMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadTransposeMatrixd
argument_list|(
specifier|const
name|GLdouble
operator|*
name|m
argument_list|)
block|;
name|void
name|glLoadTransposeMatrixf
argument_list|(
specifier|const
name|GLfloat
operator|*
name|m
argument_list|)
block|;
name|void
name|glMultiTexCoord4sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|;
name|void
name|glMultiTexCoord4iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|;
name|void
name|glMultiTexCoord4fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|;
name|void
name|glMultiTexCoord4dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord4d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|;
name|void
name|glMultiTexCoord3sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|;
name|void
name|glMultiTexCoord3iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|;
name|void
name|glMultiTexCoord3fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|;
name|void
name|glMultiTexCoord3dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord3d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|;
name|void
name|glMultiTexCoord2sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|;
name|void
name|glMultiTexCoord2iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|;
name|void
name|glMultiTexCoord2fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|;
name|void
name|glMultiTexCoord2dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|;
name|void
name|glMultiTexCoord1sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|)
block|;
name|void
name|glMultiTexCoord1iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|)
block|;
name|void
name|glMultiTexCoord1fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|)
block|;
name|void
name|glMultiTexCoord1dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glMultiTexCoord1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|)
block|;
name|void
name|glClientActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|;
comment|// OpenGL 1.4 deprecated functions
name|void
name|glWindowPos3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glWindowPos3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|;
name|void
name|glWindowPos3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glWindowPos3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glWindowPos2sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glWindowPos2iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|;
name|void
name|glWindowPos2fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glWindowPos2dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glWindowPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glSecondaryColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glSecondaryColor3usv
argument_list|(
specifier|const
name|GLushort
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|;
name|void
name|glSecondaryColor3uiv
argument_list|(
specifier|const
name|GLuint
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|;
name|void
name|glSecondaryColor3ubv
argument_list|(
specifier|const
name|GLubyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|;
name|void
name|glSecondaryColor3sv
argument_list|(
specifier|const
name|GLshort
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|;
name|void
name|glSecondaryColor3iv
argument_list|(
specifier|const
name|GLint
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|;
name|void
name|glSecondaryColor3fv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|;
name|void
name|glSecondaryColor3dv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|;
name|void
name|glSecondaryColor3bv
argument_list|(
specifier|const
name|GLbyte
operator|*
name|v
argument_list|)
block|;
name|void
name|glSecondaryColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|;
name|void
name|glFogCoordPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|;
name|void
name|glFogCoorddv
argument_list|(
specifier|const
name|GLdouble
operator|*
name|coord
argument_list|)
block|;
name|void
name|glFogCoordd
argument_list|(
argument|GLdouble coord
argument_list|)
block|;
name|void
name|glFogCoordfv
argument_list|(
specifier|const
name|GLfloat
operator|*
name|coord
argument_list|)
block|;
name|void
name|glFogCoordf
argument_list|(
argument|GLfloat coord
argument_list|)
block|;
comment|// OpenGL 1.5 deprecated functions
comment|// OpenGL 2.0 deprecated functions
name|void
name|glVertexAttrib4usv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4ubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|;
name|void
name|glVertexAttrib4iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib4f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|;
name|void
name|glVertexAttrib4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|;
name|void
name|glVertexAttrib4bv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nusv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nub
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|;
name|void
name|glVertexAttrib4Nsv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Niv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|;
name|void
name|glVertexAttrib4Nbv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|;
name|void
name|glVertexAttrib3sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib3s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|;
name|void
name|glVertexAttrib3fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib3f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|;
name|void
name|glVertexAttrib3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|;
name|void
name|glVertexAttrib2sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib2s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|;
name|void
name|glVertexAttrib2fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib2f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|;
name|void
name|glVertexAttrib2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|;
name|void
name|glVertexAttrib1sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|;
name|void
name|glVertexAttrib1s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|;
name|void
name|glVertexAttrib1fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|;
name|void
name|glVertexAttrib1f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|;
name|void
name|glVertexAttrib1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|;
name|void
name|glVertexAttrib1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|;
comment|// OpenGL 2.1 deprecated functions
name|private
operator|:
name|friend
name|class
name|QOpenGLContext
block|;
specifier|static
name|bool
name|isContextCompatible
argument_list|(
name|QOpenGLContext
operator|*
name|context
argument_list|)
block|;
specifier|static
name|QOpenGLVersionProfile
name|versionProfile
argument_list|()
block|;
name|QOpenGLFunctions_1_0_CoreBackend
operator|*
name|d_1_0_Core
block|;
name|QOpenGLFunctions_1_1_CoreBackend
operator|*
name|d_1_1_Core
block|;
name|QOpenGLFunctions_1_2_CoreBackend
operator|*
name|d_1_2_Core
block|;
name|QOpenGLFunctions_1_3_CoreBackend
operator|*
name|d_1_3_Core
block|;
name|QOpenGLFunctions_1_4_CoreBackend
operator|*
name|d_1_4_Core
block|;
name|QOpenGLFunctions_1_5_CoreBackend
operator|*
name|d_1_5_Core
block|;
name|QOpenGLFunctions_2_0_CoreBackend
operator|*
name|d_2_0_Core
block|;
name|QOpenGLFunctions_2_1_CoreBackend
operator|*
name|d_2_1_Core
block|;
name|QOpenGLFunctions_1_0_DeprecatedBackend
operator|*
name|d_1_0_Deprecated
block|;
name|QOpenGLFunctions_1_1_DeprecatedBackend
operator|*
name|d_1_1_Deprecated
block|;
name|QOpenGLFunctions_1_2_DeprecatedBackend
operator|*
name|d_1_2_Deprecated
block|;
name|QOpenGLFunctions_1_3_DeprecatedBackend
operator|*
name|d_1_3_Deprecated
block|;
name|QOpenGLFunctions_1_4_DeprecatedBackend
operator|*
name|d_1_4_Deprecated
block|;
name|void
operator|*
name|m_reserved_2_0_Deprecated
block|;
comment|// To maintain BC
block|}
decl_stmt|;
end_decl_stmt
begin_comment
comment|// OpenGL 1.0 core functions
end_comment
begin_expr_stmt
DECL|function|glViewport
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glViewport
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Viewport
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glDepthRange
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDepthRange
argument_list|(
argument|GLdouble nearVal
argument_list|,
argument|GLdouble farVal
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthRange
argument_list|(
name|nearVal
argument_list|,
name|farVal
argument_list|)
block|; }
DECL|function|glIsEnabled
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glIsEnabled
argument_list|(
argument|GLenum cap
argument_list|)
block|{
return|return
name|d_1_0_Core
operator|->
name|IsEnabled
argument_list|(
name|cap
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetTexLevelParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexLevelParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexLevelParameteriv
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexLevelParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexLevelParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexLevelParameterfv
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexImage
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetTexImage
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glGetString
specifier|inline
specifier|const
name|GLubyte
operator|*
name|QOpenGLFunctions_2_1
operator|::
name|glGetString
argument_list|(
argument|GLenum name
argument_list|)
block|{
return|return
name|d_1_0_Core
operator|->
name|GetString
argument_list|(
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetIntegerv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetIntegerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetIntegerv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetFloatv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetFloatv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetFloatv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetError
specifier|inline
name|GLenum
name|QOpenGLFunctions_2_1
operator|::
name|glGetError
argument_list|()
block|{
return|return
name|d_1_0_Core
operator|->
name|GetError
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetDoublev
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetDoublev
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetDoublev
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetBooleanv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetBooleanv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLboolean *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|GetBooleanv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glReadPixels
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glReadPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ReadPixels
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glReadBuffer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glReadBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ReadBuffer
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glPixelStorei
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelStorei
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PixelStorei
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelStoref
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelStoref
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PixelStoref
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glDepthFunc
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDepthFunc
argument_list|(
argument|GLenum func
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthFunc
argument_list|(
name|func
argument_list|)
block|; }
DECL|function|glStencilOp
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glStencilOp
argument_list|(
argument|GLenum fail
argument_list|,
argument|GLenum zfail
argument_list|,
argument|GLenum zpass
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilOp
argument_list|(
name|fail
argument_list|,
name|zfail
argument_list|,
name|zpass
argument_list|)
block|; }
DECL|function|glStencilFunc
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glStencilFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilFunc
argument_list|(
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glLogicOp
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLogicOp
argument_list|(
argument|GLenum opcode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|LogicOp
argument_list|(
name|opcode
argument_list|)
block|; }
DECL|function|glBlendFunc
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBlendFunc
argument_list|(
argument|GLenum sfactor
argument_list|,
argument|GLenum dfactor
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|BlendFunc
argument_list|(
name|sfactor
argument_list|,
name|dfactor
argument_list|)
block|; }
DECL|function|glFlush
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFlush
argument_list|()
block|{
name|d_1_0_Core
operator|->
name|Flush
argument_list|()
block|; }
DECL|function|glFinish
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFinish
argument_list|()
block|{
name|d_1_0_Core
operator|->
name|Finish
argument_list|()
block|; }
DECL|function|glEnable
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEnable
argument_list|(
argument|GLenum cap
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Enable
argument_list|(
name|cap
argument_list|)
block|; }
DECL|function|glDisable
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDisable
argument_list|(
argument|GLenum cap
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Disable
argument_list|(
name|cap
argument_list|)
block|; }
DECL|function|glDepthMask
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDepthMask
argument_list|(
argument|GLboolean flag
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DepthMask
argument_list|(
name|flag
argument_list|)
block|; }
DECL|function|glColorMask
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColorMask
argument_list|(
argument|GLboolean red
argument_list|,
argument|GLboolean green
argument_list|,
argument|GLboolean blue
argument_list|,
argument|GLboolean alpha
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ColorMask
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glStencilMask
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glStencilMask
argument_list|(
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|StencilMask
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glClearDepth
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClearDepth
argument_list|(
argument|GLdouble depth
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearDepth
argument_list|(
name|depth
argument_list|)
block|; }
DECL|function|glClearStencil
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClearStencil
argument_list|(
argument|GLint s
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearStencil
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glClearColor
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClearColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|ClearColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glClear
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClear
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Clear
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glDrawBuffer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDrawBuffer
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|DrawBuffer
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameteri
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexParameterf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|TexParameterf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glScissor
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glScissor
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Scissor
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glPolygonMode
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPolygonMode
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PolygonMode
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glPointSize
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPointSize
argument_list|(
argument|GLfloat size
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|PointSize
argument_list|(
name|size
argument_list|)
block|; }
DECL|function|glLineWidth
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLineWidth
argument_list|(
argument|GLfloat width
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|LineWidth
argument_list|(
name|width
argument_list|)
block|; }
DECL|function|glHint
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glHint
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|Hint
argument_list|(
name|target
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glFrontFace
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFrontFace
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|FrontFace
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glCullFace
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCullFace
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Core
operator|->
name|CullFace
argument_list|(
name|mode
argument_list|)
block|; }
comment|// OpenGL 1.1 core functions
DECL|function|glIndexubv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexubv
argument_list|(
argument|const GLubyte *c
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|Indexubv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexub
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexub
argument_list|(
argument|GLubyte c
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|Indexub
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIsTexture
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glIsTexture
argument_list|(
argument|GLuint texture
argument_list|)
block|{
return|return
name|d_1_1_Core
operator|->
name|IsTexture
argument_list|(
name|texture
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenTextures
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGenTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *textures
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|GenTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glDeleteTextures
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDeleteTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DeleteTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|)
block|; }
DECL|function|glBindTexture
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBindTexture
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint texture
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|BindTexture
argument_list|(
name|target
argument_list|,
name|texture
argument_list|)
block|; }
DECL|function|glTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|TexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|TexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glCopyTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glCopyTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|CopyTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|border
argument_list|)
block|; }
DECL|function|glPolygonOffset
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPolygonOffset
argument_list|(
argument|GLfloat factor
argument_list|,
argument|GLfloat units
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|PolygonOffset
argument_list|(
name|factor
argument_list|,
name|units
argument_list|)
block|; }
DECL|function|glGetPointerv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetPointerv
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|GetPointerv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glDrawElements
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DrawElements
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glDrawArrays
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint first
argument_list|,
argument|GLsizei count
argument_list|)
block|{
name|d_1_1_Core
operator|->
name|DrawArrays
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|)
block|; }
comment|// OpenGL 1.2 core functions
DECL|function|glCopyTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|CopyTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|TexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glTexImage3D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|TexImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glDrawRangeElements
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDrawRangeElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLuint start
argument_list|,
argument|GLuint end
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *indices
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|DrawRangeElements
argument_list|(
name|mode
argument_list|,
name|start
argument_list|,
name|end
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|)
block|; }
DECL|function|glBlendEquation
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBlendEquation
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|BlendEquation
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glBlendColor
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBlendColor
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_2_Core
operator|->
name|BlendColor
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
comment|// OpenGL 1.3 core functions
DECL|function|glGetCompressedTexImage
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetCompressedTexImage
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLvoid *img
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|GetCompressedTexImage
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|img
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCompressedTexSubImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCompressedTexSubImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexSubImage3D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCompressedTexSubImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLint xoffset
argument_list|,
argument|GLint yoffset
argument_list|,
argument|GLint zoffset
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLenum format
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexSubImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|xoffset
argument_list|,
name|yoffset
argument_list|,
name|zoffset
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|format
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCompressedTexImage1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage1D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCompressedTexImage2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage2D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glCompressedTexImage3D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCompressedTexImage3D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint level
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLsizei depth
argument_list|,
argument|GLint border
argument_list|,
argument|GLsizei imageSize
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|CompressedTexImage3D
argument_list|(
name|target
argument_list|,
name|level
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|depth
argument_list|,
name|border
argument_list|,
name|imageSize
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glSampleCoverage
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSampleCoverage
argument_list|(
argument|GLfloat value
argument_list|,
argument|GLboolean invert
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|SampleCoverage
argument_list|(
name|value
argument_list|,
name|invert
argument_list|)
block|; }
DECL|function|glActiveTexture
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|{
name|d_1_3_Core
operator|->
name|ActiveTexture
argument_list|(
name|texture
argument_list|)
block|; }
comment|// OpenGL 1.4 core functions
DECL|function|glPointParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPointParameteriv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameteriv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameteri
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPointParameteri
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameteri
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPointParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPointParameterfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameterfv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glPointParameterf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPointParameterf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|PointParameterf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMultiDrawElements
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiDrawElements
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid* const *indices
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|MultiDrawElements
argument_list|(
name|mode
argument_list|,
name|count
argument_list|,
name|type
argument_list|,
name|indices
argument_list|,
name|drawcount
argument_list|)
block|; }
DECL|function|glMultiDrawArrays
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiDrawArrays
argument_list|(
argument|GLenum mode
argument_list|,
argument|const GLint *first
argument_list|,
argument|const GLsizei *count
argument_list|,
argument|GLsizei drawcount
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|MultiDrawArrays
argument_list|(
name|mode
argument_list|,
name|first
argument_list|,
name|count
argument_list|,
name|drawcount
argument_list|)
block|; }
DECL|function|glBlendFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBlendFuncSeparate
argument_list|(
argument|GLenum sfactorRGB
argument_list|,
argument|GLenum dfactorRGB
argument_list|,
argument|GLenum sfactorAlpha
argument_list|,
argument|GLenum dfactorAlpha
argument_list|)
block|{
name|d_1_4_Core
operator|->
name|BlendFuncSeparate
argument_list|(
name|sfactorRGB
argument_list|,
name|dfactorRGB
argument_list|,
name|sfactorAlpha
argument_list|,
name|dfactorAlpha
argument_list|)
block|; }
comment|// OpenGL 1.5 core functions
DECL|function|glGetBufferPointerv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetBufferPointerv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferPointerv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetBufferParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetBufferParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glUnmapBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glUnmapBuffer
argument_list|(
argument|GLenum target
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|UnmapBuffer
argument_list|(
name|target
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glMapBuffer
specifier|inline
name|GLvoid
operator|*
name|QOpenGLFunctions_2_1
operator|::
name|glMapBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum access
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|MapBuffer
argument_list|(
name|target
argument_list|,
name|access
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|GLvoid *data
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetBufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferSubData
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBufferSubData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLintptr offset
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BufferSubData
argument_list|(
name|target
argument_list|,
name|offset
argument_list|,
name|size
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glBufferData
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBufferData
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizeiptr size
argument_list|,
argument|const GLvoid *data
argument_list|,
argument|GLenum usage
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BufferData
argument_list|(
name|target
argument_list|,
name|size
argument_list|,
name|data
argument_list|,
name|usage
argument_list|)
block|; }
DECL|function|glIsBuffer
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glIsBuffer
argument_list|(
argument|GLuint buffer
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|IsBuffer
argument_list|(
name|buffer
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGenBuffers
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGenBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *buffers
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GenBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glDeleteBuffers
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDeleteBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *buffers
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|DeleteBuffers
argument_list|(
name|n
argument_list|,
name|buffers
argument_list|)
block|; }
DECL|function|glBindBuffer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBindBuffer
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint buffer
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BindBuffer
argument_list|(
name|target
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glGetQueryObjectuiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetQueryObjectuiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLuint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryObjectuiv
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryObjectiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetQueryObjectiv
argument_list|(
argument|GLuint id
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryObjectiv
argument_list|(
name|id
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetQueryiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetQueryiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GetQueryiv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glEndQuery
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEndQuery
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|EndQuery
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glBeginQuery
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBeginQuery
argument_list|(
argument|GLenum target
argument_list|,
argument|GLuint id
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|BeginQuery
argument_list|(
name|target
argument_list|,
name|id
argument_list|)
block|; }
DECL|function|glIsQuery
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glIsQuery
argument_list|(
argument|GLuint id
argument_list|)
block|{
return|return
name|d_1_5_Core
operator|->
name|IsQuery
argument_list|(
name|id
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteQueries
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDeleteQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *ids
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|DeleteQueries
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
DECL|function|glGenQueries
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGenQueries
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLuint *ids
argument_list|)
block|{
name|d_1_5_Core
operator|->
name|GenQueries
argument_list|(
name|n
argument_list|,
name|ids
argument_list|)
block|; }
comment|// OpenGL 2.0 core functions
DECL|function|glVertexAttribPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttribPointer
argument_list|(
argument|GLuint index
argument_list|,
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLboolean normalized
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttribPointer
argument_list|(
name|index
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|normalized
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glValidateProgram
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glValidateProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|ValidateProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glUniformMatrix4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UniformMatrix2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform4iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform3iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform2iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform1iv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLint *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1iv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform1fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform1fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniform4i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform4i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|,
argument|GLint v3
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform3i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|,
argument|GLint v2
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform2i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|,
argument|GLint v1
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform1i
argument_list|(
argument|GLint location
argument_list|,
argument|GLint v0
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1i
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glUniform4f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform4f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLfloat v3
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform4f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|v3
argument_list|)
block|; }
DECL|function|glUniform3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform3f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform3f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glUniform2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform2f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|,
argument|GLfloat v1
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform2f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|,
name|v1
argument_list|)
block|; }
DECL|function|glUniform1f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniform1f
argument_list|(
argument|GLint location
argument_list|,
argument|GLfloat v0
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|Uniform1f
argument_list|(
name|location
argument_list|,
name|v0
argument_list|)
block|; }
DECL|function|glUseProgram
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUseProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|UseProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glShaderSource
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei count
argument_list|,
argument|const GLchar* const *string
argument_list|,
argument|const GLint *length
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|ShaderSource
argument_list|(
name|shader
argument_list|,
name|count
argument_list|,
name|string
argument_list|,
name|length
argument_list|)
block|; }
DECL|function|glLinkProgram
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLinkProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|LinkProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glIsShader
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glIsShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|IsShader
argument_list|(
name|shader
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glIsProgram
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glIsProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|IsProgram
argument_list|(
name|program
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetVertexAttribPointerv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetVertexAttribPointerv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLvoid* *pointer
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribPointerv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glGetVertexAttribiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetVertexAttribiv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribiv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetVertexAttribfv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribfv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetVertexAttribdv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetVertexAttribdv
argument_list|(
argument|GLuint index
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetVertexAttribdv
argument_list|(
name|index
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetUniformiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetUniformiv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetUniformfv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLint location
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetUniformfv
argument_list|(
name|program
argument_list|,
name|location
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetUniformLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_2_1
operator|::
name|glGetUniformLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|GetUniformLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetShaderSource
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetShaderSource
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *source
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderSource
argument_list|(
name|shader
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|source
argument_list|)
block|; }
DECL|function|glGetShaderInfoLog
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetShaderInfoLog
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderInfoLog
argument_list|(
name|shader
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glGetShaderiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetShaderiv
argument_list|(
argument|GLuint shader
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetShaderiv
argument_list|(
name|shader
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetProgramInfoLog
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetProgramInfoLog
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLchar *infoLog
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetProgramInfoLog
argument_list|(
name|program
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|infoLog
argument_list|)
block|; }
DECL|function|glGetProgramiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetProgramiv
argument_list|(
argument|GLuint program
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetProgramiv
argument_list|(
name|program
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetAttribLocation
specifier|inline
name|GLint
name|QOpenGLFunctions_2_1
operator|::
name|glGetAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|GetAttribLocation
argument_list|(
name|program
argument_list|,
name|name
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetAttachedShaders
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetAttachedShaders
argument_list|(
argument|GLuint program
argument_list|,
argument|GLsizei maxCount
argument_list|,
argument|GLsizei *count
argument_list|,
argument|GLuint *obj
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetAttachedShaders
argument_list|(
name|program
argument_list|,
name|maxCount
argument_list|,
name|count
argument_list|,
name|obj
argument_list|)
block|; }
DECL|function|glGetActiveUniform
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetActiveUniform
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetActiveUniform
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glGetActiveAttrib
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetActiveAttrib
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|GLsizei bufSize
argument_list|,
argument|GLsizei *length
argument_list|,
argument|GLint *size
argument_list|,
argument|GLenum *type
argument_list|,
argument|GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|GetActiveAttrib
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|bufSize
argument_list|,
name|length
argument_list|,
name|size
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glEnableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEnableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|EnableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glDisableVertexAttribArray
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDisableVertexAttribArray
argument_list|(
argument|GLuint index
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DisableVertexAttribArray
argument_list|(
name|index
argument_list|)
block|; }
DECL|function|glDetachShader
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDetachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DetachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|; }
DECL|function|glDeleteShader
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDeleteShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DeleteShader
argument_list|(
name|shader
argument_list|)
block|; }
DECL|function|glDeleteProgram
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDeleteProgram
argument_list|(
argument|GLuint program
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DeleteProgram
argument_list|(
name|program
argument_list|)
block|; }
DECL|function|glCreateShader
specifier|inline
name|GLuint
name|QOpenGLFunctions_2_1
operator|::
name|glCreateShader
argument_list|(
argument|GLenum type
argument_list|)
block|{
return|return
name|d_2_0_Core
operator|->
name|CreateShader
argument_list|(
name|type
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCreateProgram
specifier|inline
name|GLuint
name|QOpenGLFunctions_2_1
operator|::
name|glCreateProgram
argument_list|()
block|{
return|return
name|d_2_0_Core
operator|->
name|CreateProgram
argument_list|()
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glCompileShader
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCompileShader
argument_list|(
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|CompileShader
argument_list|(
name|shader
argument_list|)
block|; }
DECL|function|glBindAttribLocation
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBindAttribLocation
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint index
argument_list|,
argument|const GLchar *name
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|BindAttribLocation
argument_list|(
name|program
argument_list|,
name|index
argument_list|,
name|name
argument_list|)
block|; }
DECL|function|glAttachShader
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glAttachShader
argument_list|(
argument|GLuint program
argument_list|,
argument|GLuint shader
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|AttachShader
argument_list|(
name|program
argument_list|,
name|shader
argument_list|)
block|; }
DECL|function|glStencilMaskSeparate
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glStencilMaskSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilMaskSeparate
argument_list|(
name|face
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilFuncSeparate
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glStencilFuncSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum func
argument_list|,
argument|GLint ref
argument_list|,
argument|GLuint mask
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilFuncSeparate
argument_list|(
name|face
argument_list|,
name|func
argument_list|,
name|ref
argument_list|,
name|mask
argument_list|)
block|; }
DECL|function|glStencilOpSeparate
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glStencilOpSeparate
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum sfail
argument_list|,
argument|GLenum dpfail
argument_list|,
argument|GLenum dppass
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|StencilOpSeparate
argument_list|(
name|face
argument_list|,
name|sfail
argument_list|,
name|dpfail
argument_list|,
name|dppass
argument_list|)
block|; }
DECL|function|glDrawBuffers
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDrawBuffers
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLenum *bufs
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|DrawBuffers
argument_list|(
name|n
argument_list|,
name|bufs
argument_list|)
block|; }
DECL|function|glBlendEquationSeparate
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBlendEquationSeparate
argument_list|(
argument|GLenum modeRGB
argument_list|,
argument|GLenum modeAlpha
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|BlendEquationSeparate
argument_list|(
name|modeRGB
argument_list|,
name|modeAlpha
argument_list|)
block|; }
comment|// OpenGL 2.1 core functions
DECL|function|glUniformMatrix4x3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix4x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix4x3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix3x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix3x4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix4x2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix4x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix4x2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix2x4fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix2x4fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix3x2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix3x2fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix3x2fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glUniformMatrix2x3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glUniformMatrix2x3fv
argument_list|(
argument|GLint location
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLboolean transpose
argument_list|,
argument|const GLfloat *value
argument_list|)
block|{
name|d_2_1_Core
operator|->
name|UniformMatrix2x3fv
argument_list|(
name|location
argument_list|,
name|count
argument_list|,
name|transpose
argument_list|,
name|value
argument_list|)
block|; }
comment|// OpenGL 1.0 deprecated functions
DECL|function|glTranslatef
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTranslatef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Translatef
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glTranslated
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTranslated
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Translated
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glScalef
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glScalef
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Scalef
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glScaled
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glScaled
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Scaled
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRotatef
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRotatef
argument_list|(
argument|GLfloat angle
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rotatef
argument_list|(
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRotated
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRotated
argument_list|(
argument|GLdouble angle
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rotated
argument_list|(
name|angle
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glPushMatrix
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPushMatrix
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PushMatrix
argument_list|()
block|; }
DECL|function|glPopMatrix
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPopMatrix
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PopMatrix
argument_list|()
block|; }
DECL|function|glOrtho
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glOrtho
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Ortho
argument_list|(
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
block|; }
DECL|function|glMultMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MultMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMultMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MultMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMatrixMode
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMatrixMode
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MatrixMode
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glLoadMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLoadMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LoadMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLoadMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LoadMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadIdentity
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLoadIdentity
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|LoadIdentity
argument_list|()
block|; }
DECL|function|glFrustum
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFrustum
argument_list|(
argument|GLdouble left
argument_list|,
argument|GLdouble right
argument_list|,
argument|GLdouble bottom
argument_list|,
argument|GLdouble top
argument_list|,
argument|GLdouble zNear
argument_list|,
argument|GLdouble zFar
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Frustum
argument_list|(
name|left
argument_list|,
name|right
argument_list|,
name|bottom
argument_list|,
name|top
argument_list|,
name|zNear
argument_list|,
name|zFar
argument_list|)
block|; }
DECL|function|glIsList
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glIsList
argument_list|(
argument|GLuint list
argument_list|)
block|{
return|return
name|d_1_0_Deprecated
operator|->
name|IsList
argument_list|(
name|list
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glGetTexGeniv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexGeniv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexGenfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexGenfv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexGendv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexGendv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexEnviv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexEnviv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetTexEnvfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetTexEnvfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetPolygonStipple
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetPolygonStipple
argument_list|(
argument|GLubyte *mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPolygonStipple
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glGetPixelMapusv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLushort *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPixelMapusv
argument_list|(
name|map
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetPixelMapuiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLuint *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPixelMapuiv
argument_list|(
name|map
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetPixelMapfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLfloat *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetPixelMapfv
argument_list|(
name|map
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetMaterialiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMaterialiv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMaterialfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMaterialfv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMapiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMapiv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMapiv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetMapfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMapfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMapfv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetMapdv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMapdv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum query
argument_list|,
argument|GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetMapdv
argument_list|(
name|target
argument_list|,
name|query
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glGetLightiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetLightiv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetLightfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetLightfv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetClipPlane
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|GLdouble *equation
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|GetClipPlane
argument_list|(
name|plane
argument_list|,
name|equation
argument_list|)
block|; }
DECL|function|glDrawPixels
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDrawPixels
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *pixels
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|DrawPixels
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|pixels
argument_list|)
block|; }
DECL|function|glCopyPixels
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyPixels
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum type
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|CopyPixels
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|type
argument_list|)
block|; }
DECL|function|glPixelMapusv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelMapusv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLint mapsize
argument_list|,
argument|const GLushort *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelMapusv
argument_list|(
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPixelMapuiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelMapuiv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLint mapsize
argument_list|,
argument|const GLuint *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelMapuiv
argument_list|(
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPixelMapfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelMapfv
argument_list|(
argument|GLenum map
argument_list|,
argument|GLint mapsize
argument_list|,
argument|const GLfloat *values
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelMapfv
argument_list|(
name|map
argument_list|,
name|mapsize
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glPixelTransferi
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelTransferi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelTransferi
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelTransferf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelTransferf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelTransferf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glPixelZoom
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPixelZoom
argument_list|(
argument|GLfloat xfactor
argument_list|,
argument|GLfloat yfactor
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PixelZoom
argument_list|(
name|xfactor
argument_list|,
name|yfactor
argument_list|)
block|; }
DECL|function|glAlphaFunc
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glAlphaFunc
argument_list|(
argument|GLenum func
argument_list|,
argument|GLfloat ref
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|AlphaFunc
argument_list|(
name|func
argument_list|,
name|ref
argument_list|)
block|; }
DECL|function|glEvalPoint2
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalPoint2
argument_list|(
argument|GLint i
argument_list|,
argument|GLint j
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalPoint2
argument_list|(
name|i
argument_list|,
name|j
argument_list|)
block|; }
DECL|function|glEvalMesh2
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalMesh2
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|,
argument|GLint j1
argument_list|,
argument|GLint j2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalMesh2
argument_list|(
name|mode
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|,
name|j1
argument_list|,
name|j2
argument_list|)
block|; }
DECL|function|glEvalPoint1
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalPoint1
argument_list|(
argument|GLint i
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalPoint1
argument_list|(
name|i
argument_list|)
block|; }
DECL|function|glEvalMesh1
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalMesh1
argument_list|(
argument|GLenum mode
argument_list|,
argument|GLint i1
argument_list|,
argument|GLint i2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalMesh1
argument_list|(
name|mode
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|)
block|; }
DECL|function|glEvalCoord2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord2fv
argument_list|(
argument|const GLfloat *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2fv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord2f
argument_list|(
argument|GLfloat u
argument_list|,
argument|GLfloat v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2f
argument_list|(
name|u
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glEvalCoord2dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord2dv
argument_list|(
argument|const GLdouble *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2dv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord2d
argument_list|(
argument|GLdouble u
argument_list|,
argument|GLdouble v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord2d
argument_list|(
name|u
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glEvalCoord1fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord1fv
argument_list|(
argument|const GLfloat *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1fv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord1f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord1f
argument_list|(
argument|GLfloat u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1f
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord1dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord1dv
argument_list|(
argument|const GLdouble *u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1dv
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glEvalCoord1d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEvalCoord1d
argument_list|(
argument|GLdouble u
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EvalCoord1d
argument_list|(
name|u
argument_list|)
block|; }
DECL|function|glMapGrid2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMapGrid2f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid2f
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|vn
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glMapGrid2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMapGrid2d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint vn
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid2d
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|vn
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glMapGrid1f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMapGrid1f
argument_list|(
argument|GLint un
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid1f
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|)
block|; }
DECL|function|glMapGrid1d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMapGrid1d
argument_list|(
argument|GLint un
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|MapGrid1d
argument_list|(
name|un
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|)
block|; }
DECL|function|glMap2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMap2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLfloat v1
argument_list|,
argument|GLfloat v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map2f
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMap2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMap2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint ustride
argument_list|,
argument|GLint uorder
argument_list|,
argument|GLdouble v1
argument_list|,
argument|GLdouble v2
argument_list|,
argument|GLint vstride
argument_list|,
argument|GLint vorder
argument_list|,
argument|const GLdouble *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map2d
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|ustride
argument_list|,
name|uorder
argument_list|,
name|v1
argument_list|,
name|v2
argument_list|,
name|vstride
argument_list|,
name|vorder
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMap1f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMap1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat u1
argument_list|,
argument|GLfloat u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLfloat *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map1f
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glMap1d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMap1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble u1
argument_list|,
argument|GLdouble u2
argument_list|,
argument|GLint stride
argument_list|,
argument|GLint order
argument_list|,
argument|const GLdouble *points
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Map1d
argument_list|(
name|target
argument_list|,
name|u1
argument_list|,
name|u2
argument_list|,
name|stride
argument_list|,
name|order
argument_list|,
name|points
argument_list|)
block|; }
DECL|function|glPushAttrib
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPushAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PushAttrib
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glPopAttrib
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPopAttrib
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PopAttrib
argument_list|()
block|; }
DECL|function|glAccum
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glAccum
argument_list|(
argument|GLenum op
argument_list|,
argument|GLfloat value
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Accum
argument_list|(
name|op
argument_list|,
name|value
argument_list|)
block|; }
DECL|function|glIndexMask
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexMask
argument_list|(
argument|GLuint mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|IndexMask
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glClearIndex
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClearIndex
argument_list|(
argument|GLfloat c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ClearIndex
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glClearAccum
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClearAccum
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ClearAccum
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glPushName
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPushName
argument_list|(
argument|GLuint name
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PushName
argument_list|(
name|name
argument_list|)
block|; }
DECL|function|glPopName
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPopName
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|PopName
argument_list|()
block|; }
DECL|function|glPassThrough
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPassThrough
argument_list|(
argument|GLfloat token
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PassThrough
argument_list|(
name|token
argument_list|)
block|; }
DECL|function|glLoadName
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLoadName
argument_list|(
argument|GLuint name
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LoadName
argument_list|(
name|name
argument_list|)
block|; }
DECL|function|glInitNames
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glInitNames
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|InitNames
argument_list|()
block|; }
DECL|function|glRenderMode
specifier|inline
name|GLint
name|QOpenGLFunctions_2_1
operator|::
name|glRenderMode
argument_list|(
argument|GLenum mode
argument_list|)
block|{
return|return
name|d_1_0_Deprecated
operator|->
name|RenderMode
argument_list|(
name|mode
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glSelectBuffer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSelectBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLuint *buffer
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|SelectBuffer
argument_list|(
name|size
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glFeedbackBuffer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFeedbackBuffer
argument_list|(
argument|GLsizei size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLfloat *buffer
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|FeedbackBuffer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|buffer
argument_list|)
block|; }
DECL|function|glTexGeniv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexGeniv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGeniv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexGeni
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexGeni
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGeni
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexGenfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexGenfv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGenfv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexGenf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexGenf
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGenf
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexGendv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexGendv
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLdouble *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGendv
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexGend
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexGend
argument_list|(
argument|GLenum coord
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLdouble param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexGend
argument_list|(
name|coord
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexEnviv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexEnviv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnviv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexEnvi
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexEnvi
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnvi
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glTexEnvfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexEnvfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnvfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glTexEnvf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexEnvf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexEnvf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glShadeModel
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glShadeModel
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ShadeModel
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glPolygonStipple
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPolygonStipple
argument_list|(
argument|const GLubyte *mask
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|PolygonStipple
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glMaterialiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMaterialiv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materialiv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMateriali
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMateriali
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materiali
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glMaterialfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMaterialfv
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materialfv
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glMaterialf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMaterialf
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Materialf
argument_list|(
name|face
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLineStipple
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLineStipple
argument_list|(
argument|GLint factor
argument_list|,
argument|GLushort pattern
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LineStipple
argument_list|(
name|factor
argument_list|,
name|pattern
argument_list|)
block|; }
DECL|function|glLightModeliv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLightModeliv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModeliv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLightModeli
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLightModeli
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModeli
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLightModelfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLightModelfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModelfv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLightModelf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLightModelf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|LightModelf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLightiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLightiv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lightiv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLighti
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLighti
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lighti
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glLightfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLightfv
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lightfv
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glLightf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLightf
argument_list|(
argument|GLenum light
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Lightf
argument_list|(
name|light
argument_list|,
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFogiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogiv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogiv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFogi
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogi
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLint param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogi
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glFogfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogfv
argument_list|(
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogfv
argument_list|(
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glFogf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogf
argument_list|(
argument|GLenum pname
argument_list|,
argument|GLfloat param
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Fogf
argument_list|(
name|pname
argument_list|,
name|param
argument_list|)
block|; }
DECL|function|glColorMaterial
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColorMaterial
argument_list|(
argument|GLenum face
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ColorMaterial
argument_list|(
name|face
argument_list|,
name|mode
argument_list|)
block|; }
DECL|function|glClipPlane
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClipPlane
argument_list|(
argument|GLenum plane
argument_list|,
argument|const GLdouble *equation
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ClipPlane
argument_list|(
name|plane
argument_list|,
name|equation
argument_list|)
block|; }
DECL|function|glVertex4sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex4iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex4dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex4d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex4d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertex3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex3d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertex2sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2s
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertex2iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2i
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertex2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2f
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertex2dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glVertex2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertex2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Vertex2d
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glTexCoord4sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4s
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord4iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4i
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4f
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord4dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord4d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord4d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord4d
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glTexCoord3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3s
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3i
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3f
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord3d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord3d
argument_list|(
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glTexCoord2sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2s
argument_list|(
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2s
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord2iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2i
argument_list|(
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2i
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2f
argument_list|(
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2f
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord2dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord2d
argument_list|(
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord2d
argument_list|(
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glTexCoord1sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1s
argument_list|(
argument|GLshort s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1s
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glTexCoord1iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1i
argument_list|(
argument|GLint s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1i
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glTexCoord1fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1f
argument_list|(
argument|GLfloat s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1f
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glTexCoord1dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glTexCoord1d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoord1d
argument_list|(
argument|GLdouble s
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|TexCoord1d
argument_list|(
name|s
argument_list|)
block|; }
DECL|function|glRectsv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRectsv
argument_list|(
argument|const GLshort *v1
argument_list|,
argument|const GLshort *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectsv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRects
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRects
argument_list|(
argument|GLshort x1
argument_list|,
argument|GLshort y1
argument_list|,
argument|GLshort x2
argument_list|,
argument|GLshort y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rects
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRectiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRectiv
argument_list|(
argument|const GLint *v1
argument_list|,
argument|const GLint *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectiv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRecti
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRecti
argument_list|(
argument|GLint x1
argument_list|,
argument|GLint y1
argument_list|,
argument|GLint x2
argument_list|,
argument|GLint y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Recti
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRectfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRectfv
argument_list|(
argument|const GLfloat *v1
argument_list|,
argument|const GLfloat *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectfv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRectf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRectf
argument_list|(
argument|GLfloat x1
argument_list|,
argument|GLfloat y1
argument_list|,
argument|GLfloat x2
argument_list|,
argument|GLfloat y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectf
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRectdv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRectdv
argument_list|(
argument|const GLdouble *v1
argument_list|,
argument|const GLdouble *v2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectdv
argument_list|(
name|v1
argument_list|,
name|v2
argument_list|)
block|; }
DECL|function|glRectd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRectd
argument_list|(
argument|GLdouble x1
argument_list|,
argument|GLdouble y1
argument_list|,
argument|GLdouble x2
argument_list|,
argument|GLdouble y2
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Rectd
argument_list|(
name|x1
argument_list|,
name|y1
argument_list|,
name|x2
argument_list|,
name|y2
argument_list|)
block|; }
DECL|function|glRasterPos4sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos4iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|,
argument|GLint w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos4dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos4d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos4d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos4d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glRasterPos3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos3d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glRasterPos2sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2s
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glRasterPos2iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2i
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glRasterPos2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2f
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glRasterPos2dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glRasterPos2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glRasterPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|RasterPos2d
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glNormal3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3s
argument_list|(
argument|GLshort nx
argument_list|,
argument|GLshort ny
argument_list|,
argument|GLshort nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3s
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3i
argument_list|(
argument|GLint nx
argument_list|,
argument|GLint ny
argument_list|,
argument|GLint nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3i
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3f
argument_list|(
argument|GLfloat nx
argument_list|,
argument|GLfloat ny
argument_list|,
argument|GLfloat nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3f
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3d
argument_list|(
argument|GLdouble nx
argument_list|,
argument|GLdouble ny
argument_list|,
argument|GLdouble nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3d
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glNormal3bv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glNormal3b
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormal3b
argument_list|(
argument|GLbyte nx
argument_list|,
argument|GLbyte ny
argument_list|,
argument|GLbyte nz
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Normal3b
argument_list|(
name|nx
argument_list|,
name|ny
argument_list|,
name|nz
argument_list|)
block|; }
DECL|function|glIndexsv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexsv
argument_list|(
argument|const GLshort *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexsv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexs
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexs
argument_list|(
argument|GLshort c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexs
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexiv
argument_list|(
argument|const GLint *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexiv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexi
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexi
argument_list|(
argument|GLint c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexi
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexfv
argument_list|(
argument|const GLfloat *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexfv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexf
argument_list|(
argument|GLfloat c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexf
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexdv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexdv
argument_list|(
argument|const GLdouble *c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexdv
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glIndexd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexd
argument_list|(
argument|GLdouble c
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Indexd
argument_list|(
name|c
argument_list|)
block|; }
DECL|function|glEnd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEnd
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|End
argument_list|()
block|; }
DECL|function|glEdgeFlagv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEdgeFlagv
argument_list|(
argument|const GLboolean *flag
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EdgeFlagv
argument_list|(
name|flag
argument_list|)
block|; }
DECL|function|glEdgeFlag
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEdgeFlag
argument_list|(
argument|GLboolean flag
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|EdgeFlag
argument_list|(
name|flag
argument_list|)
block|; }
DECL|function|glColor4usv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4usv
argument_list|(
argument|const GLushort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4usv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4us
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|,
argument|GLushort alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4us
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4uiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4uiv
argument_list|(
argument|const GLuint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4uiv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4ui
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|,
argument|GLuint alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4ui
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4ubv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4ubv
argument_list|(
argument|const GLubyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4ubv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4ub
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|,
argument|GLubyte alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4ub
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|,
argument|GLshort alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4s
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|,
argument|GLint alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4i
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|,
argument|GLfloat alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4f
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|,
argument|GLdouble alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4d
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor4bv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor4b
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor4b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|,
argument|GLbyte alpha
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color4b
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|,
name|alpha
argument_list|)
block|; }
DECL|function|glColor3usv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3usv
argument_list|(
argument|const GLushort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3usv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3us
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3us
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3uiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3uiv
argument_list|(
argument|const GLuint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3uiv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3ui
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3ui
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3ubv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3ubv
argument_list|(
argument|const GLubyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3ubv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3ub
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3ub
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3s
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3i
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3f
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3d
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glColor3bv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glColor3b
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Color3b
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glBitmap
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBitmap
argument_list|(
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLfloat xorig
argument_list|,
argument|GLfloat yorig
argument_list|,
argument|GLfloat xmove
argument_list|,
argument|GLfloat ymove
argument_list|,
argument|const GLubyte *bitmap
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Bitmap
argument_list|(
name|width
argument_list|,
name|height
argument_list|,
name|xorig
argument_list|,
name|yorig
argument_list|,
name|xmove
argument_list|,
name|ymove
argument_list|,
name|bitmap
argument_list|)
block|; }
DECL|function|glBegin
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glBegin
argument_list|(
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|Begin
argument_list|(
name|mode
argument_list|)
block|; }
DECL|function|glListBase
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glListBase
argument_list|(
argument|GLuint base
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|ListBase
argument_list|(
name|base
argument_list|)
block|; }
DECL|function|glGenLists
specifier|inline
name|GLuint
name|QOpenGLFunctions_2_1
operator|::
name|glGenLists
argument_list|(
argument|GLsizei range
argument_list|)
block|{
return|return
name|d_1_0_Deprecated
operator|->
name|GenLists
argument_list|(
name|range
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glDeleteLists
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDeleteLists
argument_list|(
argument|GLuint list
argument_list|,
argument|GLsizei range
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|DeleteLists
argument_list|(
name|list
argument_list|,
name|range
argument_list|)
block|; }
DECL|function|glCallLists
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCallLists
argument_list|(
argument|GLsizei n
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *lists
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|CallLists
argument_list|(
name|n
argument_list|,
name|type
argument_list|,
name|lists
argument_list|)
block|; }
DECL|function|glCallList
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCallList
argument_list|(
argument|GLuint list
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|CallList
argument_list|(
name|list
argument_list|)
block|; }
DECL|function|glEndList
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEndList
argument_list|()
block|{
name|d_1_0_Deprecated
operator|->
name|EndList
argument_list|()
block|; }
DECL|function|glNewList
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNewList
argument_list|(
argument|GLuint list
argument_list|,
argument|GLenum mode
argument_list|)
block|{
name|d_1_0_Deprecated
operator|->
name|NewList
argument_list|(
name|list
argument_list|,
name|mode
argument_list|)
block|; }
comment|// OpenGL 1.1 deprecated functions
DECL|function|glPushClientAttrib
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPushClientAttrib
argument_list|(
argument|GLbitfield mask
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|PushClientAttrib
argument_list|(
name|mask
argument_list|)
block|; }
DECL|function|glPopClientAttrib
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPopClientAttrib
argument_list|()
block|{
name|d_1_1_Deprecated
operator|->
name|PopClientAttrib
argument_list|()
block|; }
DECL|function|glPrioritizeTextures
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glPrioritizeTextures
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|const GLfloat *priorities
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|PrioritizeTextures
argument_list|(
name|n
argument_list|,
name|textures
argument_list|,
name|priorities
argument_list|)
block|; }
DECL|function|glAreTexturesResident
specifier|inline
name|GLboolean
name|QOpenGLFunctions_2_1
operator|::
name|glAreTexturesResident
argument_list|(
argument|GLsizei n
argument_list|,
argument|const GLuint *textures
argument_list|,
argument|GLboolean *residences
argument_list|)
block|{
return|return
name|d_1_1_Deprecated
operator|->
name|AreTexturesResident
argument_list|(
name|n
argument_list|,
name|textures
argument_list|,
name|residences
argument_list|)
return|;
block|}
end_expr_stmt
begin_expr_stmt
DECL|function|glVertexPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|VertexPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glTexCoordPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glTexCoordPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|TexCoordPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glNormalPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glNormalPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|NormalPointer
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glInterleavedArrays
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glInterleavedArrays
argument_list|(
argument|GLenum format
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|InterleavedArrays
argument_list|(
name|format
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glIndexPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glIndexPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|IndexPointer
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glEnableClientState
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEnableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|EnableClientState
argument_list|(
name|array
argument_list|)
block|; }
DECL|function|glEdgeFlagPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glEdgeFlagPointer
argument_list|(
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|EdgeFlagPointer
argument_list|(
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glDisableClientState
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glDisableClientState
argument_list|(
argument|GLenum array
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|DisableClientState
argument_list|(
name|array
argument_list|)
block|; }
DECL|function|glColorPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|ColorPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glArrayElement
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glArrayElement
argument_list|(
argument|GLint i
argument_list|)
block|{
name|d_1_1_Deprecated
operator|->
name|ArrayElement
argument_list|(
name|i
argument_list|)
block|; }
comment|// OpenGL 1.2 deprecated functions
DECL|function|glResetMinmax
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glResetMinmax
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ResetMinmax
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glResetHistogram
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glResetHistogram
argument_list|(
argument|GLenum target
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ResetHistogram
argument_list|(
name|target
argument_list|)
block|; }
DECL|function|glMinmax
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|Minmax
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|sink
argument_list|)
block|; }
DECL|function|glHistogram
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLboolean sink
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|Histogram
argument_list|(
name|target
argument_list|,
name|width
argument_list|,
name|internalformat
argument_list|,
name|sink
argument_list|)
block|; }
DECL|function|glGetMinmaxParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMinmaxParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetMinmaxParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMinmaxParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMinmaxParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetMinmaxParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetMinmax
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetMinmax
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetMinmax
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glGetHistogramParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetHistogramParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetHistogramParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetHistogramParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetHistogramParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetHistogramParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetHistogram
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetHistogram
argument_list|(
argument|GLenum target
argument_list|,
argument|GLboolean reset
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *values
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetHistogram
argument_list|(
name|target
argument_list|,
name|reset
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|values
argument_list|)
block|; }
DECL|function|glSeparableFilter2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSeparableFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *row
argument_list|,
argument|const GLvoid *column
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|SeparableFilter2D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
block|; }
DECL|function|glGetSeparableFilter
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetSeparableFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *row
argument_list|,
argument|GLvoid *column
argument_list|,
argument|GLvoid *span
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetSeparableFilter
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|span
argument_list|)
block|; }
DECL|function|glGetConvolutionParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetConvolutionParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetConvolutionParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetConvolutionParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetConvolutionFilter
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetConvolutionFilter
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *image
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetConvolutionFilter
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glCopyConvolutionFilter2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyConvolutionFilter2D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
block|; }
DECL|function|glCopyConvolutionFilter1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyConvolutionFilter1D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glConvolutionParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glConvolutionParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameteri
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glConvolutionParameteri
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameteri
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glConvolutionParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionParameterf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glConvolutionParameterf
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionParameterf
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glConvolutionFilter2D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glConvolutionFilter2D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLsizei height
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionFilter2D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|height
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glConvolutionFilter1D
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glConvolutionFilter1D
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *image
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ConvolutionFilter1D
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|image
argument_list|)
block|; }
DECL|function|glCopyColorSubTable
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyColorSubTable
argument_list|(
name|target
argument_list|,
name|start
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glColorSubTable
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColorSubTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLsizei start
argument_list|,
argument|GLsizei count
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *data
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorSubTable
argument_list|(
name|target
argument_list|,
name|start
argument_list|,
name|count
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|data
argument_list|)
block|; }
DECL|function|glGetColorTableParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetColorTableParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetColorTableParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetColorTableParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glGetColorTable
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glGetColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|GLvoid *table
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|GetColorTable
argument_list|(
name|target
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|table
argument_list|)
block|; }
DECL|function|glCopyColorTable
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glCopyColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLsizei width
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|CopyColorTable
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|width
argument_list|)
block|; }
DECL|function|glColorTableParameteriv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColorTableParameteriv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLint *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorTableParameteriv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glColorTableParameterfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColorTableParameterfv
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum pname
argument_list|,
argument|const GLfloat *params
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorTableParameterfv
argument_list|(
name|target
argument_list|,
name|pname
argument_list|,
name|params
argument_list|)
block|; }
DECL|function|glColorTable
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glColorTable
argument_list|(
argument|GLenum target
argument_list|,
argument|GLenum internalformat
argument_list|,
argument|GLsizei width
argument_list|,
argument|GLenum format
argument_list|,
argument|GLenum type
argument_list|,
argument|const GLvoid *table
argument_list|)
block|{
name|d_1_2_Deprecated
operator|->
name|ColorTable
argument_list|(
name|target
argument_list|,
name|internalformat
argument_list|,
name|width
argument_list|,
name|format
argument_list|,
name|type
argument_list|,
name|table
argument_list|)
block|; }
comment|// OpenGL 1.3 deprecated functions
DECL|function|glMultTransposeMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultTransposeMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultTransposeMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMultTransposeMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultTransposeMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultTransposeMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadTransposeMatrixd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLoadTransposeMatrixd
argument_list|(
argument|const GLdouble *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|LoadTransposeMatrixd
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glLoadTransposeMatrixf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glLoadTransposeMatrixf
argument_list|(
argument|const GLfloat *m
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|LoadTransposeMatrixf
argument_list|(
name|m
argument_list|)
block|; }
DECL|function|glMultiTexCoord4sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|,
argument|GLshort q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4s
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|,
argument|GLint q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4i
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|,
argument|GLfloat q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4f
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord4dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord4d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord4d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|,
argument|GLdouble q
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord4d
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|,
name|q
argument_list|)
block|; }
DECL|function|glMultiTexCoord3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|,
argument|GLshort r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3s
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|,
argument|GLint r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3i
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|,
argument|GLfloat r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3f
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord3d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|,
argument|GLdouble r
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord3d
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|,
name|r
argument_list|)
block|; }
DECL|function|glMultiTexCoord2sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|,
argument|GLshort t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2s
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|,
argument|GLint t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2i
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|,
argument|GLfloat t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2f
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord2dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord2d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|,
argument|GLdouble t
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord2d
argument_list|(
name|target
argument_list|,
name|s
argument_list|,
name|t
argument_list|)
block|; }
DECL|function|glMultiTexCoord1sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1sv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1sv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1s
argument_list|(
argument|GLenum target
argument_list|,
argument|GLshort s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1s
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1iv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1iv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1i
argument_list|(
argument|GLenum target
argument_list|,
argument|GLint s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1i
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1fv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1fv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1f
argument_list|(
argument|GLenum target
argument_list|,
argument|GLfloat s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1f
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glMultiTexCoord1dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1dv
argument_list|(
argument|GLenum target
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1dv
argument_list|(
name|target
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glMultiTexCoord1d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glMultiTexCoord1d
argument_list|(
argument|GLenum target
argument_list|,
argument|GLdouble s
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|MultiTexCoord1d
argument_list|(
name|target
argument_list|,
name|s
argument_list|)
block|; }
DECL|function|glClientActiveTexture
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glClientActiveTexture
argument_list|(
argument|GLenum texture
argument_list|)
block|{
name|d_1_3_Deprecated
operator|->
name|ClientActiveTexture
argument_list|(
name|texture
argument_list|)
block|; }
comment|// OpenGL 1.4 deprecated functions
DECL|function|glWindowPos3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3s
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|,
argument|GLint z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3i
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3f
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos3d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos3d
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glWindowPos2sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2s
argument_list|(
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2s
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2i
argument_list|(
argument|GLint x
argument_list|,
argument|GLint y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2i
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2f
argument_list|(
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2f
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glWindowPos2dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glWindowPos2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glWindowPos2d
argument_list|(
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|WindowPos2d
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glSecondaryColorPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColorPointer
argument_list|(
argument|GLint size
argument_list|,
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColorPointer
argument_list|(
name|size
argument_list|,
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glSecondaryColor3usv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3usv
argument_list|(
argument|const GLushort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3usv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3us
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3us
argument_list|(
argument|GLushort red
argument_list|,
argument|GLushort green
argument_list|,
argument|GLushort blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3us
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3uiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3uiv
argument_list|(
argument|const GLuint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3uiv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3ui
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3ui
argument_list|(
argument|GLuint red
argument_list|,
argument|GLuint green
argument_list|,
argument|GLuint blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3ui
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3ubv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3ubv
argument_list|(
argument|const GLubyte *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3ubv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3ub
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3ub
argument_list|(
argument|GLubyte red
argument_list|,
argument|GLubyte green
argument_list|,
argument|GLubyte blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3ub
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3sv
argument_list|(
argument|const GLshort *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3sv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3s
argument_list|(
argument|GLshort red
argument_list|,
argument|GLshort green
argument_list|,
argument|GLshort blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3s
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3iv
argument_list|(
argument|const GLint *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3iv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3i
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3i
argument_list|(
argument|GLint red
argument_list|,
argument|GLint green
argument_list|,
argument|GLint blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3i
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3fv
argument_list|(
argument|const GLfloat *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3fv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3f
argument_list|(
argument|GLfloat red
argument_list|,
argument|GLfloat green
argument_list|,
argument|GLfloat blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3f
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3dv
argument_list|(
argument|const GLdouble *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3dv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3d
argument_list|(
argument|GLdouble red
argument_list|,
argument|GLdouble green
argument_list|,
argument|GLdouble blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3d
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glSecondaryColor3bv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3bv
argument_list|(
argument|const GLbyte *v
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3bv
argument_list|(
name|v
argument_list|)
block|; }
DECL|function|glSecondaryColor3b
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glSecondaryColor3b
argument_list|(
argument|GLbyte red
argument_list|,
argument|GLbyte green
argument_list|,
argument|GLbyte blue
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|SecondaryColor3b
argument_list|(
name|red
argument_list|,
name|green
argument_list|,
name|blue
argument_list|)
block|; }
DECL|function|glFogCoordPointer
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogCoordPointer
argument_list|(
argument|GLenum type
argument_list|,
argument|GLsizei stride
argument_list|,
argument|const GLvoid *pointer
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordPointer
argument_list|(
name|type
argument_list|,
name|stride
argument_list|,
name|pointer
argument_list|)
block|; }
DECL|function|glFogCoorddv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogCoorddv
argument_list|(
argument|const GLdouble *coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoorddv
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordd
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogCoordd
argument_list|(
argument|GLdouble coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordd
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordfv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogCoordfv
argument_list|(
argument|const GLfloat *coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordfv
argument_list|(
name|coord
argument_list|)
block|; }
DECL|function|glFogCoordf
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glFogCoordf
argument_list|(
argument|GLfloat coord
argument_list|)
block|{
name|d_1_4_Deprecated
operator|->
name|FogCoordf
argument_list|(
name|coord
argument_list|)
block|; }
comment|// OpenGL 1.5 deprecated functions
comment|// OpenGL 2.0 deprecated functions
DECL|function|glVertexAttrib4usv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4usv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4usv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4uiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4uiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4uiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4ubv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4ubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4ubv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|,
argument|GLshort w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4s
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4iv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4iv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4iv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|,
argument|GLfloat w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4f
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|,
argument|GLdouble w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4bv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4bv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4bv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nusv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4Nusv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLushort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nusv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nuiv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4Nuiv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLuint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nuiv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nubv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4Nubv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLubyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nubv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nub
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4Nub
argument_list|(
argument|GLuint index
argument_list|,
argument|GLubyte x
argument_list|,
argument|GLubyte y
argument_list|,
argument|GLubyte z
argument_list|,
argument|GLubyte w
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nub
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|,
name|w
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nsv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4Nsv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nsv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Niv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4Niv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLint *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Niv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib4Nbv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib4Nbv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLbyte *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib4Nbv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib3sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib3s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|,
argument|GLshort z
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3s
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib3fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib3f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|,
argument|GLfloat z
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3f
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib3dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib3dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib3d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib3d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|,
argument|GLdouble z
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib3d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|,
name|z
argument_list|)
block|; }
DECL|function|glVertexAttrib2sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib2sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib2s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|,
argument|GLshort y
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2s
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib2fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib2f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|,
argument|GLfloat y
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2f
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib2dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib2dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib2d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib2d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|,
argument|GLdouble y
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib2d
argument_list|(
name|index
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
block|; }
DECL|function|glVertexAttrib1sv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib1sv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLshort *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1sv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1s
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib1s
argument_list|(
argument|GLuint index
argument_list|,
argument|GLshort x
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1s
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1fv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib1fv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLfloat *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1fv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1f
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib1f
argument_list|(
argument|GLuint index
argument_list|,
argument|GLfloat x
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1f
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
DECL|function|glVertexAttrib1dv
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib1dv
argument_list|(
argument|GLuint index
argument_list|,
argument|const GLdouble *v
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1dv
argument_list|(
name|index
argument_list|,
name|v
argument_list|)
block|; }
DECL|function|glVertexAttrib1d
specifier|inline
name|void
name|QOpenGLFunctions_2_1
operator|::
name|glVertexAttrib1d
argument_list|(
argument|GLuint index
argument_list|,
argument|GLdouble x
argument_list|)
block|{
name|d_2_0_Core
operator|->
name|VertexAttrib1d
argument_list|(
name|index
argument_list|,
name|x
argument_list|)
block|; }
comment|// OpenGL 2.1 deprecated functions
name|QT_END_NAMESPACE
end_expr_stmt
begin_endif
endif|#
directive|endif
end_endif
begin_comment
comment|// QT_NO_OPENGL&& !QT_OPENGL_ES_2
end_comment
begin_endif
endif|#
directive|endif
end_endif
end_unit
